

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Dec 19 22:21:06 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	stringtext4,global,class=STRCODE,delta=2
     8                           	psect	stringtext5,global,class=STRCODE,delta=2
     9                           	psect	stringtext6,global,class=STRCODE,delta=2
    10                           	psect	stringtext7,global,class=STRCODE,delta=2
    11                           	psect	stringtext8,global,class=STRCODE,delta=2
    12                           	psect	stringtext9,global,class=STRCODE,delta=2
    13                           	psect	cinit,global,class=CODE,merge=1,delta=2
    14                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	clrtext,global,class=CODE,delta=2
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.05
    47                           ; Generated 20/12/2018 GMT
    48                           ; 
    49                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1719 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000F                     	;# 
    96  0010                     	;# 
    97  0011                     	;# 
    98  0012                     	;# 
    99  0013                     	;# 
   100  0015                     	;# 
   101  0016                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001C                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  008E                     	;# 
   112  008F                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0092                     	;# 
   116  0093                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0110                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  011A                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011C                     	;# 
   147  018C                     	;# 
   148  018D                     	;# 
   149  018E                     	;# 
   150  018F                     	;# 
   151  0190                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0194                     	;# 
   158  0195                     	;# 
   159  0196                     	;# 
   160  0197                     	;# 
   161  0199                     	;# 
   162  0199                     	;# 
   163  0199                     	;# 
   164  019A                     	;# 
   165  019A                     	;# 
   166  019A                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019B                     	;# 
   171  019B                     	;# 
   172  019C                     	;# 
   173  019C                     	;# 
   174  019C                     	;# 
   175  019D                     	;# 
   176  019D                     	;# 
   177  019D                     	;# 
   178  019E                     	;# 
   179  019E                     	;# 
   180  019E                     	;# 
   181  019F                     	;# 
   182  019F                     	;# 
   183  019F                     	;# 
   184  019F                     	;# 
   185  019F                     	;# 
   186  020C                     	;# 
   187  020D                     	;# 
   188  020E                     	;# 
   189  020F                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0213                     	;# 
   197  0214                     	;# 
   198  0214                     	;# 
   199  0215                     	;# 
   200  0215                     	;# 
   201  0215                     	;# 
   202  0215                     	;# 
   203  0216                     	;# 
   204  0216                     	;# 
   205  0217                     	;# 
   206  0217                     	;# 
   207  028C                     	;# 
   208  028D                     	;# 
   209  028E                     	;# 
   210  028F                     	;# 
   211  0290                     	;# 
   212  0291                     	;# 
   213  0291                     	;# 
   214  0292                     	;# 
   215  0293                     	;# 
   216  0293                     	;# 
   217  0298                     	;# 
   218  0298                     	;# 
   219  0299                     	;# 
   220  029A                     	;# 
   221  029A                     	;# 
   222  029E                     	;# 
   223  030C                     	;# 
   224  030D                     	;# 
   225  030E                     	;# 
   226  030F                     	;# 
   227  0310                     	;# 
   228  038C                     	;# 
   229  038D                     	;# 
   230  038E                     	;# 
   231  038F                     	;# 
   232  0390                     	;# 
   233  0391                     	;# 
   234  0392                     	;# 
   235  0393                     	;# 
   236  0394                     	;# 
   237  0395                     	;# 
   238  0396                     	;# 
   239  0397                     	;# 
   240  0398                     	;# 
   241  0399                     	;# 
   242  039D                     	;# 
   243  039E                     	;# 
   244  039F                     	;# 
   245  0415                     	;# 
   246  0416                     	;# 
   247  0417                     	;# 
   248  041C                     	;# 
   249  041D                     	;# 
   250  041E                     	;# 
   251  0498                     	;# 
   252  0498                     	;# 
   253  0499                     	;# 
   254  049A                     	;# 
   255  049B                     	;# 
   256  049B                     	;# 
   257  049C                     	;# 
   258  049D                     	;# 
   259  049E                     	;# 
   260  049F                     	;# 
   261  0511                     	;# 
   262  0515                     	;# 
   263  0617                     	;# 
   264  0618                     	;# 
   265  0619                     	;# 
   266  0619                     	;# 
   267  061A                     	;# 
   268  061B                     	;# 
   269  061C                     	;# 
   270  061C                     	;# 
   271  0691                     	;# 
   272  0692                     	;# 
   273  0693                     	;# 
   274  0694                     	;# 
   275  0695                     	;# 
   276  0696                     	;# 
   277  0697                     	;# 
   278  0698                     	;# 
   279  0699                     	;# 
   280  069A                     	;# 
   281  069B                     	;# 
   282  069C                     	;# 
   283  069D                     	;# 
   284  069E                     	;# 
   285  069F                     	;# 
   286  0E0F                     	;# 
   287  0E10                     	;# 
   288  0E11                     	;# 
   289  0E12                     	;# 
   290  0E13                     	;# 
   291  0E14                     	;# 
   292  0E15                     	;# 
   293  0E17                     	;# 
   294  0E20                     	;# 
   295  0E21                     	;# 
   296  0E22                     	;# 
   297  0E24                     	;# 
   298  0E25                     	;# 
   299  0E28                     	;# 
   300  0E29                     	;# 
   301  0E2A                     	;# 
   302  0E2B                     	;# 
   303  0E90                     	;# 
   304  0E91                     	;# 
   305  0E92                     	;# 
   306  0E93                     	;# 
   307  0E94                     	;# 
   308  0E95                     	;# 
   309  0E96                     	;# 
   310  0E97                     	;# 
   311  0E98                     	;# 
   312  0E99                     	;# 
   313  0E9A                     	;# 
   314  0E9B                     	;# 
   315  0E9C                     	;# 
   316  0E9D                     	;# 
   317  0E9E                     	;# 
   318  0E9F                     	;# 
   319  0EA0                     	;# 
   320  0EA1                     	;# 
   321  0EA2                     	;# 
   322  0EA3                     	;# 
   323  0EA4                     	;# 
   324  0EA5                     	;# 
   325  0EA6                     	;# 
   326  0EA7                     	;# 
   327  0EA8                     	;# 
   328  0EA9                     	;# 
   329  0EAA                     	;# 
   330  0EAB                     	;# 
   331  0EAC                     	;# 
   332  0EAD                     	;# 
   333  0EAE                     	;# 
   334  0EAF                     	;# 
   335  0EB0                     	;# 
   336  0EB1                     	;# 
   337  0EB2                     	;# 
   338  0F0F                     	;# 
   339  0F10                     	;# 
   340  0F11                     	;# 
   341  0F12                     	;# 
   342  0F13                     	;# 
   343  0F14                     	;# 
   344  0F15                     	;# 
   345  0F16                     	;# 
   346  0F17                     	;# 
   347  0F18                     	;# 
   348  0F19                     	;# 
   349  0F1A                     	;# 
   350  0F1B                     	;# 
   351  0F1C                     	;# 
   352  0F1D                     	;# 
   353  0F1E                     	;# 
   354  0F1F                     	;# 
   355  0F20                     	;# 
   356  0F21                     	;# 
   357  0F22                     	;# 
   358  0F23                     	;# 
   359  0F24                     	;# 
   360  0F25                     	;# 
   361  0F26                     	;# 
   362  0F27                     	;# 
   363  0F28                     	;# 
   364  0F29                     	;# 
   365  0F2A                     	;# 
   366  0F2B                     	;# 
   367  0F2C                     	;# 
   368  0F2D                     	;# 
   369  0F2E                     	;# 
   370  0F2F                     	;# 
   371  0F30                     	;# 
   372  0F31                     	;# 
   373  0F32                     	;# 
   374  0F33                     	;# 
   375  0F34                     	;# 
   376  0F35                     	;# 
   377  0F36                     	;# 
   378  0F37                     	;# 
   379  0FE4                     	;# 
   380  0FE5                     	;# 
   381  0FE6                     	;# 
   382  0FE7                     	;# 
   383  0FE8                     	;# 
   384  0FE9                     	;# 
   385  0FEA                     	;# 
   386  0FEB                     	;# 
   387  0FED                     	;# 
   388  0FEE                     	;# 
   389  0FEF                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000F                     	;# 
   406  0010                     	;# 
   407  0011                     	;# 
   408  0012                     	;# 
   409  0013                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  010C                     	;# 
   440  010D                     	;# 
   441  010E                     	;# 
   442  010F                     	;# 
   443  0110                     	;# 
   444  0111                     	;# 
   445  0112                     	;# 
   446  0113                     	;# 
   447  0114                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011B                     	;# 
   456  011C                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  018E                     	;# 
   460  018F                     	;# 
   461  0190                     	;# 
   462  0191                     	;# 
   463  0191                     	;# 
   464  0192                     	;# 
   465  0193                     	;# 
   466  0193                     	;# 
   467  0194                     	;# 
   468  0195                     	;# 
   469  0196                     	;# 
   470  0197                     	;# 
   471  0199                     	;# 
   472  0199                     	;# 
   473  0199                     	;# 
   474  019A                     	;# 
   475  019A                     	;# 
   476  019A                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019C                     	;# 
   483  019C                     	;# 
   484  019C                     	;# 
   485  019D                     	;# 
   486  019D                     	;# 
   487  019D                     	;# 
   488  019E                     	;# 
   489  019E                     	;# 
   490  019E                     	;# 
   491  019F                     	;# 
   492  019F                     	;# 
   493  019F                     	;# 
   494  019F                     	;# 
   495  019F                     	;# 
   496  020C                     	;# 
   497  020D                     	;# 
   498  020E                     	;# 
   499  020F                     	;# 
   500  0210                     	;# 
   501  0211                     	;# 
   502  0211                     	;# 
   503  0212                     	;# 
   504  0212                     	;# 
   505  0213                     	;# 
   506  0213                     	;# 
   507  0214                     	;# 
   508  0214                     	;# 
   509  0215                     	;# 
   510  0215                     	;# 
   511  0215                     	;# 
   512  0215                     	;# 
   513  0216                     	;# 
   514  0216                     	;# 
   515  0217                     	;# 
   516  0217                     	;# 
   517  028C                     	;# 
   518  028D                     	;# 
   519  028E                     	;# 
   520  028F                     	;# 
   521  0290                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0293                     	;# 
   527  0298                     	;# 
   528  0298                     	;# 
   529  0299                     	;# 
   530  029A                     	;# 
   531  029A                     	;# 
   532  029E                     	;# 
   533  030C                     	;# 
   534  030D                     	;# 
   535  030E                     	;# 
   536  030F                     	;# 
   537  0310                     	;# 
   538  038C                     	;# 
   539  038D                     	;# 
   540  038E                     	;# 
   541  038F                     	;# 
   542  0390                     	;# 
   543  0391                     	;# 
   544  0392                     	;# 
   545  0393                     	;# 
   546  0394                     	;# 
   547  0395                     	;# 
   548  0396                     	;# 
   549  0397                     	;# 
   550  0398                     	;# 
   551  0399                     	;# 
   552  039D                     	;# 
   553  039E                     	;# 
   554  039F                     	;# 
   555  0415                     	;# 
   556  0416                     	;# 
   557  0417                     	;# 
   558  041C                     	;# 
   559  041D                     	;# 
   560  041E                     	;# 
   561  0498                     	;# 
   562  0498                     	;# 
   563  0499                     	;# 
   564  049A                     	;# 
   565  049B                     	;# 
   566  049B                     	;# 
   567  049C                     	;# 
   568  049D                     	;# 
   569  049E                     	;# 
   570  049F                     	;# 
   571  0511                     	;# 
   572  0515                     	;# 
   573  0617                     	;# 
   574  0618                     	;# 
   575  0619                     	;# 
   576  0619                     	;# 
   577  061A                     	;# 
   578  061B                     	;# 
   579  061C                     	;# 
   580  061C                     	;# 
   581  0691                     	;# 
   582  0692                     	;# 
   583  0693                     	;# 
   584  0694                     	;# 
   585  0695                     	;# 
   586  0696                     	;# 
   587  0697                     	;# 
   588  0698                     	;# 
   589  0699                     	;# 
   590  069A                     	;# 
   591  069B                     	;# 
   592  069C                     	;# 
   593  069D                     	;# 
   594  069E                     	;# 
   595  069F                     	;# 
   596  0E0F                     	;# 
   597  0E10                     	;# 
   598  0E11                     	;# 
   599  0E12                     	;# 
   600  0E13                     	;# 
   601  0E14                     	;# 
   602  0E15                     	;# 
   603  0E17                     	;# 
   604  0E20                     	;# 
   605  0E21                     	;# 
   606  0E22                     	;# 
   607  0E24                     	;# 
   608  0E25                     	;# 
   609  0E28                     	;# 
   610  0E29                     	;# 
   611  0E2A                     	;# 
   612  0E2B                     	;# 
   613  0E90                     	;# 
   614  0E91                     	;# 
   615  0E92                     	;# 
   616  0E93                     	;# 
   617  0E94                     	;# 
   618  0E95                     	;# 
   619  0E96                     	;# 
   620  0E97                     	;# 
   621  0E98                     	;# 
   622  0E99                     	;# 
   623  0E9A                     	;# 
   624  0E9B                     	;# 
   625  0E9C                     	;# 
   626  0E9D                     	;# 
   627  0E9E                     	;# 
   628  0E9F                     	;# 
   629  0EA0                     	;# 
   630  0EA1                     	;# 
   631  0EA2                     	;# 
   632  0EA3                     	;# 
   633  0EA4                     	;# 
   634  0EA5                     	;# 
   635  0EA6                     	;# 
   636  0EA7                     	;# 
   637  0EA8                     	;# 
   638  0EA9                     	;# 
   639  0EAA                     	;# 
   640  0EAB                     	;# 
   641  0EAC                     	;# 
   642  0EAD                     	;# 
   643  0EAE                     	;# 
   644  0EAF                     	;# 
   645  0EB0                     	;# 
   646  0EB1                     	;# 
   647  0EB2                     	;# 
   648  0F0F                     	;# 
   649  0F10                     	;# 
   650  0F11                     	;# 
   651  0F12                     	;# 
   652  0F13                     	;# 
   653  0F14                     	;# 
   654  0F15                     	;# 
   655  0F16                     	;# 
   656  0F17                     	;# 
   657  0F18                     	;# 
   658  0F19                     	;# 
   659  0F1A                     	;# 
   660  0F1B                     	;# 
   661  0F1C                     	;# 
   662  0F1D                     	;# 
   663  0F1E                     	;# 
   664  0F1F                     	;# 
   665  0F20                     	;# 
   666  0F21                     	;# 
   667  0F22                     	;# 
   668  0F23                     	;# 
   669  0F24                     	;# 
   670  0F25                     	;# 
   671  0F26                     	;# 
   672  0F27                     	;# 
   673  0F28                     	;# 
   674  0F29                     	;# 
   675  0F2A                     	;# 
   676  0F2B                     	;# 
   677  0F2C                     	;# 
   678  0F2D                     	;# 
   679  0F2E                     	;# 
   680  0F2F                     	;# 
   681  0F30                     	;# 
   682  0F31                     	;# 
   683  0F32                     	;# 
   684  0F33                     	;# 
   685  0F34                     	;# 
   686  0F35                     	;# 
   687  0F36                     	;# 
   688  0F37                     	;# 
   689  0FE4                     	;# 
   690  0FE5                     	;# 
   691  0FE6                     	;# 
   692  0FE7                     	;# 
   693  0FE8                     	;# 
   694  0FE9                     	;# 
   695  0FEA                     	;# 
   696  0FEB                     	;# 
   697  0FED                     	;# 
   698  0FEE                     	;# 
   699  0FEF                     	;# 
   700  0000                     	;# 
   701  0001                     	;# 
   702  0002                     	;# 
   703  0003                     	;# 
   704  0004                     	;# 
   705  0005                     	;# 
   706  0006                     	;# 
   707  0007                     	;# 
   708  0008                     	;# 
   709  0009                     	;# 
   710  000A                     	;# 
   711  000B                     	;# 
   712  000C                     	;# 
   713  000D                     	;# 
   714  000E                     	;# 
   715  000F                     	;# 
   716  0010                     	;# 
   717  0011                     	;# 
   718  0012                     	;# 
   719  0013                     	;# 
   720  0015                     	;# 
   721  0016                     	;# 
   722  0016                     	;# 
   723  0017                     	;# 
   724  0018                     	;# 
   725  0019                     	;# 
   726  001A                     	;# 
   727  001B                     	;# 
   728  001C                     	;# 
   729  008C                     	;# 
   730  008D                     	;# 
   731  008E                     	;# 
   732  008F                     	;# 
   733  0090                     	;# 
   734  0091                     	;# 
   735  0092                     	;# 
   736  0093                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0098                     	;# 
   741  0099                     	;# 
   742  009A                     	;# 
   743  009B                     	;# 
   744  009B                     	;# 
   745  009C                     	;# 
   746  009D                     	;# 
   747  009E                     	;# 
   748  009F                     	;# 
   749  010C                     	;# 
   750  010D                     	;# 
   751  010E                     	;# 
   752  010F                     	;# 
   753  0110                     	;# 
   754  0111                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0115                     	;# 
   759  0116                     	;# 
   760  0117                     	;# 
   761  0118                     	;# 
   762  0119                     	;# 
   763  011A                     	;# 
   764  011B                     	;# 
   765  011B                     	;# 
   766  011C                     	;# 
   767  018C                     	;# 
   768  018D                     	;# 
   769  018E                     	;# 
   770  018F                     	;# 
   771  0190                     	;# 
   772  0191                     	;# 
   773  0191                     	;# 
   774  0192                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0194                     	;# 
   778  0195                     	;# 
   779  0196                     	;# 
   780  0197                     	;# 
   781  0199                     	;# 
   782  0199                     	;# 
   783  0199                     	;# 
   784  019A                     	;# 
   785  019A                     	;# 
   786  019A                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019B                     	;# 
   791  019B                     	;# 
   792  019C                     	;# 
   793  019C                     	;# 
   794  019C                     	;# 
   795  019D                     	;# 
   796  019D                     	;# 
   797  019D                     	;# 
   798  019E                     	;# 
   799  019E                     	;# 
   800  019E                     	;# 
   801  019F                     	;# 
   802  019F                     	;# 
   803  019F                     	;# 
   804  019F                     	;# 
   805  019F                     	;# 
   806  020C                     	;# 
   807  020D                     	;# 
   808  020E                     	;# 
   809  020F                     	;# 
   810  0210                     	;# 
   811  0211                     	;# 
   812  0211                     	;# 
   813  0212                     	;# 
   814  0212                     	;# 
   815  0213                     	;# 
   816  0213                     	;# 
   817  0214                     	;# 
   818  0214                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0215                     	;# 
   823  0216                     	;# 
   824  0216                     	;# 
   825  0217                     	;# 
   826  0217                     	;# 
   827  028C                     	;# 
   828  028D                     	;# 
   829  028E                     	;# 
   830  028F                     	;# 
   831  0290                     	;# 
   832  0291                     	;# 
   833  0291                     	;# 
   834  0292                     	;# 
   835  0293                     	;# 
   836  0293                     	;# 
   837  0298                     	;# 
   838  0298                     	;# 
   839  0299                     	;# 
   840  029A                     	;# 
   841  029A                     	;# 
   842  029E                     	;# 
   843  030C                     	;# 
   844  030D                     	;# 
   845  030E                     	;# 
   846  030F                     	;# 
   847  0310                     	;# 
   848  038C                     	;# 
   849  038D                     	;# 
   850  038E                     	;# 
   851  038F                     	;# 
   852  0390                     	;# 
   853  0391                     	;# 
   854  0392                     	;# 
   855  0393                     	;# 
   856  0394                     	;# 
   857  0395                     	;# 
   858  0396                     	;# 
   859  0397                     	;# 
   860  0398                     	;# 
   861  0399                     	;# 
   862  039D                     	;# 
   863  039E                     	;# 
   864  039F                     	;# 
   865  0415                     	;# 
   866  0416                     	;# 
   867  0417                     	;# 
   868  041C                     	;# 
   869  041D                     	;# 
   870  041E                     	;# 
   871  0498                     	;# 
   872  0498                     	;# 
   873  0499                     	;# 
   874  049A                     	;# 
   875  049B                     	;# 
   876  049B                     	;# 
   877  049C                     	;# 
   878  049D                     	;# 
   879  049E                     	;# 
   880  049F                     	;# 
   881  0511                     	;# 
   882  0515                     	;# 
   883  0617                     	;# 
   884  0618                     	;# 
   885  0619                     	;# 
   886  0619                     	;# 
   887  061A                     	;# 
   888  061B                     	;# 
   889  061C                     	;# 
   890  061C                     	;# 
   891  0691                     	;# 
   892  0692                     	;# 
   893  0693                     	;# 
   894  0694                     	;# 
   895  0695                     	;# 
   896  0696                     	;# 
   897  0697                     	;# 
   898  0698                     	;# 
   899  0699                     	;# 
   900  069A                     	;# 
   901  069B                     	;# 
   902  069C                     	;# 
   903  069D                     	;# 
   904  069E                     	;# 
   905  069F                     	;# 
   906  0E0F                     	;# 
   907  0E10                     	;# 
   908  0E11                     	;# 
   909  0E12                     	;# 
   910  0E13                     	;# 
   911  0E14                     	;# 
   912  0E15                     	;# 
   913  0E17                     	;# 
   914  0E20                     	;# 
   915  0E21                     	;# 
   916  0E22                     	;# 
   917  0E24                     	;# 
   918  0E25                     	;# 
   919  0E28                     	;# 
   920  0E29                     	;# 
   921  0E2A                     	;# 
   922  0E2B                     	;# 
   923  0E90                     	;# 
   924  0E91                     	;# 
   925  0E92                     	;# 
   926  0E93                     	;# 
   927  0E94                     	;# 
   928  0E95                     	;# 
   929  0E96                     	;# 
   930  0E97                     	;# 
   931  0E98                     	;# 
   932  0E99                     	;# 
   933  0E9A                     	;# 
   934  0E9B                     	;# 
   935  0E9C                     	;# 
   936  0E9D                     	;# 
   937  0E9E                     	;# 
   938  0E9F                     	;# 
   939  0EA0                     	;# 
   940  0EA1                     	;# 
   941  0EA2                     	;# 
   942  0EA3                     	;# 
   943  0EA4                     	;# 
   944  0EA5                     	;# 
   945  0EA6                     	;# 
   946  0EA7                     	;# 
   947  0EA8                     	;# 
   948  0EA9                     	;# 
   949  0EAA                     	;# 
   950  0EAB                     	;# 
   951  0EAC                     	;# 
   952  0EAD                     	;# 
   953  0EAE                     	;# 
   954  0EAF                     	;# 
   955  0EB0                     	;# 
   956  0EB1                     	;# 
   957  0EB2                     	;# 
   958  0F0F                     	;# 
   959  0F10                     	;# 
   960  0F11                     	;# 
   961  0F12                     	;# 
   962  0F13                     	;# 
   963  0F14                     	;# 
   964  0F15                     	;# 
   965  0F16                     	;# 
   966  0F17                     	;# 
   967  0F18                     	;# 
   968  0F19                     	;# 
   969  0F1A                     	;# 
   970  0F1B                     	;# 
   971  0F1C                     	;# 
   972  0F1D                     	;# 
   973  0F1E                     	;# 
   974  0F1F                     	;# 
   975  0F20                     	;# 
   976  0F21                     	;# 
   977  0F22                     	;# 
   978  0F23                     	;# 
   979  0F24                     	;# 
   980  0F25                     	;# 
   981  0F26                     	;# 
   982  0F27                     	;# 
   983  0F28                     	;# 
   984  0F29                     	;# 
   985  0F2A                     	;# 
   986  0F2B                     	;# 
   987  0F2C                     	;# 
   988  0F2D                     	;# 
   989  0F2E                     	;# 
   990  0F2F                     	;# 
   991  0F30                     	;# 
   992  0F31                     	;# 
   993  0F32                     	;# 
   994  0F33                     	;# 
   995  0F34                     	;# 
   996  0F35                     	;# 
   997  0F36                     	;# 
   998  0F37                     	;# 
   999  0FE4                     	;# 
  1000  0FE5                     	;# 
  1001  0FE6                     	;# 
  1002  0FE7                     	;# 
  1003  0FE8                     	;# 
  1004  0FE9                     	;# 
  1005  0FEA                     	;# 
  1006  0FEB                     	;# 
  1007  0FED                     	;# 
  1008  0FEE                     	;# 
  1009  0FEF                     	;# 
  1010  0000                     	;# 
  1011  0001                     	;# 
  1012  0002                     	;# 
  1013  0003                     	;# 
  1014  0004                     	;# 
  1015  0005                     	;# 
  1016  0006                     	;# 
  1017  0007                     	;# 
  1018  0008                     	;# 
  1019  0009                     	;# 
  1020  000A                     	;# 
  1021  000B                     	;# 
  1022  000C                     	;# 
  1023  000D                     	;# 
  1024  000E                     	;# 
  1025  000F                     	;# 
  1026  0010                     	;# 
  1027  0011                     	;# 
  1028  0012                     	;# 
  1029  0013                     	;# 
  1030  0015                     	;# 
  1031  0016                     	;# 
  1032  0016                     	;# 
  1033  0017                     	;# 
  1034  0018                     	;# 
  1035  0019                     	;# 
  1036  001A                     	;# 
  1037  001B                     	;# 
  1038  001C                     	;# 
  1039  008C                     	;# 
  1040  008D                     	;# 
  1041  008E                     	;# 
  1042  008F                     	;# 
  1043  0090                     	;# 
  1044  0091                     	;# 
  1045  0092                     	;# 
  1046  0093                     	;# 
  1047  0095                     	;# 
  1048  0096                     	;# 
  1049  0097                     	;# 
  1050  0098                     	;# 
  1051  0099                     	;# 
  1052  009A                     	;# 
  1053  009B                     	;# 
  1054  009B                     	;# 
  1055  009C                     	;# 
  1056  009D                     	;# 
  1057  009E                     	;# 
  1058  009F                     	;# 
  1059  010C                     	;# 
  1060  010D                     	;# 
  1061  010E                     	;# 
  1062  010F                     	;# 
  1063  0110                     	;# 
  1064  0111                     	;# 
  1065  0112                     	;# 
  1066  0113                     	;# 
  1067  0114                     	;# 
  1068  0115                     	;# 
  1069  0116                     	;# 
  1070  0117                     	;# 
  1071  0118                     	;# 
  1072  0119                     	;# 
  1073  011A                     	;# 
  1074  011B                     	;# 
  1075  011B                     	;# 
  1076  011C                     	;# 
  1077  018C                     	;# 
  1078  018D                     	;# 
  1079  018E                     	;# 
  1080  018F                     	;# 
  1081  0190                     	;# 
  1082  0191                     	;# 
  1083  0191                     	;# 
  1084  0192                     	;# 
  1085  0193                     	;# 
  1086  0193                     	;# 
  1087  0194                     	;# 
  1088  0195                     	;# 
  1089  0196                     	;# 
  1090  0197                     	;# 
  1091  0199                     	;# 
  1092  0199                     	;# 
  1093  0199                     	;# 
  1094  019A                     	;# 
  1095  019A                     	;# 
  1096  019A                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019C                     	;# 
  1103  019C                     	;# 
  1104  019C                     	;# 
  1105  019D                     	;# 
  1106  019D                     	;# 
  1107  019D                     	;# 
  1108  019E                     	;# 
  1109  019E                     	;# 
  1110  019E                     	;# 
  1111  019F                     	;# 
  1112  019F                     	;# 
  1113  019F                     	;# 
  1114  019F                     	;# 
  1115  019F                     	;# 
  1116  020C                     	;# 
  1117  020D                     	;# 
  1118  020E                     	;# 
  1119  020F                     	;# 
  1120  0210                     	;# 
  1121  0211                     	;# 
  1122  0211                     	;# 
  1123  0212                     	;# 
  1124  0212                     	;# 
  1125  0213                     	;# 
  1126  0213                     	;# 
  1127  0214                     	;# 
  1128  0214                     	;# 
  1129  0215                     	;# 
  1130  0215                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0216                     	;# 
  1134  0216                     	;# 
  1135  0217                     	;# 
  1136  0217                     	;# 
  1137  028C                     	;# 
  1138  028D                     	;# 
  1139  028E                     	;# 
  1140  028F                     	;# 
  1141  0290                     	;# 
  1142  0291                     	;# 
  1143  0291                     	;# 
  1144  0292                     	;# 
  1145  0293                     	;# 
  1146  0293                     	;# 
  1147  0298                     	;# 
  1148  0298                     	;# 
  1149  0299                     	;# 
  1150  029A                     	;# 
  1151  029A                     	;# 
  1152  029E                     	;# 
  1153  030C                     	;# 
  1154  030D                     	;# 
  1155  030E                     	;# 
  1156  030F                     	;# 
  1157  0310                     	;# 
  1158  038C                     	;# 
  1159  038D                     	;# 
  1160  038E                     	;# 
  1161  038F                     	;# 
  1162  0390                     	;# 
  1163  0391                     	;# 
  1164  0392                     	;# 
  1165  0393                     	;# 
  1166  0394                     	;# 
  1167  0395                     	;# 
  1168  0396                     	;# 
  1169  0397                     	;# 
  1170  0398                     	;# 
  1171  0399                     	;# 
  1172  039D                     	;# 
  1173  039E                     	;# 
  1174  039F                     	;# 
  1175  0415                     	;# 
  1176  0416                     	;# 
  1177  0417                     	;# 
  1178  041C                     	;# 
  1179  041D                     	;# 
  1180  041E                     	;# 
  1181  0498                     	;# 
  1182  0498                     	;# 
  1183  0499                     	;# 
  1184  049A                     	;# 
  1185  049B                     	;# 
  1186  049B                     	;# 
  1187  049C                     	;# 
  1188  049D                     	;# 
  1189  049E                     	;# 
  1190  049F                     	;# 
  1191  0511                     	;# 
  1192  0515                     	;# 
  1193  0617                     	;# 
  1194  0618                     	;# 
  1195  0619                     	;# 
  1196  0619                     	;# 
  1197  061A                     	;# 
  1198  061B                     	;# 
  1199  061C                     	;# 
  1200  061C                     	;# 
  1201  0691                     	;# 
  1202  0692                     	;# 
  1203  0693                     	;# 
  1204  0694                     	;# 
  1205  0695                     	;# 
  1206  0696                     	;# 
  1207  0697                     	;# 
  1208  0698                     	;# 
  1209  0699                     	;# 
  1210  069A                     	;# 
  1211  069B                     	;# 
  1212  069C                     	;# 
  1213  069D                     	;# 
  1214  069E                     	;# 
  1215  069F                     	;# 
  1216  0E0F                     	;# 
  1217  0E10                     	;# 
  1218  0E11                     	;# 
  1219  0E12                     	;# 
  1220  0E13                     	;# 
  1221  0E14                     	;# 
  1222  0E15                     	;# 
  1223  0E17                     	;# 
  1224  0E20                     	;# 
  1225  0E21                     	;# 
  1226  0E22                     	;# 
  1227  0E24                     	;# 
  1228  0E25                     	;# 
  1229  0E28                     	;# 
  1230  0E29                     	;# 
  1231  0E2A                     	;# 
  1232  0E2B                     	;# 
  1233  0E90                     	;# 
  1234  0E91                     	;# 
  1235  0E92                     	;# 
  1236  0E93                     	;# 
  1237  0E94                     	;# 
  1238  0E95                     	;# 
  1239  0E96                     	;# 
  1240  0E97                     	;# 
  1241  0E98                     	;# 
  1242  0E99                     	;# 
  1243  0E9A                     	;# 
  1244  0E9B                     	;# 
  1245  0E9C                     	;# 
  1246  0E9D                     	;# 
  1247  0E9E                     	;# 
  1248  0E9F                     	;# 
  1249  0EA0                     	;# 
  1250  0EA1                     	;# 
  1251  0EA2                     	;# 
  1252  0EA3                     	;# 
  1253  0EA4                     	;# 
  1254  0EA5                     	;# 
  1255  0EA6                     	;# 
  1256  0EA7                     	;# 
  1257  0EA8                     	;# 
  1258  0EA9                     	;# 
  1259  0EAA                     	;# 
  1260  0EAB                     	;# 
  1261  0EAC                     	;# 
  1262  0EAD                     	;# 
  1263  0EAE                     	;# 
  1264  0EAF                     	;# 
  1265  0EB0                     	;# 
  1266  0EB1                     	;# 
  1267  0EB2                     	;# 
  1268  0F0F                     	;# 
  1269  0F10                     	;# 
  1270  0F11                     	;# 
  1271  0F12                     	;# 
  1272  0F13                     	;# 
  1273  0F14                     	;# 
  1274  0F15                     	;# 
  1275  0F16                     	;# 
  1276  0F17                     	;# 
  1277  0F18                     	;# 
  1278  0F19                     	;# 
  1279  0F1A                     	;# 
  1280  0F1B                     	;# 
  1281  0F1C                     	;# 
  1282  0F1D                     	;# 
  1283  0F1E                     	;# 
  1284  0F1F                     	;# 
  1285  0F20                     	;# 
  1286  0F21                     	;# 
  1287  0F22                     	;# 
  1288  0F23                     	;# 
  1289  0F24                     	;# 
  1290  0F25                     	;# 
  1291  0F26                     	;# 
  1292  0F27                     	;# 
  1293  0F28                     	;# 
  1294  0F29                     	;# 
  1295  0F2A                     	;# 
  1296  0F2B                     	;# 
  1297  0F2C                     	;# 
  1298  0F2D                     	;# 
  1299  0F2E                     	;# 
  1300  0F2F                     	;# 
  1301  0F30                     	;# 
  1302  0F31                     	;# 
  1303  0F32                     	;# 
  1304  0F33                     	;# 
  1305  0F34                     	;# 
  1306  0F35                     	;# 
  1307  0F36                     	;# 
  1308  0F37                     	;# 
  1309  0FE4                     	;# 
  1310  0FE5                     	;# 
  1311  0FE6                     	;# 
  1312  0FE7                     	;# 
  1313  0FE8                     	;# 
  1314  0FE9                     	;# 
  1315  0FEA                     	;# 
  1316  0FEB                     	;# 
  1317  0FED                     	;# 
  1318  0FEE                     	;# 
  1319  0FEF                     	;# 
  1320  0000                     	;# 
  1321  0001                     	;# 
  1322  0002                     	;# 
  1323  0003                     	;# 
  1324  0004                     	;# 
  1325  0005                     	;# 
  1326  0006                     	;# 
  1327  0007                     	;# 
  1328  0008                     	;# 
  1329  0009                     	;# 
  1330  000A                     	;# 
  1331  000B                     	;# 
  1332  000C                     	;# 
  1333  000D                     	;# 
  1334  000E                     	;# 
  1335  000F                     	;# 
  1336  0010                     	;# 
  1337  0011                     	;# 
  1338  0012                     	;# 
  1339  0013                     	;# 
  1340  0015                     	;# 
  1341  0016                     	;# 
  1342  0016                     	;# 
  1343  0017                     	;# 
  1344  0018                     	;# 
  1345  0019                     	;# 
  1346  001A                     	;# 
  1347  001B                     	;# 
  1348  001C                     	;# 
  1349  008C                     	;# 
  1350  008D                     	;# 
  1351  008E                     	;# 
  1352  008F                     	;# 
  1353  0090                     	;# 
  1354  0091                     	;# 
  1355  0092                     	;# 
  1356  0093                     	;# 
  1357  0095                     	;# 
  1358  0096                     	;# 
  1359  0097                     	;# 
  1360  0098                     	;# 
  1361  0099                     	;# 
  1362  009A                     	;# 
  1363  009B                     	;# 
  1364  009B                     	;# 
  1365  009C                     	;# 
  1366  009D                     	;# 
  1367  009E                     	;# 
  1368  009F                     	;# 
  1369  010C                     	;# 
  1370  010D                     	;# 
  1371  010E                     	;# 
  1372  010F                     	;# 
  1373  0110                     	;# 
  1374  0111                     	;# 
  1375  0112                     	;# 
  1376  0113                     	;# 
  1377  0114                     	;# 
  1378  0115                     	;# 
  1379  0116                     	;# 
  1380  0117                     	;# 
  1381  0118                     	;# 
  1382  0119                     	;# 
  1383  011A                     	;# 
  1384  011B                     	;# 
  1385  011B                     	;# 
  1386  011C                     	;# 
  1387  018C                     	;# 
  1388  018D                     	;# 
  1389  018E                     	;# 
  1390  018F                     	;# 
  1391  0190                     	;# 
  1392  0191                     	;# 
  1393  0191                     	;# 
  1394  0192                     	;# 
  1395  0193                     	;# 
  1396  0193                     	;# 
  1397  0194                     	;# 
  1398  0195                     	;# 
  1399  0196                     	;# 
  1400  0197                     	;# 
  1401  0199                     	;# 
  1402  0199                     	;# 
  1403  0199                     	;# 
  1404  019A                     	;# 
  1405  019A                     	;# 
  1406  019A                     	;# 
  1407  019B                     	;# 
  1408  019B                     	;# 
  1409  019B                     	;# 
  1410  019B                     	;# 
  1411  019B                     	;# 
  1412  019C                     	;# 
  1413  019C                     	;# 
  1414  019C                     	;# 
  1415  019D                     	;# 
  1416  019D                     	;# 
  1417  019D                     	;# 
  1418  019E                     	;# 
  1419  019E                     	;# 
  1420  019E                     	;# 
  1421  019F                     	;# 
  1422  019F                     	;# 
  1423  019F                     	;# 
  1424  019F                     	;# 
  1425  019F                     	;# 
  1426  020C                     	;# 
  1427  020D                     	;# 
  1428  020E                     	;# 
  1429  020F                     	;# 
  1430  0210                     	;# 
  1431  0211                     	;# 
  1432  0211                     	;# 
  1433  0212                     	;# 
  1434  0212                     	;# 
  1435  0213                     	;# 
  1436  0213                     	;# 
  1437  0214                     	;# 
  1438  0214                     	;# 
  1439  0215                     	;# 
  1440  0215                     	;# 
  1441  0215                     	;# 
  1442  0215                     	;# 
  1443  0216                     	;# 
  1444  0216                     	;# 
  1445  0217                     	;# 
  1446  0217                     	;# 
  1447  028C                     	;# 
  1448  028D                     	;# 
  1449  028E                     	;# 
  1450  028F                     	;# 
  1451  0290                     	;# 
  1452  0291                     	;# 
  1453  0291                     	;# 
  1454  0292                     	;# 
  1455  0293                     	;# 
  1456  0293                     	;# 
  1457  0298                     	;# 
  1458  0298                     	;# 
  1459  0299                     	;# 
  1460  029A                     	;# 
  1461  029A                     	;# 
  1462  029E                     	;# 
  1463  030C                     	;# 
  1464  030D                     	;# 
  1465  030E                     	;# 
  1466  030F                     	;# 
  1467  0310                     	;# 
  1468  038C                     	;# 
  1469  038D                     	;# 
  1470  038E                     	;# 
  1471  038F                     	;# 
  1472  0390                     	;# 
  1473  0391                     	;# 
  1474  0392                     	;# 
  1475  0393                     	;# 
  1476  0394                     	;# 
  1477  0395                     	;# 
  1478  0396                     	;# 
  1479  0397                     	;# 
  1480  0398                     	;# 
  1481  0399                     	;# 
  1482  039D                     	;# 
  1483  039E                     	;# 
  1484  039F                     	;# 
  1485  0415                     	;# 
  1486  0416                     	;# 
  1487  0417                     	;# 
  1488  041C                     	;# 
  1489  041D                     	;# 
  1490  041E                     	;# 
  1491  0498                     	;# 
  1492  0498                     	;# 
  1493  0499                     	;# 
  1494  049A                     	;# 
  1495  049B                     	;# 
  1496  049B                     	;# 
  1497  049C                     	;# 
  1498  049D                     	;# 
  1499  049E                     	;# 
  1500  049F                     	;# 
  1501  0511                     	;# 
  1502  0515                     	;# 
  1503  0617                     	;# 
  1504  0618                     	;# 
  1505  0619                     	;# 
  1506  0619                     	;# 
  1507  061A                     	;# 
  1508  061B                     	;# 
  1509  061C                     	;# 
  1510  061C                     	;# 
  1511  0691                     	;# 
  1512  0692                     	;# 
  1513  0693                     	;# 
  1514  0694                     	;# 
  1515  0695                     	;# 
  1516  0696                     	;# 
  1517  0697                     	;# 
  1518  0698                     	;# 
  1519  0699                     	;# 
  1520  069A                     	;# 
  1521  069B                     	;# 
  1522  069C                     	;# 
  1523  069D                     	;# 
  1524  069E                     	;# 
  1525  069F                     	;# 
  1526  0E0F                     	;# 
  1527  0E10                     	;# 
  1528  0E11                     	;# 
  1529  0E12                     	;# 
  1530  0E13                     	;# 
  1531  0E14                     	;# 
  1532  0E15                     	;# 
  1533  0E17                     	;# 
  1534  0E20                     	;# 
  1535  0E21                     	;# 
  1536  0E22                     	;# 
  1537  0E24                     	;# 
  1538  0E25                     	;# 
  1539  0E28                     	;# 
  1540  0E29                     	;# 
  1541  0E2A                     	;# 
  1542  0E2B                     	;# 
  1543  0E90                     	;# 
  1544  0E91                     	;# 
  1545  0E92                     	;# 
  1546  0E93                     	;# 
  1547  0E94                     	;# 
  1548  0E95                     	;# 
  1549  0E96                     	;# 
  1550  0E97                     	;# 
  1551  0E98                     	;# 
  1552  0E99                     	;# 
  1553  0E9A                     	;# 
  1554  0E9B                     	;# 
  1555  0E9C                     	;# 
  1556  0E9D                     	;# 
  1557  0E9E                     	;# 
  1558  0E9F                     	;# 
  1559  0EA0                     	;# 
  1560  0EA1                     	;# 
  1561  0EA2                     	;# 
  1562  0EA3                     	;# 
  1563  0EA4                     	;# 
  1564  0EA5                     	;# 
  1565  0EA6                     	;# 
  1566  0EA7                     	;# 
  1567  0EA8                     	;# 
  1568  0EA9                     	;# 
  1569  0EAA                     	;# 
  1570  0EAB                     	;# 
  1571  0EAC                     	;# 
  1572  0EAD                     	;# 
  1573  0EAE                     	;# 
  1574  0EAF                     	;# 
  1575  0EB0                     	;# 
  1576  0EB1                     	;# 
  1577  0EB2                     	;# 
  1578  0F0F                     	;# 
  1579  0F10                     	;# 
  1580  0F11                     	;# 
  1581  0F12                     	;# 
  1582  0F13                     	;# 
  1583  0F14                     	;# 
  1584  0F15                     	;# 
  1585  0F16                     	;# 
  1586  0F17                     	;# 
  1587  0F18                     	;# 
  1588  0F19                     	;# 
  1589  0F1A                     	;# 
  1590  0F1B                     	;# 
  1591  0F1C                     	;# 
  1592  0F1D                     	;# 
  1593  0F1E                     	;# 
  1594  0F1F                     	;# 
  1595  0F20                     	;# 
  1596  0F21                     	;# 
  1597  0F22                     	;# 
  1598  0F23                     	;# 
  1599  0F24                     	;# 
  1600  0F25                     	;# 
  1601  0F26                     	;# 
  1602  0F27                     	;# 
  1603  0F28                     	;# 
  1604  0F29                     	;# 
  1605  0F2A                     	;# 
  1606  0F2B                     	;# 
  1607  0F2C                     	;# 
  1608  0F2D                     	;# 
  1609  0F2E                     	;# 
  1610  0F2F                     	;# 
  1611  0F30                     	;# 
  1612  0F31                     	;# 
  1613  0F32                     	;# 
  1614  0F33                     	;# 
  1615  0F34                     	;# 
  1616  0F35                     	;# 
  1617  0F36                     	;# 
  1618  0F37                     	;# 
  1619  0FE4                     	;# 
  1620  0FE5                     	;# 
  1621  0FE6                     	;# 
  1622  0FE7                     	;# 
  1623  0FE8                     	;# 
  1624  0FE9                     	;# 
  1625  0FEA                     	;# 
  1626  0FEB                     	;# 
  1627  0FED                     	;# 
  1628  0FEE                     	;# 
  1629  0FEF                     	;# 
  1630  0000                     	;# 
  1631  0001                     	;# 
  1632  0002                     	;# 
  1633  0003                     	;# 
  1634  0004                     	;# 
  1635  0005                     	;# 
  1636  0006                     	;# 
  1637  0007                     	;# 
  1638  0008                     	;# 
  1639  0009                     	;# 
  1640  000A                     	;# 
  1641  000B                     	;# 
  1642  000C                     	;# 
  1643  000D                     	;# 
  1644  000E                     	;# 
  1645  000F                     	;# 
  1646  0010                     	;# 
  1647  0011                     	;# 
  1648  0012                     	;# 
  1649  0013                     	;# 
  1650  0015                     	;# 
  1651  0016                     	;# 
  1652  0016                     	;# 
  1653  0017                     	;# 
  1654  0018                     	;# 
  1655  0019                     	;# 
  1656  001A                     	;# 
  1657  001B                     	;# 
  1658  001C                     	;# 
  1659  008C                     	;# 
  1660  008D                     	;# 
  1661  008E                     	;# 
  1662  008F                     	;# 
  1663  0090                     	;# 
  1664  0091                     	;# 
  1665  0092                     	;# 
  1666  0093                     	;# 
  1667  0095                     	;# 
  1668  0096                     	;# 
  1669  0097                     	;# 
  1670  0098                     	;# 
  1671  0099                     	;# 
  1672  009A                     	;# 
  1673  009B                     	;# 
  1674  009B                     	;# 
  1675  009C                     	;# 
  1676  009D                     	;# 
  1677  009E                     	;# 
  1678  009F                     	;# 
  1679  010C                     	;# 
  1680  010D                     	;# 
  1681  010E                     	;# 
  1682  010F                     	;# 
  1683  0110                     	;# 
  1684  0111                     	;# 
  1685  0112                     	;# 
  1686  0113                     	;# 
  1687  0114                     	;# 
  1688  0115                     	;# 
  1689  0116                     	;# 
  1690  0117                     	;# 
  1691  0118                     	;# 
  1692  0119                     	;# 
  1693  011A                     	;# 
  1694  011B                     	;# 
  1695  011B                     	;# 
  1696  011C                     	;# 
  1697  018C                     	;# 
  1698  018D                     	;# 
  1699  018E                     	;# 
  1700  018F                     	;# 
  1701  0190                     	;# 
  1702  0191                     	;# 
  1703  0191                     	;# 
  1704  0192                     	;# 
  1705  0193                     	;# 
  1706  0193                     	;# 
  1707  0194                     	;# 
  1708  0195                     	;# 
  1709  0196                     	;# 
  1710  0197                     	;# 
  1711  0199                     	;# 
  1712  0199                     	;# 
  1713  0199                     	;# 
  1714  019A                     	;# 
  1715  019A                     	;# 
  1716  019A                     	;# 
  1717  019B                     	;# 
  1718  019B                     	;# 
  1719  019B                     	;# 
  1720  019B                     	;# 
  1721  019B                     	;# 
  1722  019C                     	;# 
  1723  019C                     	;# 
  1724  019C                     	;# 
  1725  019D                     	;# 
  1726  019D                     	;# 
  1727  019D                     	;# 
  1728  019E                     	;# 
  1729  019E                     	;# 
  1730  019E                     	;# 
  1731  019F                     	;# 
  1732  019F                     	;# 
  1733  019F                     	;# 
  1734  019F                     	;# 
  1735  019F                     	;# 
  1736  020C                     	;# 
  1737  020D                     	;# 
  1738  020E                     	;# 
  1739  020F                     	;# 
  1740  0210                     	;# 
  1741  0211                     	;# 
  1742  0211                     	;# 
  1743  0212                     	;# 
  1744  0212                     	;# 
  1745  0213                     	;# 
  1746  0213                     	;# 
  1747  0214                     	;# 
  1748  0214                     	;# 
  1749  0215                     	;# 
  1750  0215                     	;# 
  1751  0215                     	;# 
  1752  0215                     	;# 
  1753  0216                     	;# 
  1754  0216                     	;# 
  1755  0217                     	;# 
  1756  0217                     	;# 
  1757  028C                     	;# 
  1758  028D                     	;# 
  1759  028E                     	;# 
  1760  028F                     	;# 
  1761  0290                     	;# 
  1762  0291                     	;# 
  1763  0291                     	;# 
  1764  0292                     	;# 
  1765  0293                     	;# 
  1766  0293                     	;# 
  1767  0298                     	;# 
  1768  0298                     	;# 
  1769  0299                     	;# 
  1770  029A                     	;# 
  1771  029A                     	;# 
  1772  029E                     	;# 
  1773  030C                     	;# 
  1774  030D                     	;# 
  1775  030E                     	;# 
  1776  030F                     	;# 
  1777  0310                     	;# 
  1778  038C                     	;# 
  1779  038D                     	;# 
  1780  038E                     	;# 
  1781  038F                     	;# 
  1782  0390                     	;# 
  1783  0391                     	;# 
  1784  0392                     	;# 
  1785  0393                     	;# 
  1786  0394                     	;# 
  1787  0395                     	;# 
  1788  0396                     	;# 
  1789  0397                     	;# 
  1790  0398                     	;# 
  1791  0399                     	;# 
  1792  039D                     	;# 
  1793  039E                     	;# 
  1794  039F                     	;# 
  1795  0415                     	;# 
  1796  0416                     	;# 
  1797  0417                     	;# 
  1798  041C                     	;# 
  1799  041D                     	;# 
  1800  041E                     	;# 
  1801  0498                     	;# 
  1802  0498                     	;# 
  1803  0499                     	;# 
  1804  049A                     	;# 
  1805  049B                     	;# 
  1806  049B                     	;# 
  1807  049C                     	;# 
  1808  049D                     	;# 
  1809  049E                     	;# 
  1810  049F                     	;# 
  1811  0511                     	;# 
  1812  0515                     	;# 
  1813  0617                     	;# 
  1814  0618                     	;# 
  1815  0619                     	;# 
  1816  0619                     	;# 
  1817  061A                     	;# 
  1818  061B                     	;# 
  1819  061C                     	;# 
  1820  061C                     	;# 
  1821  0691                     	;# 
  1822  0692                     	;# 
  1823  0693                     	;# 
  1824  0694                     	;# 
  1825  0695                     	;# 
  1826  0696                     	;# 
  1827  0697                     	;# 
  1828  0698                     	;# 
  1829  0699                     	;# 
  1830  069A                     	;# 
  1831  069B                     	;# 
  1832  069C                     	;# 
  1833  069D                     	;# 
  1834  069E                     	;# 
  1835  069F                     	;# 
  1836  0E0F                     	;# 
  1837  0E10                     	;# 
  1838  0E11                     	;# 
  1839  0E12                     	;# 
  1840  0E13                     	;# 
  1841  0E14                     	;# 
  1842  0E15                     	;# 
  1843  0E17                     	;# 
  1844  0E20                     	;# 
  1845  0E21                     	;# 
  1846  0E22                     	;# 
  1847  0E24                     	;# 
  1848  0E25                     	;# 
  1849  0E28                     	;# 
  1850  0E29                     	;# 
  1851  0E2A                     	;# 
  1852  0E2B                     	;# 
  1853  0E90                     	;# 
  1854  0E91                     	;# 
  1855  0E92                     	;# 
  1856  0E93                     	;# 
  1857  0E94                     	;# 
  1858  0E95                     	;# 
  1859  0E96                     	;# 
  1860  0E97                     	;# 
  1861  0E98                     	;# 
  1862  0E99                     	;# 
  1863  0E9A                     	;# 
  1864  0E9B                     	;# 
  1865  0E9C                     	;# 
  1866  0E9D                     	;# 
  1867  0E9E                     	;# 
  1868  0E9F                     	;# 
  1869  0EA0                     	;# 
  1870  0EA1                     	;# 
  1871  0EA2                     	;# 
  1872  0EA3                     	;# 
  1873  0EA4                     	;# 
  1874  0EA5                     	;# 
  1875  0EA6                     	;# 
  1876  0EA7                     	;# 
  1877  0EA8                     	;# 
  1878  0EA9                     	;# 
  1879  0EAA                     	;# 
  1880  0EAB                     	;# 
  1881  0EAC                     	;# 
  1882  0EAD                     	;# 
  1883  0EAE                     	;# 
  1884  0EAF                     	;# 
  1885  0EB0                     	;# 
  1886  0EB1                     	;# 
  1887  0EB2                     	;# 
  1888  0F0F                     	;# 
  1889  0F10                     	;# 
  1890  0F11                     	;# 
  1891  0F12                     	;# 
  1892  0F13                     	;# 
  1893  0F14                     	;# 
  1894  0F15                     	;# 
  1895  0F16                     	;# 
  1896  0F17                     	;# 
  1897  0F18                     	;# 
  1898  0F19                     	;# 
  1899  0F1A                     	;# 
  1900  0F1B                     	;# 
  1901  0F1C                     	;# 
  1902  0F1D                     	;# 
  1903  0F1E                     	;# 
  1904  0F1F                     	;# 
  1905  0F20                     	;# 
  1906  0F21                     	;# 
  1907  0F22                     	;# 
  1908  0F23                     	;# 
  1909  0F24                     	;# 
  1910  0F25                     	;# 
  1911  0F26                     	;# 
  1912  0F27                     	;# 
  1913  0F28                     	;# 
  1914  0F29                     	;# 
  1915  0F2A                     	;# 
  1916  0F2B                     	;# 
  1917  0F2C                     	;# 
  1918  0F2D                     	;# 
  1919  0F2E                     	;# 
  1920  0F2F                     	;# 
  1921  0F30                     	;# 
  1922  0F31                     	;# 
  1923  0F32                     	;# 
  1924  0F33                     	;# 
  1925  0F34                     	;# 
  1926  0F35                     	;# 
  1927  0F36                     	;# 
  1928  0F37                     	;# 
  1929  0FE4                     	;# 
  1930  0FE5                     	;# 
  1931  0FE6                     	;# 
  1932  0FE7                     	;# 
  1933  0FE8                     	;# 
  1934  0FE9                     	;# 
  1935  0FEA                     	;# 
  1936  0FEB                     	;# 
  1937  0FED                     	;# 
  1938  0FEE                     	;# 
  1939  0FEF                     	;# 
  1940                           
  1941                           	psect	stringtext1
  1942  02F3                     __pstringtext1:	
  1943  02F3                     _OCD_threshold_setting:	
  1944  02F3  3411               	retlw	17
  1945  02F4  3400               	retlw	0
  1946  02F5  3416               	retlw	22
  1947  02F6  3400               	retlw	0
  1948  02F7  341C               	retlw	28
  1949  02F8  3400               	retlw	0
  1950  02F9  3421               	retlw	33
  1951  02FA  3400               	retlw	0
  1952  02FB  3427               	retlw	39
  1953  02FC  3400               	retlw	0
  1954  02FD  342C               	retlw	44
  1955  02FE  3400               	retlw	0
  1956  02FF  3432               	retlw	50
  1957  0300  3400               	retlw	0
  1958  0301  3438               	retlw	56
  1959  0302  3400               	retlw	0
  1960  0303  343D               	retlw	61
  1961  0304  3400               	retlw	0
  1962  0305  3443               	retlw	67
  1963  0306  3400               	retlw	0
  1964  0307  3448               	retlw	72
  1965  0308  3400               	retlw	0
  1966  0309  344E               	retlw	78
  1967  030A  3400               	retlw	0
  1968  030B  3453               	retlw	83
  1969  030C  3400               	retlw	0
  1970  030D  3459               	retlw	89
  1971  030E  3400               	retlw	0
  1972  030F  345E               	retlw	94
  1973  0310  3400               	retlw	0
  1974  0311  3464               	retlw	100
  1975  0312  3400               	retlw	0
  1976  0313                     __end_of_OCD_threshold_setting:	
  1977                           
  1978                           	psect	stringtext2
  1979  034B                     __pstringtext2:	
  1980  034B                     _OCD_delay_setting:	
  1981  034B  3408               	retlw	8
  1982  034C  3400               	retlw	0
  1983  034D  3414               	retlw	20
  1984  034E  3400               	retlw	0
  1985  034F  3428               	retlw	40
  1986  0350  3400               	retlw	0
  1987  0351  3450               	retlw	80
  1988  0352  3400               	retlw	0
  1989  0353  34A0               	retlw	160
  1990  0354  3400               	retlw	0
  1991  0355  3440               	retlw	64
  1992  0356  3401               	retlw	1
  1993  0357  3480               	retlw	128
  1994  0358  3402               	retlw	2
  1995  0359  3400               	retlw	0
  1996  035A  3405               	retlw	5
  1997  035B                     __end_of_OCD_delay_setting:	
  1998                           
  1999                           	psect	stringtext3
  2000  035B                     __pstringtext3:	
  2001  035B                     _SCD_threshold_setting:	
  2002  035B  342C               	retlw	44
  2003  035C  3400               	retlw	0
  2004  035D  3443               	retlw	67
  2005  035E  3400               	retlw	0
  2006  035F  3459               	retlw	89
  2007  0360  3400               	retlw	0
  2008  0361  346F               	retlw	111
  2009  0362  3400               	retlw	0
  2010  0363  3485               	retlw	133
  2011  0364  3400               	retlw	0
  2012  0365  349B               	retlw	155
  2013  0366  3400               	retlw	0
  2014  0367  34B2               	retlw	178
  2015  0368  3400               	retlw	0
  2016  0369  34C8               	retlw	200
  2017  036A  3400               	retlw	0
  2018  036B                     __end_of_SCD_threshold_setting:	
  2019                           
  2020                           	psect	stringtext4
  2021  03BB                     __pstringtext4:	
  2022  03BB                     _OV_delay_setting:	
  2023  03BB  3401               	retlw	1
  2024  03BC  3400               	retlw	0
  2025  03BD  3402               	retlw	2
  2026  03BE  3400               	retlw	0
  2027  03BF  3404               	retlw	4
  2028  03C0  3400               	retlw	0
  2029  03C1  3408               	retlw	8
  2030  03C2  3400               	retlw	0
  2031  03C3                     __end_of_OV_delay_setting:	
  2032                           
  2033                           	psect	stringtext5
  2034  03C3                     __pstringtext5:	
  2035  03C3                     _UV_delay_setting:	
  2036  03C3  3401               	retlw	1
  2037  03C4  3400               	retlw	0
  2038  03C5  3404               	retlw	4
  2039  03C6  3400               	retlw	0
  2040  03C7  3408               	retlw	8
  2041  03C8  3400               	retlw	0
  2042  03C9  3410               	retlw	16
  2043  03CA  3400               	retlw	0
  2044  03CB                     __end_of_UV_delay_setting:	
  2045                           
  2046                           	psect	stringtext6
  2047  03CB                     __pstringtext6:	
  2048  03CB                     _SCD_delay_setting:	
  2049  03CB  3446               	retlw	70
  2050  03CC  3400               	retlw	0
  2051  03CD  3464               	retlw	100
  2052  03CE  3400               	retlw	0
  2053  03CF  34C8               	retlw	200
  2054  03D0  3400               	retlw	0
  2055  03D1  3490               	retlw	144
  2056  03D2  3401               	retlw	1
  2057  03D3                     __end_of_SCD_delay_setting:	
  2058                           
  2059                           	psect	stringtext7
  2060  0209                     __pstringtext7:	
  2061  0209                     _ATmega328_address:	
  2062  0209  3402               	retlw	2
  2063  020A  3400               	retlw	0
  2064  020B                     __end_of_ATmega328_address:	
  2065  0016                     _TMR1	set	22
  2066  000B                     _INTCONbits	set	11
  2067  0018                     _T1CONbits	set	24
  2068  0011                     _PIR1bits	set	17
  2069  0090                     _TRISEbits	set	144
  2070  008C                     _TRISAbits	set	140
  2071  008E                     _TRISCbits	set	142
  2072  008D                     _TRISBbits	set	141
  2073  0091                     _PIE1bits	set	145
  2074  0476                     _TRISC6	set	1142
  2075  0477                     _TRISC7	set	1143
  2076  04CF                     _SPLLEN	set	1231
  2077  04CE                     _IRCF3	set	1230
  2078  04CD                     _IRCF2	set	1229
  2079  04CC                     _IRCF1	set	1228
  2080  04CB                     _IRCF0	set	1227
  2081  04C9                     _SCS1	set	1225
  2082  04C8                     _SCS0	set	1224
  2083  0110                     _LATEbits	set	272
  2084  010C                     _LATAbits	set	268
  2085  019A                     _TX1REG	set	410
  2086  0199                     _RC1REG	set	409
  2087  019D                     _RC1STAbits	set	413
  2088  019B                     _SPBRG	set	411
  2089  018E                     _ANSELCbits	set	398
  2090  018D                     _ANSELBbits	set	397
  2091  0CF5                     _TXEN	set	3317
  2092  0CEC                     _CREN	set	3308
  2093  0CEF                     _SPEN	set	3311
  2094  0CF4                     _SYNC	set	3316
  2095  0CF2                     _BRGH	set	3314
  2096  0216                     _SSPCON2bits	set	534
  2097  0211                     _SSPBUF	set	529
  2098  0212                     _SSPADD	set	530
  2099  0215                     _SSPCONbits	set	533
  2100  0E24                     _RXPPSbits	set	3620
  2101  0E20                     _SSPCLKPPSbits	set	3616
  2102  0E21                     _SSPDATPPSbits	set	3617
  2103  0E0F                     _PPSLOCKbits	set	3599
  2104  0E0F                     _PPSLOCK	set	3599
  2105  0E9A                     _RB2PPSbits	set	3738
  2106  0EA5                     _RC5PPSbits	set	3749
  2107  0EA4                     _RC4PPSbits	set	3748
  2108  020B                     STR_2:	
  2109  020B  3443               	retlw	67	;'C'
  2110  020C  346F               	retlw	111	;'o'
  2111  020D  346D               	retlw	109	;'m'
  2112  020E  346D               	retlw	109	;'m'
  2113  020F  3475               	retlw	117	;'u'
  2114  0210  346E               	retlw	110	;'n'
  2115  0211  3469               	retlw	105	;'i'
  2116  0212  3463               	retlw	99	;'c'
  2117  0213  3461               	retlw	97	;'a'
  2118  0214  3474               	retlw	116	;'t'
  2119  0215  3469               	retlw	105	;'i'
  2120  0216  346F               	retlw	111	;'o'
  2121  0217  346E               	retlw	110	;'n'
  2122  0218  3420               	retlw	32	;' '
  2123  0219  3477               	retlw	119	;'w'
  2124  021A  3469               	retlw	105	;'i'
  2125  021B  3474               	retlw	116	;'t'
  2126  021C  3468               	retlw	104	;'h'
  2127  021D  3420               	retlw	32	;' '
  2128  021E  3442               	retlw	66	;'B'
  2129  021F  3451               	retlw	81	;'Q'
  2130  0220  3437               	retlw	55	;'7'
  2131  0221  3436               	retlw	54	;'6'
  2132  0222  3439               	retlw	57	;'9'
  2133  0223  3432               	retlw	50	;'2'
  2134  0224  3430               	retlw	48	;'0'
  2135  0225  3420               	retlw	32	;' '
  2136  0226  3441               	retlw	65	;'A'
  2137  0227  3446               	retlw	70	;'F'
  2138  0228  3445               	retlw	69	;'E'
  2139  0229  3420               	retlw	32	;' '
  2140  022A  3465               	retlw	101	;'e'
  2141  022B  3473               	retlw	115	;'s'
  2142  022C  3474               	retlw	116	;'t'
  2143  022D  3461               	retlw	97	;'a'
  2144  022E  3462               	retlw	98	;'b'
  2145  022F  346C               	retlw	108	;'l'
  2146  0230  3469               	retlw	105	;'i'
  2147  0231  3473               	retlw	115	;'s'
  2148  0232  3468               	retlw	104	;'h'
  2149  0233  3465               	retlw	101	;'e'
  2150  0234  3464               	retlw	100	;'d'
  2151  0235  3421               	retlw	33	;'!'
  2152  0236  340A               	retlw	10
  2153  0237  340D               	retlw	13
  2154  0238  3400               	retlw	0
  2155                           
  2156                           	psect	stringtext8
  2157  0239                     __pstringtext8:	
  2158  0239                     STR_1:	
  2159  0239  3441               	retlw	65	;'A'
  2160  023A  3474               	retlw	116	;'t'
  2161  023B  3474               	retlw	116	;'t'
  2162  023C  3465               	retlw	101	;'e'
  2163  023D  346D               	retlw	109	;'m'
  2164  023E  3470               	retlw	112	;'p'
  2165  023F  3474               	retlw	116	;'t'
  2166  0240  3469               	retlw	105	;'i'
  2167  0241  346E               	retlw	110	;'n'
  2168  0242  3467               	retlw	103	;'g'
  2169  0243  3420               	retlw	32	;' '
  2170  0244  3474               	retlw	116	;'t'
  2171  0245  346F               	retlw	111	;'o'
  2172  0246  3420               	retlw	32	;' '
  2173  0247  3463               	retlw	99	;'c'
  2174  0248  346F               	retlw	111	;'o'
  2175  0249  346D               	retlw	109	;'m'
  2176  024A  346D               	retlw	109	;'m'
  2177  024B  3475               	retlw	117	;'u'
  2178  024C  346E               	retlw	110	;'n'
  2179  024D  3469               	retlw	105	;'i'
  2180  024E  3463               	retlw	99	;'c'
  2181  024F  3461               	retlw	97	;'a'
  2182  0250  3474               	retlw	116	;'t'
  2183  0251  3465               	retlw	101	;'e'
  2184  0252  3420               	retlw	32	;' '
  2185  0253  3477               	retlw	119	;'w'
  2186  0254  3469               	retlw	105	;'i'
  2187  0255  3474               	retlw	116	;'t'
  2188  0256  3468               	retlw	104	;'h'
  2189  0257  3420               	retlw	32	;' '
  2190  0258  3441               	retlw	65	;'A'
  2191  0259  3446               	retlw	70	;'F'
  2192  025A  3445               	retlw	69	;'E'
  2193  025B  342E               	retlw	46	;'.'
  2194  025C  342E               	retlw	46	;'.'
  2195  025D  342E               	retlw	46	;'.'
  2196  025E  340A               	retlw	10
  2197  025F  340D               	retlw	13
  2198  0260  3400               	retlw	0
  2199                           
  2200                           	psect	stringtext9
  2201  0000                     __pstringtext9:	
  2202                           
  2203                           ; #config settings
  2204  0000                     
  2205                           	psect	cinit
  2206  001F                     start_initialization:	
  2207  001F                     __initialization:	
  2208                           
  2209                           ; Clear objects allocated to COMMON
  2210  001F  01FC               	clrf	__pbssCOMMON& (0+127)
  2211                           
  2212                           ; Clear objects allocated to BANK0
  2213  0020  3037               	movlw	low __pbssBANK0
  2214  0021  0084               	movwf	4
  2215  0022  3000               	movlw	high __pbssBANK0
  2216  0023  0085               	movwf	5
  2217  0024  300D               	movlw	13
  2218  0025  3183  23EB         	fcall	clear_ram0
  2219  0027                     end_of_initialization:	
  2220                           ;End of C runtime variable initialization code
  2221                           
  2222  0027                     __end_of__initialization:	
  2223  0027  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2224  0028  0020               	movlb	0
  2225  0029  3182  2A61         	ljmp	_main	;jump to C main() function
  2226                           
  2227                           	psect	bssCOMMON
  2228  007C                     __pbssCOMMON:	
  2229  007C                     _toggleColor:	
  2230  007C                     	ds	1
  2231                           
  2232                           	psect	bssBANK0
  2233  0037                     __pbssBANK0:	
  2234  0037                     _cellVoltages:	
  2235  0037                     	ds	10
  2236  0041                     myIsr@count:	
  2237  0041                     	ds	1
  2238  0042                     _tmr1_flag:	
  2239  0042                     	ds	1
  2240  0043                     _currState:	
  2241  0043                     	ds	1
  2242                           
  2243                           	psect	clrtext
  2244  03EB                     clear_ram0:	
  2245                           ;	Called with FSR0 containing the base address, and
  2246                           ;	WREG with the size to clear
  2247                           
  2248  03EB  0064               	clrwdt	;clear the watchdog before getting into this loop
  2249  03EC                     clrloop0:	
  2250  03EC  0180               	clrf	0	;clear RAM location pointed to by FSR
  2251  03ED  3101               	addfsr 0,1
  2252  03EE  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2253  03EF  2BEC               	goto	clrloop0	;have we reached the end yet?
  2254  03F0  3400               	retlw	0	;all done for this memory range, return
  2255                           
  2256                           	psect	cstackCOMMON
  2257  0070                     __pcstackCOMMON:	
  2258  0070                     ?_initClock:	
  2259  0070                     ?_init_GPIO:	
  2260                           ; 1 bytes @ 0x0
  2261                           
  2262  0070                     ?_init_I2C:	
  2263                           ; 1 bytes @ 0x0
  2264                           
  2265  0070                     ?_init_TMR1:	
  2266                           ; 1 bytes @ 0x0
  2267                           
  2268  0070                     ?_init_RGB:	
  2269                           ; 1 bytes @ 0x0
  2270                           
  2271  0070                     ?_statemachine:	
  2272                           ; 1 bytes @ 0x0
  2273                           
  2274  0070                     ?_RGB_AWAIT_AFE_CONN:	
  2275                           ; 1 bytes @ 0x0
  2276                           
  2277  0070                     ?_init_AFE:	
  2278                           ; 1 bytes @ 0x0
  2279                           
  2280  0070                     ?_internal_16:	
  2281                           ; 1 bytes @ 0x0
  2282                           
  2283  0070                     ?_myIsr:	
  2284                           ; 1 bytes @ 0x0
  2285                           
  2286  0070                     ??_myIsr:	
  2287                           ; 1 bytes @ 0x0
  2288                           
  2289  0070                     ?_main:	
  2290                           ; 1 bytes @ 0x0
  2291                           
  2292  0070                     ?_EUSART_Write:	
  2293                           ; 1 bytes @ 0x0
  2294                           
  2295  0070                     ?_send_I2C_startBit:	
  2296                           ; 1 bytes @ 0x0
  2297                           
  2298  0070                     ?_send_I2C_stopBit:	
  2299                           ; 1 bytes @ 0x0
  2300                           
  2301  0070                     ?_send_I2C_NACK:	
  2302                           ; 1 bytes @ 0x0
  2303                           
  2304                           
  2305                           ; 1 bytes @ 0x0
  2306  0070                     	ds	1
  2307  0071                     ??_initClock:	
  2308  0071                     ??_init_GPIO:	
  2309                           ; 1 bytes @ 0x1
  2310                           
  2311  0071                     ??_init_I2C:	
  2312                           ; 1 bytes @ 0x1
  2313                           
  2314  0071                     ??_init_TMR1:	
  2315                           ; 1 bytes @ 0x1
  2316                           
  2317  0071                     ??_init_RGB:	
  2318                           ; 1 bytes @ 0x1
  2319                           
  2320  0071                     ?_RGB_color:	
  2321                           ; 1 bytes @ 0x1
  2322                           
  2323  0071                     ??_init_AFE:	
  2324                           ; 1 bytes @ 0x1
  2325                           
  2326  0071                     ??_internal_16:	
  2327                           ; 1 bytes @ 0x1
  2328                           
  2329  0071                     ??_EUSART_Write:	
  2330                           ; 1 bytes @ 0x1
  2331                           
  2332  0071                     ?_send_I2C_data:	
  2333                           ; 1 bytes @ 0x1
  2334                           
  2335  0071                     ?_send_I2C_controlByte:	
  2336                           ; 1 bytes @ 0x1
  2337                           
  2338  0071                     ??_send_I2C_startBit:	
  2339                           ; 1 bytes @ 0x1
  2340                           
  2341  0071                     ??_send_I2C_stopBit:	
  2342                           ; 1 bytes @ 0x1
  2343                           
  2344  0071                     ??_send_I2C_NACK:	
  2345                           ; 1 bytes @ 0x1
  2346                           
  2347  0071                     ?_read_I2C_data:	
  2348                           ; 1 bytes @ 0x1
  2349                           
  2350  0071                     ?___aldiv:	
  2351                           ; 2 bytes @ 0x1
  2352                           
  2353  0071                     EUSART_Write@txData:	
  2354                           ; 4 bytes @ 0x1
  2355                           
  2356  0071                     send_I2C_data@databyte:	
  2357                           ; 1 bytes @ 0x1
  2358                           
  2359  0071                     send_I2C_controlByte@BlockAddress:	
  2360                           ; 2 bytes @ 0x1
  2361                           
  2362  0071                     RGB_color@color:	
  2363                           ; 2 bytes @ 0x1
  2364                           
  2365  0071                     ___aldiv@divisor:	
  2366                           ; 2 bytes @ 0x1
  2367                           
  2368                           
  2369                           ; 4 bytes @ 0x1
  2370  0071                     	ds	1
  2371  0072                     ?_EUSART_Write_Text:	
  2372  0072                     EUSART_Write_Text@text:	
  2373                           ; 1 bytes @ 0x2
  2374                           
  2375                           
  2376                           ; 2 bytes @ 0x2
  2377  0072                     	ds	1
  2378  0073                     ??_RGB_AWAIT_AFE_CONN:	
  2379  0073                     ??_RGB_color:	
  2380                           ; 1 bytes @ 0x3
  2381                           
  2382  0073                     ??_send_I2C_data:	
  2383                           ; 1 bytes @ 0x3
  2384                           
  2385  0073                     ??_read_I2C_data:	
  2386                           ; 1 bytes @ 0x3
  2387                           
  2388  0073                     send_I2C_controlByte@RW_bit:	
  2389                           ; 1 bytes @ 0x3
  2390                           
  2391                           
  2392                           ; 2 bytes @ 0x3
  2393  0073                     	ds	1
  2394  0074                     ??_EUSART_Write_Text:	
  2395                           
  2396                           ; 1 bytes @ 0x4
  2397  0074                     	ds	1
  2398  0075                     ??_send_I2C_controlByte:	
  2399  0075                     ?_I2C_writeRegister:	
  2400                           ; 1 bytes @ 0x5
  2401                           
  2402  0075                     ?_readRegister:	
  2403                           ; 1 bytes @ 0x5
  2404                           
  2405  0075                     EUSART_Write_Text@i:	
  2406                           ; 2 bytes @ 0x5
  2407                           
  2408  0075                     I2C_writeRegister@slaveAddress:	
  2409                           ; 2 bytes @ 0x5
  2410                           
  2411  0075                     readRegister@slaveAddress:	
  2412                           ; 2 bytes @ 0x5
  2413                           
  2414  0075                     ___aldiv@dividend:	
  2415                           ; 2 bytes @ 0x5
  2416                           
  2417                           
  2418                           ; 4 bytes @ 0x5
  2419  0075                     	ds	2
  2420  0077                     I2C_writeRegister@regAddress:	
  2421  0077                     readRegister@regAddress:	
  2422                           ; 2 bytes @ 0x7
  2423                           
  2424                           
  2425                           ; 2 bytes @ 0x7
  2426  0077                     	ds	2
  2427  0079                     ??_readRegister:	
  2428  0079                     ??___aldiv:	
  2429                           ; 1 bytes @ 0x9
  2430                           
  2431  0079                     I2C_writeRegister@data:	
  2432                           ; 1 bytes @ 0x9
  2433                           
  2434  0079                     readRegister@recievedData:	
  2435                           ; 2 bytes @ 0x9
  2436                           
  2437                           
  2438                           ; 2 bytes @ 0x9
  2439  0079                     	ds	1
  2440  007A                     EUSART_Initialize@x:	
  2441                           
  2442                           ; 2 bytes @ 0xA
  2443  007A                     	ds	1
  2444  007B                     ??_beginAFEcommunication:	
  2445  007B                     ??_I2C_writeRegister:	
  2446                           ; 1 bytes @ 0xB
  2447                           
  2448                           
  2449                           ; 1 bytes @ 0xB
  2450  007B                     	ds	1
  2451  007C                     ??_statemachine:	
  2452                           
  2453                           	psect	cstackBANK0
  2454  0020                     __pcstackBANK0:	
  2455                           ; 1 bytes @ 0xC
  2456                           
  2457  0020                     ?_beginAFEcommunication:	
  2458  0020                     ___aldiv@counter:	
  2459                           ; 2 bytes @ 0x0
  2460                           
  2461                           
  2462                           ; 1 bytes @ 0x0
  2463  0020                     	ds	1
  2464  0021                     ___aldiv@sign:	
  2465                           
  2466                           ; 1 bytes @ 0x1
  2467  0021                     	ds	1
  2468  0022                     beginAFEcommunication@errCode:	
  2469  0022                     ___aldiv@quotient:	
  2470                           ; 2 bytes @ 0x2
  2471                           
  2472                           
  2473                           ; 4 bytes @ 0x2
  2474  0022                     	ds	2
  2475  0024                     beginAFEcommunication@i:	
  2476                           
  2477                           ; 2 bytes @ 0x4
  2478  0024                     	ds	2
  2479  0026                     ?_EUSART_Initialize:	
  2480  0026                     EUSART_Initialize@baudrate:	
  2481                           ; 1 bytes @ 0x6
  2482                           
  2483                           
  2484                           ; 4 bytes @ 0x6
  2485  0026                     	ds	4
  2486  002A                     ??_EUSART_Initialize:	
  2487                           
  2488                           ; 1 bytes @ 0xA
  2489  002A                     	ds	12
  2490  0036                     ??_main:	
  2491                           
  2492                           ; 1 bytes @ 0x16
  2493  0036                     	ds	1
  2494                           
  2495                           	psect	maintext
  2496  0261                     __pmaintext:	
  2497 ;;
  2498 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2499 ;;
  2500 ;; *************** function _main *****************
  2501 ;; Defined at:
  2502 ;;		line 76 in file "main.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;		None
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : B1F/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2518 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2519 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2520 ;;Total ram usage:        1 bytes
  2521 ;; Hardware stack levels required when called:    5
  2522 ;; This function calls:
  2523 ;;		_EUSART_Initialize
  2524 ;;		_initClock
  2525 ;;		_init_GPIO
  2526 ;;		_init_I2C
  2527 ;;		_init_RGB
  2528 ;;		_init_TMR1
  2529 ;;		_statemachine
  2530 ;; This function is called by:
  2531 ;;		Startup code after reset
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function _main
  2537  0261                     _main:	
  2538                           
  2539                           ;main.c: 79:     initClock();
  2540                           
  2541                           ;incstack = 0
  2542                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2543  0261  3183  23F6  3182   	fcall	_initClock
  2544                           
  2545                           ;main.c: 80:     init_GPIO();
  2546  0264  3181  219B  3182   	fcall	_init_GPIO
  2547                           
  2548                           ;main.c: 81:     init_I2C();
  2549  0267  3183  237B  3182   	fcall	_init_I2C
  2550                           
  2551                           ;main.c: 82:     EUSART_Initialize(9600);
  2552  026A  3000               	movlw	0
  2553  026B  0020               	movlb	0	; select bank0
  2554  026C  00A9               	movwf	EUSART_Initialize@baudrate+3
  2555  026D  3000               	movlw	0
  2556  026E  00A8               	movwf	EUSART_Initialize@baudrate+2
  2557  026F  3025               	movlw	37
  2558  0270  00A7               	movwf	EUSART_Initialize@baudrate+1
  2559  0271  3080               	movlw	128
  2560  0272  00A6               	movwf	EUSART_Initialize@baudrate
  2561  0273  3180  202B  3182   	fcall	_EUSART_Initialize
  2562                           
  2563                           ;main.c: 83:     init_TMR1();
  2564  0276  3183  238B  3182   	fcall	_init_TMR1
  2565                           
  2566                           ;main.c: 84:     init_RGB();
  2567  0279  3183  23F1  3182   	fcall	_init_RGB
  2568  027C                     l1527:	
  2569                           
  2570                           ;main.c: 88:         statemachine();
  2571  027C  3182  2289  3182   	fcall	_statemachine
  2572                           
  2573                           ;main.c: 90:         _delay((unsigned long)((10)*(16000000/4000.0)));
  2574  027F  3034               	movlw	52
  2575  0280  0020               	movlb	0	; select bank0
  2576  0281  00B6               	movwf	??_main
  2577  0282  30F1               	movlw	241
  2578  0283                     u787:	
  2579  0283  0B89               	decfsz	9,f
  2580  0284  2A83               	goto	u787
  2581  0285  0BB6               	decfsz	??_main,f
  2582  0286  2A83               	goto	u787
  2583  0287  3200               	nop2
  2584  0288  2A7C               	goto	l1527
  2585  0289                     __end_of_main:	
  2586                           
  2587                           	psect	text1
  2588  0289                     __ptext1:	
  2589 ;; *************** function _statemachine *****************
  2590 ;; Defined at:
  2591 ;;		line 96 in file "main.c"
  2592 ;; Parameters:    Size  Location     Type
  2593 ;;		None
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  success         1    0        unsigned char 
  2596 ;;  success1        1    0        unsigned char 
  2597 ;; Return value:  Size  Location     Type
  2598 ;;                  1    wreg      void 
  2599 ;; Registers used:
  2600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2601 ;; Tracked objects:
  2602 ;;		On entry : 0/0
  2603 ;;		On exit  : 0/0
  2604 ;;		Unchanged: 0/0
  2605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2607 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2609 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2610 ;;Total ram usage:        2 bytes
  2611 ;; Hardware stack levels used:    1
  2612 ;; Hardware stack levels required when called:    4
  2613 ;; This function calls:
  2614 ;;		_EUSART_Write_Text
  2615 ;;		_RGB_AWAIT_AFE_CONN
  2616 ;;		_RGB_color
  2617 ;;		_beginAFEcommunication
  2618 ;;		_init_AFE
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           
  2625                           ;psect for function _statemachine
  2626  0289                     _statemachine:	
  2627                           
  2628                           ;main.c: 98:     switch (currState) {
  2629                           
  2630                           ;incstack = 0
  2631                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2632  0289  2A9F               	goto	l1511
  2633  028A                     l1483:	
  2634                           
  2635                           ;main.c: 101:             if (tmr1_flag) {
  2636  028A  0020               	movlb	0	; select bank0
  2637  028B  0842               	movf	_tmr1_flag,w	;volatile
  2638  028C  1903               	btfsc	3,2
  2639  028D  0008               	return
  2640                           
  2641                           ;main.c: 102:                 tmr1_flag = 0;
  2642  028E  01C2               	clrf	_tmr1_flag	;volatile
  2643                           
  2644                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  2645  028F  3182  22B0  3182   	fcall	_RGB_AWAIT_AFE_CONN
  2646  0292  3181  2155  3182   	fcall	_beginAFEcommunication
  2647                           
  2648                           ;main.c: 108:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  2649  0295  3039               	movlw	low (STR_1| (0+32768))
  2650  0296  00F2               	movwf	EUSART_Write_Text@text
  2651  0297  3082               	movlw	high (STR_1| (0+32768))
  2652  0298  00F3               	movwf	EUSART_Write_Text@text+1
  2653  0299  3183  2331         	fcall	_EUSART_Write_Text
  2654  029B  0008               	return
  2655  029C                     l1507:	
  2656                           
  2657                           ;main.c: 129:             init_AFE();
  2658  029C  3183  23F9         	fcall	_init_AFE
  2659                           
  2660                           ;main.c: 134:             break;
  2661  029E  0008               	return
  2662  029F                     l1511:	
  2663                           
  2664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2665                           ; Switch size 1, requested type "simple"
  2666                           ; Number of cases is 1, Range of values is 0 to 0
  2667                           ; switch strategies available:
  2668                           ; Name         Instructions Cycles
  2669                           ; simple_byte            4     3 (average)
  2670                           ; direct_byte            8     6 (fixed)
  2671                           ; jumptable            260     6 (fixed)
  2672                           ;	Chosen strategy is simple_byte
  2673  029F  3000               	movlw	0
  2674  02A0  3A00               	xorlw	0	; case 0
  2675  02A1  1903               	skipnz
  2676  02A2  2AA4               	goto	l1571
  2677  02A3  2AAF               	goto	l115
  2678  02A4                     l1571:	
  2679                           
  2680                           ; Switch size 1, requested type "simple"
  2681                           ; Number of cases is 3, Range of values is 0 to 2
  2682                           ; switch strategies available:
  2683                           ; Name         Instructions Cycles
  2684                           ; simple_byte           10     6 (average)
  2685                           ; direct_byte           12     6 (fixed)
  2686                           ; jumptable            260     6 (fixed)
  2687                           ;	Chosen strategy is simple_byte
  2688  02A4  3000               	movlw	0
  2689  02A5  3A00               	xorlw	0	; case 0
  2690  02A6  1903               	skipnz
  2691  02A7  2A8A               	goto	l1483
  2692  02A8  3A01               	xorlw	1	; case 1
  2693  02A9  1903               	skipnz
  2694  02AA  2A9C               	goto	l1507
  2695  02AB  3A03               	xorlw	3	; case 2
  2696  02AC  1903               	skipnz
  2697  02AD  2AAF               	goto	l115
  2698  02AE  2AAF               	goto	l115
  2699  02AF                     l115:	
  2700  02AF  0008               	return
  2701  02B0                     __end_of_statemachine:	
  2702                           
  2703                           	psect	text2
  2704  03F9                     __ptext2:	
  2705 ;; *************** function _init_AFE *****************
  2706 ;; Defined at:
  2707 ;;		line 141 in file "main.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;		None
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		None
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2725 ;;Total ram usage:        0 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; Hardware stack levels required when called:    1
  2728 ;; This function calls:
  2729 ;;		Nothing
  2730 ;; This function is called by:
  2731 ;;		_statemachine
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           
  2736                           ;psect for function _init_AFE
  2737  03F9                     _init_AFE:	
  2738                           
  2739                           ;incstack = 0
  2740                           ; Regs used in _init_AFE: []
  2741  03F9  0008               	return
  2742  03FA                     __end_of_init_AFE:	
  2743                           
  2744                           	psect	text3
  2745  0155                     __ptext3:	
  2746 ;; *************** function _beginAFEcommunication *****************
  2747 ;; Defined at:
  2748 ;;		line 7 in file "BQ76920.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  i               2    4[BANK0 ] int 
  2753 ;;  errCode         2    2[BANK0 ] int 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  2    0[BANK0 ] int 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2763 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2764 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2766 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2767 ;;Total ram usage:        7 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    3
  2770 ;; This function calls:
  2771 ;;		_I2C_writeRegister
  2772 ;;		_readRegister
  2773 ;; This function is called by:
  2774 ;;		_statemachine
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           
  2779                           ;psect for function _beginAFEcommunication
  2780  0155                     _beginAFEcommunication:	
  2781                           
  2782                           ;BQ76920.c: 9:    int errCode = 0;
  2783                           
  2784                           ;incstack = 0
  2785                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2786  0155  0020               	movlb	0	; select bank0
  2787  0156  01A2               	clrf	beginAFEcommunication@errCode
  2788  0157  01A3               	clrf	beginAFEcommunication@errCode+1
  2789                           
  2790                           ;BQ76920.c: 12:   for (int i = 0; i < 4; i++) {
  2791  0158  01A4               	clrf	beginAFEcommunication@i
  2792  0159  01A5               	clrf	beginAFEcommunication@i+1
  2793  015A                     l1469:	
  2794                           
  2795                           ;BQ76920.c: 13:     cellVoltages[i] = 0;
  2796  015A  0020               	movlb	0	; select bank0
  2797  015B  3524               	lslf	beginAFEcommunication@i,w
  2798  015C  3E37               	addlw	(low (_cellVoltages| 0))& (0+255)
  2799  015D  0086               	movwf	6
  2800  015E  0187               	clrf	7
  2801  015F  3000               	movlw	0
  2802  0160  3FC0               	movwi [0]fsr1
  2803  0161  3FC1               	movwi [1]fsr1
  2804                           
  2805                           ;BQ76920.c: 14:   }
  2806  0162  3001               	movlw	1
  2807  0163  07A4               	addwf	beginAFEcommunication@i,f
  2808  0164  3000               	movlw	0
  2809  0165  3DA5               	addwfc	beginAFEcommunication@i+1,f
  2810  0166  0825               	movf	beginAFEcommunication@i+1,w
  2811  0167  3A80               	xorlw	128
  2812  0168  00FB               	movwf	??_beginAFEcommunication
  2813  0169  3080               	movlw	128
  2814  016A  027B               	subwf	??_beginAFEcommunication,w
  2815  016B  1D03               	skipz
  2816  016C  296F               	goto	u755
  2817  016D  3004               	movlw	4
  2818  016E  0224               	subwf	beginAFEcommunication@i,w
  2819  016F                     u755:	
  2820  016F  1C03               	skipc
  2821  0170  295A               	goto	l1469
  2822                           
  2823                           ;BQ76920.c: 18:    I2C_writeRegister(0x18,0x0B,0x19);
  2824  0171  3018               	movlw	24
  2825  0172  00F5               	movwf	I2C_writeRegister@slaveAddress
  2826  0173  3000               	movlw	0
  2827  0174  00F6               	movwf	I2C_writeRegister@slaveAddress+1
  2828  0175  300B               	movlw	11
  2829  0176  00F7               	movwf	I2C_writeRegister@regAddress
  2830  0177  3000               	movlw	0
  2831  0178  00F8               	movwf	I2C_writeRegister@regAddress+1
  2832  0179  3019               	movlw	25
  2833  017A  00F9               	movwf	I2C_writeRegister@data
  2834  017B  3000               	movlw	0
  2835  017C  00FA               	movwf	I2C_writeRegister@data+1
  2836  017D  3183  2313  3181   	fcall	_I2C_writeRegister
  2837                           
  2838                           ;BQ76920.c: 20:    if(readRegister(0x18,0x0B)==0x19){
  2839  0180  3018               	movlw	24
  2840  0181  00F5               	movwf	readRegister@slaveAddress
  2841  0182  3000               	movlw	0
  2842  0183  00F6               	movwf	readRegister@slaveAddress+1
  2843  0184  300B               	movlw	11
  2844  0185  00F7               	movwf	readRegister@regAddress
  2845  0186  3000               	movlw	0
  2846  0187  00F8               	movwf	readRegister@regAddress+1
  2847  0188  3181  21D3  3181   	fcall	_readRegister
  2848  018B  3019               	movlw	25
  2849  018C  0675               	xorwf	?_readRegister,w
  2850  018D  0476               	iorwf	?_readRegister+1,w
  2851  018E  1D03               	btfss	3,2
  2852  018F  2995               	goto	l322
  2853                           
  2854                           ;BQ76920.c: 21:     errCode =1;
  2855  0190  3001               	movlw	1
  2856  0191  0020               	movlb	0	; select bank0
  2857  0192  00A2               	movwf	beginAFEcommunication@errCode
  2858  0193  3000               	movlw	0
  2859  0194  00A3               	movwf	beginAFEcommunication@errCode+1
  2860  0195                     l322:	
  2861                           ;BQ76920.c: 22:    }
  2862                           
  2863                           
  2864                           ;BQ76920.c: 26:   return errCode;
  2865  0195  0020               	movlb	0	; select bank0
  2866  0196  0823               	movf	beginAFEcommunication@errCode+1,w
  2867  0197  00A1               	movwf	?_beginAFEcommunication+1
  2868  0198  0822               	movf	beginAFEcommunication@errCode,w
  2869  0199  00A0               	movwf	?_beginAFEcommunication
  2870  019A  0008               	return
  2871  019B                     __end_of_beginAFEcommunication:	
  2872                           
  2873                           	psect	text4
  2874  01D3                     __ptext4:	
  2875 ;; *************** function _readRegister *****************
  2876 ;; Defined at:
  2877 ;;		line 129 in file "I2C.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  slaveAddress    2    5[COMMON] int 
  2880 ;;  regAddress      2    7[COMMON] int 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  recievedData    2    9[COMMON] int 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  2    5[COMMON] int 
  2885 ;; Registers used:
  2886 ;;		wreg, status,2, status,0, pclath, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2895 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2896 ;;Total ram usage:        6 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    2
  2899 ;; This function calls:
  2900 ;;		_read_I2C_data
  2901 ;;		_send_I2C_NACK
  2902 ;;		_send_I2C_controlByte
  2903 ;;		_send_I2C_data
  2904 ;;		_send_I2C_startBit
  2905 ;;		_send_I2C_stopBit
  2906 ;; This function is called by:
  2907 ;;		_beginAFEcommunication
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           
  2912                           ;psect for function _readRegister
  2913  01D3                     _readRegister:	
  2914                           
  2915                           ;I2C.c: 130:     int recievedData;;I2C.c: 131:     send_I2C_startBit();
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
  2919  01D3  3183  23DB  3181   	fcall	_send_I2C_startBit
  2920                           
  2921                           ;I2C.c: 132:     send_I2C_controlByte(slaveAddress, 0);
  2922  01D6  0876               	movf	readRegister@slaveAddress+1,w
  2923  01D7  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
  2924  01D8  0875               	movf	readRegister@slaveAddress,w
  2925  01D9  00F1               	movwf	send_I2C_controlByte@BlockAddress
  2926  01DA  3000               	movlw	0
  2927  01DB  00F3               	movwf	send_I2C_controlByte@RW_bit
  2928  01DC  00F4               	movwf	send_I2C_controlByte@RW_bit+1
  2929  01DD  3183  2396  3181   	fcall	_send_I2C_controlByte
  2930                           
  2931                           ;I2C.c: 133:     send_I2C_data(regAddress);
  2932  01E0  0878               	movf	readRegister@regAddress+1,w
  2933  01E1  00F2               	movwf	send_I2C_data@databyte+1
  2934  01E2  0877               	movf	readRegister@regAddress,w
  2935  01E3  00F1               	movwf	send_I2C_data@databyte
  2936  01E4  3183  23A9  3181   	fcall	_send_I2C_data
  2937                           
  2938                           ;I2C.c: 134:     send_I2C_stopBit();
  2939  01E7  3183  23D3  3181   	fcall	_send_I2C_stopBit
  2940                           
  2941                           ;I2C.c: 135:     send_I2C_startBit();
  2942  01EA  3183  23DB  3181   	fcall	_send_I2C_startBit
  2943                           
  2944                           ;I2C.c: 136:     send_I2C_controlByte(slaveAddress, 1);
  2945  01ED  0876               	movf	readRegister@slaveAddress+1,w
  2946  01EE  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
  2947  01EF  0875               	movf	readRegister@slaveAddress,w
  2948  01F0  00F1               	movwf	send_I2C_controlByte@BlockAddress
  2949  01F1  3001               	movlw	1
  2950  01F2  00F3               	movwf	send_I2C_controlByte@RW_bit
  2951  01F3  3000               	movlw	0
  2952  01F4  00F4               	movwf	send_I2C_controlByte@RW_bit+1
  2953  01F5  3183  2396  3181   	fcall	_send_I2C_controlByte
  2954                           
  2955                           ;I2C.c: 137:     recievedData = read_I2C_data();
  2956  01F8  3183  236B  3181   	fcall	_read_I2C_data
  2957  01FB  0872               	movf	?_read_I2C_data+1,w
  2958  01FC  00FA               	movwf	readRegister@recievedData+1
  2959  01FD  0871               	movf	?_read_I2C_data,w
  2960  01FE  00F9               	movwf	readRegister@recievedData
  2961                           
  2962                           ;I2C.c: 138:     send_I2C_NACK();
  2963  01FF  3183  23A0  3181   	fcall	_send_I2C_NACK
  2964                           
  2965                           ;I2C.c: 139:     send_I2C_stopBit();
  2966  0202  3183  23D3         	fcall	_send_I2C_stopBit
  2967                           
  2968                           ;I2C.c: 140:     return recievedData;
  2969  0204  087A               	movf	readRegister@recievedData+1,w
  2970  0205  00F6               	movwf	?_readRegister+1
  2971  0206  0879               	movf	readRegister@recievedData,w
  2972  0207  00F5               	movwf	?_readRegister
  2973  0208  0008               	return
  2974  0209                     __end_of_readRegister:	
  2975                           
  2976                           	psect	text5
  2977  03A0                     __ptext5:	
  2978 ;; *************** function _send_I2C_NACK *****************
  2979 ;; Defined at:
  2980 ;;		line 83 in file "I2C.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		None
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2998 ;;Total ram usage:        0 bytes
  2999 ;; Hardware stack levels used:    1
  3000 ;; Hardware stack levels required when called:    1
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_readRegister
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           
  3009                           ;psect for function _send_I2C_NACK
  3010  03A0                     _send_I2C_NACK:	
  3011                           
  3012                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _send_I2C_NACK: []
  3016  03A0  0020               	movlb	0	; select bank0
  3017  03A1  1191               	bcf	17,3	;volatile
  3018                           
  3019                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
  3020  03A2  0024               	movlb	4	; select bank4
  3021  03A3  1696               	bsf	22,5	;volatile
  3022                           
  3023                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
  3024  03A4  1616               	bsf	22,4	;volatile
  3025  03A5                     l263:	
  3026                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
  3027                           
  3028  03A5  0020               	movlb	0	; select bank0
  3029  03A6  1991               	btfsc	17,3	;volatile
  3030  03A7  0008               	return
  3031  03A8  2BA5               	goto	l263
  3032  03A9                     __end_of_send_I2C_NACK:	
  3033                           
  3034                           	psect	text6
  3035  036B                     __ptext6:	
  3036 ;; *************** function _read_I2C_data *****************
  3037 ;; Defined at:
  3038 ;;		line 42 in file "I2C.c"
  3039 ;; Parameters:    Size  Location     Type
  3040 ;;		None
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;		None
  3043 ;; Return value:  Size  Location     Type
  3044 ;;                  2    1[COMMON] unsigned int 
  3045 ;; Registers used:
  3046 ;;		wreg
  3047 ;; Tracked objects:
  3048 ;;		On entry : 0/0
  3049 ;;		On exit  : 0/0
  3050 ;;		Unchanged: 0/0
  3051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3054 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3055 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3056 ;;Total ram usage:        4 bytes
  3057 ;; Hardware stack levels used:    1
  3058 ;; Hardware stack levels required when called:    1
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		_readRegister
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           
  3067                           ;psect for function _read_I2C_data
  3068  036B                     _read_I2C_data:	
  3069                           
  3070                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
  3071                           
  3072                           ;incstack = 0
  3073                           ; Regs used in _read_I2C_data: [wreg]
  3074  036B  0020               	movlb	0	; select bank0
  3075  036C  1191               	bcf	17,3	;volatile
  3076                           
  3077                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
  3078  036D  0024               	movlb	4	; select bank4
  3079  036E  1596               	bsf	22,3	;volatile
  3080  036F                     l233:	
  3081                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
  3082                           
  3083  036F  0020               	movlb	0	; select bank0
  3084  0370  1D91               	btfss	17,3	;volatile
  3085  0371  2B6F               	goto	l233
  3086                           
  3087                           ;I2C.c: 46:     return (SSPBUF);
  3088  0372  0024               	movlb	4	; select bank4
  3089  0373  0811               	movf	17,w	;volatile
  3090  0374  00F3               	movwf	??_read_I2C_data
  3091  0375  01F4               	clrf	??_read_I2C_data+1
  3092  0376  0873               	movf	??_read_I2C_data,w
  3093  0377  00F1               	movwf	?_read_I2C_data
  3094  0378  0874               	movf	??_read_I2C_data+1,w
  3095  0379  00F2               	movwf	?_read_I2C_data+1
  3096  037A  0008               	return
  3097  037B                     __end_of_read_I2C_data:	
  3098                           
  3099                           	psect	text7
  3100  0313                     __ptext7:	
  3101 ;; *************** function _I2C_writeRegister *****************
  3102 ;; Defined at:
  3103 ;;		line 118 in file "I2C.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  slaveAddress    2    5[COMMON] int 
  3106 ;;  regAddress      2    7[COMMON] int 
  3107 ;;  data            2    9[COMMON] int 
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;		None
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, status,2, status,0, pclath, cstack
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3119 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3122 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3123 ;;Total ram usage:        6 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    2
  3126 ;; This function calls:
  3127 ;;		_send_I2C_controlByte
  3128 ;;		_send_I2C_data
  3129 ;;		_send_I2C_startBit
  3130 ;;		_send_I2C_stopBit
  3131 ;; This function is called by:
  3132 ;;		_beginAFEcommunication
  3133 ;; This function uses a non-reentrant model
  3134 ;;
  3135                           
  3136                           
  3137                           ;psect for function _I2C_writeRegister
  3138  0313                     _I2C_writeRegister:	
  3139                           
  3140                           ;I2C.c: 119:     send_I2C_startBit();
  3141                           
  3142                           ;incstack = 0
  3143                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
  3144  0313  3183  23DB  3183   	fcall	_send_I2C_startBit
  3145                           
  3146                           ;I2C.c: 120:     send_I2C_controlByte(slaveAddress, 0);
  3147  0316  0876               	movf	I2C_writeRegister@slaveAddress+1,w
  3148  0317  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
  3149  0318  0875               	movf	I2C_writeRegister@slaveAddress,w
  3150  0319  00F1               	movwf	send_I2C_controlByte@BlockAddress
  3151  031A  3000               	movlw	0
  3152  031B  00F3               	movwf	send_I2C_controlByte@RW_bit
  3153  031C  00F4               	movwf	send_I2C_controlByte@RW_bit+1
  3154  031D  3183  2396  3183   	fcall	_send_I2C_controlByte
  3155                           
  3156                           ;I2C.c: 121:     send_I2C_data(regAddress);
  3157  0320  0878               	movf	I2C_writeRegister@regAddress+1,w
  3158  0321  00F2               	movwf	send_I2C_data@databyte+1
  3159  0322  0877               	movf	I2C_writeRegister@regAddress,w
  3160  0323  00F1               	movwf	send_I2C_data@databyte
  3161  0324  3183  23A9  3183   	fcall	_send_I2C_data
  3162                           
  3163                           ;I2C.c: 122:     send_I2C_data(data);
  3164  0327  087A               	movf	I2C_writeRegister@data+1,w
  3165  0328  00F2               	movwf	send_I2C_data@databyte+1
  3166  0329  0879               	movf	I2C_writeRegister@data,w
  3167  032A  00F1               	movwf	send_I2C_data@databyte
  3168  032B  3183  23A9  3183   	fcall	_send_I2C_data
  3169                           
  3170                           ;I2C.c: 123:     send_I2C_stopBit();
  3171  032E  3183  23D3         	fcall	_send_I2C_stopBit
  3172  0330  0008               	return
  3173  0331                     __end_of_I2C_writeRegister:	
  3174                           
  3175                           	psect	text8
  3176  03D3                     __ptext8:	
  3177 ;; *************** function _send_I2C_stopBit *****************
  3178 ;; Defined at:
  3179 ;;		line 70 in file "I2C.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;		None
  3182 ;; Auto vars:     Size  Location     Type
  3183 ;;		None
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		None
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3197 ;;Total ram usage:        0 bytes
  3198 ;; Hardware stack levels used:    1
  3199 ;; Hardware stack levels required when called:    1
  3200 ;; This function calls:
  3201 ;;		Nothing
  3202 ;; This function is called by:
  3203 ;;		_I2C_writeRegister
  3204 ;;		_readRegister
  3205 ;;		_retrieve_data_ATmega328
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           
  3210                           ;psect for function _send_I2C_stopBit
  3211  03D3                     _send_I2C_stopBit:	
  3212                           
  3213                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
  3214                           
  3215                           ;incstack = 0
  3216                           ; Regs used in _send_I2C_stopBit: []
  3217  03D3  0020               	movlb	0	; select bank0
  3218  03D4  1191               	bcf	17,3	;volatile
  3219                           
  3220                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
  3221  03D5  0024               	movlb	4	; select bank4
  3222  03D6  1516               	bsf	22,2	;volatile
  3223  03D7                     l251:	
  3224                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
  3225                           
  3226  03D7  0020               	movlb	0	; select bank0
  3227  03D8  1991               	btfsc	17,3	;volatile
  3228  03D9  0008               	return
  3229  03DA  2BD7               	goto	l251
  3230  03DB                     __end_of_send_I2C_stopBit:	
  3231                           
  3232                           	psect	text9
  3233  03DB                     __ptext9:	
  3234 ;; *************** function _send_I2C_startBit *****************
  3235 ;; Defined at:
  3236 ;;		line 64 in file "I2C.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;		None
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;                  1    wreg      void 
  3243 ;; Registers used:
  3244 ;;		None
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3254 ;;Total ram usage:        0 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    1
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_I2C_writeRegister
  3261 ;;		_readRegister
  3262 ;;		_retrieve_data_ATmega328
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           
  3267                           ;psect for function _send_I2C_startBit
  3268  03DB                     _send_I2C_startBit:	
  3269                           
  3270                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
  3271                           
  3272                           ;incstack = 0
  3273                           ; Regs used in _send_I2C_startBit: []
  3274  03DB  0020               	movlb	0	; select bank0
  3275  03DC  1191               	bcf	17,3	;volatile
  3276                           
  3277                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
  3278  03DD  0024               	movlb	4	; select bank4
  3279  03DE  1416               	bsf	22,0	;volatile
  3280  03DF                     l245:	
  3281                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
  3282                           
  3283  03DF  0020               	movlb	0	; select bank0
  3284  03E0  1991               	btfsc	17,3	;volatile
  3285  03E1  0008               	return
  3286  03E2  2BDF               	goto	l245
  3287  03E3                     __end_of_send_I2C_startBit:	
  3288                           
  3289                           	psect	text10
  3290  03A9                     __ptext10:	
  3291 ;; *************** function _send_I2C_data *****************
  3292 ;; Defined at:
  3293 ;;		line 33 in file "I2C.c"
  3294 ;; Parameters:    Size  Location     Type
  3295 ;;  databyte        2    1[COMMON] unsigned int 
  3296 ;; Auto vars:     Size  Location     Type
  3297 ;;		None
  3298 ;; Return value:  Size  Location     Type
  3299 ;;                  1    wreg      void 
  3300 ;; Registers used:
  3301 ;;		wreg
  3302 ;; Tracked objects:
  3303 ;;		On entry : 0/0
  3304 ;;		On exit  : 0/0
  3305 ;;		Unchanged: 0/0
  3306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3307 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3310 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3311 ;;Total ram usage:        2 bytes
  3312 ;; Hardware stack levels used:    1
  3313 ;; Hardware stack levels required when called:    1
  3314 ;; This function calls:
  3315 ;;		Nothing
  3316 ;; This function is called by:
  3317 ;;		_I2C_writeRegister
  3318 ;;		_readRegister
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function _send_I2C_data
  3324  03A9                     _send_I2C_data:	
  3325                           
  3326                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
  3327                           
  3328                           ;incstack = 0
  3329                           ; Regs used in _send_I2C_data: [wreg]
  3330  03A9  0020               	movlb	0	; select bank0
  3331  03AA  1191               	bcf	17,3	;volatile
  3332                           
  3333                           ;I2C.c: 35:     SSPBUF = databyte;
  3334  03AB  0871               	movf	send_I2C_data@databyte,w
  3335  03AC  0024               	movlb	4	; select bank4
  3336  03AD  0091               	movwf	17	;volatile
  3337  03AE                     l227:	
  3338                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
  3339                           
  3340  03AE  0020               	movlb	0	; select bank0
  3341  03AF  1991               	btfsc	17,3	;volatile
  3342  03B0  0008               	return
  3343  03B1  2BAE               	goto	l227
  3344  03B2                     __end_of_send_I2C_data:	
  3345                           
  3346                           	psect	text11
  3347  0396                     __ptext11:	
  3348 ;; *************** function _send_I2C_controlByte *****************
  3349 ;; Defined at:
  3350 ;;		line 52 in file "I2C.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  BlockAddress    2    1[COMMON] unsigned int 
  3353 ;;  RW_bit          2    3[COMMON] unsigned int 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3365 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3369 ;;Total ram usage:        4 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_I2C_writeRegister
  3376 ;;		_readRegister
  3377 ;;		_retrieve_data_ATmega328
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           
  3382                           ;psect for function _send_I2C_controlByte
  3383  0396                     _send_I2C_controlByte:	
  3384                           
  3385                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
  3386                           
  3387                           ;incstack = 0
  3388                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
  3389  0396  0020               	movlb	0	; select bank0
  3390  0397  1191               	bcf	17,3	;volatile
  3391                           
  3392                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
  3393  0398  3571               	lslf	send_I2C_controlByte@BlockAddress,w
  3394  0399  0773               	addwf	send_I2C_controlByte@RW_bit,w
  3395  039A  0024               	movlb	4	; select bank4
  3396  039B  0091               	movwf	17	;volatile
  3397  039C                     l239:	
  3398                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
  3399                           
  3400  039C  0020               	movlb	0	; select bank0
  3401  039D  1991               	btfsc	17,3	;volatile
  3402  039E  0008               	return
  3403  039F  2B9C               	goto	l239
  3404  03A0                     __end_of_send_I2C_controlByte:	
  3405                           
  3406                           	psect	text12
  3407  02B0                     __ptext12:	
  3408 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
  3409 ;; Defined at:
  3410 ;;		line 43 in file "RGB.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;		None
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;		None
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3428 ;;Total ram usage:        1 bytes
  3429 ;; Hardware stack levels used:    1
  3430 ;; Hardware stack levels required when called:    2
  3431 ;; This function calls:
  3432 ;;		_RGB_color
  3433 ;; This function is called by:
  3434 ;;		_statemachine
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           
  3439                           ;psect for function _RGB_AWAIT_AFE_CONN
  3440  02B0                     _RGB_AWAIT_AFE_CONN:	
  3441                           
  3442                           ;RGB.c: 45:     if (toggleColor) {
  3443                           
  3444                           ;incstack = 0
  3445                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3446  02B0  087C               	movf	_toggleColor,w
  3447  02B1  1903               	btfsc	3,2
  3448  02B2  2AC2               	goto	l1259
  3449                           
  3450                           ;RGB.c: 46:         toggleColor = !toggleColor;
  3451  02B3  087C               	movf	_toggleColor,w
  3452  02B4  1D03               	btfss	3,2
  3453  02B5  2AB8               	goto	u480
  3454  02B6  3001               	movlw	1
  3455  02B7  2AB9               	goto	u490
  3456  02B8                     u480:	
  3457  02B8  3000               	movlw	0
  3458  02B9                     u490:	
  3459  02B9  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
  3460  02BA  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
  3461  02BB  00FC               	movwf	_toggleColor
  3462                           
  3463                           ;RGB.c: 47:         RGB_color(0);
  3464  02BC  3000               	movlw	0
  3465  02BD  00F1               	movwf	RGB_color@color
  3466  02BE  00F2               	movwf	RGB_color@color+1
  3467  02BF  3182  22D2         	fcall	_RGB_color
  3468                           
  3469                           ;RGB.c: 48:     } else {
  3470  02C1  0008               	return
  3471  02C2                     l1259:	
  3472                           
  3473                           ;RGB.c: 49:         toggleColor = !toggleColor;
  3474  02C2  087C               	movf	_toggleColor,w
  3475  02C3  1D03               	btfss	3,2
  3476  02C4  2AC7               	goto	u500
  3477  02C5  3001               	movlw	1
  3478  02C6  2AC8               	goto	u510
  3479  02C7                     u500:	
  3480  02C7  3000               	movlw	0
  3481  02C8                     u510:	
  3482  02C8  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
  3483  02C9  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
  3484  02CA  00FC               	movwf	_toggleColor
  3485                           
  3486                           ;RGB.c: 50:         RGB_color(1);
  3487  02CB  3001               	movlw	1
  3488  02CC  00F1               	movwf	RGB_color@color
  3489  02CD  3000               	movlw	0
  3490  02CE  00F2               	movwf	RGB_color@color+1
  3491  02CF  3182  22D2         	fcall	_RGB_color
  3492  02D1  0008               	return
  3493  02D2                     __end_of_RGB_AWAIT_AFE_CONN:	
  3494                           
  3495                           	psect	text13
  3496  02D2                     __ptext13:	
  3497 ;; *************** function _RGB_color *****************
  3498 ;; Defined at:
  3499 ;;		line 17 in file "RGB.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;  color           2    1[COMMON] int 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3517 ;;Total ram usage:        2 bytes
  3518 ;; Hardware stack levels used:    1
  3519 ;; Hardware stack levels required when called:    1
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_statemachine
  3524 ;;		_RGB_AWAIT_AFE_CONN
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _RGB_color
  3530  02D2                     _RGB_color:	
  3531                           
  3532                           ;RGB.c: 19:     switch (color) {
  3533                           
  3534                           ;incstack = 0
  3535                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
  3536  02D2  2AE2               	goto	l1215
  3537  02D3                     l288:	
  3538                           ;RGB.c: 20:         case 0:
  3539                           
  3540                           
  3541                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
  3542  02D3  0022               	movlb	2	; select bank2
  3543  02D4  120C               	bcf	12,4	;volatile
  3544                           
  3545                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
  3546  02D5  168C               	bsf	12,5	;volatile
  3547                           
  3548                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
  3549  02D6  1410               	bsf	16,0	;volatile
  3550                           
  3551                           ;RGB.c: 24:             break;
  3552  02D7  0008               	return
  3553  02D8                     l290:	
  3554                           ;RGB.c: 25:         case 1:
  3555                           
  3556                           
  3557                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
  3558  02D8  0022               	movlb	2	; select bank2
  3559  02D9  160C               	bsf	12,4	;volatile
  3560                           
  3561                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
  3562  02DA  128C               	bcf	12,5	;volatile
  3563                           
  3564                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
  3565  02DB  1410               	bsf	16,0	;volatile
  3566                           
  3567                           ;RGB.c: 29:             break;
  3568  02DC  0008               	return
  3569  02DD                     l291:	
  3570                           ;RGB.c: 30:         case 2:
  3571                           
  3572                           
  3573                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
  3574  02DD  0022               	movlb	2	; select bank2
  3575  02DE  160C               	bsf	12,4	;volatile
  3576                           
  3577                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
  3578  02DF  168C               	bsf	12,5	;volatile
  3579                           
  3580                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
  3581  02E0  1010               	bcf	16,0	;volatile
  3582                           
  3583                           ;RGB.c: 34:             break;
  3584  02E1  0008               	return
  3585  02E2                     l1215:	
  3586                           
  3587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3588                           ; Switch size 1, requested type "simple"
  3589                           ; Number of cases is 1, Range of values is 0 to 0
  3590                           ; switch strategies available:
  3591                           ; Name         Instructions Cycles
  3592                           ; simple_byte            4     3 (average)
  3593                           ; direct_byte            8     6 (fixed)
  3594                           ; jumptable            260     6 (fixed)
  3595                           ;	Chosen strategy is simple_byte
  3596  02E2  0872               	movf	RGB_color@color+1,w
  3597  02E3  3A00               	xorlw	0	; case 0
  3598  02E4  1903               	skipnz
  3599  02E5  2AE7               	goto	l1573
  3600  02E6  2AF2               	goto	l292
  3601  02E7                     l1573:	
  3602                           
  3603                           ; Switch size 1, requested type "simple"
  3604                           ; Number of cases is 3, Range of values is 0 to 2
  3605                           ; switch strategies available:
  3606                           ; Name         Instructions Cycles
  3607                           ; simple_byte           10     6 (average)
  3608                           ; direct_byte           12     6 (fixed)
  3609                           ; jumptable            260     6 (fixed)
  3610                           ;	Chosen strategy is simple_byte
  3611  02E7  0871               	movf	RGB_color@color,w
  3612  02E8  3A00               	xorlw	0	; case 0
  3613  02E9  1903               	skipnz
  3614  02EA  2AD3               	goto	l288
  3615  02EB  3A01               	xorlw	1	; case 1
  3616  02EC  1903               	skipnz
  3617  02ED  2AD8               	goto	l290
  3618  02EE  3A03               	xorlw	3	; case 2
  3619  02EF  1903               	skipnz
  3620  02F0  2ADD               	goto	l291
  3621  02F1  2AF2               	goto	l292
  3622  02F2                     l292:	
  3623  02F2  0008               	return
  3624  02F3                     __end_of_RGB_color:	
  3625                           
  3626                           	psect	text14
  3627  0331                     __ptext14:	
  3628 ;; *************** function _EUSART_Write_Text *****************
  3629 ;; Defined at:
  3630 ;;		line 75 in file "EUSART.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  text            2    2[COMMON] PTR unsigned char 
  3633 ;;		 -> STR_2(46), STR_1(40), 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  i               2    5[COMMON] int 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3648 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3649 ;;Total ram usage:        5 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    2
  3652 ;; This function calls:
  3653 ;;		_EUSART_Write
  3654 ;; This function is called by:
  3655 ;;		_statemachine
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           
  3660                           ;psect for function _EUSART_Write_Text
  3661  0331                     _EUSART_Write_Text:	
  3662                           
  3663                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
  3664                           
  3665                           ;incstack = 0
  3666                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3667  0331  01F5               	clrf	EUSART_Write_Text@i
  3668  0332  01F6               	clrf	EUSART_Write_Text@i+1
  3669  0333                     l1287:	
  3670  0333  0872               	movf	EUSART_Write_Text@text,w
  3671  0334  0775               	addwf	EUSART_Write_Text@i,w
  3672  0335  0084               	movwf	4
  3673  0336  0873               	movf	EUSART_Write_Text@text+1,w
  3674  0337  3D76               	addwfc	EUSART_Write_Text@i+1,w
  3675  0338  0085               	movwf	5
  3676  0339  0012               	moviw fsr0++
  3677  033A  1903               	btfsc	3,2
  3678  033B  0008               	return
  3679                           
  3680                           ;EUSART.c: 79:    EUSART_Write(text[i]);
  3681  033C  0872               	movf	EUSART_Write_Text@text,w
  3682  033D  0775               	addwf	EUSART_Write_Text@i,w
  3683  033E  0084               	movwf	4
  3684  033F  0873               	movf	EUSART_Write_Text@text+1,w
  3685  0340  3D76               	addwfc	EUSART_Write_Text@i+1,w
  3686  0341  0085               	movwf	5
  3687  0342  0800               	movf	0,w	;code access
  3688  0343  3183  23E3  3183   	fcall	_EUSART_Write
  3689  0346  3001               	movlw	1
  3690  0347  07F5               	addwf	EUSART_Write_Text@i,f
  3691  0348  3000               	movlw	0
  3692  0349  3DF6               	addwfc	EUSART_Write_Text@i+1,f
  3693  034A  2B33               	goto	l1287
  3694  034B                     __end_of_EUSART_Write_Text:	
  3695                           
  3696                           	psect	text15
  3697  03E3                     __ptext15:	
  3698 ;; *************** function _EUSART_Write *****************
  3699 ;; Defined at:
  3700 ;;		line 56 in file "EUSART.c"
  3701 ;; Parameters:    Size  Location     Type
  3702 ;;  txData          1    wreg     unsigned char 
  3703 ;; Auto vars:     Size  Location     Type
  3704 ;;  txData          1    1[COMMON] unsigned char 
  3705 ;; Return value:  Size  Location     Type
  3706 ;;                  1    wreg      void 
  3707 ;; Registers used:
  3708 ;;		wreg
  3709 ;; Tracked objects:
  3710 ;;		On entry : 0/0
  3711 ;;		On exit  : 0/0
  3712 ;;		Unchanged: 0/0
  3713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3715 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3718 ;;Total ram usage:        1 bytes
  3719 ;; Hardware stack levels used:    1
  3720 ;; Hardware stack levels required when called:    1
  3721 ;; This function calls:
  3722 ;;		Nothing
  3723 ;; This function is called by:
  3724 ;;		_EUSART_Write_Text
  3725 ;; This function uses a non-reentrant model
  3726 ;;
  3727                           
  3728                           
  3729                           ;psect for function _EUSART_Write
  3730  03E3                     _EUSART_Write:	
  3731                           
  3732                           ;incstack = 0
  3733                           ; Regs used in _EUSART_Write: [wreg]
  3734                           ;EUSART_Write@txData stored from wreg
  3735  03E3  00F1               	movwf	EUSART_Write@txData
  3736  03E4                     l192:	
  3737                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
  3738                           
  3739                           
  3740                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
  3741  03E4  0020               	movlb	0	; select bank0
  3742  03E5  1E11               	btfss	17,4	;volatile
  3743  03E6  2BE4               	goto	l192
  3744                           
  3745                           ;EUSART.c: 62:     TX1REG = txData;
  3746  03E7  0871               	movf	EUSART_Write@txData,w
  3747  03E8  0023               	movlb	3	; select bank3
  3748  03E9  009A               	movwf	26	;volatile
  3749  03EA  0008               	return
  3750  03EB                     __end_of_EUSART_Write:	
  3751                           
  3752                           	psect	text16
  3753  038B                     __ptext16:	
  3754 ;; *************** function _init_TMR1 *****************
  3755 ;; Defined at:
  3756 ;;		line 166 in file "main.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;		None
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;		None
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      void 
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3774 ;;Total ram usage:        0 bytes
  3775 ;; Hardware stack levels used:    1
  3776 ;; Hardware stack levels required when called:    1
  3777 ;; This function calls:
  3778 ;;		Nothing
  3779 ;; This function is called by:
  3780 ;;		_main
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function _init_TMR1
  3786  038B                     _init_TMR1:	
  3787                           
  3788                           ;main.c: 169:     T1CONbits.T1CKPS = 0b00;
  3789                           
  3790                           ;incstack = 0
  3791                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
  3792  038B  30CF               	movlw	-49
  3793  038C  0020               	movlb	0	; select bank0
  3794  038D  0598               	andwf	24,f	;volatile
  3795                           
  3796                           ;main.c: 171:     TMR1 = 0;
  3797  038E  0196               	clrf	22	;volatile
  3798  038F  0197               	clrf	23	;volatile
  3799                           
  3800                           ;main.c: 173:     T1CONbits.TMR1ON = 1;
  3801  0390  1418               	bsf	24,0	;volatile
  3802                           
  3803                           ;main.c: 175:     PIE1bits.TMR1IE = 1;
  3804  0391  0021               	movlb	1	; select bank1
  3805  0392  1411               	bsf	17,0	;volatile
  3806                           
  3807                           ;main.c: 177:     INTCONbits.PEIE = 1;
  3808  0393  170B               	bsf	11,6	;volatile
  3809                           
  3810                           ;main.c: 179:     (INTCONbits.GIE = 1);
  3811  0394  178B               	bsf	11,7	;volatile
  3812  0395  0008               	return
  3813  0396                     __end_of_init_TMR1:	
  3814                           
  3815                           	psect	text17
  3816  03F1                     __ptext17:	
  3817 ;; *************** function _init_RGB *****************
  3818 ;; Defined at:
  3819 ;;		line 6 in file "RGB.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		None
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3837 ;;Total ram usage:        0 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    1
  3840 ;; This function calls:
  3841 ;;		Nothing
  3842 ;; This function is called by:
  3843 ;;		_main
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           
  3848                           ;psect for function _init_RGB
  3849  03F1                     _init_RGB:	
  3850                           
  3851                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
  3852                           
  3853                           ;incstack = 0
  3854                           ; Regs used in _init_RGB: []
  3855  03F1  0022               	movlb	2	; select bank2
  3856  03F2  160C               	bsf	12,4	;volatile
  3857                           
  3858                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
  3859  03F3  168C               	bsf	12,5	;volatile
  3860                           
  3861                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
  3862  03F4  1410               	bsf	16,0	;volatile
  3863  03F5  0008               	return
  3864  03F6                     __end_of_init_RGB:	
  3865                           
  3866                           	psect	text18
  3867  037B                     __ptext18:	
  3868 ;; *************** function _init_I2C *****************
  3869 ;; Defined at:
  3870 ;;		line 10 in file "I2C.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      void 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3886 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3888 ;;Total ram usage:        1 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_main
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function _init_I2C
  3900  037B                     _init_I2C:	
  3901                           
  3902                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
  3903                           
  3904                           ;incstack = 0
  3905                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
  3906  037B  0024               	movlb	4	; select bank4
  3907  037C  0815               	movf	21,w	;volatile
  3908  037D  39F0               	andlw	-16
  3909  037E  3808               	iorlw	8
  3910  037F  0095               	movwf	21	;volatile
  3911                           
  3912                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
  3913  0380  1695               	bsf	21,5	;volatile
  3914                           
  3915                           ;I2C.c: 24:     SSPADD = 39;
  3916  0381  3027               	movlw	39
  3917  0382  0092               	movwf	18	;volatile
  3918                           
  3919                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
  3920  0383  3034               	movlw	52
  3921  0384  00F1               	movwf	??_init_I2C
  3922  0385  30F2               	movlw	242
  3923  0386                     u797:	
  3924  0386  0B89               	decfsz	9,f
  3925  0387  2B86               	goto	u797
  3926  0388  0BF1               	decfsz	??_init_I2C,f
  3927  0389  2B86               	goto	u797
  3928  038A  0008               	return
  3929  038B                     __end_of_init_I2C:	
  3930                           
  3931                           	psect	text19
  3932  019B                     __ptext19:	
  3933 ;; *************** function _init_GPIO *****************
  3934 ;; Defined at:
  3935 ;;		line 183 in file "main.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      void 
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3953 ;;Total ram usage:        0 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:    1
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		_main
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           
  3964                           ;psect for function _init_GPIO
  3965  019B                     _init_GPIO:	
  3966                           
  3967                           ;main.c: 189:     TRISBbits.TRISB2 = 0;
  3968                           
  3969                           ;incstack = 0
  3970                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
  3971  019B  0021               	movlb	1	; select bank1
  3972  019C  110D               	bcf	13,2	;volatile
  3973                           
  3974                           ;main.c: 190:     ANSELBbits.ANSB2 = 0;
  3975  019D  0023               	movlb	3	; select bank3
  3976  019E  110D               	bcf	13,2	;volatile
  3977                           
  3978                           ;main.c: 191:     TRISBbits.TRISB3 = 1;
  3979  019F  0021               	movlb	1	; select bank1
  3980  01A0  158D               	bsf	13,3	;volatile
  3981                           
  3982                           ;main.c: 192:     ANSELBbits.ANSB3 = 0;
  3983  01A1  0023               	movlb	3	; select bank3
  3984  01A2  118D               	bcf	13,3	;volatile
  3985                           
  3986                           ;main.c: 197:     ANSELCbits.ANSC4 = 0;
  3987  01A3  120E               	bcf	14,4	;volatile
  3988                           
  3989                           ;main.c: 198:     ANSELCbits.ANSC5 = 0;
  3990  01A4  128E               	bcf	14,5	;volatile
  3991                           
  3992                           ;main.c: 199:     TRISCbits.TRISC4 = 1;
  3993  01A5  0021               	movlb	1	; select bank1
  3994  01A6  160E               	bsf	14,4	;volatile
  3995                           
  3996                           ;main.c: 200:     TRISCbits.TRISC5 = 1;
  3997  01A7  168E               	bsf	14,5	;volatile
  3998                           
  3999                           ;main.c: 209:     TRISAbits.TRISA4 = 0;
  4000  01A8  120C               	bcf	12,4	;volatile
  4001                           
  4002                           ;main.c: 210:     TRISAbits.TRISA5 = 0;
  4003  01A9  128C               	bcf	12,5	;volatile
  4004                           
  4005                           ;main.c: 211:     TRISEbits.TRISE0 = 0;
  4006  01AA  1010               	bcf	16,0	;volatile
  4007                           
  4008                           ;main.c: 217:     PPSLOCK = 0x55;
  4009  01AB  3055               	movlw	85
  4010  01AC  003C               	movlb	28	; select bank28
  4011  01AD  008F               	movwf	15	;volsfr
  4012                           
  4013                           ;main.c: 218:     PPSLOCK = 0xAA;
  4014  01AE  30AA               	movlw	170
  4015  01AF  008F               	movwf	15	;volsfr
  4016                           
  4017                           ;main.c: 219:     PPSLOCKbits.PPSLOCKED = 0x00;
  4018  01B0  100F               	bcf	15,0	;volsfr
  4019                           
  4020                           ;main.c: 223:     RC4PPSbits.RC4PPS = 0x0011;
  4021  01B1  003D               	movlb	29	; select bank29
  4022  01B2  0824               	movf	36,w	;volatile
  4023  01B3  39E0               	andlw	-32
  4024  01B4  3811               	iorlw	17
  4025  01B5  00A4               	movwf	36	;volatile
  4026                           
  4027                           ;main.c: 224:     SSPDATPPSbits.SSPDATPPS = 0x0014;
  4028  01B6  003C               	movlb	28	; select bank28
  4029  01B7  0821               	movf	33,w	;volatile
  4030  01B8  39E0               	andlw	-32
  4031  01B9  3814               	iorlw	20
  4032  01BA  00A1               	movwf	33	;volatile
  4033                           
  4034                           ;main.c: 225:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
  4035  01BB  0820               	movf	32,w	;volatile
  4036  01BC  39E0               	andlw	-32
  4037  01BD  3815               	iorlw	21
  4038  01BE  00A0               	movwf	32	;volatile
  4039                           
  4040                           ;main.c: 226:     RC5PPSbits.RC5PPS = 0x0010;
  4041  01BF  003D               	movlb	29	; select bank29
  4042  01C0  0825               	movf	37,w	;volatile
  4043  01C1  39E0               	andlw	-32
  4044  01C2  3810               	iorlw	16
  4045  01C3  00A5               	movwf	37	;volatile
  4046                           
  4047                           ;main.c: 229:     RB2PPSbits.RB2PPS = 0x14;
  4048  01C4  081A               	movf	26,w	;volatile
  4049  01C5  39E0               	andlw	-32
  4050  01C6  3814               	iorlw	20
  4051  01C7  009A               	movwf	26	;volatile
  4052                           
  4053                           ;main.c: 230:     RXPPSbits.RXPPS = 0x0B;
  4054  01C8  003C               	movlb	28	; select bank28
  4055  01C9  0824               	movf	36,w	;volatile
  4056  01CA  39E0               	andlw	-32
  4057  01CB  380B               	iorlw	11
  4058  01CC  00A4               	movwf	36	;volatile
  4059                           
  4060                           ;main.c: 232:     PPSLOCK = 0x55;
  4061  01CD  3055               	movlw	85
  4062  01CE  008F               	movwf	15	;volsfr
  4063                           
  4064                           ;main.c: 233:     PPSLOCK = 0xAA;
  4065  01CF  30AA               	movlw	170
  4066  01D0  008F               	movwf	15	;volsfr
  4067                           
  4068                           ;main.c: 234:     PPSLOCKbits.PPSLOCKED = 0x01;
  4069  01D1  140F               	bsf	15,0	;volsfr
  4070  01D2  0008               	return
  4071  01D3                     __end_of_init_GPIO:	
  4072                           
  4073                           	psect	text20
  4074  03F6                     __ptext20:	
  4075 ;; *************** function _initClock *****************
  4076 ;; Defined at:
  4077 ;;		line 157 in file "main.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;		None
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;		None
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  1    wreg      void 
  4084 ;; Registers used:
  4085 ;;		status,2, status,0, pclath, cstack
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4095 ;;Total ram usage:        0 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    2
  4098 ;; This function calls:
  4099 ;;		_internal_16
  4100 ;; This function is called by:
  4101 ;;		_main
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           
  4106                           ;psect for function _initClock
  4107  03F6                     _initClock:	
  4108                           
  4109                           ;main.c: 159:     internal_16();
  4110                           
  4111                           ;incstack = 0
  4112                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
  4113  03F6  3183  23B2         	fcall	_internal_16
  4114  03F8  0008               	return
  4115  03F9                     __end_of_initClock:	
  4116                           
  4117                           	psect	text21
  4118  03B2                     __ptext21:	
  4119 ;; *************** function _internal_16 *****************
  4120 ;; Defined at:
  4121 ;;		line 26 in file "pic16f1719_internals.c"
  4122 ;; Parameters:    Size  Location     Type
  4123 ;;		None
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;		None
  4126 ;; Return value:  Size  Location     Type
  4127 ;;                  1    wreg      void 
  4128 ;; Registers used:
  4129 ;;		None
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4139 ;;Total ram usage:        0 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    1
  4142 ;; This function calls:
  4143 ;;		Nothing
  4144 ;; This function is called by:
  4145 ;;		_initClock
  4146 ;; This function uses a non-reentrant model
  4147 ;;
  4148                           
  4149                           
  4150                           ;psect for function _internal_16
  4151  03B2                     _internal_16:	
  4152                           
  4153                           ;pic16f1719_internals.c: 28: SCS0 = 0;
  4154                           
  4155                           ;incstack = 0
  4156                           ; Regs used in _internal_16: []
  4157  03B2  0021               	movlb	1	; select bank1
  4158  03B3  1019               	bcf	25,0	;volatile
  4159                           
  4160                           ;pic16f1719_internals.c: 29: SCS1 = 0;
  4161  03B4  1099               	bcf	25,1	;volatile
  4162                           
  4163                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
  4164  03B5  1599               	bsf	25,3	;volatile
  4165                           
  4166                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
  4167  03B6  1619               	bsf	25,4	;volatile
  4168                           
  4169                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
  4170  03B7  1699               	bsf	25,5	;volatile
  4171                           
  4172                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
  4173  03B8  1719               	bsf	25,6	;volatile
  4174                           
  4175                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
  4176  03B9  1399               	bcf	25,7	;volatile
  4177  03BA  0008               	return
  4178  03BB                     __end_of_internal_16:	
  4179                           
  4180                           	psect	text22
  4181  002B                     __ptext22:	
  4182 ;; *************** function _EUSART_Initialize *****************
  4183 ;; Defined at:
  4184 ;;		line 6 in file "EUSART.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  baudrate        4    6[BANK0 ] const long 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  x               2   10[COMMON] unsigned int 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      unsigned char 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0, pclath, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4198 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4200 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4201 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4202 ;;Total ram usage:       18 bytes
  4203 ;; Hardware stack levels used:    1
  4204 ;; Hardware stack levels required when called:    2
  4205 ;; This function calls:
  4206 ;;		___aldiv
  4207 ;; This function is called by:
  4208 ;;		_main
  4209 ;; This function uses a non-reentrant model
  4210 ;;
  4211                           
  4212                           
  4213                           ;psect for function _EUSART_Initialize
  4214  002B                     _EUSART_Initialize:	
  4215                           
  4216                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
  4217                           
  4218                           ;incstack = 0
  4219                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4220  002B  0020               	movlb	0	; select bank0
  4221  002C  0826               	movf	EUSART_Initialize@baudrate,w
  4222  002D  00AA               	movwf	??_EUSART_Initialize
  4223  002E  0827               	movf	EUSART_Initialize@baudrate+1,w
  4224  002F  00AB               	movwf	??_EUSART_Initialize+1
  4225  0030  0828               	movf	EUSART_Initialize@baudrate+2,w
  4226  0031  00AC               	movwf	??_EUSART_Initialize+2
  4227  0032  0829               	movf	EUSART_Initialize@baudrate+3,w
  4228  0033  00AD               	movwf	??_EUSART_Initialize+3
  4229  0034  3006               	movlw	6
  4230  0035                     u655:	
  4231  0035  35AA               	lslf	??_EUSART_Initialize,f
  4232  0036  0DAB               	rlf	??_EUSART_Initialize+1,f
  4233  0037  0DAC               	rlf	??_EUSART_Initialize+2,f
  4234  0038  0DAD               	rlf	??_EUSART_Initialize+3,f
  4235  0039  0B89               	decfsz	9,f
  4236  003A  2835               	goto	u655
  4237  003B  082D               	movf	??_EUSART_Initialize+3,w
  4238  003C  00F4               	movwf	___aldiv@divisor+3
  4239  003D  082C               	movf	??_EUSART_Initialize+2,w
  4240  003E  00F3               	movwf	___aldiv@divisor+2
  4241  003F  082B               	movf	??_EUSART_Initialize+1,w
  4242  0040  00F2               	movwf	___aldiv@divisor+1
  4243  0041  082A               	movf	??_EUSART_Initialize,w
  4244  0042  00F1               	movwf	___aldiv@divisor
  4245  0043  0826               	movf	EUSART_Initialize@baudrate,w
  4246  0044  00AE               	movwf	??_EUSART_Initialize+4
  4247  0045  0827               	movf	EUSART_Initialize@baudrate+1,w
  4248  0046  00AF               	movwf	??_EUSART_Initialize+5
  4249  0047  0828               	movf	EUSART_Initialize@baudrate+2,w
  4250  0048  00B0               	movwf	??_EUSART_Initialize+6
  4251  0049  0829               	movf	EUSART_Initialize@baudrate+3,w
  4252  004A  00B1               	movwf	??_EUSART_Initialize+7
  4253  004B  3006               	movlw	6
  4254  004C                     u665:	
  4255  004C  35AE               	lslf	??_EUSART_Initialize+4,f
  4256  004D  0DAF               	rlf	??_EUSART_Initialize+5,f
  4257  004E  0DB0               	rlf	??_EUSART_Initialize+6,f
  4258  004F  0DB1               	rlf	??_EUSART_Initialize+7,f
  4259  0050  0B89               	decfsz	9,f
  4260  0051  284C               	goto	u665
  4261  0052  3000               	movlw	0
  4262  0053  00B2               	movwf	??_EUSART_Initialize+8
  4263  0054  3024               	movlw	36
  4264  0055  00B3               	movwf	??_EUSART_Initialize+9
  4265  0056  30F4               	movlw	244
  4266  0057  00B4               	movwf	??_EUSART_Initialize+10
  4267  0058  3000               	movlw	0
  4268  0059  00B5               	movwf	??_EUSART_Initialize+11
  4269  005A  082E               	movf	??_EUSART_Initialize+4,w
  4270  005B  02B2               	subwf	??_EUSART_Initialize+8,f
  4271  005C  082F               	movf	??_EUSART_Initialize+5,w
  4272  005D  3BB3               	subwfb	??_EUSART_Initialize+9,f
  4273  005E  0830               	movf	??_EUSART_Initialize+6,w
  4274  005F  3BB4               	subwfb	??_EUSART_Initialize+10,f
  4275  0060  0831               	movf	??_EUSART_Initialize+7,w
  4276  0061  3BB5               	subwfb	??_EUSART_Initialize+11,f
  4277  0062  0835               	movf	??_EUSART_Initialize+11,w
  4278  0063  00F8               	movwf	___aldiv@dividend+3
  4279  0064  0834               	movf	??_EUSART_Initialize+10,w
  4280  0065  00F7               	movwf	___aldiv@dividend+2
  4281  0066  0833               	movf	??_EUSART_Initialize+9,w
  4282  0067  00F6               	movwf	___aldiv@dividend+1
  4283  0068  0832               	movf	??_EUSART_Initialize+8,w
  4284  0069  00F5               	movwf	___aldiv@dividend
  4285  006A  3180  20D3  3180   	fcall	___aldiv
  4286  006D  0872               	movf	?___aldiv+1,w
  4287  006E  00FB               	movwf	EUSART_Initialize@x+1
  4288  006F  0871               	movf	?___aldiv,w
  4289  0070  00FA               	movwf	EUSART_Initialize@x
  4290                           
  4291                           ;EUSART.c: 10:  if(x>255)
  4292  0071  3001               	movlw	1
  4293  0072  027B               	subwf	EUSART_Initialize@x+1,w
  4294  0073  3000               	movlw	0
  4295  0074  1903               	skipnz
  4296  0075  027A               	subwf	EUSART_Initialize@x,w
  4297  0076  1C03               	skipc
  4298  0077  28C0               	goto	l1337
  4299                           
  4300                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
  4301  0078  0020               	movlb	0	; select bank0
  4302  0079  0826               	movf	EUSART_Initialize@baudrate,w
  4303  007A  00AA               	movwf	??_EUSART_Initialize
  4304  007B  0827               	movf	EUSART_Initialize@baudrate+1,w
  4305  007C  00AB               	movwf	??_EUSART_Initialize+1
  4306  007D  0828               	movf	EUSART_Initialize@baudrate+2,w
  4307  007E  00AC               	movwf	??_EUSART_Initialize+2
  4308  007F  0829               	movf	EUSART_Initialize@baudrate+3,w
  4309  0080  00AD               	movwf	??_EUSART_Initialize+3
  4310  0081  3004               	movlw	4
  4311  0082                     u685:	
  4312  0082  35AA               	lslf	??_EUSART_Initialize,f
  4313  0083  0DAB               	rlf	??_EUSART_Initialize+1,f
  4314  0084  0DAC               	rlf	??_EUSART_Initialize+2,f
  4315  0085  0DAD               	rlf	??_EUSART_Initialize+3,f
  4316  0086  0B89               	decfsz	9,f
  4317  0087  2882               	goto	u685
  4318  0088  082D               	movf	??_EUSART_Initialize+3,w
  4319  0089  00F4               	movwf	___aldiv@divisor+3
  4320  008A  082C               	movf	??_EUSART_Initialize+2,w
  4321  008B  00F3               	movwf	___aldiv@divisor+2
  4322  008C  082B               	movf	??_EUSART_Initialize+1,w
  4323  008D  00F2               	movwf	___aldiv@divisor+1
  4324  008E  082A               	movf	??_EUSART_Initialize,w
  4325  008F  00F1               	movwf	___aldiv@divisor
  4326  0090  0826               	movf	EUSART_Initialize@baudrate,w
  4327  0091  00AE               	movwf	??_EUSART_Initialize+4
  4328  0092  0827               	movf	EUSART_Initialize@baudrate+1,w
  4329  0093  00AF               	movwf	??_EUSART_Initialize+5
  4330  0094  0828               	movf	EUSART_Initialize@baudrate+2,w
  4331  0095  00B0               	movwf	??_EUSART_Initialize+6
  4332  0096  0829               	movf	EUSART_Initialize@baudrate+3,w
  4333  0097  00B1               	movwf	??_EUSART_Initialize+7
  4334  0098  3004               	movlw	4
  4335  0099                     u695:	
  4336  0099  35AE               	lslf	??_EUSART_Initialize+4,f
  4337  009A  0DAF               	rlf	??_EUSART_Initialize+5,f
  4338  009B  0DB0               	rlf	??_EUSART_Initialize+6,f
  4339  009C  0DB1               	rlf	??_EUSART_Initialize+7,f
  4340  009D  0B89               	decfsz	9,f
  4341  009E  2899               	goto	u695
  4342  009F  3000               	movlw	0
  4343  00A0  00B2               	movwf	??_EUSART_Initialize+8
  4344  00A1  3024               	movlw	36
  4345  00A2  00B3               	movwf	??_EUSART_Initialize+9
  4346  00A3  30F4               	movlw	244
  4347  00A4  00B4               	movwf	??_EUSART_Initialize+10
  4348  00A5  3000               	movlw	0
  4349  00A6  00B5               	movwf	??_EUSART_Initialize+11
  4350  00A7  082E               	movf	??_EUSART_Initialize+4,w
  4351  00A8  02B2               	subwf	??_EUSART_Initialize+8,f
  4352  00A9  082F               	movf	??_EUSART_Initialize+5,w
  4353  00AA  3BB3               	subwfb	??_EUSART_Initialize+9,f
  4354  00AB  0830               	movf	??_EUSART_Initialize+6,w
  4355  00AC  3BB4               	subwfb	??_EUSART_Initialize+10,f
  4356  00AD  0831               	movf	??_EUSART_Initialize+7,w
  4357  00AE  3BB5               	subwfb	??_EUSART_Initialize+11,f
  4358  00AF  0835               	movf	??_EUSART_Initialize+11,w
  4359  00B0  00F8               	movwf	___aldiv@dividend+3
  4360  00B1  0834               	movf	??_EUSART_Initialize+10,w
  4361  00B2  00F7               	movwf	___aldiv@dividend+2
  4362  00B3  0833               	movf	??_EUSART_Initialize+9,w
  4363  00B4  00F6               	movwf	___aldiv@dividend+1
  4364  00B5  0832               	movf	??_EUSART_Initialize+8,w
  4365  00B6  00F5               	movwf	___aldiv@dividend
  4366  00B7  3180  20D3  3180   	fcall	___aldiv
  4367  00BA  0872               	movf	?___aldiv+1,w
  4368  00BB  00FB               	movwf	EUSART_Initialize@x+1
  4369  00BC  0871               	movf	?___aldiv,w
  4370  00BD  00FA               	movwf	EUSART_Initialize@x
  4371                           
  4372                           ;EUSART.c: 13:   BRGH = 1;
  4373  00BE  0023               	movlb	3	; select bank3
  4374  00BF  151E               	bsf	30,2	;volatile
  4375  00C0                     l1337:	
  4376                           
  4377                           ;EUSART.c: 15:  if(x<256)
  4378  00C0  3001               	movlw	1
  4379  00C1  027B               	subwf	EUSART_Initialize@x+1,w
  4380  00C2  3000               	movlw	0
  4381  00C3  1903               	skipnz
  4382  00C4  027A               	subwf	EUSART_Initialize@x,w
  4383  00C5  1803               	skipnc
  4384  00C6  0008               	return
  4385                           
  4386                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
  4387  00C7  087A               	movf	EUSART_Initialize@x,w
  4388  00C8  0023               	movlb	3	; select bank3
  4389  00C9  009B               	movwf	27	;volatile
  4390                           
  4391                           ;EUSART.c: 18:    SYNC = 0;
  4392  00CA  121E               	bcf	30,4	;volatile
  4393                           
  4394                           ;EUSART.c: 19:    SPEN = 1;
  4395  00CB  179D               	bsf	29,7	;volatile
  4396                           
  4397                           ;EUSART.c: 20:           TRISC7 = 1;
  4398  00CC  0021               	movlb	1	; select bank1
  4399  00CD  178E               	bsf	14,7	;volatile
  4400                           
  4401                           ;EUSART.c: 21:           TRISC6 = 1;
  4402  00CE  170E               	bsf	14,6	;volatile
  4403                           
  4404                           ;EUSART.c: 22:           CREN = 1;
  4405  00CF  0023               	movlb	3	; select bank3
  4406  00D0  161D               	bsf	29,4	;volatile
  4407                           
  4408                           ;EUSART.c: 23:           TXEN = 1;
  4409  00D1  169E               	bsf	30,5	;volatile
  4410  00D2  0008               	return
  4411  00D3                     __end_of_EUSART_Initialize:	
  4412                           
  4413                           	psect	text23
  4414  00D3                     __ptext23:	
  4415 ;; *************** function ___aldiv *****************
  4416 ;; Defined at:
  4417 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
  4418 ;; Parameters:    Size  Location     Type
  4419 ;;  divisor         4    1[COMMON] long 
  4420 ;;  dividend        4    5[COMMON] long 
  4421 ;; Auto vars:     Size  Location     Type
  4422 ;;  quotient        4    2[BANK0 ] long 
  4423 ;;  sign            1    1[BANK0 ] unsigned char 
  4424 ;;  counter         1    0[BANK0 ] unsigned char 
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  4    1[COMMON] long 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4434 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4435 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4436 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4437 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4438 ;;Total ram usage:       15 bytes
  4439 ;; Hardware stack levels used:    1
  4440 ;; Hardware stack levels required when called:    1
  4441 ;; This function calls:
  4442 ;;		Nothing
  4443 ;; This function is called by:
  4444 ;;		_EUSART_Initialize
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           
  4449                           ;psect for function ___aldiv
  4450  00D3                     ___aldiv:	
  4451                           
  4452                           ;incstack = 0
  4453                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4454  00D3  0020               	movlb	0	; select bank0
  4455  00D4  01A1               	clrf	___aldiv@sign
  4456  00D5  1FF4               	btfss	___aldiv@divisor+3,7
  4457  00D6  28E4               	goto	l456
  4458  00D7  09F1               	comf	___aldiv@divisor,f
  4459  00D8  09F2               	comf	___aldiv@divisor+1,f
  4460  00D9  09F3               	comf	___aldiv@divisor+2,f
  4461  00DA  09F4               	comf	___aldiv@divisor+3,f
  4462  00DB  0AF1               	incf	___aldiv@divisor,f
  4463  00DC  1903               	skipnz
  4464  00DD  0AF2               	incf	___aldiv@divisor+1,f
  4465  00DE  1903               	skipnz
  4466  00DF  0AF3               	incf	___aldiv@divisor+2,f
  4467  00E0  1903               	skipnz
  4468  00E1  0AF4               	incf	___aldiv@divisor+3,f
  4469  00E2  01A1               	clrf	___aldiv@sign
  4470  00E3  0AA1               	incf	___aldiv@sign,f
  4471  00E4                     l456:	
  4472  00E4  1FF8               	btfss	___aldiv@dividend+3,7
  4473  00E5  28F5               	goto	l1299
  4474  00E6  09F5               	comf	___aldiv@dividend,f
  4475  00E7  09F6               	comf	___aldiv@dividend+1,f
  4476  00E8  09F7               	comf	___aldiv@dividend+2,f
  4477  00E9  09F8               	comf	___aldiv@dividend+3,f
  4478  00EA  0AF5               	incf	___aldiv@dividend,f
  4479  00EB  1903               	skipnz
  4480  00EC  0AF6               	incf	___aldiv@dividend+1,f
  4481  00ED  1903               	skipnz
  4482  00EE  0AF7               	incf	___aldiv@dividend+2,f
  4483  00EF  1903               	skipnz
  4484  00F0  0AF8               	incf	___aldiv@dividend+3,f
  4485  00F1  3001               	movlw	1
  4486  00F2  00F9               	movwf	??___aldiv
  4487  00F3  0879               	movf	??___aldiv,w
  4488  00F4  06A1               	xorwf	___aldiv@sign,f
  4489  00F5                     l1299:	
  4490  00F5  3000               	movlw	0
  4491  00F6  00A5               	movwf	___aldiv@quotient+3
  4492  00F7  3000               	movlw	0
  4493  00F8  00A4               	movwf	___aldiv@quotient+2
  4494  00F9  3000               	movlw	0
  4495  00FA  00A3               	movwf	___aldiv@quotient+1
  4496  00FB  3000               	movlw	0
  4497  00FC  00A2               	movwf	___aldiv@quotient
  4498  00FD  0874               	movf	___aldiv@divisor+3,w
  4499  00FE  0473               	iorwf	___aldiv@divisor+2,w
  4500  00FF  0472               	iorwf	___aldiv@divisor+1,w
  4501  0100  0471               	iorwf	___aldiv@divisor,w
  4502  0101  1903               	skipnz
  4503  0102  293E               	goto	l1321
  4504  0103  01A0               	clrf	___aldiv@counter
  4505  0104  0AA0               	incf	___aldiv@counter,f
  4506  0105                     l1307:	
  4507  0105  1BF4               	btfsc	___aldiv@divisor+3,7
  4508  0106  2913               	goto	l1309
  4509  0107  3001               	movlw	1
  4510  0108                     u585:	
  4511  0108  35F1               	lslf	___aldiv@divisor,f
  4512  0109  0DF2               	rlf	___aldiv@divisor+1,f
  4513  010A  0DF3               	rlf	___aldiv@divisor+2,f
  4514  010B  0DF4               	rlf	___aldiv@divisor+3,f
  4515  010C  0B89               	decfsz	9,f
  4516  010D  2908               	goto	u585
  4517  010E  3001               	movlw	1
  4518  010F  00F9               	movwf	??___aldiv
  4519  0110  0879               	movf	??___aldiv,w
  4520  0111  07A0               	addwf	___aldiv@counter,f
  4521  0112  2905               	goto	l1307
  4522  0113                     l1309:	
  4523  0113  3001               	movlw	1
  4524  0114                     u605:	
  4525  0114  35A2               	lslf	___aldiv@quotient,f
  4526  0115  0DA3               	rlf	___aldiv@quotient+1,f
  4527  0116  0DA4               	rlf	___aldiv@quotient+2,f
  4528  0117  0DA5               	rlf	___aldiv@quotient+3,f
  4529  0118  0B89               	decfsz	9,f
  4530  0119  2914               	goto	u605
  4531  011A  0874               	movf	___aldiv@divisor+3,w
  4532  011B  0278               	subwf	___aldiv@dividend+3,w
  4533  011C  1D03               	skipz
  4534  011D  2928               	goto	u615
  4535  011E  0873               	movf	___aldiv@divisor+2,w
  4536  011F  0277               	subwf	___aldiv@dividend+2,w
  4537  0120  1D03               	skipz
  4538  0121  2928               	goto	u615
  4539  0122  0872               	movf	___aldiv@divisor+1,w
  4540  0123  0276               	subwf	___aldiv@dividend+1,w
  4541  0124  1D03               	skipz
  4542  0125  2928               	goto	u615
  4543  0126  0871               	movf	___aldiv@divisor,w
  4544  0127  0275               	subwf	___aldiv@dividend,w
  4545  0128                     u615:	
  4546  0128  1C03               	skipc
  4547  0129  2933               	goto	l1317
  4548  012A  0871               	movf	___aldiv@divisor,w
  4549  012B  02F5               	subwf	___aldiv@dividend,f
  4550  012C  0872               	movf	___aldiv@divisor+1,w
  4551  012D  3BF6               	subwfb	___aldiv@dividend+1,f
  4552  012E  0873               	movf	___aldiv@divisor+2,w
  4553  012F  3BF7               	subwfb	___aldiv@dividend+2,f
  4554  0130  0874               	movf	___aldiv@divisor+3,w
  4555  0131  3BF8               	subwfb	___aldiv@dividend+3,f
  4556  0132  1422               	bsf	___aldiv@quotient,0
  4557  0133                     l1317:	
  4558  0133  3001               	movlw	1
  4559  0134                     u625:	
  4560  0134  36F4               	lsrf	___aldiv@divisor+3,f
  4561  0135  0CF3               	rrf	___aldiv@divisor+2,f
  4562  0136  0CF2               	rrf	___aldiv@divisor+1,f
  4563  0137  0CF1               	rrf	___aldiv@divisor,f
  4564  0138  0B89               	decfsz	9,f
  4565  0139  2934               	goto	u625
  4566  013A  3001               	movlw	1
  4567  013B  02A0               	subwf	___aldiv@counter,f
  4568  013C  1D03               	btfss	3,2
  4569  013D  2913               	goto	l1309
  4570  013E                     l1321:	
  4571  013E  0821               	movf	___aldiv@sign,w
  4572  013F  1903               	btfsc	3,2
  4573  0140  294C               	goto	l1325
  4574  0141  09A2               	comf	___aldiv@quotient,f
  4575  0142  09A3               	comf	___aldiv@quotient+1,f
  4576  0143  09A4               	comf	___aldiv@quotient+2,f
  4577  0144  09A5               	comf	___aldiv@quotient+3,f
  4578  0145  0AA2               	incf	___aldiv@quotient,f
  4579  0146  1903               	skipnz
  4580  0147  0AA3               	incf	___aldiv@quotient+1,f
  4581  0148  1903               	skipnz
  4582  0149  0AA4               	incf	___aldiv@quotient+2,f
  4583  014A  1903               	skipnz
  4584  014B  0AA5               	incf	___aldiv@quotient+3,f
  4585  014C                     l1325:	
  4586  014C  0825               	movf	___aldiv@quotient+3,w
  4587  014D  00F4               	movwf	?___aldiv+3
  4588  014E  0824               	movf	___aldiv@quotient+2,w
  4589  014F  00F3               	movwf	?___aldiv+2
  4590  0150  0823               	movf	___aldiv@quotient+1,w
  4591  0151  00F2               	movwf	?___aldiv+1
  4592  0152  0822               	movf	___aldiv@quotient,w
  4593  0153  00F1               	movwf	?___aldiv
  4594  0154  0008               	return
  4595  0155                     __end_of___aldiv:	
  4596                           
  4597                           	psect	intentry
  4598  0004                     __pintentry:	
  4599 ;; *************** function _myIsr *****************
  4600 ;; Defined at:
  4601 ;;		line 58 in file "main.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  1    wreg      void 
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4619 ;;Total ram usage:        1 bytes
  4620 ;; Hardware stack levels used:    1
  4621 ;; This function calls:
  4622 ;;		Nothing
  4623 ;; This function is called by:
  4624 ;;		Interrupt level 1
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628  0004                     _myIsr:	
  4629                           
  4630                           ;incstack = 0
  4631  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  4632                           
  4633                           ; Regs used in _myIsr: [wreg+status,2+status,0]
  4634  0005  3180               	pagesel	$
  4635                           
  4636                           ;main.c: 60:     static uint8_t count = 0;;main.c: 62:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
  4637  0006  0020               	movlb	0	; select bank0
  4638  0007  1C11               	btfss	17,0	;volatile
  4639  0008  281B               	goto	i1l97
  4640  0009  0021               	movlb	1	; select bank1
  4641  000A  1C11               	btfss	17,0	;volatile
  4642  000B  281B               	goto	i1l97
  4643                           
  4644                           ;main.c: 63:         PIR1bits.TMR1IF = 0;
  4645  000C  0020               	movlb	0	; select bank0
  4646  000D  1011               	bcf	17,0	;volatile
  4647                           
  4648                           ;main.c: 64:         count++;
  4649  000E  3001               	movlw	1
  4650  000F  00F0               	movwf	??_myIsr
  4651  0010  0870               	movf	??_myIsr,w
  4652  0011  07C1               	addwf	myIsr@count,f
  4653                           
  4654                           ;main.c: 67:         if (count == 61) {
  4655  0012  303D               	movlw	61
  4656  0013  0641               	xorwf	myIsr@count,w
  4657  0014  1D03               	btfss	3,2
  4658  0015  281B               	goto	i1l97
  4659                           
  4660                           ;main.c: 68:             tmr1_flag = 1;
  4661  0016  3001               	movlw	1
  4662  0017  00F0               	movwf	??_myIsr
  4663  0018  0870               	movf	??_myIsr,w
  4664  0019  00C2               	movwf	_tmr1_flag	;volatile
  4665                           
  4666                           ;main.c: 69:             count = 0;
  4667  001A  01C1               	clrf	myIsr@count
  4668  001B                     i1l97:	
  4669  001B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  4670  001C  0009               	retfie
  4671  001D                     __end_of_myIsr:	
  4672  007E                     btemp	set	126	;btemp
  4673  007E                     int$flags	set	126
  4674  007E                     wtemp0	set	126


Data Sizes:
    Strings     86
    Constant    90
    Data        0
    BSS         14
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     23      36
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 46
		 -> STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _statemachine->_beginAFEcommunication
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _EUSART_Write_Text->_EUSART_Write
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_EUSART_Initialize
    _statemachine->_beginAFEcommunication
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    4112
                                             22 BANK0      1     1      0
                  _EUSART_Initialize
                          _initClock
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         2     2      0    3276
                                              6 BANK0      2     2      0
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                                7     5      2    2475
                                             11 COMMON     1     1      0
                                              0 BANK0      6     4      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    1143
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C_writeRegister                                    6     0      6    1196
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     652
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     250
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    5     3      2     264
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     836
                                             10 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _myIsr                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _initClock
     _internal_16
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      24       5       45.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      31      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      31      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Dec 19 22:21:06 2019

           __end_of_send_I2C_data 03B2                       __CFG_CP$OFF 0000                               l115 02AF  
                             l233 036F                               l322 0195                               l227 03AE  
                             l251 03D7                               l245 03DF                               l239 039C  
                             l263 03A5                               l192 03E4                               l290 02D8  
                             l291 02DD                               l292 02F2                               l456 00E4  
                             l288 02D3                               u500 02C7                               u510 02C8  
                             u605 0114                               u615 0128                               u480 02B8  
                             u625 0134                               u490 02B9                               u655 0035  
                             u585 0108                               u665 004C                               u755 016F  
                             u685 0082                               u695 0099                               u787 0283  
                             u797 0386                    RGB_color@color 0071                      __CFG_BORV$LO 0000  
                             wreg 0009                      __CFG_IESO$ON 0000                      _statemachine 0289  
                    __CFG_LVP$OFF 0000                              l1215 02E2                              l1321 013E  
                            l1307 0105                              l1325 014C                              l1317 0133  
                            l1309 0113                              l1511 029F                              l1337 00C0  
                            l1259 02C2                              l1507 029C                              l1287 0333  
                            l1527 027C                              l1299 00F5                              l1571 02A4  
                            l1483 028A                              l1573 02E7                              l1469 015A  
                            STR_1 0239                              STR_2 020B                              _BRGH 0CF2  
                            _CREN 0CEC                              _SCS0 04C8                              _SCS1 04C9  
                            i1l97 001B                              _TMR1 0016                              _SPEN 0CEF  
                            _TXEN 0CF5                              _SYNC 0CF4                      __CFG_WRT$OFF 0000  
                            _main 0261                              fsr0h 0005                              fsr1h 0007  
                            indf0 0000                              fsr0l 0004                              fsr1l 0006  
                            btemp 007E                              start 001D          __end_of_send_I2C_stopBit 03DB  
            _send_I2C_controlByte 0396                     ?_EUSART_Write 0070                   __end_of___aldiv 0155  
                           ?_main 0070     I2C_writeRegister@slaveAddress 0075                     __CFG_WDTE$OFF 0000  
                           _IRCF0 04CB                             _IRCF1 04CC                             _IRCF2 04CD  
                           _IRCF3 04CE            __size_of_read_I2C_data 0010                             _SPBRG 019B  
              __size_of_RGB_color 0021                    __CFG_FCMEN$OFF 0000                             _myIsr 0004  
                  __CFG_BOREN$OFF 0000                             status 0003                             wtemp0 007E  
               _SCD_delay_setting 03CB                      ?_internal_16 0070                    __CFG_MCLRE$OFF 0000  
                 __initialization 001F                      __end_of_main 0289          __end_of_UV_delay_setting 03CB  
          beginAFEcommunication@i 0024             ?_send_I2C_controlByte 0071                    ??_EUSART_Write 0071  
                  __CFG_LPBOR$OFF 0000                 _ATmega328_address 0209                            ??_main 0036  
                  __CFG_PLLEN$OFF 0000                     ?_readRegister 0075                            ?_myIsr 0070  
                  __CFG_ZCDDIS$ON 0000     __end_of_OCD_threshold_setting 0313                            _RC1REG 0199  
       __end_of_SCD_delay_setting 03D3                            _TX1REG 019A                            _SPLLEN 04CF  
                          _SSPADD 0212                            _TRISC6 0476                            _TRISC7 0477  
                          _SSPBUF 0211                     _read_I2C_data 036B                    __CFG_PWRTE$OFF 0000  
               __end_of_RGB_color 02F3                         ??___aldiv 0079                    __CFG_STVREN$ON 0000  
                __end_of_init_I2C 038B                  __end_of_init_AFE 03FA                  __end_of_init_RGB 03F6  
       __end_of_ATmega328_address 020B             _beginAFEcommunication 0155                    ??_readRegister 0079  
    beginAFEcommunication@errCode 0022           __end_of__initialization 0027                    ?_read_I2C_data 0071  
                  __pcstackCOMMON 0070            ??_send_I2C_controlByte 0075                     __end_of_myIsr 001D  
                    _cellVoltages 0037                _RGB_AWAIT_AFE_CONN 02B0               ?_RGB_AWAIT_AFE_CONN 0070  
                         ??_myIsr 0070                        __pbssBANK0 0037              __end_of_EUSART_Write 03EB  
              __size_of_init_GPIO 0038                __size_of_initClock 0003                __size_of_init_TMR1 000B  
                      __pmaintext 0261              ??_RGB_AWAIT_AFE_CONN 0073              __size_of_internal_16 0009  
               ?_send_I2C_stopBit 0070                   __CFG_PPS1WAY$ON 0000                        __pintentry 0004  
          ?_beginAFEcommunication 0020                ??_send_I2C_stopBit 0071                           _PPSLOCK 0E0F  
          __size_of_send_I2C_NACK 0009                   ??_read_I2C_data 0073            __size_of_send_I2C_data 0009  
                       ?_init_I2C 0070                         ?_init_AFE 0070                         ?_init_RGB 0070  
        readRegister@recievedData 0079              __end_of_readRegister 0209                           ___aldiv 00D3  
                         __ptext1 0289                           __ptext2 03F9                           __ptext3 0155  
                         __ptext4 01D3                           __ptext5 03A0                           __ptext6 036B  
                         __ptext7 0313                           __ptext8 03D3                           __ptext9 03DB  
               __end_of_init_GPIO 01D3                 __end_of_initClock 03F9                 __end_of_init_TMR1 0396  
                       _T1CONbits 0018                  ___aldiv@dividend 0075                           clrloop0 03EC  
            end_of_initialization 0027                        ??_init_I2C 0071                        ??_init_AFE 0071  
                      ??_init_RGB 0071                 _EUSART_Initialize 002B                ?_EUSART_Initialize 0026  
                   _send_I2C_NACK 03A0                  ___aldiv@quotient 0022        send_I2C_controlByte@RW_bit 0073  
                   _send_I2C_data 03A9                         _RGB_color 02D2                EUSART_Initialize@x 007A  
             ??_EUSART_Initialize 002A                  __CFG_FOSC$INTOSC 0000                         _TRISAbits 008C  
                       _TRISBbits 008D                         _TRISCbits 008E                         _TRISEbits 0090  
           __size_of_EUSART_Write 0008     __end_of_SCD_threshold_setting 036B                         _RXPPSbits 0E24  
               _I2C_writeRegister 0313         __end_of_EUSART_Initialize 00D3             _OCD_threshold_setting 02F3  
              ?_I2C_writeRegister 0075                    ?_send_I2C_NACK 0070          readRegister@slaveAddress 0075  
                  ?_send_I2C_data 0071               ??_I2C_writeRegister 007B                        ?_RGB_color 0071  
                    _EUSART_Write 03E3       I2C_writeRegister@regAddress 0077               start_initialization 001F  
                   ?_statemachine 0070         __end_of_I2C_writeRegister 0331                 _EUSART_Write_Text 0331  
           __size_of_readRegister 0036                ?_EUSART_Write_Text 0072           ??_beginAFEcommunication 007B  
             ??_EUSART_Write_Text 0074     __size_of_send_I2C_controlByte 000A                       __pbssCOMMON 007C  
                  ??_statemachine 007C                         ___latbits 0003  send_I2C_controlByte@BlockAddress 0071  
                      myIsr@count 0041                     __pcstackBANK0 0020         __size_of_send_I2C_stopBit 0008  
                    _readRegister 01D3         __end_of_EUSART_Write_Text 034B        __size_of_EUSART_Initialize 00A8  
                   ??_internal_16 0071                  _OV_delay_setting 03BB                 __size_of_init_I2C 0010  
           I2C_writeRegister@data 0079                   ??_send_I2C_NACK 0071                 __size_of_init_AFE 0001  
               __size_of_init_RGB 0005                 _send_I2C_startBit 03DB                   ??_send_I2C_data 0073  
     __size_of_RGB_AWAIT_AFE_CONN 0022                          ?___aldiv 0071                ?_send_I2C_startBit 0070  
                     ??_RGB_color 0073         EUSART_Initialize@baudrate 0026               ??_send_I2C_startBit 0071  
                       _init_GPIO 019B                         _initClock 03F6                         _init_TMR1 038B  
                       _currState 0043        __size_of_I2C_writeRegister 001E                    __size_of_myIsr 0019  
                 ___aldiv@divisor 0071             __end_of_read_I2C_data 037B                   ___aldiv@counter 0020  
                        _LATAbits 010C                          _LATEbits 0110         __end_of_send_I2C_startBit 03E3  
                       clear_ram0 03EB                         _tmr1_flag 0042                          _PIE1bits 0091  
                        _PIR1bits 0011               __end_of_internal_16 03BB                        ?_init_GPIO 0070  
                      ?_initClock 0070                        ?_init_TMR1 0070             send_I2C_data@databyte 0071  
      __size_of_EUSART_Write_Text 001A                 _OCD_delay_setting 034B              __end_of_statemachine 02B0  
                __size_of___aldiv 0082            readRegister@regAddress 0077                        _ANSELBbits 018D  
                      _ANSELCbits 018E                  _send_I2C_stopBit 03D3                          __ptext10 03A9  
                        __ptext11 0396                          __ptext20 03F6                          __ptext12 02B0  
                        __ptext21 03B2                          __ptext13 02D2                          __ptext22 002B  
                        __ptext14 0331                          __ptext23 00D3                          __ptext15 03E3  
                        __ptext16 038B                          __ptext17 03F1                          __ptext18 037B  
                        __ptext19 019B         __end_of_OCD_delay_setting 035B                          _init_I2C 037B  
                        _init_AFE 03F9                          _init_RGB 03F1                     __size_of_main 0028  
                   _SSPDATPPSbits 0E21             _SCD_threshold_setting 035B        __size_of_send_I2C_startBit 0008  
                     _internal_16 03B2                        _RB2PPSbits 0E9A                        _RC1STAbits 019D  
                      _RC4PPSbits 0EA4    __size_of_beginAFEcommunication 0046                     _SSPCLKPPSbits 0E20  
   __end_of_beginAFEcommunication 019B                          int$flags 007E                        _RC5PPSbits 0EA5  
        __end_of_OV_delay_setting 03C3                        _INTCONbits 000B                       ??_init_GPIO 0071  
                     ??_initClock 0071                       ??_init_TMR1 0071                  _UV_delay_setting 03C3  
    __end_of_send_I2C_controlByte 03A0                          intlevel1 0000                 __CFG_CLKOUTEN$OFF 0000  
                     _PPSLOCKbits 0E0F                     __pstringtext1 02F3                     __pstringtext2 034B  
                   __pstringtext3 035B                     __pstringtext4 03BB                     __pstringtext5 03C3  
                   __pstringtext6 03CB                     __pstringtext7 0209                     __pstringtext8 0239  
                   __pstringtext9 0000             EUSART_Write_Text@text 0072                      ___aldiv@sign 0021  
                     _SSPCON2bits 0216                EUSART_Write@txData 0071             __size_of_statemachine 0027  
                     _toggleColor 007C                        _SSPCONbits 0215        __end_of_RGB_AWAIT_AFE_CONN 02D2  
              EUSART_Write_Text@i 0075             __end_of_send_I2C_NACK 03A9  
