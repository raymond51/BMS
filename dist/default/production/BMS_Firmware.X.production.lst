

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar 07 19:38:14 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	cinit,global,class=CODE,merge=1,delta=2
    49                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    50                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    51                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    52                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    53                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    54                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    55                           	psect	clrtext,global,class=CODE,delta=2
    56                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    57                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    58                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    59                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    60                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    61                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    62                           	psect	text1,local,class=CODE,merge=1,delta=2
    63                           	psect	text2,local,class=CODE,merge=1,delta=2
    64                           	psect	text3,local,class=CODE,merge=1,delta=2
    65                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text6,local,class=CODE,merge=1,delta=2
    68                           	psect	text7,local,class=CODE,merge=1,delta=2
    69                           	psect	text8,local,class=CODE,merge=1,delta=2
    70                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text13,local,class=CODE,merge=1,delta=2
    75                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    76                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text17,local,class=CODE,merge=1,delta=2
    79                           	psect	text18,local,class=CODE,merge=1,delta=2
    80                           	psect	text19,local,class=CODE,merge=1,delta=2
    81                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    83                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text23,local,class=CODE,merge=1,delta=2
    85                           	psect	text24,local,class=CODE,merge=1,delta=2
    86                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text32,local,class=CODE,merge=1,delta=2
    94                           	psect	text33,local,class=CODE,merge=1,delta=2
    95                           	psect	text34,local,class=CODE,merge=1,delta=2
    96                           	psect	text35,local,class=CODE,merge=1,delta=2
    97                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    98                           	psect	text37,local,class=CODE,merge=1,delta=2
    99                           	psect	text38,local,class=CODE,merge=1,delta=2
   100                           	psect	text39,local,class=CODE,merge=1,delta=2
   101                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text41,local,class=CODE,merge=1,delta=2
   103                           	psect	text42,local,class=CODE,merge=1,delta=2
   104                           	psect	text43,local,class=CODE,merge=1,delta=2
   105                           	psect	text44,local,class=CODE,merge=1,delta=2
   106                           	psect	text45,local,class=CODE,merge=1,delta=2
   107                           	psect	text46,local,class=CODE,merge=1,delta=2
   108                           	psect	text47,local,class=CODE,merge=1,delta=2
   109                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   110                           	psect	text49,local,class=CODE,merge=1,delta=2
   111                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   113                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   114                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
   115                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
   116                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
   117                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
   119                           	psect	text58,local,class=CODE,merge=1,delta=2
   120                           	psect	text59,local,class=CODE,merge=1,delta=2
   121                           	psect	text60,local,class=CODE,merge=1,delta=2
   122                           	psect	text61,local,class=CODE,merge=1,delta=2
   123                           	psect	text62,local,class=CODE,merge=1,delta=2
   124                           	psect	text63,local,class=CODE,merge=1,delta=2
   125                           	psect	text64,local,class=CODE,merge=1,delta=2
   126                           	psect	text65,local,class=CODE,merge=1,delta=2
   127                           	psect	text66,local,class=CODE,merge=1,delta=2
   128                           	psect	text67,local,class=CODE,merge=1,delta=2
   129                           	psect	text68,local,class=CODE,merge=1,delta=2
   130                           	psect	text69,local,class=CODE,merge=1,delta=2
   131                           	psect	text70,local,class=CODE,merge=1,delta=2
   132                           	psect	text71,local,class=CODE,merge=1,delta=2
   133                           	psect	text72,local,class=CODE,merge=1,delta=2
   134                           	psect	text73,local,class=CODE,merge=1,delta=2
   135                           	psect	text74,local,class=CODE,merge=1,delta=2
   136                           	psect	text75,local,class=CODE,merge=1,delta=2
   137                           	psect	text76,local,class=CODE,merge=1,delta=2,group=1
   138                           	psect	intentry,global,class=CODE,delta=2
   139                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   140                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   141                           	dabs	1,0xCA0,32
   142                           	dabs	1,0xC20,80
   143                           	dabs	1,0xBE1,15
   144                           	dabs	1,0x2771,0,_messageBuffer
   145                           	dabs	1,0x7E,2
   146  0000                     
   147                           ; Version 2.05
   148                           ; Generated 20/12/2018 GMT
   149                           ; 
   150                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   151                           ; All rights reserved.
   152                           ; 
   153                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   154                           ; 
   155                           ; Redistribution and use in source and binary forms, with or without modification, are
   156                           ; permitted provided that the following conditions are met:
   157                           ; 
   158                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   159                           ;        conditions and the following disclaimer.
   160                           ; 
   161                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   162                           ;        of conditions and the following disclaimer in the documentation and/or other
   163                           ;        materials provided with the distribution.
   164                           ; 
   165                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   166                           ;        software without specific prior written permission.
   167                           ; 
   168                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   169                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   170                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   171                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   172                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   173                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   174                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   175                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   176                           ; 
   177                           ; 
   178                           ; Code-generator required, PIC16F1719 Definitions
   179                           ; 
   180                           ; SFR Addresses
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0110                     	;# 
   235  0111                     	;# 
   236  0112                     	;# 
   237  0113                     	;# 
   238  0114                     	;# 
   239  0115                     	;# 
   240  0116                     	;# 
   241  0117                     	;# 
   242  0118                     	;# 
   243  0119                     	;# 
   244  011A                     	;# 
   245  011B                     	;# 
   246  011B                     	;# 
   247  011C                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  018E                     	;# 
   251  018F                     	;# 
   252  0190                     	;# 
   253  0191                     	;# 
   254  0191                     	;# 
   255  0192                     	;# 
   256  0193                     	;# 
   257  0193                     	;# 
   258  0194                     	;# 
   259  0195                     	;# 
   260  0196                     	;# 
   261  0197                     	;# 
   262  0199                     	;# 
   263  0199                     	;# 
   264  0199                     	;# 
   265  019A                     	;# 
   266  019A                     	;# 
   267  019A                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019C                     	;# 
   274  019C                     	;# 
   275  019C                     	;# 
   276  019D                     	;# 
   277  019D                     	;# 
   278  019D                     	;# 
   279  019E                     	;# 
   280  019E                     	;# 
   281  019E                     	;# 
   282  019F                     	;# 
   283  019F                     	;# 
   284  019F                     	;# 
   285  019F                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  020D                     	;# 
   289  020E                     	;# 
   290  020F                     	;# 
   291  0210                     	;# 
   292  0211                     	;# 
   293  0211                     	;# 
   294  0212                     	;# 
   295  0212                     	;# 
   296  0213                     	;# 
   297  0213                     	;# 
   298  0214                     	;# 
   299  0214                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0216                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0217                     	;# 
   308  028C                     	;# 
   309  028D                     	;# 
   310  028E                     	;# 
   311  028F                     	;# 
   312  0290                     	;# 
   313  0291                     	;# 
   314  0291                     	;# 
   315  0292                     	;# 
   316  0293                     	;# 
   317  0293                     	;# 
   318  0298                     	;# 
   319  0298                     	;# 
   320  0299                     	;# 
   321  029A                     	;# 
   322  029A                     	;# 
   323  029E                     	;# 
   324  030C                     	;# 
   325  030D                     	;# 
   326  030E                     	;# 
   327  030F                     	;# 
   328  0310                     	;# 
   329  038C                     	;# 
   330  038D                     	;# 
   331  038E                     	;# 
   332  038F                     	;# 
   333  0390                     	;# 
   334  0391                     	;# 
   335  0392                     	;# 
   336  0393                     	;# 
   337  0394                     	;# 
   338  0395                     	;# 
   339  0396                     	;# 
   340  0397                     	;# 
   341  0398                     	;# 
   342  0399                     	;# 
   343  039D                     	;# 
   344  039E                     	;# 
   345  039F                     	;# 
   346  0415                     	;# 
   347  0416                     	;# 
   348  0417                     	;# 
   349  041C                     	;# 
   350  041D                     	;# 
   351  041E                     	;# 
   352  0498                     	;# 
   353  0498                     	;# 
   354  0499                     	;# 
   355  049A                     	;# 
   356  049B                     	;# 
   357  049B                     	;# 
   358  049C                     	;# 
   359  049D                     	;# 
   360  049E                     	;# 
   361  049F                     	;# 
   362  0511                     	;# 
   363  0515                     	;# 
   364  0617                     	;# 
   365  0618                     	;# 
   366  0619                     	;# 
   367  0619                     	;# 
   368  061A                     	;# 
   369  061B                     	;# 
   370  061C                     	;# 
   371  061C                     	;# 
   372  0691                     	;# 
   373  0692                     	;# 
   374  0693                     	;# 
   375  0694                     	;# 
   376  0695                     	;# 
   377  0696                     	;# 
   378  0697                     	;# 
   379  0698                     	;# 
   380  0699                     	;# 
   381  069A                     	;# 
   382  069B                     	;# 
   383  069C                     	;# 
   384  069D                     	;# 
   385  069E                     	;# 
   386  069F                     	;# 
   387  0E0F                     	;# 
   388  0E10                     	;# 
   389  0E11                     	;# 
   390  0E12                     	;# 
   391  0E13                     	;# 
   392  0E14                     	;# 
   393  0E15                     	;# 
   394  0E17                     	;# 
   395  0E20                     	;# 
   396  0E21                     	;# 
   397  0E22                     	;# 
   398  0E24                     	;# 
   399  0E25                     	;# 
   400  0E28                     	;# 
   401  0E29                     	;# 
   402  0E2A                     	;# 
   403  0E2B                     	;# 
   404  0E90                     	;# 
   405  0E91                     	;# 
   406  0E92                     	;# 
   407  0E93                     	;# 
   408  0E94                     	;# 
   409  0E95                     	;# 
   410  0E96                     	;# 
   411  0E97                     	;# 
   412  0E98                     	;# 
   413  0E99                     	;# 
   414  0E9A                     	;# 
   415  0E9B                     	;# 
   416  0E9C                     	;# 
   417  0E9D                     	;# 
   418  0E9E                     	;# 
   419  0E9F                     	;# 
   420  0EA0                     	;# 
   421  0EA1                     	;# 
   422  0EA2                     	;# 
   423  0EA3                     	;# 
   424  0EA4                     	;# 
   425  0EA5                     	;# 
   426  0EA6                     	;# 
   427  0EA7                     	;# 
   428  0EA8                     	;# 
   429  0EA9                     	;# 
   430  0EAA                     	;# 
   431  0EAB                     	;# 
   432  0EAC                     	;# 
   433  0EAD                     	;# 
   434  0EAE                     	;# 
   435  0EAF                     	;# 
   436  0EB0                     	;# 
   437  0EB1                     	;# 
   438  0EB2                     	;# 
   439  0F0F                     	;# 
   440  0F10                     	;# 
   441  0F11                     	;# 
   442  0F12                     	;# 
   443  0F13                     	;# 
   444  0F14                     	;# 
   445  0F15                     	;# 
   446  0F16                     	;# 
   447  0F17                     	;# 
   448  0F18                     	;# 
   449  0F19                     	;# 
   450  0F1A                     	;# 
   451  0F1B                     	;# 
   452  0F1C                     	;# 
   453  0F1D                     	;# 
   454  0F1E                     	;# 
   455  0F1F                     	;# 
   456  0F20                     	;# 
   457  0F21                     	;# 
   458  0F22                     	;# 
   459  0F23                     	;# 
   460  0F24                     	;# 
   461  0F25                     	;# 
   462  0F26                     	;# 
   463  0F27                     	;# 
   464  0F28                     	;# 
   465  0F29                     	;# 
   466  0F2A                     	;# 
   467  0F2B                     	;# 
   468  0F2C                     	;# 
   469  0F2D                     	;# 
   470  0F2E                     	;# 
   471  0F2F                     	;# 
   472  0F30                     	;# 
   473  0F31                     	;# 
   474  0F32                     	;# 
   475  0F33                     	;# 
   476  0F34                     	;# 
   477  0F35                     	;# 
   478  0F36                     	;# 
   479  0F37                     	;# 
   480  0FE4                     	;# 
   481  0FE5                     	;# 
   482  0FE6                     	;# 
   483  0FE7                     	;# 
   484  0FE8                     	;# 
   485  0FE9                     	;# 
   486  0FEA                     	;# 
   487  0FEB                     	;# 
   488  0FED                     	;# 
   489  0FEE                     	;# 
   490  0FEF                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0008                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  000D                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0015                     	;# 
   512  0016                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001C                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  008F                     	;# 
   524  0090                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0095                     	;# 
   529  0096                     	;# 
   530  0097                     	;# 
   531  0098                     	;# 
   532  0099                     	;# 
   533  009A                     	;# 
   534  009B                     	;# 
   535  009B                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009E                     	;# 
   539  009F                     	;# 
   540  010C                     	;# 
   541  010D                     	;# 
   542  010E                     	;# 
   543  010F                     	;# 
   544  0110                     	;# 
   545  0111                     	;# 
   546  0112                     	;# 
   547  0113                     	;# 
   548  0114                     	;# 
   549  0115                     	;# 
   550  0116                     	;# 
   551  0117                     	;# 
   552  0118                     	;# 
   553  0119                     	;# 
   554  011A                     	;# 
   555  011B                     	;# 
   556  011B                     	;# 
   557  011C                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560  018E                     	;# 
   561  018F                     	;# 
   562  0190                     	;# 
   563  0191                     	;# 
   564  0191                     	;# 
   565  0192                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0197                     	;# 
   572  0199                     	;# 
   573  0199                     	;# 
   574  0199                     	;# 
   575  019A                     	;# 
   576  019A                     	;# 
   577  019A                     	;# 
   578  019B                     	;# 
   579  019B                     	;# 
   580  019B                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019C                     	;# 
   584  019C                     	;# 
   585  019C                     	;# 
   586  019D                     	;# 
   587  019D                     	;# 
   588  019D                     	;# 
   589  019E                     	;# 
   590  019E                     	;# 
   591  019E                     	;# 
   592  019F                     	;# 
   593  019F                     	;# 
   594  019F                     	;# 
   595  019F                     	;# 
   596  019F                     	;# 
   597  020C                     	;# 
   598  020D                     	;# 
   599  020E                     	;# 
   600  020F                     	;# 
   601  0210                     	;# 
   602  0211                     	;# 
   603  0211                     	;# 
   604  0212                     	;# 
   605  0212                     	;# 
   606  0213                     	;# 
   607  0213                     	;# 
   608  0214                     	;# 
   609  0214                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0216                     	;# 
   615  0216                     	;# 
   616  0217                     	;# 
   617  0217                     	;# 
   618  028C                     	;# 
   619  028D                     	;# 
   620  028E                     	;# 
   621  028F                     	;# 
   622  0290                     	;# 
   623  0291                     	;# 
   624  0291                     	;# 
   625  0292                     	;# 
   626  0293                     	;# 
   627  0293                     	;# 
   628  0298                     	;# 
   629  0298                     	;# 
   630  0299                     	;# 
   631  029A                     	;# 
   632  029A                     	;# 
   633  029E                     	;# 
   634  030C                     	;# 
   635  030D                     	;# 
   636  030E                     	;# 
   637  030F                     	;# 
   638  0310                     	;# 
   639  038C                     	;# 
   640  038D                     	;# 
   641  038E                     	;# 
   642  038F                     	;# 
   643  0390                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  0397                     	;# 
   651  0398                     	;# 
   652  0399                     	;# 
   653  039D                     	;# 
   654  039E                     	;# 
   655  039F                     	;# 
   656  0415                     	;# 
   657  0416                     	;# 
   658  0417                     	;# 
   659  041C                     	;# 
   660  041D                     	;# 
   661  041E                     	;# 
   662  0498                     	;# 
   663  0498                     	;# 
   664  0499                     	;# 
   665  049A                     	;# 
   666  049B                     	;# 
   667  049B                     	;# 
   668  049C                     	;# 
   669  049D                     	;# 
   670  049E                     	;# 
   671  049F                     	;# 
   672  0511                     	;# 
   673  0515                     	;# 
   674  0617                     	;# 
   675  0618                     	;# 
   676  0619                     	;# 
   677  0619                     	;# 
   678  061A                     	;# 
   679  061B                     	;# 
   680  061C                     	;# 
   681  061C                     	;# 
   682  0691                     	;# 
   683  0692                     	;# 
   684  0693                     	;# 
   685  0694                     	;# 
   686  0695                     	;# 
   687  0696                     	;# 
   688  0697                     	;# 
   689  0698                     	;# 
   690  0699                     	;# 
   691  069A                     	;# 
   692  069B                     	;# 
   693  069C                     	;# 
   694  069D                     	;# 
   695  069E                     	;# 
   696  069F                     	;# 
   697  0E0F                     	;# 
   698  0E10                     	;# 
   699  0E11                     	;# 
   700  0E12                     	;# 
   701  0E13                     	;# 
   702  0E14                     	;# 
   703  0E15                     	;# 
   704  0E17                     	;# 
   705  0E20                     	;# 
   706  0E21                     	;# 
   707  0E22                     	;# 
   708  0E24                     	;# 
   709  0E25                     	;# 
   710  0E28                     	;# 
   711  0E29                     	;# 
   712  0E2A                     	;# 
   713  0E2B                     	;# 
   714  0E90                     	;# 
   715  0E91                     	;# 
   716  0E92                     	;# 
   717  0E93                     	;# 
   718  0E94                     	;# 
   719  0E95                     	;# 
   720  0E96                     	;# 
   721  0E97                     	;# 
   722  0E98                     	;# 
   723  0E99                     	;# 
   724  0E9A                     	;# 
   725  0E9B                     	;# 
   726  0E9C                     	;# 
   727  0E9D                     	;# 
   728  0E9E                     	;# 
   729  0E9F                     	;# 
   730  0EA0                     	;# 
   731  0EA1                     	;# 
   732  0EA2                     	;# 
   733  0EA3                     	;# 
   734  0EA4                     	;# 
   735  0EA5                     	;# 
   736  0EA6                     	;# 
   737  0EA7                     	;# 
   738  0EA8                     	;# 
   739  0EA9                     	;# 
   740  0EAA                     	;# 
   741  0EAB                     	;# 
   742  0EAC                     	;# 
   743  0EAD                     	;# 
   744  0EAE                     	;# 
   745  0EAF                     	;# 
   746  0EB0                     	;# 
   747  0EB1                     	;# 
   748  0EB2                     	;# 
   749  0F0F                     	;# 
   750  0F10                     	;# 
   751  0F11                     	;# 
   752  0F12                     	;# 
   753  0F13                     	;# 
   754  0F14                     	;# 
   755  0F15                     	;# 
   756  0F16                     	;# 
   757  0F17                     	;# 
   758  0F18                     	;# 
   759  0F19                     	;# 
   760  0F1A                     	;# 
   761  0F1B                     	;# 
   762  0F1C                     	;# 
   763  0F1D                     	;# 
   764  0F1E                     	;# 
   765  0F1F                     	;# 
   766  0F20                     	;# 
   767  0F21                     	;# 
   768  0F22                     	;# 
   769  0F23                     	;# 
   770  0F24                     	;# 
   771  0F25                     	;# 
   772  0F26                     	;# 
   773  0F27                     	;# 
   774  0F28                     	;# 
   775  0F29                     	;# 
   776  0F2A                     	;# 
   777  0F2B                     	;# 
   778  0F2C                     	;# 
   779  0F2D                     	;# 
   780  0F2E                     	;# 
   781  0F2F                     	;# 
   782  0F30                     	;# 
   783  0F31                     	;# 
   784  0F32                     	;# 
   785  0F33                     	;# 
   786  0F34                     	;# 
   787  0F35                     	;# 
   788  0F36                     	;# 
   789  0F37                     	;# 
   790  0FE4                     	;# 
   791  0FE5                     	;# 
   792  0FE6                     	;# 
   793  0FE7                     	;# 
   794  0FE8                     	;# 
   795  0FE9                     	;# 
   796  0FEA                     	;# 
   797  0FEB                     	;# 
   798  0FED                     	;# 
   799  0FEE                     	;# 
   800  0FEF                     	;# 
   801  0000                     	;# 
   802  0001                     	;# 
   803  0002                     	;# 
   804  0003                     	;# 
   805  0004                     	;# 
   806  0005                     	;# 
   807  0006                     	;# 
   808  0007                     	;# 
   809  0008                     	;# 
   810  0009                     	;# 
   811  000A                     	;# 
   812  000B                     	;# 
   813  000C                     	;# 
   814  000D                     	;# 
   815  000E                     	;# 
   816  000F                     	;# 
   817  0010                     	;# 
   818  0011                     	;# 
   819  0012                     	;# 
   820  0013                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0016                     	;# 
   824  0017                     	;# 
   825  0018                     	;# 
   826  0019                     	;# 
   827  001A                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  008C                     	;# 
   831  008D                     	;# 
   832  008E                     	;# 
   833  008F                     	;# 
   834  0090                     	;# 
   835  0091                     	;# 
   836  0092                     	;# 
   837  0093                     	;# 
   838  0095                     	;# 
   839  0096                     	;# 
   840  0097                     	;# 
   841  0098                     	;# 
   842  0099                     	;# 
   843  009A                     	;# 
   844  009B                     	;# 
   845  009B                     	;# 
   846  009C                     	;# 
   847  009D                     	;# 
   848  009E                     	;# 
   849  009F                     	;# 
   850  010C                     	;# 
   851  010D                     	;# 
   852  010E                     	;# 
   853  010F                     	;# 
   854  0110                     	;# 
   855  0111                     	;# 
   856  0112                     	;# 
   857  0113                     	;# 
   858  0114                     	;# 
   859  0115                     	;# 
   860  0116                     	;# 
   861  0117                     	;# 
   862  0118                     	;# 
   863  0119                     	;# 
   864  011A                     	;# 
   865  011B                     	;# 
   866  011B                     	;# 
   867  011C                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  018E                     	;# 
   871  018F                     	;# 
   872  0190                     	;# 
   873  0191                     	;# 
   874  0191                     	;# 
   875  0192                     	;# 
   876  0193                     	;# 
   877  0193                     	;# 
   878  0194                     	;# 
   879  0195                     	;# 
   880  0196                     	;# 
   881  0197                     	;# 
   882  0199                     	;# 
   883  0199                     	;# 
   884  0199                     	;# 
   885  019A                     	;# 
   886  019A                     	;# 
   887  019A                     	;# 
   888  019B                     	;# 
   889  019B                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019C                     	;# 
   894  019C                     	;# 
   895  019C                     	;# 
   896  019D                     	;# 
   897  019D                     	;# 
   898  019D                     	;# 
   899  019E                     	;# 
   900  019E                     	;# 
   901  019E                     	;# 
   902  019F                     	;# 
   903  019F                     	;# 
   904  019F                     	;# 
   905  019F                     	;# 
   906  019F                     	;# 
   907  020C                     	;# 
   908  020D                     	;# 
   909  020E                     	;# 
   910  020F                     	;# 
   911  0210                     	;# 
   912  0211                     	;# 
   913  0211                     	;# 
   914  0212                     	;# 
   915  0212                     	;# 
   916  0213                     	;# 
   917  0213                     	;# 
   918  0214                     	;# 
   919  0214                     	;# 
   920  0215                     	;# 
   921  0215                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0216                     	;# 
   925  0216                     	;# 
   926  0217                     	;# 
   927  0217                     	;# 
   928  028C                     	;# 
   929  028D                     	;# 
   930  028E                     	;# 
   931  028F                     	;# 
   932  0290                     	;# 
   933  0291                     	;# 
   934  0291                     	;# 
   935  0292                     	;# 
   936  0293                     	;# 
   937  0293                     	;# 
   938  0298                     	;# 
   939  0298                     	;# 
   940  0299                     	;# 
   941  029A                     	;# 
   942  029A                     	;# 
   943  029E                     	;# 
   944  030C                     	;# 
   945  030D                     	;# 
   946  030E                     	;# 
   947  030F                     	;# 
   948  0310                     	;# 
   949  038C                     	;# 
   950  038D                     	;# 
   951  038E                     	;# 
   952  038F                     	;# 
   953  0390                     	;# 
   954  0391                     	;# 
   955  0392                     	;# 
   956  0393                     	;# 
   957  0394                     	;# 
   958  0395                     	;# 
   959  0396                     	;# 
   960  0397                     	;# 
   961  0398                     	;# 
   962  0399                     	;# 
   963  039D                     	;# 
   964  039E                     	;# 
   965  039F                     	;# 
   966  0415                     	;# 
   967  0416                     	;# 
   968  0417                     	;# 
   969  041C                     	;# 
   970  041D                     	;# 
   971  041E                     	;# 
   972  0498                     	;# 
   973  0498                     	;# 
   974  0499                     	;# 
   975  049A                     	;# 
   976  049B                     	;# 
   977  049B                     	;# 
   978  049C                     	;# 
   979  049D                     	;# 
   980  049E                     	;# 
   981  049F                     	;# 
   982  0511                     	;# 
   983  0515                     	;# 
   984  0617                     	;# 
   985  0618                     	;# 
   986  0619                     	;# 
   987  0619                     	;# 
   988  061A                     	;# 
   989  061B                     	;# 
   990  061C                     	;# 
   991  061C                     	;# 
   992  0691                     	;# 
   993  0692                     	;# 
   994  0693                     	;# 
   995  0694                     	;# 
   996  0695                     	;# 
   997  0696                     	;# 
   998  0697                     	;# 
   999  0698                     	;# 
  1000  0699                     	;# 
  1001  069A                     	;# 
  1002  069B                     	;# 
  1003  069C                     	;# 
  1004  069D                     	;# 
  1005  069E                     	;# 
  1006  069F                     	;# 
  1007  0E0F                     	;# 
  1008  0E10                     	;# 
  1009  0E11                     	;# 
  1010  0E12                     	;# 
  1011  0E13                     	;# 
  1012  0E14                     	;# 
  1013  0E15                     	;# 
  1014  0E17                     	;# 
  1015  0E20                     	;# 
  1016  0E21                     	;# 
  1017  0E22                     	;# 
  1018  0E24                     	;# 
  1019  0E25                     	;# 
  1020  0E28                     	;# 
  1021  0E29                     	;# 
  1022  0E2A                     	;# 
  1023  0E2B                     	;# 
  1024  0E90                     	;# 
  1025  0E91                     	;# 
  1026  0E92                     	;# 
  1027  0E93                     	;# 
  1028  0E94                     	;# 
  1029  0E95                     	;# 
  1030  0E96                     	;# 
  1031  0E97                     	;# 
  1032  0E98                     	;# 
  1033  0E99                     	;# 
  1034  0E9A                     	;# 
  1035  0E9B                     	;# 
  1036  0E9C                     	;# 
  1037  0E9D                     	;# 
  1038  0E9E                     	;# 
  1039  0E9F                     	;# 
  1040  0EA0                     	;# 
  1041  0EA1                     	;# 
  1042  0EA2                     	;# 
  1043  0EA3                     	;# 
  1044  0EA4                     	;# 
  1045  0EA5                     	;# 
  1046  0EA6                     	;# 
  1047  0EA7                     	;# 
  1048  0EA8                     	;# 
  1049  0EA9                     	;# 
  1050  0EAA                     	;# 
  1051  0EAB                     	;# 
  1052  0EAC                     	;# 
  1053  0EAD                     	;# 
  1054  0EAE                     	;# 
  1055  0EAF                     	;# 
  1056  0EB0                     	;# 
  1057  0EB1                     	;# 
  1058  0EB2                     	;# 
  1059  0F0F                     	;# 
  1060  0F10                     	;# 
  1061  0F11                     	;# 
  1062  0F12                     	;# 
  1063  0F13                     	;# 
  1064  0F14                     	;# 
  1065  0F15                     	;# 
  1066  0F16                     	;# 
  1067  0F17                     	;# 
  1068  0F18                     	;# 
  1069  0F19                     	;# 
  1070  0F1A                     	;# 
  1071  0F1B                     	;# 
  1072  0F1C                     	;# 
  1073  0F1D                     	;# 
  1074  0F1E                     	;# 
  1075  0F1F                     	;# 
  1076  0F20                     	;# 
  1077  0F21                     	;# 
  1078  0F22                     	;# 
  1079  0F23                     	;# 
  1080  0F24                     	;# 
  1081  0F25                     	;# 
  1082  0F26                     	;# 
  1083  0F27                     	;# 
  1084  0F28                     	;# 
  1085  0F29                     	;# 
  1086  0F2A                     	;# 
  1087  0F2B                     	;# 
  1088  0F2C                     	;# 
  1089  0F2D                     	;# 
  1090  0F2E                     	;# 
  1091  0F2F                     	;# 
  1092  0F30                     	;# 
  1093  0F31                     	;# 
  1094  0F32                     	;# 
  1095  0F33                     	;# 
  1096  0F34                     	;# 
  1097  0F35                     	;# 
  1098  0F36                     	;# 
  1099  0F37                     	;# 
  1100  0FE4                     	;# 
  1101  0FE5                     	;# 
  1102  0FE6                     	;# 
  1103  0FE7                     	;# 
  1104  0FE8                     	;# 
  1105  0FE9                     	;# 
  1106  0FEA                     	;# 
  1107  0FEB                     	;# 
  1108  0FED                     	;# 
  1109  0FEE                     	;# 
  1110  0FEF                     	;# 
  1111  0000                     	;# 
  1112  0001                     	;# 
  1113  0002                     	;# 
  1114  0003                     	;# 
  1115  0004                     	;# 
  1116  0005                     	;# 
  1117  0006                     	;# 
  1118  0007                     	;# 
  1119  0008                     	;# 
  1120  0009                     	;# 
  1121  000A                     	;# 
  1122  000B                     	;# 
  1123  000C                     	;# 
  1124  000D                     	;# 
  1125  000E                     	;# 
  1126  000F                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0015                     	;# 
  1132  0016                     	;# 
  1133  0016                     	;# 
  1134  0017                     	;# 
  1135  0018                     	;# 
  1136  0019                     	;# 
  1137  001A                     	;# 
  1138  001B                     	;# 
  1139  001C                     	;# 
  1140  008C                     	;# 
  1141  008D                     	;# 
  1142  008E                     	;# 
  1143  008F                     	;# 
  1144  0090                     	;# 
  1145  0091                     	;# 
  1146  0092                     	;# 
  1147  0093                     	;# 
  1148  0095                     	;# 
  1149  0096                     	;# 
  1150  0097                     	;# 
  1151  0098                     	;# 
  1152  0099                     	;# 
  1153  009A                     	;# 
  1154  009B                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  010C                     	;# 
  1161  010D                     	;# 
  1162  010E                     	;# 
  1163  010F                     	;# 
  1164  0110                     	;# 
  1165  0111                     	;# 
  1166  0112                     	;# 
  1167  0113                     	;# 
  1168  0114                     	;# 
  1169  0115                     	;# 
  1170  0116                     	;# 
  1171  0117                     	;# 
  1172  0118                     	;# 
  1173  0119                     	;# 
  1174  011A                     	;# 
  1175  011B                     	;# 
  1176  011B                     	;# 
  1177  011C                     	;# 
  1178  018C                     	;# 
  1179  018D                     	;# 
  1180  018E                     	;# 
  1181  018F                     	;# 
  1182  0190                     	;# 
  1183  0191                     	;# 
  1184  0191                     	;# 
  1185  0192                     	;# 
  1186  0193                     	;# 
  1187  0193                     	;# 
  1188  0194                     	;# 
  1189  0195                     	;# 
  1190  0196                     	;# 
  1191  0197                     	;# 
  1192  0199                     	;# 
  1193  0199                     	;# 
  1194  0199                     	;# 
  1195  019A                     	;# 
  1196  019A                     	;# 
  1197  019A                     	;# 
  1198  019B                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019C                     	;# 
  1204  019C                     	;# 
  1205  019C                     	;# 
  1206  019D                     	;# 
  1207  019D                     	;# 
  1208  019D                     	;# 
  1209  019E                     	;# 
  1210  019E                     	;# 
  1211  019E                     	;# 
  1212  019F                     	;# 
  1213  019F                     	;# 
  1214  019F                     	;# 
  1215  019F                     	;# 
  1216  019F                     	;# 
  1217  020C                     	;# 
  1218  020D                     	;# 
  1219  020E                     	;# 
  1220  020F                     	;# 
  1221  0210                     	;# 
  1222  0211                     	;# 
  1223  0211                     	;# 
  1224  0212                     	;# 
  1225  0212                     	;# 
  1226  0213                     	;# 
  1227  0213                     	;# 
  1228  0214                     	;# 
  1229  0214                     	;# 
  1230  0215                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0215                     	;# 
  1234  0216                     	;# 
  1235  0216                     	;# 
  1236  0217                     	;# 
  1237  0217                     	;# 
  1238  028C                     	;# 
  1239  028D                     	;# 
  1240  028E                     	;# 
  1241  028F                     	;# 
  1242  0290                     	;# 
  1243  0291                     	;# 
  1244  0291                     	;# 
  1245  0292                     	;# 
  1246  0293                     	;# 
  1247  0293                     	;# 
  1248  0298                     	;# 
  1249  0298                     	;# 
  1250  0299                     	;# 
  1251  029A                     	;# 
  1252  029A                     	;# 
  1253  029E                     	;# 
  1254  030C                     	;# 
  1255  030D                     	;# 
  1256  030E                     	;# 
  1257  030F                     	;# 
  1258  0310                     	;# 
  1259  038C                     	;# 
  1260  038D                     	;# 
  1261  038E                     	;# 
  1262  038F                     	;# 
  1263  0390                     	;# 
  1264  0391                     	;# 
  1265  0392                     	;# 
  1266  0393                     	;# 
  1267  0394                     	;# 
  1268  0395                     	;# 
  1269  0396                     	;# 
  1270  0397                     	;# 
  1271  0398                     	;# 
  1272  0399                     	;# 
  1273  039D                     	;# 
  1274  039E                     	;# 
  1275  039F                     	;# 
  1276  0415                     	;# 
  1277  0416                     	;# 
  1278  0417                     	;# 
  1279  041C                     	;# 
  1280  041D                     	;# 
  1281  041E                     	;# 
  1282  0498                     	;# 
  1283  0498                     	;# 
  1284  0499                     	;# 
  1285  049A                     	;# 
  1286  049B                     	;# 
  1287  049B                     	;# 
  1288  049C                     	;# 
  1289  049D                     	;# 
  1290  049E                     	;# 
  1291  049F                     	;# 
  1292  0511                     	;# 
  1293  0515                     	;# 
  1294  0617                     	;# 
  1295  0618                     	;# 
  1296  0619                     	;# 
  1297  0619                     	;# 
  1298  061A                     	;# 
  1299  061B                     	;# 
  1300  061C                     	;# 
  1301  061C                     	;# 
  1302  0691                     	;# 
  1303  0692                     	;# 
  1304  0693                     	;# 
  1305  0694                     	;# 
  1306  0695                     	;# 
  1307  0696                     	;# 
  1308  0697                     	;# 
  1309  0698                     	;# 
  1310  0699                     	;# 
  1311  069A                     	;# 
  1312  069B                     	;# 
  1313  069C                     	;# 
  1314  069D                     	;# 
  1315  069E                     	;# 
  1316  069F                     	;# 
  1317  0E0F                     	;# 
  1318  0E10                     	;# 
  1319  0E11                     	;# 
  1320  0E12                     	;# 
  1321  0E13                     	;# 
  1322  0E14                     	;# 
  1323  0E15                     	;# 
  1324  0E17                     	;# 
  1325  0E20                     	;# 
  1326  0E21                     	;# 
  1327  0E22                     	;# 
  1328  0E24                     	;# 
  1329  0E25                     	;# 
  1330  0E28                     	;# 
  1331  0E29                     	;# 
  1332  0E2A                     	;# 
  1333  0E2B                     	;# 
  1334  0E90                     	;# 
  1335  0E91                     	;# 
  1336  0E92                     	;# 
  1337  0E93                     	;# 
  1338  0E94                     	;# 
  1339  0E95                     	;# 
  1340  0E96                     	;# 
  1341  0E97                     	;# 
  1342  0E98                     	;# 
  1343  0E99                     	;# 
  1344  0E9A                     	;# 
  1345  0E9B                     	;# 
  1346  0E9C                     	;# 
  1347  0E9D                     	;# 
  1348  0E9E                     	;# 
  1349  0E9F                     	;# 
  1350  0EA0                     	;# 
  1351  0EA1                     	;# 
  1352  0EA2                     	;# 
  1353  0EA3                     	;# 
  1354  0EA4                     	;# 
  1355  0EA5                     	;# 
  1356  0EA6                     	;# 
  1357  0EA7                     	;# 
  1358  0EA8                     	;# 
  1359  0EA9                     	;# 
  1360  0EAA                     	;# 
  1361  0EAB                     	;# 
  1362  0EAC                     	;# 
  1363  0EAD                     	;# 
  1364  0EAE                     	;# 
  1365  0EAF                     	;# 
  1366  0EB0                     	;# 
  1367  0EB1                     	;# 
  1368  0EB2                     	;# 
  1369  0F0F                     	;# 
  1370  0F10                     	;# 
  1371  0F11                     	;# 
  1372  0F12                     	;# 
  1373  0F13                     	;# 
  1374  0F14                     	;# 
  1375  0F15                     	;# 
  1376  0F16                     	;# 
  1377  0F17                     	;# 
  1378  0F18                     	;# 
  1379  0F19                     	;# 
  1380  0F1A                     	;# 
  1381  0F1B                     	;# 
  1382  0F1C                     	;# 
  1383  0F1D                     	;# 
  1384  0F1E                     	;# 
  1385  0F1F                     	;# 
  1386  0F20                     	;# 
  1387  0F21                     	;# 
  1388  0F22                     	;# 
  1389  0F23                     	;# 
  1390  0F24                     	;# 
  1391  0F25                     	;# 
  1392  0F26                     	;# 
  1393  0F27                     	;# 
  1394  0F28                     	;# 
  1395  0F29                     	;# 
  1396  0F2A                     	;# 
  1397  0F2B                     	;# 
  1398  0F2C                     	;# 
  1399  0F2D                     	;# 
  1400  0F2E                     	;# 
  1401  0F2F                     	;# 
  1402  0F30                     	;# 
  1403  0F31                     	;# 
  1404  0F32                     	;# 
  1405  0F33                     	;# 
  1406  0F34                     	;# 
  1407  0F35                     	;# 
  1408  0F36                     	;# 
  1409  0F37                     	;# 
  1410  0FE4                     	;# 
  1411  0FE5                     	;# 
  1412  0FE6                     	;# 
  1413  0FE7                     	;# 
  1414  0FE8                     	;# 
  1415  0FE9                     	;# 
  1416  0FEA                     	;# 
  1417  0FEB                     	;# 
  1418  0FED                     	;# 
  1419  0FEE                     	;# 
  1420  0FEF                     	;# 
  1421  0000                     	;# 
  1422  0001                     	;# 
  1423  0002                     	;# 
  1424  0003                     	;# 
  1425  0004                     	;# 
  1426  0005                     	;# 
  1427  0006                     	;# 
  1428  0007                     	;# 
  1429  0008                     	;# 
  1430  0009                     	;# 
  1431  000A                     	;# 
  1432  000B                     	;# 
  1433  000C                     	;# 
  1434  000D                     	;# 
  1435  000E                     	;# 
  1436  000F                     	;# 
  1437  0010                     	;# 
  1438  0011                     	;# 
  1439  0012                     	;# 
  1440  0013                     	;# 
  1441  0015                     	;# 
  1442  0016                     	;# 
  1443  0016                     	;# 
  1444  0017                     	;# 
  1445  0018                     	;# 
  1446  0019                     	;# 
  1447  001A                     	;# 
  1448  001B                     	;# 
  1449  001C                     	;# 
  1450  008C                     	;# 
  1451  008D                     	;# 
  1452  008E                     	;# 
  1453  008F                     	;# 
  1454  0090                     	;# 
  1455  0091                     	;# 
  1456  0092                     	;# 
  1457  0093                     	;# 
  1458  0095                     	;# 
  1459  0096                     	;# 
  1460  0097                     	;# 
  1461  0098                     	;# 
  1462  0099                     	;# 
  1463  009A                     	;# 
  1464  009B                     	;# 
  1465  009B                     	;# 
  1466  009C                     	;# 
  1467  009D                     	;# 
  1468  009E                     	;# 
  1469  009F                     	;# 
  1470  010C                     	;# 
  1471  010D                     	;# 
  1472  010E                     	;# 
  1473  010F                     	;# 
  1474  0110                     	;# 
  1475  0111                     	;# 
  1476  0112                     	;# 
  1477  0113                     	;# 
  1478  0114                     	;# 
  1479  0115                     	;# 
  1480  0116                     	;# 
  1481  0117                     	;# 
  1482  0118                     	;# 
  1483  0119                     	;# 
  1484  011A                     	;# 
  1485  011B                     	;# 
  1486  011B                     	;# 
  1487  011C                     	;# 
  1488  018C                     	;# 
  1489  018D                     	;# 
  1490  018E                     	;# 
  1491  018F                     	;# 
  1492  0190                     	;# 
  1493  0191                     	;# 
  1494  0191                     	;# 
  1495  0192                     	;# 
  1496  0193                     	;# 
  1497  0193                     	;# 
  1498  0194                     	;# 
  1499  0195                     	;# 
  1500  0196                     	;# 
  1501  0197                     	;# 
  1502  0199                     	;# 
  1503  0199                     	;# 
  1504  0199                     	;# 
  1505  019A                     	;# 
  1506  019A                     	;# 
  1507  019A                     	;# 
  1508  019B                     	;# 
  1509  019B                     	;# 
  1510  019B                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019C                     	;# 
  1514  019C                     	;# 
  1515  019C                     	;# 
  1516  019D                     	;# 
  1517  019D                     	;# 
  1518  019D                     	;# 
  1519  019E                     	;# 
  1520  019E                     	;# 
  1521  019E                     	;# 
  1522  019F                     	;# 
  1523  019F                     	;# 
  1524  019F                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  020C                     	;# 
  1528  020D                     	;# 
  1529  020E                     	;# 
  1530  020F                     	;# 
  1531  0210                     	;# 
  1532  0211                     	;# 
  1533  0211                     	;# 
  1534  0212                     	;# 
  1535  0212                     	;# 
  1536  0213                     	;# 
  1537  0213                     	;# 
  1538  0214                     	;# 
  1539  0214                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0216                     	;# 
  1545  0216                     	;# 
  1546  0217                     	;# 
  1547  0217                     	;# 
  1548  028C                     	;# 
  1549  028D                     	;# 
  1550  028E                     	;# 
  1551  028F                     	;# 
  1552  0290                     	;# 
  1553  0291                     	;# 
  1554  0291                     	;# 
  1555  0292                     	;# 
  1556  0293                     	;# 
  1557  0293                     	;# 
  1558  0298                     	;# 
  1559  0298                     	;# 
  1560  0299                     	;# 
  1561  029A                     	;# 
  1562  029A                     	;# 
  1563  029E                     	;# 
  1564  030C                     	;# 
  1565  030D                     	;# 
  1566  030E                     	;# 
  1567  030F                     	;# 
  1568  0310                     	;# 
  1569  038C                     	;# 
  1570  038D                     	;# 
  1571  038E                     	;# 
  1572  038F                     	;# 
  1573  0390                     	;# 
  1574  0391                     	;# 
  1575  0392                     	;# 
  1576  0393                     	;# 
  1577  0394                     	;# 
  1578  0395                     	;# 
  1579  0396                     	;# 
  1580  0397                     	;# 
  1581  0398                     	;# 
  1582  0399                     	;# 
  1583  039D                     	;# 
  1584  039E                     	;# 
  1585  039F                     	;# 
  1586  0415                     	;# 
  1587  0416                     	;# 
  1588  0417                     	;# 
  1589  041C                     	;# 
  1590  041D                     	;# 
  1591  041E                     	;# 
  1592  0498                     	;# 
  1593  0498                     	;# 
  1594  0499                     	;# 
  1595  049A                     	;# 
  1596  049B                     	;# 
  1597  049B                     	;# 
  1598  049C                     	;# 
  1599  049D                     	;# 
  1600  049E                     	;# 
  1601  049F                     	;# 
  1602  0511                     	;# 
  1603  0515                     	;# 
  1604  0617                     	;# 
  1605  0618                     	;# 
  1606  0619                     	;# 
  1607  0619                     	;# 
  1608  061A                     	;# 
  1609  061B                     	;# 
  1610  061C                     	;# 
  1611  061C                     	;# 
  1612  0691                     	;# 
  1613  0692                     	;# 
  1614  0693                     	;# 
  1615  0694                     	;# 
  1616  0695                     	;# 
  1617  0696                     	;# 
  1618  0697                     	;# 
  1619  0698                     	;# 
  1620  0699                     	;# 
  1621  069A                     	;# 
  1622  069B                     	;# 
  1623  069C                     	;# 
  1624  069D                     	;# 
  1625  069E                     	;# 
  1626  069F                     	;# 
  1627  0E0F                     	;# 
  1628  0E10                     	;# 
  1629  0E11                     	;# 
  1630  0E12                     	;# 
  1631  0E13                     	;# 
  1632  0E14                     	;# 
  1633  0E15                     	;# 
  1634  0E17                     	;# 
  1635  0E20                     	;# 
  1636  0E21                     	;# 
  1637  0E22                     	;# 
  1638  0E24                     	;# 
  1639  0E25                     	;# 
  1640  0E28                     	;# 
  1641  0E29                     	;# 
  1642  0E2A                     	;# 
  1643  0E2B                     	;# 
  1644  0E90                     	;# 
  1645  0E91                     	;# 
  1646  0E92                     	;# 
  1647  0E93                     	;# 
  1648  0E94                     	;# 
  1649  0E95                     	;# 
  1650  0E96                     	;# 
  1651  0E97                     	;# 
  1652  0E98                     	;# 
  1653  0E99                     	;# 
  1654  0E9A                     	;# 
  1655  0E9B                     	;# 
  1656  0E9C                     	;# 
  1657  0E9D                     	;# 
  1658  0E9E                     	;# 
  1659  0E9F                     	;# 
  1660  0EA0                     	;# 
  1661  0EA1                     	;# 
  1662  0EA2                     	;# 
  1663  0EA3                     	;# 
  1664  0EA4                     	;# 
  1665  0EA5                     	;# 
  1666  0EA6                     	;# 
  1667  0EA7                     	;# 
  1668  0EA8                     	;# 
  1669  0EA9                     	;# 
  1670  0EAA                     	;# 
  1671  0EAB                     	;# 
  1672  0EAC                     	;# 
  1673  0EAD                     	;# 
  1674  0EAE                     	;# 
  1675  0EAF                     	;# 
  1676  0EB0                     	;# 
  1677  0EB1                     	;# 
  1678  0EB2                     	;# 
  1679  0F0F                     	;# 
  1680  0F10                     	;# 
  1681  0F11                     	;# 
  1682  0F12                     	;# 
  1683  0F13                     	;# 
  1684  0F14                     	;# 
  1685  0F15                     	;# 
  1686  0F16                     	;# 
  1687  0F17                     	;# 
  1688  0F18                     	;# 
  1689  0F19                     	;# 
  1690  0F1A                     	;# 
  1691  0F1B                     	;# 
  1692  0F1C                     	;# 
  1693  0F1D                     	;# 
  1694  0F1E                     	;# 
  1695  0F1F                     	;# 
  1696  0F20                     	;# 
  1697  0F21                     	;# 
  1698  0F22                     	;# 
  1699  0F23                     	;# 
  1700  0F24                     	;# 
  1701  0F25                     	;# 
  1702  0F26                     	;# 
  1703  0F27                     	;# 
  1704  0F28                     	;# 
  1705  0F29                     	;# 
  1706  0F2A                     	;# 
  1707  0F2B                     	;# 
  1708  0F2C                     	;# 
  1709  0F2D                     	;# 
  1710  0F2E                     	;# 
  1711  0F2F                     	;# 
  1712  0F30                     	;# 
  1713  0F31                     	;# 
  1714  0F32                     	;# 
  1715  0F33                     	;# 
  1716  0F34                     	;# 
  1717  0F35                     	;# 
  1718  0F36                     	;# 
  1719  0F37                     	;# 
  1720  0FE4                     	;# 
  1721  0FE5                     	;# 
  1722  0FE6                     	;# 
  1723  0FE7                     	;# 
  1724  0FE8                     	;# 
  1725  0FE9                     	;# 
  1726  0FEA                     	;# 
  1727  0FEB                     	;# 
  1728  0FED                     	;# 
  1729  0FEE                     	;# 
  1730  0FEF                     	;# 
  1731  0000                     	;# 
  1732  0001                     	;# 
  1733  0002                     	;# 
  1734  0003                     	;# 
  1735  0004                     	;# 
  1736  0005                     	;# 
  1737  0006                     	;# 
  1738  0007                     	;# 
  1739  0008                     	;# 
  1740  0009                     	;# 
  1741  000A                     	;# 
  1742  000B                     	;# 
  1743  000C                     	;# 
  1744  000D                     	;# 
  1745  000E                     	;# 
  1746  000F                     	;# 
  1747  0010                     	;# 
  1748  0011                     	;# 
  1749  0012                     	;# 
  1750  0013                     	;# 
  1751  0015                     	;# 
  1752  0016                     	;# 
  1753  0016                     	;# 
  1754  0017                     	;# 
  1755  0018                     	;# 
  1756  0019                     	;# 
  1757  001A                     	;# 
  1758  001B                     	;# 
  1759  001C                     	;# 
  1760  008C                     	;# 
  1761  008D                     	;# 
  1762  008E                     	;# 
  1763  008F                     	;# 
  1764  0090                     	;# 
  1765  0091                     	;# 
  1766  0092                     	;# 
  1767  0093                     	;# 
  1768  0095                     	;# 
  1769  0096                     	;# 
  1770  0097                     	;# 
  1771  0098                     	;# 
  1772  0099                     	;# 
  1773  009A                     	;# 
  1774  009B                     	;# 
  1775  009B                     	;# 
  1776  009C                     	;# 
  1777  009D                     	;# 
  1778  009E                     	;# 
  1779  009F                     	;# 
  1780  010C                     	;# 
  1781  010D                     	;# 
  1782  010E                     	;# 
  1783  010F                     	;# 
  1784  0110                     	;# 
  1785  0111                     	;# 
  1786  0112                     	;# 
  1787  0113                     	;# 
  1788  0114                     	;# 
  1789  0115                     	;# 
  1790  0116                     	;# 
  1791  0117                     	;# 
  1792  0118                     	;# 
  1793  0119                     	;# 
  1794  011A                     	;# 
  1795  011B                     	;# 
  1796  011B                     	;# 
  1797  011C                     	;# 
  1798  018C                     	;# 
  1799  018D                     	;# 
  1800  018E                     	;# 
  1801  018F                     	;# 
  1802  0190                     	;# 
  1803  0191                     	;# 
  1804  0191                     	;# 
  1805  0192                     	;# 
  1806  0193                     	;# 
  1807  0193                     	;# 
  1808  0194                     	;# 
  1809  0195                     	;# 
  1810  0196                     	;# 
  1811  0197                     	;# 
  1812  0199                     	;# 
  1813  0199                     	;# 
  1814  0199                     	;# 
  1815  019A                     	;# 
  1816  019A                     	;# 
  1817  019A                     	;# 
  1818  019B                     	;# 
  1819  019B                     	;# 
  1820  019B                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019C                     	;# 
  1824  019C                     	;# 
  1825  019C                     	;# 
  1826  019D                     	;# 
  1827  019D                     	;# 
  1828  019D                     	;# 
  1829  019E                     	;# 
  1830  019E                     	;# 
  1831  019E                     	;# 
  1832  019F                     	;# 
  1833  019F                     	;# 
  1834  019F                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  020C                     	;# 
  1838  020D                     	;# 
  1839  020E                     	;# 
  1840  020F                     	;# 
  1841  0210                     	;# 
  1842  0211                     	;# 
  1843  0211                     	;# 
  1844  0212                     	;# 
  1845  0212                     	;# 
  1846  0213                     	;# 
  1847  0213                     	;# 
  1848  0214                     	;# 
  1849  0214                     	;# 
  1850  0215                     	;# 
  1851  0215                     	;# 
  1852  0215                     	;# 
  1853  0215                     	;# 
  1854  0216                     	;# 
  1855  0216                     	;# 
  1856  0217                     	;# 
  1857  0217                     	;# 
  1858  028C                     	;# 
  1859  028D                     	;# 
  1860  028E                     	;# 
  1861  028F                     	;# 
  1862  0290                     	;# 
  1863  0291                     	;# 
  1864  0291                     	;# 
  1865  0292                     	;# 
  1866  0293                     	;# 
  1867  0293                     	;# 
  1868  0298                     	;# 
  1869  0298                     	;# 
  1870  0299                     	;# 
  1871  029A                     	;# 
  1872  029A                     	;# 
  1873  029E                     	;# 
  1874  030C                     	;# 
  1875  030D                     	;# 
  1876  030E                     	;# 
  1877  030F                     	;# 
  1878  0310                     	;# 
  1879  038C                     	;# 
  1880  038D                     	;# 
  1881  038E                     	;# 
  1882  038F                     	;# 
  1883  0390                     	;# 
  1884  0391                     	;# 
  1885  0392                     	;# 
  1886  0393                     	;# 
  1887  0394                     	;# 
  1888  0395                     	;# 
  1889  0396                     	;# 
  1890  0397                     	;# 
  1891  0398                     	;# 
  1892  0399                     	;# 
  1893  039D                     	;# 
  1894  039E                     	;# 
  1895  039F                     	;# 
  1896  0415                     	;# 
  1897  0416                     	;# 
  1898  0417                     	;# 
  1899  041C                     	;# 
  1900  041D                     	;# 
  1901  041E                     	;# 
  1902  0498                     	;# 
  1903  0498                     	;# 
  1904  0499                     	;# 
  1905  049A                     	;# 
  1906  049B                     	;# 
  1907  049B                     	;# 
  1908  049C                     	;# 
  1909  049D                     	;# 
  1910  049E                     	;# 
  1911  049F                     	;# 
  1912  0511                     	;# 
  1913  0515                     	;# 
  1914  0617                     	;# 
  1915  0618                     	;# 
  1916  0619                     	;# 
  1917  0619                     	;# 
  1918  061A                     	;# 
  1919  061B                     	;# 
  1920  061C                     	;# 
  1921  061C                     	;# 
  1922  0691                     	;# 
  1923  0692                     	;# 
  1924  0693                     	;# 
  1925  0694                     	;# 
  1926  0695                     	;# 
  1927  0696                     	;# 
  1928  0697                     	;# 
  1929  0698                     	;# 
  1930  0699                     	;# 
  1931  069A                     	;# 
  1932  069B                     	;# 
  1933  069C                     	;# 
  1934  069D                     	;# 
  1935  069E                     	;# 
  1936  069F                     	;# 
  1937  0E0F                     	;# 
  1938  0E10                     	;# 
  1939  0E11                     	;# 
  1940  0E12                     	;# 
  1941  0E13                     	;# 
  1942  0E14                     	;# 
  1943  0E15                     	;# 
  1944  0E17                     	;# 
  1945  0E20                     	;# 
  1946  0E21                     	;# 
  1947  0E22                     	;# 
  1948  0E24                     	;# 
  1949  0E25                     	;# 
  1950  0E28                     	;# 
  1951  0E29                     	;# 
  1952  0E2A                     	;# 
  1953  0E2B                     	;# 
  1954  0E90                     	;# 
  1955  0E91                     	;# 
  1956  0E92                     	;# 
  1957  0E93                     	;# 
  1958  0E94                     	;# 
  1959  0E95                     	;# 
  1960  0E96                     	;# 
  1961  0E97                     	;# 
  1962  0E98                     	;# 
  1963  0E99                     	;# 
  1964  0E9A                     	;# 
  1965  0E9B                     	;# 
  1966  0E9C                     	;# 
  1967  0E9D                     	;# 
  1968  0E9E                     	;# 
  1969  0E9F                     	;# 
  1970  0EA0                     	;# 
  1971  0EA1                     	;# 
  1972  0EA2                     	;# 
  1973  0EA3                     	;# 
  1974  0EA4                     	;# 
  1975  0EA5                     	;# 
  1976  0EA6                     	;# 
  1977  0EA7                     	;# 
  1978  0EA8                     	;# 
  1979  0EA9                     	;# 
  1980  0EAA                     	;# 
  1981  0EAB                     	;# 
  1982  0EAC                     	;# 
  1983  0EAD                     	;# 
  1984  0EAE                     	;# 
  1985  0EAF                     	;# 
  1986  0EB0                     	;# 
  1987  0EB1                     	;# 
  1988  0EB2                     	;# 
  1989  0F0F                     	;# 
  1990  0F10                     	;# 
  1991  0F11                     	;# 
  1992  0F12                     	;# 
  1993  0F13                     	;# 
  1994  0F14                     	;# 
  1995  0F15                     	;# 
  1996  0F16                     	;# 
  1997  0F17                     	;# 
  1998  0F18                     	;# 
  1999  0F19                     	;# 
  2000  0F1A                     	;# 
  2001  0F1B                     	;# 
  2002  0F1C                     	;# 
  2003  0F1D                     	;# 
  2004  0F1E                     	;# 
  2005  0F1F                     	;# 
  2006  0F20                     	;# 
  2007  0F21                     	;# 
  2008  0F22                     	;# 
  2009  0F23                     	;# 
  2010  0F24                     	;# 
  2011  0F25                     	;# 
  2012  0F26                     	;# 
  2013  0F27                     	;# 
  2014  0F28                     	;# 
  2015  0F29                     	;# 
  2016  0F2A                     	;# 
  2017  0F2B                     	;# 
  2018  0F2C                     	;# 
  2019  0F2D                     	;# 
  2020  0F2E                     	;# 
  2021  0F2F                     	;# 
  2022  0F30                     	;# 
  2023  0F31                     	;# 
  2024  0F32                     	;# 
  2025  0F33                     	;# 
  2026  0F34                     	;# 
  2027  0F35                     	;# 
  2028  0F36                     	;# 
  2029  0F37                     	;# 
  2030  0FE4                     	;# 
  2031  0FE5                     	;# 
  2032  0FE6                     	;# 
  2033  0FE7                     	;# 
  2034  0FE8                     	;# 
  2035  0FE9                     	;# 
  2036  0FEA                     	;# 
  2037  0FEB                     	;# 
  2038  0FED                     	;# 
  2039  0FEE                     	;# 
  2040  0FEF                     	;# 
  2041  0000                     	;# 
  2042  0001                     	;# 
  2043  0002                     	;# 
  2044  0003                     	;# 
  2045  0004                     	;# 
  2046  0005                     	;# 
  2047  0006                     	;# 
  2048  0007                     	;# 
  2049  0008                     	;# 
  2050  0009                     	;# 
  2051  000A                     	;# 
  2052  000B                     	;# 
  2053  000C                     	;# 
  2054  000D                     	;# 
  2055  000E                     	;# 
  2056  000F                     	;# 
  2057  0010                     	;# 
  2058  0011                     	;# 
  2059  0012                     	;# 
  2060  0013                     	;# 
  2061  0015                     	;# 
  2062  0016                     	;# 
  2063  0016                     	;# 
  2064  0017                     	;# 
  2065  0018                     	;# 
  2066  0019                     	;# 
  2067  001A                     	;# 
  2068  001B                     	;# 
  2069  001C                     	;# 
  2070  008C                     	;# 
  2071  008D                     	;# 
  2072  008E                     	;# 
  2073  008F                     	;# 
  2074  0090                     	;# 
  2075  0091                     	;# 
  2076  0092                     	;# 
  2077  0093                     	;# 
  2078  0095                     	;# 
  2079  0096                     	;# 
  2080  0097                     	;# 
  2081  0098                     	;# 
  2082  0099                     	;# 
  2083  009A                     	;# 
  2084  009B                     	;# 
  2085  009B                     	;# 
  2086  009C                     	;# 
  2087  009D                     	;# 
  2088  009E                     	;# 
  2089  009F                     	;# 
  2090  010C                     	;# 
  2091  010D                     	;# 
  2092  010E                     	;# 
  2093  010F                     	;# 
  2094  0110                     	;# 
  2095  0111                     	;# 
  2096  0112                     	;# 
  2097  0113                     	;# 
  2098  0114                     	;# 
  2099  0115                     	;# 
  2100  0116                     	;# 
  2101  0117                     	;# 
  2102  0118                     	;# 
  2103  0119                     	;# 
  2104  011A                     	;# 
  2105  011B                     	;# 
  2106  011B                     	;# 
  2107  011C                     	;# 
  2108  018C                     	;# 
  2109  018D                     	;# 
  2110  018E                     	;# 
  2111  018F                     	;# 
  2112  0190                     	;# 
  2113  0191                     	;# 
  2114  0191                     	;# 
  2115  0192                     	;# 
  2116  0193                     	;# 
  2117  0193                     	;# 
  2118  0194                     	;# 
  2119  0195                     	;# 
  2120  0196                     	;# 
  2121  0197                     	;# 
  2122  0199                     	;# 
  2123  0199                     	;# 
  2124  0199                     	;# 
  2125  019A                     	;# 
  2126  019A                     	;# 
  2127  019A                     	;# 
  2128  019B                     	;# 
  2129  019B                     	;# 
  2130  019B                     	;# 
  2131  019B                     	;# 
  2132  019B                     	;# 
  2133  019C                     	;# 
  2134  019C                     	;# 
  2135  019C                     	;# 
  2136  019D                     	;# 
  2137  019D                     	;# 
  2138  019D                     	;# 
  2139  019E                     	;# 
  2140  019E                     	;# 
  2141  019E                     	;# 
  2142  019F                     	;# 
  2143  019F                     	;# 
  2144  019F                     	;# 
  2145  019F                     	;# 
  2146  019F                     	;# 
  2147  020C                     	;# 
  2148  020D                     	;# 
  2149  020E                     	;# 
  2150  020F                     	;# 
  2151  0210                     	;# 
  2152  0211                     	;# 
  2153  0211                     	;# 
  2154  0212                     	;# 
  2155  0212                     	;# 
  2156  0213                     	;# 
  2157  0213                     	;# 
  2158  0214                     	;# 
  2159  0214                     	;# 
  2160  0215                     	;# 
  2161  0215                     	;# 
  2162  0215                     	;# 
  2163  0215                     	;# 
  2164  0216                     	;# 
  2165  0216                     	;# 
  2166  0217                     	;# 
  2167  0217                     	;# 
  2168  028C                     	;# 
  2169  028D                     	;# 
  2170  028E                     	;# 
  2171  028F                     	;# 
  2172  0290                     	;# 
  2173  0291                     	;# 
  2174  0291                     	;# 
  2175  0292                     	;# 
  2176  0293                     	;# 
  2177  0293                     	;# 
  2178  0298                     	;# 
  2179  0298                     	;# 
  2180  0299                     	;# 
  2181  029A                     	;# 
  2182  029A                     	;# 
  2183  029E                     	;# 
  2184  030C                     	;# 
  2185  030D                     	;# 
  2186  030E                     	;# 
  2187  030F                     	;# 
  2188  0310                     	;# 
  2189  038C                     	;# 
  2190  038D                     	;# 
  2191  038E                     	;# 
  2192  038F                     	;# 
  2193  0390                     	;# 
  2194  0391                     	;# 
  2195  0392                     	;# 
  2196  0393                     	;# 
  2197  0394                     	;# 
  2198  0395                     	;# 
  2199  0396                     	;# 
  2200  0397                     	;# 
  2201  0398                     	;# 
  2202  0399                     	;# 
  2203  039D                     	;# 
  2204  039E                     	;# 
  2205  039F                     	;# 
  2206  0415                     	;# 
  2207  0416                     	;# 
  2208  0417                     	;# 
  2209  041C                     	;# 
  2210  041D                     	;# 
  2211  041E                     	;# 
  2212  0498                     	;# 
  2213  0498                     	;# 
  2214  0499                     	;# 
  2215  049A                     	;# 
  2216  049B                     	;# 
  2217  049B                     	;# 
  2218  049C                     	;# 
  2219  049D                     	;# 
  2220  049E                     	;# 
  2221  049F                     	;# 
  2222  0511                     	;# 
  2223  0515                     	;# 
  2224  0617                     	;# 
  2225  0618                     	;# 
  2226  0619                     	;# 
  2227  0619                     	;# 
  2228  061A                     	;# 
  2229  061B                     	;# 
  2230  061C                     	;# 
  2231  061C                     	;# 
  2232  0691                     	;# 
  2233  0692                     	;# 
  2234  0693                     	;# 
  2235  0694                     	;# 
  2236  0695                     	;# 
  2237  0696                     	;# 
  2238  0697                     	;# 
  2239  0698                     	;# 
  2240  0699                     	;# 
  2241  069A                     	;# 
  2242  069B                     	;# 
  2243  069C                     	;# 
  2244  069D                     	;# 
  2245  069E                     	;# 
  2246  069F                     	;# 
  2247  0E0F                     	;# 
  2248  0E10                     	;# 
  2249  0E11                     	;# 
  2250  0E12                     	;# 
  2251  0E13                     	;# 
  2252  0E14                     	;# 
  2253  0E15                     	;# 
  2254  0E17                     	;# 
  2255  0E20                     	;# 
  2256  0E21                     	;# 
  2257  0E22                     	;# 
  2258  0E24                     	;# 
  2259  0E25                     	;# 
  2260  0E28                     	;# 
  2261  0E29                     	;# 
  2262  0E2A                     	;# 
  2263  0E2B                     	;# 
  2264  0E90                     	;# 
  2265  0E91                     	;# 
  2266  0E92                     	;# 
  2267  0E93                     	;# 
  2268  0E94                     	;# 
  2269  0E95                     	;# 
  2270  0E96                     	;# 
  2271  0E97                     	;# 
  2272  0E98                     	;# 
  2273  0E99                     	;# 
  2274  0E9A                     	;# 
  2275  0E9B                     	;# 
  2276  0E9C                     	;# 
  2277  0E9D                     	;# 
  2278  0E9E                     	;# 
  2279  0E9F                     	;# 
  2280  0EA0                     	;# 
  2281  0EA1                     	;# 
  2282  0EA2                     	;# 
  2283  0EA3                     	;# 
  2284  0EA4                     	;# 
  2285  0EA5                     	;# 
  2286  0EA6                     	;# 
  2287  0EA7                     	;# 
  2288  0EA8                     	;# 
  2289  0EA9                     	;# 
  2290  0EAA                     	;# 
  2291  0EAB                     	;# 
  2292  0EAC                     	;# 
  2293  0EAD                     	;# 
  2294  0EAE                     	;# 
  2295  0EAF                     	;# 
  2296  0EB0                     	;# 
  2297  0EB1                     	;# 
  2298  0EB2                     	;# 
  2299  0F0F                     	;# 
  2300  0F10                     	;# 
  2301  0F11                     	;# 
  2302  0F12                     	;# 
  2303  0F13                     	;# 
  2304  0F14                     	;# 
  2305  0F15                     	;# 
  2306  0F16                     	;# 
  2307  0F17                     	;# 
  2308  0F18                     	;# 
  2309  0F19                     	;# 
  2310  0F1A                     	;# 
  2311  0F1B                     	;# 
  2312  0F1C                     	;# 
  2313  0F1D                     	;# 
  2314  0F1E                     	;# 
  2315  0F1F                     	;# 
  2316  0F20                     	;# 
  2317  0F21                     	;# 
  2318  0F22                     	;# 
  2319  0F23                     	;# 
  2320  0F24                     	;# 
  2321  0F25                     	;# 
  2322  0F26                     	;# 
  2323  0F27                     	;# 
  2324  0F28                     	;# 
  2325  0F29                     	;# 
  2326  0F2A                     	;# 
  2327  0F2B                     	;# 
  2328  0F2C                     	;# 
  2329  0F2D                     	;# 
  2330  0F2E                     	;# 
  2331  0F2F                     	;# 
  2332  0F30                     	;# 
  2333  0F31                     	;# 
  2334  0F32                     	;# 
  2335  0F33                     	;# 
  2336  0F34                     	;# 
  2337  0F35                     	;# 
  2338  0F36                     	;# 
  2339  0F37                     	;# 
  2340  0FE4                     	;# 
  2341  0FE5                     	;# 
  2342  0FE6                     	;# 
  2343  0FE7                     	;# 
  2344  0FE8                     	;# 
  2345  0FE9                     	;# 
  2346  0FEA                     	;# 
  2347  0FEB                     	;# 
  2348  0FED                     	;# 
  2349  0FEE                     	;# 
  2350  0FEF                     	;_messageBuffer
  2351                           
  2352                           	psect	idataBANK3
  2353  3529                     __pidataBANK3:	
  2354                           
  2355                           ;initializer for stoa@F1152
  2356  3529  3428               	retlw	40
  2357  352A  346E               	retlw	110
  2358  352B  3475               	retlw	117
  2359  352C  346C               	retlw	108
  2360  352D  346C               	retlw	108
  2361  352E  3429               	retlw	41
  2362  352F  3400               	retlw	0
  2363                           
  2364                           ;initializer for _thermistorBetaValue
  2365  3530  346B               	retlw	107
  2366  3531  340D               	retlw	13
  2367                           
  2368                           	psect	stringtext1
  2369  384E                     __pstringtext1:	
  2370  384E                     _OCD_threshold_setting:	
  2371  384E  3411               	retlw	17
  2372  384F  3400               	retlw	0
  2373  3850  3416               	retlw	22
  2374  3851  3400               	retlw	0
  2375  3852  341C               	retlw	28
  2376  3853  3400               	retlw	0
  2377  3854  3421               	retlw	33
  2378  3855  3400               	retlw	0
  2379  3856  3427               	retlw	39
  2380  3857  3400               	retlw	0
  2381  3858  342C               	retlw	44
  2382  3859  3400               	retlw	0
  2383  385A  3432               	retlw	50
  2384  385B  3400               	retlw	0
  2385  385C  3438               	retlw	56
  2386  385D  3400               	retlw	0
  2387  385E  343D               	retlw	61
  2388  385F  3400               	retlw	0
  2389  3860  3443               	retlw	67
  2390  3861  3400               	retlw	0
  2391  3862  3448               	retlw	72
  2392  3863  3400               	retlw	0
  2393  3864  344E               	retlw	78
  2394  3865  3400               	retlw	0
  2395  3866  3453               	retlw	83
  2396  3867  3400               	retlw	0
  2397  3868  3459               	retlw	89
  2398  3869  3400               	retlw	0
  2399  386A  345E               	retlw	94
  2400  386B  3400               	retlw	0
  2401  386C  3464               	retlw	100
  2402  386D  3400               	retlw	0
  2403  386E                     __end_of_OCD_threshold_setting:	
  2404                           
  2405                           	psect	stringtext2
  2406  3962                     __pstringtext2:	
  2407  3962                     _OCD_delay_setting:	
  2408  3962  3408               	retlw	8
  2409  3963  3400               	retlw	0
  2410  3964  3414               	retlw	20
  2411  3965  3400               	retlw	0
  2412  3966  3428               	retlw	40
  2413  3967  3400               	retlw	0
  2414  3968  3450               	retlw	80
  2415  3969  3400               	retlw	0
  2416  396A  34A0               	retlw	160
  2417  396B  3400               	retlw	0
  2418  396C  3440               	retlw	64
  2419  396D  3401               	retlw	1
  2420  396E  3480               	retlw	128
  2421  396F  3402               	retlw	2
  2422  3970  3400               	retlw	0
  2423  3971  3405               	retlw	5
  2424  3972                     __end_of_OCD_delay_setting:	
  2425                           
  2426                           	psect	stringtext3
  2427  3972                     __pstringtext3:	
  2428  3972                     _SCD_threshold_setting:	
  2429  3972  342C               	retlw	44
  2430  3973  3400               	retlw	0
  2431  3974  3443               	retlw	67
  2432  3975  3400               	retlw	0
  2433  3976  3459               	retlw	89
  2434  3977  3400               	retlw	0
  2435  3978  346F               	retlw	111
  2436  3979  3400               	retlw	0
  2437  397A  3485               	retlw	133
  2438  397B  3400               	retlw	0
  2439  397C  349B               	retlw	155
  2440  397D  3400               	retlw	0
  2441  397E  34B2               	retlw	178
  2442  397F  3400               	retlw	0
  2443  3980  34C8               	retlw	200
  2444  3981  3400               	retlw	0
  2445  3982                     __end_of_SCD_threshold_setting:	
  2446                           
  2447                           	psect	stringtext4
  2448  3991                     __pstringtext4:	
  2449  3991                     _OV_delay_setting:	
  2450  3991  3401               	retlw	1
  2451  3992  3400               	retlw	0
  2452  3993  3402               	retlw	2
  2453  3994  3400               	retlw	0
  2454  3995  3404               	retlw	4
  2455  3996  3400               	retlw	0
  2456  3997  3408               	retlw	8
  2457  3998  3400               	retlw	0
  2458  3999                     __end_of_OV_delay_setting:	
  2459                           
  2460                           	psect	stringtext5
  2461  3999                     __pstringtext5:	
  2462  3999                     _UV_delay_setting:	
  2463  3999  3401               	retlw	1
  2464  399A  3400               	retlw	0
  2465  399B  3404               	retlw	4
  2466  399C  3400               	retlw	0
  2467  399D  3408               	retlw	8
  2468  399E  3400               	retlw	0
  2469  399F  3410               	retlw	16
  2470  39A0  3400               	retlw	0
  2471  39A1                     __end_of_UV_delay_setting:	
  2472                           
  2473                           	psect	stringtext6
  2474  39A1                     __pstringtext6:	
  2475  39A1                     _SCD_delay_setting:	
  2476  39A1  3446               	retlw	70
  2477  39A2  3400               	retlw	0
  2478  39A3  3464               	retlw	100
  2479  39A4  3400               	retlw	0
  2480  39A5  34C8               	retlw	200
  2481  39A6  3400               	retlw	0
  2482  39A7  3490               	retlw	144
  2483  39A8  3401               	retlw	1
  2484  39A9                     __end_of_SCD_delay_setting:	
  2485                           
  2486                           	psect	stringtext7
  2487  39A9                     __pstringtext7:	
  2488  39A9                     _Lg4:	
  2489  39A9  3426               	retlw	38
  2490  39AA  349E               	retlw	158
  2491  39AB  3478               	retlw	120
  2492  39AC  343E               	retlw	62
  2493  39AD                     __end_of_Lg4:	
  2494                           
  2495                           	psect	stringtext8
  2496  39AD                     __pstringtext8:	
  2497  39AD                     _Lg3:	
  2498  39AD  34EE               	retlw	238
  2499  39AE  34E9               	retlw	233
  2500  39AF  3491               	retlw	145
  2501  39B0  343E               	retlw	62
  2502  39B1                     __end_of_Lg3:	
  2503                           
  2504                           	psect	stringtext9
  2505  39B1                     __pstringtext9:	
  2506  39B1                     _Lg2:	
  2507  39B1  3413               	retlw	19
  2508  39B2  34CE               	retlw	206
  2509  39B3  34CC               	retlw	204
  2510  39B4  343E               	retlw	62
  2511  39B5                     __end_of_Lg2:	
  2512                           
  2513                           	psect	stringtext10
  2514  39B5                     __pstringtext10:	
  2515  39B5                     _Lg1:	
  2516  39B5  34AA               	retlw	170
  2517  39B6  34AA               	retlw	170
  2518  39B7  342A               	retlw	42
  2519  39B8  343F               	retlw	63
  2520  39B9                     __end_of_Lg1:	
  2521                           
  2522                           	psect	stringtext11
  2523  39B9                     __pstringtext11:	
  2524  39B9                     _ln2_lo:	
  2525  39B9  34D1               	retlw	209
  2526  39BA  34F7               	retlw	247
  2527  39BB  3417               	retlw	23
  2528  39BC  3437               	retlw	55
  2529  39BD                     __end_of_ln2_lo:	
  2530                           
  2531                           	psect	stringtext12
  2532  39BD                     __pstringtext12:	
  2533  39BD                     _ln2_hi:	
  2534  39BD  3480               	retlw	128
  2535  39BE  3471               	retlw	113
  2536  39BF  3431               	retlw	49
  2537  39C0  343F               	retlw	63
  2538  39C1                     __end_of_ln2_hi:	
  2539                           
  2540                           	psect	stringtext13
  2541  3000                     __pstringtext13:	
  2542  3000                     _ATmega328_address:	
  2543  3000  3402               	retlw	2
  2544  3001  3400               	retlw	0
  2545  3002                     __end_of_ATmega328_address:	
  2546  0016                     _TMR1	set	22
  2547  0003                     _STATUSbits	set	3
  2548  000B                     _INTCONbits	set	11
  2549  0018                     _T1CONbits	set	24
  2550  0011                     _PIR1bits	set	17
  2551  0097                     _WDTCONbits	set	151
  2552  0090                     _TRISEbits	set	144
  2553  008C                     _TRISAbits	set	140
  2554  008E                     _TRISCbits	set	142
  2555  008D                     _TRISBbits	set	141
  2556  0091                     _PIE1bits	set	145
  2557  0476                     _TRISC6	set	1142
  2558  0477                     _TRISC7	set	1143
  2559  04CF                     _SPLLEN	set	1231
  2560  04CE                     _IRCF3	set	1230
  2561  04CD                     _IRCF2	set	1229
  2562  04CC                     _IRCF1	set	1228
  2563  04CB                     _IRCF0	set	1227
  2564  04C9                     _SCS1	set	1225
  2565  04C8                     _SCS0	set	1224
  2566  0110                     _LATEbits	set	272
  2567  010C                     _LATAbits	set	268
  2568  019A                     _TX1REG	set	410
  2569  0199                     _RC1REG	set	409
  2570  019D                     _RC1STAbits	set	413
  2571  019B                     _SPBRG	set	411
  2572  018E                     _ANSELCbits	set	398
  2573  018D                     _ANSELBbits	set	397
  2574  0CF5                     _TXEN	set	3317
  2575  0CEC                     _CREN	set	3308
  2576  0CEF                     _SPEN	set	3311
  2577  0CF4                     _SYNC	set	3316
  2578  0CF2                     _BRGH	set	3314
  2579  0216                     _SSPCON2bits	set	534
  2580  0211                     _SSPBUF	set	529
  2581  0212                     _SSPADD	set	530
  2582  0215                     _SSPCONbits	set	533
  2583  0E24                     _RXPPSbits	set	3620
  2584  0E20                     _SSPCLKPPSbits	set	3616
  2585  0E21                     _SSPDATPPSbits	set	3617
  2586  0E0F                     _PPSLOCKbits	set	3599
  2587  0E0F                     _PPSLOCK	set	3599
  2588  0E9A                     _RB2PPSbits	set	3738
  2589  0EA5                     _RC5PPSbits	set	3749
  2590  0EA4                     _RC4PPSbits	set	3748
  2591  3002                     STR_2:	
  2592  3002  3443               	retlw	67	;'C'
  2593  3003  3465               	retlw	101	;'e'
  2594  3004  346C               	retlw	108	;'l'
  2595  3005  346C               	retlw	108	;'l'
  2596  3006  3420               	retlw	32	;' '
  2597  3007  3462               	retlw	98	;'b'
  2598  3008  3461               	retlw	97	;'a'
  2599  3009  3474               	retlw	116	;'t'
  2600  300A  3474               	retlw	116	;'t'
  2601  300B  343A               	retlw	58	;':'
  2602  300C  3420               	retlw	32	;' '
  2603  300D  3425               	retlw	37	;'%'
  2604  300E  3469               	retlw	105	;'i'
  2605  300F  3420               	retlw	32	;' '
  2606  3010  342C               	retlw	44	;','
  2607  3011  3425               	retlw	37	;'%'
  2608  3012  3464               	retlw	100	;'d'
  2609  3013  342C               	retlw	44	;','
  2610  3014  3420               	retlw	32	;' '
  2611  3015  3425               	retlw	37	;'%'
  2612  3016  3464               	retlw	100	;'d'
  2613  3017  3420               	retlw	32	;' '
  2614  3018  342C               	retlw	44	;','
  2615  3019  3420               	retlw	32	;' '
  2616  301A  3425               	retlw	37	;'%'
  2617  301B  3464               	retlw	100	;'d'
  2618  301C  342C               	retlw	44	;','
  2619  301D  3420               	retlw	32	;' '
  2620  301E  3425               	retlw	37	;'%'
  2621  301F  3464               	retlw	100	;'d'
  2622  3020  342C               	retlw	44	;','
  2623  3021  3420               	retlw	32	;' '
  2624  3022  3425               	retlw	37	;'%'
  2625  3023  3464               	retlw	100	;'d'
  2626  3024  3420               	retlw	32	;' '
  2627  3025  3442               	retlw	66	;'B'
  2628  3026  3461               	retlw	97	;'a'
  2629  3027  3474               	retlw	116	;'t'
  2630  3028  3474               	retlw	116	;'t'
  2631  3029  3420               	retlw	32	;' '
  2632  302A  3443               	retlw	67	;'C'
  2633  302B  3475               	retlw	117	;'u'
  2634  302C  3472               	retlw	114	;'r'
  2635  302D  3472               	retlw	114	;'r'
  2636  302E  343A               	retlw	58	;':'
  2637  302F  3420               	retlw	32	;' '
  2638  3030  3425               	retlw	37	;'%'
  2639  3031  3469               	retlw	105	;'i'
  2640  3032  3420               	retlw	32	;' '
  2641  3033  3454               	retlw	84	;'T'
  2642  3034  3465               	retlw	101	;'e'
  2643  3035  346D               	retlw	109	;'m'
  2644  3036  3470               	retlw	112	;'p'
  2645  3037  343A               	retlw	58	;':'
  2646  3038  3420               	retlw	32	;' '
  2647  3039  3425               	retlw	37	;'%'
  2648  303A  3469               	retlw	105	;'i'
  2649  303B  3420               	retlw	32	;' '
  2650  303C  3443               	retlw	67	;'C'
  2651  303D  3454               	retlw	84	;'T'
  2652  303E  3452               	retlw	82	;'R'
  2653  303F  344C               	retlw	76	;'L'
  2654  3040  3432               	retlw	50	;'2'
  2655  3041  343A               	retlw	58	;':'
  2656  3042  3420               	retlw	32	;' '
  2657  3043  3425               	retlw	37	;'%'
  2658  3044  3469               	retlw	105	;'i'
  2659  3045  3420               	retlw	32	;' '
  2660  3046  340A               	retlw	10
  2661  3047  340D               	retlw	13
  2662  3048  3400               	retlw	0
  2663                           
  2664                           	psect	stringtext14
  2665  3800                     __pstringtext14:	
  2666  3800                     STR_1:	
  2667  3800  3457               	retlw	87	;'W'
  2668  3801  3441               	retlw	65	;'A'
  2669  3802  3454               	retlw	84	;'T'
  2670  3803  3443               	retlw	67	;'C'
  2671  3804  3448               	retlw	72	;'H'
  2672  3805  3444               	retlw	68	;'D'
  2673  3806  344F               	retlw	79	;'O'
  2674  3807  3447               	retlw	71	;'G'
  2675  3808  3420               	retlw	32	;' '
  2676  3809  344E               	retlw	78	;'N'
  2677  380A  344F               	retlw	79	;'O'
  2678  380B  3454               	retlw	84	;'T'
  2679  380C  3420               	retlw	32	;' '
  2680  380D  344B               	retlw	75	;'K'
  2681  380E  3449               	retlw	73	;'I'
  2682  380F  3443               	retlw	67	;'C'
  2683  3810  344B               	retlw	75	;'K'
  2684  3811  3445               	retlw	69	;'E'
  2685  3812  3444               	retlw	68	;'D'
  2686  3813  343A               	retlw	58	;':'
  2687  3814  3420               	retlw	32	;' '
  2688  3815  3441               	retlw	65	;'A'
  2689  3816  3446               	retlw	70	;'F'
  2690  3817  3445               	retlw	69	;'E'
  2691  3818  3420               	retlw	32	;' '
  2692  3819  3463               	retlw	99	;'c'
  2693  381A  346F               	retlw	111	;'o'
  2694  381B  346D               	retlw	109	;'m'
  2695  381C  346D               	retlw	109	;'m'
  2696  381D  3473               	retlw	115	;'s'
  2697  381E  3420               	retlw	32	;' '
  2698  381F  3465               	retlw	101	;'e'
  2699  3820  3472               	retlw	114	;'r'
  2700  3821  3472               	retlw	114	;'r'
  2701  3822  346F               	retlw	111	;'o'
  2702  3823  3472               	retlw	114	;'r'
  2703  3824  3420               	retlw	32	;' '
  2704  3825  340A               	retlw	10
  2705  3826  340D               	retlw	13
  2706  3827  3400               	retlw	0
  2707                           
  2708                           	psect	stringtext15
  2709  3828                     __pstringtext15:	
  2710  3828                     STR_5:	
  2711  3828  3450               	retlw	80	;'P'
  2712  3829  3472               	retlw	114	;'r'
  2713  382A  3469               	retlw	105	;'i'
  2714  382B  346E               	retlw	110	;'n'
  2715  382C  3474               	retlw	116	;'t'
  2716  382D  3469               	retlw	105	;'i'
  2717  382E  346E               	retlw	110	;'n'
  2718  382F  3467               	retlw	103	;'g'
  2719  3830  3420               	retlw	32	;' '
  2720  3831  346F               	retlw	111	;'o'
  2721  3832  3475               	retlw	117	;'u'
  2722  3833  3474               	retlw	116	;'t'
  2723  3834  3420               	retlw	32	;' '
  2724  3835  3441               	retlw	65	;'A'
  2725  3836  3446               	retlw	70	;'F'
  2726  3837  3445               	retlw	69	;'E'
  2727  3838  3420               	retlw	32	;' '
  2728  3839  3472               	retlw	114	;'r'
  2729  383A  3465               	retlw	101	;'e'
  2730  383B  3467               	retlw	103	;'g'
  2731  383C  3469               	retlw	105	;'i'
  2732  383D  3473               	retlw	115	;'s'
  2733  383E  3474               	retlw	116	;'t'
  2734  383F  3465               	retlw	101	;'e'
  2735  3840  3472               	retlw	114	;'r'
  2736  3841  3420               	retlw	32	;' '
  2737  3842  3476               	retlw	118	;'v'
  2738  3843  3461               	retlw	97	;'a'
  2739  3844  346C               	retlw	108	;'l'
  2740  3845  3475               	retlw	117	;'u'
  2741  3846  3465               	retlw	101	;'e'
  2742  3847  3473               	retlw	115	;'s'
  2743  3848  342E               	retlw	46	;'.'
  2744  3849  342E               	retlw	46	;'.'
  2745  384A  342E               	retlw	46	;'.'
  2746  384B  340A               	retlw	10
  2747  384C  340D               	retlw	13
  2748  384D  3400               	retlw	0
  2749                           
  2750                           	psect	stringtext16
  2751  386E                     __pstringtext16:	
  2752  386E                     STR_9:	
  2753  386E  3430               	retlw	48	;'0'
  2754  386F  3478               	retlw	120	;'x'
  2755  3870  3430               	retlw	48	;'0'
  2756  3871  3434               	retlw	52	;'4'
  2757  3872  3420               	retlw	32	;' '
  2758  3873  3453               	retlw	83	;'S'
  2759  3874  3459               	retlw	89	;'Y'
  2760  3875  3453               	retlw	83	;'S'
  2761  3876  345F               	retlw	95	;'_'
  2762  3877  3443               	retlw	67	;'C'
  2763  3878  3454               	retlw	84	;'T'
  2764  3879  3452               	retlw	82	;'R'
  2765  387A  344C               	retlw	76	;'L'
  2766  387B  3431               	retlw	49	;'1'
  2767  387C  343A               	retlw	58	;':'
  2768  387D  3420               	retlw	32	;' '
  2769  387E  3425               	retlw	37	;'%'
  2770  387F  3469               	retlw	105	;'i'
  2771  3880  3420               	retlw	32	;' '
  2772  3881  340A               	retlw	10
  2773  3882  340D               	retlw	13
  2774  3883  3400               	retlw	0
  2775                           
  2776                           	psect	stringtext17
  2777  3884                     __pstringtext17:	
  2778  3884                     STR_3:	
  2779  3884  3430               	retlw	48	;'0'
  2780  3885  3478               	retlw	120	;'x'
  2781  3886  3430               	retlw	48	;'0'
  2782  3887  3435               	retlw	53	;'5'
  2783  3888  3420               	retlw	32	;' '
  2784  3889  3453               	retlw	83	;'S'
  2785  388A  3459               	retlw	89	;'Y'
  2786  388B  3453               	retlw	83	;'S'
  2787  388C  345F               	retlw	95	;'_'
  2788  388D  3443               	retlw	67	;'C'
  2789  388E  3454               	retlw	84	;'T'
  2790  388F  3452               	retlw	82	;'R'
  2791  3890  344C               	retlw	76	;'L'
  2792  3891  3432               	retlw	50	;'2'
  2793  3892  343A               	retlw	58	;':'
  2794  3893  3420               	retlw	32	;' '
  2795  3894  3425               	retlw	37	;'%'
  2796  3895  3469               	retlw	105	;'i'
  2797  3896  3420               	retlw	32	;' '
  2798  3897  340A               	retlw	10
  2799  3898  340D               	retlw	13
  2800  3899  3400               	retlw	0
  2801                           
  2802                           	psect	stringtext18
  2803  389A                     __pstringtext18:	
  2804  389A                     STR_8:	
  2805  389A  3430               	retlw	48	;'0'
  2806  389B  3478               	retlw	120	;'x'
  2807  389C  3430               	retlw	48	;'0'
  2808  389D  3431               	retlw	49	;'1'
  2809  389E  3420               	retlw	32	;' '
  2810  389F  3443               	retlw	67	;'C'
  2811  38A0  3445               	retlw	69	;'E'
  2812  38A1  344C               	retlw	76	;'L'
  2813  38A2  344C               	retlw	76	;'L'
  2814  38A3  3442               	retlw	66	;'B'
  2815  38A4  3441               	retlw	65	;'A'
  2816  38A5  344C               	retlw	76	;'L'
  2817  38A6  3431               	retlw	49	;'1'
  2818  38A7  343A               	retlw	58	;':'
  2819  38A8  3420               	retlw	32	;' '
  2820  38A9  3425               	retlw	37	;'%'
  2821  38AA  3469               	retlw	105	;'i'
  2822  38AB  3420               	retlw	32	;' '
  2823  38AC  340A               	retlw	10
  2824  38AD  340D               	retlw	13
  2825  38AE  3400               	retlw	0
  2826                           
  2827                           	psect	stringtext19
  2828  38AF                     __pstringtext19:	
  2829  38AF                     STR_11:	
  2830  38AF  3430               	retlw	48	;'0'
  2831  38B0  3478               	retlw	120	;'x'
  2832  38B1  3430               	retlw	48	;'0'
  2833  38B2  3436               	retlw	54	;'6'
  2834  38B3  3420               	retlw	32	;' '
  2835  38B4  3450               	retlw	80	;'P'
  2836  38B5  3452               	retlw	82	;'R'
  2837  38B6  344F               	retlw	79	;'O'
  2838  38B7  3454               	retlw	84	;'T'
  2839  38B8  3445               	retlw	69	;'E'
  2840  38B9  3443               	retlw	67	;'C'
  2841  38BA  3454               	retlw	84	;'T'
  2842  38BB  3431               	retlw	49	;'1'
  2843  38BC  343A               	retlw	58	;':'
  2844  38BD  3420               	retlw	32	;' '
  2845  38BE  3425               	retlw	37	;'%'
  2846  38BF  3469               	retlw	105	;'i'
  2847  38C0  3420               	retlw	32	;' '
  2848  38C1  340A               	retlw	10
  2849  38C2  340D               	retlw	13
  2850  38C3  3400               	retlw	0
  2851                           
  2852                           	psect	stringtext20
  2853  38C4                     __pstringtext20:	
  2854  38C4                     STR_12:	
  2855  38C4  3430               	retlw	48	;'0'
  2856  38C5  3478               	retlw	120	;'x'
  2857  38C6  3430               	retlw	48	;'0'
  2858  38C7  3437               	retlw	55	;'7'
  2859  38C8  3420               	retlw	32	;' '
  2860  38C9  3450               	retlw	80	;'P'
  2861  38CA  3452               	retlw	82	;'R'
  2862  38CB  344F               	retlw	79	;'O'
  2863  38CC  3454               	retlw	84	;'T'
  2864  38CD  3445               	retlw	69	;'E'
  2865  38CE  3443               	retlw	67	;'C'
  2866  38CF  3454               	retlw	84	;'T'
  2867  38D0  3432               	retlw	50	;'2'
  2868  38D1  343A               	retlw	58	;':'
  2869  38D2  3420               	retlw	32	;' '
  2870  38D3  3425               	retlw	37	;'%'
  2871  38D4  3469               	retlw	105	;'i'
  2872  38D5  3420               	retlw	32	;' '
  2873  38D6  340A               	retlw	10
  2874  38D7  340D               	retlw	13
  2875  38D8  3400               	retlw	0
  2876                           
  2877                           	psect	stringtext21
  2878  38D9                     __pstringtext21:	
  2879  38D9                     STR_13:	
  2880  38D9  3430               	retlw	48	;'0'
  2881  38DA  3478               	retlw	120	;'x'
  2882  38DB  3430               	retlw	48	;'0'
  2883  38DC  3438               	retlw	56	;'8'
  2884  38DD  3420               	retlw	32	;' '
  2885  38DE  3450               	retlw	80	;'P'
  2886  38DF  3452               	retlw	82	;'R'
  2887  38E0  344F               	retlw	79	;'O'
  2888  38E1  3454               	retlw	84	;'T'
  2889  38E2  3445               	retlw	69	;'E'
  2890  38E3  3443               	retlw	67	;'C'
  2891  38E4  3454               	retlw	84	;'T'
  2892  38E5  3433               	retlw	51	;'3'
  2893  38E6  343A               	retlw	58	;':'
  2894  38E7  3420               	retlw	32	;' '
  2895  38E8  3425               	retlw	37	;'%'
  2896  38E9  3469               	retlw	105	;'i'
  2897  38EA  3420               	retlw	32	;' '
  2898  38EB  340A               	retlw	10
  2899  38EC  340D               	retlw	13
  2900  38ED  3400               	retlw	0
  2901                           
  2902                           	psect	stringtext22
  2903  38EE                     __pstringtext22:	
  2904  38EE                     STR_7:	
  2905  38EE  3430               	retlw	48	;'0'
  2906  38EF  3478               	retlw	120	;'x'
  2907  38F0  3430               	retlw	48	;'0'
  2908  38F1  3430               	retlw	48	;'0'
  2909  38F2  3420               	retlw	32	;' '
  2910  38F3  3453               	retlw	83	;'S'
  2911  38F4  3459               	retlw	89	;'Y'
  2912  38F5  3453               	retlw	83	;'S'
  2913  38F6  345F               	retlw	95	;'_'
  2914  38F7  3453               	retlw	83	;'S'
  2915  38F8  3454               	retlw	84	;'T'
  2916  38F9  3441               	retlw	65	;'A'
  2917  38FA  3454               	retlw	84	;'T'
  2918  38FB  343A               	retlw	58	;':'
  2919  38FC  3420               	retlw	32	;' '
  2920  38FD  3425               	retlw	37	;'%'
  2921  38FE  3469               	retlw	105	;'i'
  2922  38FF  3420               	retlw	32	;' '
  2923  3900  340A               	retlw	10
  2924  3901  340D               	retlw	13
  2925  3902  3400               	retlw	0
  2926                           
  2927                           	psect	stringtext23
  2928  3903                     __pstringtext23:	
  2929  3903                     STR_14:	
  2930  3903  3430               	retlw	48	;'0'
  2931  3904  3478               	retlw	120	;'x'
  2932  3905  3430               	retlw	48	;'0'
  2933  3906  3439               	retlw	57	;'9'
  2934  3907  3420               	retlw	32	;' '
  2935  3908  344F               	retlw	79	;'O'
  2936  3909  3456               	retlw	86	;'V'
  2937  390A  345F               	retlw	95	;'_'
  2938  390B  3454               	retlw	84	;'T'
  2939  390C  3452               	retlw	82	;'R'
  2940  390D  3449               	retlw	73	;'I'
  2941  390E  3450               	retlw	80	;'P'
  2942  390F  343A               	retlw	58	;':'
  2943  3910  3420               	retlw	32	;' '
  2944  3911  3425               	retlw	37	;'%'
  2945  3912  3469               	retlw	105	;'i'
  2946  3913  3420               	retlw	32	;' '
  2947  3914  340A               	retlw	10
  2948  3915  340D               	retlw	13
  2949  3916  3400               	retlw	0
  2950                           
  2951                           	psect	stringtext24
  2952  3917                     __pstringtext24:	
  2953  3917                     STR_15:	
  2954  3917  3430               	retlw	48	;'0'
  2955  3918  3478               	retlw	120	;'x'
  2956  3919  3430               	retlw	48	;'0'
  2957  391A  3441               	retlw	65	;'A'
  2958  391B  3420               	retlw	32	;' '
  2959  391C  3455               	retlw	85	;'U'
  2960  391D  3456               	retlw	86	;'V'
  2961  391E  345F               	retlw	95	;'_'
  2962  391F  3454               	retlw	84	;'T'
  2963  3920  3452               	retlw	82	;'R'
  2964  3921  3449               	retlw	73	;'I'
  2965  3922  3450               	retlw	80	;'P'
  2966  3923  343A               	retlw	58	;':'
  2967  3924  3420               	retlw	32	;' '
  2968  3925  3425               	retlw	37	;'%'
  2969  3926  3469               	retlw	105	;'i'
  2970  3927  3420               	retlw	32	;' '
  2971  3928  340A               	retlw	10
  2972  3929  340D               	retlw	13
  2973  392A  3400               	retlw	0
  2974                           
  2975                           	psect	stringtext25
  2976  392B                     __pstringtext25:	
  2977  392B                     STR_16:	
  2978  392B  3430               	retlw	48	;'0'
  2979  392C  3478               	retlw	120	;'x'
  2980  392D  3430               	retlw	48	;'0'
  2981  392E  3442               	retlw	66	;'B'
  2982  392F  3420               	retlw	32	;' '
  2983  3930  3443               	retlw	67	;'C'
  2984  3931  3443               	retlw	67	;'C'
  2985  3932  345F               	retlw	95	;'_'
  2986  3933  3443               	retlw	67	;'C'
  2987  3934  3446               	retlw	70	;'F'
  2988  3935  3447               	retlw	71	;'G'
  2989  3936  343A               	retlw	58	;':'
  2990  3937  3420               	retlw	32	;' '
  2991  3938  3425               	retlw	37	;'%'
  2992  3939  3469               	retlw	105	;'i'
  2993  393A  3420               	retlw	32	;' '
  2994  393B  340A               	retlw	10
  2995  393C  340D               	retlw	13
  2996  393D  3400               	retlw	0
  2997                           
  2998                           	psect	stringtext26
  2999  393E                     __pstringtext26:	
  3000  393E                     STR_17:	
  3001  393E  3430               	retlw	48	;'0'
  3002  393F  3478               	retlw	120	;'x'
  3003  3940  3433               	retlw	51	;'3'
  3004  3941  3432               	retlw	50	;'2'
  3005  3942  3420               	retlw	32	;' '
  3006  3943  3443               	retlw	67	;'C'
  3007  3944  3443               	retlw	67	;'C'
  3008  3945  345F               	retlw	95	;'_'
  3009  3946  3448               	retlw	72	;'H'
  3010  3947  3449               	retlw	73	;'I'
  3011  3948  343A               	retlw	58	;':'
  3012  3949  3420               	retlw	32	;' '
  3013  394A  3425               	retlw	37	;'%'
  3014  394B  3469               	retlw	105	;'i'
  3015  394C  3420               	retlw	32	;' '
  3016  394D  340A               	retlw	10
  3017  394E  340D               	retlw	13
  3018  394F  3400               	retlw	0
  3019                           
  3020                           	psect	stringtext27
  3021  3950                     __pstringtext27:	
  3022  3950                     STR_18:	
  3023  3950  3430               	retlw	48	;'0'
  3024  3951  3478               	retlw	120	;'x'
  3025  3952  3433               	retlw	51	;'3'
  3026  3953  3433               	retlw	51	;'3'
  3027  3954  3420               	retlw	32	;' '
  3028  3955  3443               	retlw	67	;'C'
  3029  3956  3443               	retlw	67	;'C'
  3030  3957  345F               	retlw	95	;'_'
  3031  3958  344C               	retlw	76	;'L'
  3032  3959  344F               	retlw	79	;'O'
  3033  395A  343A               	retlw	58	;':'
  3034  395B  3420               	retlw	32	;' '
  3035  395C  3425               	retlw	37	;'%'
  3036  395D  3469               	retlw	105	;'i'
  3037  395E  3420               	retlw	32	;' '
  3038  395F  340A               	retlw	10
  3039  3960  340D               	retlw	13
  3040  3961  3400               	retlw	0
  3041                           
  3042                           	psect	stringtext28
  3043  3982                     __pstringtext28:	
  3044  3982                     STR_4:	
  3045  3982  3454               	retlw	84	;'T'
  3046  3983  3465               	retlw	101	;'e'
  3047  3984  346D               	retlw	109	;'m'
  3048  3985  3470               	retlw	112	;'p'
  3049  3986  343A               	retlw	58	;':'
  3050  3987  3420               	retlw	32	;' '
  3051  3988  3425               	retlw	37	;'%'
  3052  3989  3464               	retlw	100	;'d'
  3053  398A  3420               	retlw	32	;' '
  3054  398B  3465               	retlw	101	;'e'
  3055  398C  342D               	retlw	45	;'-'
  3056  398D  3432               	retlw	50	;'2'
  3057  398E  340A               	retlw	10
  3058  398F  340D               	retlw	13
  3059  3990  3400               	retlw	0
  3060                           
  3061                           	psect	stringtext29
  3062  39C1                     __pstringtext29:	
  3063  39C1                     STR_96:	
  3064  39C1  3468               	retlw	104	;'h'
  3065  39C2  3468               	retlw	104	;'h'
  3066  39C3  3458               	retlw	88	;'X'
  3067  39C4  3400               	retlw	0
  3068                           
  3069                           	psect	stringtext30
  3070  39C5                     __pstringtext30:	
  3071  39C5                     STR_20:	
  3072  39C5  3468               	retlw	104	;'h'
  3073  39C6  3468               	retlw	104	;'h'
  3074  39C7  3464               	retlw	100	;'d'
  3075  39C8  3400               	retlw	0
  3076                           
  3077                           	psect	stringtext31
  3078  39C9                     __pstringtext31:	
  3079  39C9                     STR_24:	
  3080  39C9  3468               	retlw	104	;'h'
  3081  39CA  3468               	retlw	104	;'h'
  3082  39CB  3469               	retlw	105	;'i'
  3083  39CC  3400               	retlw	0
  3084                           
  3085                           	psect	stringtext32
  3086  39CD                     __pstringtext32:	
  3087  39CD                     STR_62:	
  3088  39CD  3468               	retlw	104	;'h'
  3089  39CE  3468               	retlw	104	;'h'
  3090  39CF  346E               	retlw	110	;'n'
  3091  39D0  3400               	retlw	0
  3092                           
  3093                           	psect	stringtext33
  3094  39D1                     __pstringtext33:	
  3095  39D1                     STR_47:	
  3096  39D1  3468               	retlw	104	;'h'
  3097  39D2  3468               	retlw	104	;'h'
  3098  39D3  346F               	retlw	111	;'o'
  3099  39D4  3400               	retlw	0
  3100                           
  3101                           	psect	stringtext34
  3102  39D5                     __pstringtext34:	
  3103  39D5                     STR_77:	
  3104  39D5  3468               	retlw	104	;'h'
  3105  39D6  3468               	retlw	104	;'h'
  3106  39D7  3475               	retlw	117	;'u'
  3107  39D8  3400               	retlw	0
  3108                           
  3109                           	psect	stringtext35
  3110  39D9                     __pstringtext35:	
  3111  39D9                     STR_92:	
  3112  39D9  3468               	retlw	104	;'h'
  3113  39DA  3468               	retlw	104	;'h'
  3114  39DB  3478               	retlw	120	;'x'
  3115  39DC  3400               	retlw	0
  3116                           
  3117                           	psect	stringtext36
  3118  39DD                     __pstringtext36:	
  3119  39DD                     STR_114:	
  3120  39DD  347A               	retlw	122	;'z'
  3121  39DE  3458               	retlw	88	;'X'
  3122  39DF  3400               	retlw	0
  3123                           
  3124                           	psect	stringtext37
  3125  39E0                     __pstringtext37:	
  3126  39E0                     STR_38:	
  3127  39E0  347A               	retlw	122	;'z'
  3128  39E1  3464               	retlw	100	;'d'
  3129  39E2  3400               	retlw	0
  3130                           
  3131                           	psect	stringtext38
  3132  39E3                     __pstringtext38:	
  3133  39E3                     STR_42:	
  3134  39E3  347A               	retlw	122	;'z'
  3135  39E4  3469               	retlw	105	;'i'
  3136  39E5  3400               	retlw	0
  3137                           
  3138                           	psect	stringtext39
  3139  39E6                     __pstringtext39:	
  3140  39E6                     STR_72:	
  3141  39E6  347A               	retlw	122	;'z'
  3142  39E7  346E               	retlw	110	;'n'
  3143  39E8  3400               	retlw	0
  3144                           
  3145                           	psect	stringtext40
  3146  39E9                     __pstringtext40:	
  3147  39E9                     STR_57:	
  3148  39E9  347A               	retlw	122	;'z'
  3149  39EA  346F               	retlw	111	;'o'
  3150  39EB  3400               	retlw	0
  3151                           
  3152                           	psect	stringtext41
  3153  39EC                     __pstringtext41:	
  3154  39EC                     STR_87:	
  3155  39EC  347A               	retlw	122	;'z'
  3156  39ED  3475               	retlw	117	;'u'
  3157  39EE  3400               	retlw	0
  3158                           
  3159                           	psect	stringtext42
  3160  39EF                     __pstringtext42:	
  3161  39EF                     STR_110:	
  3162  39EF  347A               	retlw	122	;'z'
  3163  39F0  3478               	retlw	120	;'x'
  3164  39F1  3400               	retlw	0
  3165                           
  3166                           	psect	stringtext43
  3167  0000                     __pstringtext43:	
  3168  38AC                     
  3169                           ; #config settings
  3170  0000                     
  3171                           	psect	cinit
  3172  0022                     start_initialization:	
  3173  0022                     __initialization:		;BIGRAM
  3174                           
  3175                           ; Initialize objects allocated to BANK3
  3176  0022  3029               	movlw	low __pidataBANK3
  3177  0023  0084               	movwf	4
  3178  0024  30B5               	movlw	(high __pidataBANK3)| (0+128)
  3179  0025  0085               	movwf	5
  3180  0026  0023               	movlb	3	; select bank3
  3181  0027  0012               	moviw fsr0++
  3182  0028  00DA               	movwf	__pdataBANK3& (0+127)
  3183  0029  0012               	moviw fsr0++
  3184  002A  00DB               	movwf	(__pdataBANK3+1)& (0+127)
  3185  002B  0012               	moviw fsr0++
  3186  002C  00DC               	movwf	(__pdataBANK3+2)& (0+127)
  3187  002D  0012               	moviw fsr0++
  3188  002E  00DD               	movwf	(__pdataBANK3+3)& (0+127)
  3189  002F  0012               	moviw fsr0++
  3190  0030  00DE               	movwf	(__pdataBANK3+4)& (0+127)
  3191  0031  0012               	moviw fsr0++
  3192  0032  00DF               	movwf	(__pdataBANK3+5)& (0+127)
  3193  0033  0012               	moviw fsr0++
  3194  0034  00E0               	movwf	(__pdataBANK3+6)& (0+127)
  3195  0035  0012               	moviw fsr0++
  3196  0036  00E1               	movwf	(__pdataBANK3+7)& (0+127)
  3197  0037  0012               	moviw fsr0++
  3198  0038  00E2               	movwf	(__pdataBANK3+8)& (0+127)
  3199                           
  3200                           ; Clear objects allocated to BIGRAM
  3201  0039  3071               	movlw	low (0+10097)
  3202  003A  0084               	movwf	4
  3203  003B  3027               	movlw	high (0+10097)
  3204  003C  0085               	movwf	5
  3205  003D  307F               	movlw	127
  3206  003E  00FE               	movwf	btemp
  3207  003F  3000               	movlw	0
  3208  0040  00FF               	movwf	btemp+1
  3209  0041  31A8  2002  3180   	fcall	clear_ram0
  3210                           
  3211                           ; Clear objects allocated to COMMON
  3212  0044  01FC               	clrf	__pbssCOMMON& (0+127)
  3213                           
  3214                           ; Clear objects allocated to BANK1
  3215  0045  0021               	movlb	1	; select bank1
  3216  0046  01EF               	clrf	__pbssBANK1& (0+127)
  3217                           
  3218                           ; Clear objects allocated to BANK2
  3219  0047  3065               	movlw	low __pbssBANK2
  3220  0048  0084               	movwf	4
  3221  0049  3001               	movlw	high __pbssBANK2
  3222  004A  0085               	movwf	5
  3223  004B  300A               	movlw	10
  3224  004C  00FE               	movwf	btemp
  3225  004D  3000               	movlw	0
  3226  004E  00FF               	movwf	btemp+1
  3227  004F  31A8  2002  3180   	fcall	clear_ram0
  3228                           
  3229                           ; Clear objects allocated to BANK3
  3230  0052  30A0               	movlw	low __pbssBANK3
  3231  0053  0084               	movwf	4
  3232  0054  3001               	movlw	high __pbssBANK3
  3233  0055  0085               	movwf	5
  3234  0056  303A               	movlw	58
  3235  0057  00FE               	movwf	btemp
  3236  0058  3000               	movlw	0
  3237  0059  00FF               	movwf	btemp+1
  3238  005A  31A8  2002  3180   	fcall	clear_ram0
  3239                           
  3240                           ; Clear objects allocated to BANK4
  3241  005D  3020               	movlw	low __pbssBANK4
  3242  005E  0084               	movwf	4
  3243  005F  3002               	movlw	high __pbssBANK4
  3244  0060  0085               	movwf	5
  3245  0061  3020               	movlw	32
  3246  0062  00FE               	movwf	btemp
  3247  0063  3000               	movlw	0
  3248  0064  00FF               	movwf	btemp+1
  3249  0065  31A8  2002         	fcall	clear_ram0
  3250  0067                     end_of_initialization:	
  3251                           ;End of C runtime variable initialization code
  3252                           
  3253  0067                     __end_of__initialization:	
  3254  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3255  0068  0020               	movlb	0
  3256  0069  31B7  2F63         	ljmp	_main	;jump to C main() function
  3257                           
  3258                           	psect	bssCOMMON
  3259  007C                     __pbssCOMMON:	
  3260  007C                     _toggleColor:	
  3261  007C                     	ds	1
  3262                           
  3263                           	psect	bssBANK1
  3264  00EF                     __pbssBANK1:	
  3265  00EF                     _tmr1_flag:	
  3266  00EF                     	ds	1
  3267                           
  3268                           	psect	bssBANK2
  3269  0165                     __pbssBANK2:	
  3270  0165                     _width:	
  3271  0165                     	ds	2
  3272  0167                     _prec:	
  3273  0167                     	ds	2
  3274  0169                     _flags:	
  3275  0169                     	ds	2
  3276  016B                     _adcOffset:	
  3277  016B                     	ds	2
  3278  016D                     _adcGain:	
  3279  016D                     	ds	2
  3280                           
  3281                           	psect	bssBANK3
  3282  01A0                     __pbssBANK3:	
  3283  01A0                     _cellVoltages:	
  3284  01A0                     	ds	10
  3285  01AA                     logf@F469:	
  3286  01AA                     	ds	4
  3287  01AE                     BQ76920@shuntResistorValue_mOhm:	
  3288  01AE                     	ds	4
  3289  01B2                     _shuntResistorValue_mOhm:	
  3290  01B2                     	ds	4
  3291  01B6                     _temperatureThermistor:	
  3292  01B6                     	ds	4
  3293  01BA                     _batCurrent:	
  3294  01BA                     	ds	4
  3295  01BE                     _batVoltage:	
  3296  01BE                     	ds	4
  3297  01C2                     _errno:	
  3298  01C2                     	ds	2
  3299  01C4                     _nout:	
  3300  01C4                     	ds	2
  3301  01C6                     _minCellVoltage:	
  3302  01C6                     	ds	2
  3303  01C8                     _maxCellVoltage:	
  3304  01C8                     	ds	2
  3305  01CA                     _maxCellTempDischarge:	
  3306  01CA                     	ds	2
  3307  01CC                     _maxCellTempCharge:	
  3308  01CC                     	ds	2
  3309  01CE                     _minCellTempDischarge:	
  3310  01CE                     	ds	2
  3311  01D0                     _minCellTempCharge:	
  3312  01D0                     	ds	2
  3313  01D2                     BQ76920@protect3:	
  3314  01D2                     	ds	1
  3315  01D3                     BQ76920@protect2:	
  3316  01D3                     	ds	1
  3317  01D4                     BQ76920@protect1:	
  3318  01D4                     	ds	1
  3319  01D5                     myIsr@count:	
  3320  01D5                     	ds	1
  3321  01D6                     _protect3:	
  3322  01D6                     	ds	1
  3323  01D7                     _protect2:	
  3324  01D7                     	ds	1
  3325  01D8                     _protect1:	
  3326  01D8                     	ds	1
  3327  01D9                     _currState:	
  3328  01D9                     	ds	1
  3329                           
  3330                           	psect	dataBANK3
  3331  01DA                     __pdataBANK3:	
  3332  01DA                     stoa@F1152:	
  3333  01DA                     	ds	7
  3334  01E1                     _thermistorBetaValue:	
  3335  01E1                     	ds	2
  3336                           
  3337                           	psect	bssBANK4
  3338  0220                     __pbssBANK4:	
  3339  0220                     _dbuf:	
  3340  0220                     	ds	32
  3341                           
  3342                           	psect	clrtext
  3343  2802                     clear_ram0:	
  3344                           ;	Called with FSR0 containing the base address, and
  3345                           ;	btemp/btemp+1 has the size to clear
  3346                           
  3347  2802  0064               	clrwdt	;clear the watchdog before getting into this loop
  3348  2803                     clrloop0:	
  3349  2803  0180               	clrf	0	;clear RAM location pointed to by FSR
  3350  2804  3101               	addfsr 0,1
  3351  2805  3001               	movlw	1
  3352  2806  02FE               	subwf	126,f
  3353  2807  3000               	movlw	0
  3354  2808  3BFF               	subwfb	127,f
  3355  2809  087F               	movf	127,w
  3356  280A  047E               	iorwf	126,w
  3357  280B  1903               	btfsc	3,2
  3358  280C  3400               	retlw	0	;all done for this memory range, return
  3359  280D  2803               	goto	clrloop0	;have we reached the end yet?
  3360                           
  3361                           	psect	cstackBANK3
  3362  01E3                     __pcstackBANK3:	
  3363  01E3                     ??_main:	
  3364                           
  3365                           ; 1 bytes @ 0x0
  3366  01E3                     	ds	2
  3367                           
  3368                           	psect	cstackBANK2
  3369  0120                     __pcstackBANK2:	
  3370  0120                     logf@R:	
  3371                           
  3372                           ; 4 bytes @ 0x0
  3373  0120                     	ds	4
  3374  0124                     logf@t1:	
  3375                           
  3376                           ; 4 bytes @ 0x4
  3377  0124                     	ds	4
  3378  0128                     logf@t2:	
  3379                           
  3380                           ; 4 bytes @ 0x8
  3381  0128                     	ds	4
  3382  012C                     _logf$2046:	
  3383                           
  3384                           ; 4 bytes @ 0xC
  3385  012C                     	ds	4
  3386  0130                     _logf$2047:	
  3387                           
  3388                           ; 4 bytes @ 0x10
  3389  0130                     	ds	4
  3390  0134                     _logf$2048:	
  3391                           
  3392                           ; 4 bytes @ 0x14
  3393  0134                     	ds	4
  3394  0138                     _logf$2049:	
  3395                           
  3396                           ; 4 bytes @ 0x18
  3397  0138                     	ds	4
  3398  013C                     logf@k:	
  3399                           
  3400                           ; 2 bytes @ 0x1C
  3401  013C                     	ds	2
  3402  013E                     logf@hfsq:	
  3403                           
  3404                           ; 4 bytes @ 0x1E
  3405  013E                     	ds	4
  3406  0142                     logf@dk:	
  3407                           
  3408                           ; 4 bytes @ 0x22
  3409  0142                     	ds	4
  3410  0146                     logf@s:	
  3411                           
  3412                           ; 4 bytes @ 0x26
  3413  0146                     	ds	4
  3414  014A                     logf@z:	
  3415                           
  3416                           ; 4 bytes @ 0x2A
  3417  014A                     	ds	4
  3418  014E                     logf@w:	
  3419                           
  3420                           ; 4 bytes @ 0x2E
  3421  014E                     	ds	4
  3422  0152                     _logf$2045:	
  3423                           
  3424                           ; 4 bytes @ 0x32
  3425  0152                     	ds	4
  3426  0156                     logf@u:	
  3427                           
  3428                           ; 4 bytes @ 0x36
  3429  0156                     	ds	4
  3430  015A                     logf@f:	
  3431                           
  3432                           ; 4 bytes @ 0x3A
  3433  015A                     	ds	4
  3434  015E                     logf@ix:	
  3435                           
  3436                           ; 4 bytes @ 0x3E
  3437  015E                     	ds	4
  3438  0162                     ??_statemachine:	
  3439                           
  3440                           ; 1 bytes @ 0x42
  3441  0162                     	ds	2
  3442  0164                     statemachine@success:	
  3443                           
  3444                           ; 1 bytes @ 0x44
  3445  0164                     	ds	1
  3446                           
  3447                           	psect	cstackBANK1
  3448  00A0                     __pcstackBANK1:	
  3449  00A0                     ?___flsub:	
  3450  00A0                     vfpfcnvrt@cp:	
  3451                           ; 4 bytes @ 0x0
  3452                           
  3453  00A0                     setShortCircuitProtection@scaler:	
  3454                           ; 2 bytes @ 0x0
  3455                           
  3456  00A0                     setOverCurrentDischargeProtection@scaler:	
  3457                           ; 4 bytes @ 0x0
  3458                           
  3459  00A0                     ___flsub@a:	
  3460                           ; 4 bytes @ 0x0
  3461                           
  3462                           
  3463                           ; 4 bytes @ 0x0
  3464  00A0                     	ds	2
  3465  00A2                     vfpfcnvrt@done:	
  3466                           
  3467                           ; 2 bytes @ 0x2
  3468  00A2                     	ds	2
  3469  00A4                     _vfpfcnvrt$1252:	
  3470  00A4                     ___flsub@b:	
  3471                           ; 2 bytes @ 0x4
  3472                           
  3473  00A4                     _setShortCircuitProtection$2031:	
  3474                           ; 4 bytes @ 0x4
  3475                           
  3476  00A4                     _setOverCurrentDischargeProtection$2032:	
  3477                           ; 4 bytes @ 0x4
  3478                           
  3479                           
  3480                           ; 4 bytes @ 0x4
  3481  00A4                     	ds	2
  3482  00A6                     _vfpfcnvrt$1253:	
  3483                           
  3484                           ; 2 bytes @ 0x6
  3485  00A6                     	ds	2
  3486  00A8                     ?_logf:	
  3487  00A8                     ?___fltol:	
  3488                           ; 4 bytes @ 0x8
  3489                           
  3490  00A8                     setShortCircuitProtection@i:	
  3491                           ; 4 bytes @ 0x8
  3492                           
  3493  00A8                     setOverCurrentDischargeProtection@i:	
  3494                           ; 2 bytes @ 0x8
  3495                           
  3496  00A8                     ___fltol@f1:	
  3497                           ; 2 bytes @ 0x8
  3498                           
  3499  00A8                     logf@x:	
  3500                           ; 4 bytes @ 0x8
  3501                           
  3502  00A8                     vfpfcnvrt@ll:	
  3503                           ; 4 bytes @ 0x8
  3504                           
  3505                           
  3506                           ; 8 bytes @ 0x8
  3507  00A8                     	ds	2
  3508  00AA                     setShortCircuitProtection@i_968:	
  3509  00AA                     setOverCurrentDischargeProtection@i_977:	
  3510                           ; 2 bytes @ 0xA
  3511                           
  3512                           
  3513                           ; 2 bytes @ 0xA
  3514  00AA                     	ds	2
  3515  00AC                     ??_logf:	
  3516  00AC                     ??___fltol:	
  3517                           ; 1 bytes @ 0xC
  3518                           
  3519                           
  3520                           ; 1 bytes @ 0xC
  3521  00AC                     	ds	4
  3522  00B0                     vfpfcnvrt@vp:	
  3523                           
  3524                           ; 2 bytes @ 0x10
  3525  00B0                     	ds	1
  3526  00B1                     ??_updateVoltages:	
  3527                           
  3528                           ; 1 bytes @ 0x11
  3529  00B1                     	ds	1
  3530  00B2                     vfpfcnvrt@c:	
  3531                           
  3532                           ; 1 bytes @ 0x12
  3533  00B2                     	ds	1
  3534  00B3                     vfpfcnvrt@llu:	
  3535                           
  3536                           ; 8 bytes @ 0x13
  3537  00B3                     	ds	1
  3538  00B4                     ??_updateTemperatures:	
  3539  00B4                     _updateVoltages$2033:	
  3540                           ; 1 bytes @ 0x14
  3541                           
  3542                           
  3543                           ; 4 bytes @ 0x14
  3544  00B4                     	ds	3
  3545  00B7                     _updateTemperatures$2034:	
  3546                           
  3547                           ; 4 bytes @ 0x17
  3548  00B7                     	ds	1
  3549  00B8                     updateVoltages@adcVal:	
  3550                           
  3551                           ; 4 bytes @ 0x18
  3552  00B8                     	ds	3
  3553  00BB                     ?_vsnprintf:	
  3554  00BB                     vsnprintf@s:	
  3555                           ; 2 bytes @ 0x1B
  3556                           
  3557  00BB                     _updateTemperatures$2035:	
  3558                           ; 2 bytes @ 0x1B
  3559                           
  3560                           
  3561                           ; 4 bytes @ 0x1B
  3562  00BB                     	ds	2
  3563  00BD                     vsnprintf@n:	
  3564                           
  3565                           ; 2 bytes @ 0x1D
  3566  00BD                     	ds	2
  3567  00BF                     vsnprintf@fmt:	
  3568  00BF                     _updateTemperatures$2036:	
  3569                           ; 2 bytes @ 0x1F
  3570                           
  3571                           
  3572                           ; 4 bytes @ 0x1F
  3573  00BF                     	ds	2
  3574  00C1                     vsnprintf@ap:	
  3575                           
  3576                           ; 1 bytes @ 0x21
  3577  00C1                     	ds	1
  3578  00C2                     _vsnprintf$1824:	
  3579                           
  3580                           ; 2 bytes @ 0x22
  3581  00C2                     	ds	1
  3582  00C3                     _updateTemperatures$2037:	
  3583                           
  3584                           ; 4 bytes @ 0x23
  3585  00C3                     	ds	1
  3586  00C4                     vsnprintf@cnt:	
  3587                           
  3588                           ; 2 bytes @ 0x24
  3589  00C4                     	ds	2
  3590  00C6                     vsnprintf@f:	
  3591                           
  3592                           ; 6 bytes @ 0x26
  3593  00C6                     	ds	1
  3594  00C7                     _updateTemperatures$2038:	
  3595                           
  3596                           ; 4 bytes @ 0x27
  3597  00C7                     	ds	4
  3598  00CB                     _updateTemperatures$2039:	
  3599                           
  3600                           ; 4 bytes @ 0x2B
  3601  00CB                     	ds	1
  3602  00CC                     ?_snprintf:	
  3603  00CC                     snprintf@s:	
  3604                           ; 2 bytes @ 0x2C
  3605                           
  3606                           
  3607                           ; 2 bytes @ 0x2C
  3608  00CC                     	ds	2
  3609  00CE                     snprintf@n:	
  3610                           
  3611                           ; 2 bytes @ 0x2E
  3612  00CE                     	ds	1
  3613  00CF                     _updateTemperatures$2040:	
  3614                           
  3615                           ; 4 bytes @ 0x2F
  3616  00CF                     	ds	1
  3617  00D0                     snprintf@fmt:	
  3618                           
  3619                           ; 2 bytes @ 0x30
  3620  00D0                     	ds	3
  3621  00D3                     _updateTemperatures$2041:	
  3622                           
  3623                           ; 4 bytes @ 0x33
  3624  00D3                     	ds	4
  3625  00D7                     _updateTemperatures$2042:	
  3626                           
  3627                           ; 4 bytes @ 0x37
  3628  00D7                     	ds	4
  3629  00DB                     _updateTemperatures$2043:	
  3630                           
  3631                           ; 4 bytes @ 0x3B
  3632  00DB                     	ds	4
  3633  00DF                     _updateTemperatures$2044:	
  3634                           
  3635                           ; 4 bytes @ 0x3F
  3636  00DF                     	ds	4
  3637  00E3                     updateTemperatures@tmp:	
  3638                           
  3639                           ; 4 bytes @ 0x43
  3640  00E3                     	ds	4
  3641  00E7                     updateTemperatures@adcVal:	
  3642                           
  3643                           ; 2 bytes @ 0x47
  3644  00E7                     	ds	2
  3645  00E9                     updateTemperatures@vtsx:	
  3646                           
  3647                           ; 2 bytes @ 0x49
  3648  00E9                     	ds	2
  3649  00EB                     updateTemperatures@rts:	
  3650                           
  3651                           ; 4 bytes @ 0x4B
  3652  00EB                     	ds	4
  3653                           
  3654                           	psect	cstackCOMMON
  3655  0070                     __pcstackCOMMON:	
  3656  0070                     ?_initClock:	
  3657  0070                     ?_init_GPIO:	
  3658                           ; 1 bytes @ 0x0
  3659                           
  3660  0070                     ?_initWDT:	
  3661                           ; 1 bytes @ 0x0
  3662                           
  3663  0070                     ?_init_I2C:	
  3664                           ; 1 bytes @ 0x0
  3665                           
  3666  0070                     ?_init_TMR1:	
  3667                           ; 1 bytes @ 0x0
  3668                           
  3669  0070                     ?_init_RGB:	
  3670                           ; 1 bytes @ 0x0
  3671                           
  3672  0070                     ?_watchdog_timeout_shutdown:	
  3673                           ; 1 bytes @ 0x0
  3674                           
  3675  0070                     ?_statemachine:	
  3676                           ; 1 bytes @ 0x0
  3677                           
  3678  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3679                           ; 1 bytes @ 0x0
  3680                           
  3681  0070                     ?_init_AFE:	
  3682                           ; 1 bytes @ 0x0
  3683                           
  3684  0070                     ?_AFE_UPDATE:	
  3685                           ; 1 bytes @ 0x0
  3686                           
  3687  0070                     ?_printcellParameters:	
  3688                           ; 1 bytes @ 0x0
  3689                           
  3690  0070                     ?_internal_16:	
  3691                           ; 1 bytes @ 0x0
  3692                           
  3693  0070                     ?_updateVoltages:	
  3694                           ; 1 bytes @ 0x0
  3695                           
  3696  0070                     ?_updateTemperatures:	
  3697                           ; 1 bytes @ 0x0
  3698                           
  3699  0070                     ?_putch:	
  3700                           ; 1 bytes @ 0x0
  3701                           
  3702  0070                     ?_myIsr:	
  3703                           ; 1 bytes @ 0x0
  3704                           
  3705  0070                     ??_myIsr:	
  3706                           ; 1 bytes @ 0x0
  3707                           
  3708  0070                     ?_main:	
  3709                           ; 1 bytes @ 0x0
  3710                           
  3711  0070                     ?_EUSART_Write:	
  3712                           ; 1 bytes @ 0x0
  3713                           
  3714  0070                     ?_send_I2C_startBit:	
  3715                           ; 1 bytes @ 0x0
  3716                           
  3717  0070                     ?_send_I2C_stopBit:	
  3718                           ; 1 bytes @ 0x0
  3719                           
  3720  0070                     ?_send_I2C_NACK:	
  3721                           ; 1 bytes @ 0x0
  3722                           
  3723  0070                     putch@c:	
  3724                           ; 1 bytes @ 0x0
  3725                           
  3726                           
  3727                           ; 1 bytes @ 0x0
  3728  0070                     	ds	1
  3729  0071                     ??_initClock:	
  3730  0071                     ??_init_GPIO:	
  3731                           ; 1 bytes @ 0x1
  3732                           
  3733  0071                     ??_initWDT:	
  3734                           ; 1 bytes @ 0x1
  3735                           
  3736  0071                     ??_init_I2C:	
  3737                           ; 1 bytes @ 0x1
  3738                           
  3739  0071                     ??_init_TMR1:	
  3740                           ; 1 bytes @ 0x1
  3741                           
  3742  0071                     ??_init_RGB:	
  3743                           ; 1 bytes @ 0x1
  3744                           
  3745  0071                     ?_RGB_color:	
  3746                           ; 1 bytes @ 0x1
  3747                           
  3748  0071                     ??_internal_16:	
  3749                           ; 1 bytes @ 0x1
  3750                           
  3751  0071                     ?_setShuntResistorValue:	
  3752                           ; 1 bytes @ 0x1
  3753                           
  3754  0071                     ??_putch:	
  3755                           ; 1 bytes @ 0x1
  3756                           
  3757  0071                     ??_EUSART_Write:	
  3758                           ; 1 bytes @ 0x1
  3759                           
  3760  0071                     ?_send_I2C_data:	
  3761                           ; 1 bytes @ 0x1
  3762                           
  3763  0071                     ?_send_I2C_controlByte:	
  3764                           ; 1 bytes @ 0x1
  3765                           
  3766  0071                     ??_send_I2C_startBit:	
  3767                           ; 1 bytes @ 0x1
  3768                           
  3769  0071                     ??_send_I2C_stopBit:	
  3770                           ; 1 bytes @ 0x1
  3771                           
  3772  0071                     ??_send_I2C_NACK:	
  3773                           ; 1 bytes @ 0x1
  3774                           
  3775  0071                     ??___aodiv:	
  3776                           ; 1 bytes @ 0x1
  3777                           
  3778  0071                     ??___aomod:	
  3779                           ; 1 bytes @ 0x1
  3780                           
  3781  0071                     ??___lodiv:	
  3782                           ; 1 bytes @ 0x1
  3783                           
  3784  0071                     ??___lomod:	
  3785                           ; 1 bytes @ 0x1
  3786                           
  3787  0071                     ?_fputc:	
  3788                           ; 1 bytes @ 0x1
  3789                           
  3790  0071                     ?_strlen:	
  3791                           ; 2 bytes @ 0x1
  3792                           
  3793  0071                     ?_isupper:	
  3794                           ; 2 bytes @ 0x1
  3795                           
  3796  0071                     ?_isalpha:	
  3797                           ; 2 bytes @ 0x1
  3798                           
  3799  0071                     ?_isdigit:	
  3800                           ; 2 bytes @ 0x1
  3801                           
  3802  0071                     ?_strncmp:	
  3803                           ; 2 bytes @ 0x1
  3804                           
  3805  0071                     ?__Umul8_16:	
  3806                           ; 2 bytes @ 0x1
  3807                           
  3808  0071                     ?_isspace:	
  3809                           ; 2 bytes @ 0x1
  3810                           
  3811  0071                     ?_islower:	
  3812                           ; 2 bytes @ 0x1
  3813                           
  3814  0071                     ?_read_I2C_data:	
  3815                           ; 2 bytes @ 0x1
  3816                           
  3817  0071                     ?___wmul:	
  3818                           ; 2 bytes @ 0x1
  3819                           
  3820  0071                     ?___lmul:	
  3821                           ; 2 bytes @ 0x1
  3822                           
  3823  0071                     ?___xxtofl:	
  3824                           ; 4 bytes @ 0x1
  3825                           
  3826  0071                     EUSART_Write@txData:	
  3827                           ; 4 bytes @ 0x1
  3828                           
  3829  0071                     __Umul8_16@multiplicand:	
  3830                           ; 1 bytes @ 0x1
  3831                           
  3832  0071                     send_I2C_data@databyte:	
  3833                           ; 1 bytes @ 0x1
  3834                           
  3835  0071                     send_I2C_controlByte@BlockAddress:	
  3836                           ; 2 bytes @ 0x1
  3837                           
  3838  0071                     RGB_color@color:	
  3839                           ; 2 bytes @ 0x1
  3840                           
  3841  0071                     ___wmul@multiplier:	
  3842                           ; 2 bytes @ 0x1
  3843                           
  3844  0071                     isalpha@c:	
  3845                           ; 2 bytes @ 0x1
  3846                           
  3847  0071                     isdigit@c:	
  3848                           ; 2 bytes @ 0x1
  3849                           
  3850  0071                     isspace@c:	
  3851                           ; 2 bytes @ 0x1
  3852                           
  3853  0071                     isupper@c:	
  3854                           ; 2 bytes @ 0x1
  3855                           
  3856  0071                     fputc@c:	
  3857                           ; 2 bytes @ 0x1
  3858                           
  3859  0071                     strlen@s:	
  3860                           ; 2 bytes @ 0x1
  3861                           
  3862  0071                     strncmp@_l:	
  3863                           ; 2 bytes @ 0x1
  3864                           
  3865  0071                     islower@c:	
  3866                           ; 2 bytes @ 0x1
  3867                           
  3868  0071                     setShuntResistorValue@res_mOhm:	
  3869                           ; 2 bytes @ 0x1
  3870                           
  3871  0071                     ___lmul@multiplier:	
  3872                           ; 4 bytes @ 0x1
  3873                           
  3874  0071                     ___xxtofl@val:	
  3875                           ; 4 bytes @ 0x1
  3876                           
  3877                           
  3878                           ; 4 bytes @ 0x1
  3879  0071                     	ds	1
  3880  0072                     ?_EUSART_Write_Text:	
  3881  0072                     ___aodiv@counter:	
  3882                           ; 1 bytes @ 0x2
  3883                           
  3884  0072                     ___aomod@counter:	
  3885                           ; 1 bytes @ 0x2
  3886                           
  3887  0072                     ___lomod@counter:	
  3888                           ; 1 bytes @ 0x2
  3889                           
  3890  0072                     EUSART_Write_Text@text:	
  3891                           ; 1 bytes @ 0x2
  3892                           
  3893  0072                     ___lodiv@quotient:	
  3894                           ; 2 bytes @ 0x2
  3895                           
  3896                           
  3897                           ; 8 bytes @ 0x2
  3898  0072                     	ds	1
  3899  0073                     ??_watchdog_timeout_shutdown:	
  3900  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3901                           ; 1 bytes @ 0x3
  3902                           
  3903  0073                     ??_RGB_color:	
  3904                           ; 1 bytes @ 0x3
  3905                           
  3906  0073                     ??_strlen:	
  3907                           ; 1 bytes @ 0x3
  3908                           
  3909  0073                     ??_isupper:	
  3910                           ; 1 bytes @ 0x3
  3911                           
  3912  0073                     ??_isalpha:	
  3913                           ; 1 bytes @ 0x3
  3914                           
  3915  0073                     ??_isdigit:	
  3916                           ; 1 bytes @ 0x3
  3917                           
  3918  0073                     ??__Umul8_16:	
  3919                           ; 1 bytes @ 0x3
  3920                           
  3921  0073                     ??_isspace:	
  3922                           ; 1 bytes @ 0x3
  3923                           
  3924  0073                     ??_islower:	
  3925                           ; 1 bytes @ 0x3
  3926                           
  3927  0073                     ??_send_I2C_data:	
  3928                           ; 1 bytes @ 0x3
  3929                           
  3930  0073                     ??_read_I2C_data:	
  3931                           ; 1 bytes @ 0x3
  3932                           
  3933  0073                     ___aodiv@sign:	
  3934                           ; 1 bytes @ 0x3
  3935                           
  3936  0073                     ___aomod@sign:	
  3937                           ; 1 bytes @ 0x3
  3938                           
  3939  0073                     send_I2C_controlByte@RW_bit:	
  3940                           ; 1 bytes @ 0x3
  3941                           
  3942  0073                     ___wmul@multiplicand:	
  3943                           ; 2 bytes @ 0x3
  3944                           
  3945  0073                     fputc@fp:	
  3946                           ; 2 bytes @ 0x3
  3947                           
  3948  0073                     strlen@a:	
  3949                           ; 2 bytes @ 0x3
  3950                           
  3951  0073                     strncmp@_r:	
  3952                           ; 2 bytes @ 0x3
  3953                           
  3954                           
  3955                           ; 2 bytes @ 0x3
  3956  0073                     	ds	1
  3957  0074                     ??_EUSART_Write_Text:	
  3958  0074                     ?_abs:	
  3959                           ; 1 bytes @ 0x4
  3960                           
  3961  0074                     abs@a:	
  3962                           ; 2 bytes @ 0x4
  3963                           
  3964  0074                     ___aodiv@quotient:	
  3965                           ; 2 bytes @ 0x4
  3966                           
  3967                           
  3968                           ; 8 bytes @ 0x4
  3969  0074                     	ds	1
  3970  0075                     ??_setShuntResistorValue:	
  3971  0075                     ??_fputc:	
  3972                           ; 1 bytes @ 0x5
  3973                           
  3974  0075                     ??_send_I2C_controlByte:	
  3975                           ; 1 bytes @ 0x5
  3976                           
  3977  0075                     ?_I2C_writeRegister:	
  3978                           ; 1 bytes @ 0x5
  3979                           
  3980  0075                     ??___wmul:	
  3981                           ; 1 bytes @ 0x5
  3982                           
  3983  0075                     ??___xxtofl:	
  3984                           ; 1 bytes @ 0x5
  3985                           
  3986  0075                     ?_readRegister:	
  3987                           ; 1 bytes @ 0x5
  3988                           
  3989  0075                     _isspace$1679:	
  3990                           ; 2 bytes @ 0x5
  3991                           
  3992  0075                     EUSART_Write_Text@i:	
  3993                           ; 1 bytes @ 0x5
  3994                           
  3995  0075                     I2C_writeRegister@slaveAddress:	
  3996                           ; 2 bytes @ 0x5
  3997                           
  3998  0075                     readRegister@slaveAddress:	
  3999                           ; 2 bytes @ 0x5
  4000                           
  4001  0075                     ___wmul@product:	
  4002                           ; 2 bytes @ 0x5
  4003                           
  4004  0075                     strncmp@n:	
  4005                           ; 2 bytes @ 0x5
  4006                           
  4007  0075                     __Umul8_16@product:	
  4008                           ; 2 bytes @ 0x5
  4009                           
  4010  0075                     ___lmul@multiplicand:	
  4011                           ; 2 bytes @ 0x5
  4012                           
  4013                           
  4014                           ; 4 bytes @ 0x5
  4015  0075                     	ds	1
  4016  0076                     ??_abs:	
  4017                           
  4018                           ; 1 bytes @ 0x6
  4019  0076                     	ds	1
  4020  0077                     ??_setTemperatureLimitsint:	
  4021  0077                     ??_strncmp:	
  4022                           ; 1 bytes @ 0x7
  4023                           
  4024  0077                     ?_toupper:	
  4025                           ; 1 bytes @ 0x7
  4026                           
  4027  0077                     ?_atoi:	
  4028                           ; 2 bytes @ 0x7
  4029                           
  4030  0077                     I2C_writeRegister@regAddress:	
  4031                           ; 2 bytes @ 0x7
  4032                           
  4033  0077                     readRegister@regAddress:	
  4034                           ; 2 bytes @ 0x7
  4035                           
  4036  0077                     atoi@s:	
  4037                           ; 2 bytes @ 0x7
  4038                           
  4039  0077                     toupper@c:	
  4040                           ; 2 bytes @ 0x7
  4041                           
  4042  0077                     __Umul8_16@word_mpld:	
  4043                           ; 2 bytes @ 0x7
  4044                           
  4045                           
  4046                           ; 2 bytes @ 0x7
  4047  0077                     	ds	1
  4048  0078                     strncmp@l:	
  4049                           
  4050                           ; 2 bytes @ 0x8
  4051  0078                     	ds	1
  4052  0079                     ??_readRegister:	
  4053  0079                     ??___lmul:	
  4054                           ; 1 bytes @ 0x9
  4055                           
  4056  0079                     ??___aldiv:	
  4057                           ; 1 bytes @ 0x9
  4058                           
  4059  0079                     __Umul8_16@multiplier:	
  4060                           ; 1 bytes @ 0x9
  4061                           
  4062  0079                     I2C_writeRegister@data:	
  4063                           ; 1 bytes @ 0x9
  4064                           
  4065  0079                     readRegister@recievedData:	
  4066                           ; 2 bytes @ 0x9
  4067                           
  4068  0079                     _toupper$1787:	
  4069                           ; 2 bytes @ 0x9
  4070                           
  4071                           
  4072                           ; 2 bytes @ 0x9
  4073  0079                     	ds	1
  4074  007A                     ??_stoa:	
  4075  007A                     ??___flsub:	
  4076                           ; 1 bytes @ 0xA
  4077                           
  4078  007A                     ?_fputs:	
  4079                           ; 1 bytes @ 0xA
  4080                           
  4081  007A                     ___fltol@sign1:	
  4082                           ; 2 bytes @ 0xA
  4083                           
  4084  007A                     ___lodiv@counter:	
  4085                           ; 1 bytes @ 0xA
  4086                           
  4087  007A                     EUSART_Initialize@x:	
  4088                           ; 1 bytes @ 0xA
  4089                           
  4090  007A                     fputs@fp:	
  4091                           ; 2 bytes @ 0xA
  4092                           
  4093  007A                     strncmp@r:	
  4094                           ; 2 bytes @ 0xA
  4095                           
  4096                           
  4097                           ; 2 bytes @ 0xA
  4098  007A                     	ds	1
  4099  007B                     ??_init_AFE:	
  4100  007B                     ??_I2C_writeRegister:	
  4101                           ; 1 bytes @ 0xB
  4102                           
  4103  007B                     enableDischarging@sys_ctrl2:	
  4104                           ; 1 bytes @ 0xB
  4105                           
  4106  007B                     enableCharging@sys_ctrl2:	
  4107                           ; 1 bytes @ 0xB
  4108                           
  4109  007B                     ___fltol@exp1:	
  4110                           ; 1 bytes @ 0xB
  4111                           
  4112                           
  4113                           ; 1 bytes @ 0xB
  4114  007B                     	ds	1
  4115  007C                     ??_AFE_UPDATE:	
  4116  007C                     ??_printcellParameters:	
  4117                           ; 1 bytes @ 0xC
  4118                           
  4119                           
  4120                           	psect	cstackBANK0
  4121  0020                     __pcstackBANK0:	
  4122                           ; 1 bytes @ 0xC
  4123                           
  4124  0020                     ?_setTemperatureLimitsint:	
  4125  0020                     ?_enableDischarging:	
  4126                           ; 1 bytes @ 0x0
  4127                           
  4128  0020                     ?_enableCharging:	
  4129                           ; 1 bytes @ 0x0
  4130                           
  4131  0020                     ??_fputs:	
  4132                           ; 1 bytes @ 0x0
  4133                           
  4134  0020                     ??_toupper:	
  4135                           ; 1 bytes @ 0x0
  4136                           
  4137  0020                     ??_atoi:	
  4138                           ; 1 bytes @ 0x0
  4139                           
  4140  0020                     ?_beginAFEcommunication:	
  4141                           ; 1 bytes @ 0x0
  4142                           
  4143  0020                     ?_stoa:	
  4144                           ; 2 bytes @ 0x0
  4145                           
  4146  0020                     ?___aodiv:	
  4147                           ; 2 bytes @ 0x0
  4148                           
  4149  0020                     ?___aomod:	
  4150                           ; 8 bytes @ 0x0
  4151                           
  4152  0020                     ?___lodiv:	
  4153                           ; 8 bytes @ 0x0
  4154                           
  4155  0020                     ?___lomod:	
  4156                           ; 8 bytes @ 0x0
  4157                           
  4158  0020                     ___xxtofl@sign:	
  4159                           ; 8 bytes @ 0x0
  4160                           
  4161  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4162                           ; 1 bytes @ 0x0
  4163                           
  4164  0020                     enableDischarging@enable:	
  4165                           ; 2 bytes @ 0x0
  4166                           
  4167  0020                     enableCharging@enable:	
  4168                           ; 2 bytes @ 0x0
  4169                           
  4170  0020                     stoa@fp:	
  4171                           ; 2 bytes @ 0x0
  4172                           
  4173  0020                     ___lmul@product:	
  4174                           ; 2 bytes @ 0x0
  4175                           
  4176  0020                     ___aodiv@divisor:	
  4177                           ; 4 bytes @ 0x0
  4178                           
  4179  0020                     ___aomod@divisor:	
  4180                           ; 8 bytes @ 0x0
  4181                           
  4182  0020                     ___lodiv@divisor:	
  4183                           ; 8 bytes @ 0x0
  4184                           
  4185  0020                     ___lomod@divisor:	
  4186                           ; 8 bytes @ 0x0
  4187                           
  4188                           
  4189                           ; 8 bytes @ 0x0
  4190  0020                     	ds	1
  4191  0021                     ___xxtofl@exp:	
  4192                           
  4193                           ; 1 bytes @ 0x1
  4194  0021                     	ds	1
  4195  0022                     ??_beginAFEcommunication:	
  4196  0022                     ??_enableDischarging:	
  4197                           ; 1 bytes @ 0x2
  4198                           
  4199  0022                     ??_enableCharging:	
  4200                           ; 1 bytes @ 0x2
  4201                           
  4202  0022                     fputs@c:	
  4203                           ; 1 bytes @ 0x2
  4204                           
  4205  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4206                           ; 1 bytes @ 0x2
  4207                           
  4208  0022                     stoa@s:	
  4209                           ; 2 bytes @ 0x2
  4210                           
  4211  0022                     ___xxtofl@arg:	
  4212                           ; 2 bytes @ 0x2
  4213                           
  4214                           
  4215                           ; 4 bytes @ 0x2
  4216  0022                     	ds	1
  4217  0023                     fputs@i:	
  4218                           
  4219                           ; 2 bytes @ 0x3
  4220  0023                     	ds	1
  4221  0024                     ?___aldiv:	
  4222  0024                     setTemperatureLimitsint@minCharge_degC:	
  4223                           ; 4 bytes @ 0x4
  4224                           
  4225  0024                     atoi@neg:	
  4226                           ; 2 bytes @ 0x4
  4227                           
  4228  0024                     ___aldiv@divisor:	
  4229                           ; 2 bytes @ 0x4
  4230                           
  4231  0024                     stoa@nuls:	
  4232                           ; 4 bytes @ 0x4
  4233                           
  4234                           
  4235                           ; 7 bytes @ 0x4
  4236  0024                     	ds	1
  4237  0025                     fputs@s:	
  4238                           
  4239                           ; 1 bytes @ 0x5
  4240  0025                     	ds	1
  4241  0026                     ?_pad:	
  4242  0026                     ?___flmul:	
  4243                           ; 2 bytes @ 0x6
  4244                           
  4245  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4246                           ; 4 bytes @ 0x6
  4247                           
  4248  0026                     pad@fp:	
  4249                           ; 2 bytes @ 0x6
  4250                           
  4251  0026                     _atoi$1652:	
  4252                           ; 2 bytes @ 0x6
  4253                           
  4254  0026                     ___flmul@b:	
  4255                           ; 2 bytes @ 0x6
  4256                           
  4257                           
  4258                           ; 4 bytes @ 0x6
  4259  0026                     	ds	2
  4260  0028                     pad@buf:	
  4261  0028                     _atoi$1654:	
  4262                           ; 1 bytes @ 0x8
  4263                           
  4264  0028                     ___aldiv@dividend:	
  4265                           ; 2 bytes @ 0x8
  4266                           
  4267  0028                     ___aodiv@dividend:	
  4268                           ; 4 bytes @ 0x8
  4269                           
  4270  0028                     ___aomod@dividend:	
  4271                           ; 8 bytes @ 0x8
  4272                           
  4273  0028                     ___lodiv@dividend:	
  4274                           ; 8 bytes @ 0x8
  4275                           
  4276  0028                     ___lomod@dividend:	
  4277                           ; 8 bytes @ 0x8
  4278                           
  4279                           
  4280                           ; 8 bytes @ 0x8
  4281  0028                     	ds	1
  4282  0029                     pad@p:	
  4283                           
  4284                           ; 2 bytes @ 0x9
  4285  0029                     	ds	1
  4286  002A                     _atoi$1653:	
  4287  002A                     ___flmul@a:	
  4288                           ; 1 bytes @ 0xA
  4289                           
  4290                           
  4291                           ; 4 bytes @ 0xA
  4292  002A                     	ds	1
  4293  002B                     ??_pad:	
  4294  002B                     beginAFEcommunication@commSuccess:	
  4295                           ; 1 bytes @ 0xB
  4296                           
  4297  002B                     stoa@i:	
  4298                           ; 2 bytes @ 0xB
  4299                           
  4300  002B                     atoi@n:	
  4301                           ; 2 bytes @ 0xB
  4302                           
  4303                           
  4304                           ; 2 bytes @ 0xB
  4305  002B                     	ds	1
  4306  002C                     ___aldiv@counter:	
  4307  002C                     pad@i:	
  4308                           ; 1 bytes @ 0xC
  4309                           
  4310                           
  4311                           ; 2 bytes @ 0xC
  4312  002C                     	ds	1
  4313  002D                     ___aldiv@sign:	
  4314  002D                     beginAFEcommunication@i:	
  4315                           ; 1 bytes @ 0xD
  4316                           
  4317  002D                     stoa@w:	
  4318                           ; 2 bytes @ 0xD
  4319                           
  4320                           
  4321                           ; 2 bytes @ 0xD
  4322  002D                     	ds	1
  4323  002E                     ??___flmul:	
  4324  002E                     pad@w:	
  4325                           ; 1 bytes @ 0xE
  4326                           
  4327  002E                     ___aldiv@quotient:	
  4328                           ; 2 bytes @ 0xE
  4329                           
  4330                           
  4331                           ; 4 bytes @ 0xE
  4332  002E                     	ds	1
  4333  002F                     stoa@cp:	
  4334                           
  4335                           ; 2 bytes @ 0xF
  4336  002F                     	ds	1
  4337  0030                     ?_ctoa:	
  4338  0030                     ?_dtoa:	
  4339                           ; 2 bytes @ 0x10
  4340                           
  4341  0030                     ?_otoa:	
  4342                           ; 2 bytes @ 0x10
  4343                           
  4344  0030                     ?_utoa:	
  4345                           ; 2 bytes @ 0x10
  4346                           
  4347  0030                     ?_xtoa:	
  4348                           ; 2 bytes @ 0x10
  4349                           
  4350  0030                     ctoa@fp:	
  4351                           ; 2 bytes @ 0x10
  4352                           
  4353  0030                     dtoa@fp:	
  4354                           ; 2 bytes @ 0x10
  4355                           
  4356  0030                     otoa@fp:	
  4357                           ; 2 bytes @ 0x10
  4358                           
  4359  0030                     utoa@fp:	
  4360                           ; 2 bytes @ 0x10
  4361                           
  4362  0030                     xtoa@fp:	
  4363                           ; 2 bytes @ 0x10
  4364                           
  4365                           
  4366                           ; 2 bytes @ 0x10
  4367  0030                     	ds	1
  4368  0031                     stoa@p:	
  4369                           
  4370                           ; 2 bytes @ 0x11
  4371  0031                     	ds	1
  4372  0032                     ?_EUSART_Initialize:	
  4373  0032                     ?_setCellUndervoltageProtection:	
  4374                           ; 1 bytes @ 0x12
  4375                           
  4376  0032                     ?_setCellOvervoltageProtection:	
  4377                           ; 1 bytes @ 0x12
  4378                           
  4379  0032                     ctoa@c:	
  4380                           ; 1 bytes @ 0x12
  4381                           
  4382  0032                     setCellUndervoltageProtection@voltage_mV:	
  4383                           ; 1 bytes @ 0x12
  4384                           
  4385  0032                     setCellOvervoltageProtection@voltage_mV:	
  4386                           ; 2 bytes @ 0x12
  4387                           
  4388  0032                     EUSART_Initialize@baudrate:	
  4389                           ; 2 bytes @ 0x12
  4390                           
  4391  0032                     dtoa@d:	
  4392                           ; 4 bytes @ 0x12
  4393                           
  4394  0032                     otoa@d:	
  4395                           ; 8 bytes @ 0x12
  4396                           
  4397  0032                     utoa@d:	
  4398                           ; 8 bytes @ 0x12
  4399                           
  4400  0032                     xtoa@d:	
  4401                           ; 8 bytes @ 0x12
  4402                           
  4403                           
  4404                           ; 8 bytes @ 0x12
  4405  0032                     	ds	1
  4406  0033                     ??_ctoa:	
  4407  0033                     ___flmul@sign:	
  4408                           ; 1 bytes @ 0x13
  4409                           
  4410  0033                     stoa@l:	
  4411                           ; 1 bytes @ 0x13
  4412                           
  4413                           
  4414                           ; 2 bytes @ 0x13
  4415  0033                     	ds	1
  4416  0034                     ___flmul@aexp:	
  4417  0034                     setCellUndervoltageProtection@delay_s:	
  4418                           ; 1 bytes @ 0x14
  4419                           
  4420  0034                     setCellOvervoltageProtection@delay_s:	
  4421                           ; 2 bytes @ 0x14
  4422                           
  4423  0034                     ctoa@w:	
  4424                           ; 2 bytes @ 0x14
  4425                           
  4426                           
  4427                           ; 2 bytes @ 0x14
  4428  0034                     	ds	1
  4429  0035                     ___flmul@grs:	
  4430                           
  4431                           ; 4 bytes @ 0x15
  4432  0035                     	ds	1
  4433  0036                     ??_EUSART_Initialize:	
  4434  0036                     ??_setCellUndervoltageProtection:	
  4435                           ; 1 bytes @ 0x16
  4436                           
  4437  0036                     ??_setCellOvervoltageProtection:	
  4438                           ; 1 bytes @ 0x16
  4439                           
  4440                           
  4441                           ; 1 bytes @ 0x16
  4442  0036                     	ds	3
  4443  0039                     ___flmul@bexp:	
  4444                           
  4445                           ; 1 bytes @ 0x19
  4446  0039                     	ds	1
  4447  003A                     ??_dtoa:	
  4448  003A                     ??_otoa:	
  4449                           ; 1 bytes @ 0x1A
  4450                           
  4451  003A                     ??_utoa:	
  4452                           ; 1 bytes @ 0x1A
  4453                           
  4454  003A                     xtoa@x:	
  4455                           ; 1 bytes @ 0x1A
  4456                           
  4457  003A                     ___flmul@prod:	
  4458                           ; 1 bytes @ 0x1A
  4459                           
  4460                           
  4461                           ; 4 bytes @ 0x1A
  4462  003A                     	ds	1
  4463  003B                     ??_xtoa:	
  4464  003B                     utoa@p:	
  4465                           ; 1 bytes @ 0x1B
  4466                           
  4467                           
  4468                           ; 2 bytes @ 0x1B
  4469  003B                     	ds	2
  4470  003D                     _dtoa$1201:	
  4471  003D                     utoa@w:	
  4472                           ; 2 bytes @ 0x1D
  4473                           
  4474                           
  4475                           ; 2 bytes @ 0x1D
  4476  003D                     	ds	1
  4477  003E                     ___flmul@temp:	
  4478                           
  4479                           ; 2 bytes @ 0x1E
  4480  003E                     	ds	1
  4481  003F                     dtoa@p:	
  4482  003F                     utoa@n:	
  4483                           ; 2 bytes @ 0x1F
  4484                           
  4485                           
  4486                           ; 8 bytes @ 0x1F
  4487  003F                     	ds	1
  4488  0040                     ?___fldiv:	
  4489  0040                     ___fldiv@a:	
  4490                           ; 4 bytes @ 0x20
  4491                           
  4492                           
  4493                           ; 4 bytes @ 0x20
  4494  0040                     	ds	1
  4495  0041                     dtoa@w:	
  4496                           
  4497                           ; 2 bytes @ 0x21
  4498  0041                     	ds	1
  4499  0042                     otoa@p:	
  4500                           
  4501                           ; 2 bytes @ 0x22
  4502  0042                     	ds	1
  4503  0043                     dtoa@s:	
  4504  0043                     _xtoa$1237:	
  4505                           ; 2 bytes @ 0x23
  4506                           
  4507                           
  4508                           ; 2 bytes @ 0x23
  4509  0043                     	ds	1
  4510  0044                     setCellUndervoltageProtection@uv_trip:	
  4511  0044                     setCellOvervoltageProtection@ov_trip:	
  4512                           ; 1 bytes @ 0x24
  4513                           
  4514  0044                     otoa@t:	
  4515                           ; 1 bytes @ 0x24
  4516                           
  4517  0044                     ___fldiv@b:	
  4518                           ; 2 bytes @ 0x24
  4519                           
  4520                           
  4521                           ; 4 bytes @ 0x24
  4522  0044                     	ds	1
  4523  0045                     setCellUndervoltageProtection@i:	
  4524  0045                     setCellOvervoltageProtection@i:	
  4525                           ; 2 bytes @ 0x25
  4526                           
  4527  0045                     _xtoa$1238:	
  4528                           ; 2 bytes @ 0x25
  4529                           
  4530  0045                     dtoa@n:	
  4531                           ; 2 bytes @ 0x25
  4532                           
  4533                           
  4534                           ; 8 bytes @ 0x25
  4535  0045                     	ds	1
  4536  0046                     otoa@w:	
  4537                           
  4538                           ; 2 bytes @ 0x26
  4539  0046                     	ds	1
  4540  0047                     utoa@i:	
  4541  0047                     xtoa@p:	
  4542                           ; 2 bytes @ 0x27
  4543                           
  4544                           
  4545                           ; 2 bytes @ 0x27
  4546  0047                     	ds	1
  4547  0048                     ??___fldiv:	
  4548  0048                     otoa@n:	
  4549                           ; 1 bytes @ 0x28
  4550                           
  4551                           
  4552                           ; 8 bytes @ 0x28
  4553  0048                     	ds	1
  4554  0049                     xtoa@w:	
  4555                           
  4556                           ; 2 bytes @ 0x29
  4557  0049                     	ds	2
  4558  004B                     xtoa@n:	
  4559                           
  4560                           ; 8 bytes @ 0x2B
  4561  004B                     	ds	2
  4562  004D                     dtoa@i:	
  4563  004D                     ___fldiv@rem:	
  4564                           ; 2 bytes @ 0x2D
  4565                           
  4566                           
  4567                           ; 4 bytes @ 0x2D
  4568  004D                     	ds	3
  4569  0050                     otoa@i:	
  4570                           
  4571                           ; 2 bytes @ 0x30
  4572  0050                     	ds	1
  4573  0051                     ___fldiv@sign:	
  4574                           
  4575                           ; 1 bytes @ 0x31
  4576  0051                     	ds	1
  4577  0052                     ___fldiv@new_exp:	
  4578                           
  4579                           ; 2 bytes @ 0x32
  4580  0052                     	ds	1
  4581  0053                     xtoa@i:	
  4582                           
  4583                           ; 2 bytes @ 0x33
  4584  0053                     	ds	1
  4585  0054                     ___fldiv@grs:	
  4586                           
  4587                           ; 4 bytes @ 0x34
  4588  0054                     	ds	1
  4589  0055                     xtoa@c:	
  4590                           
  4591                           ; 2 bytes @ 0x35
  4592  0055                     	ds	2
  4593  0057                     ?_vfpfcnvrt:	
  4594  0057                     vfpfcnvrt@fp:	
  4595                           ; 2 bytes @ 0x37
  4596                           
  4597                           
  4598                           ; 2 bytes @ 0x37
  4599  0057                     	ds	1
  4600  0058                     ___fldiv@bexp:	
  4601                           
  4602                           ; 1 bytes @ 0x38
  4603  0058                     	ds	1
  4604  0059                     vfpfcnvrt@fmt:	
  4605  0059                     ___fldiv@aexp:	
  4606                           ; 1 bytes @ 0x39
  4607                           
  4608                           
  4609                           ; 1 bytes @ 0x39
  4610  0059                     	ds	1
  4611  005A                     ?___flge:	
  4612  005A                     ?___fladd:	
  4613                           ; 1 bit 
  4614                           
  4615  005A                     vfpfcnvrt@ap:	
  4616                           ; 4 bytes @ 0x3A
  4617                           
  4618  005A                     ___flge@ff1:	
  4619                           ; 1 bytes @ 0x3A
  4620                           
  4621  005A                     ___fladd@b:	
  4622                           ; 4 bytes @ 0x3A
  4623                           
  4624                           
  4625                           ; 4 bytes @ 0x3A
  4626  005A                     	ds	1
  4627  005B                     ??_vfpfcnvrt:	
  4628                           
  4629                           ; 1 bytes @ 0x3B
  4630  005B                     	ds	3
  4631  005E                     ___flge@ff2:	
  4632  005E                     ___fladd@a:	
  4633                           ; 4 bytes @ 0x3E
  4634                           
  4635                           
  4636                           ; 4 bytes @ 0x3E
  4637  005E                     	ds	3
  4638  0061                     ?_vfprintf:	
  4639  0061                     vfprintf@fp:	
  4640                           ; 2 bytes @ 0x41
  4641                           
  4642                           
  4643                           ; 2 bytes @ 0x41
  4644  0061                     	ds	1
  4645  0062                     ??___flge:	
  4646  0062                     ??___fladd:	
  4647                           ; 1 bytes @ 0x42
  4648                           
  4649                           
  4650                           ; 1 bytes @ 0x42
  4651  0062                     	ds	1
  4652  0063                     vfprintf@fmt:	
  4653                           
  4654                           ; 2 bytes @ 0x43
  4655  0063                     	ds	2
  4656  0065                     vfprintf@ap:	
  4657                           
  4658                           ; 1 bytes @ 0x45
  4659  0065                     	ds	1
  4660  0066                     ?_setShortCircuitProtection:	
  4661  0066                     ?_setOverCurrentDischargeProtection:	
  4662                           ; 1 bytes @ 0x46
  4663                           
  4664  0066                     ??_vfprintf:	
  4665                           ; 1 bytes @ 0x46
  4666                           
  4667  0066                     setShortCircuitProtection@current_mA:	
  4668                           ; 1 bytes @ 0x46
  4669                           
  4670  0066                     setOverCurrentDischargeProtection@current_mA:	
  4671                           ; 4 bytes @ 0x46
  4672                           
  4673                           
  4674                           ; 4 bytes @ 0x46
  4675  0066                     	ds	2
  4676  0068                     vfprintf@cfmt:	
  4677                           
  4678                           ; 2 bytes @ 0x48
  4679  0068                     	ds	2
  4680  006A                     ??_vsnprintf:	
  4681  006A                     ___fladd@signs:	
  4682                           ; 1 bytes @ 0x4A
  4683                           
  4684  006A                     setShortCircuitProtection@delay_us:	
  4685                           ; 1 bytes @ 0x4A
  4686                           
  4687  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4688                           ; 2 bytes @ 0x4A
  4689                           
  4690                           
  4691                           ; 2 bytes @ 0x4A
  4692  006A                     	ds	1
  4693  006B                     ___fladd@aexp:	
  4694                           
  4695                           ; 1 bytes @ 0x4B
  4696  006B                     	ds	1
  4697  006C                     ??_snprintf:	
  4698  006C                     ??_setShortCircuitProtection:	
  4699                           ; 1 bytes @ 0x4C
  4700                           
  4701  006C                     ??_setOverCurrentDischargeProtection:	
  4702                           ; 1 bytes @ 0x4C
  4703                           
  4704  006C                     ___fladd@bexp:	
  4705                           ; 1 bytes @ 0x4C
  4706                           
  4707                           
  4708                           ; 1 bytes @ 0x4C
  4709  006C                     	ds	1
  4710  006D                     ___fladd@grs:	
  4711                           
  4712                           ; 1 bytes @ 0x4D
  4713  006D                     	ds	2
  4714  006F                     snprintf@ap:	
  4715                           
  4716                           ; 1 bytes @ 0x4F
  4717  006F                     	ds	1
  4718                           
  4719                           	psect	maintext
  4720  3763                     __pmaintext:	
  4721 ;;
  4722 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4723 ;;
  4724 ;; *************** function _main *****************
  4725 ;; Defined at:
  4726 ;;		line 72 in file "main.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      void 
  4733 ;; Registers used:
  4734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : B1F/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4743 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4744 ;;Total ram usage:        2 bytes
  4745 ;; Hardware stack levels required when called:   12
  4746 ;; This function calls:
  4747 ;;		_EUSART_Initialize
  4748 ;;		_initClock
  4749 ;;		_initWDT
  4750 ;;		_init_GPIO
  4751 ;;		_init_I2C
  4752 ;;		_init_RGB
  4753 ;;		_init_TMR1
  4754 ;;		_statemachine
  4755 ;;		_watchdog_timeout_shutdown
  4756 ;; This function is called by:
  4757 ;;		Startup code after reset
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           
  4762                           ;psect for function _main
  4763  3763                     _main:	
  4764                           
  4765                           ;main.c: 75:     initClock();
  4766                           
  4767                           ;incstack = 0
  4768                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4769  3763  3187  27FD  31B7   	fcall	_initClock
  4770                           
  4771                           ;main.c: 76:     init_GPIO();
  4772  3766  3188  2008  31B7   	fcall	_init_GPIO
  4773                           
  4774                           ;main.c: 77:     initWDT();
  4775  3769  31B4  24F8  31B7   	fcall	_initWDT
  4776                           
  4777                           ;main.c: 78:     init_I2C();
  4778  376C  31B5  2547  31B7   	fcall	_init_I2C
  4779                           
  4780                           ;main.c: 79:     EUSART_Initialize(9600);
  4781  376F  3000               	movlw	0
  4782  3770  0020               	movlb	0	; select bank0
  4783  3771  00B5               	movwf	EUSART_Initialize@baudrate+3
  4784  3772  3000               	movlw	0
  4785  3773  00B4               	movwf	EUSART_Initialize@baudrate+2
  4786  3774  3025               	movlw	37
  4787  3775  00B3               	movwf	EUSART_Initialize@baudrate+1
  4788  3776  3080               	movlw	128
  4789  3777  00B2               	movwf	EUSART_Initialize@baudrate
  4790  3778  31AE  26A3  31B7   	fcall	_EUSART_Initialize
  4791                           
  4792                           ;main.c: 80:     init_TMR1();
  4793  377B  31B5  253C  31B7   	fcall	_init_TMR1
  4794                           
  4795                           ;main.c: 81:     init_RGB();
  4796  377E  31B4  24F3  31B7   	fcall	_init_RGB
  4797                           
  4798                           ;main.c: 84:     watchdog_timeout_shutdown();
  4799  3781  31B6  263E  31B7   	fcall	_watchdog_timeout_shutdown
  4800  3784                     l8365:	
  4801                           
  4802                           ;main.c: 88:         statemachine();
  4803  3784  31AA  22FD  31B7   	fcall	_statemachine
  4804                           
  4805                           ;main.c: 90:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  4806  3787  3015               	movlw	21
  4807  3788  0023               	movlb	3	; select bank3
  4808  3789  00E4               	movwf	(??_main^(0+384)+1)
  4809  378A  304B               	movlw	75
  4810  378B  00E3               	movwf	??_main^(0+384)
  4811  378C  30BE               	movlw	190
  4812  378D                     u11497:	
  4813  378D  0B89               	decfsz	9,f
  4814  378E  2F8D               	goto	u11497
  4815  378F  0BE3               	decfsz	??_main^(0+384),f
  4816  3790  2F8D               	goto	u11497
  4817  3791  0BE4               	decfsz	(??_main^(0+384)+1),f
  4818  3792  2F8D               	goto	u11497
  4819  3793  0000               	nop
  4820  3794  2F84               	goto	l8365
  4821  3795                     __end_of_main:	
  4822                           
  4823                           	psect	text1
  4824  363E                     __ptext1:	
  4825 ;; *************** function _watchdog_timeout_shutdown *****************
  4826 ;; Defined at:
  4827 ;;		line 3 in file "algorithms.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;		None
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4844 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4845 ;;Total ram usage:        2 bytes
  4846 ;; Hardware stack levels used:    1
  4847 ;; Hardware stack levels required when called:    2
  4848 ;; This function calls:
  4849 ;;		_RGB_color
  4850 ;; This function is called by:
  4851 ;;		_main
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           
  4856                           ;psect for function _watchdog_timeout_shutdown
  4857  363E                     _watchdog_timeout_shutdown:	
  4858                           
  4859                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  4860                           
  4861                           ;incstack = 0
  4862                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4863  363E  0020               	movlb	0	; select bank0
  4864  363F  1A03               	btfsc	3,4	;volatile
  4865  3640  0008               	return
  4866                           
  4867                           ;algorithms.c: 6:         RGB_color(0);
  4868  3641  3000               	movlw	0
  4869  3642  00F1               	movwf	RGB_color@color
  4870  3643  00F2               	movwf	RGB_color@color+1
  4871  3644  31A8  200E  31B6   	fcall	_RGB_color
  4872                           
  4873                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  4874  3647  3029               	movlw	41
  4875  3648  00F4               	movwf	??_watchdog_timeout_shutdown+1
  4876  3649  3096               	movlw	150
  4877  364A  00F3               	movwf	??_watchdog_timeout_shutdown
  4878  364B  307F               	movlw	127
  4879  364C                     u11507:	
  4880  364C  0B89               	decfsz	9,f
  4881  364D  2E4C               	goto	u11507
  4882  364E  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  4883  364F  2E4C               	goto	u11507
  4884  3650  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  4885  3651  2E4C               	goto	u11507
  4886  3652  0000               	nop
  4887                           
  4888                           ;algorithms.c: 8:          currState = 3;
  4889  3653  3003               	movlw	3
  4890  3654  00F3               	movwf	??_watchdog_timeout_shutdown
  4891  3655  0873               	movf	??_watchdog_timeout_shutdown,w
  4892  3656  0023               	movlb	3	; select bank3
  4893  3657  00D9               	movwf	_currState^(0+384)
  4894  3658  0008               	return
  4895  3659                     __end_of_watchdog_timeout_shutdown:	
  4896                           
  4897                           	psect	text2
  4898  2AFD                     __ptext2:	
  4899 ;; *************** function _statemachine *****************
  4900 ;; Defined at:
  4901 ;;		line 96 in file "main.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;  success         1   68[BANK2 ] unsigned char 
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4916 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4917 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4918 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4919 ;;Total ram usage:        3 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:   11
  4922 ;; This function calls:
  4923 ;;		_AFE_UPDATE
  4924 ;;		_EUSART_Write_Text
  4925 ;;		_RGB_AWAIT_AFE_CONN
  4926 ;;		_RGB_color
  4927 ;;		_beginAFEcommunication
  4928 ;;		_init_AFE
  4929 ;;		_printcellParameters
  4930 ;;		_snprintf
  4931 ;; This function is called by:
  4932 ;;		_main
  4933 ;; This function uses a non-reentrant model
  4934 ;;
  4935                           
  4936                           
  4937                           ;psect for function _statemachine
  4938  2AFD                     _statemachine:	
  4939                           
  4940                           ;main.c: 98:     switch (currState) {
  4941                           
  4942                           ;incstack = 0
  4943                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4944  2AFD  2B5C               	goto	l8341
  4945  2AFE                     l8307:	
  4946                           
  4947                           ;main.c: 101:             if (tmr1_flag) {
  4948  2AFE  0021               	movlb	1	; select bank1
  4949  2AFF  086F               	movf	_tmr1_flag^(0+128),w	;volatile
  4950  2B00  1903               	btfsc	3,2
  4951  2B01  0008               	return
  4952                           
  4953                           ;main.c: 102:                 tmr1_flag = 0;
  4954  2B02  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  4955                           
  4956                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  4957  2B03  31A0  2000  31AA   	fcall	_RGB_AWAIT_AFE_CONN
  4958                           
  4959                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  4960  2B06  31AF  274C  31AA   	fcall	_beginAFEcommunication
  4961  2B09  0020               	movlb	0	; select bank0
  4962  2B0A  0820               	movf	?_beginAFEcommunication,w
  4963  2B0B  0022               	movlb	2	; select bank2
  4964  2B0C  00E2               	movwf	??_statemachine^(0+256)
  4965  2B0D  0862               	movf	??_statemachine^(0+256),w
  4966  2B0E  00E4               	movwf	statemachine@success^(0+256)
  4967                           
  4968                           ;main.c: 109:                 if (success) {
  4969  2B0F  0864               	movf	statemachine@success^(0+256),w
  4970  2B10  1903               	btfsc	3,2
  4971  2B11  0008               	return
  4972                           
  4973                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  4974  2B12  0020               	movlb	0	; select bank0
  4975  2B13  1018               	bcf	24,0	;volatile
  4976                           
  4977                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  4978  2B14  0021               	movlb	1	; select bank1
  4979  2B15  1011               	bcf	17,0	;volatile
  4980                           
  4981                           ;main.c: 112:                     RGB_color(0);
  4982  2B16  3000               	movlw	0
  4983  2B17  00F1               	movwf	RGB_color@color
  4984  2B18  00F2               	movwf	RGB_color@color+1
  4985  2B19  31A8  200E         	fcall	_RGB_color
  4986                           
  4987                           ;main.c: 113:                     tmr1_flag = 0;
  4988  2B1B  0021               	movlb	1	; select bank1
  4989  2B1C  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  4990                           
  4991                           ;main.c: 126:                     currState = 1;
  4992  2B1D  0023               	movlb	3	; select bank3
  4993  2B1E  01D9               	clrf	_currState^(0+384)
  4994  2B1F  0AD9               	incf	_currState^(0+384),f
  4995  2B20  0008               	return
  4996  2B21                     l8325:	
  4997                           
  4998                           ;main.c: 135:             init_AFE();
  4999  2B21  31A9  21D8  31AA   	fcall	_init_AFE
  5000                           
  5001                           ;main.c: 154:             RGB_color(1);
  5002  2B24  3001               	movlw	1
  5003  2B25  00F1               	movwf	RGB_color@color
  5004  2B26  3000               	movlw	0
  5005  2B27  00F2               	movwf	RGB_color@color+1
  5006  2B28  31A8  200E         	fcall	_RGB_color
  5007                           
  5008                           ;main.c: 155:             currState = 2;
  5009  2B2A  3002               	movlw	2
  5010  2B2B  0022               	movlb	2	; select bank2
  5011  2B2C  00E2               	movwf	??_statemachine^(0+256)
  5012  2B2D  0862               	movf	??_statemachine^(0+256),w
  5013  2B2E  0023               	movlb	3	; select bank3
  5014  2B2F  00D9               	movwf	_currState^(0+384)
  5015                           
  5016                           ;main.c: 156:             break;
  5017  2B30  0008               	return
  5018  2B31                     l8329:	
  5019                           
  5020                           ;main.c: 160:             AFE_UPDATE();
  5021  2B31  31B5  2567  31AA   	fcall	_AFE_UPDATE
  5022  2B34  0064               	clrwdt	;# 
  5023                           
  5024                           ;main.c: 164:             printcellParameters();
  5025  2B35  31A0  20E7  31AA   	fcall	_printcellParameters
  5026                           
  5027                           ;main.c: 166:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5028  2B38  3066               	movlw	102
  5029  2B39  0022               	movlb	2	; select bank2
  5030  2B3A  00E3               	movwf	(??_statemachine^(0+256)+1)
  5031  2B3B  3076               	movlw	118
  5032  2B3C  00E2               	movwf	??_statemachine^(0+256)
  5033  2B3D  30C1               	movlw	193
  5034  2B3E                     u11517:	
  5035  2B3E  0B89               	decfsz	9,f
  5036  2B3F  2B3E               	goto	u11517
  5037  2B40  0BE2               	decfsz	??_statemachine^(0+256),f
  5038  2B41  2B3E               	goto	u11517
  5039  2B42  0BE3               	decfsz	(??_statemachine^(0+256)+1),f
  5040  2B43  2B3E               	goto	u11517
  5041                           
  5042                           ;main.c: 168:             break;
  5043  2B44  0008               	return
  5044  2B45                     l8335:	
  5045                           
  5046                           ;main.c: 172:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5047  2B45  3071               	movlw	113
  5048  2B46  0021               	movlb	1	; select bank1
  5049  2B47  00CC               	movwf	snprintf@s^(0+128)
  5050  2B48  3027               	movlw	39
  5051  2B49  00CD               	movwf	(snprintf@s^(0+128)+1)
  5052  2B4A  307F               	movlw	127
  5053  2B4B  00CE               	movwf	snprintf@n^(0+128)
  5054  2B4C  3000               	movlw	0
  5055  2B4D  00CF               	movwf	(snprintf@n^(0+128)+1)
  5056  2B4E  3000               	movlw	low (STR_1| (0+32768))
  5057  2B4F  00D0               	movwf	snprintf@fmt^(0+128)
  5058  2B50  30B8               	movlw	high (STR_1| (0+32768))
  5059  2B51  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5060  2B52  31B6  2623  31AA   	fcall	_snprintf
  5061                           
  5062                           ;main.c: 173:              EUSART_Write_Text(messageBuffer);
  5063  2B55  3071               	movlw	113
  5064  2B56  00F2               	movwf	EUSART_Write_Text@text
  5065  2B57  3027               	movlw	39
  5066  2B58  00F3               	movwf	EUSART_Write_Text@text+1
  5067  2B59  31B5  25EE         	fcall	_EUSART_Write_Text
  5068                           
  5069                           ;main.c: 174:             break;
  5070  2B5B  0008               	return
  5071  2B5C                     l8341:	
  5072  2B5C  0023               	movlb	3	; select bank3
  5073  2B5D  0859               	movf	_currState^(0+384),w
  5074  2B5E  0022               	movlb	2	; select bank2
  5075  2B5F  00E2               	movwf	??_statemachine^(0+256)
  5076  2B60  01E3               	clrf	(??_statemachine^(0+256)+1)
  5077                           
  5078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5079                           ; Switch size 1, requested type "simple"
  5080                           ; Number of cases is 1, Range of values is 0 to 0
  5081                           ; switch strategies available:
  5082                           ; Name         Instructions Cycles
  5083                           ; simple_byte            4     3 (average)
  5084                           ; direct_byte            8     6 (fixed)
  5085                           ; jumptable            260     6 (fixed)
  5086                           ;	Chosen strategy is simple_byte
  5087  2B61  0863               	movf	(??_statemachine+1)^(0+256),w
  5088  2B62  3A00               	xorlw	0	; case 0
  5089  2B63  1903               	skipnz
  5090  2B64  2B66               	goto	l8549
  5091  2B65  2B74               	goto	l164
  5092  2B66                     l8549:	
  5093                           
  5094                           ; Switch size 1, requested type "simple"
  5095                           ; Number of cases is 4, Range of values is 0 to 3
  5096                           ; switch strategies available:
  5097                           ; Name         Instructions Cycles
  5098                           ; simple_byte           13     7 (average)
  5099                           ; direct_byte           14     6 (fixed)
  5100                           ; jumptable            260     6 (fixed)
  5101                           ;	Chosen strategy is simple_byte
  5102  2B66  0862               	movf	??_statemachine^(0+256),w
  5103  2B67  3A00               	xorlw	0	; case 0
  5104  2B68  1903               	skipnz
  5105  2B69  2AFE               	goto	l8307
  5106  2B6A  3A01               	xorlw	1	; case 1
  5107  2B6B  1903               	skipnz
  5108  2B6C  2B21               	goto	l8325
  5109  2B6D  3A03               	xorlw	3	; case 2
  5110  2B6E  1903               	skipnz
  5111  2B6F  2B31               	goto	l8329
  5112  2B70  3A01               	xorlw	1	; case 3
  5113  2B71  1903               	skipnz
  5114  2B72  2B45               	goto	l8335
  5115  2B73  2B74               	goto	l164
  5116  2B74                     l164:	
  5117  2B74  0008               	return
  5118  2B75                     __end_of_statemachine:	
  5119                           
  5120                           	psect	text3
  5121  20E7                     __ptext3:	
  5122 ;; *************** function _printcellParameters *****************
  5123 ;; Defined at:
  5124 ;;		line 307 in file "BQ76920.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5142 ;;Total ram usage:        0 bytes
  5143 ;; Hardware stack levels used:    1
  5144 ;; Hardware stack levels required when called:   10
  5145 ;; This function calls:
  5146 ;;		_EUSART_Write_Text
  5147 ;;		_readRegister
  5148 ;;		_snprintf
  5149 ;; This function is called by:
  5150 ;;		_statemachine
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           
  5155                           ;psect for function _printcellParameters
  5156  20E7                     _printcellParameters:	
  5157                           
  5158                           ;BQ76920.c: 308:     snprintf(messageBuffer, 127, "Cell batt: %i ,%d, %d , %d, %d, %d Ba
      +                          tt Curr: %i Temp: %i CTRL2: %i \n\r", batVoltage,cellVoltages[0],cellVoltages[1],cellVol
      +                          tages[2],cellVoltages[3],cellVoltages[4], batCurrent, temperatureThermistor,readRegister
      +                          (0x18, 0x05));
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5162  20E7  3071               	movlw	113
  5163  20E8  0021               	movlb	1	; select bank1
  5164  20E9  00CC               	movwf	snprintf@s^(0+128)
  5165  20EA  3027               	movlw	39
  5166  20EB  00CD               	movwf	(snprintf@s^(0+128)+1)
  5167  20EC  307F               	movlw	127
  5168  20ED  00CE               	movwf	snprintf@n^(0+128)
  5169  20EE  3000               	movlw	0
  5170  20EF  00CF               	movwf	(snprintf@n^(0+128)+1)
  5171  20F0  3002               	movlw	low (STR_2| (0+32768))
  5172  20F1  00D0               	movwf	snprintf@fmt^(0+128)
  5173  20F2  30B0               	movlw	high (STR_2| (0+32768))
  5174  20F3  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5175  20F4  0023               	movlb	3	; select bank3
  5176  20F5  0841               	movf	(_batVoltage+3)^(0+384),w
  5177  20F6  0021               	movlb	1	; select bank1
  5178  20F7  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5179  20F8  0023               	movlb	3	; select bank3
  5180  20F9  0840               	movf	(_batVoltage+2)^(0+384),w
  5181  20FA  0021               	movlb	1	; select bank1
  5182  20FB  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5183  20FC  0023               	movlb	3	; select bank3
  5184  20FD  083F               	movf	(_batVoltage+1)^(0+384),w
  5185  20FE  0021               	movlb	1	; select bank1
  5186  20FF  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5187  2100  0023               	movlb	3	; select bank3
  5188  2101  083E               	movf	_batVoltage^(0+384),w
  5189  2102  0021               	movlb	1	; select bank1
  5190  2103  00D2               	movwf	(?_snprintf^(0+128)+6)
  5191  2104  0023               	movlb	3	; select bank3
  5192  2105  0821               	movf	(_cellVoltages+1)^(0+384),w
  5193  2106  0021               	movlb	1	; select bank1
  5194  2107  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5195  2108  0023               	movlb	3	; select bank3
  5196  2109  0820               	movf	_cellVoltages^(0+384),w
  5197  210A  0021               	movlb	1	; select bank1
  5198  210B  00D6               	movwf	(?_snprintf^(0+128)+10)
  5199  210C  0023               	movlb	3	; select bank3
  5200  210D  0823               	movf	((_cellVoltages+1)^(0+384)+2),w
  5201  210E  0021               	movlb	1	; select bank1
  5202  210F  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5203  2110  0023               	movlb	3	; select bank3
  5204  2111  0822               	movf	(_cellVoltages^(0+384)+2),w
  5205  2112  0021               	movlb	1	; select bank1
  5206  2113  00D8               	movwf	(?_snprintf^(0+128)+12)
  5207  2114  0023               	movlb	3	; select bank3
  5208  2115  0825               	movf	((_cellVoltages+1)^(0+384)+4),w
  5209  2116  0021               	movlb	1	; select bank1
  5210  2117  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5211  2118  0023               	movlb	3	; select bank3
  5212  2119  0824               	movf	(_cellVoltages^(0+384)+4),w
  5213  211A  0021               	movlb	1	; select bank1
  5214  211B  00DA               	movwf	(?_snprintf^(0+128)+14)
  5215  211C  0023               	movlb	3	; select bank3
  5216  211D  0827               	movf	((_cellVoltages+1)^(0+384)+6),w
  5217  211E  0021               	movlb	1	; select bank1
  5218  211F  00DD               	movwf	((?_snprintf+1)^(0+128)+16)
  5219  2120  0023               	movlb	3	; select bank3
  5220  2121  0826               	movf	(_cellVoltages^(0+384)+6),w
  5221  2122  0021               	movlb	1	; select bank1
  5222  2123  00DC               	movwf	(?_snprintf^(0+128)+16)
  5223  2124  0023               	movlb	3	; select bank3
  5224  2125  0829               	movf	((_cellVoltages+1)^(0+384)+8),w
  5225  2126  0021               	movlb	1	; select bank1
  5226  2127  00DF               	movwf	((?_snprintf+1)^(0+128)+18)
  5227  2128  0023               	movlb	3	; select bank3
  5228  2129  0828               	movf	(_cellVoltages^(0+384)+8),w
  5229  212A  0021               	movlb	1	; select bank1
  5230  212B  00DE               	movwf	(?_snprintf^(0+128)+18)
  5231  212C  0023               	movlb	3	; select bank3
  5232  212D  083D               	movf	(_batCurrent+3)^(0+384),w
  5233  212E  0021               	movlb	1	; select bank1
  5234  212F  00E3               	movwf	((?_snprintf+3)^(0+128)+20)
  5235  2130  0023               	movlb	3	; select bank3
  5236  2131  083C               	movf	(_batCurrent+2)^(0+384),w
  5237  2132  0021               	movlb	1	; select bank1
  5238  2133  00E2               	movwf	((?_snprintf+2)^(0+128)+20)
  5239  2134  0023               	movlb	3	; select bank3
  5240  2135  083B               	movf	(_batCurrent+1)^(0+384),w
  5241  2136  0021               	movlb	1	; select bank1
  5242  2137  00E1               	movwf	((?_snprintf+1)^(0+128)+20)
  5243  2138  0023               	movlb	3	; select bank3
  5244  2139  083A               	movf	_batCurrent^(0+384),w
  5245  213A  0021               	movlb	1	; select bank1
  5246  213B  00E0               	movwf	(?_snprintf^(0+128)+20)
  5247  213C  0023               	movlb	3	; select bank3
  5248  213D  0839               	movf	(_temperatureThermistor+3)^(0+384),w
  5249  213E  0021               	movlb	1	; select bank1
  5250  213F  00E7               	movwf	((?_snprintf+3)^(0+128)+24)
  5251  2140  0023               	movlb	3	; select bank3
  5252  2141  0838               	movf	(_temperatureThermistor+2)^(0+384),w
  5253  2142  0021               	movlb	1	; select bank1
  5254  2143  00E6               	movwf	((?_snprintf+2)^(0+128)+24)
  5255  2144  0023               	movlb	3	; select bank3
  5256  2145  0837               	movf	(_temperatureThermistor+1)^(0+384),w
  5257  2146  0021               	movlb	1	; select bank1
  5258  2147  00E5               	movwf	((?_snprintf+1)^(0+128)+24)
  5259  2148  0023               	movlb	3	; select bank3
  5260  2149  0836               	movf	_temperatureThermistor^(0+384),w
  5261  214A  0021               	movlb	1	; select bank1
  5262  214B  00E4               	movwf	(?_snprintf^(0+128)+24)
  5263  214C  3018               	movlw	24
  5264  214D  00F5               	movwf	readRegister@slaveAddress
  5265  214E  3000               	movlw	0
  5266  214F  00F6               	movwf	readRegister@slaveAddress+1
  5267  2150  3005               	movlw	5
  5268  2151  00F7               	movwf	readRegister@regAddress
  5269  2152  3000               	movlw	0
  5270  2153  00F8               	movwf	readRegister@regAddress+1
  5271  2154  31B7  27CA  31A0   	fcall	_readRegister
  5272  2157  0876               	movf	?_readRegister+1,w
  5273  2158  0021               	movlb	1	; select bank1
  5274  2159  00E9               	movwf	((?_snprintf+1)^(0+128)+28)
  5275  215A  0875               	movf	?_readRegister,w
  5276  215B  00E8               	movwf	(?_snprintf^(0+128)+28)
  5277  215C  31B6  2623  31A0   	fcall	_snprintf
  5278                           
  5279                           ;BQ76920.c: 309:     EUSART_Write_Text(messageBuffer);
  5280  215F  3071               	movlw	113
  5281  2160  00F2               	movwf	EUSART_Write_Text@text
  5282  2161  3027               	movlw	39
  5283  2162  00F3               	movwf	EUSART_Write_Text@text+1
  5284  2163  31B5  25EE  31A0   	fcall	_EUSART_Write_Text
  5285                           
  5286                           ;BQ76920.c: 310:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5287  2166  3071               	movlw	113
  5288  2167  0021               	movlb	1	; select bank1
  5289  2168  00CC               	movwf	snprintf@s^(0+128)
  5290  2169  3027               	movlw	39
  5291  216A  00CD               	movwf	(snprintf@s^(0+128)+1)
  5292  216B  307F               	movlw	127
  5293  216C  00CE               	movwf	snprintf@n^(0+128)
  5294  216D  3000               	movlw	0
  5295  216E  00CF               	movwf	(snprintf@n^(0+128)+1)
  5296  216F  3084               	movlw	low (STR_3| (0+32768))
  5297  2170  00D0               	movwf	snprintf@fmt^(0+128)
  5298  2171  30B8               	movlw	high (STR_3| (0+32768))
  5299  2172  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5300  2173  3018               	movlw	24
  5301  2174  00F5               	movwf	readRegister@slaveAddress
  5302  2175  3000               	movlw	0
  5303  2176  00F6               	movwf	readRegister@slaveAddress+1
  5304  2177  3005               	movlw	5
  5305  2178  00F7               	movwf	readRegister@regAddress
  5306  2179  3000               	movlw	0
  5307  217A  00F8               	movwf	readRegister@regAddress+1
  5308  217B  31B7  27CA  31A0   	fcall	_readRegister
  5309  217E  0876               	movf	?_readRegister+1,w
  5310  217F  0021               	movlb	1	; select bank1
  5311  2180  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5312  2181  0875               	movf	?_readRegister,w
  5313  2182  00D2               	movwf	(?_snprintf^(0+128)+6)
  5314  2183  31B6  2623  31A0   	fcall	_snprintf
  5315                           
  5316                           ;BQ76920.c: 311:     EUSART_Write_Text(messageBuffer);
  5317  2186  3071               	movlw	113
  5318  2187  00F2               	movwf	EUSART_Write_Text@text
  5319  2188  3027               	movlw	39
  5320  2189  00F3               	movwf	EUSART_Write_Text@text+1
  5321  218A  31B5  25EE  31A0   	fcall	_EUSART_Write_Text
  5322                           
  5323                           ;BQ76920.c: 312:     snprintf(messageBuffer, 127, "Temp: %d e-2\n\r", temperatureThermis
      +                          tor);
  5324  218D  3071               	movlw	113
  5325  218E  0021               	movlb	1	; select bank1
  5326  218F  00CC               	movwf	snprintf@s^(0+128)
  5327  2190  3027               	movlw	39
  5328  2191  00CD               	movwf	(snprintf@s^(0+128)+1)
  5329  2192  307F               	movlw	127
  5330  2193  00CE               	movwf	snprintf@n^(0+128)
  5331  2194  3000               	movlw	0
  5332  2195  00CF               	movwf	(snprintf@n^(0+128)+1)
  5333  2196  3082               	movlw	low (STR_4| (0+32768))
  5334  2197  00D0               	movwf	snprintf@fmt^(0+128)
  5335  2198  30B9               	movlw	high (STR_4| (0+32768))
  5336  2199  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5337  219A  0023               	movlb	3	; select bank3
  5338  219B  0839               	movf	(_temperatureThermistor+3)^(0+384),w
  5339  219C  0021               	movlb	1	; select bank1
  5340  219D  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5341  219E  0023               	movlb	3	; select bank3
  5342  219F  0838               	movf	(_temperatureThermistor+2)^(0+384),w
  5343  21A0  0021               	movlb	1	; select bank1
  5344  21A1  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5345  21A2  0023               	movlb	3	; select bank3
  5346  21A3  0837               	movf	(_temperatureThermistor+1)^(0+384),w
  5347  21A4  0021               	movlb	1	; select bank1
  5348  21A5  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5349  21A6  0023               	movlb	3	; select bank3
  5350  21A7  0836               	movf	_temperatureThermistor^(0+384),w
  5351  21A8  0021               	movlb	1	; select bank1
  5352  21A9  00D2               	movwf	(?_snprintf^(0+128)+6)
  5353  21AA  31B6  2623  31A0   	fcall	_snprintf
  5354                           
  5355                           ;BQ76920.c: 313:     EUSART_Write_Text(messageBuffer);
  5356  21AD  3071               	movlw	113
  5357  21AE  00F2               	movwf	EUSART_Write_Text@text
  5358  21AF  3027               	movlw	39
  5359  21B0  00F3               	movwf	EUSART_Write_Text@text+1
  5360  21B1  31B5  25EE         	fcall	_EUSART_Write_Text
  5361  21B3  0008               	return
  5362  21B4                     __end_of_printcellParameters:	
  5363                           
  5364                           	psect	text4
  5365  3623                     __ptext4:	
  5366 ;; *************** function _snprintf *****************
  5367 ;; Defined at:
  5368 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5371 ;;		 -> messageBuffer(127), 
  5372 ;;  n               2   46[BANK1 ] unsigned int 
  5373 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5374 ;;		 -> STR_18(18), STR_17(18), STR_16(19), STR_15(20), 
  5375 ;;		 -> STR_14(20), STR_13(21), STR_12(21), STR_11(21), 
  5376 ;;		 -> STR_10(22), STR_9(22), STR_8(21), STR_7(21), 
  5377 ;;		 -> STR_4(15), STR_3(22), STR_2(71), STR_1(40), 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  ret             2    0        int 
  5380 ;;  ap              1   79[BANK0 ] PTR void [1]
  5381 ;;		 -> ?_snprintf(2), 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  2   44[BANK1 ] int 
  5384 ;; Registers used:
  5385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5391 ;;      Params:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5392 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5393 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5394 ;;      Totals:         0       4      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5395 ;;Total ram usage:       34 bytes
  5396 ;; Hardware stack levels used:    1
  5397 ;; Hardware stack levels required when called:    9
  5398 ;; This function calls:
  5399 ;;		_vsnprintf
  5400 ;; This function is called by:
  5401 ;;		_statemachine
  5402 ;;		_printcellParameters
  5403 ;;		_printotAFERegisters
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           
  5408                           ;psect for function _snprintf
  5409  3623                     _snprintf:	
  5410                           
  5411                           ;incstack = 0
  5412                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5413  3623  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5414  3624  0020               	movlb	0	; select bank0
  5415  3625  00EC               	movwf	??_snprintf
  5416  3626  086C               	movf	??_snprintf,w
  5417  3627  00EF               	movwf	snprintf@ap
  5418  3628  0021               	movlb	1	; select bank1
  5419  3629  084D               	movf	(snprintf@s+1)^(0+128),w
  5420  362A  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5421  362B  084C               	movf	snprintf@s^(0+128),w
  5422  362C  00BB               	movwf	vsnprintf@s^(0+128)
  5423  362D  084F               	movf	(snprintf@n+1)^(0+128),w
  5424  362E  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5425  362F  084E               	movf	snprintf@n^(0+128),w
  5426  3630  00BD               	movwf	vsnprintf@n^(0+128)
  5427  3631  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5428  3632  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5429  3633  0850               	movf	snprintf@fmt^(0+128),w
  5430  3634  00BF               	movwf	vsnprintf@fmt^(0+128)
  5431  3635  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5432  3636  0020               	movlb	0	; select bank0
  5433  3637  00EC               	movwf	??_snprintf
  5434  3638  086C               	movf	??_snprintf,w
  5435  3639  0021               	movlb	1	; select bank1
  5436  363A  00C1               	movwf	vsnprintf@ap^(0+128)
  5437  363B  31AC  246D         	fcall	_vsnprintf
  5438  363D  0008               	return
  5439  363E                     __end_of_snprintf:	
  5440                           
  5441                           	psect	text5
  5442  2C6D                     __ptext5:	
  5443 ;; *************** function _vsnprintf *****************
  5444 ;; Defined at:
  5445 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5446 ;; Parameters:    Size  Location     Type
  5447 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5448 ;;		 -> messageBuffer(127), 
  5449 ;;  n               2   29[BANK1 ] unsigned int 
  5450 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5451 ;;		 -> STR_18(18), STR_17(18), STR_16(19), STR_15(20), 
  5452 ;;		 -> STR_14(20), STR_13(21), STR_12(21), STR_11(21), 
  5453 ;;		 -> STR_10(22), STR_9(22), STR_8(21), STR_7(21), 
  5454 ;;		 -> STR_4(15), STR_3(22), STR_2(71), STR_1(40), 
  5455 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5456 ;;		 -> snprintf@ap(1), 
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5459 ;;  cnt             2   36[BANK1 ] int 
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  2   27[BANK1 ] int 
  5462 ;; Registers used:
  5463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5469 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5470 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5471 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5472 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5473 ;;Total ram usage:       19 bytes
  5474 ;; Hardware stack levels used:    1
  5475 ;; Hardware stack levels required when called:    8
  5476 ;; This function calls:
  5477 ;;		_vfprintf
  5478 ;; This function is called by:
  5479 ;;		_snprintf
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483                           
  5484                           ;psect for function _vsnprintf
  5485  2C6D                     _vsnprintf:	
  5486                           
  5487                           ;incstack = 0
  5488                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5489  2C6D  3080               	movlw	128
  5490  2C6E  0021               	movlb	1	; select bank1
  5491  2C6F  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5492  2C70  3000               	movlw	0
  5493  2C71  1903               	skipnz
  5494  2C72  023D               	subwf	vsnprintf@n^(0+128),w
  5495  2C73  1C03               	skipc
  5496  2C74  2C80               	goto	l7945
  5497  2C75  304B               	movlw	75
  5498  2C76  0023               	movlb	3	; select bank3
  5499  2C77  00C2               	movwf	_errno^(0+384)
  5500  2C78  3000               	movlw	0
  5501  2C79  00C3               	movwf	(_errno^(0+384)+1)
  5502  2C7A  30FF               	movlw	255
  5503  2C7B  0021               	movlb	1	; select bank1
  5504  2C7C  00BB               	movwf	?_vsnprintf^(0+128)
  5505  2C7D  30FF               	movlw	255
  5506  2C7E  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5507  2C7F  0008               	return
  5508  2C80                     l7945:	
  5509  2C80  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5510  2C81  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5511  2C82  083B               	movf	vsnprintf@s^(0+128),w
  5512  2C83  00C6               	movwf	vsnprintf@f^(0+128)
  5513  2C84  3000               	movlw	0
  5514  2C85  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5515  2C86  3002               	movlw	2
  5516  2C87  1903               	skipnz
  5517  2C88  023D               	subwf	vsnprintf@n^(0+128),w
  5518  2C89  1C03               	skipc
  5519  2C8A  2C94               	goto	l7951
  5520  2C8B  083D               	movf	vsnprintf@n^(0+128),w
  5521  2C8C  3EFF               	addlw	255
  5522  2C8D  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5523  2C8E  30FF               	movlw	255
  5524  2C8F  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5525  2C90  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5526  2C91  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5527  2C92  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5528  2C93  2C9C               	goto	l7953
  5529  2C94                     l7951:	
  5530  2C94  3001               	movlw	1
  5531  2C95  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5532  2C96  3000               	movlw	0
  5533  2C97  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5534  2C98  3001               	movlw	1
  5535  2C99  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5536  2C9A  3000               	movlw	0
  5537  2C9B  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5538  2C9C                     l7953:	
  5539  2C9C  30C6               	movlw	low vsnprintf@f
  5540  2C9D  0020               	movlb	0	; select bank0
  5541  2C9E  00E1               	movwf	vfprintf@fp
  5542  2C9F  3000               	movlw	high vsnprintf@f
  5543  2CA0  00E2               	movwf	vfprintf@fp+1
  5544  2CA1  0021               	movlb	1	; select bank1
  5545  2CA2  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  5546  2CA3  0020               	movlb	0	; select bank0
  5547  2CA4  00E4               	movwf	vfprintf@fmt+1
  5548  2CA5  0021               	movlb	1	; select bank1
  5549  2CA6  083F               	movf	vsnprintf@fmt^(0+128),w
  5550  2CA7  0020               	movlb	0	; select bank0
  5551  2CA8  00E3               	movwf	vfprintf@fmt
  5552  2CA9  0021               	movlb	1	; select bank1
  5553  2CAA  0841               	movf	vsnprintf@ap^(0+128),w
  5554  2CAB  0020               	movlb	0	; select bank0
  5555  2CAC  00EA               	movwf	??_vsnprintf
  5556  2CAD  086A               	movf	??_vsnprintf,w
  5557  2CAE  00E5               	movwf	vfprintf@ap
  5558  2CAF  31B7  2700  31AC   	fcall	_vfprintf
  5559  2CB2  0020               	movlb	0	; select bank0
  5560  2CB3  0862               	movf	?_vfprintf+1,w
  5561  2CB4  0021               	movlb	1	; select bank1
  5562  2CB5  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  5563  2CB6  0020               	movlb	0	; select bank0
  5564  2CB7  0861               	movf	?_vfprintf,w
  5565  2CB8  0021               	movlb	1	; select bank1
  5566  2CB9  00C4               	movwf	vsnprintf@cnt^(0+128)
  5567  2CBA  083D               	movf	vsnprintf@n^(0+128),w
  5568  2CBB  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  5569  2CBC  1D03               	btfss	3,2
  5570  2CBD  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  5571  2CBE  2CE5               	goto	l7967
  5572  2CBF  083D               	movf	vsnprintf@n^(0+128),w
  5573  2CC0  3EFF               	addlw	255
  5574  2CC1  0020               	movlb	0	; select bank0
  5575  2CC2  00EA               	movwf	??_vsnprintf
  5576  2CC3  30FF               	movlw	255
  5577  2CC4  0021               	movlb	1	; select bank1
  5578  2CC5  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5579  2CC6  0020               	movlb	0	; select bank0
  5580  2CC7  00EB               	movwf	??_vsnprintf+1
  5581  2CC8  086B               	movf	??_vsnprintf+1,w
  5582  2CC9  0021               	movlb	1	; select bank1
  5583  2CCA  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  5584  2CCB  1D03               	skipz
  5585  2CCC  2CD1               	goto	u11115
  5586  2CCD  0020               	movlb	0	; select bank0
  5587  2CCE  086A               	movf	??_vsnprintf,w
  5588  2CCF  0021               	movlb	1	; select bank1
  5589  2CD0  0244               	subwf	vsnprintf@cnt^(0+128),w
  5590  2CD1                     u11115:	
  5591  2CD1  1C03               	skipc
  5592  2CD2  2CDA               	goto	l7963
  5593  2CD3  083D               	movf	vsnprintf@n^(0+128),w
  5594  2CD4  3EFF               	addlw	255
  5595  2CD5  00C2               	movwf	_vsnprintf$1824^(0+128)
  5596  2CD6  30FF               	movlw	255
  5597  2CD7  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5598  2CD8  00C3               	movwf	(_vsnprintf$1824+1)^(0+128)
  5599  2CD9  2CDE               	goto	l7965
  5600  2CDA                     l7963:	
  5601  2CDA  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5602  2CDB  00C3               	movwf	(_vsnprintf$1824+1)^(0+128)
  5603  2CDC  0844               	movf	vsnprintf@cnt^(0+128),w
  5604  2CDD  00C2               	movwf	_vsnprintf$1824^(0+128)
  5605  2CDE                     l7965:	
  5606  2CDE  0842               	movf	_vsnprintf$1824^(0+128),w
  5607  2CDF  073B               	addwf	vsnprintf@s^(0+128),w
  5608  2CE0  0086               	movwf	6
  5609  2CE1  0843               	movf	(_vsnprintf$1824+1)^(0+128),w
  5610  2CE2  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  5611  2CE3  0087               	movwf	7
  5612  2CE4  0181               	clrf	1
  5613  2CE5                     l7967:	
  5614  2CE5  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5615  2CE6  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  5616  2CE7  0844               	movf	vsnprintf@cnt^(0+128),w
  5617  2CE8  00BB               	movwf	?_vsnprintf^(0+128)
  5618  2CE9  0008               	return
  5619  2CEA                     __end_of_vsnprintf:	
  5620                           
  5621                           	psect	text6
  5622  3700                     __ptext6:	
  5623 ;; *************** function _vfprintf *****************
  5624 ;; Defined at:
  5625 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  5628 ;;		 -> vsnprintf@f(6), 
  5629 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  5630 ;;		 -> STR_18(18), STR_17(18), STR_16(19), STR_15(20), 
  5631 ;;		 -> STR_14(20), STR_13(21), STR_12(21), STR_11(21), 
  5632 ;;		 -> STR_10(22), STR_9(22), STR_8(21), STR_7(21), 
  5633 ;;		 -> STR_4(15), STR_3(22), STR_2(71), STR_1(40), 
  5634 ;;  ap              1   69[BANK0 ] PTR PTR void 
  5635 ;;		 -> snprintf@ap(1), 
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  5638 ;;		 -> STR_18(18), STR_17(18), STR_16(19), STR_15(20), 
  5639 ;;		 -> STR_14(20), STR_13(21), STR_12(21), STR_11(21), 
  5640 ;;		 -> STR_10(22), STR_9(22), STR_8(21), STR_7(21), 
  5641 ;;		 -> STR_4(15), STR_3(22), STR_2(71), STR_1(40), 
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  2   65[BANK0 ] int 
  5644 ;; Registers used:
  5645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5651 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5653 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5654 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5655 ;;Total ram usage:        9 bytes
  5656 ;; Hardware stack levels used:    1
  5657 ;; Hardware stack levels required when called:    7
  5658 ;; This function calls:
  5659 ;;		_vfpfcnvrt
  5660 ;; This function is called by:
  5661 ;;		_vsnprintf
  5662 ;; This function uses a non-reentrant model
  5663 ;;
  5664                           
  5665                           
  5666                           ;psect for function _vfprintf
  5667  3700                     _vfprintf:	
  5668                           
  5669                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5673  3700  0020               	movlb	0	; select bank0
  5674  3701  0864               	movf	vfprintf@fmt+1,w
  5675  3702  00E9               	movwf	vfprintf@cfmt+1
  5676  3703  0863               	movf	vfprintf@fmt,w
  5677  3704  00E8               	movwf	vfprintf@cfmt
  5678                           
  5679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5680  3705  0023               	movlb	3	; select bank3
  5681  3706  01C4               	clrf	_nout^(0+384)
  5682  3707  01C5               	clrf	(_nout+1)^(0+384)
  5683  3708                     l7375:	
  5684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5685                           
  5686                           
  5687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5688  3708  0020               	movlb	0	; select bank0
  5689  3709  0868               	movf	vfprintf@cfmt,w
  5690  370A  0084               	movwf	4
  5691  370B  0869               	movf	vfprintf@cfmt+1,w
  5692  370C  0085               	movwf	5
  5693  370D  0012               	moviw fsr0++
  5694  370E  1903               	btfsc	3,2
  5695  370F  2F28               	goto	l7377
  5696                           
  5697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5698  3710  0862               	movf	vfprintf@fp+1,w
  5699  3711  00D8               	movwf	vfpfcnvrt@fp+1
  5700  3712  0861               	movf	vfprintf@fp,w
  5701  3713  00D7               	movwf	vfpfcnvrt@fp
  5702  3714  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5703  3715  00E6               	movwf	??_vfprintf
  5704  3716  0866               	movf	??_vfprintf,w
  5705  3717  00D9               	movwf	vfpfcnvrt@fmt
  5706  3718  0865               	movf	vfprintf@ap,w
  5707  3719  00E7               	movwf	??_vfprintf+1
  5708  371A  0867               	movf	??_vfprintf+1,w
  5709  371B  00DA               	movwf	vfpfcnvrt@ap
  5710  371C  319E  265C  31B7   	fcall	_vfpfcnvrt
  5711  371F  0020               	movlb	0	; select bank0
  5712  3720  0857               	movf	?_vfpfcnvrt,w
  5713  3721  0023               	movlb	3	; select bank3
  5714  3722  07C4               	addwf	_nout^(0+384),f
  5715  3723  0020               	movlb	0	; select bank0
  5716  3724  0858               	movf	?_vfpfcnvrt+1,w
  5717  3725  0023               	movlb	3	; select bank3
  5718  3726  3DC5               	addwfc	(_nout+1)^(0+384),f
  5719  3727  2F08               	goto	l7375
  5720  3728                     l7377:	
  5721                           
  5722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5723  3728  0023               	movlb	3	; select bank3
  5724  3729  0845               	movf	(_nout+1)^(0+384),w
  5725  372A  0020               	movlb	0	; select bank0
  5726  372B  00E2               	movwf	?_vfprintf+1
  5727  372C  0023               	movlb	3	; select bank3
  5728  372D  0844               	movf	_nout^(0+384),w
  5729  372E  0020               	movlb	0	; select bank0
  5730  372F  00E1               	movwf	?_vfprintf
  5731  3730  0008               	return
  5732  3731                     __end_of_vfprintf:	
  5733                           
  5734                           	psect	text7
  5735  1E5C                     __ptext7:	
  5736 ;; *************** function _vfpfcnvrt *****************
  5737 ;; Defined at:
  5738 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  5741 ;;		 -> vsnprintf@f(6), 
  5742 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  5743 ;;		 -> vfprintf@cfmt(2), 
  5744 ;;  ap              1   58[BANK0 ] PTR PTR void 
  5745 ;;		 -> snprintf@ap(1), 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  llu             8   19[BANK1 ] unsigned long long 
  5748 ;;  ll              8    8[BANK1 ] long long 
  5749 ;;  f               4    0        long long 
  5750 ;;  ct              3    0        unsigned char [3]
  5751 ;;  vp              2   16[BANK1 ] PTR void 
  5752 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  5753 ;;  done            2    2[BANK1 ] int 
  5754 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  5755 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  5756 ;;  i               2    0        int 
  5757 ;;  c               1   18[BANK1 ] unsigned char 
  5758 ;; Return value:  Size  Location     Type
  5759 ;;                  2   55[BANK0 ] int 
  5760 ;; Registers used:
  5761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5762 ;; Tracked objects:
  5763 ;;		On entry : 0/0
  5764 ;;		On exit  : 0/0
  5765 ;;		Unchanged: 0/0
  5766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5767 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5768 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5769 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5770 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5771 ;;Total ram usage:       37 bytes
  5772 ;; Hardware stack levels used:    1
  5773 ;; Hardware stack levels required when called:    6
  5774 ;; This function calls:
  5775 ;;		_atoi
  5776 ;;		_ctoa
  5777 ;;		_dtoa
  5778 ;;		_fputc
  5779 ;;		_isdigit
  5780 ;;		_otoa
  5781 ;;		_stoa
  5782 ;;		_strncmp
  5783 ;;		_utoa
  5784 ;;		_xtoa
  5785 ;; This function is called by:
  5786 ;;		_vfprintf
  5787 ;; This function uses a non-reentrant model
  5788 ;;
  5789                           
  5790                           
  5791                           ;psect for function _vfpfcnvrt
  5792  1E5C                     _vfpfcnvrt:	
  5793                           
  5794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5795                           
  5796                           ;incstack = 0
  5797                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5798  1E5C  0020               	movlb	0	; select bank0
  5799  1E5D  0859               	movf	vfpfcnvrt@fmt,w
  5800  1E5E  0086               	movwf	6
  5801  1E5F  0187               	clrf	7
  5802  1E60  3F40               	moviw [0]fsr1
  5803  1E61  00DB               	movwf	??_vfpfcnvrt
  5804  1E62  3F41               	moviw [1]fsr1
  5805  1E63  00DC               	movwf	??_vfpfcnvrt+1
  5806  1E64  085B               	movf	??_vfpfcnvrt,w
  5807  1E65  0084               	movwf	4
  5808  1E66  085C               	movf	??_vfpfcnvrt+1,w
  5809  1E67  0085               	movwf	5
  5810  1E68  0012               	moviw fsr0++
  5811  1E69  3A25               	xorlw	37
  5812  1E6A  1D03               	btfss	3,2
  5813  1E6B  2FFE               	goto	L7
  5814                           
  5815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5816  1E6C  0859               	movf	vfpfcnvrt@fmt,w
  5817  1E6D  0086               	movwf	6
  5818  1E6E  0187               	clrf	7
  5819  1E6F  3001               	movlw	1
  5820  1E70  0781               	addwf	1,f
  5821  1E71  3141               	addfsr 1,1
  5822  1E72  1803               	skipnc
  5823  1E73  0A81               	incf	1,f
  5824                           
  5825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5826  1E74  0022               	movlb	2	; select bank2
  5827  1E75  01E5               	clrf	_width^(0+256)
  5828  1E76  01E6               	clrf	(_width+1)^(0+256)
  5829  1E77  01E9               	clrf	_flags^(0+256)
  5830  1E78  01EA               	clrf	(_flags+1)^(0+256)
  5831                           
  5832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5833  1E79  30FF               	movlw	255
  5834  1E7A  00E7               	movwf	_prec^(0+256)
  5835  1E7B  30FF               	movlw	255
  5836  1E7C  00E8               	movwf	(_prec^(0+256)+1)
  5837                           
  5838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5839  1E7D  0021               	movlb	1	; select bank1
  5840  1E7E  01A2               	clrf	vfpfcnvrt@done^(0+128)
  5841  1E7F  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  5842                           
  5843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5844  1E80  2E9E               	goto	l6803
  5845  1E81                     l767:	
  5846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  5847                           
  5848                           
  5849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5850  1E81  0022               	movlb	2	; select bank2
  5851  1E82  1469               	bsf	_flags^(0+256),0
  5852  1E83                     l6787:	
  5853                           
  5854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5855  1E83  0020               	movlb	0	; select bank0
  5856  1E84  0859               	movf	vfpfcnvrt@fmt,w
  5857  1E85  0086               	movwf	6
  5858  1E86  0187               	clrf	7
  5859  1E87  3001               	movlw	1
  5860  1E88  0781               	addwf	1,f
  5861  1E89  3141               	addfsr 1,1
  5862  1E8A  1803               	skipnc
  5863  1E8B  0A81               	incf	1,f
  5864                           
  5865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5866  1E8C  2E9E               	goto	l6803
  5867  1E8D                     l769:	
  5868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  5869                           
  5870                           
  5871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5872  1E8D  0022               	movlb	2	; select bank2
  5873  1E8E  14E9               	bsf	_flags^(0+256),1
  5874  1E8F  2E83               	goto	l6787
  5875  1E90                     l770:	
  5876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  5877                           
  5878                           
  5879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5880  1E90  0022               	movlb	2	; select bank2
  5881  1E91  1569               	bsf	_flags^(0+256),2
  5882  1E92  2E83               	goto	l6787
  5883  1E93                     l771:	
  5884                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  5885                           
  5886                           
  5887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5888  1E93  0022               	movlb	2	; select bank2
  5889  1E94  15E9               	bsf	_flags^(0+256),3
  5890  1E95  2E83               	goto	l6787
  5891  1E96                     l772:	
  5892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  5893                           
  5894                           
  5895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  5896  1E96  0022               	movlb	2	; select bank2
  5897  1E97  1669               	bsf	_flags^(0+256),4
  5898  1E98  2E83               	goto	l6787
  5899  1E99                     l6797:	
  5900                           
  5901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  5902  1E99  3001               	movlw	1
  5903  1E9A  0021               	movlb	1	; select bank1
  5904  1E9B  00A2               	movwf	vfpfcnvrt@done^(0+128)
  5905  1E9C  3000               	movlw	0
  5906  1E9D  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  5907  1E9E                     l6803:	
  5908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  5909                           
  5910                           
  5911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5912  1E9E  0021               	movlb	1	; select bank1
  5913  1E9F  0822               	movf	vfpfcnvrt@done^(0+128),w
  5914  1EA0  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  5915  1EA1  1D03               	btfss	3,2
  5916  1EA2  2EC9               	goto	l774
  5917  1EA3  0020               	movlb	0	; select bank0
  5918  1EA4  0859               	movf	vfpfcnvrt@fmt,w
  5919  1EA5  0086               	movwf	6
  5920  1EA6  0187               	clrf	7
  5921  1EA7  3F40               	moviw [0]fsr1
  5922  1EA8  00DB               	movwf	??_vfpfcnvrt
  5923  1EA9  3F41               	moviw [1]fsr1
  5924  1EAA  00DC               	movwf	??_vfpfcnvrt+1
  5925  1EAB  085B               	movf	??_vfpfcnvrt,w
  5926  1EAC  0084               	movwf	4
  5927  1EAD  085C               	movf	??_vfpfcnvrt+1,w
  5928  1EAE  0085               	movwf	5
  5929  1EAF  0800               	movf	0,w	;code access
  5930  1EB0  00DD               	movwf	??_vfpfcnvrt+2
  5931  1EB1  01DE               	clrf	??_vfpfcnvrt+3
  5932                           
  5933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5934                           ; Switch size 1, requested type "simple"
  5935                           ; Number of cases is 1, Range of values is 0 to 0
  5936                           ; switch strategies available:
  5937                           ; Name         Instructions Cycles
  5938                           ; simple_byte            4     3 (average)
  5939                           ; direct_byte            8     6 (fixed)
  5940                           ; jumptable            260     6 (fixed)
  5941                           ;	Chosen strategy is simple_byte
  5942  1EB2  085E               	movf	??_vfpfcnvrt+3,w
  5943  1EB3  3A00               	xorlw	0	; case 0
  5944  1EB4  1903               	skipnz
  5945  1EB5  2EB7               	goto	l8551
  5946  1EB6  2E99               	goto	l6797
  5947  1EB7                     l8551:	
  5948                           
  5949                           ; Switch size 1, requested type "simple"
  5950                           ; Number of cases is 5, Range of values is 32 to 48
  5951                           ; switch strategies available:
  5952                           ; Name         Instructions Cycles
  5953                           ; simple_byte           16     9 (average)
  5954                           ; direct_byte           43     9 (fixed)
  5955                           ; jumptable            263     9 (fixed)
  5956                           ;	Chosen strategy is simple_byte
  5957  1EB7  085D               	movf	??_vfpfcnvrt+2,w
  5958  1EB8  3A20               	xorlw	32	; case 32
  5959  1EB9  1903               	skipnz
  5960  1EBA  2E93               	goto	l771
  5961  1EBB  3A03               	xorlw	3	; case 35
  5962  1EBC  1903               	skipnz
  5963  1EBD  2E96               	goto	l772
  5964  1EBE  3A08               	xorlw	8	; case 43
  5965  1EBF  1903               	skipnz
  5966  1EC0  2E90               	goto	l770
  5967  1EC1  3A06               	xorlw	6	; case 45
  5968  1EC2  1903               	skipnz
  5969  1EC3  2E81               	goto	l767
  5970  1EC4  3A1D               	xorlw	29	; case 48
  5971  1EC5  1903               	skipnz
  5972  1EC6  2E8D               	goto	l769
  5973  1EC7  2E99               	goto	l6797
  5974  1EC8  2E9E               	goto	l6803
  5975  1EC9                     l774:	
  5976                           
  5977                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5978  1EC9  0022               	movlb	2	; select bank2
  5979  1ECA  1C69               	btfss	_flags^(0+256),0
  5980  1ECB  2ED0               	goto	l6807
  5981                           
  5982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5983  1ECC  30FD               	movlw	253
  5984  1ECD  05E9               	andwf	_flags^(0+256),f
  5985  1ECE  30FF               	movlw	255
  5986  1ECF  05EA               	andwf	(_flags+1)^(0+256),f
  5987  1ED0                     l6807:	
  5988                           
  5989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5990  1ED0  0020               	movlb	0	; select bank0
  5991  1ED1  0859               	movf	vfpfcnvrt@fmt,w
  5992  1ED2  0086               	movwf	6
  5993  1ED3  0187               	clrf	7
  5994  1ED4  3F40               	moviw [0]fsr1
  5995  1ED5  00DB               	movwf	??_vfpfcnvrt
  5996  1ED6  3F41               	moviw [1]fsr1
  5997  1ED7  00DC               	movwf	??_vfpfcnvrt+1
  5998  1ED8  085B               	movf	??_vfpfcnvrt,w
  5999  1ED9  0084               	movwf	4
  6000  1EDA  085C               	movf	??_vfpfcnvrt+1,w
  6001  1EDB  0085               	movwf	5
  6002  1EDC  0012               	moviw fsr0++
  6003  1EDD  3A2A               	xorlw	42
  6004  1EDE  1D03               	btfss	3,2
  6005  1EDF  2EFE               	goto	l6819
  6006                           
  6007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6008  1EE0  0859               	movf	vfpfcnvrt@fmt,w
  6009  1EE1  0086               	movwf	6
  6010  1EE2  0187               	clrf	7
  6011  1EE3  3001               	movlw	1
  6012  1EE4  0781               	addwf	1,f
  6013  1EE5  3141               	addfsr 1,1
  6014  1EE6  1803               	skipnc
  6015  1EE7  0A81               	incf	1,f
  6016                           
  6017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6018  1EE8  085A               	movf	vfpfcnvrt@ap,w
  6019  1EE9  0086               	movwf	6
  6020  1EEA  0187               	clrf	7
  6021  1EEB  0801               	movf	1,w
  6022  1EEC  0084               	movwf	4
  6023  1EED  0185               	clrf	5
  6024  1EEE  3002               	movlw	2
  6025  1EEF  0781               	addwf	1,f
  6026  1EF0  3F00               	moviw [0]fsr0
  6027  1EF1  0022               	movlb	2	; select bank2
  6028  1EF2  00E5               	movwf	_width^(0+256)
  6029  1EF3  3F01               	moviw [1]fsr0
  6030  1EF4  00E6               	movwf	(_width+1)^(0+256)
  6031                           
  6032                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6033  1EF5  1FE6               	btfss	(_width+1)^(0+256),7
  6034  1EF6  2F41               	goto	l6829
  6035                           
  6036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6037  1EF7  1469               	bsf	_flags^(0+256),0
  6038                           
  6039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6040  1EF8  09E5               	comf	_width^(0+256),f
  6041  1EF9  09E6               	comf	(_width+1)^(0+256),f
  6042  1EFA  0AE5               	incf	_width^(0+256),f
  6043  1EFB  1903               	skipnz
  6044  1EFC  0AE6               	incf	(_width+1)^(0+256),f
  6045  1EFD  2F41               	goto	l6829
  6046  1EFE                     l6819:	
  6047                           
  6048                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6049  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  6050  1EFF  0086               	movwf	6
  6051  1F00  0187               	clrf	7
  6052  1F01  3F40               	moviw [0]fsr1
  6053  1F02  00F7               	movwf	atoi@s
  6054  1F03  3F41               	moviw [1]fsr1
  6055  1F04  00F8               	movwf	atoi@s+1
  6056  1F05  31AE  2602  319E   	fcall	_atoi
  6057  1F08  0878               	movf	?_atoi+1,w
  6058  1F09  0022               	movlb	2	; select bank2
  6059  1F0A  00E6               	movwf	(_width+1)^(0+256)
  6060  1F0B  0877               	movf	?_atoi,w
  6061  1F0C  00E5               	movwf	_width^(0+256)
  6062                           
  6063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6064  1F0D  2F17               	goto	l6823
  6065  1F0E                     l6821:	
  6066                           
  6067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6068  1F0E  0020               	movlb	0	; select bank0
  6069  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  6070  1F10  0086               	movwf	6
  6071  1F11  0187               	clrf	7
  6072  1F12  3001               	movlw	1
  6073  1F13  0781               	addwf	1,f
  6074  1F14  3141               	addfsr 1,1
  6075  1F15  1803               	skipnc
  6076  1F16  0A81               	incf	1,f
  6077  1F17                     l6823:	
  6078  1F17  0020               	movlb	0	; select bank0
  6079  1F18  0859               	movf	vfpfcnvrt@fmt,w
  6080  1F19  0086               	movwf	6
  6081  1F1A  0187               	clrf	7
  6082  1F1B  3F40               	moviw [0]fsr1
  6083  1F1C  00DB               	movwf	??_vfpfcnvrt
  6084  1F1D  3F41               	moviw [1]fsr1
  6085  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  6086  1F1F  085B               	movf	??_vfpfcnvrt,w
  6087  1F20  0084               	movwf	4
  6088  1F21  085C               	movf	??_vfpfcnvrt+1,w
  6089  1F22  0085               	movwf	5
  6090  1F23  0800               	movf	0,w	;code access
  6091  1F24  3ED0               	addlw	208
  6092  1F25  00DD               	movwf	??_vfpfcnvrt+2
  6093  1F26  30FF               	movlw	255
  6094  1F27  1803               	skipnc
  6095  1F28  3000               	movlw	0
  6096  1F29  00DE               	movwf	??_vfpfcnvrt+3
  6097  1F2A  3000               	movlw	0
  6098  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  6099  1F2C  300A               	movlw	10
  6100  1F2D  1903               	skipnz
  6101  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  6102  1F2F  1803               	btfsc	3,0
  6103  1F30  2F33               	goto	u9050
  6104  1F31  3001               	movlw	1
  6105  1F32  2F34               	goto	u9060
  6106  1F33                     u9050:	
  6107  1F33  3000               	movlw	0
  6108  1F34                     u9060:	
  6109  1F34  00DF               	movwf	??_vfpfcnvrt+4
  6110  1F35  01E0               	clrf	??_vfpfcnvrt+5
  6111  1F36  085F               	movf	??_vfpfcnvrt+4,w
  6112  1F37  0021               	movlb	1	; select bank1
  6113  1F38  00A4               	movwf	_vfpfcnvrt$1252^(0+128)
  6114  1F39  0020               	movlb	0	; select bank0
  6115  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  6116  1F3B  0021               	movlb	1	; select bank1
  6117  1F3C  00A5               	movwf	(_vfpfcnvrt$1252+1)^(0+128)
  6118  1F3D  0824               	movf	_vfpfcnvrt$1252^(0+128),w
  6119  1F3E  0425               	iorwf	(_vfpfcnvrt$1252+1)^(0+128),w
  6120  1F3F  1D03               	btfss	3,2
  6121  1F40  2F0E               	goto	l6821
  6122  1F41                     l6829:	
  6123                           
  6124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6125  1F41  0020               	movlb	0	; select bank0
  6126  1F42  0859               	movf	vfpfcnvrt@fmt,w
  6127  1F43  0086               	movwf	6
  6128  1F44  0187               	clrf	7
  6129  1F45  3F40               	moviw [0]fsr1
  6130  1F46  00DB               	movwf	??_vfpfcnvrt
  6131  1F47  3F41               	moviw [1]fsr1
  6132  1F48  00DC               	movwf	??_vfpfcnvrt+1
  6133  1F49  085B               	movf	??_vfpfcnvrt,w
  6134  1F4A  0084               	movwf	4
  6135  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  6136  1F4C  0085               	movwf	5
  6137  1F4D  0012               	moviw fsr0++
  6138  1F4E  3A2E               	xorlw	46
  6139  1F4F  1D03               	btfss	3,2
  6140  1F50  2FC5               	goto	l6851
  6141                           
  6142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6143  1F51  0022               	movlb	2	; select bank2
  6144  1F52  01E7               	clrf	_prec^(0+256)
  6145  1F53  01E8               	clrf	(_prec+1)^(0+256)
  6146                           
  6147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6148  1F54  0020               	movlb	0	; select bank0
  6149  1F55  0859               	movf	vfpfcnvrt@fmt,w
  6150  1F56  0086               	movwf	6
  6151  1F57  0187               	clrf	7
  6152  1F58  3001               	movlw	1
  6153  1F59  0781               	addwf	1,f
  6154  1F5A  3141               	addfsr 1,1
  6155  1F5B  1803               	skipnc
  6156  1F5C  0A81               	incf	1,f
  6157                           
  6158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6159  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  6160  1F5E  0086               	movwf	6
  6161  1F5F  0187               	clrf	7
  6162  1F60  3F40               	moviw [0]fsr1
  6163  1F61  00DB               	movwf	??_vfpfcnvrt
  6164  1F62  3F41               	moviw [1]fsr1
  6165  1F63  00DC               	movwf	??_vfpfcnvrt+1
  6166  1F64  085B               	movf	??_vfpfcnvrt,w
  6167  1F65  0084               	movwf	4
  6168  1F66  085C               	movf	??_vfpfcnvrt+1,w
  6169  1F67  0085               	movwf	5
  6170  1F68  0012               	moviw fsr0++
  6171  1F69  3A2A               	xorlw	42
  6172  1F6A  1D03               	btfss	3,2
  6173  1F6B  2F82               	goto	l6841
  6174                           
  6175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6176  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  6177  1F6D  0086               	movwf	6
  6178  1F6E  0187               	clrf	7
  6179  1F6F  3001               	movlw	1
  6180  1F70  0781               	addwf	1,f
  6181  1F71  3141               	addfsr 1,1
  6182  1F72  1803               	skipnc
  6183  1F73  0A81               	incf	1,f
  6184                           
  6185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6186  1F74  085A               	movf	vfpfcnvrt@ap,w
  6187  1F75  0086               	movwf	6
  6188  1F76  0187               	clrf	7
  6189  1F77  0801               	movf	1,w
  6190  1F78  0084               	movwf	4
  6191  1F79  0185               	clrf	5
  6192  1F7A  3002               	movlw	2
  6193  1F7B  0781               	addwf	1,f
  6194  1F7C  3F00               	moviw [0]fsr0
  6195  1F7D  0022               	movlb	2	; select bank2
  6196  1F7E  00E7               	movwf	_prec^(0+256)
  6197  1F7F  3F01               	moviw [1]fsr0
  6198  1F80  00E8               	movwf	(_prec+1)^(0+256)
  6199                           
  6200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6201  1F81  2FC5               	goto	l6851
  6202  1F82                     l6841:	
  6203                           
  6204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6205  1F82  0859               	movf	vfpfcnvrt@fmt,w
  6206  1F83  0086               	movwf	6
  6207  1F84  0187               	clrf	7
  6208  1F85  3F40               	moviw [0]fsr1
  6209  1F86  00F7               	movwf	atoi@s
  6210  1F87  3F41               	moviw [1]fsr1
  6211  1F88  00F8               	movwf	atoi@s+1
  6212  1F89  31AE  2602  319E   	fcall	_atoi
  6213  1F8C  0878               	movf	?_atoi+1,w
  6214  1F8D  0022               	movlb	2	; select bank2
  6215  1F8E  00E8               	movwf	(_prec+1)^(0+256)
  6216  1F8F  0877               	movf	?_atoi,w
  6217  1F90  00E7               	movwf	_prec^(0+256)
  6218                           
  6219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6220  1F91  2F9B               	goto	l6845
  6221  1F92                     l6843:	
  6222                           
  6223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6224  1F92  0020               	movlb	0	; select bank0
  6225  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6226  1F94  0086               	movwf	6
  6227  1F95  0187               	clrf	7
  6228  1F96  3001               	movlw	1
  6229  1F97  0781               	addwf	1,f
  6230  1F98  3141               	addfsr 1,1
  6231  1F99  1803               	skipnc
  6232  1F9A  0A81               	incf	1,f
  6233  1F9B                     l6845:	
  6234  1F9B  0020               	movlb	0	; select bank0
  6235  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6236  1F9D  0086               	movwf	6
  6237  1F9E  0187               	clrf	7
  6238  1F9F  3F40               	moviw [0]fsr1
  6239  1FA0  00DB               	movwf	??_vfpfcnvrt
  6240  1FA1  3F41               	moviw [1]fsr1
  6241  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6242  1FA3  085B               	movf	??_vfpfcnvrt,w
  6243  1FA4  0084               	movwf	4
  6244  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6245  1FA6  0085               	movwf	5
  6246  1FA7  0800               	movf	0,w	;code access
  6247  1FA8  3ED0               	addlw	208
  6248  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6249  1FAA  30FF               	movlw	255
  6250  1FAB  1803               	skipnc
  6251  1FAC  3000               	movlw	0
  6252  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6253  1FAE  3000               	movlw	0
  6254  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6255  1FB0  300A               	movlw	10
  6256  1FB1  1903               	skipnz
  6257  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6258  1FB3  1803               	btfsc	3,0
  6259  1FB4  2FB7               	goto	u9100
  6260  1FB5  3001               	movlw	1
  6261  1FB6  2FB8               	goto	u9110
  6262  1FB7                     u9100:	
  6263  1FB7  3000               	movlw	0
  6264  1FB8                     u9110:	
  6265  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6266  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6267  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6268  1FBB  0021               	movlb	1	; select bank1
  6269  1FBC  00A6               	movwf	_vfpfcnvrt$1253^(0+128)
  6270  1FBD  0020               	movlb	0	; select bank0
  6271  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6272  1FBF  0021               	movlb	1	; select bank1
  6273  1FC0  00A7               	movwf	(_vfpfcnvrt$1253+1)^(0+128)
  6274  1FC1  0826               	movf	_vfpfcnvrt$1253^(0+128),w
  6275  1FC2  0427               	iorwf	(_vfpfcnvrt$1253+1)^(0+128),w
  6276  1FC3  1D03               	btfss	3,2
  6277  1FC4  2F92               	goto	l6843
  6278  1FC5                     l6851:	
  6279                           
  6280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6281  1FC5  0020               	movlb	0	; select bank0
  6282  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6283  1FC7  0086               	movwf	6
  6284  1FC8  0187               	clrf	7
  6285  1FC9  3F40               	moviw [0]fsr1
  6286  1FCA  00DB               	movwf	??_vfpfcnvrt
  6287  1FCB  3F41               	moviw [1]fsr1
  6288  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6289  1FCD  085B               	movf	??_vfpfcnvrt,w
  6290  1FCE  0084               	movwf	4
  6291  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6292  1FD0  0085               	movwf	5
  6293  1FD1  0012               	moviw fsr0++
  6294  1FD2  3A63               	xorlw	99
  6295  1FD3  31A7  1D03         	btfss	3,2
  6296  1FD5  2F06               	goto	l6861
  6297                           
  6298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6299  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6300  1FD7  0086               	movwf	6
  6301  1FD8  0187               	clrf	7
  6302  1FD9  3001               	movlw	1
  6303  1FDA  0781               	addwf	1,f
  6304  1FDB  3141               	addfsr 1,1
  6305  1FDC  1803               	skipnc
  6306  1FDD  0A81               	incf	1,f
  6307                           
  6308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6309  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6310  1FDF  0086               	movwf	6
  6311  1FE0  0187               	clrf	7
  6312  1FE1  0801               	movf	1,w
  6313  1FE2  0084               	movwf	4
  6314  1FE3  0185               	clrf	5
  6315  1FE4  3002               	movlw	2
  6316  1FE5  0781               	addwf	1,f
  6317  1FE6  0800               	movf	0,w
  6318  1FE7  00DB               	movwf	??_vfpfcnvrt
  6319  1FE8  085B               	movf	??_vfpfcnvrt,w
  6320  1FE9  0021               	movlb	1	; select bank1
  6321  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6322                           
  6323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6324  1FEB  0020               	movlb	0	; select bank0
  6325  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6326  1FED  00B1               	movwf	ctoa@fp+1
  6327  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6328  1FEF  00B0               	movwf	ctoa@fp
  6329  1FF0  0021               	movlb	1	; select bank1
  6330  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6331  1FF2  0020               	movlb	0	; select bank0
  6332  1FF3  00DB               	movwf	??_vfpfcnvrt
  6333  1FF4  085B               	movf	??_vfpfcnvrt,w
  6334  1FF5  00B2               	movwf	ctoa@c
  6335  1FF6  31B6  26CF         	fcall	_ctoa
  6336  1FF8  0020               	movlb	0	; select bank0
  6337  1FF9  0831               	movf	?_ctoa+1,w
  6338  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6339  1FFB  0830               	movf	?_ctoa,w
  6340  1FFC  00D7               	movwf	?_vfpfcnvrt
  6341  1FFD  0008               	return
  6342  1FFE                     L7:	
  6343  1FFE                     L6:	
  6344  1FFE  318F  2FDD         	ljmp	l7129
  6345                           
  6346                           	psect	text8
  6347  1B89                     __ptext8:	
  6348 ;; *************** function _xtoa *****************
  6349 ;; Defined at:
  6350 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6353 ;;		 -> vsnprintf@f(6), 
  6354 ;;  d               8   18[BANK0 ] unsigned long long 
  6355 ;;  x               1   26[BANK0 ] unsigned char 
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;  n               8   43[BANK0 ] unsigned long long 
  6358 ;;  c               2   53[BANK0 ] int 
  6359 ;;  i               2   51[BANK0 ] int 
  6360 ;;  w               2   41[BANK0 ] int 
  6361 ;;  p               2   39[BANK0 ] int 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;                  2   16[BANK0 ] int 
  6364 ;; Registers used:
  6365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6371 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6372 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6373 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6374 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6375 ;;Total ram usage:       39 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:    5
  6378 ;; This function calls:
  6379 ;;		_isalpha
  6380 ;;		_isupper
  6381 ;;		_pad
  6382 ;;		_toupper
  6383 ;; This function is called by:
  6384 ;;		_vfpfcnvrt
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           
  6389                           ;psect for function _xtoa
  6390  1B89                     _xtoa:	
  6391                           
  6392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6393                           
  6394                           ;incstack = 0
  6395                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6396  1B89  0022               	movlb	2	; select bank2
  6397  1B8A  1BE8               	btfsc	(_prec+1)^(0+256),7
  6398  1B8B  2B90               	goto	l733
  6399                           
  6400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6401  1B8C  30FD               	movlw	253
  6402  1B8D  05E9               	andwf	_flags^(0+256),f
  6403  1B8E  30FF               	movlw	255
  6404  1B8F  05EA               	andwf	(_flags+1)^(0+256),f
  6405  1B90                     l733:	
  6406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6407                           
  6408                           
  6409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6410  1B90  0868               	movf	(_prec+1)^(0+256),w
  6411  1B91  3A80               	xorlw	128
  6412  1B92  0020               	movlb	0	; select bank0
  6413  1B93  00BB               	movwf	??_xtoa
  6414  1B94  3080               	movlw	128
  6415  1B95  023B               	subwf	??_xtoa,w
  6416  1B96  1D03               	skipz
  6417  1B97  2B9B               	goto	u8725
  6418  1B98  3001               	movlw	1
  6419  1B99  0022               	movlb	2	; select bank2
  6420  1B9A  0267               	subwf	_prec^(0+256),w
  6421  1B9B                     u8725:	
  6422  1B9B  1803               	skipnc
  6423  1B9C  2BA3               	goto	l6651
  6424  1B9D  3001               	movlw	1
  6425  1B9E  0020               	movlb	0	; select bank0
  6426  1B9F  00C7               	movwf	xtoa@p
  6427  1BA0  3000               	movlw	0
  6428  1BA1  00C8               	movwf	xtoa@p+1
  6429  1BA2  2BAB               	goto	l737
  6430  1BA3                     l6651:	
  6431  1BA3  0022               	movlb	2	; select bank2
  6432  1BA4  0868               	movf	(_prec+1)^(0+256),w
  6433  1BA5  0020               	movlb	0	; select bank0
  6434  1BA6  00C8               	movwf	xtoa@p+1
  6435  1BA7  0022               	movlb	2	; select bank2
  6436  1BA8  0867               	movf	_prec^(0+256),w
  6437  1BA9  0020               	movlb	0	; select bank0
  6438  1BAA  00C7               	movwf	xtoa@p
  6439  1BAB                     l737:	
  6440                           
  6441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6442  1BAB  0022               	movlb	2	; select bank2
  6443  1BAC  0866               	movf	(_width+1)^(0+256),w
  6444  1BAD  0020               	movlb	0	; select bank0
  6445  1BAE  00CA               	movwf	xtoa@w+1
  6446  1BAF  0022               	movlb	2	; select bank2
  6447  1BB0  0865               	movf	_width^(0+256),w
  6448  1BB1  0020               	movlb	0	; select bank0
  6449  1BB2  00C9               	movwf	xtoa@w
  6450                           
  6451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6452  1BB3  0022               	movlb	2	; select bank2
  6453  1BB4  1E69               	btfss	_flags^(0+256),4
  6454  1BB5  2BBB               	goto	l6657
  6455                           
  6456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6457  1BB6  30FE               	movlw	254
  6458  1BB7  0020               	movlb	0	; select bank0
  6459  1BB8  07C9               	addwf	xtoa@w,f
  6460  1BB9  30FF               	movlw	255
  6461  1BBA  3DCA               	addwfc	xtoa@w+1,f
  6462  1BBB                     l6657:	
  6463                           
  6464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6465  1BBB  0020               	movlb	0	; select bank0
  6466  1BBC  0832               	movf	xtoa@d,w
  6467  1BBD  00CB               	movwf	xtoa@n
  6468  1BBE  0833               	movf	xtoa@d+1,w
  6469  1BBF  00CC               	movwf	xtoa@n+1
  6470  1BC0  0834               	movf	xtoa@d+2,w
  6471  1BC1  00CD               	movwf	xtoa@n+2
  6472  1BC2  0835               	movf	xtoa@d+3,w
  6473  1BC3  00CE               	movwf	xtoa@n+3
  6474  1BC4  0836               	movf	xtoa@d+4,w
  6475  1BC5  00CF               	movwf	xtoa@n+4
  6476  1BC6  0837               	movf	xtoa@d+5,w
  6477  1BC7  00D0               	movwf	xtoa@n+5
  6478  1BC8  0838               	movf	xtoa@d+6,w
  6479  1BC9  00D1               	movwf	xtoa@n+6
  6480  1BCA  0839               	movf	xtoa@d+7,w
  6481  1BCB  00D2               	movwf	xtoa@n+7
  6482                           
  6483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6484  1BCC  301F               	movlw	31
  6485  1BCD  00D3               	movwf	xtoa@i
  6486  1BCE  3000               	movlw	0
  6487  1BCF  00D4               	movwf	xtoa@i+1
  6488                           
  6489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6490  1BD0  0024               	movlb	4	; select bank4
  6491  1BD1  01BF               	clrf	(_dbuf^(0+512)+31)
  6492                           
  6493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6494  1BD2  2C7D               	goto	l6689
  6495  1BD3                     l6661:	
  6496                           
  6497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6498  1BD3  30FF               	movlw	255
  6499  1BD4  0020               	movlb	0	; select bank0
  6500  1BD5  07D3               	addwf	xtoa@i,f
  6501  1BD6  30FF               	movlw	255
  6502  1BD7  3DD4               	addwfc	xtoa@i+1,f
  6503                           
  6504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6505  1BD8  300F               	movlw	15
  6506  1BD9  054B               	andwf	xtoa@n,w
  6507  1BDA  00D5               	movwf	xtoa@c
  6508  1BDB  3000               	movlw	0
  6509  1BDC  054C               	andwf	xtoa@n+1,w
  6510  1BDD  00D6               	movwf	xtoa@c+1
  6511                           
  6512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6513  1BDE  0856               	movf	xtoa@c+1,w
  6514  1BDF  3A80               	xorlw	128
  6515  1BE0  00BB               	movwf	??_xtoa
  6516  1BE1  3080               	movlw	128
  6517  1BE2  023B               	subwf	??_xtoa,w
  6518  1BE3  1D03               	skipz
  6519  1BE4  2BE7               	goto	u8745
  6520  1BE5  300A               	movlw	10
  6521  1BE6  0255               	subwf	xtoa@c,w
  6522  1BE7                     u8745:	
  6523  1BE7  1C03               	skipc
  6524  1BE8  2BED               	goto	l6665
  6525  1BE9  0020               	movlb	0	; select bank0
  6526  1BEA  0855               	movf	xtoa@c,w
  6527  1BEB  3E57               	addlw	87
  6528  1BEC  2BF0               	goto	L1
  6529  1BED                     l6665:	
  6530  1BED  0020               	movlb	0	; select bank0
  6531  1BEE  0855               	movf	xtoa@c,w
  6532  1BEF  3E30               	addlw	48
  6533  1BF0                     L1:	
  6534  1BF0  00D5               	movwf	xtoa@c
  6535  1BF1  3000               	movlw	0
  6536  1BF2  3D56               	addwfc	xtoa@c+1,w
  6537  1BF3  00D6               	movwf	xtoa@c+1
  6538  1BF4  083A               	movf	xtoa@x,w
  6539  1BF5  3EBF               	addlw	191
  6540  1BF6  00BB               	movwf	??_xtoa
  6541  1BF7  30FF               	movlw	255
  6542  1BF8  1803               	skipnc
  6543  1BF9  3000               	movlw	0
  6544  1BFA  00BC               	movwf	??_xtoa+1
  6545  1BFB  3000               	movlw	0
  6546  1BFC  023C               	subwf	??_xtoa+1,w
  6547  1BFD  301A               	movlw	26
  6548  1BFE  1903               	skipnz
  6549  1BFF  023B               	subwf	??_xtoa,w
  6550  1C00  1803               	btfsc	3,0
  6551  1C01  2C04               	goto	u8750
  6552  1C02  3001               	movlw	1
  6553  1C03  2C05               	goto	u8760
  6554  1C04                     u8750:	
  6555  1C04  3000               	movlw	0
  6556  1C05                     u8760:	
  6557  1C05  00BD               	movwf	??_xtoa+2
  6558  1C06  01BE               	clrf	??_xtoa+3
  6559  1C07  083D               	movf	??_xtoa+2,w
  6560  1C08  00C3               	movwf	_xtoa$1237
  6561  1C09  083E               	movf	??_xtoa+3,w
  6562  1C0A  00C4               	movwf	_xtoa$1237+1
  6563  1C0B  0843               	movf	_xtoa$1237,w
  6564  1C0C  0444               	iorwf	_xtoa$1237+1,w
  6565  1C0D  1903               	btfsc	3,2
  6566  1C0E  2C3B               	goto	l6681
  6567  1C0F  3020               	movlw	32
  6568  1C10  0455               	iorwf	xtoa@c,w
  6569  1C11  00BB               	movwf	??_xtoa
  6570  1C12  3000               	movlw	0
  6571  1C13  0456               	iorwf	xtoa@c+1,w
  6572  1C14  00BC               	movwf	??_xtoa+1
  6573  1C15  083B               	movf	??_xtoa,w
  6574  1C16  3E9F               	addlw	159
  6575  1C17  00BD               	movwf	??_xtoa+2
  6576  1C18  30FF               	movlw	255
  6577  1C19  3D3C               	addwfc	??_xtoa+1,w
  6578  1C1A  00BE               	movwf	??_xtoa+3
  6579  1C1B  3000               	movlw	0
  6580  1C1C  023E               	subwf	??_xtoa+3,w
  6581  1C1D  301A               	movlw	26
  6582  1C1E  1903               	skipnz
  6583  1C1F  023D               	subwf	??_xtoa+2,w
  6584  1C20  1803               	btfsc	3,0
  6585  1C21  2C24               	goto	u8780
  6586  1C22  3001               	movlw	1
  6587  1C23  2C25               	goto	u8790
  6588  1C24                     u8780:	
  6589  1C24  3000               	movlw	0
  6590  1C25                     u8790:	
  6591  1C25  00BF               	movwf	??_xtoa+4
  6592  1C26  01C0               	clrf	??_xtoa+5
  6593  1C27  083F               	movf	??_xtoa+4,w
  6594  1C28  00C5               	movwf	_xtoa$1238
  6595  1C29  0840               	movf	??_xtoa+5,w
  6596  1C2A  00C6               	movwf	_xtoa$1238+1
  6597  1C2B  0845               	movf	_xtoa$1238,w
  6598  1C2C  0446               	iorwf	_xtoa$1238+1,w
  6599  1C2D  1903               	btfsc	3,2
  6600  1C2E  2C3B               	goto	l6681
  6601                           
  6602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6603  1C2F  0856               	movf	xtoa@c+1,w
  6604  1C30  00F8               	movwf	toupper@c+1
  6605  1C31  0855               	movf	xtoa@c,w
  6606  1C32  00F7               	movwf	toupper@c
  6607  1C33  3190  2001  319B   	fcall	_toupper
  6608  1C36  0878               	movf	?_toupper+1,w
  6609  1C37  0020               	movlb	0	; select bank0
  6610  1C38  00D6               	movwf	xtoa@c+1
  6611  1C39  0877               	movf	?_toupper,w
  6612  1C3A  00D5               	movwf	xtoa@c
  6613  1C3B                     l6681:	
  6614                           
  6615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6616  1C3B  0855               	movf	xtoa@c,w
  6617  1C3C  00BB               	movwf	??_xtoa
  6618  1C3D  0853               	movf	xtoa@i,w
  6619  1C3E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6620  1C3F  0086               	movwf	6
  6621  1C40  3002               	movlw	2	; select bank4/5
  6622  1C41  0087               	movwf	7
  6623  1C42  083B               	movf	??_xtoa,w
  6624  1C43  0081               	movwf	1
  6625                           
  6626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6627  1C44  30FF               	movlw	255
  6628  1C45  07C7               	addwf	xtoa@p,f
  6629  1C46  30FF               	movlw	255
  6630  1C47  3DC8               	addwfc	xtoa@p+1,f
  6631                           
  6632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6633  1C48  30FF               	movlw	255
  6634  1C49  07C9               	addwf	xtoa@w,f
  6635  1C4A  30FF               	movlw	255
  6636  1C4B  3DCA               	addwfc	xtoa@w+1,f
  6637                           
  6638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6639  1C4C  304B               	movlw	low xtoa@n
  6640  1C4D  0086               	movwf	6
  6641  1C4E  3000               	movlw	high xtoa@n
  6642  1C4F  0087               	movwf	7
  6643  1C50  3F40               	moviw [0]fsr1
  6644  1C51  00BB               	movwf	??_xtoa
  6645  1C52  3F41               	moviw [1]fsr1
  6646  1C53  00BC               	movwf	??_xtoa+1
  6647  1C54  3F42               	moviw [2]fsr1
  6648  1C55  00BD               	movwf	??_xtoa+2
  6649  1C56  3F43               	moviw [3]fsr1
  6650  1C57  00BE               	movwf	??_xtoa+3
  6651  1C58  3F44               	moviw [4]fsr1
  6652  1C59  00BF               	movwf	??_xtoa+4
  6653  1C5A  3F45               	moviw [5]fsr1
  6654  1C5B  00C0               	movwf	??_xtoa+5
  6655  1C5C  3F46               	moviw [6]fsr1
  6656  1C5D  00C1               	movwf	??_xtoa+6
  6657  1C5E  3F47               	moviw [7]fsr1
  6658  1C5F  00C2               	movwf	??_xtoa+7
  6659  1C60  3004               	movlw	4
  6660  1C61                     u8815:	
  6661  1C61  0020               	movlb	0	; select bank0
  6662  1C62  36C2               	lsrf	??_xtoa+7,f
  6663  1C63  0CC1               	rrf	??_xtoa+6,f
  6664  1C64  0CC0               	rrf	??_xtoa+5,f
  6665  1C65  0CBF               	rrf	??_xtoa+4,f
  6666  1C66  0CBE               	rrf	??_xtoa+3,f
  6667  1C67  0CBD               	rrf	??_xtoa+2,f
  6668  1C68  0CBC               	rrf	??_xtoa+1,f
  6669  1C69  0CBB               	rrf	??_xtoa,f
  6670  1C6A  0B89               	decfsz	9,f
  6671  1C6B  2C61               	goto	u8815
  6672  1C6C  0020               	movlb	0	; select bank0
  6673  1C6D  0842               	movf	??_xtoa+7,w
  6674  1C6E  00D2               	movwf	xtoa@n+7
  6675  1C6F  0841               	movf	??_xtoa+6,w
  6676  1C70  00D1               	movwf	xtoa@n+6
  6677  1C71  0840               	movf	??_xtoa+5,w
  6678  1C72  00D0               	movwf	xtoa@n+5
  6679  1C73  083F               	movf	??_xtoa+4,w
  6680  1C74  00CF               	movwf	xtoa@n+4
  6681  1C75  083E               	movf	??_xtoa+3,w
  6682  1C76  00CE               	movwf	xtoa@n+3
  6683  1C77  083D               	movf	??_xtoa+2,w
  6684  1C78  00CD               	movwf	xtoa@n+2
  6685  1C79  083C               	movf	??_xtoa+1,w
  6686  1C7A  00CC               	movwf	xtoa@n+1
  6687  1C7B  083B               	movf	??_xtoa,w
  6688  1C7C  00CB               	movwf	xtoa@n
  6689  1C7D                     l6689:	
  6690                           
  6691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6692  1C7D  0020               	movlb	0	; select bank0
  6693  1C7E  0854               	movf	xtoa@i+1,w
  6694  1C7F  3A80               	xorlw	128
  6695  1C80  00BB               	movwf	??_xtoa
  6696  1C81  3080               	movlw	128
  6697  1C82  023B               	subwf	??_xtoa,w
  6698  1C83  1D03               	skipz
  6699  1C84  2C87               	goto	u8825
  6700  1C85  3002               	movlw	2
  6701  1C86  0253               	subwf	xtoa@i,w
  6702  1C87                     u8825:	
  6703  1C87  1C03               	skipc
  6704  1C88  2CAE               	goto	l758
  6705  1C89  0020               	movlb	0	; select bank0
  6706  1C8A  084B               	movf	xtoa@n,w
  6707  1C8B  044C               	iorwf	xtoa@n+1,w
  6708  1C8C  044D               	iorwf	xtoa@n+2,w
  6709  1C8D  044E               	iorwf	xtoa@n+3,w
  6710  1C8E  044F               	iorwf	xtoa@n+4,w
  6711  1C8F  0450               	iorwf	xtoa@n+5,w
  6712  1C90  0451               	iorwf	xtoa@n+6,w
  6713  1C91  0452               	iorwf	xtoa@n+7,w
  6714  1C92  1D03               	skipz
  6715  1C93  2BD3               	goto	l6661
  6716  1C94  0848               	movf	xtoa@p+1,w
  6717  1C95  3A80               	xorlw	128
  6718  1C96  00BB               	movwf	??_xtoa
  6719  1C97  3080               	movlw	128
  6720  1C98  023B               	subwf	??_xtoa,w
  6721  1C99  1D03               	skipz
  6722  1C9A  2C9D               	goto	u8845
  6723  1C9B  3001               	movlw	1
  6724  1C9C  0247               	subwf	xtoa@p,w
  6725  1C9D                     u8845:	
  6726  1C9D  1803               	skipnc
  6727  1C9E  2BD3               	goto	l6661
  6728  1C9F  0020               	movlb	0	; select bank0
  6729  1CA0  084A               	movf	xtoa@w+1,w
  6730  1CA1  3A80               	xorlw	128
  6731  1CA2  00BB               	movwf	??_xtoa
  6732  1CA3  3080               	movlw	128
  6733  1CA4  023B               	subwf	??_xtoa,w
  6734  1CA5  1D03               	skipz
  6735  1CA6  2CA9               	goto	u8855
  6736  1CA7  3001               	movlw	1
  6737  1CA8  0249               	subwf	xtoa@w,w
  6738  1CA9                     u8855:	
  6739  1CA9  1C03               	skipc
  6740  1CAA  2CAE               	goto	l758
  6741  1CAB  0022               	movlb	2	; select bank2
  6742  1CAC  18E9               	btfsc	_flags^(0+256),1
  6743  1CAD  2BD3               	goto	l6661
  6744  1CAE                     l758:	
  6745                           
  6746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6747  1CAE  0022               	movlb	2	; select bank2
  6748  1CAF  1E69               	btfss	_flags^(0+256),4
  6749  1CB0  2CCC               	goto	l6705
  6750                           
  6751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6752  1CB1  30FF               	movlw	255
  6753  1CB2  0020               	movlb	0	; select bank0
  6754  1CB3  07D3               	addwf	xtoa@i,f
  6755  1CB4  30FF               	movlw	255
  6756  1CB5  3DD4               	addwfc	xtoa@i+1,f
  6757                           
  6758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6759  1CB6  083A               	movf	xtoa@x,w
  6760  1CB7  00BB               	movwf	??_xtoa
  6761  1CB8  0853               	movf	xtoa@i,w
  6762  1CB9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6763  1CBA  0086               	movwf	6
  6764  1CBB  3002               	movlw	2	; select bank4/5
  6765  1CBC  0087               	movwf	7
  6766  1CBD  083B               	movf	??_xtoa,w
  6767  1CBE  0081               	movwf	1
  6768                           
  6769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6770  1CBF  30FF               	movlw	255
  6771  1CC0  07D3               	addwf	xtoa@i,f
  6772  1CC1  30FF               	movlw	255
  6773  1CC2  3DD4               	addwfc	xtoa@i+1,f
  6774                           
  6775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6776  1CC3  3030               	movlw	48
  6777  1CC4  00BB               	movwf	??_xtoa
  6778  1CC5  0853               	movf	xtoa@i,w
  6779  1CC6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6780  1CC7  0086               	movwf	6
  6781  1CC8  3002               	movlw	2	; select bank4/5
  6782  1CC9  0087               	movwf	7
  6783  1CCA  083B               	movf	??_xtoa,w
  6784  1CCB  0081               	movwf	1
  6785  1CCC                     l6705:	
  6786                           
  6787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6788  1CCC  0020               	movlb	0	; select bank0
  6789  1CCD  0831               	movf	xtoa@fp+1,w
  6790  1CCE  00A7               	movwf	pad@fp+1
  6791  1CCF  0830               	movf	xtoa@fp,w
  6792  1CD0  00A6               	movwf	pad@fp
  6793  1CD1  0853               	movf	xtoa@i,w
  6794  1CD2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6795  1CD3  00BB               	movwf	??_xtoa
  6796  1CD4  083B               	movf	??_xtoa,w
  6797  1CD5  00A8               	movwf	pad@buf
  6798  1CD6  084A               	movf	xtoa@w+1,w
  6799  1CD7  00AA               	movwf	pad@p+1
  6800  1CD8  0849               	movf	xtoa@w,w
  6801  1CD9  00A9               	movwf	pad@p
  6802  1CDA  31A8  20E1         	fcall	_pad
  6803  1CDC  0020               	movlb	0	; select bank0
  6804  1CDD  0827               	movf	?_pad+1,w
  6805  1CDE  00B1               	movwf	?_xtoa+1
  6806  1CDF  0826               	movf	?_pad,w
  6807  1CE0  00B0               	movwf	?_xtoa
  6808  1CE1  0008               	return
  6809  1CE2                     __end_of_xtoa:	
  6810                           
  6811                           	psect	text9
  6812  1001                     __ptext9:	
  6813 ;; *************** function _toupper *****************
  6814 ;; Defined at:
  6815 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  c               2    7[COMMON] int 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;		None
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  2    7[COMMON] int 
  6822 ;; Registers used:
  6823 ;;		wreg, status,2, status,0
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6830 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6831 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6832 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6833 ;;Total ram usage:        8 bytes
  6834 ;; Hardware stack levels used:    1
  6835 ;; Hardware stack levels required when called:    2
  6836 ;; This function calls:
  6837 ;;		_islower
  6838 ;; This function is called by:
  6839 ;;		_xtoa
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           
  6844                           ;psect for function _toupper
  6845  1001                     _toupper:	
  6846                           
  6847                           ;incstack = 0
  6848                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6849  1001  0877               	movf	toupper@c,w
  6850  1002  3E9F               	addlw	159
  6851  1003  0020               	movlb	0	; select bank0
  6852  1004  00A0               	movwf	??_toupper
  6853  1005  30FF               	movlw	255
  6854  1006  3D78               	addwfc	toupper@c+1,w
  6855  1007  00A1               	movwf	??_toupper+1
  6856  1008  3000               	movlw	0
  6857  1009  0221               	subwf	??_toupper+1,w
  6858  100A  301A               	movlw	26
  6859  100B  1903               	skipnz
  6860  100C  0220               	subwf	??_toupper,w
  6861  100D  1803               	btfsc	3,0
  6862  100E  2811               	goto	u7870
  6863  100F  3001               	movlw	1
  6864  1010  2812               	goto	u7880
  6865  1011                     u7870:	
  6866  1011  3000               	movlw	0
  6867  1012                     u7880:	
  6868  1012  00A2               	movwf	??_toupper+2
  6869  1013  01A3               	clrf	??_toupper+3
  6870  1014  0822               	movf	??_toupper+2,w
  6871  1015  00F9               	movwf	_toupper$1787
  6872  1016  0823               	movf	??_toupper+3,w
  6873  1017  00FA               	movwf	_toupper$1787+1
  6874  1018  0879               	movf	_toupper$1787,w
  6875  1019  047A               	iorwf	_toupper$1787+1,w
  6876  101A  1903               	btfsc	3,2
  6877  101B  0008               	return
  6878  101C  305F               	movlw	95
  6879  101D  0577               	andwf	toupper@c,w
  6880  101E  00F7               	movwf	?_toupper
  6881  101F  3000               	movlw	0
  6882  1020  0578               	andwf	toupper@c+1,w
  6883  1021  00F8               	movwf	?_toupper+1
  6884  1022  0008               	return
  6885  1023                     __end_of_toupper:	
  6886                           
  6887                           	psect	text10
  6888  35D7                     __ptext10:	
  6889 ;; *************** function _islower *****************
  6890 ;; Defined at:
  6891 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  c               2    1[COMMON] int 
  6894 ;; Auto vars:     Size  Location     Type
  6895 ;;		None
  6896 ;; Return value:  Size  Location     Type
  6897 ;;                  2    1[COMMON] int 
  6898 ;; Registers used:
  6899 ;;		wreg, status,2, status,0
  6900 ;; Tracked objects:
  6901 ;;		On entry : 0/0
  6902 ;;		On exit  : 0/0
  6903 ;;		Unchanged: 0/0
  6904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6905 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6908 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6909 ;;Total ram usage:        6 bytes
  6910 ;; Hardware stack levels used:    1
  6911 ;; Hardware stack levels required when called:    1
  6912 ;; This function calls:
  6913 ;;		Nothing
  6914 ;; This function is called by:
  6915 ;;		_toupper
  6916 ;; This function uses a non-reentrant model
  6917 ;;
  6918                           
  6919                           
  6920                           ;psect for function _islower
  6921  35D7                     _islower:	
  6922                           
  6923                           ;incstack = 0
  6924                           ; Regs used in _islower: [wreg+status,2+status,0]
  6925  35D7  0871               	movf	islower@c,w
  6926  35D8  3E9F               	addlw	159
  6927  35D9  00F3               	movwf	??_islower
  6928  35DA  30FF               	movlw	255
  6929  35DB  3D72               	addwfc	islower@c+1,w
  6930  35DC  00F4               	movwf	??_islower+1
  6931  35DD  3000               	movlw	0
  6932  35DE  0274               	subwf	??_islower+1,w
  6933  35DF  301A               	movlw	26
  6934  35E0  1903               	skipnz
  6935  35E1  0273               	subwf	??_islower,w
  6936  35E2  1803               	btfsc	3,0
  6937  35E3  2DE6               	goto	u7760
  6938  35E4  3001               	movlw	1
  6939  35E5  2DE7               	goto	u7770
  6940  35E6                     u7760:	
  6941  35E6  3000               	movlw	0
  6942  35E7                     u7770:	
  6943  35E7  00F5               	movwf	??_islower+2
  6944  35E8  01F6               	clrf	??_islower+3
  6945  35E9  0875               	movf	??_islower+2,w
  6946  35EA  00F1               	movwf	?_islower
  6947  35EB  0876               	movf	??_islower+3,w
  6948  35EC  00F2               	movwf	?_islower+1
  6949  35ED  0008               	return
  6950  35EE                     __end_of_islower:	
  6951                           
  6952                           	psect	text11
  6953  35C0                     __ptext11:	
  6954 ;; *************** function _isupper *****************
  6955 ;; Defined at:
  6956 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  c               2    1[COMMON] int 
  6959 ;; Auto vars:     Size  Location     Type
  6960 ;;		None
  6961 ;; Return value:  Size  Location     Type
  6962 ;;                  2    1[COMMON] int 
  6963 ;; Registers used:
  6964 ;;		wreg, status,2, status,0
  6965 ;; Tracked objects:
  6966 ;;		On entry : 0/0
  6967 ;;		On exit  : 0/0
  6968 ;;		Unchanged: 0/0
  6969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6972 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6973 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6974 ;;Total ram usage:        6 bytes
  6975 ;; Hardware stack levels used:    1
  6976 ;; Hardware stack levels required when called:    1
  6977 ;; This function calls:
  6978 ;;		Nothing
  6979 ;; This function is called by:
  6980 ;;		_xtoa
  6981 ;; This function uses a non-reentrant model
  6982 ;;
  6983                           
  6984                           
  6985                           ;psect for function _isupper
  6986  35C0                     _isupper:	
  6987                           
  6988                           ;incstack = 0
  6989                           ; Regs used in _isupper: [wreg+status,2+status,0]
  6990  35C0  0871               	movf	isupper@c,w
  6991  35C1  3EBF               	addlw	191
  6992  35C2  00F3               	movwf	??_isupper
  6993  35C3  30FF               	movlw	255
  6994  35C4  3D72               	addwfc	isupper@c+1,w
  6995  35C5  00F4               	movwf	??_isupper+1
  6996  35C6  3000               	movlw	0
  6997  35C7  0274               	subwf	??_isupper+1,w
  6998  35C8  301A               	movlw	26
  6999  35C9  1903               	skipnz
  7000  35CA  0273               	subwf	??_isupper,w
  7001  35CB  1803               	btfsc	3,0
  7002  35CC  2DCF               	goto	u7830
  7003  35CD  3001               	movlw	1
  7004  35CE  2DD0               	goto	u7840
  7005  35CF                     u7830:	
  7006  35CF  3000               	movlw	0
  7007  35D0                     u7840:	
  7008  35D0  00F5               	movwf	??_isupper+2
  7009  35D1  01F6               	clrf	??_isupper+3
  7010  35D2  0875               	movf	??_isupper+2,w
  7011  35D3  00F1               	movwf	?_isupper
  7012  35D4  0876               	movf	??_isupper+3,w
  7013  35D5  00F2               	movwf	?_isupper+1
  7014  35D6  0008               	return
  7015  35D7                     __end_of_isupper:	
  7016                           
  7017                           	psect	text12
  7018  3675                     __ptext12:	
  7019 ;; *************** function _isalpha *****************
  7020 ;; Defined at:
  7021 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  c               2    1[COMMON] int 
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;		None
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  2    1[COMMON] int 
  7028 ;; Registers used:
  7029 ;;		wreg, status,2, status,0
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7037 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7038 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7039 ;;Total ram usage:        8 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; Hardware stack levels required when called:    1
  7042 ;; This function calls:
  7043 ;;		Nothing
  7044 ;; This function is called by:
  7045 ;;		_xtoa
  7046 ;; This function uses a non-reentrant model
  7047 ;;
  7048                           
  7049                           
  7050                           ;psect for function _isalpha
  7051  3675                     _isalpha:	
  7052                           
  7053                           ;incstack = 0
  7054                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7055  3675  3020               	movlw	32
  7056  3676  0471               	iorwf	isalpha@c,w
  7057  3677  00F3               	movwf	??_isalpha
  7058  3678  3000               	movlw	0
  7059  3679  0472               	iorwf	isalpha@c+1,w
  7060  367A  00F4               	movwf	??_isalpha+1
  7061  367B  0873               	movf	??_isalpha,w
  7062  367C  3E9F               	addlw	159
  7063  367D  00F5               	movwf	??_isalpha+2
  7064  367E  30FF               	movlw	255
  7065  367F  3D74               	addwfc	??_isalpha+1,w
  7066  3680  00F6               	movwf	??_isalpha+3
  7067  3681  3000               	movlw	0
  7068  3682  0276               	subwf	??_isalpha+3,w
  7069  3683  301A               	movlw	26
  7070  3684  1903               	skipnz
  7071  3685  0275               	subwf	??_isalpha+2,w
  7072  3686  1803               	btfsc	3,0
  7073  3687  2E8A               	goto	u7850
  7074  3688  3001               	movlw	1
  7075  3689  2E8B               	goto	u7860
  7076  368A                     u7850:	
  7077  368A  3000               	movlw	0
  7078  368B                     u7860:	
  7079  368B  00F7               	movwf	??_isalpha+4
  7080  368C  01F8               	clrf	??_isalpha+5
  7081  368D  0877               	movf	??_isalpha+4,w
  7082  368E  00F1               	movwf	?_isalpha
  7083  368F  0878               	movf	??_isalpha+5,w
  7084  3690  00F2               	movwf	?_isalpha+1
  7085  3691  0008               	return
  7086  3692                     __end_of_isalpha:	
  7087                           
  7088                           	psect	text13
  7089  2441                     __ptext13:	
  7090 ;; *************** function _utoa *****************
  7091 ;; Defined at:
  7092 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7095 ;;		 -> vsnprintf@f(6), 
  7096 ;;  d               8   18[BANK0 ] unsigned long long 
  7097 ;; Auto vars:     Size  Location     Type
  7098 ;;  n               8   31[BANK0 ] unsigned long long 
  7099 ;;  i               2   39[BANK0 ] int 
  7100 ;;  w               2   29[BANK0 ] int 
  7101 ;;  p               2   27[BANK0 ] int 
  7102 ;; Return value:  Size  Location     Type
  7103 ;;                  2   16[BANK0 ] int 
  7104 ;; Registers used:
  7105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7106 ;; Tracked objects:
  7107 ;;		On entry : 0/0
  7108 ;;		On exit  : 0/0
  7109 ;;		Unchanged: 0/0
  7110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7111 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7112 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7114 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7115 ;;Total ram usage:       25 bytes
  7116 ;; Hardware stack levels used:    1
  7117 ;; Hardware stack levels required when called:    5
  7118 ;; This function calls:
  7119 ;;		___lodiv
  7120 ;;		___lomod
  7121 ;;		_pad
  7122 ;; This function is called by:
  7123 ;;		_vfpfcnvrt
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           
  7128                           ;psect for function _utoa
  7129  2441                     _utoa:	
  7130                           
  7131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7132                           
  7133                           ;incstack = 0
  7134                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7135  2441  0022               	movlb	2	; select bank2
  7136  2442  1BE8               	btfsc	(_prec+1)^(0+256),7
  7137  2443  2C48               	goto	l718
  7138                           
  7139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7140  2444  30FD               	movlw	253
  7141  2445  05E9               	andwf	_flags^(0+256),f
  7142  2446  30FF               	movlw	255
  7143  2447  05EA               	andwf	(_flags+1)^(0+256),f
  7144  2448                     l718:	
  7145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7146                           
  7147                           
  7148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7149  2448  0868               	movf	(_prec+1)^(0+256),w
  7150  2449  3A80               	xorlw	128
  7151  244A  0020               	movlb	0	; select bank0
  7152  244B  00BA               	movwf	??_utoa
  7153  244C  3080               	movlw	128
  7154  244D  023A               	subwf	??_utoa,w
  7155  244E  1D03               	skipz
  7156  244F  2C53               	goto	u8655
  7157  2450  3001               	movlw	1
  7158  2451  0022               	movlb	2	; select bank2
  7159  2452  0267               	subwf	_prec^(0+256),w
  7160  2453                     u8655:	
  7161  2453  1803               	skipnc
  7162  2454  2C5B               	goto	l6615
  7163  2455  3001               	movlw	1
  7164  2456  0020               	movlb	0	; select bank0
  7165  2457  00BB               	movwf	utoa@p
  7166  2458  3000               	movlw	0
  7167  2459  00BC               	movwf	utoa@p+1
  7168  245A  2C63               	goto	l722
  7169  245B                     l6615:	
  7170  245B  0022               	movlb	2	; select bank2
  7171  245C  0868               	movf	(_prec+1)^(0+256),w
  7172  245D  0020               	movlb	0	; select bank0
  7173  245E  00BC               	movwf	utoa@p+1
  7174  245F  0022               	movlb	2	; select bank2
  7175  2460  0867               	movf	_prec^(0+256),w
  7176  2461  0020               	movlb	0	; select bank0
  7177  2462  00BB               	movwf	utoa@p
  7178  2463                     l722:	
  7179                           
  7180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7181  2463  0022               	movlb	2	; select bank2
  7182  2464  0866               	movf	(_width+1)^(0+256),w
  7183  2465  0020               	movlb	0	; select bank0
  7184  2466  00BE               	movwf	utoa@w+1
  7185  2467  0022               	movlb	2	; select bank2
  7186  2468  0865               	movf	_width^(0+256),w
  7187  2469  0020               	movlb	0	; select bank0
  7188  246A  00BD               	movwf	utoa@w
  7189                           
  7190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7191  246B  0832               	movf	utoa@d,w
  7192  246C  00BF               	movwf	utoa@n
  7193  246D  0833               	movf	utoa@d+1,w
  7194  246E  00C0               	movwf	utoa@n+1
  7195  246F  0834               	movf	utoa@d+2,w
  7196  2470  00C1               	movwf	utoa@n+2
  7197  2471  0835               	movf	utoa@d+3,w
  7198  2472  00C2               	movwf	utoa@n+3
  7199  2473  0836               	movf	utoa@d+4,w
  7200  2474  00C3               	movwf	utoa@n+4
  7201  2475  0837               	movf	utoa@d+5,w
  7202  2476  00C4               	movwf	utoa@n+5
  7203  2477  0838               	movf	utoa@d+6,w
  7204  2478  00C5               	movwf	utoa@n+6
  7205  2479  0839               	movf	utoa@d+7,w
  7206  247A  00C6               	movwf	utoa@n+7
  7207                           
  7208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7209  247B  301F               	movlw	31
  7210  247C  00C7               	movwf	utoa@i
  7211  247D  3000               	movlw	0
  7212  247E  00C8               	movwf	utoa@i+1
  7213                           
  7214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7215  247F  0024               	movlb	4	; select bank4
  7216  2480  01BF               	clrf	(_dbuf^(0+512)+31)
  7217                           
  7218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7219  2481  2D07               	goto	l6631
  7220  2482                     l6633:	
  7221  2482  083F               	movf	utoa@n,w
  7222  2483  0440               	iorwf	utoa@n+1,w
  7223  2484  0441               	iorwf	utoa@n+2,w
  7224  2485  0442               	iorwf	utoa@n+3,w
  7225  2486  0443               	iorwf	utoa@n+4,w
  7226  2487  0444               	iorwf	utoa@n+5,w
  7227  2488  0445               	iorwf	utoa@n+6,w
  7228  2489  0446               	iorwf	utoa@n+7,w
  7229  248A  1D03               	skipz
  7230  248B  2CA6               	goto	l6621
  7231  248C  083C               	movf	utoa@p+1,w
  7232  248D  3A80               	xorlw	128
  7233  248E  00BA               	movwf	??_utoa
  7234  248F  3080               	movlw	128
  7235  2490  023A               	subwf	??_utoa,w
  7236  2491  1D03               	skipz
  7237  2492  2C95               	goto	u8685
  7238  2493  3001               	movlw	1
  7239  2494  023B               	subwf	utoa@p,w
  7240  2495                     u8685:	
  7241  2495  1803               	skipnc
  7242  2496  2CA6               	goto	l6621
  7243  2497  0020               	movlb	0	; select bank0
  7244  2498  083E               	movf	utoa@w+1,w
  7245  2499  3A80               	xorlw	128
  7246  249A  00BA               	movwf	??_utoa
  7247  249B  3080               	movlw	128
  7248  249C  023A               	subwf	??_utoa,w
  7249  249D  1D03               	skipz
  7250  249E  2CA1               	goto	u8695
  7251  249F  3001               	movlw	1
  7252  24A0  023D               	subwf	utoa@w,w
  7253  24A1                     u8695:	
  7254  24A1  1C03               	skipc
  7255  24A2  2D0C               	goto	l6641
  7256  24A3  0022               	movlb	2	; select bank2
  7257  24A4  1CE9               	btfss	_flags^(0+256),1
  7258  24A5  2D0C               	goto	l6641
  7259  24A6                     l6621:	
  7260                           
  7261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7262  24A6  30FF               	movlw	255
  7263  24A7  0020               	movlb	0	; select bank0
  7264  24A8  07C7               	addwf	utoa@i,f
  7265  24A9  30FF               	movlw	255
  7266  24AA  3DC8               	addwfc	utoa@i+1,f
  7267                           
  7268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7269  24AB  300A               	movlw	10
  7270  24AC  00A0               	movwf	___lomod@divisor
  7271  24AD  01A1               	clrf	___lomod@divisor+1
  7272  24AE  01A2               	clrf	___lomod@divisor+2
  7273  24AF  01A3               	clrf	___lomod@divisor+3
  7274  24B0  01A4               	clrf	___lomod@divisor+4
  7275  24B1  01A5               	clrf	___lomod@divisor+5
  7276  24B2  01A6               	clrf	___lomod@divisor+6
  7277  24B3  01A7               	clrf	___lomod@divisor+7
  7278  24B4  083F               	movf	utoa@n,w
  7279  24B5  00A8               	movwf	___lomod@dividend
  7280  24B6  0840               	movf	utoa@n+1,w
  7281  24B7  00A9               	movwf	___lomod@dividend+1
  7282  24B8  0841               	movf	utoa@n+2,w
  7283  24B9  00AA               	movwf	___lomod@dividend+2
  7284  24BA  0842               	movf	utoa@n+3,w
  7285  24BB  00AB               	movwf	___lomod@dividend+3
  7286  24BC  0843               	movf	utoa@n+4,w
  7287  24BD  00AC               	movwf	___lomod@dividend+4
  7288  24BE  0844               	movf	utoa@n+5,w
  7289  24BF  00AD               	movwf	___lomod@dividend+5
  7290  24C0  0845               	movf	utoa@n+6,w
  7291  24C1  00AE               	movwf	___lomod@dividend+6
  7292  24C2  0846               	movf	utoa@n+7,w
  7293  24C3  00AF               	movwf	___lomod@dividend+7
  7294  24C4  31AA  2294  31A4   	fcall	___lomod
  7295  24C7  0020               	movlb	0	; select bank0
  7296  24C8  0820               	movf	?___lomod,w
  7297  24C9  3E30               	addlw	48
  7298  24CA  00BA               	movwf	??_utoa
  7299  24CB  0847               	movf	utoa@i,w
  7300  24CC  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7301  24CD  0086               	movwf	6
  7302  24CE  3002               	movlw	2	; select bank4/5
  7303  24CF  0087               	movwf	7
  7304  24D0  083A               	movf	??_utoa,w
  7305  24D1  0081               	movwf	1
  7306                           
  7307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7308  24D2  30FF               	movlw	255
  7309  24D3  07BB               	addwf	utoa@p,f
  7310  24D4  30FF               	movlw	255
  7311  24D5  3DBC               	addwfc	utoa@p+1,f
  7312                           
  7313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7314  24D6  30FF               	movlw	255
  7315  24D7  07BD               	addwf	utoa@w,f
  7316  24D8  30FF               	movlw	255
  7317  24D9  3DBE               	addwfc	utoa@w+1,f
  7318                           
  7319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7320  24DA  300A               	movlw	10
  7321  24DB  00A0               	movwf	___lodiv@divisor
  7322  24DC  01A1               	clrf	___lodiv@divisor+1
  7323  24DD  01A2               	clrf	___lodiv@divisor+2
  7324  24DE  01A3               	clrf	___lodiv@divisor+3
  7325  24DF  01A4               	clrf	___lodiv@divisor+4
  7326  24E0  01A5               	clrf	___lodiv@divisor+5
  7327  24E1  01A6               	clrf	___lodiv@divisor+6
  7328  24E2  01A7               	clrf	___lodiv@divisor+7
  7329  24E3  083F               	movf	utoa@n,w
  7330  24E4  00A8               	movwf	___lodiv@dividend
  7331  24E5  0840               	movf	utoa@n+1,w
  7332  24E6  00A9               	movwf	___lodiv@dividend+1
  7333  24E7  0841               	movf	utoa@n+2,w
  7334  24E8  00AA               	movwf	___lodiv@dividend+2
  7335  24E9  0842               	movf	utoa@n+3,w
  7336  24EA  00AB               	movwf	___lodiv@dividend+3
  7337  24EB  0843               	movf	utoa@n+4,w
  7338  24EC  00AC               	movwf	___lodiv@dividend+4
  7339  24ED  0844               	movf	utoa@n+5,w
  7340  24EE  00AD               	movwf	___lodiv@dividend+5
  7341  24EF  0845               	movf	utoa@n+6,w
  7342  24F0  00AE               	movwf	___lodiv@dividend+6
  7343  24F1  0846               	movf	utoa@n+7,w
  7344  24F2  00AF               	movwf	___lodiv@dividend+7
  7345  24F3  31AB  23F1  31A4   	fcall	___lodiv
  7346  24F6  0020               	movlb	0	; select bank0
  7347  24F7  0820               	movf	?___lodiv,w
  7348  24F8  00BF               	movwf	utoa@n
  7349  24F9  0821               	movf	?___lodiv+1,w
  7350  24FA  00C0               	movwf	utoa@n+1
  7351  24FB  0822               	movf	?___lodiv+2,w
  7352  24FC  00C1               	movwf	utoa@n+2
  7353  24FD  0823               	movf	?___lodiv+3,w
  7354  24FE  00C2               	movwf	utoa@n+3
  7355  24FF  0824               	movf	?___lodiv+4,w
  7356  2500  00C3               	movwf	utoa@n+4
  7357  2501  0825               	movf	?___lodiv+5,w
  7358  2502  00C4               	movwf	utoa@n+5
  7359  2503  0826               	movf	?___lodiv+6,w
  7360  2504  00C5               	movwf	utoa@n+6
  7361  2505  0827               	movf	?___lodiv+7,w
  7362  2506  00C6               	movwf	utoa@n+7
  7363  2507                     l6631:	
  7364                           
  7365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7366  2507  0020               	movlb	0	; select bank0
  7367  2508  0847               	movf	utoa@i,w
  7368  2509  0448               	iorwf	utoa@i+1,w
  7369  250A  1D03               	btfss	3,2
  7370  250B  2C82               	goto	l6633
  7371  250C                     l6641:	
  7372                           
  7373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7374  250C  0020               	movlb	0	; select bank0
  7375  250D  0831               	movf	utoa@fp+1,w
  7376  250E  00A7               	movwf	pad@fp+1
  7377  250F  0830               	movf	utoa@fp,w
  7378  2510  00A6               	movwf	pad@fp
  7379  2511  0847               	movf	utoa@i,w
  7380  2512  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7381  2513  00BA               	movwf	??_utoa
  7382  2514  083A               	movf	??_utoa,w
  7383  2515  00A8               	movwf	pad@buf
  7384  2516  083E               	movf	utoa@w+1,w
  7385  2517  00AA               	movwf	pad@p+1
  7386  2518  083D               	movf	utoa@w,w
  7387  2519  00A9               	movwf	pad@p
  7388  251A  31A8  20E1         	fcall	_pad
  7389  251C  0020               	movlb	0	; select bank0
  7390  251D  0827               	movf	?_pad+1,w
  7391  251E  00B1               	movwf	?_utoa+1
  7392  251F  0826               	movf	?_pad,w
  7393  2520  00B0               	movwf	?_utoa
  7394  2521  0008               	return
  7395  2522                     __end_of_utoa:	
  7396                           
  7397                           	psect	text14
  7398  2A94                     __ptext14:	
  7399 ;; *************** function ___lomod *****************
  7400 ;; Defined at:
  7401 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7404 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;  counter         1    2[COMMON] unsigned char 
  7407 ;; Return value:  Size  Location     Type
  7408 ;;                  8    0[BANK0 ] unsigned long long 
  7409 ;; Registers used:
  7410 ;;		wreg, status,2, status,0
  7411 ;; Tracked objects:
  7412 ;;		On entry : 0/0
  7413 ;;		On exit  : 0/0
  7414 ;;		Unchanged: 0/0
  7415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7416 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7419 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7420 ;;Total ram usage:       18 bytes
  7421 ;; Hardware stack levels used:    1
  7422 ;; Hardware stack levels required when called:    1
  7423 ;; This function calls:
  7424 ;;		Nothing
  7425 ;; This function is called by:
  7426 ;;		_utoa
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           
  7431                           ;psect for function ___lomod
  7432  2A94                     ___lomod:	
  7433                           
  7434                           ;incstack = 0
  7435                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7436  2A94  0020               	movlb	0	; select bank0
  7437  2A95  0820               	movf	___lomod@divisor,w
  7438  2A96  0421               	iorwf	___lomod@divisor+1,w
  7439  2A97  0422               	iorwf	___lomod@divisor+2,w
  7440  2A98  0423               	iorwf	___lomod@divisor+3,w
  7441  2A99  0424               	iorwf	___lomod@divisor+4,w
  7442  2A9A  0425               	iorwf	___lomod@divisor+5,w
  7443  2A9B  0426               	iorwf	___lomod@divisor+6,w
  7444  2A9C  0427               	iorwf	___lomod@divisor+7,w
  7445  2A9D  1903               	skipnz
  7446  2A9E  2AEC               	goto	l1089
  7447  2A9F  01F2               	clrf	___lomod@counter
  7448  2AA0  0AF2               	incf	___lomod@counter,f
  7449  2AA1                     l6423:	
  7450  2AA1  1BA7               	btfsc	___lomod@divisor+7,7
  7451  2AA2  2AB0               	goto	l6425
  7452  2AA3  35A0               	lslf	___lomod@divisor,f
  7453  2AA4  0DA1               	rlf	___lomod@divisor+1,f
  7454  2AA5  0DA2               	rlf	___lomod@divisor+2,f
  7455  2AA6  0DA3               	rlf	___lomod@divisor+3,f
  7456  2AA7  0DA4               	rlf	___lomod@divisor+4,f
  7457  2AA8  0DA5               	rlf	___lomod@divisor+5,f
  7458  2AA9  0DA6               	rlf	___lomod@divisor+6,f
  7459  2AAA  0DA7               	rlf	___lomod@divisor+7,f
  7460  2AAB  3001               	movlw	1
  7461  2AAC  00F1               	movwf	??___lomod
  7462  2AAD  0871               	movf	??___lomod,w
  7463  2AAE  07F2               	addwf	___lomod@counter,f
  7464  2AAF  2AA1               	goto	l6423
  7465  2AB0                     l6425:	
  7466  2AB0  0827               	movf	___lomod@divisor+7,w
  7467  2AB1  022F               	subwf	___lomod@dividend+7,w
  7468  2AB2  1D03               	skipz
  7469  2AB3  2ACE               	goto	u8245
  7470  2AB4  0826               	movf	___lomod@divisor+6,w
  7471  2AB5  022E               	subwf	___lomod@dividend+6,w
  7472  2AB6  1D03               	skipz
  7473  2AB7  2ACE               	goto	u8245
  7474  2AB8  0825               	movf	___lomod@divisor+5,w
  7475  2AB9  022D               	subwf	___lomod@dividend+5,w
  7476  2ABA  1D03               	skipz
  7477  2ABB  2ACE               	goto	u8245
  7478  2ABC  0824               	movf	___lomod@divisor+4,w
  7479  2ABD  022C               	subwf	___lomod@dividend+4,w
  7480  2ABE  1D03               	skipz
  7481  2ABF  2ACE               	goto	u8245
  7482  2AC0  0823               	movf	___lomod@divisor+3,w
  7483  2AC1  022B               	subwf	___lomod@dividend+3,w
  7484  2AC2  1D03               	skipz
  7485  2AC3  2ACE               	goto	u8245
  7486  2AC4  0822               	movf	___lomod@divisor+2,w
  7487  2AC5  022A               	subwf	___lomod@dividend+2,w
  7488  2AC6  1D03               	skipz
  7489  2AC7  2ACE               	goto	u8245
  7490  2AC8  0821               	movf	___lomod@divisor+1,w
  7491  2AC9  0229               	subwf	___lomod@dividend+1,w
  7492  2ACA  1D03               	skipz
  7493  2ACB  2ACE               	goto	u8245
  7494  2ACC  0820               	movf	___lomod@divisor,w
  7495  2ACD  0228               	subwf	___lomod@dividend,w
  7496  2ACE                     u8245:	
  7497  2ACE  1C03               	skipc
  7498  2ACF  2AE0               	goto	l6429
  7499  2AD0  0820               	movf	___lomod@divisor,w
  7500  2AD1  02A8               	subwf	___lomod@dividend,f
  7501  2AD2  0821               	movf	___lomod@divisor+1,w
  7502  2AD3  3BA9               	subwfb	___lomod@dividend+1,f
  7503  2AD4  0822               	movf	___lomod@divisor+2,w
  7504  2AD5  3BAA               	subwfb	___lomod@dividend+2,f
  7505  2AD6  0823               	movf	___lomod@divisor+3,w
  7506  2AD7  3BAB               	subwfb	___lomod@dividend+3,f
  7507  2AD8  0824               	movf	___lomod@divisor+4,w
  7508  2AD9  3BAC               	subwfb	___lomod@dividend+4,f
  7509  2ADA  0825               	movf	___lomod@divisor+5,w
  7510  2ADB  3BAD               	subwfb	___lomod@dividend+5,f
  7511  2ADC  0826               	movf	___lomod@divisor+6,w
  7512  2ADD  3BAE               	subwfb	___lomod@dividend+6,f
  7513  2ADE  0827               	movf	___lomod@divisor+7,w
  7514  2ADF  3BAF               	subwfb	___lomod@dividend+7,f
  7515  2AE0                     l6429:	
  7516  2AE0  36A7               	lsrf	___lomod@divisor+7,f
  7517  2AE1  0CA6               	rrf	___lomod@divisor+6,f
  7518  2AE2  0CA5               	rrf	___lomod@divisor+5,f
  7519  2AE3  0CA4               	rrf	___lomod@divisor+4,f
  7520  2AE4  0CA3               	rrf	___lomod@divisor+3,f
  7521  2AE5  0CA2               	rrf	___lomod@divisor+2,f
  7522  2AE6  0CA1               	rrf	___lomod@divisor+1,f
  7523  2AE7  0CA0               	rrf	___lomod@divisor,f
  7524  2AE8  3001               	movlw	1
  7525  2AE9  02F2               	subwf	___lomod@counter,f
  7526  2AEA  1D03               	btfss	3,2
  7527  2AEB  2AB0               	goto	l6425
  7528  2AEC                     l1089:	
  7529  2AEC  0828               	movf	___lomod@dividend,w
  7530  2AED  00A0               	movwf	?___lomod
  7531  2AEE  0829               	movf	___lomod@dividend+1,w
  7532  2AEF  00A1               	movwf	?___lomod+1
  7533  2AF0  082A               	movf	___lomod@dividend+2,w
  7534  2AF1  00A2               	movwf	?___lomod+2
  7535  2AF2  082B               	movf	___lomod@dividend+3,w
  7536  2AF3  00A3               	movwf	?___lomod+3
  7537  2AF4  082C               	movf	___lomod@dividend+4,w
  7538  2AF5  00A4               	movwf	?___lomod+4
  7539  2AF6  082D               	movf	___lomod@dividend+5,w
  7540  2AF7  00A5               	movwf	?___lomod+5
  7541  2AF8  082E               	movf	___lomod@dividend+6,w
  7542  2AF9  00A6               	movwf	?___lomod+6
  7543  2AFA  082F               	movf	___lomod@dividend+7,w
  7544  2AFB  00A7               	movwf	?___lomod+7
  7545  2AFC  0008               	return
  7546  2AFD                     __end_of___lomod:	
  7547                           
  7548                           	psect	text15
  7549  2BF1                     __ptext15:	
  7550 ;; *************** function ___lodiv *****************
  7551 ;; Defined at:
  7552 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7555 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;  quotient        8    2[COMMON] unsigned long long 
  7558 ;;  counter         1   10[COMMON] unsigned char 
  7559 ;; Return value:  Size  Location     Type
  7560 ;;                  8    0[BANK0 ] unsigned long long 
  7561 ;; Registers used:
  7562 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7563 ;; Tracked objects:
  7564 ;;		On entry : 0/0
  7565 ;;		On exit  : 0/0
  7566 ;;		Unchanged: 0/0
  7567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7568 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7569 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7571 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7572 ;;Total ram usage:       26 bytes
  7573 ;; Hardware stack levels used:    1
  7574 ;; Hardware stack levels required when called:    1
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_utoa
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           
  7583                           ;psect for function ___lodiv
  7584  2BF1                     ___lodiv:	
  7585                           
  7586                           ;incstack = 0
  7587                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7588  2BF1  3072               	movlw	low ___lodiv@quotient
  7589  2BF2  0086               	movwf	6
  7590  2BF3  3000               	movlw	high ___lodiv@quotient
  7591  2BF4  0087               	movwf	7
  7592  2BF5  3008               	movlw	8
  7593  2BF6  00F1               	movwf	??___lodiv
  7594  2BF7  3000               	movlw	0
  7595  2BF8                     u8170:	
  7596  2BF8  001E               	movwi fsr1++
  7597  2BF9  0BF1               	decfsz	??___lodiv,f
  7598  2BFA  2BF8               	goto	u8170
  7599  2BFB  0020               	movlb	0	; select bank0
  7600  2BFC  0820               	movf	___lodiv@divisor,w
  7601  2BFD  0421               	iorwf	___lodiv@divisor+1,w
  7602  2BFE  0422               	iorwf	___lodiv@divisor+2,w
  7603  2BFF  0423               	iorwf	___lodiv@divisor+3,w
  7604  2C00  0424               	iorwf	___lodiv@divisor+4,w
  7605  2C01  0425               	iorwf	___lodiv@divisor+5,w
  7606  2C02  0426               	iorwf	___lodiv@divisor+6,w
  7607  2C03  0427               	iorwf	___lodiv@divisor+7,w
  7608  2C04  1903               	skipnz
  7609  2C05  2C5C               	goto	l1079
  7610  2C06  01FA               	clrf	___lodiv@counter
  7611  2C07  0AFA               	incf	___lodiv@counter,f
  7612  2C08                     l6403:	
  7613  2C08  1BA7               	btfsc	___lodiv@divisor+7,7
  7614  2C09  2C17               	goto	l6405
  7615  2C0A  35A0               	lslf	___lodiv@divisor,f
  7616  2C0B  0DA1               	rlf	___lodiv@divisor+1,f
  7617  2C0C  0DA2               	rlf	___lodiv@divisor+2,f
  7618  2C0D  0DA3               	rlf	___lodiv@divisor+3,f
  7619  2C0E  0DA4               	rlf	___lodiv@divisor+4,f
  7620  2C0F  0DA5               	rlf	___lodiv@divisor+5,f
  7621  2C10  0DA6               	rlf	___lodiv@divisor+6,f
  7622  2C11  0DA7               	rlf	___lodiv@divisor+7,f
  7623  2C12  3001               	movlw	1
  7624  2C13  00F1               	movwf	??___lodiv
  7625  2C14  0871               	movf	??___lodiv,w
  7626  2C15  07FA               	addwf	___lodiv@counter,f
  7627  2C16  2C08               	goto	l6403
  7628  2C17                     l6405:	
  7629  2C17  35F2               	lslf	___lodiv@quotient,f
  7630  2C18  0DF3               	rlf	___lodiv@quotient+1,f
  7631  2C19  0DF4               	rlf	___lodiv@quotient+2,f
  7632  2C1A  0DF5               	rlf	___lodiv@quotient+3,f
  7633  2C1B  0DF6               	rlf	___lodiv@quotient+4,f
  7634  2C1C  0DF7               	rlf	___lodiv@quotient+5,f
  7635  2C1D  0DF8               	rlf	___lodiv@quotient+6,f
  7636  2C1E  0DF9               	rlf	___lodiv@quotient+7,f
  7637  2C1F  0827               	movf	___lodiv@divisor+7,w
  7638  2C20  022F               	subwf	___lodiv@dividend+7,w
  7639  2C21  1D03               	skipz
  7640  2C22  2C3D               	goto	u8205
  7641  2C23  0826               	movf	___lodiv@divisor+6,w
  7642  2C24  022E               	subwf	___lodiv@dividend+6,w
  7643  2C25  1D03               	skipz
  7644  2C26  2C3D               	goto	u8205
  7645  2C27  0825               	movf	___lodiv@divisor+5,w
  7646  2C28  022D               	subwf	___lodiv@dividend+5,w
  7647  2C29  1D03               	skipz
  7648  2C2A  2C3D               	goto	u8205
  7649  2C2B  0824               	movf	___lodiv@divisor+4,w
  7650  2C2C  022C               	subwf	___lodiv@dividend+4,w
  7651  2C2D  1D03               	skipz
  7652  2C2E  2C3D               	goto	u8205
  7653  2C2F  0823               	movf	___lodiv@divisor+3,w
  7654  2C30  022B               	subwf	___lodiv@dividend+3,w
  7655  2C31  1D03               	skipz
  7656  2C32  2C3D               	goto	u8205
  7657  2C33  0822               	movf	___lodiv@divisor+2,w
  7658  2C34  022A               	subwf	___lodiv@dividend+2,w
  7659  2C35  1D03               	skipz
  7660  2C36  2C3D               	goto	u8205
  7661  2C37  0821               	movf	___lodiv@divisor+1,w
  7662  2C38  0229               	subwf	___lodiv@dividend+1,w
  7663  2C39  1D03               	skipz
  7664  2C3A  2C3D               	goto	u8205
  7665  2C3B  0820               	movf	___lodiv@divisor,w
  7666  2C3C  0228               	subwf	___lodiv@dividend,w
  7667  2C3D                     u8205:	
  7668  2C3D  1C03               	skipc
  7669  2C3E  2C50               	goto	l6413
  7670  2C3F  0820               	movf	___lodiv@divisor,w
  7671  2C40  02A8               	subwf	___lodiv@dividend,f
  7672  2C41  0821               	movf	___lodiv@divisor+1,w
  7673  2C42  3BA9               	subwfb	___lodiv@dividend+1,f
  7674  2C43  0822               	movf	___lodiv@divisor+2,w
  7675  2C44  3BAA               	subwfb	___lodiv@dividend+2,f
  7676  2C45  0823               	movf	___lodiv@divisor+3,w
  7677  2C46  3BAB               	subwfb	___lodiv@dividend+3,f
  7678  2C47  0824               	movf	___lodiv@divisor+4,w
  7679  2C48  3BAC               	subwfb	___lodiv@dividend+4,f
  7680  2C49  0825               	movf	___lodiv@divisor+5,w
  7681  2C4A  3BAD               	subwfb	___lodiv@dividend+5,f
  7682  2C4B  0826               	movf	___lodiv@divisor+6,w
  7683  2C4C  3BAE               	subwfb	___lodiv@dividend+6,f
  7684  2C4D  0827               	movf	___lodiv@divisor+7,w
  7685  2C4E  3BAF               	subwfb	___lodiv@dividend+7,f
  7686  2C4F  1472               	bsf	___lodiv@quotient,0
  7687  2C50                     l6413:	
  7688  2C50  36A7               	lsrf	___lodiv@divisor+7,f
  7689  2C51  0CA6               	rrf	___lodiv@divisor+6,f
  7690  2C52  0CA5               	rrf	___lodiv@divisor+5,f
  7691  2C53  0CA4               	rrf	___lodiv@divisor+4,f
  7692  2C54  0CA3               	rrf	___lodiv@divisor+3,f
  7693  2C55  0CA2               	rrf	___lodiv@divisor+2,f
  7694  2C56  0CA1               	rrf	___lodiv@divisor+1,f
  7695  2C57  0CA0               	rrf	___lodiv@divisor,f
  7696  2C58  3001               	movlw	1
  7697  2C59  02FA               	subwf	___lodiv@counter,f
  7698  2C5A  1D03               	btfss	3,2
  7699  2C5B  2C17               	goto	l6405
  7700  2C5C                     l1079:	
  7701  2C5C  0872               	movf	___lodiv@quotient,w
  7702  2C5D  00A0               	movwf	?___lodiv
  7703  2C5E  0873               	movf	___lodiv@quotient+1,w
  7704  2C5F  00A1               	movwf	?___lodiv+1
  7705  2C60  0874               	movf	___lodiv@quotient+2,w
  7706  2C61  00A2               	movwf	?___lodiv+2
  7707  2C62  0875               	movf	___lodiv@quotient+3,w
  7708  2C63  00A3               	movwf	?___lodiv+3
  7709  2C64  0876               	movf	___lodiv@quotient+4,w
  7710  2C65  00A4               	movwf	?___lodiv+4
  7711  2C66  0877               	movf	___lodiv@quotient+5,w
  7712  2C67  00A5               	movwf	?___lodiv+5
  7713  2C68  0878               	movf	___lodiv@quotient+6,w
  7714  2C69  00A6               	movwf	?___lodiv+6
  7715  2C6A  0879               	movf	___lodiv@quotient+7,w
  7716  2C6B  00A7               	movwf	?___lodiv+7
  7717  2C6C  0008               	return
  7718  2C6D                     __end_of___lodiv:	
  7719                           
  7720                           	psect	text16
  7721  2932                     __ptext16:	
  7722 ;; *************** function _strncmp *****************
  7723 ;; Defined at:
  7724 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;  _l              2    1[COMMON] PTR const unsigned char 
  7727 ;;		 -> STR_18(18), STR_17(18), STR_16(19), STR_15(20), 
  7728 ;;		 -> STR_14(20), STR_13(21), STR_12(21), STR_11(21), 
  7729 ;;		 -> STR_10(22), STR_9(22), STR_8(21), STR_7(21), 
  7730 ;;		 -> STR_4(15), STR_3(22), STR_2(71), STR_1(40), 
  7731 ;;  _r              2    3[COMMON] PTR const unsigned char 
  7732 ;;		 -> STR_116(3), STR_112(3), STR_107(3), STR_103(3), 
  7733 ;;		 -> STR_98(4), STR_94(4), STR_89(3), STR_84(3), 
  7734 ;;		 -> STR_79(4), STR_74(3), STR_69(3), STR_64(4), 
  7735 ;;		 -> STR_59(3), STR_54(3), STR_49(4), STR_44(3), 
  7736 ;;		 -> STR_40(3), STR_35(3), STR_31(3), STR_26(4), 
  7737 ;;		 -> STR_22(4), 
  7738 ;;  n               2    5[COMMON] unsigned int 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  r               2   10[COMMON] PTR const unsigned char 
  7741 ;;		 -> STR_116(3), STR_112(3), STR_107(3), STR_103(3), 
  7742 ;;		 -> STR_98(4), STR_94(4), STR_89(3), STR_84(3), 
  7743 ;;		 -> STR_79(4), STR_74(3), STR_69(3), STR_64(4), 
  7744 ;;		 -> STR_59(3), STR_54(3), STR_49(4), STR_44(3), 
  7745 ;;		 -> STR_40(3), STR_35(3), STR_31(3), STR_26(4), 
  7746 ;;		 -> STR_22(4), 
  7747 ;;  l               2    8[COMMON] PTR const unsigned char 
  7748 ;;		 -> STR_18(18), STR_17(18), STR_16(19), STR_15(20), 
  7749 ;;		 -> STR_14(20), STR_13(21), STR_12(21), STR_11(21), 
  7750 ;;		 -> STR_10(22), STR_9(22), STR_8(21), STR_7(21), 
  7751 ;;		 -> STR_4(15), STR_3(22), STR_2(71), STR_1(40), 
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  2    1[COMMON] int 
  7754 ;; Registers used:
  7755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 0/0
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7761 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7762 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7764 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7765 ;;Total ram usage:       11 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    1
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_vfpfcnvrt
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           
  7776                           ;psect for function _strncmp
  7777  2932                     _strncmp:	
  7778                           
  7779                           ;incstack = 0
  7780                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7781  2932  0872               	movf	strncmp@_l+1,w
  7782  2933  00F9               	movwf	strncmp@l+1
  7783  2934  0871               	movf	strncmp@_l,w
  7784  2935  00F8               	movwf	strncmp@l
  7785  2936  0874               	movf	strncmp@_r+1,w
  7786  2937  00FB               	movwf	strncmp@r+1
  7787  2938  0873               	movf	strncmp@_r,w
  7788  2939  00FA               	movwf	strncmp@r
  7789  293A  3001               	movlw	1
  7790  293B  02F5               	subwf	strncmp@n,f
  7791  293C  3000               	movlw	0
  7792  293D  3BF6               	subwfb	strncmp@n+1,f
  7793  293E  0A75               	incf	strncmp@n,w
  7794  293F  1D03               	skipz
  7795  2940  296C               	goto	l6765
  7796  2941  0A76               	incf	strncmp@n+1,w
  7797  2942  1D03               	btfss	3,2
  7798  2943  296C               	goto	l6765
  7799  2944  01F1               	clrf	?_strncmp
  7800  2945  01F2               	clrf	?_strncmp+1
  7801  2946  0008               	return
  7802  2947                     l6767:	
  7803  2947  087A               	movf	strncmp@r,w
  7804  2948  0084               	movwf	4
  7805  2949  087B               	movf	strncmp@r+1,w
  7806  294A  0085               	movwf	5
  7807  294B  0012               	moviw fsr0++
  7808  294C  1903               	btfsc	3,2
  7809  294D  2973               	goto	l6773
  7810  294E  0875               	movf	strncmp@n,w
  7811  294F  0476               	iorwf	strncmp@n+1,w
  7812  2950  1903               	btfsc	3,2
  7813  2951  2973               	goto	l6773
  7814  2952  087A               	movf	strncmp@r,w
  7815  2953  0084               	movwf	4
  7816  2954  087B               	movf	strncmp@r+1,w
  7817  2955  0085               	movwf	5
  7818  2956  0800               	movf	0,w	;code access
  7819  2957  00F7               	movwf	??_strncmp
  7820  2958  0878               	movf	strncmp@l,w
  7821  2959  0084               	movwf	4
  7822  295A  0879               	movf	strncmp@l+1,w
  7823  295B  0085               	movwf	5
  7824  295C  0800               	movf	0,w	;code access
  7825  295D  0677               	xorwf	??_strncmp,w
  7826  295E  1D03               	btfss	3,2
  7827  295F  2973               	goto	l6773
  7828  2960  3001               	movlw	1
  7829  2961  07F8               	addwf	strncmp@l,f
  7830  2962  3000               	movlw	0
  7831  2963  3DF9               	addwfc	strncmp@l+1,f
  7832  2964  3001               	movlw	1
  7833  2965  07FA               	addwf	strncmp@r,f
  7834  2966  3000               	movlw	0
  7835  2967  3DFB               	addwfc	strncmp@r+1,f
  7836  2968  3001               	movlw	1
  7837  2969  02F5               	subwf	strncmp@n,f
  7838  296A  3000               	movlw	0
  7839  296B  3BF6               	subwfb	strncmp@n+1,f
  7840  296C                     l6765:	
  7841  296C  0878               	movf	strncmp@l,w
  7842  296D  0084               	movwf	4
  7843  296E  0879               	movf	strncmp@l+1,w
  7844  296F  0085               	movwf	5
  7845  2970  0012               	moviw fsr0++
  7846  2971  1D03               	btfss	3,2
  7847  2972  2947               	goto	l6767
  7848  2973                     l6773:	
  7849  2973  0878               	movf	strncmp@l,w
  7850  2974  0084               	movwf	4
  7851  2975  0879               	movf	strncmp@l+1,w
  7852  2976  0085               	movwf	5
  7853  2977  0800               	movf	0,w	;code access
  7854  2978  00F7               	movwf	??_strncmp
  7855  2979  087A               	movf	strncmp@r,w
  7856  297A  0084               	movwf	4
  7857  297B  087B               	movf	strncmp@r+1,w
  7858  297C  0085               	movwf	5
  7859  297D  0800               	movf	0,w	;code access
  7860  297E  0277               	subwf	??_strncmp,w
  7861  297F  00F1               	movwf	?_strncmp
  7862  2980  01F2               	clrf	?_strncmp+1
  7863  2981  1C03               	skipc
  7864  2982  03F2               	decf	?_strncmp+1,f
  7865  2983  0008               	return
  7866  2984                     __end_of_strncmp:	
  7867                           
  7868                           	psect	text17
  7869  2022                     __ptext17:	
  7870 ;; *************** function _stoa *****************
  7871 ;; Defined at:
  7872 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7875 ;;		 -> vsnprintf@f(6), 
  7876 ;;  s               2    2[BANK0 ] PTR unsigned char 
  7877 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  7878 ;; Auto vars:     Size  Location     Type
  7879 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  7880 ;;  l               2   19[BANK0 ] int 
  7881 ;;  p               2   17[BANK0 ] int 
  7882 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  7883 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), adcGain(2), 
  7884 ;;  w               2   13[BANK0 ] int 
  7885 ;;  i               2   11[BANK0 ] int 
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  2    0[BANK0 ] int 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7895 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7896 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7897 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7898 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7899 ;;Total ram usage:       23 bytes
  7900 ;; Hardware stack levels used:    1
  7901 ;; Hardware stack levels required when called:    3
  7902 ;; This function calls:
  7903 ;;		_fputc
  7904 ;;		_strlen
  7905 ;; This function is called by:
  7906 ;;		_vfpfcnvrt
  7907 ;; This function uses a non-reentrant model
  7908 ;;
  7909                           
  7910                           
  7911                           ;psect for function _stoa
  7912  2022                     _stoa:	
  7913                           
  7914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7915                           
  7916                           ;incstack = 0
  7917                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7918  2022  30DA               	movlw	low stoa@F1152
  7919  2023  0086               	movwf	6
  7920  2024  3001               	movlw	high stoa@F1152
  7921  2025  0087               	movwf	7
  7922  2026  3024               	movlw	low stoa@nuls
  7923  2027  0084               	movwf	4
  7924  2028  3000               	movlw	high stoa@nuls
  7925  2029  0085               	movwf	5
  7926  202A  3007               	movlw	7
  7927  202B  00FA               	movwf	??_stoa
  7928  202C                     u8550:	
  7929  202C  0016               	moviw fsr1++
  7930  202D  001A               	movwi fsr0++
  7931  202E  0BFA               	decfsz	??_stoa,f
  7932  202F  282C               	goto	u8550
  7933                           
  7934                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7935  2030  0020               	movlb	0	; select bank0
  7936  2031  0823               	movf	stoa@s+1,w
  7937  2032  00B0               	movwf	stoa@cp+1
  7938  2033  0822               	movf	stoa@s,w
  7939  2034  00AF               	movwf	stoa@cp
  7940                           
  7941                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7942  2035  082F               	movf	stoa@cp,w
  7943  2036  0430               	iorwf	stoa@cp+1,w
  7944  2037  1D03               	btfss	3,2
  7945  2038  283D               	goto	l6567
  7946                           
  7947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7948  2039  3024               	movlw	low stoa@nuls
  7949  203A  00AF               	movwf	stoa@cp
  7950  203B  3000               	movlw	high stoa@nuls
  7951  203C  00B0               	movwf	stoa@cp+1
  7952  203D                     l6567:	
  7953                           
  7954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7955  203D  0830               	movf	stoa@cp+1,w
  7956  203E  00F2               	movwf	strlen@s+1
  7957  203F  082F               	movf	stoa@cp,w
  7958  2040  00F1               	movwf	strlen@s
  7959  2041  31B5  2592  31A0   	fcall	_strlen
  7960  2044  0872               	movf	?_strlen+1,w
  7961  2045  0020               	movlb	0	; select bank0
  7962  2046  00B4               	movwf	stoa@l+1
  7963  2047  0871               	movf	?_strlen,w
  7964  2048  00B3               	movwf	stoa@l
  7965                           
  7966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7967  2049  0022               	movlb	2	; select bank2
  7968  204A  0868               	movf	(_prec+1)^(0+256),w
  7969  204B  0020               	movlb	0	; select bank0
  7970  204C  00B2               	movwf	stoa@p+1
  7971  204D  0022               	movlb	2	; select bank2
  7972  204E  0867               	movf	_prec^(0+256),w
  7973  204F  0020               	movlb	0	; select bank0
  7974  2050  00B1               	movwf	stoa@p
  7975                           
  7976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7977  2051  1BB2               	btfsc	stoa@p+1,7
  7978  2052  2864               	goto	l701
  7979  2053  0832               	movf	stoa@p+1,w
  7980  2054  3A80               	xorlw	128
  7981  2055  00FA               	movwf	??_stoa
  7982  2056  0834               	movf	stoa@l+1,w
  7983  2057  3A80               	xorlw	128
  7984  2058  027A               	subwf	??_stoa,w
  7985  2059  1D03               	skipz
  7986  205A  285D               	goto	u8585
  7987  205B  0833               	movf	stoa@l,w
  7988  205C  0231               	subwf	stoa@p,w
  7989  205D                     u8585:	
  7990  205D  1803               	btfsc	3,0
  7991  205E  2864               	goto	l701
  7992  205F  0020               	movlb	0	; select bank0
  7993  2060  0832               	movf	stoa@p+1,w
  7994  2061  00B4               	movwf	stoa@l+1
  7995  2062  0831               	movf	stoa@p,w
  7996  2063  00B3               	movwf	stoa@l
  7997  2064                     l701:	
  7998                           
  7999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8000  2064  0020               	movlb	0	; select bank0
  8001  2065  0834               	movf	stoa@l+1,w
  8002  2066  00B2               	movwf	stoa@p+1
  8003  2067  0833               	movf	stoa@l,w
  8004  2068  00B1               	movwf	stoa@p
  8005                           
  8006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8007  2069  0022               	movlb	2	; select bank2
  8008  206A  0866               	movf	(_width+1)^(0+256),w
  8009  206B  0020               	movlb	0	; select bank0
  8010  206C  00AE               	movwf	stoa@w+1
  8011  206D  0022               	movlb	2	; select bank2
  8012  206E  0865               	movf	_width^(0+256),w
  8013  206F  0020               	movlb	0	; select bank0
  8014  2070  00AD               	movwf	stoa@w
  8015                           
  8016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8017  2071  0022               	movlb	2	; select bank2
  8018  2072  1C69               	btfss	_flags^(0+256),0
  8019  2073  2886               	goto	l6585
  8020  2074  2893               	goto	l6587
  8021  2075                     l6581:	
  8022                           
  8023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8024  2075  3020               	movlw	32
  8025  2076  00F1               	movwf	fputc@c
  8026  2077  3000               	movlw	0
  8027  2078  00F2               	movwf	fputc@c+1
  8028  2079  0020               	movlb	0	; select bank0
  8029  207A  0821               	movf	stoa@fp+1,w
  8030  207B  00F4               	movwf	fputc@fp+1
  8031  207C  0820               	movf	stoa@fp,w
  8032  207D  00F3               	movwf	fputc@fp
  8033  207E  31A9  2184  31A0   	fcall	_fputc
  8034                           
  8035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8036  2081  3001               	movlw	1
  8037  2082  0020               	movlb	0	; select bank0
  8038  2083  07B3               	addwf	stoa@l,f
  8039  2084  3000               	movlw	0
  8040  2085  3DB4               	addwfc	stoa@l+1,f
  8041  2086                     l6585:	
  8042                           
  8043                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8044  2086  0020               	movlb	0	; select bank0
  8045  2087  0834               	movf	stoa@l+1,w
  8046  2088  3A80               	xorlw	128
  8047  2089  00FA               	movwf	??_stoa
  8048  208A  082E               	movf	stoa@w+1,w
  8049  208B  3A80               	xorlw	128
  8050  208C  027A               	subwf	??_stoa,w
  8051  208D  1D03               	skipz
  8052  208E  2891               	goto	u8605
  8053  208F  082D               	movf	stoa@w,w
  8054  2090  0233               	subwf	stoa@l,w
  8055  2091                     u8605:	
  8056  2091  1C03               	skipc
  8057  2092  2875               	goto	l6581
  8058  2093                     l6587:	
  8059                           
  8060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8061  2093  0020               	movlb	0	; select bank0
  8062  2094  01AB               	clrf	stoa@i
  8063  2095  01AC               	clrf	stoa@i+1
  8064  2096                     l6595:	
  8065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8066                           
  8067                           
  8068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8069  2096  082C               	movf	stoa@i+1,w
  8070  2097  3A80               	xorlw	128
  8071  2098  00FA               	movwf	??_stoa
  8072  2099  0832               	movf	stoa@p+1,w
  8073  209A  3A80               	xorlw	128
  8074  209B  027A               	subwf	??_stoa,w
  8075  209C  1D03               	skipz
  8076  209D  28A0               	goto	u8615
  8077  209E  0831               	movf	stoa@p,w
  8078  209F  022B               	subwf	stoa@i,w
  8079  20A0                     u8615:	
  8080  20A0  1803               	btfsc	3,0
  8081  20A1  28BF               	goto	l710
  8082                           
  8083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8084  20A2  0020               	movlb	0	; select bank0
  8085  20A3  082F               	movf	stoa@cp,w
  8086  20A4  0086               	movwf	6
  8087  20A5  0830               	movf	stoa@cp+1,w
  8088  20A6  0087               	movwf	7
  8089  20A7  0801               	movf	1,w
  8090  20A8  00FA               	movwf	??_stoa
  8091  20A9  01FB               	clrf	??_stoa+1
  8092  20AA  087A               	movf	??_stoa,w
  8093  20AB  00F1               	movwf	fputc@c
  8094  20AC  087B               	movf	??_stoa+1,w
  8095  20AD  00F2               	movwf	fputc@c+1
  8096  20AE  0821               	movf	stoa@fp+1,w
  8097  20AF  00F4               	movwf	fputc@fp+1
  8098  20B0  0820               	movf	stoa@fp,w
  8099  20B1  00F3               	movwf	fputc@fp
  8100  20B2  31A9  2184  31A0   	fcall	_fputc
  8101                           
  8102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8103  20B5  3001               	movlw	1
  8104  20B6  0020               	movlb	0	; select bank0
  8105  20B7  07AF               	addwf	stoa@cp,f
  8106  20B8  3000               	movlw	0
  8107  20B9  3DB0               	addwfc	stoa@cp+1,f
  8108                           
  8109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8110  20BA  3001               	movlw	1
  8111  20BB  07AB               	addwf	stoa@i,f
  8112  20BC  3000               	movlw	0
  8113  20BD  3DAC               	addwfc	stoa@i+1,f
  8114  20BE  2896               	goto	l6595
  8115  20BF                     l710:	
  8116                           
  8117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8118  20BF  0022               	movlb	2	; select bank2
  8119  20C0  1869               	btfsc	_flags^(0+256),0
  8120  20C1  28D4               	goto	l6603
  8121  20C2  28E1               	goto	l6605
  8122  20C3                     l6599:	
  8123                           
  8124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8125  20C3  3020               	movlw	32
  8126  20C4  00F1               	movwf	fputc@c
  8127  20C5  3000               	movlw	0
  8128  20C6  00F2               	movwf	fputc@c+1
  8129  20C7  0020               	movlb	0	; select bank0
  8130  20C8  0821               	movf	stoa@fp+1,w
  8131  20C9  00F4               	movwf	fputc@fp+1
  8132  20CA  0820               	movf	stoa@fp,w
  8133  20CB  00F3               	movwf	fputc@fp
  8134  20CC  31A9  2184  31A0   	fcall	_fputc
  8135                           
  8136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8137  20CF  3001               	movlw	1
  8138  20D0  0020               	movlb	0	; select bank0
  8139  20D1  07B3               	addwf	stoa@l,f
  8140  20D2  3000               	movlw	0
  8141  20D3  3DB4               	addwfc	stoa@l+1,f
  8142  20D4                     l6603:	
  8143                           
  8144                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8145  20D4  0020               	movlb	0	; select bank0
  8146  20D5  0834               	movf	stoa@l+1,w
  8147  20D6  3A80               	xorlw	128
  8148  20D7  00FA               	movwf	??_stoa
  8149  20D8  082E               	movf	stoa@w+1,w
  8150  20D9  3A80               	xorlw	128
  8151  20DA  027A               	subwf	??_stoa,w
  8152  20DB  1D03               	skipz
  8153  20DC  28DF               	goto	u8635
  8154  20DD  082D               	movf	stoa@w,w
  8155  20DE  0233               	subwf	stoa@l,w
  8156  20DF                     u8635:	
  8157  20DF  1C03               	skipc
  8158  20E0  28C3               	goto	l6599
  8159  20E1                     l6605:	
  8160                           
  8161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8162  20E1  0020               	movlb	0	; select bank0
  8163  20E2  0834               	movf	stoa@l+1,w
  8164  20E3  00A1               	movwf	?_stoa+1
  8165  20E4  0833               	movf	stoa@l,w
  8166  20E5  00A0               	movwf	?_stoa
  8167  20E6  0008               	return
  8168  20E7                     __end_of_stoa:	
  8169                           
  8170                           	psect	text18
  8171  2522                     __ptext18:	
  8172 ;; *************** function _otoa *****************
  8173 ;; Defined at:
  8174 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8177 ;;		 -> vsnprintf@f(6), 
  8178 ;;  d               8   18[BANK0 ] unsigned long long 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;  n               8   40[BANK0 ] unsigned long long 
  8181 ;;  i               2   48[BANK0 ] int 
  8182 ;;  w               2   38[BANK0 ] int 
  8183 ;;  t               2   36[BANK0 ] int 
  8184 ;;  p               2   34[BANK0 ] int 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  2   16[BANK0 ] int 
  8187 ;; Registers used:
  8188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8194 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8195 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8196 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8197 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8198 ;;Total ram usage:       34 bytes
  8199 ;; Hardware stack levels used:    1
  8200 ;; Hardware stack levels required when called:    5
  8201 ;; This function calls:
  8202 ;;		_pad
  8203 ;; This function is called by:
  8204 ;;		_vfpfcnvrt
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           
  8209                           ;psect for function _otoa
  8210  2522                     _otoa:	
  8211                           
  8212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8213                           
  8214                           ;incstack = 0
  8215                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8216  2522  0022               	movlb	2	; select bank2
  8217  2523  1BE8               	btfsc	(_prec+1)^(0+256),7
  8218  2524  2D29               	goto	l679
  8219                           
  8220                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8221  2525  30FD               	movlw	253
  8222  2526  05E9               	andwf	_flags^(0+256),f
  8223  2527  30FF               	movlw	255
  8224  2528  05EA               	andwf	(_flags+1)^(0+256),f
  8225  2529                     l679:	
  8226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8227                           
  8228                           
  8229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8230  2529  0868               	movf	(_prec+1)^(0+256),w
  8231  252A  3A80               	xorlw	128
  8232  252B  0020               	movlb	0	; select bank0
  8233  252C  00BA               	movwf	??_otoa
  8234  252D  3080               	movlw	128
  8235  252E  023A               	subwf	??_otoa,w
  8236  252F  1D03               	skipz
  8237  2530  2D34               	goto	u8465
  8238  2531  3001               	movlw	1
  8239  2532  0022               	movlb	2	; select bank2
  8240  2533  0267               	subwf	_prec^(0+256),w
  8241  2534                     u8465:	
  8242  2534  1803               	skipnc
  8243  2535  2D3C               	goto	l6521
  8244  2536  3001               	movlw	1
  8245  2537  0020               	movlb	0	; select bank0
  8246  2538  00C2               	movwf	otoa@p
  8247  2539  3000               	movlw	0
  8248  253A  00C3               	movwf	otoa@p+1
  8249  253B  2D44               	goto	l683
  8250  253C                     l6521:	
  8251  253C  0022               	movlb	2	; select bank2
  8252  253D  0868               	movf	(_prec+1)^(0+256),w
  8253  253E  0020               	movlb	0	; select bank0
  8254  253F  00C3               	movwf	otoa@p+1
  8255  2540  0022               	movlb	2	; select bank2
  8256  2541  0867               	movf	_prec^(0+256),w
  8257  2542  0020               	movlb	0	; select bank0
  8258  2543  00C2               	movwf	otoa@p
  8259  2544                     l683:	
  8260                           
  8261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8262  2544  0022               	movlb	2	; select bank2
  8263  2545  0866               	movf	(_width+1)^(0+256),w
  8264  2546  0020               	movlb	0	; select bank0
  8265  2547  00C7               	movwf	otoa@w+1
  8266  2548  0022               	movlb	2	; select bank2
  8267  2549  0865               	movf	_width^(0+256),w
  8268  254A  0020               	movlb	0	; select bank0
  8269  254B  00C6               	movwf	otoa@w
  8270                           
  8271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8272  254C  0832               	movf	otoa@d,w
  8273  254D  00C8               	movwf	otoa@n
  8274  254E  0833               	movf	otoa@d+1,w
  8275  254F  00C9               	movwf	otoa@n+1
  8276  2550  0834               	movf	otoa@d+2,w
  8277  2551  00CA               	movwf	otoa@n+2
  8278  2552  0835               	movf	otoa@d+3,w
  8279  2553  00CB               	movwf	otoa@n+3
  8280  2554  0836               	movf	otoa@d+4,w
  8281  2555  00CC               	movwf	otoa@n+4
  8282  2556  0837               	movf	otoa@d+5,w
  8283  2557  00CD               	movwf	otoa@n+5
  8284  2558  0838               	movf	otoa@d+6,w
  8285  2559  00CE               	movwf	otoa@n+6
  8286  255A  0839               	movf	otoa@d+7,w
  8287  255B  00CF               	movwf	otoa@n+7
  8288                           
  8289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8290  255C  301F               	movlw	31
  8291  255D  00D0               	movwf	otoa@i
  8292  255E  3000               	movlw	0
  8293  255F  00D1               	movwf	otoa@i+1
  8294                           
  8295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8296  2560  0024               	movlb	4	; select bank4
  8297  2561  01BF               	clrf	(_dbuf^(0+512)+31)
  8298                           
  8299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8300  2562  0020               	movlb	0	; select bank0
  8301  2563  01C4               	clrf	otoa@t
  8302  2564  01C5               	clrf	otoa@t+1
  8303                           
  8304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8305  2565  2DD9               	goto	l684
  8306  2566                     l6539:	
  8307  2566  0020               	movlb	0	; select bank0
  8308  2567  0848               	movf	otoa@n,w
  8309  2568  0449               	iorwf	otoa@n+1,w
  8310  2569  044A               	iorwf	otoa@n+2,w
  8311  256A  044B               	iorwf	otoa@n+3,w
  8312  256B  044C               	iorwf	otoa@n+4,w
  8313  256C  044D               	iorwf	otoa@n+5,w
  8314  256D  044E               	iorwf	otoa@n+6,w
  8315  256E  044F               	iorwf	otoa@n+7,w
  8316  256F  1D03               	skipz
  8317  2570  2D8B               	goto	l6529
  8318  2571  0843               	movf	otoa@p+1,w
  8319  2572  3A80               	xorlw	128
  8320  2573  00BA               	movwf	??_otoa
  8321  2574  3080               	movlw	128
  8322  2575  023A               	subwf	??_otoa,w
  8323  2576  1D03               	skipz
  8324  2577  2D7A               	goto	u8505
  8325  2578  3001               	movlw	1
  8326  2579  0242               	subwf	otoa@p,w
  8327  257A                     u8505:	
  8328  257A  1803               	skipnc
  8329  257B  2D8B               	goto	l6529
  8330  257C  0020               	movlb	0	; select bank0
  8331  257D  0847               	movf	otoa@w+1,w
  8332  257E  3A80               	xorlw	128
  8333  257F  00BA               	movwf	??_otoa
  8334  2580  3080               	movlw	128
  8335  2581  023A               	subwf	??_otoa,w
  8336  2582  1D03               	skipz
  8337  2583  2D86               	goto	u8515
  8338  2584  3001               	movlw	1
  8339  2585  0246               	subwf	otoa@w,w
  8340  2586                     u8515:	
  8341  2586  1C03               	skipc
  8342  2587  2DE4               	goto	l690
  8343  2588  0022               	movlb	2	; select bank2
  8344  2589  1CE9               	btfss	_flags^(0+256),1
  8345  258A  2DE4               	goto	l690
  8346  258B                     l6529:	
  8347                           
  8348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8349  258B  30FF               	movlw	255
  8350  258C  0020               	movlb	0	; select bank0
  8351  258D  07D0               	addwf	otoa@i,f
  8352  258E  30FF               	movlw	255
  8353  258F  3DD1               	addwfc	otoa@i+1,f
  8354                           
  8355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8356  2590  3007               	movlw	7
  8357  2591  0548               	andwf	otoa@n,w
  8358  2592  00C4               	movwf	otoa@t
  8359  2593  3000               	movlw	0
  8360  2594  0549               	andwf	otoa@n+1,w
  8361  2595  00C5               	movwf	otoa@t+1
  8362                           
  8363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8364  2596  0844               	movf	otoa@t,w
  8365  2597  3E30               	addlw	48
  8366  2598  00BA               	movwf	??_otoa
  8367  2599  0850               	movf	otoa@i,w
  8368  259A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8369  259B  0086               	movwf	6
  8370  259C  3002               	movlw	2	; select bank4/5
  8371  259D  0087               	movwf	7
  8372  259E  083A               	movf	??_otoa,w
  8373  259F  0081               	movwf	1
  8374                           
  8375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8376  25A0  30FF               	movlw	255
  8377  25A1  07C2               	addwf	otoa@p,f
  8378  25A2  30FF               	movlw	255
  8379  25A3  3DC3               	addwfc	otoa@p+1,f
  8380                           
  8381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8382  25A4  30FF               	movlw	255
  8383  25A5  07C6               	addwf	otoa@w,f
  8384  25A6  30FF               	movlw	255
  8385  25A7  3DC7               	addwfc	otoa@w+1,f
  8386                           
  8387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8388  25A8  3048               	movlw	low otoa@n
  8389  25A9  0086               	movwf	6
  8390  25AA  3000               	movlw	high otoa@n
  8391  25AB  0087               	movwf	7
  8392  25AC  3F40               	moviw [0]fsr1
  8393  25AD  00BA               	movwf	??_otoa
  8394  25AE  3F41               	moviw [1]fsr1
  8395  25AF  00BB               	movwf	??_otoa+1
  8396  25B0  3F42               	moviw [2]fsr1
  8397  25B1  00BC               	movwf	??_otoa+2
  8398  25B2  3F43               	moviw [3]fsr1
  8399  25B3  00BD               	movwf	??_otoa+3
  8400  25B4  3F44               	moviw [4]fsr1
  8401  25B5  00BE               	movwf	??_otoa+4
  8402  25B6  3F45               	moviw [5]fsr1
  8403  25B7  00BF               	movwf	??_otoa+5
  8404  25B8  3F46               	moviw [6]fsr1
  8405  25B9  00C0               	movwf	??_otoa+6
  8406  25BA  3F47               	moviw [7]fsr1
  8407  25BB  00C1               	movwf	??_otoa+7
  8408  25BC  3003               	movlw	3
  8409  25BD                     u8475:	
  8410  25BD  0020               	movlb	0	; select bank0
  8411  25BE  36C1               	lsrf	??_otoa+7,f
  8412  25BF  0CC0               	rrf	??_otoa+6,f
  8413  25C0  0CBF               	rrf	??_otoa+5,f
  8414  25C1  0CBE               	rrf	??_otoa+4,f
  8415  25C2  0CBD               	rrf	??_otoa+3,f
  8416  25C3  0CBC               	rrf	??_otoa+2,f
  8417  25C4  0CBB               	rrf	??_otoa+1,f
  8418  25C5  0CBA               	rrf	??_otoa,f
  8419  25C6  0B89               	decfsz	9,f
  8420  25C7  2DBD               	goto	u8475
  8421  25C8  0020               	movlb	0	; select bank0
  8422  25C9  0841               	movf	??_otoa+7,w
  8423  25CA  00CF               	movwf	otoa@n+7
  8424  25CB  0840               	movf	??_otoa+6,w
  8425  25CC  00CE               	movwf	otoa@n+6
  8426  25CD  083F               	movf	??_otoa+5,w
  8427  25CE  00CD               	movwf	otoa@n+5
  8428  25CF  083E               	movf	??_otoa+4,w
  8429  25D0  00CC               	movwf	otoa@n+4
  8430  25D1  083D               	movf	??_otoa+3,w
  8431  25D2  00CB               	movwf	otoa@n+3
  8432  25D3  083C               	movf	??_otoa+2,w
  8433  25D4  00CA               	movwf	otoa@n+2
  8434  25D5  083B               	movf	??_otoa+1,w
  8435  25D6  00C9               	movwf	otoa@n+1
  8436  25D7  083A               	movf	??_otoa,w
  8437  25D8  00C8               	movwf	otoa@n
  8438  25D9                     l684:	
  8439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8440                           
  8441                           
  8442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8443  25D9  0851               	movf	otoa@i+1,w
  8444  25DA  3A80               	xorlw	128
  8445  25DB  00BA               	movwf	??_otoa
  8446  25DC  3080               	movlw	128
  8447  25DD  023A               	subwf	??_otoa,w
  8448  25DE  1D03               	skipz
  8449  25DF  2DE2               	goto	u8485
  8450  25E0  3001               	movlw	1
  8451  25E1  0250               	subwf	otoa@i,w
  8452  25E2                     u8485:	
  8453  25E2  1803               	btfsc	3,0
  8454  25E3  2D66               	goto	l6539
  8455  25E4                     l690:	
  8456                           
  8457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8458  25E4  0022               	movlb	2	; select bank2
  8459  25E5  1E69               	btfss	_flags^(0+256),4
  8460  25E6  2DFD               	goto	l6555
  8461  25E7  0020               	movlb	0	; select bank0
  8462  25E8  0844               	movf	otoa@t,w
  8463  25E9  0445               	iorwf	otoa@t+1,w
  8464  25EA  1903               	btfsc	3,2
  8465  25EB  2DFD               	goto	l6555
  8466                           
  8467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8468  25EC  30FF               	movlw	255
  8469  25ED  07D0               	addwf	otoa@i,f
  8470  25EE  30FF               	movlw	255
  8471  25EF  3DD1               	addwfc	otoa@i+1,f
  8472                           
  8473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8474  25F0  3030               	movlw	48
  8475  25F1  00BA               	movwf	??_otoa
  8476  25F2  0850               	movf	otoa@i,w
  8477  25F3  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8478  25F4  0086               	movwf	6
  8479  25F5  3002               	movlw	2	; select bank4/5
  8480  25F6  0087               	movwf	7
  8481  25F7  083A               	movf	??_otoa,w
  8482  25F8  0081               	movwf	1
  8483                           
  8484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8485  25F9  30FF               	movlw	255
  8486  25FA  07C6               	addwf	otoa@w,f
  8487  25FB  30FF               	movlw	255
  8488  25FC  3DC7               	addwfc	otoa@w+1,f
  8489  25FD                     l6555:	
  8490                           
  8491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8492  25FD  0020               	movlb	0	; select bank0
  8493  25FE  0831               	movf	otoa@fp+1,w
  8494  25FF  00A7               	movwf	pad@fp+1
  8495  2600  0830               	movf	otoa@fp,w
  8496  2601  00A6               	movwf	pad@fp
  8497  2602  0850               	movf	otoa@i,w
  8498  2603  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8499  2604  00BA               	movwf	??_otoa
  8500  2605  083A               	movf	??_otoa,w
  8501  2606  00A8               	movwf	pad@buf
  8502  2607  0847               	movf	otoa@w+1,w
  8503  2608  00AA               	movwf	pad@p+1
  8504  2609  0846               	movf	otoa@w,w
  8505  260A  00A9               	movwf	pad@p
  8506  260B  31A8  20E1         	fcall	_pad
  8507  260D  0020               	movlb	0	; select bank0
  8508  260E  0827               	movf	?_pad+1,w
  8509  260F  00B1               	movwf	?_otoa+1
  8510  2610  0826               	movf	?_pad,w
  8511  2611  00B0               	movwf	?_otoa
  8512  2612  0008               	return
  8513  2613                     __end_of_otoa:	
  8514                           
  8515                           	psect	text19
  8516  1A36                     __ptext19:	
  8517 ;; *************** function _dtoa *****************
  8518 ;; Defined at:
  8519 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8522 ;;		 -> vsnprintf@f(6), 
  8523 ;;  d               8   18[BANK0 ] long long 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;  n               8   37[BANK0 ] long long 
  8526 ;;  i               2   45[BANK0 ] int 
  8527 ;;  s               2   35[BANK0 ] int 
  8528 ;;  w               2   33[BANK0 ] int 
  8529 ;;  p               2   31[BANK0 ] int 
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  2   16[BANK0 ] int 
  8532 ;; Registers used:
  8533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8539 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8540 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8541 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8542 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8543 ;;Total ram usage:       31 bytes
  8544 ;; Hardware stack levels used:    1
  8545 ;; Hardware stack levels required when called:    5
  8546 ;; This function calls:
  8547 ;;		___aodiv
  8548 ;;		___aomod
  8549 ;;		_abs
  8550 ;;		_pad
  8551 ;; This function is called by:
  8552 ;;		_vfpfcnvrt
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           
  8557                           ;psect for function _dtoa
  8558  1A36                     _dtoa:	
  8559                           
  8560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8561                           
  8562                           ;incstack = 0
  8563                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8564  1A36  0020               	movlb	0	; select bank0
  8565  1A37  0832               	movf	dtoa@d,w
  8566  1A38  00C5               	movwf	dtoa@n
  8567  1A39  0833               	movf	dtoa@d+1,w
  8568  1A3A  00C6               	movwf	dtoa@n+1
  8569  1A3B  0834               	movf	dtoa@d+2,w
  8570  1A3C  00C7               	movwf	dtoa@n+2
  8571  1A3D  0835               	movf	dtoa@d+3,w
  8572  1A3E  00C8               	movwf	dtoa@n+3
  8573  1A3F  0836               	movf	dtoa@d+4,w
  8574  1A40  00C9               	movwf	dtoa@n+4
  8575  1A41  0837               	movf	dtoa@d+5,w
  8576  1A42  00CA               	movwf	dtoa@n+5
  8577  1A43  0838               	movf	dtoa@d+6,w
  8578  1A44  00CB               	movwf	dtoa@n+6
  8579  1A45  0839               	movf	dtoa@d+7,w
  8580  1A46  00CC               	movwf	dtoa@n+7
  8581                           
  8582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8583  1A47  3045               	movlw	low dtoa@n
  8584  1A48  0086               	movwf	6
  8585  1A49  3000               	movlw	high dtoa@n
  8586  1A4A  0087               	movwf	7
  8587  1A4B  3F47               	moviw [7]fsr1
  8588  1A4C  00BA               	movwf	??_dtoa
  8589  1A4D  1FBA               	btfss	??_dtoa,7
  8590  1A4E  2A51               	goto	u8290
  8591  1A4F  3001               	movlw	1
  8592  1A50  2A52               	goto	u8300
  8593  1A51                     u8290:	
  8594  1A51  3000               	movlw	0
  8595  1A52                     u8300:	
  8596  1A52  0020               	movlb	0	; select bank0
  8597  1A53  00BB               	movwf	??_dtoa+1
  8598  1A54  01BC               	clrf	??_dtoa+2
  8599  1A55  083B               	movf	??_dtoa+1,w
  8600  1A56  00C3               	movwf	dtoa@s
  8601  1A57  083C               	movf	??_dtoa+2,w
  8602  1A58  00C4               	movwf	dtoa@s+1
  8603                           
  8604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8605  1A59  0843               	movf	dtoa@s,w
  8606  1A5A  0444               	iorwf	dtoa@s+1,w
  8607  1A5B  1903               	btfsc	3,2
  8608  1A5C  2A7B               	goto	l653
  8609                           
  8610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8611  1A5D  09C5               	comf	dtoa@n,f
  8612  1A5E  09C6               	comf	dtoa@n+1,f
  8613  1A5F  09C7               	comf	dtoa@n+2,f
  8614  1A60  09C8               	comf	dtoa@n+3,f
  8615  1A61  09C9               	comf	dtoa@n+4,f
  8616  1A62  09CA               	comf	dtoa@n+5,f
  8617  1A63  09CB               	comf	dtoa@n+6,f
  8618  1A64  09CC               	comf	dtoa@n+7,f
  8619  1A65  0AC5               	incf	dtoa@n,f
  8620  1A66  1D03               	skipz
  8621  1A67  2A7B               	goto	l653
  8622  1A68  0AC6               	incf	dtoa@n+1,f
  8623  1A69  1D03               	skipz
  8624  1A6A  2A7B               	goto	l653
  8625  1A6B  0AC7               	incf	dtoa@n+2,f
  8626  1A6C  1D03               	skipz
  8627  1A6D  2A7B               	goto	l653
  8628  1A6E  0AC8               	incf	dtoa@n+3,f
  8629  1A6F  1D03               	skipz
  8630  1A70  2A7B               	goto	l653
  8631  1A71  0AC9               	incf	dtoa@n+4,f
  8632  1A72  1D03               	skipz
  8633  1A73  2A7B               	goto	l653
  8634  1A74  0ACA               	incf	dtoa@n+5,f
  8635  1A75  1D03               	skipz
  8636  1A76  2A7B               	goto	l653
  8637  1A77  0ACB               	incf	dtoa@n+6,f
  8638  1A78  1D03               	skipz
  8639  1A79  2A7B               	goto	l653
  8640  1A7A  0ACC               	incf	dtoa@n+7,f
  8641  1A7B                     l653:	
  8642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  8643                           
  8644                           
  8645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8646  1A7B  0022               	movlb	2	; select bank2
  8647  1A7C  1BE8               	btfsc	(_prec+1)^(0+256),7
  8648  1A7D  2A82               	goto	l654
  8649                           
  8650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8651  1A7E  30FD               	movlw	253
  8652  1A7F  05E9               	andwf	_flags^(0+256),f
  8653  1A80  30FF               	movlw	255
  8654  1A81  05EA               	andwf	(_flags+1)^(0+256),f
  8655  1A82                     l654:	
  8656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  8657                           
  8658                           
  8659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8660  1A82  0868               	movf	(_prec+1)^(0+256),w
  8661  1A83  3A80               	xorlw	128
  8662  1A84  0020               	movlb	0	; select bank0
  8663  1A85  00BA               	movwf	??_dtoa
  8664  1A86  3080               	movlw	128
  8665  1A87  023A               	subwf	??_dtoa,w
  8666  1A88  1D03               	skipz
  8667  1A89  2A8D               	goto	u8345
  8668  1A8A  3001               	movlw	1
  8669  1A8B  0022               	movlb	2	; select bank2
  8670  1A8C  0267               	subwf	_prec^(0+256),w
  8671  1A8D                     u8345:	
  8672  1A8D  1803               	skipnc
  8673  1A8E  2A95               	goto	l6469
  8674  1A8F  3001               	movlw	1
  8675  1A90  0020               	movlb	0	; select bank0
  8676  1A91  00BF               	movwf	dtoa@p
  8677  1A92  3000               	movlw	0
  8678  1A93  00C0               	movwf	dtoa@p+1
  8679  1A94  2A9D               	goto	l658
  8680  1A95                     l6469:	
  8681  1A95  0022               	movlb	2	; select bank2
  8682  1A96  0868               	movf	(_prec+1)^(0+256),w
  8683  1A97  0020               	movlb	0	; select bank0
  8684  1A98  00C0               	movwf	dtoa@p+1
  8685  1A99  0022               	movlb	2	; select bank2
  8686  1A9A  0867               	movf	_prec^(0+256),w
  8687  1A9B  0020               	movlb	0	; select bank0
  8688  1A9C  00BF               	movwf	dtoa@p
  8689  1A9D                     l658:	
  8690                           
  8691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8692  1A9D  0022               	movlb	2	; select bank2
  8693  1A9E  0866               	movf	(_width+1)^(0+256),w
  8694  1A9F  0020               	movlb	0	; select bank0
  8695  1AA0  00C2               	movwf	dtoa@w+1
  8696  1AA1  0022               	movlb	2	; select bank2
  8697  1AA2  0865               	movf	_width^(0+256),w
  8698  1AA3  0020               	movlb	0	; select bank0
  8699  1AA4  00C1               	movwf	dtoa@w
  8700                           
  8701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8702  1AA5  0843               	movf	dtoa@s,w
  8703  1AA6  0444               	iorwf	dtoa@s+1,w
  8704  1AA7  1D03               	btfss	3,2
  8705  1AA8  2AAC               	goto	l6475
  8706  1AA9  0022               	movlb	2	; select bank2
  8707  1AAA  1D69               	btfss	_flags^(0+256),2
  8708  1AAB  2AB1               	goto	l659
  8709  1AAC                     l6475:	
  8710                           
  8711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8712  1AAC  30FF               	movlw	255
  8713  1AAD  0020               	movlb	0	; select bank0
  8714  1AAE  07C1               	addwf	dtoa@w,f
  8715  1AAF  30FF               	movlw	255
  8716  1AB0  3DC2               	addwfc	dtoa@w+1,f
  8717  1AB1                     l659:	
  8718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  8719                           
  8720                           
  8721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8722  1AB1  301F               	movlw	31
  8723  1AB2  0020               	movlb	0	; select bank0
  8724  1AB3  00CD               	movwf	dtoa@i
  8725  1AB4  3000               	movlw	0
  8726  1AB5  00CE               	movwf	dtoa@i+1
  8727                           
  8728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8729  1AB6  0024               	movlb	4	; select bank4
  8730  1AB7  01BF               	clrf	(_dbuf^(0+512)+31)
  8731                           
  8732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8733  1AB8  2B47               	goto	l662
  8734  1AB9                     l6489:	
  8735  1AB9  0020               	movlb	0	; select bank0
  8736  1ABA  0845               	movf	dtoa@n,w
  8737  1ABB  0446               	iorwf	dtoa@n+1,w
  8738  1ABC  0447               	iorwf	dtoa@n+2,w
  8739  1ABD  0448               	iorwf	dtoa@n+3,w
  8740  1ABE  0449               	iorwf	dtoa@n+4,w
  8741  1ABF  044A               	iorwf	dtoa@n+5,w
  8742  1AC0  044B               	iorwf	dtoa@n+6,w
  8743  1AC1  044C               	iorwf	dtoa@n+7,w
  8744  1AC2  1D03               	skipz
  8745  1AC3  2ADE               	goto	l6479
  8746  1AC4  0840               	movf	dtoa@p+1,w
  8747  1AC5  3A80               	xorlw	128
  8748  1AC6  00BA               	movwf	??_dtoa
  8749  1AC7  3080               	movlw	128
  8750  1AC8  023A               	subwf	??_dtoa,w
  8751  1AC9  1D03               	skipz
  8752  1ACA  2ACD               	goto	u8395
  8753  1ACB  3001               	movlw	1
  8754  1ACC  023F               	subwf	dtoa@p,w
  8755  1ACD                     u8395:	
  8756  1ACD  1803               	skipnc
  8757  1ACE  2ADE               	goto	l6479
  8758  1ACF  0020               	movlb	0	; select bank0
  8759  1AD0  0842               	movf	dtoa@w+1,w
  8760  1AD1  3A80               	xorlw	128
  8761  1AD2  00BA               	movwf	??_dtoa
  8762  1AD3  3080               	movlw	128
  8763  1AD4  023A               	subwf	??_dtoa,w
  8764  1AD5  1D03               	skipz
  8765  1AD6  2AD9               	goto	u8405
  8766  1AD7  3001               	movlw	1
  8767  1AD8  0241               	subwf	dtoa@w,w
  8768  1AD9                     u8405:	
  8769  1AD9  1C03               	skipc
  8770  1ADA  2B53               	goto	l6497
  8771  1ADB  0022               	movlb	2	; select bank2
  8772  1ADC  1CE9               	btfss	_flags^(0+256),1
  8773  1ADD  2B53               	goto	l6497
  8774  1ADE                     l6479:	
  8775                           
  8776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8777  1ADE  30FF               	movlw	255
  8778  1ADF  0020               	movlb	0	; select bank0
  8779  1AE0  07CD               	addwf	dtoa@i,f
  8780  1AE1  30FF               	movlw	255
  8781  1AE2  3DCE               	addwfc	dtoa@i+1,f
  8782                           
  8783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8784  1AE3  300A               	movlw	10
  8785  1AE4  00A0               	movwf	___aomod@divisor
  8786  1AE5  01A1               	clrf	___aomod@divisor+1
  8787  1AE6  01A2               	clrf	___aomod@divisor+2
  8788  1AE7  01A3               	clrf	___aomod@divisor+3
  8789  1AE8  01A4               	clrf	___aomod@divisor+4
  8790  1AE9  01A5               	clrf	___aomod@divisor+5
  8791  1AEA  01A6               	clrf	___aomod@divisor+6
  8792  1AEB  01A7               	clrf	___aomod@divisor+7
  8793  1AEC  0845               	movf	dtoa@n,w
  8794  1AED  00A8               	movwf	___aomod@dividend
  8795  1AEE  0846               	movf	dtoa@n+1,w
  8796  1AEF  00A9               	movwf	___aomod@dividend+1
  8797  1AF0  0847               	movf	dtoa@n+2,w
  8798  1AF1  00AA               	movwf	___aomod@dividend+2
  8799  1AF2  0848               	movf	dtoa@n+3,w
  8800  1AF3  00AB               	movwf	___aomod@dividend+3
  8801  1AF4  0849               	movf	dtoa@n+4,w
  8802  1AF5  00AC               	movwf	___aomod@dividend+4
  8803  1AF6  084A               	movf	dtoa@n+5,w
  8804  1AF7  00AD               	movwf	___aomod@dividend+5
  8805  1AF8  084B               	movf	dtoa@n+6,w
  8806  1AF9  00AE               	movwf	___aomod@dividend+6
  8807  1AFA  084C               	movf	dtoa@n+7,w
  8808  1AFB  00AF               	movwf	___aomod@dividend+7
  8809  1AFC  31A3  2365  319A   	fcall	___aomod
  8810  1AFF  0020               	movlb	0	; select bank0
  8811  1B00  0821               	movf	?___aomod+1,w
  8812  1B01  00F5               	movwf	abs@a+1
  8813  1B02  0820               	movf	?___aomod,w
  8814  1B03  00F4               	movwf	abs@a
  8815  1B04  31B5  25A9  319A   	fcall	_abs
  8816  1B07  0874               	movf	?_abs,w
  8817  1B08  3E30               	addlw	48
  8818  1B09  0020               	movlb	0	; select bank0
  8819  1B0A  00BA               	movwf	??_dtoa
  8820  1B0B  084D               	movf	dtoa@i,w
  8821  1B0C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8822  1B0D  0086               	movwf	6
  8823  1B0E  3002               	movlw	2	; select bank4/5
  8824  1B0F  0087               	movwf	7
  8825  1B10  083A               	movf	??_dtoa,w
  8826  1B11  0081               	movwf	1
  8827                           
  8828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8829  1B12  30FF               	movlw	255
  8830  1B13  07BF               	addwf	dtoa@p,f
  8831  1B14  30FF               	movlw	255
  8832  1B15  3DC0               	addwfc	dtoa@p+1,f
  8833                           
  8834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8835  1B16  30FF               	movlw	255
  8836  1B17  07C1               	addwf	dtoa@w,f
  8837  1B18  30FF               	movlw	255
  8838  1B19  3DC2               	addwfc	dtoa@w+1,f
  8839                           
  8840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8841  1B1A  300A               	movlw	10
  8842  1B1B  00A0               	movwf	___aodiv@divisor
  8843  1B1C  01A1               	clrf	___aodiv@divisor+1
  8844  1B1D  01A2               	clrf	___aodiv@divisor+2
  8845  1B1E  01A3               	clrf	___aodiv@divisor+3
  8846  1B1F  01A4               	clrf	___aodiv@divisor+4
  8847  1B20  01A5               	clrf	___aodiv@divisor+5
  8848  1B21  01A6               	clrf	___aodiv@divisor+6
  8849  1B22  01A7               	clrf	___aodiv@divisor+7
  8850  1B23  0845               	movf	dtoa@n,w
  8851  1B24  00A8               	movwf	___aodiv@dividend
  8852  1B25  0846               	movf	dtoa@n+1,w
  8853  1B26  00A9               	movwf	___aodiv@dividend+1
  8854  1B27  0847               	movf	dtoa@n+2,w
  8855  1B28  00AA               	movwf	___aodiv@dividend+2
  8856  1B29  0848               	movf	dtoa@n+3,w
  8857  1B2A  00AB               	movwf	___aodiv@dividend+3
  8858  1B2B  0849               	movf	dtoa@n+4,w
  8859  1B2C  00AC               	movwf	___aodiv@dividend+4
  8860  1B2D  084A               	movf	dtoa@n+5,w
  8861  1B2E  00AD               	movwf	___aodiv@dividend+5
  8862  1B2F  084B               	movf	dtoa@n+6,w
  8863  1B30  00AE               	movwf	___aodiv@dividend+6
  8864  1B31  084C               	movf	dtoa@n+7,w
  8865  1B32  00AF               	movwf	___aodiv@dividend+7
  8866  1B33  31A6  2613  319A   	fcall	___aodiv
  8867  1B36  0020               	movlb	0	; select bank0
  8868  1B37  0820               	movf	?___aodiv,w
  8869  1B38  00C5               	movwf	dtoa@n
  8870  1B39  0821               	movf	?___aodiv+1,w
  8871  1B3A  00C6               	movwf	dtoa@n+1
  8872  1B3B  0822               	movf	?___aodiv+2,w
  8873  1B3C  00C7               	movwf	dtoa@n+2
  8874  1B3D  0823               	movf	?___aodiv+3,w
  8875  1B3E  00C8               	movwf	dtoa@n+3
  8876  1B3F  0824               	movf	?___aodiv+4,w
  8877  1B40  00C9               	movwf	dtoa@n+4
  8878  1B41  0825               	movf	?___aodiv+5,w
  8879  1B42  00CA               	movwf	dtoa@n+5
  8880  1B43  0826               	movf	?___aodiv+6,w
  8881  1B44  00CB               	movwf	dtoa@n+6
  8882  1B45  0827               	movf	?___aodiv+7,w
  8883  1B46  00CC               	movwf	dtoa@n+7
  8884  1B47                     l662:	
  8885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  8886                           
  8887                           
  8888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8889  1B47  0020               	movlb	0	; select bank0
  8890  1B48  084E               	movf	dtoa@i+1,w
  8891  1B49  3A80               	xorlw	128
  8892  1B4A  00BA               	movwf	??_dtoa
  8893  1B4B  3080               	movlw	128
  8894  1B4C  023A               	subwf	??_dtoa,w
  8895  1B4D  1D03               	skipz
  8896  1B4E  2B51               	goto	u8375
  8897  1B4F  3001               	movlw	1
  8898  1B50  024D               	subwf	dtoa@i,w
  8899  1B51                     u8375:	
  8900  1B51  1803               	btfsc	3,0
  8901  1B52  2AB9               	goto	l6489
  8902  1B53                     l6497:	
  8903                           
  8904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8905  1B53  0020               	movlb	0	; select bank0
  8906  1B54  0843               	movf	dtoa@s,w
  8907  1B55  0444               	iorwf	dtoa@s+1,w
  8908  1B56  1D03               	btfss	3,2
  8909  1B57  2B5B               	goto	l6501
  8910  1B58  0022               	movlb	2	; select bank2
  8911  1B59  1D69               	btfss	_flags^(0+256),2
  8912  1B5A  2B73               	goto	l6511
  8913  1B5B                     l6501:	
  8914                           
  8915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8916  1B5B  30FF               	movlw	255
  8917  1B5C  0020               	movlb	0	; select bank0
  8918  1B5D  07CD               	addwf	dtoa@i,f
  8919  1B5E  30FF               	movlw	255
  8920  1B5F  3DCE               	addwfc	dtoa@i+1,f
  8921                           
  8922                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  8923  1B60  0843               	movf	dtoa@s,w
  8924  1B61  0444               	iorwf	dtoa@s+1,w
  8925  1B62  1D03               	btfss	3,2
  8926  1B63  2B66               	goto	l6507
  8927  1B64  302B               	movlw	43
  8928  1B65  2B67               	goto	L2
  8929  1B66                     l6507:	
  8930  1B66  302D               	movlw	45
  8931  1B67                     L2:	
  8932  1B67  00BD               	movwf	_dtoa$1201
  8933  1B68  3000               	movlw	0
  8934  1B69  00BE               	movwf	_dtoa$1201+1
  8935  1B6A  083D               	movf	_dtoa$1201,w
  8936  1B6B  00BA               	movwf	??_dtoa
  8937  1B6C  084D               	movf	dtoa@i,w
  8938  1B6D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8939  1B6E  0086               	movwf	6
  8940  1B6F  3002               	movlw	2	; select bank4/5
  8941  1B70  0087               	movwf	7
  8942  1B71  083A               	movf	??_dtoa,w
  8943  1B72  0081               	movwf	1
  8944  1B73                     l6511:	
  8945                           
  8946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  8947  1B73  0020               	movlb	0	; select bank0
  8948  1B74  0831               	movf	dtoa@fp+1,w
  8949  1B75  00A7               	movwf	pad@fp+1
  8950  1B76  0830               	movf	dtoa@fp,w
  8951  1B77  00A6               	movwf	pad@fp
  8952  1B78  084D               	movf	dtoa@i,w
  8953  1B79  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8954  1B7A  00BA               	movwf	??_dtoa
  8955  1B7B  083A               	movf	??_dtoa,w
  8956  1B7C  00A8               	movwf	pad@buf
  8957  1B7D  0842               	movf	dtoa@w+1,w
  8958  1B7E  00AA               	movwf	pad@p+1
  8959  1B7F  0841               	movf	dtoa@w,w
  8960  1B80  00A9               	movwf	pad@p
  8961  1B81  31A8  20E1         	fcall	_pad
  8962  1B83  0020               	movlb	0	; select bank0
  8963  1B84  0827               	movf	?_pad+1,w
  8964  1B85  00B1               	movwf	?_dtoa+1
  8965  1B86  0826               	movf	?_pad,w
  8966  1B87  00B0               	movwf	?_dtoa
  8967  1B88  0008               	return
  8968  1B89                     __end_of_dtoa:	
  8969                           
  8970                           	psect	text20
  8971  35A9                     __ptext20:	
  8972 ;; *************** function _abs *****************
  8973 ;; Defined at:
  8974 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  8975 ;; Parameters:    Size  Location     Type
  8976 ;;  a               2    4[COMMON] int 
  8977 ;; Auto vars:     Size  Location     Type
  8978 ;;		None
  8979 ;; Return value:  Size  Location     Type
  8980 ;;                  2    4[COMMON] int 
  8981 ;; Registers used:
  8982 ;;		wreg, status,2, status,0
  8983 ;; Tracked objects:
  8984 ;;		On entry : 0/0
  8985 ;;		On exit  : 0/0
  8986 ;;		Unchanged: 0/0
  8987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8990 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8991 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8992 ;;Total ram usage:        4 bytes
  8993 ;; Hardware stack levels used:    1
  8994 ;; Hardware stack levels required when called:    1
  8995 ;; This function calls:
  8996 ;;		Nothing
  8997 ;; This function is called by:
  8998 ;;		_dtoa
  8999 ;; This function uses a non-reentrant model
  9000 ;;
  9001                           
  9002                           
  9003                           ;psect for function _abs
  9004  35A9                     _abs:	
  9005                           
  9006                           ;incstack = 0
  9007                           ; Regs used in _abs: [wreg+status,2+status,0]
  9008  35A9  0875               	movf	abs@a+1,w
  9009  35AA  3A80               	xorlw	128
  9010  35AB  00F6               	movwf	??_abs
  9011  35AC  3080               	movlw	128
  9012  35AD  0276               	subwf	??_abs,w
  9013  35AE  1D03               	skipz
  9014  35AF  2DB2               	goto	u7825
  9015  35B0  3001               	movlw	1
  9016  35B1  0274               	subwf	abs@a,w
  9017  35B2                     u7825:	
  9018  35B2  1803               	skipnc
  9019  35B3  0008               	return
  9020  35B4  0974               	comf	abs@a,w
  9021  35B5  00F6               	movwf	??_abs
  9022  35B6  0975               	comf	abs@a+1,w
  9023  35B7  00F7               	movwf	??_abs+1
  9024  35B8  0AF6               	incf	??_abs,f
  9025  35B9  1903               	skipnz
  9026  35BA  0AF7               	incf	??_abs+1,f
  9027  35BB  0876               	movf	??_abs,w
  9028  35BC  00F4               	movwf	?_abs
  9029  35BD  0877               	movf	??_abs+1,w
  9030  35BE  00F5               	movwf	?_abs+1
  9031  35BF  0008               	return
  9032  35C0                     __end_of_abs:	
  9033                           
  9034                           	psect	text21
  9035  2365                     __ptext21:	
  9036 ;; *************** function ___aomod *****************
  9037 ;; Defined at:
  9038 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;  divisor         8    0[BANK0 ] long long 
  9041 ;;  dividend        8    8[BANK0 ] long long 
  9042 ;; Auto vars:     Size  Location     Type
  9043 ;;  sign            1    3[COMMON] unsigned char 
  9044 ;;  counter         1    2[COMMON] unsigned char 
  9045 ;; Return value:  Size  Location     Type
  9046 ;;                  8    0[BANK0 ] long long 
  9047 ;; Registers used:
  9048 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9049 ;; Tracked objects:
  9050 ;;		On entry : 0/0
  9051 ;;		On exit  : 0/0
  9052 ;;		Unchanged: 0/0
  9053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9054 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9057 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9058 ;;Total ram usage:       19 bytes
  9059 ;; Hardware stack levels used:    1
  9060 ;; Hardware stack levels required when called:    1
  9061 ;; This function calls:
  9062 ;;		Nothing
  9063 ;; This function is called by:
  9064 ;;		_dtoa
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067                           
  9068                           
  9069                           ;psect for function ___aomod
  9070  2365                     ___aomod:	
  9071                           
  9072                           ;incstack = 0
  9073                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9074  2365  01F3               	clrf	___aomod@sign
  9075  2366  3028               	movlw	low ___aomod@dividend
  9076  2367  0086               	movwf	6
  9077  2368  3000               	movlw	high ___aomod@dividend
  9078  2369  0087               	movwf	7
  9079  236A  3F47               	moviw [7]fsr1
  9080  236B  00F1               	movwf	??___aomod
  9081  236C  1FF1               	btfss	??___aomod,7
  9082  236D  2B8F               	goto	l6369
  9083  236E  0020               	movlb	0	; select bank0
  9084  236F  09A8               	comf	___aomod@dividend,f
  9085  2370  09A9               	comf	___aomod@dividend+1,f
  9086  2371  09AA               	comf	___aomod@dividend+2,f
  9087  2372  09AB               	comf	___aomod@dividend+3,f
  9088  2373  09AC               	comf	___aomod@dividend+4,f
  9089  2374  09AD               	comf	___aomod@dividend+5,f
  9090  2375  09AE               	comf	___aomod@dividend+6,f
  9091  2376  09AF               	comf	___aomod@dividend+7,f
  9092  2377  0AA8               	incf	___aomod@dividend,f
  9093  2378  1D03               	skipz
  9094  2379  2B8D               	goto	u808lld
  9095  237A  0AA9               	incf	___aomod@dividend+1,f
  9096  237B  1D03               	skipz
  9097  237C  2B8D               	goto	u808lld
  9098  237D  0AAA               	incf	___aomod@dividend+2,f
  9099  237E  1D03               	skipz
  9100  237F  2B8D               	goto	u808lld
  9101  2380  0AAB               	incf	___aomod@dividend+3,f
  9102  2381  1D03               	skipz
  9103  2382  2B8D               	goto	u808lld
  9104  2383  0AAC               	incf	___aomod@dividend+4,f
  9105  2384  1D03               	skipz
  9106  2385  2B8D               	goto	u808lld
  9107  2386  0AAD               	incf	___aomod@dividend+5,f
  9108  2387  1D03               	skipz
  9109  2388  2B8D               	goto	u808lld
  9110  2389  0AAE               	incf	___aomod@dividend+6,f
  9111  238A  1D03               	skipz
  9112  238B  2B8D               	goto	u808lld
  9113  238C  0AAF               	incf	___aomod@dividend+7,f
  9114  238D                     u808lld:	
  9115  238D  01F3               	clrf	___aomod@sign
  9116  238E  0AF3               	incf	___aomod@sign,f
  9117  238F                     l6369:	
  9118  238F  3020               	movlw	low ___aomod@divisor
  9119  2390  0086               	movwf	6
  9120  2391  3000               	movlw	high ___aomod@divisor
  9121  2392  0087               	movwf	7
  9122  2393  3F47               	moviw [7]fsr1
  9123  2394  00F1               	movwf	??___aomod
  9124  2395  1FF1               	btfss	??___aomod,7
  9125  2396  2BB6               	goto	l6373
  9126  2397  0020               	movlb	0	; select bank0
  9127  2398  09A0               	comf	___aomod@divisor,f
  9128  2399  09A1               	comf	___aomod@divisor+1,f
  9129  239A  09A2               	comf	___aomod@divisor+2,f
  9130  239B  09A3               	comf	___aomod@divisor+3,f
  9131  239C  09A4               	comf	___aomod@divisor+4,f
  9132  239D  09A5               	comf	___aomod@divisor+5,f
  9133  239E  09A6               	comf	___aomod@divisor+6,f
  9134  239F  09A7               	comf	___aomod@divisor+7,f
  9135  23A0  0AA0               	incf	___aomod@divisor,f
  9136  23A1  1D03               	skipz
  9137  23A2  2BB6               	goto	l6373
  9138  23A3  0AA1               	incf	___aomod@divisor+1,f
  9139  23A4  1D03               	skipz
  9140  23A5  2BB6               	goto	l6373
  9141  23A6  0AA2               	incf	___aomod@divisor+2,f
  9142  23A7  1D03               	skipz
  9143  23A8  2BB6               	goto	l6373
  9144  23A9  0AA3               	incf	___aomod@divisor+3,f
  9145  23AA  1D03               	skipz
  9146  23AB  2BB6               	goto	l6373
  9147  23AC  0AA4               	incf	___aomod@divisor+4,f
  9148  23AD  1D03               	skipz
  9149  23AE  2BB6               	goto	l6373
  9150  23AF  0AA5               	incf	___aomod@divisor+5,f
  9151  23B0  1D03               	skipz
  9152  23B1  2BB6               	goto	l6373
  9153  23B2  0AA6               	incf	___aomod@divisor+6,f
  9154  23B3  1D03               	skipz
  9155  23B4  2BB6               	goto	l6373
  9156  23B5  0AA7               	incf	___aomod@divisor+7,f
  9157  23B6                     l6373:	
  9158  23B6  0020               	movlb	0	; select bank0
  9159  23B7  0820               	movf	___aomod@divisor,w
  9160  23B8  0421               	iorwf	___aomod@divisor+1,w
  9161  23B9  0422               	iorwf	___aomod@divisor+2,w
  9162  23BA  0423               	iorwf	___aomod@divisor+3,w
  9163  23BB  0424               	iorwf	___aomod@divisor+4,w
  9164  23BC  0425               	iorwf	___aomod@divisor+5,w
  9165  23BD  0426               	iorwf	___aomod@divisor+6,w
  9166  23BE  0427               	iorwf	___aomod@divisor+7,w
  9167  23BF  1903               	skipnz
  9168  23C0  2C0E               	goto	l6389
  9169  23C1  01F2               	clrf	___aomod@counter
  9170  23C2  0AF2               	incf	___aomod@counter,f
  9171  23C3                     l6381:	
  9172  23C3  1BA7               	btfsc	___aomod@divisor+7,7
  9173  23C4  2BD2               	goto	l6383
  9174  23C5  35A0               	lslf	___aomod@divisor,f
  9175  23C6  0DA1               	rlf	___aomod@divisor+1,f
  9176  23C7  0DA2               	rlf	___aomod@divisor+2,f
  9177  23C8  0DA3               	rlf	___aomod@divisor+3,f
  9178  23C9  0DA4               	rlf	___aomod@divisor+4,f
  9179  23CA  0DA5               	rlf	___aomod@divisor+5,f
  9180  23CB  0DA6               	rlf	___aomod@divisor+6,f
  9181  23CC  0DA7               	rlf	___aomod@divisor+7,f
  9182  23CD  3001               	movlw	1
  9183  23CE  00F1               	movwf	??___aomod
  9184  23CF  0871               	movf	??___aomod,w
  9185  23D0  07F2               	addwf	___aomod@counter,f
  9186  23D1  2BC3               	goto	l6381
  9187  23D2                     l6383:	
  9188  23D2  0827               	movf	___aomod@divisor+7,w
  9189  23D3  022F               	subwf	___aomod@dividend+7,w
  9190  23D4  1D03               	skipz
  9191  23D5  2BF0               	goto	u8135
  9192  23D6  0826               	movf	___aomod@divisor+6,w
  9193  23D7  022E               	subwf	___aomod@dividend+6,w
  9194  23D8  1D03               	skipz
  9195  23D9  2BF0               	goto	u8135
  9196  23DA  0825               	movf	___aomod@divisor+5,w
  9197  23DB  022D               	subwf	___aomod@dividend+5,w
  9198  23DC  1D03               	skipz
  9199  23DD  2BF0               	goto	u8135
  9200  23DE  0824               	movf	___aomod@divisor+4,w
  9201  23DF  022C               	subwf	___aomod@dividend+4,w
  9202  23E0  1D03               	skipz
  9203  23E1  2BF0               	goto	u8135
  9204  23E2  0823               	movf	___aomod@divisor+3,w
  9205  23E3  022B               	subwf	___aomod@dividend+3,w
  9206  23E4  1D03               	skipz
  9207  23E5  2BF0               	goto	u8135
  9208  23E6  0822               	movf	___aomod@divisor+2,w
  9209  23E7  022A               	subwf	___aomod@dividend+2,w
  9210  23E8  1D03               	skipz
  9211  23E9  2BF0               	goto	u8135
  9212  23EA  0821               	movf	___aomod@divisor+1,w
  9213  23EB  0229               	subwf	___aomod@dividend+1,w
  9214  23EC  1D03               	skipz
  9215  23ED  2BF0               	goto	u8135
  9216  23EE  0820               	movf	___aomod@divisor,w
  9217  23EF  0228               	subwf	___aomod@dividend,w
  9218  23F0                     u8135:	
  9219  23F0  1C03               	skipc
  9220  23F1  2C02               	goto	l6387
  9221  23F2  0820               	movf	___aomod@divisor,w
  9222  23F3  02A8               	subwf	___aomod@dividend,f
  9223  23F4  0821               	movf	___aomod@divisor+1,w
  9224  23F5  3BA9               	subwfb	___aomod@dividend+1,f
  9225  23F6  0822               	movf	___aomod@divisor+2,w
  9226  23F7  3BAA               	subwfb	___aomod@dividend+2,f
  9227  23F8  0823               	movf	___aomod@divisor+3,w
  9228  23F9  3BAB               	subwfb	___aomod@dividend+3,f
  9229  23FA  0824               	movf	___aomod@divisor+4,w
  9230  23FB  3BAC               	subwfb	___aomod@dividend+4,f
  9231  23FC  0825               	movf	___aomod@divisor+5,w
  9232  23FD  3BAD               	subwfb	___aomod@dividend+5,f
  9233  23FE  0826               	movf	___aomod@divisor+6,w
  9234  23FF  3BAE               	subwfb	___aomod@dividend+6,f
  9235  2400  0827               	movf	___aomod@divisor+7,w
  9236  2401  3BAF               	subwfb	___aomod@dividend+7,f
  9237  2402                     l6387:	
  9238  2402  36A7               	lsrf	___aomod@divisor+7,f
  9239  2403  0CA6               	rrf	___aomod@divisor+6,f
  9240  2404  0CA5               	rrf	___aomod@divisor+5,f
  9241  2405  0CA4               	rrf	___aomod@divisor+4,f
  9242  2406  0CA3               	rrf	___aomod@divisor+3,f
  9243  2407  0CA2               	rrf	___aomod@divisor+2,f
  9244  2408  0CA1               	rrf	___aomod@divisor+1,f
  9245  2409  0CA0               	rrf	___aomod@divisor,f
  9246  240A  3001               	movlw	1
  9247  240B  02F2               	subwf	___aomod@counter,f
  9248  240C  1D03               	btfss	3,2
  9249  240D  2BD2               	goto	l6383
  9250  240E                     l6389:	
  9251  240E  0873               	movf	___aomod@sign,w
  9252  240F  1903               	btfsc	3,2
  9253  2410  2C2F               	goto	l959
  9254  2411  09A8               	comf	___aomod@dividend,f
  9255  2412  09A9               	comf	___aomod@dividend+1,f
  9256  2413  09AA               	comf	___aomod@dividend+2,f
  9257  2414  09AB               	comf	___aomod@dividend+3,f
  9258  2415  09AC               	comf	___aomod@dividend+4,f
  9259  2416  09AD               	comf	___aomod@dividend+5,f
  9260  2417  09AE               	comf	___aomod@dividend+6,f
  9261  2418  09AF               	comf	___aomod@dividend+7,f
  9262  2419  0AA8               	incf	___aomod@dividend,f
  9263  241A  1D03               	skipz
  9264  241B  2C2F               	goto	l959
  9265  241C  0AA9               	incf	___aomod@dividend+1,f
  9266  241D  1D03               	skipz
  9267  241E  2C2F               	goto	l959
  9268  241F  0AAA               	incf	___aomod@dividend+2,f
  9269  2420  1D03               	skipz
  9270  2421  2C2F               	goto	l959
  9271  2422  0AAB               	incf	___aomod@dividend+3,f
  9272  2423  1D03               	skipz
  9273  2424  2C2F               	goto	l959
  9274  2425  0AAC               	incf	___aomod@dividend+4,f
  9275  2426  1D03               	skipz
  9276  2427  2C2F               	goto	l959
  9277  2428  0AAD               	incf	___aomod@dividend+5,f
  9278  2429  1D03               	skipz
  9279  242A  2C2F               	goto	l959
  9280  242B  0AAE               	incf	___aomod@dividend+6,f
  9281  242C  1D03               	skipz
  9282  242D  2C2F               	goto	l959
  9283  242E  0AAF               	incf	___aomod@dividend+7,f
  9284  242F                     l959:	
  9285  242F  0020               	movlb	0	; select bank0
  9286  2430  0828               	movf	___aomod@dividend,w
  9287  2431  00A0               	movwf	?___aomod
  9288  2432  0829               	movf	___aomod@dividend+1,w
  9289  2433  00A1               	movwf	?___aomod+1
  9290  2434  082A               	movf	___aomod@dividend+2,w
  9291  2435  00A2               	movwf	?___aomod+2
  9292  2436  082B               	movf	___aomod@dividend+3,w
  9293  2437  00A3               	movwf	?___aomod+3
  9294  2438  082C               	movf	___aomod@dividend+4,w
  9295  2439  00A4               	movwf	?___aomod+4
  9296  243A  082D               	movf	___aomod@dividend+5,w
  9297  243B  00A5               	movwf	?___aomod+5
  9298  243C  082E               	movf	___aomod@dividend+6,w
  9299  243D  00A6               	movwf	?___aomod+6
  9300  243E  082F               	movf	___aomod@dividend+7,w
  9301  243F  00A7               	movwf	?___aomod+7
  9302  2440  0008               	return
  9303  2441                     __end_of___aomod:	
  9304                           
  9305                           	psect	text22
  9306  2613                     __ptext22:	
  9307 ;; *************** function ___aodiv *****************
  9308 ;; Defined at:
  9309 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9310 ;; Parameters:    Size  Location     Type
  9311 ;;  divisor         8    0[BANK0 ] long long 
  9312 ;;  dividend        8    8[BANK0 ] long long 
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;  quotient        8    4[COMMON] long long 
  9315 ;;  sign            1    3[COMMON] unsigned char 
  9316 ;;  counter         1    2[COMMON] unsigned char 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  8    0[BANK0 ] long long 
  9319 ;; Registers used:
  9320 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9321 ;; Tracked objects:
  9322 ;;		On entry : 0/0
  9323 ;;		On exit  : 0/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9326 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9327 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9328 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9329 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9330 ;;Total ram usage:       27 bytes
  9331 ;; Hardware stack levels used:    1
  9332 ;; Hardware stack levels required when called:    1
  9333 ;; This function calls:
  9334 ;;		Nothing
  9335 ;; This function is called by:
  9336 ;;		_dtoa
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           
  9341                           ;psect for function ___aodiv
  9342  2613                     ___aodiv:	
  9343                           
  9344                           ;incstack = 0
  9345                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9346  2613  01F3               	clrf	___aodiv@sign
  9347  2614  3020               	movlw	low ___aodiv@divisor
  9348  2615  0086               	movwf	6
  9349  2616  3000               	movlw	high ___aodiv@divisor
  9350  2617  0087               	movwf	7
  9351  2618  3F47               	moviw [7]fsr1
  9352  2619  00F1               	movwf	??___aodiv
  9353  261A  1FF1               	btfss	??___aodiv,7
  9354  261B  2E3D               	goto	l6331
  9355  261C  0020               	movlb	0	; select bank0
  9356  261D  09A0               	comf	___aodiv@divisor,f
  9357  261E  09A1               	comf	___aodiv@divisor+1,f
  9358  261F  09A2               	comf	___aodiv@divisor+2,f
  9359  2620  09A3               	comf	___aodiv@divisor+3,f
  9360  2621  09A4               	comf	___aodiv@divisor+4,f
  9361  2622  09A5               	comf	___aodiv@divisor+5,f
  9362  2623  09A6               	comf	___aodiv@divisor+6,f
  9363  2624  09A7               	comf	___aodiv@divisor+7,f
  9364  2625  0AA0               	incf	___aodiv@divisor,f
  9365  2626  1D03               	skipz
  9366  2627  2E3B               	goto	u797lld
  9367  2628  0AA1               	incf	___aodiv@divisor+1,f
  9368  2629  1D03               	skipz
  9369  262A  2E3B               	goto	u797lld
  9370  262B  0AA2               	incf	___aodiv@divisor+2,f
  9371  262C  1D03               	skipz
  9372  262D  2E3B               	goto	u797lld
  9373  262E  0AA3               	incf	___aodiv@divisor+3,f
  9374  262F  1D03               	skipz
  9375  2630  2E3B               	goto	u797lld
  9376  2631  0AA4               	incf	___aodiv@divisor+4,f
  9377  2632  1D03               	skipz
  9378  2633  2E3B               	goto	u797lld
  9379  2634  0AA5               	incf	___aodiv@divisor+5,f
  9380  2635  1D03               	skipz
  9381  2636  2E3B               	goto	u797lld
  9382  2637  0AA6               	incf	___aodiv@divisor+6,f
  9383  2638  1D03               	skipz
  9384  2639  2E3B               	goto	u797lld
  9385  263A  0AA7               	incf	___aodiv@divisor+7,f
  9386  263B                     u797lld:	
  9387  263B  01F3               	clrf	___aodiv@sign
  9388  263C  0AF3               	incf	___aodiv@sign,f
  9389  263D                     l6331:	
  9390  263D  3028               	movlw	low ___aodiv@dividend
  9391  263E  0086               	movwf	6
  9392  263F  3000               	movlw	high ___aodiv@dividend
  9393  2640  0087               	movwf	7
  9394  2641  3F47               	moviw [7]fsr1
  9395  2642  00F1               	movwf	??___aodiv
  9396  2643  1FF1               	btfss	??___aodiv,7
  9397  2644  2E68               	goto	l6337
  9398  2645  0020               	movlb	0	; select bank0
  9399  2646  09A8               	comf	___aodiv@dividend,f
  9400  2647  09A9               	comf	___aodiv@dividend+1,f
  9401  2648  09AA               	comf	___aodiv@dividend+2,f
  9402  2649  09AB               	comf	___aodiv@dividend+3,f
  9403  264A  09AC               	comf	___aodiv@dividend+4,f
  9404  264B  09AD               	comf	___aodiv@dividend+5,f
  9405  264C  09AE               	comf	___aodiv@dividend+6,f
  9406  264D  09AF               	comf	___aodiv@dividend+7,f
  9407  264E  0AA8               	incf	___aodiv@dividend,f
  9408  264F  1D03               	skipz
  9409  2650  2E64               	goto	l6335
  9410  2651  0AA9               	incf	___aodiv@dividend+1,f
  9411  2652  1D03               	skipz
  9412  2653  2E64               	goto	l6335
  9413  2654  0AAA               	incf	___aodiv@dividend+2,f
  9414  2655  1D03               	skipz
  9415  2656  2E64               	goto	l6335
  9416  2657  0AAB               	incf	___aodiv@dividend+3,f
  9417  2658  1D03               	skipz
  9418  2659  2E64               	goto	l6335
  9419  265A  0AAC               	incf	___aodiv@dividend+4,f
  9420  265B  1D03               	skipz
  9421  265C  2E64               	goto	l6335
  9422  265D  0AAD               	incf	___aodiv@dividend+5,f
  9423  265E  1D03               	skipz
  9424  265F  2E64               	goto	l6335
  9425  2660  0AAE               	incf	___aodiv@dividend+6,f
  9426  2661  1D03               	skipz
  9427  2662  2E64               	goto	l6335
  9428  2663  0AAF               	incf	___aodiv@dividend+7,f
  9429  2664                     l6335:	
  9430  2664  3001               	movlw	1
  9431  2665  00F1               	movwf	??___aodiv
  9432  2666  0871               	movf	??___aodiv,w
  9433  2667  06F3               	xorwf	___aodiv@sign,f
  9434  2668                     l6337:	
  9435  2668  3074               	movlw	low ___aodiv@quotient
  9436  2669  0086               	movwf	6
  9437  266A  3000               	movlw	high ___aodiv@quotient
  9438  266B  0087               	movwf	7
  9439  266C  3008               	movlw	8
  9440  266D  00F1               	movwf	??___aodiv
  9441  266E  3000               	movlw	0
  9442  266F                     u8000:	
  9443  266F  001E               	movwi fsr1++
  9444  2670  0BF1               	decfsz	??___aodiv,f
  9445  2671  2E6F               	goto	u8000
  9446  2672  0020               	movlb	0	; select bank0
  9447  2673  0820               	movf	___aodiv@divisor,w
  9448  2674  0421               	iorwf	___aodiv@divisor+1,w
  9449  2675  0422               	iorwf	___aodiv@divisor+2,w
  9450  2676  0423               	iorwf	___aodiv@divisor+3,w
  9451  2677  0424               	iorwf	___aodiv@divisor+4,w
  9452  2678  0425               	iorwf	___aodiv@divisor+5,w
  9453  2679  0426               	iorwf	___aodiv@divisor+6,w
  9454  267A  0427               	iorwf	___aodiv@divisor+7,w
  9455  267B  1903               	skipnz
  9456  267C  2ED3               	goto	l6359
  9457  267D  01F2               	clrf	___aodiv@counter
  9458  267E  0AF2               	incf	___aodiv@counter,f
  9459  267F                     l6347:	
  9460  267F  1BA7               	btfsc	___aodiv@divisor+7,7
  9461  2680  2E8E               	goto	l6349
  9462  2681  35A0               	lslf	___aodiv@divisor,f
  9463  2682  0DA1               	rlf	___aodiv@divisor+1,f
  9464  2683  0DA2               	rlf	___aodiv@divisor+2,f
  9465  2684  0DA3               	rlf	___aodiv@divisor+3,f
  9466  2685  0DA4               	rlf	___aodiv@divisor+4,f
  9467  2686  0DA5               	rlf	___aodiv@divisor+5,f
  9468  2687  0DA6               	rlf	___aodiv@divisor+6,f
  9469  2688  0DA7               	rlf	___aodiv@divisor+7,f
  9470  2689  3001               	movlw	1
  9471  268A  00F1               	movwf	??___aodiv
  9472  268B  0871               	movf	??___aodiv,w
  9473  268C  07F2               	addwf	___aodiv@counter,f
  9474  268D  2E7F               	goto	l6347
  9475  268E                     l6349:	
  9476  268E  35F4               	lslf	___aodiv@quotient,f
  9477  268F  0DF5               	rlf	___aodiv@quotient+1,f
  9478  2690  0DF6               	rlf	___aodiv@quotient+2,f
  9479  2691  0DF7               	rlf	___aodiv@quotient+3,f
  9480  2692  0DF8               	rlf	___aodiv@quotient+4,f
  9481  2693  0DF9               	rlf	___aodiv@quotient+5,f
  9482  2694  0DFA               	rlf	___aodiv@quotient+6,f
  9483  2695  0DFB               	rlf	___aodiv@quotient+7,f
  9484  2696  0827               	movf	___aodiv@divisor+7,w
  9485  2697  022F               	subwf	___aodiv@dividend+7,w
  9486  2698  1D03               	skipz
  9487  2699  2EB4               	goto	u8035
  9488  269A  0826               	movf	___aodiv@divisor+6,w
  9489  269B  022E               	subwf	___aodiv@dividend+6,w
  9490  269C  1D03               	skipz
  9491  269D  2EB4               	goto	u8035
  9492  269E  0825               	movf	___aodiv@divisor+5,w
  9493  269F  022D               	subwf	___aodiv@dividend+5,w
  9494  26A0  1D03               	skipz
  9495  26A1  2EB4               	goto	u8035
  9496  26A2  0824               	movf	___aodiv@divisor+4,w
  9497  26A3  022C               	subwf	___aodiv@dividend+4,w
  9498  26A4  1D03               	skipz
  9499  26A5  2EB4               	goto	u8035
  9500  26A6  0823               	movf	___aodiv@divisor+3,w
  9501  26A7  022B               	subwf	___aodiv@dividend+3,w
  9502  26A8  1D03               	skipz
  9503  26A9  2EB4               	goto	u8035
  9504  26AA  0822               	movf	___aodiv@divisor+2,w
  9505  26AB  022A               	subwf	___aodiv@dividend+2,w
  9506  26AC  1D03               	skipz
  9507  26AD  2EB4               	goto	u8035
  9508  26AE  0821               	movf	___aodiv@divisor+1,w
  9509  26AF  0229               	subwf	___aodiv@dividend+1,w
  9510  26B0  1D03               	skipz
  9511  26B1  2EB4               	goto	u8035
  9512  26B2  0820               	movf	___aodiv@divisor,w
  9513  26B3  0228               	subwf	___aodiv@dividend,w
  9514  26B4                     u8035:	
  9515  26B4  1C03               	skipc
  9516  26B5  2EC7               	goto	l6357
  9517  26B6  0820               	movf	___aodiv@divisor,w
  9518  26B7  02A8               	subwf	___aodiv@dividend,f
  9519  26B8  0821               	movf	___aodiv@divisor+1,w
  9520  26B9  3BA9               	subwfb	___aodiv@dividend+1,f
  9521  26BA  0822               	movf	___aodiv@divisor+2,w
  9522  26BB  3BAA               	subwfb	___aodiv@dividend+2,f
  9523  26BC  0823               	movf	___aodiv@divisor+3,w
  9524  26BD  3BAB               	subwfb	___aodiv@dividend+3,f
  9525  26BE  0824               	movf	___aodiv@divisor+4,w
  9526  26BF  3BAC               	subwfb	___aodiv@dividend+4,f
  9527  26C0  0825               	movf	___aodiv@divisor+5,w
  9528  26C1  3BAD               	subwfb	___aodiv@dividend+5,f
  9529  26C2  0826               	movf	___aodiv@divisor+6,w
  9530  26C3  3BAE               	subwfb	___aodiv@dividend+6,f
  9531  26C4  0827               	movf	___aodiv@divisor+7,w
  9532  26C5  3BAF               	subwfb	___aodiv@dividend+7,f
  9533  26C6  1474               	bsf	___aodiv@quotient,0
  9534  26C7                     l6357:	
  9535  26C7  36A7               	lsrf	___aodiv@divisor+7,f
  9536  26C8  0CA6               	rrf	___aodiv@divisor+6,f
  9537  26C9  0CA5               	rrf	___aodiv@divisor+5,f
  9538  26CA  0CA4               	rrf	___aodiv@divisor+4,f
  9539  26CB  0CA3               	rrf	___aodiv@divisor+3,f
  9540  26CC  0CA2               	rrf	___aodiv@divisor+2,f
  9541  26CD  0CA1               	rrf	___aodiv@divisor+1,f
  9542  26CE  0CA0               	rrf	___aodiv@divisor,f
  9543  26CF  3001               	movlw	1
  9544  26D0  02F2               	subwf	___aodiv@counter,f
  9545  26D1  1D03               	btfss	3,2
  9546  26D2  2E8E               	goto	l6349
  9547  26D3                     l6359:	
  9548  26D3  0873               	movf	___aodiv@sign,w
  9549  26D4  1903               	btfsc	3,2
  9550  26D5  2EF4               	goto	l946
  9551  26D6  09F4               	comf	___aodiv@quotient,f
  9552  26D7  09F5               	comf	___aodiv@quotient+1,f
  9553  26D8  09F6               	comf	___aodiv@quotient+2,f
  9554  26D9  09F7               	comf	___aodiv@quotient+3,f
  9555  26DA  09F8               	comf	___aodiv@quotient+4,f
  9556  26DB  09F9               	comf	___aodiv@quotient+5,f
  9557  26DC  09FA               	comf	___aodiv@quotient+6,f
  9558  26DD  09FB               	comf	___aodiv@quotient+7,f
  9559  26DE  0AF4               	incf	___aodiv@quotient,f
  9560  26DF  1D03               	skipz
  9561  26E0  2EF4               	goto	l946
  9562  26E1  0AF5               	incf	___aodiv@quotient+1,f
  9563  26E2  1D03               	skipz
  9564  26E3  2EF4               	goto	l946
  9565  26E4  0AF6               	incf	___aodiv@quotient+2,f
  9566  26E5  1D03               	skipz
  9567  26E6  2EF4               	goto	l946
  9568  26E7  0AF7               	incf	___aodiv@quotient+3,f
  9569  26E8  1D03               	skipz
  9570  26E9  2EF4               	goto	l946
  9571  26EA  0AF8               	incf	___aodiv@quotient+4,f
  9572  26EB  1D03               	skipz
  9573  26EC  2EF4               	goto	l946
  9574  26ED  0AF9               	incf	___aodiv@quotient+5,f
  9575  26EE  1D03               	skipz
  9576  26EF  2EF4               	goto	l946
  9577  26F0  0AFA               	incf	___aodiv@quotient+6,f
  9578  26F1  1D03               	skipz
  9579  26F2  2EF4               	goto	l946
  9580  26F3  0AFB               	incf	___aodiv@quotient+7,f
  9581  26F4                     l946:	
  9582  26F4  0874               	movf	___aodiv@quotient,w
  9583  26F5  0020               	movlb	0	; select bank0
  9584  26F6  00A0               	movwf	?___aodiv
  9585  26F7  0875               	movf	___aodiv@quotient+1,w
  9586  26F8  00A1               	movwf	?___aodiv+1
  9587  26F9  0876               	movf	___aodiv@quotient+2,w
  9588  26FA  00A2               	movwf	?___aodiv+2
  9589  26FB  0877               	movf	___aodiv@quotient+3,w
  9590  26FC  00A3               	movwf	?___aodiv+3
  9591  26FD  0878               	movf	___aodiv@quotient+4,w
  9592  26FE  00A4               	movwf	?___aodiv+4
  9593  26FF  0879               	movf	___aodiv@quotient+5,w
  9594  2700  00A5               	movwf	?___aodiv+5
  9595  2701  087A               	movf	___aodiv@quotient+6,w
  9596  2702  00A6               	movwf	?___aodiv+6
  9597  2703  087B               	movf	___aodiv@quotient+7,w
  9598  2704  00A7               	movwf	?___aodiv+7
  9599  2705  0008               	return
  9600  2706                     __end_of___aodiv:	
  9601                           
  9602                           	psect	text23
  9603  36CF                     __ptext23:	
  9604 ;; *************** function _ctoa *****************
  9605 ;; Defined at:
  9606 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9609 ;;		 -> vsnprintf@f(6), 
  9610 ;;  c               1   18[BANK0 ] unsigned char 
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;  w               2   20[BANK0 ] int 
  9613 ;;  l               2    0        int 
  9614 ;; Return value:  Size  Location     Type
  9615 ;;                  2   16[BANK0 ] int 
  9616 ;; Registers used:
  9617 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9618 ;; Tracked objects:
  9619 ;;		On entry : 0/0
  9620 ;;		On exit  : 0/0
  9621 ;;		Unchanged: 0/0
  9622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9623 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9624 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9625 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9626 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9627 ;;Total ram usage:        6 bytes
  9628 ;; Hardware stack levels used:    1
  9629 ;; Hardware stack levels required when called:    5
  9630 ;; This function calls:
  9631 ;;		_pad
  9632 ;; This function is called by:
  9633 ;;		_vfpfcnvrt
  9634 ;; This function uses a non-reentrant model
  9635 ;;
  9636                           
  9637                           
  9638                           ;psect for function _ctoa
  9639  36CF                     _ctoa:	
  9640                           
  9641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9642                           
  9643                           ;incstack = 0
  9644                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9645  36CF  0022               	movlb	2	; select bank2
  9646  36D0  0865               	movf	_width^(0+256),w
  9647  36D1  0466               	iorwf	(_width+1)^(0+256),w
  9648  36D2  1D03               	btfss	3,2
  9649  36D3  2EDC               	goto	l6447
  9650  36D4  0866               	movf	(_width+1)^(0+256),w
  9651  36D5  0020               	movlb	0	; select bank0
  9652  36D6  00B5               	movwf	ctoa@w+1
  9653  36D7  0022               	movlb	2	; select bank2
  9654  36D8  0865               	movf	_width^(0+256),w
  9655  36D9  0020               	movlb	0	; select bank0
  9656  36DA  00B4               	movwf	ctoa@w
  9657  36DB  2EE5               	goto	l6449
  9658  36DC                     l6447:	
  9659  36DC  0865               	movf	_width^(0+256),w
  9660  36DD  3EFF               	addlw	255
  9661  36DE  0020               	movlb	0	; select bank0
  9662  36DF  00B4               	movwf	ctoa@w
  9663  36E0  30FF               	movlw	255
  9664  36E1  0022               	movlb	2	; select bank2
  9665  36E2  3D66               	addwfc	(_width+1)^(0+256),w
  9666  36E3  0020               	movlb	0	; select bank0
  9667  36E4  00B5               	movwf	ctoa@w+1
  9668  36E5                     l6449:	
  9669                           
  9670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9671  36E5  0832               	movf	ctoa@c,w
  9672  36E6  00B3               	movwf	??_ctoa
  9673  36E7  0833               	movf	??_ctoa,w
  9674  36E8  0024               	movlb	4	; select bank4
  9675  36E9  00A0               	movwf	_dbuf^(0+512)
  9676                           
  9677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9678  36EA  01A1               	clrf	(_dbuf^(0+512)+1)
  9679                           
  9680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9681  36EB  0020               	movlb	0	; select bank0
  9682  36EC  0831               	movf	ctoa@fp+1,w
  9683  36ED  00A7               	movwf	pad@fp+1
  9684  36EE  0830               	movf	ctoa@fp,w
  9685  36EF  00A6               	movwf	pad@fp
  9686  36F0  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9687  36F1  00B3               	movwf	??_ctoa
  9688  36F2  0833               	movf	??_ctoa,w
  9689  36F3  00A8               	movwf	pad@buf
  9690  36F4  0835               	movf	ctoa@w+1,w
  9691  36F5  00AA               	movwf	pad@p+1
  9692  36F6  0834               	movf	ctoa@w,w
  9693  36F7  00A9               	movwf	pad@p
  9694  36F8  31A8  20E1         	fcall	_pad
  9695  36FA  0020               	movlb	0	; select bank0
  9696  36FB  0827               	movf	?_pad+1,w
  9697  36FC  00B1               	movwf	?_ctoa+1
  9698  36FD  0826               	movf	?_pad,w
  9699  36FE  00B0               	movwf	?_ctoa
  9700  36FF  0008               	return
  9701  3700                     __end_of_ctoa:	
  9702                           
  9703                           	psect	text24
  9704  28E1                     __ptext24:	
  9705 ;; *************** function _pad *****************
  9706 ;; Defined at:
  9707 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  9710 ;;		 -> vsnprintf@f(6), 
  9711 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  9712 ;;		 -> dbuf(32), 
  9713 ;;  p               2    9[BANK0 ] int 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;  w               2   14[BANK0 ] int 
  9716 ;;  i               2   12[BANK0 ] int 
  9717 ;; Return value:  Size  Location     Type
  9718 ;;                  2    6[BANK0 ] int 
  9719 ;; Registers used:
  9720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9721 ;; Tracked objects:
  9722 ;;		On entry : 0/0
  9723 ;;		On exit  : 0/0
  9724 ;;		Unchanged: 0/0
  9725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9726 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9727 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9728 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9729 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9730 ;;Total ram usage:       10 bytes
  9731 ;; Hardware stack levels used:    1
  9732 ;; Hardware stack levels required when called:    4
  9733 ;; This function calls:
  9734 ;;		_fputc
  9735 ;;		_fputs
  9736 ;;		_strlen
  9737 ;; This function is called by:
  9738 ;;		_ctoa
  9739 ;;		_dtoa
  9740 ;;		_otoa
  9741 ;;		_utoa
  9742 ;;		_xtoa
  9743 ;; This function uses a non-reentrant model
  9744 ;;
  9745                           
  9746                           
  9747                           ;psect for function _pad
  9748  28E1                     _pad:	
  9749                           
  9750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9751                           
  9752                           ;incstack = 0
  9753                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9754  28E1  0022               	movlb	2	; select bank2
  9755  28E2  1C69               	btfss	_flags^(0+256),0
  9756  28E3  28ED               	goto	l6267
  9757                           
  9758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9759  28E4  0020               	movlb	0	; select bank0
  9760  28E5  0827               	movf	pad@fp+1,w
  9761  28E6  00FB               	movwf	fputs@fp+1
  9762  28E7  0826               	movf	pad@fp,w
  9763  28E8  00FA               	movwf	fputs@fp
  9764  28E9  0828               	movf	pad@buf,w
  9765  28EA  3187  27D7  31A8   	fcall	_fputs
  9766  28ED                     l6267:	
  9767                           
  9768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9769  28ED  0020               	movlb	0	; select bank0
  9770  28EE  1BAA               	btfsc	pad@p+1,7
  9771  28EF  28F5               	goto	l6271
  9772  28F0  082A               	movf	pad@p+1,w
  9773  28F1  00AF               	movwf	pad@w+1
  9774  28F2  0829               	movf	pad@p,w
  9775  28F3  00AE               	movwf	pad@w
  9776  28F4  28F7               	goto	l638
  9777  28F5                     l6271:	
  9778  28F5  01AE               	clrf	pad@w
  9779  28F6  01AF               	clrf	pad@w+1
  9780  28F7                     l638:	
  9781                           
  9782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9783  28F7  01AC               	clrf	pad@i
  9784  28F8  01AD               	clrf	pad@i+1
  9785  28F9                     l6277:	
  9786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9787                           
  9788                           
  9789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9790  28F9  082D               	movf	pad@i+1,w
  9791  28FA  3A80               	xorlw	128
  9792  28FB  00AB               	movwf	??_pad
  9793  28FC  082F               	movf	pad@w+1,w
  9794  28FD  3A80               	xorlw	128
  9795  28FE  022B               	subwf	??_pad,w
  9796  28FF  1D03               	skipz
  9797  2900  2903               	goto	u7805
  9798  2901  082E               	movf	pad@w,w
  9799  2902  022C               	subwf	pad@i,w
  9800  2903                     u7805:	
  9801  2903  1803               	btfsc	3,0
  9802  2904  2917               	goto	l641
  9803                           
  9804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9805  2905  3020               	movlw	32
  9806  2906  00F1               	movwf	fputc@c
  9807  2907  3000               	movlw	0
  9808  2908  00F2               	movwf	fputc@c+1
  9809  2909  0020               	movlb	0	; select bank0
  9810  290A  0827               	movf	pad@fp+1,w
  9811  290B  00F4               	movwf	fputc@fp+1
  9812  290C  0826               	movf	pad@fp,w
  9813  290D  00F3               	movwf	fputc@fp
  9814  290E  31A9  2184  31A8   	fcall	_fputc
  9815                           
  9816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9817  2911  3001               	movlw	1
  9818  2912  0020               	movlb	0	; select bank0
  9819  2913  07AC               	addwf	pad@i,f
  9820  2914  3000               	movlw	0
  9821  2915  3DAD               	addwfc	pad@i+1,f
  9822  2916  28F9               	goto	l6277
  9823  2917                     l641:	
  9824                           
  9825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9826  2917  0022               	movlb	2	; select bank2
  9827  2918  1869               	btfsc	_flags^(0+256),0
  9828  2919  2923               	goto	l6281
  9829                           
  9830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9831  291A  0020               	movlb	0	; select bank0
  9832  291B  0827               	movf	pad@fp+1,w
  9833  291C  00FB               	movwf	fputs@fp+1
  9834  291D  0826               	movf	pad@fp,w
  9835  291E  00FA               	movwf	fputs@fp
  9836  291F  0828               	movf	pad@buf,w
  9837  2920  3187  27D7  31A8   	fcall	_fputs
  9838  2923                     l6281:	
  9839                           
  9840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9841  2923  0020               	movlb	0	; select bank0
  9842  2924  0828               	movf	pad@buf,w
  9843  2925  00F1               	movwf	strlen@s
  9844  2926  3002               	movlw	2
  9845  2927  00F2               	movwf	strlen@s+1
  9846  2928  31B5  2592         	fcall	_strlen
  9847  292A  0020               	movlb	0	; select bank0
  9848  292B  082E               	movf	pad@w,w
  9849  292C  0771               	addwf	?_strlen,w
  9850  292D  00A6               	movwf	?_pad
  9851  292E  082F               	movf	pad@w+1,w
  9852  292F  3D72               	addwfc	?_strlen+1,w
  9853  2930  00A7               	movwf	?_pad+1
  9854  2931  0008               	return
  9855  2932                     __end_of_pad:	
  9856                           
  9857                           	psect	text25
  9858  3592                     __ptext25:	
  9859 ;; *************** function _strlen *****************
  9860 ;; Defined at:
  9861 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9862 ;; Parameters:    Size  Location     Type
  9863 ;;  s               2    1[COMMON] PTR const unsigned char 
  9864 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
  9865 ;;		 -> adcGain(2), 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  a               2    3[COMMON] PTR const unsigned char 
  9868 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
  9869 ;;		 -> adcGain(2), 
  9870 ;; Return value:  Size  Location     Type
  9871 ;;                  2    1[COMMON] unsigned int 
  9872 ;; Registers used:
  9873 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9874 ;; Tracked objects:
  9875 ;;		On entry : 0/0
  9876 ;;		On exit  : 0/0
  9877 ;;		Unchanged: 0/0
  9878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9880 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9882 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9883 ;;Total ram usage:        4 bytes
  9884 ;; Hardware stack levels used:    1
  9885 ;; Hardware stack levels required when called:    1
  9886 ;; This function calls:
  9887 ;;		Nothing
  9888 ;; This function is called by:
  9889 ;;		_pad
  9890 ;;		_stoa
  9891 ;; This function uses a non-reentrant model
  9892 ;;
  9893                           
  9894                           
  9895                           ;psect for function _strlen
  9896  3592                     _strlen:	
  9897                           
  9898                           ;incstack = 0
  9899                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9900  3592  0872               	movf	strlen@s+1,w
  9901  3593  00F4               	movwf	strlen@a+1
  9902  3594  0871               	movf	strlen@s,w
  9903  3595  00F3               	movwf	strlen@a
  9904  3596                     l6253:	
  9905  3596  0871               	movf	strlen@s,w
  9906  3597  0086               	movwf	6
  9907  3598  0872               	movf	strlen@s+1,w
  9908  3599  0087               	movwf	7
  9909  359A  0801               	movf	1,w
  9910  359B  1903               	btfsc	3,2
  9911  359C  2DA2               	goto	l6255
  9912  359D  3001               	movlw	1
  9913  359E  07F1               	addwf	strlen@s,f
  9914  359F  3000               	movlw	0
  9915  35A0  3DF2               	addwfc	strlen@s+1,f
  9916  35A1  2D96               	goto	l6253
  9917  35A2                     l6255:	
  9918  35A2  0873               	movf	strlen@a,w
  9919  35A3  0271               	subwf	strlen@s,w
  9920  35A4  00F1               	movwf	?_strlen
  9921  35A5  0874               	movf	strlen@a+1,w
  9922  35A6  3B72               	subwfb	strlen@s+1,w
  9923  35A7  00F2               	movwf	?_strlen+1
  9924  35A8  0008               	return
  9925  35A9                     __end_of_strlen:	
  9926                           
  9927                           	psect	text26
  9928  07D7                     __ptext26:	
  9929 ;; *************** function _fputs *****************
  9930 ;; Defined at:
  9931 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  9932 ;; Parameters:    Size  Location     Type
  9933 ;;  s               1    wreg     PTR const unsigned char 
  9934 ;;		 -> dbuf(32), 
  9935 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
  9936 ;;		 -> vsnprintf@f(6), 
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  9939 ;;		 -> dbuf(32), 
  9940 ;;  i               2    3[BANK0 ] int 
  9941 ;;  c               1    2[BANK0 ] unsigned char 
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  2   10[COMMON] int 
  9944 ;; Registers used:
  9945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9952 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9953 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9954 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9955 ;;Total ram usage:        8 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; Hardware stack levels required when called:    3
  9958 ;; This function calls:
  9959 ;;		_fputc
  9960 ;; This function is called by:
  9961 ;;		_pad
  9962 ;; This function uses a non-reentrant model
  9963 ;;
  9964                           
  9965                           
  9966                           ;psect for function _fputs
  9967  07D7                     _fputs:	
  9968                           
  9969                           ;incstack = 0
  9970                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9971                           ;fputs@s stored from wreg
  9972  07D7  0020               	movlb	0	; select bank0
  9973  07D8  00A5               	movwf	fputs@s
  9974  07D9  01A3               	clrf	fputs@i
  9975  07DA  01A4               	clrf	fputs@i+1
  9976  07DB                     l6247:	
  9977  07DB  0823               	movf	fputs@i,w
  9978  07DC  0725               	addwf	fputs@s,w
  9979  07DD  00A0               	movwf	??_fputs
  9980  07DE  0820               	movf	??_fputs,w
  9981  07DF  0086               	movwf	6
  9982  07E0  3002               	movlw	2	; select bank4/5
  9983  07E1  0087               	movwf	7
  9984  07E2  0801               	movf	1,w
  9985  07E3  00A1               	movwf	??_fputs+1
  9986  07E4  0821               	movf	??_fputs+1,w
  9987  07E5  00A2               	movwf	fputs@c
  9988  07E6  0822               	movf	fputs@c,w
  9989  07E7  1903               	btfsc	3,2
  9990  07E8  0008               	return
  9991  07E9  0822               	movf	fputs@c,w
  9992  07EA  00A0               	movwf	??_fputs
  9993  07EB  01A1               	clrf	??_fputs+1
  9994  07EC  0820               	movf	??_fputs,w
  9995  07ED  00F1               	movwf	fputc@c
  9996  07EE  0821               	movf	??_fputs+1,w
  9997  07EF  00F2               	movwf	fputc@c+1
  9998  07F0  087B               	movf	fputs@fp+1,w
  9999  07F1  00F4               	movwf	fputc@fp+1
 10000  07F2  087A               	movf	fputs@fp,w
 10001  07F3  00F3               	movwf	fputc@fp
 10002  07F4  31A9  2184  3187   	fcall	_fputc
 10003  07F7  3001               	movlw	1
 10004  07F8  0020               	movlb	0	; select bank0
 10005  07F9  07A3               	addwf	fputs@i,f
 10006  07FA  3000               	movlw	0
 10007  07FB  3DA4               	addwfc	fputs@i+1,f
 10008  07FC  2FDB               	goto	l6247
 10009  07FD                     __end_of_fputs:	
 10010                           
 10011                           	psect	text27
 10012  2984                     __ptext27:	
 10013 ;; *************** function _fputc *****************
 10014 ;; Defined at:
 10015 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10016 ;; Parameters:    Size  Location     Type
 10017 ;;  c               2    1[COMMON] int 
 10018 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10019 ;;		 -> vsnprintf@f(6), 
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;		None
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  2    1[COMMON] int 
 10024 ;; Registers used:
 10025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10033 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10034 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10035 ;;Total ram usage:        9 bytes
 10036 ;; Hardware stack levels used:    1
 10037 ;; Hardware stack levels required when called:    2
 10038 ;; This function calls:
 10039 ;;		_putch
 10040 ;; This function is called by:
 10041 ;;		_pad
 10042 ;;		_stoa
 10043 ;;		_vfpfcnvrt
 10044 ;;		_fputs
 10045 ;; This function uses a non-reentrant model
 10046 ;;
 10047                           
 10048                           
 10049                           ;psect for function _fputc
 10050  2984                     _fputc:	
 10051                           
 10052                           ;incstack = 0
 10053                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10054  2984  0873               	movf	fputc@fp,w
 10055  2985  0474               	iorwf	fputc@fp+1,w
 10056  2986  1903               	btfsc	3,2
 10057  2987  298C               	goto	l6229
 10058  2988  0873               	movf	fputc@fp,w
 10059  2989  0474               	iorwf	fputc@fp+1,w
 10060  298A  1D03               	btfss	3,2
 10061  298B  2990               	goto	l6231
 10062  298C                     l6229:	
 10063  298C  0871               	movf	fputc@c,w
 10064  298D  3180  2003         	fcall	_putch
 10065  298F  0008               	return
 10066  2990                     l6231:	
 10067  2990  0873               	movf	fputc@fp,w
 10068  2991  0086               	movwf	6
 10069  2992  0874               	movf	fputc@fp+1,w
 10070  2993  0087               	movwf	7
 10071  2994  3144               	addfsr 1,4
 10072  2995  0016               	moviw fsr1++
 10073  2996  0401               	iorwf	1,w
 10074  2997  1903               	btfsc	3,2
 10075  2998  29B7               	goto	l6235
 10076  2999  0873               	movf	fputc@fp,w
 10077  299A  0086               	movwf	6
 10078  299B  0874               	movf	fputc@fp+1,w
 10079  299C  0087               	movwf	7
 10080  299D  3144               	addfsr 1,4
 10081  299E  3F40               	moviw [0]fsr1
 10082  299F  00F5               	movwf	??_fputc
 10083  29A0  3F41               	moviw [1]fsr1
 10084  29A1  00F6               	movwf	??_fputc+1
 10085  29A2  0873               	movf	fputc@fp,w
 10086  29A3  0086               	movwf	6
 10087  29A4  0874               	movf	fputc@fp+1,w
 10088  29A5  0087               	movwf	7
 10089  29A6  3142               	addfsr 1,2
 10090  29A7  3F40               	moviw [0]fsr1
 10091  29A8  00F7               	movwf	??_fputc+2
 10092  29A9  3F41               	moviw [1]fsr1
 10093  29AA  00F8               	movwf	??_fputc+3
 10094  29AB  0878               	movf	??_fputc+3,w
 10095  29AC  3A80               	xorlw	128
 10096  29AD  00F9               	movwf	??_fputc+4
 10097  29AE  0876               	movf	??_fputc+1,w
 10098  29AF  3A80               	xorlw	128
 10099  29B0  0279               	subwf	??_fputc+4,w
 10100  29B1  1D03               	skipz
 10101  29B2  29B5               	goto	u7735
 10102  29B3  0875               	movf	??_fputc,w
 10103  29B4  0277               	subwf	??_fputc+2,w
 10104  29B5                     u7735:	
 10105  29B5  1803               	skipnc
 10106  29B6  0008               	return
 10107  29B7                     l6235:	
 10108  29B7  0873               	movf	fputc@fp,w
 10109  29B8  0086               	movwf	6
 10110  29B9  0874               	movf	fputc@fp+1,w
 10111  29BA  0087               	movwf	7
 10112  29BB  3142               	addfsr 1,2
 10113  29BC  0873               	movf	fputc@fp,w
 10114  29BD  0084               	movwf	4
 10115  29BE  0874               	movf	fputc@fp+1,w
 10116  29BF  0085               	movwf	5
 10117  29C0  3F40               	moviw [0]fsr1
 10118  29C1  0700               	addwf	0,w
 10119  29C2  00F5               	movwf	??_fputc
 10120  29C3  3101               	addfsr 0,1
 10121  29C4  3F41               	moviw [1]fsr1
 10122  29C5  3D00               	addwfc	0,w
 10123  29C6  00F6               	movwf	??_fputc+1
 10124  29C7  0875               	movf	??_fputc,w
 10125  29C8  0086               	movwf	6
 10126  29C9  0876               	movf	??_fputc+1,w
 10127  29CA  0087               	movwf	7
 10128  29CB  0871               	movf	fputc@c,w
 10129  29CC  0081               	movwf	1
 10130  29CD  0873               	movf	fputc@fp,w
 10131  29CE  0086               	movwf	6
 10132  29CF  0874               	movf	fputc@fp+1,w
 10133  29D0  0087               	movwf	7
 10134  29D1  3142               	addfsr 1,2
 10135  29D2  3001               	movlw	1
 10136  29D3  0781               	addwf	1,f
 10137  29D4  3141               	addfsr 1,1
 10138  29D5  1803               	skipnc
 10139  29D6  0A81               	incf	1,f
 10140  29D7  0008               	return
 10141  29D8                     __end_of_fputc:	
 10142                           
 10143                           	psect	text28
 10144  0003                     __ptext28:	
 10145 ;; *************** function _putch *****************
 10146 ;; Defined at:
 10147 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10148 ;; Parameters:    Size  Location     Type
 10149 ;;  c               1    wreg     unsigned char 
 10150 ;; Auto vars:     Size  Location     Type
 10151 ;;  c               1    0[COMMON] unsigned char 
 10152 ;; Return value:  Size  Location     Type
 10153 ;;                  1    wreg      void 
 10154 ;; Registers used:
 10155 ;;		wreg
 10156 ;; Tracked objects:
 10157 ;;		On entry : 0/0
 10158 ;;		On exit  : 0/0
 10159 ;;		Unchanged: 0/0
 10160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10165 ;;Total ram usage:        0 bytes
 10166 ;; Hardware stack levels used:    1
 10167 ;; Hardware stack levels required when called:    1
 10168 ;; This function calls:
 10169 ;;		Nothing
 10170 ;; This function is called by:
 10171 ;;		_fputc
 10172 ;; This function uses a non-reentrant model
 10173 ;;
 10174                           
 10175                           
 10176                           ;psect for function _putch
 10177  0003                     _putch:	
 10178                           
 10179                           ;incstack = 0
 10180                           ; Regs used in _putch: [wreg]
 10181  0003  0008               	return
 10182  0004                     __end_of_putch:	
 10183                           
 10184                           	psect	text29
 10185  2E02                     __ptext29:	
 10186 ;; *************** function _atoi *****************
 10187 ;; Defined at:
 10188 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10189 ;; Parameters:    Size  Location     Type
 10190 ;;  s               2    7[COMMON] PTR const unsigned char 
 10191 ;;		 -> STR_18(18), STR_17(18), STR_16(19), STR_15(20), 
 10192 ;;		 -> STR_14(20), STR_13(21), STR_12(21), STR_11(21), 
 10193 ;;		 -> STR_10(22), STR_9(22), STR_8(21), STR_7(21), 
 10194 ;;		 -> STR_4(15), STR_3(22), STR_2(71), STR_1(40), 
 10195 ;; Auto vars:     Size  Location     Type
 10196 ;;  n               2   11[BANK0 ] int 
 10197 ;;  neg             2    4[BANK0 ] int 
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  2    7[COMMON] int 
 10200 ;; Registers used:
 10201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10208 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10209 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10210 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10211 ;;Total ram usage:       15 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; Hardware stack levels required when called:    2
 10214 ;; This function calls:
 10215 ;;		___wmul
 10216 ;;		_isdigit
 10217 ;;		_isspace
 10218 ;; This function is called by:
 10219 ;;		_vfpfcnvrt
 10220 ;; This function uses a non-reentrant model
 10221 ;;
 10222                           
 10223                           
 10224                           ;psect for function _atoi
 10225  2E02                     _atoi:	
 10226                           
 10227                           ;incstack = 0
 10228                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10229  2E02  0020               	movlb	0	; select bank0
 10230  2E03  01AB               	clrf	atoi@n
 10231  2E04  01AC               	clrf	atoi@n+1
 10232  2E05  01A4               	clrf	atoi@neg
 10233  2E06  01A5               	clrf	atoi@neg+1
 10234  2E07                     l6713:	
 10235  2E07  01AA               	clrf	_atoi$1653
 10236  2E08  0AAA               	incf	_atoi$1653,f
 10237  2E09  0877               	movf	atoi@s,w
 10238  2E0A  0084               	movwf	4
 10239  2E0B  0878               	movf	atoi@s+1,w
 10240  2E0C  0085               	movwf	5
 10241  2E0D  0012               	moviw fsr0++
 10242  2E0E  3A20               	xorlw	32
 10243  2E0F  1903               	btfsc	3,2
 10244  2E10  2E23               	goto	l6721
 10245  2E11  0877               	movf	atoi@s,w
 10246  2E12  0084               	movwf	4
 10247  2E13  0878               	movf	atoi@s+1,w
 10248  2E14  0085               	movwf	5
 10249  2E15  0800               	movf	0,w	;code access
 10250  2E16  3EF7               	addlw	247
 10251  2E17  00A0               	movwf	??_atoi
 10252  2E18  30FF               	movlw	255
 10253  2E19  1803               	skipnc
 10254  2E1A  3000               	movlw	0
 10255  2E1B  00A1               	movwf	??_atoi+1
 10256  2E1C  3000               	movlw	0
 10257  2E1D  0221               	subwf	??_atoi+1,w
 10258  2E1E  3005               	movlw	5
 10259  2E1F  1903               	skipnz
 10260  2E20  0220               	subwf	??_atoi,w
 10261  2E21  1803               	btfsc	3,0
 10262  2E22  01AA               	clrf	_atoi$1653
 10263  2E23                     l6721:	
 10264  2E23  082A               	movf	_atoi$1653,w
 10265  2E24  00A0               	movwf	??_atoi
 10266  2E25  01A1               	clrf	??_atoi+1
 10267  2E26  0820               	movf	??_atoi,w
 10268  2E27  00A6               	movwf	_atoi$1652
 10269  2E28  0821               	movf	??_atoi+1,w
 10270  2E29  00A7               	movwf	_atoi$1652+1
 10271  2E2A  0826               	movf	_atoi$1652,w
 10272  2E2B  0427               	iorwf	_atoi$1652+1,w
 10273  2E2C  1903               	btfsc	3,2
 10274  2E2D  2E38               	goto	l6729
 10275  2E2E  3001               	movlw	1
 10276  2E2F  07F7               	addwf	atoi@s,f
 10277  2E30  3000               	movlw	0
 10278  2E31  3DF8               	addwfc	atoi@s+1,f
 10279  2E32  2E07               	goto	l6713
 10280  2E33                     l6727:	
 10281  2E33  3001               	movlw	1
 10282  2E34  00A4               	movwf	atoi@neg
 10283  2E35  3000               	movlw	0
 10284  2E36  00A5               	movwf	atoi@neg+1
 10285  2E37  2E6B               	goto	l1321
 10286  2E38                     l6729:	
 10287  2E38  0877               	movf	atoi@s,w
 10288  2E39  0084               	movwf	4
 10289  2E3A  0878               	movf	atoi@s+1,w
 10290  2E3B  0085               	movwf	5
 10291  2E3C  0800               	movf	0,w	;code access
 10292  2E3D  00A0               	movwf	??_atoi
 10293  2E3E  01A1               	clrf	??_atoi+1
 10294                           
 10295                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10296                           ; Switch size 1, requested type "simple"
 10297                           ; Number of cases is 1, Range of values is 0 to 0
 10298                           ; switch strategies available:
 10299                           ; Name         Instructions Cycles
 10300                           ; simple_byte            4     3 (average)
 10301                           ; direct_byte            8     6 (fixed)
 10302                           ; jumptable            260     6 (fixed)
 10303                           ;	Chosen strategy is simple_byte
 10304  2E3F  0821               	movf	??_atoi+1,w
 10305  2E40  3A00               	xorlw	0	; case 0
 10306  2E41  1903               	skipnz
 10307  2E42  2E44               	goto	l8553
 10308  2E43  2E6F               	goto	l6735
 10309  2E44                     l8553:	
 10310                           
 10311                           ; Switch size 1, requested type "simple"
 10312                           ; Number of cases is 2, Range of values is 43 to 45
 10313                           ; switch strategies available:
 10314                           ; Name         Instructions Cycles
 10315                           ; simple_byte            7     4 (average)
 10316                           ; direct_byte           15     9 (fixed)
 10317                           ; jumptable            263     9 (fixed)
 10318                           ;	Chosen strategy is simple_byte
 10319  2E44  0820               	movf	??_atoi,w
 10320  2E45  3A2B               	xorlw	43	; case 43
 10321  2E46  1903               	skipnz
 10322  2E47  2E6B               	goto	l1321
 10323  2E48  3A06               	xorlw	6	; case 45
 10324  2E49  1903               	skipnz
 10325  2E4A  2E33               	goto	l6727
 10326  2E4B  2E6F               	goto	l6735
 10327  2E4C                     l6731:	
 10328  2E4C  0877               	movf	atoi@s,w
 10329  2E4D  0084               	movwf	4
 10330  2E4E  0878               	movf	atoi@s+1,w
 10331  2E4F  0085               	movwf	5
 10332  2E50  0800               	movf	0,w	;code access
 10333  2E51  00A0               	movwf	??_atoi
 10334  2E52  082C               	movf	atoi@n+1,w
 10335  2E53  00F2               	movwf	___wmul@multiplier+1
 10336  2E54  082B               	movf	atoi@n,w
 10337  2E55  00F1               	movwf	___wmul@multiplier
 10338  2E56  300A               	movlw	10
 10339  2E57  00F3               	movwf	___wmul@multiplicand
 10340  2E58  3000               	movlw	0
 10341  2E59  00F4               	movwf	___wmul@multiplicand+1
 10342  2E5A  31B6  2608  31AE   	fcall	___wmul
 10343  2E5D  0872               	movf	?___wmul+1,w
 10344  2E5E  0020               	movlb	0	; select bank0
 10345  2E5F  00A2               	movwf	??_atoi+2
 10346  2E60  0820               	movf	??_atoi,w
 10347  2E61  0271               	subwf	?___wmul,w
 10348  2E62  00A1               	movwf	??_atoi+1
 10349  2E63  1C03               	skipc
 10350  2E64  03A2               	decf	??_atoi+2,f
 10351  2E65  0821               	movf	??_atoi+1,w
 10352  2E66  3E30               	addlw	48
 10353  2E67  00AB               	movwf	atoi@n
 10354  2E68  3000               	movlw	0
 10355  2E69  3D22               	addwfc	??_atoi+2,w
 10356  2E6A  00AC               	movwf	atoi@n+1
 10357  2E6B                     l1321:	
 10358  2E6B  3001               	movlw	1
 10359  2E6C  07F7               	addwf	atoi@s,f
 10360  2E6D  3000               	movlw	0
 10361  2E6E  3DF8               	addwfc	atoi@s+1,f
 10362  2E6F                     l6735:	
 10363  2E6F  0877               	movf	atoi@s,w
 10364  2E70  0084               	movwf	4
 10365  2E71  0878               	movf	atoi@s+1,w
 10366  2E72  0085               	movwf	5
 10367  2E73  0800               	movf	0,w	;code access
 10368  2E74  3ED0               	addlw	208
 10369  2E75  00A0               	movwf	??_atoi
 10370  2E76  30FF               	movlw	255
 10371  2E77  1803               	skipnc
 10372  2E78  3000               	movlw	0
 10373  2E79  00A1               	movwf	??_atoi+1
 10374  2E7A  3000               	movlw	0
 10375  2E7B  0221               	subwf	??_atoi+1,w
 10376  2E7C  300A               	movlw	10
 10377  2E7D  1903               	skipnz
 10378  2E7E  0220               	subwf	??_atoi,w
 10379  2E7F  1803               	btfsc	3,0
 10380  2E80  2E83               	goto	u8910
 10381  2E81  3001               	movlw	1
 10382  2E82  2E84               	goto	u8920
 10383  2E83                     u8910:	
 10384  2E83  3000               	movlw	0
 10385  2E84                     u8920:	
 10386  2E84  00A2               	movwf	??_atoi+2
 10387  2E85  01A3               	clrf	??_atoi+3
 10388  2E86  0822               	movf	??_atoi+2,w
 10389  2E87  00A8               	movwf	_atoi$1654
 10390  2E88  0823               	movf	??_atoi+3,w
 10391  2E89  00A9               	movwf	_atoi$1654+1
 10392  2E8A  0828               	movf	_atoi$1654,w
 10393  2E8B  0429               	iorwf	_atoi$1654+1,w
 10394  2E8C  1D03               	btfss	3,2
 10395  2E8D  2E4C               	goto	l6731
 10396  2E8E  0824               	movf	atoi@neg,w
 10397  2E8F  0425               	iorwf	atoi@neg+1,w
 10398  2E90  1D03               	btfss	3,2
 10399  2E91  2E9E               	goto	l6745
 10400  2E92  092B               	comf	atoi@n,w
 10401  2E93  00A0               	movwf	??_atoi
 10402  2E94  092C               	comf	atoi@n+1,w
 10403  2E95  00A1               	movwf	??_atoi+1
 10404  2E96  0AA0               	incf	??_atoi,f
 10405  2E97  1903               	skipnz
 10406  2E98  0AA1               	incf	??_atoi+1,f
 10407  2E99  0820               	movf	??_atoi,w
 10408  2E9A  00F7               	movwf	?_atoi
 10409  2E9B  0821               	movf	??_atoi+1,w
 10410  2E9C  00F8               	movwf	?_atoi+1
 10411  2E9D  0008               	return
 10412  2E9E                     l6745:	
 10413  2E9E  082C               	movf	atoi@n+1,w
 10414  2E9F  00F8               	movwf	?_atoi+1
 10415  2EA0  082B               	movf	atoi@n,w
 10416  2EA1  00F7               	movwf	?_atoi
 10417  2EA2  0008               	return
 10418  2EA3                     __end_of_atoi:	
 10419                           
 10420                           	psect	text30
 10421  3659                     __ptext30:	
 10422 ;; *************** function _isspace *****************
 10423 ;; Defined at:
 10424 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;  c               2    1[COMMON] int 
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  2    1[COMMON] int 
 10431 ;; Registers used:
 10432 ;;		wreg, status,2, status,0
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10439 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10440 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10441 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10442 ;;Total ram usage:        5 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:    1
 10445 ;; This function calls:
 10446 ;;		Nothing
 10447 ;; This function is called by:
 10448 ;;		_atoi
 10449 ;; This function uses a non-reentrant model
 10450 ;;
 10451                           
 10452                           
 10453                           ;psect for function _isspace
 10454  3659                     _isspace:	
 10455                           
 10456                           ;incstack = 0
 10457                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10458  3659  01F5               	clrf	_isspace$1679
 10459  365A  0AF5               	incf	_isspace$1679,f
 10460  365B  3020               	movlw	32
 10461  365C  0671               	xorwf	isspace@c,w
 10462  365D  0472               	iorwf	isspace@c+1,w
 10463  365E  1903               	btfsc	3,2
 10464  365F  2E6D               	goto	l6439
 10465  3660  0871               	movf	isspace@c,w
 10466  3661  3EF7               	addlw	247
 10467  3662  00F3               	movwf	??_isspace
 10468  3663  30FF               	movlw	255
 10469  3664  3D72               	addwfc	isspace@c+1,w
 10470  3665  00F4               	movwf	??_isspace+1
 10471  3666  3000               	movlw	0
 10472  3667  0274               	subwf	??_isspace+1,w
 10473  3668  3005               	movlw	5
 10474  3669  1903               	skipnz
 10475  366A  0273               	subwf	??_isspace,w
 10476  366B  1803               	btfsc	3,0
 10477  366C  01F5               	clrf	_isspace$1679
 10478  366D                     l6439:	
 10479  366D  0875               	movf	_isspace$1679,w
 10480  366E  00F3               	movwf	??_isspace
 10481  366F  01F4               	clrf	??_isspace+1
 10482  3670  0873               	movf	??_isspace,w
 10483  3671  00F1               	movwf	?_isspace
 10484  3672  0874               	movf	??_isspace+1,w
 10485  3673  00F2               	movwf	?_isspace+1
 10486  3674  0008               	return
 10487  3675                     __end_of_isspace:	
 10488                           
 10489                           	psect	text31
 10490  357B                     __ptext31:	
 10491 ;; *************** function _isdigit *****************
 10492 ;; Defined at:
 10493 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10494 ;; Parameters:    Size  Location     Type
 10495 ;;  c               2    1[COMMON] int 
 10496 ;; Auto vars:     Size  Location     Type
 10497 ;;		None
 10498 ;; Return value:  Size  Location     Type
 10499 ;;                  2    1[COMMON] int 
 10500 ;; Registers used:
 10501 ;;		wreg, status,2, status,0
 10502 ;; Tracked objects:
 10503 ;;		On entry : 0/0
 10504 ;;		On exit  : 0/0
 10505 ;;		Unchanged: 0/0
 10506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10509 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10510 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10511 ;;Total ram usage:        6 bytes
 10512 ;; Hardware stack levels used:    1
 10513 ;; Hardware stack levels required when called:    1
 10514 ;; This function calls:
 10515 ;;		Nothing
 10516 ;; This function is called by:
 10517 ;;		_vfpfcnvrt
 10518 ;;		_atoi
 10519 ;; This function uses a non-reentrant model
 10520 ;;
 10521                           
 10522                           
 10523                           ;psect for function _isdigit
 10524  357B                     _isdigit:	
 10525                           
 10526                           ;incstack = 0
 10527                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10528  357B  0871               	movf	isdigit@c,w
 10529  357C  3ED0               	addlw	208
 10530  357D  00F3               	movwf	??_isdigit
 10531  357E  30FF               	movlw	255
 10532  357F  3D72               	addwfc	isdigit@c+1,w
 10533  3580  00F4               	movwf	??_isdigit+1
 10534  3581  3000               	movlw	0
 10535  3582  0274               	subwf	??_isdigit+1,w
 10536  3583  300A               	movlw	10
 10537  3584  1903               	skipnz
 10538  3585  0273               	subwf	??_isdigit,w
 10539  3586  1803               	btfsc	3,0
 10540  3587  2D8A               	goto	u7900
 10541  3588  3001               	movlw	1
 10542  3589  2D8B               	goto	u7910
 10543  358A                     u7900:	
 10544  358A  3000               	movlw	0
 10545  358B                     u7910:	
 10546  358B  00F5               	movwf	??_isdigit+2
 10547  358C  01F6               	clrf	??_isdigit+3
 10548  358D  0875               	movf	??_isdigit+2,w
 10549  358E  00F1               	movwf	?_isdigit
 10550  358F  0876               	movf	??_isdigit+3,w
 10551  3590  00F2               	movwf	?_isdigit+1
 10552  3591  0008               	return
 10553  3592                     __end_of_isdigit:	
 10554                           
 10555                           	psect	text32
 10556  35EE                     __ptext32:	
 10557 ;; *************** function _EUSART_Write_Text *****************
 10558 ;; Defined at:
 10559 ;;		line 75 in file "EUSART.c"
 10560 ;; Parameters:    Size  Location     Type
 10561 ;;  text            2    2[COMMON] PTR unsigned char 
 10562 ;;		 -> STR_19(3), STR_6(3), STR_5(38), messageBuffer(127), 
 10563 ;; Auto vars:     Size  Location     Type
 10564 ;;  i               2    5[COMMON] int 
 10565 ;; Return value:  Size  Location     Type
 10566 ;;                  1    wreg      void 
 10567 ;; Registers used:
 10568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/0
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10575 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10577 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10578 ;;Total ram usage:        5 bytes
 10579 ;; Hardware stack levels used:    1
 10580 ;; Hardware stack levels required when called:    2
 10581 ;; This function calls:
 10582 ;;		_EUSART_Write
 10583 ;; This function is called by:
 10584 ;;		_statemachine
 10585 ;;		_printcellParameters
 10586 ;;		_printotAFERegisters
 10587 ;; This function uses a non-reentrant model
 10588 ;;
 10589                           
 10590                           
 10591                           ;psect for function _EUSART_Write_Text
 10592  35EE                     _EUSART_Write_Text:	
 10593                           
 10594                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10595                           
 10596                           ;incstack = 0
 10597                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10598  35EE  01F5               	clrf	EUSART_Write_Text@i
 10599  35EF  01F6               	clrf	EUSART_Write_Text@i+1
 10600  35F0                     l7993:	
 10601  35F0  0872               	movf	EUSART_Write_Text@text,w
 10602  35F1  0775               	addwf	EUSART_Write_Text@i,w
 10603  35F2  0084               	movwf	4
 10604  35F3  0873               	movf	EUSART_Write_Text@text+1,w
 10605  35F4  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10606  35F5  0085               	movwf	5
 10607  35F6  0012               	moviw fsr0++
 10608  35F7  1903               	btfsc	3,2
 10609  35F8  0008               	return
 10610                           
 10611                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10612  35F9  0872               	movf	EUSART_Write_Text@text,w
 10613  35FA  0775               	addwf	EUSART_Write_Text@i,w
 10614  35FB  0084               	movwf	4
 10615  35FC  0873               	movf	EUSART_Write_Text@text+1,w
 10616  35FD  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10617  35FE  0085               	movwf	5
 10618  35FF  0800               	movf	0,w	;code access
 10619  3600  3188  2000  31B5   	fcall	_EUSART_Write
 10620  3603  3001               	movlw	1
 10621  3604  07F5               	addwf	EUSART_Write_Text@i,f
 10622  3605  3000               	movlw	0
 10623  3606  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10624  3607  2DF0               	goto	l7993
 10625  3608                     __end_of_EUSART_Write_Text:	
 10626                           
 10627                           	psect	text33
 10628  0800                     __ptext33:	
 10629 ;; *************** function _EUSART_Write *****************
 10630 ;; Defined at:
 10631 ;;		line 56 in file "EUSART.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  txData          1    wreg     unsigned char 
 10634 ;; Auto vars:     Size  Location     Type
 10635 ;;  txData          1    1[COMMON] unsigned char 
 10636 ;; Return value:  Size  Location     Type
 10637 ;;                  1    wreg      void 
 10638 ;; Registers used:
 10639 ;;		wreg
 10640 ;; Tracked objects:
 10641 ;;		On entry : 0/0
 10642 ;;		On exit  : 0/0
 10643 ;;		Unchanged: 0/0
 10644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10648 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10649 ;;Total ram usage:        1 bytes
 10650 ;; Hardware stack levels used:    1
 10651 ;; Hardware stack levels required when called:    1
 10652 ;; This function calls:
 10653 ;;		Nothing
 10654 ;; This function is called by:
 10655 ;;		_EUSART_Write_Text
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659                           
 10660                           ;psect for function _EUSART_Write
 10661  0800                     _EUSART_Write:	
 10662                           
 10663                           ;incstack = 0
 10664                           ; Regs used in _EUSART_Write: [wreg]
 10665                           ;EUSART_Write@txData stored from wreg
 10666  0800  00F1               	movwf	EUSART_Write@txData
 10667  0801                     l243:	
 10668                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 10669                           
 10670                           
 10671                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 10672  0801  0020               	movlb	0	; select bank0
 10673  0802  1E11               	btfss	17,4	;volatile
 10674  0803  2801               	goto	l243
 10675                           
 10676                           ;EUSART.c: 62:     TX1REG = txData;
 10677  0804  0871               	movf	EUSART_Write@txData,w
 10678  0805  0023               	movlb	3	; select bank3
 10679  0806  009A               	movwf	26	;volatile
 10680  0807  0008               	return
 10681  0808                     __end_of_EUSART_Write:	
 10682                           
 10683                           	psect	text34
 10684  29D8                     __ptext34:	
 10685 ;; *************** function _init_AFE *****************
 10686 ;; Defined at:
 10687 ;;		line 3 in file "BQ76920.c"
 10688 ;; Parameters:    Size  Location     Type
 10689 ;;		None
 10690 ;; Auto vars:     Size  Location     Type
 10691 ;;		None
 10692 ;; Return value:  Size  Location     Type
 10693 ;;                  1    wreg      void 
 10694 ;; Registers used:
 10695 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10696 ;; Tracked objects:
 10697 ;;		On entry : 0/0
 10698 ;;		On exit  : 0/0
 10699 ;;		Unchanged: 0/0
 10700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10705 ;;Total ram usage:        0 bytes
 10706 ;; Hardware stack levels used:    1
 10707 ;; Hardware stack levels required when called:    4
 10708 ;; This function calls:
 10709 ;;		_setCellOvervoltageProtection
 10710 ;;		_setCellUndervoltageProtection
 10711 ;;		_setOverCurrentDischargeProtection
 10712 ;;		_setShortCircuitProtection
 10713 ;;		_setShuntResistorValue
 10714 ;;		_setTemperatureLimitsint
 10715 ;; This function is called by:
 10716 ;;		_statemachine
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           
 10721                           ;psect for function _init_AFE
 10722  29D8                     _init_AFE:	
 10723                           
 10724                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 10725                           
 10726                           ;incstack = 0
 10727                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10728  29D8  30EC               	movlw	236
 10729  29D9  0020               	movlb	0	; select bank0
 10730  29DA  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 10731  29DB  30FF               	movlw	255
 10732  29DC  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 10733  29DD  302D               	movlw	45
 10734  29DE  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 10735  29DF  3000               	movlw	0
 10736  29E0  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 10737  29E1  3000               	movlw	0
 10738  29E2  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 10739  29E3  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 10740  29E4  302D               	movlw	45
 10741  29E5  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 10742  29E6  3000               	movlw	0
 10743  29E7  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 10744  29E8  31A8  209D  31A9   	fcall	_setTemperatureLimitsint
 10745                           
 10746                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 10747  29EB  303C               	movlw	60
 10748  29EC  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 10749  29ED  30A3               	movlw	163
 10750  29EE  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 10751  29EF  30D7               	movlw	215
 10752  29F0  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 10753  29F1  300A               	movlw	10
 10754  29F2  00F1               	movwf	setShuntResistorValue@res_mOhm
 10755  29F3  3198  2000  31A9   	fcall	_setShuntResistorValue
 10756                           
 10757                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 10758  29F6  3000               	movlw	0
 10759  29F7  0020               	movlb	0	; select bank0
 10760  29F8  00E9               	movwf	setShortCircuitProtection@current_mA+3
 10761  29F9  3000               	movlw	0
 10762  29FA  00E8               	movwf	setShortCircuitProtection@current_mA+2
 10763  29FB  3009               	movlw	9
 10764  29FC  00E7               	movwf	setShortCircuitProtection@current_mA+1
 10765  29FD  30C4               	movlw	196
 10766  29FE  00E6               	movwf	setShortCircuitProtection@current_mA
 10767  29FF  30C8               	movlw	200
 10768  2A00  00EA               	movwf	setShortCircuitProtection@delay_us
 10769  2A01  3000               	movlw	0
 10770  2A02  00EB               	movwf	setShortCircuitProtection@delay_us+1
 10771  2A03  3199  211F  31A9   	fcall	_setShortCircuitProtection
 10772                           
 10773                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 10774  2A06  3000               	movlw	0
 10775  2A07  0020               	movlb	0	; select bank0
 10776  2A08  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 10777  2A09  3000               	movlw	0
 10778  2A0A  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 10779  2A0B  304E               	movlw	78
 10780  2A0C  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 10781  2A0D  3020               	movlw	32
 10782  2A0E  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 10783  2A0F  3040               	movlw	64
 10784  2A10  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 10785  2A11  3001               	movlw	1
 10786  2A12  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 10787  2A13  3198  200A  31A9   	fcall	_setOverCurrentDischargeProtection
 10788                           
 10789                           ;BQ76920.c: 10:     setCellUndervoltageProtection(2900, 2);
 10790  2A16  3054               	movlw	84
 10791  2A17  0020               	movlb	0	; select bank0
 10792  2A18  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 10793  2A19  300B               	movlw	11
 10794  2A1A  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 10795  2A1B  3002               	movlw	2
 10796  2A1C  00B4               	movwf	setCellUndervoltageProtection@delay_s
 10797  2A1D  3000               	movlw	0
 10798  2A1E  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 10799  2A1F  31A2  2289  31A9   	fcall	_setCellUndervoltageProtection
 10800                           
 10801                           ;BQ76920.c: 11:     setCellOvervoltageProtection(4100,2);
 10802  2A22  3004               	movlw	4
 10803  2A23  0020               	movlb	0	; select bank0
 10804  2A24  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 10805  2A25  3010               	movlw	16
 10806  2A26  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 10807  2A27  3002               	movlw	2
 10808  2A28  00B4               	movwf	setCellOvervoltageProtection@delay_s
 10809  2A29  3000               	movlw	0
 10810  2A2A  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 10811  2A2B  31A1  21B4         	fcall	_setCellOvervoltageProtection
 10812  2A2D  0008               	return
 10813  2A2E                     __end_of_init_AFE:	
 10814                           
 10815                           	psect	text35
 10816  289D                     __ptext35:	
 10817 ;; *************** function _setTemperatureLimitsint *****************
 10818 ;; Defined at:
 10819 ;;		line 56 in file "BQ76920.c"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;  minDischarge    2    0[BANK0 ] int 
 10822 ;;  maxDischarge    2    2[BANK0 ] int 
 10823 ;;  minCharge_de    2    4[BANK0 ] int 
 10824 ;;  maxCharge_de    2    6[BANK0 ] int 
 10825 ;; Auto vars:     Size  Location     Type
 10826 ;;		None
 10827 ;; Return value:  Size  Location     Type
 10828 ;;                  1    wreg      void 
 10829 ;; Registers used:
 10830 ;;		wreg, status,2, status,0, pclath, cstack
 10831 ;; Tracked objects:
 10832 ;;		On entry : 0/0
 10833 ;;		On exit  : 0/0
 10834 ;;		Unchanged: 0/0
 10835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10836 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10839 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10840 ;;Total ram usage:        8 bytes
 10841 ;; Hardware stack levels used:    1
 10842 ;; Hardware stack levels required when called:    2
 10843 ;; This function calls:
 10844 ;;		___wmul
 10845 ;; This function is called by:
 10846 ;;		_init_AFE
 10847 ;; This function uses a non-reentrant model
 10848 ;;
 10849                           
 10850                           
 10851                           ;psect for function _setTemperatureLimitsint
 10852  289D                     _setTemperatureLimitsint:	
 10853                           
 10854                           ;BQ76920.c: 58:     minCellTempDischarge = minDischarge_degC * 10;
 10855                           
 10856                           ;incstack = 0
 10857                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 10858  289D  0020               	movlb	0	; select bank0
 10859  289E  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 10860  289F  00F2               	movwf	___wmul@multiplier+1
 10861  28A0  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 10862  28A1  00F1               	movwf	___wmul@multiplier
 10863  28A2  300A               	movlw	10
 10864  28A3  00F3               	movwf	___wmul@multiplicand
 10865  28A4  3000               	movlw	0
 10866  28A5  00F4               	movwf	___wmul@multiplicand+1
 10867  28A6  31B6  2608  31A8   	fcall	___wmul
 10868  28A9  0872               	movf	?___wmul+1,w
 10869  28AA  0023               	movlb	3	; select bank3
 10870  28AB  00CF               	movwf	(_minCellTempDischarge+1)^(0+384)
 10871  28AC  0871               	movf	?___wmul,w
 10872  28AD  00CE               	movwf	_minCellTempDischarge^(0+384)
 10873                           
 10874                           ;BQ76920.c: 59:     maxCellTempDischarge = maxDischarge_degC * 10;
 10875  28AE  0020               	movlb	0	; select bank0
 10876  28AF  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 10877  28B0  00F2               	movwf	___wmul@multiplier+1
 10878  28B1  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 10879  28B2  00F1               	movwf	___wmul@multiplier
 10880  28B3  300A               	movlw	10
 10881  28B4  00F3               	movwf	___wmul@multiplicand
 10882  28B5  3000               	movlw	0
 10883  28B6  00F4               	movwf	___wmul@multiplicand+1
 10884  28B7  31B6  2608  31A8   	fcall	___wmul
 10885  28BA  0872               	movf	?___wmul+1,w
 10886  28BB  0023               	movlb	3	; select bank3
 10887  28BC  00CB               	movwf	(_maxCellTempDischarge+1)^(0+384)
 10888  28BD  0871               	movf	?___wmul,w
 10889  28BE  00CA               	movwf	_maxCellTempDischarge^(0+384)
 10890                           
 10891                           ;BQ76920.c: 60:     minCellTempCharge = minCharge_degC * 10;
 10892  28BF  0020               	movlb	0	; select bank0
 10893  28C0  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 10894  28C1  00F2               	movwf	___wmul@multiplier+1
 10895  28C2  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 10896  28C3  00F1               	movwf	___wmul@multiplier
 10897  28C4  300A               	movlw	10
 10898  28C5  00F3               	movwf	___wmul@multiplicand
 10899  28C6  3000               	movlw	0
 10900  28C7  00F4               	movwf	___wmul@multiplicand+1
 10901  28C8  31B6  2608  31A8   	fcall	___wmul
 10902  28CB  0872               	movf	?___wmul+1,w
 10903  28CC  0023               	movlb	3	; select bank3
 10904  28CD  00D1               	movwf	(_minCellTempCharge+1)^(0+384)
 10905  28CE  0871               	movf	?___wmul,w
 10906  28CF  00D0               	movwf	_minCellTempCharge^(0+384)
 10907                           
 10908                           ;BQ76920.c: 61:     maxCellTempCharge = maxCharge_degC * 10;
 10909  28D0  0020               	movlb	0	; select bank0
 10910  28D1  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 10911  28D2  00F2               	movwf	___wmul@multiplier+1
 10912  28D3  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 10913  28D4  00F1               	movwf	___wmul@multiplier
 10914  28D5  300A               	movlw	10
 10915  28D6  00F3               	movwf	___wmul@multiplicand
 10916  28D7  3000               	movlw	0
 10917  28D8  00F4               	movwf	___wmul@multiplicand+1
 10918  28D9  31B6  2608         	fcall	___wmul
 10919  28DB  0872               	movf	?___wmul+1,w
 10920  28DC  0023               	movlb	3	; select bank3
 10921  28DD  00CD               	movwf	(_maxCellTempCharge+1)^(0+384)
 10922  28DE  0871               	movf	?___wmul,w
 10923  28DF  00CC               	movwf	_maxCellTempCharge^(0+384)
 10924  28E0  0008               	return
 10925  28E1                     __end_of_setTemperatureLimitsint:	
 10926                           
 10927                           	psect	text36
 10928  3608                     __ptext36:	
 10929 ;; *************** function ___wmul *****************
 10930 ;; Defined at:
 10931 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 10932 ;; Parameters:    Size  Location     Type
 10933 ;;  multiplier      2    1[COMMON] unsigned int 
 10934 ;;  multiplicand    2    3[COMMON] unsigned int 
 10935 ;; Auto vars:     Size  Location     Type
 10936 ;;  product         2    5[COMMON] unsigned int 
 10937 ;; Return value:  Size  Location     Type
 10938 ;;                  2    1[COMMON] unsigned int 
 10939 ;; Registers used:
 10940 ;;		wreg, status,2, status,0
 10941 ;; Tracked objects:
 10942 ;;		On entry : 0/0
 10943 ;;		On exit  : 0/0
 10944 ;;		Unchanged: 0/0
 10945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10946 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10949 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10950 ;;Total ram usage:        6 bytes
 10951 ;; Hardware stack levels used:    1
 10952 ;; Hardware stack levels required when called:    1
 10953 ;; This function calls:
 10954 ;;		Nothing
 10955 ;; This function is called by:
 10956 ;;		_setTemperatureLimitsint
 10957 ;;		_atoi
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           
 10961                           
 10962                           ;psect for function ___wmul
 10963  3608                     ___wmul:	
 10964                           
 10965                           ;incstack = 0
 10966                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10967  3608  01F5               	clrf	___wmul@product
 10968  3609  01F6               	clrf	___wmul@product+1
 10969  360A                     l6313:	
 10970  360A  1C71               	btfss	___wmul@multiplier,0
 10971  360B  2E10               	goto	l846
 10972  360C  0873               	movf	___wmul@multiplicand,w
 10973  360D  07F5               	addwf	___wmul@product,f
 10974  360E  0874               	movf	___wmul@multiplicand+1,w
 10975  360F  3DF6               	addwfc	___wmul@product+1,f
 10976  3610                     l846:	
 10977  3610  3001               	movlw	1
 10978  3611                     u7935:	
 10979  3611  35F3               	lslf	___wmul@multiplicand,f
 10980  3612  0DF4               	rlf	___wmul@multiplicand+1,f
 10981  3613  0B89               	decfsz	9,f
 10982  3614  2E11               	goto	u7935
 10983  3615  3001               	movlw	1
 10984  3616                     u7945:	
 10985  3616  36F2               	lsrf	___wmul@multiplier+1,f
 10986  3617  0CF1               	rrf	___wmul@multiplier,f
 10987  3618  0B89               	decfsz	9,f
 10988  3619  2E16               	goto	u7945
 10989  361A  0871               	movf	___wmul@multiplier,w
 10990  361B  0472               	iorwf	___wmul@multiplier+1,w
 10991  361C  1D03               	btfss	3,2
 10992  361D  2E0A               	goto	l6313
 10993  361E  0876               	movf	___wmul@product+1,w
 10994  361F  00F2               	movwf	?___wmul+1
 10995  3620  0875               	movf	___wmul@product,w
 10996  3621  00F1               	movwf	?___wmul
 10997  3622  0008               	return
 10998  3623                     __end_of___wmul:	
 10999                           
 11000                           	psect	text37
 11001  1800                     __ptext37:	
 11002 ;; *************** function _setShuntResistorValue *****************
 11003 ;; Defined at:
 11004 ;;		line 68 in file "BQ76920.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;  res_mOhm        4    1[COMMON] float 
 11007 ;; Auto vars:     Size  Location     Type
 11008 ;;		None
 11009 ;; Return value:  Size  Location     Type
 11010 ;;                  1    wreg      void 
 11011 ;; Registers used:
 11012 ;;		wreg
 11013 ;; Tracked objects:
 11014 ;;		On entry : 0/0
 11015 ;;		On exit  : 0/0
 11016 ;;		Unchanged: 0/0
 11017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11021 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11022 ;;Total ram usage:        4 bytes
 11023 ;; Hardware stack levels used:    1
 11024 ;; Hardware stack levels required when called:    1
 11025 ;; This function calls:
 11026 ;;		Nothing
 11027 ;; This function is called by:
 11028 ;;		_init_AFE
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           
 11033                           ;psect for function _setShuntResistorValue
 11034  1800                     _setShuntResistorValue:	
 11035                           
 11036                           ;BQ76920.c: 69:     shuntResistorValue_mOhm = res_mOhm;
 11037                           
 11038                           ;incstack = 0
 11039                           ; Regs used in _setShuntResistorValue: [wreg]
 11040  1800  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11041  1801  0023               	movlb	3	; select bank3
 11042  1802  00B1               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 11043  1803  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11044  1804  00B0               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 11045  1805  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11046  1806  00AF               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 11047  1807  0871               	movf	setShuntResistorValue@res_mOhm,w
 11048  1808  00AE               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 11049  1809  0008               	return
 11050  180A                     __end_of_setShuntResistorValue:	
 11051                           
 11052                           	psect	text38
 11053  191F                     __ptext38:	
 11054 ;; *************** function _setShortCircuitProtection *****************
 11055 ;; Defined at:
 11056 ;;		line 76 in file "BQ76920.c"
 11057 ;; Parameters:    Size  Location     Type
 11058 ;;  current_mA      4   70[BANK0 ] long 
 11059 ;;  delay_us        2   74[BANK0 ] int 
 11060 ;; Auto vars:     Size  Location     Type
 11061 ;;  i               2   10[BANK1 ] int 
 11062 ;;  i               2    8[BANK1 ] int 
 11063 ;;  scaler          4    0[BANK1 ] float 
 11064 ;; Return value:  Size  Location     Type
 11065 ;;                  1    wreg      void 
 11066 ;; Registers used:
 11067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11068 ;; Tracked objects:
 11069 ;;		On entry : 0/0
 11070 ;;		On exit  : 0/0
 11071 ;;		Unchanged: 0/0
 11072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11073 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11074 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11075 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11076 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11077 ;;Total ram usage:       21 bytes
 11078 ;; Hardware stack levels used:    1
 11079 ;; Hardware stack levels required when called:    3
 11080 ;; This function calls:
 11081 ;;		_I2C_writeRegister
 11082 ;;		___fldiv
 11083 ;;		___flge
 11084 ;;		___flmul
 11085 ;;		___xxtofl
 11086 ;; This function is called by:
 11087 ;;		_init_AFE
 11088 ;; This function uses a non-reentrant model
 11089 ;;
 11090                           
 11091                           
 11092                           ;psect for function _setShortCircuitProtection
 11093  191F                     _setShortCircuitProtection:	
 11094                           
 11095                           ;BQ76920.c: 81:     float scaler = 1000.0;
 11096                           
 11097                           ;incstack = 0
 11098                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11099  191F  3044               	movlw	68
 11100  1920  0021               	movlb	1	; select bank1
 11101  1921  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11102  1922  307A               	movlw	122
 11103  1923  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11104  1924  3000               	movlw	0
 11105  1925  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11106  1926  3000               	movlw	0
 11107  1927  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11108                           
 11109                           ;BQ76920.c: 82:     protect1.bits.SCD_THRESH = 0;
 11110  1928  30F8               	movlw	-8
 11111  1929  0023               	movlb	3	; select bank3
 11112  192A  05D4               	andwf	BQ76920@protect1^(0+384),f
 11113                           
 11114                           ;BQ76920.c: 83:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11115  192B  0021               	movlb	1	; select bank1
 11116  192C  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11117  192D  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11118  192E                     l8009:	
 11119                           
 11120                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11121  192E  0023               	movlb	3	; select bank3
 11122  192F  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 11123  1930  0020               	movlb	0	; select bank0
 11124  1931  00A9               	movwf	___flmul@b+3
 11125  1932  0023               	movlb	3	; select bank3
 11126  1933  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 11127  1934  0020               	movlb	0	; select bank0
 11128  1935  00A8               	movwf	___flmul@b+2
 11129  1936  0023               	movlb	3	; select bank3
 11130  1937  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 11131  1938  0020               	movlb	0	; select bank0
 11132  1939  00A7               	movwf	___flmul@b+1
 11133  193A  0023               	movlb	3	; select bank3
 11134  193B  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 11135  193C  0020               	movlb	0	; select bank0
 11136  193D  00A6               	movwf	___flmul@b
 11137  193E  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11138  193F  00F4               	movwf	___xxtofl@val+3
 11139  1940  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11140  1941  00F3               	movwf	___xxtofl@val+2
 11141  1942  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11142  1943  00F2               	movwf	___xxtofl@val+1
 11143  1944  0866               	movf	setShortCircuitProtection@current_mA,w
 11144  1945  00F1               	movwf	___xxtofl@val
 11145  1946  3001               	movlw	1
 11146  1947  31AD  256C  3199   	fcall	___xxtofl
 11147  194A  0874               	movf	?___xxtofl+3,w
 11148  194B  0020               	movlb	0	; select bank0
 11149  194C  00AD               	movwf	___flmul@a+3
 11150  194D  0873               	movf	?___xxtofl+2,w
 11151  194E  00AC               	movwf	___flmul@a+2
 11152  194F  0872               	movf	?___xxtofl+1,w
 11153  1950  00AB               	movwf	___flmul@a+1
 11154  1951  0871               	movf	?___xxtofl,w
 11155  1952  00AA               	movwf	___flmul@a
 11156  1953  3190  2023  3199   	fcall	___flmul
 11157  1956  0020               	movlb	0	; select bank0
 11158  1957  0829               	movf	?___flmul+3,w
 11159  1958  0021               	movlb	1	; select bank1
 11160  1959  00A7               	movwf	(_setShortCircuitProtection$2031+3)^(0+128)
 11161  195A  0020               	movlb	0	; select bank0
 11162  195B  0828               	movf	?___flmul+2,w
 11163  195C  0021               	movlb	1	; select bank1
 11164  195D  00A6               	movwf	(_setShortCircuitProtection$2031+2)^(0+128)
 11165  195E  0020               	movlb	0	; select bank0
 11166  195F  0827               	movf	?___flmul+1,w
 11167  1960  0021               	movlb	1	; select bank1
 11168  1961  00A5               	movwf	(_setShortCircuitProtection$2031+1)^(0+128)
 11169  1962  0020               	movlb	0	; select bank0
 11170  1963  0826               	movf	?___flmul,w
 11171  1964  0021               	movlb	1	; select bank1
 11172  1965  00A4               	movwf	_setShortCircuitProtection$2031^(0+128)
 11173                           
 11174                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11175  1966  3044               	movlw	68
 11176  1967  0020               	movlb	0	; select bank0
 11177  1968  00C3               	movwf	___fldiv@a+3
 11178  1969  307A               	movlw	122
 11179  196A  00C2               	movwf	___fldiv@a+2
 11180  196B  3000               	movlw	0
 11181  196C  00C1               	movwf	___fldiv@a+1
 11182  196D  3000               	movlw	0
 11183  196E  00C0               	movwf	___fldiv@a
 11184  196F  0021               	movlb	1	; select bank1
 11185  1970  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11186  1971  0020               	movlb	0	; select bank0
 11187  1972  00A9               	movwf	___flmul@b+3
 11188  1973  0021               	movlb	1	; select bank1
 11189  1974  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11190  1975  0020               	movlb	0	; select bank0
 11191  1976  00A8               	movwf	___flmul@b+2
 11192  1977  0021               	movlb	1	; select bank1
 11193  1978  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11194  1979  0020               	movlb	0	; select bank0
 11195  197A  00A7               	movwf	___flmul@b+1
 11196  197B  0021               	movlb	1	; select bank1
 11197  197C  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11198  197D  0020               	movlb	0	; select bank0
 11199  197E  00A6               	movwf	___flmul@b
 11200  197F  0021               	movlb	1	; select bank1
 11201  1980  0827               	movf	(_setShortCircuitProtection$2031+3)^(0+128),w
 11202  1981  0020               	movlb	0	; select bank0
 11203  1982  00AD               	movwf	___flmul@a+3
 11204  1983  0021               	movlb	1	; select bank1
 11205  1984  0826               	movf	(_setShortCircuitProtection$2031+2)^(0+128),w
 11206  1985  0020               	movlb	0	; select bank0
 11207  1986  00AC               	movwf	___flmul@a+2
 11208  1987  0021               	movlb	1	; select bank1
 11209  1988  0825               	movf	(_setShortCircuitProtection$2031+1)^(0+128),w
 11210  1989  0020               	movlb	0	; select bank0
 11211  198A  00AB               	movwf	___flmul@a+1
 11212  198B  0021               	movlb	1	; select bank1
 11213  198C  0824               	movf	_setShortCircuitProtection$2031^(0+128),w
 11214  198D  0020               	movlb	0	; select bank0
 11215  198E  00AA               	movwf	___flmul@a
 11216  198F  3190  2023  3199   	fcall	___flmul
 11217  1992  0020               	movlb	0	; select bank0
 11218  1993  0829               	movf	?___flmul+3,w
 11219  1994  00C7               	movwf	___fldiv@b+3
 11220  1995  0828               	movf	?___flmul+2,w
 11221  1996  00C6               	movwf	___fldiv@b+2
 11222  1997  0827               	movf	?___flmul+1,w
 11223  1998  00C5               	movwf	___fldiv@b+1
 11224  1999  0826               	movf	?___flmul,w
 11225  199A  00C4               	movwf	___fldiv@b
 11226  199B  319C  24E2  3199   	fcall	___fldiv
 11227  199E  0020               	movlb	0	; select bank0
 11228  199F  0843               	movf	?___fldiv+3,w
 11229  19A0  00DD               	movwf	___flge@ff1+3
 11230  19A1  0842               	movf	?___fldiv+2,w
 11231  19A2  00DC               	movwf	___flge@ff1+2
 11232  19A3  0841               	movf	?___fldiv+1,w
 11233  19A4  00DB               	movwf	___flge@ff1+1
 11234  19A5  0840               	movf	?___fldiv,w
 11235  19A6  00DA               	movwf	___flge@ff1
 11236  19A7  0021               	movlb	1	; select bank1
 11237  19A8  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11238  19A9  0085               	movwf	5
 11239  19AA  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11240  19AB  0084               	movwf	4
 11241  19AC  3584               	lslf	4,f
 11242  19AD  0D85               	rlf	5,f
 11243  19AE  3072               	movlw	low (_SCD_threshold_setting| (0+32768))
 11244  19AF  0784               	addwf	4,f
 11245  19B0  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 11246  19B1  3D85               	addwfc	5,f
 11247  19B2  3F00               	moviw [0]fsr0
 11248  19B3  0020               	movlb	0	; select bank0
 11249  19B4  00EC               	movwf	??_setShortCircuitProtection
 11250  19B5  3F01               	moviw [1]fsr0
 11251  19B6  00ED               	movwf	??_setShortCircuitProtection+1
 11252  19B7  086C               	movf	??_setShortCircuitProtection,w
 11253  19B8  00F1               	movwf	___xxtofl@val
 11254  19B9  086D               	movf	??_setShortCircuitProtection+1,w
 11255  19BA  00F2               	movwf	___xxtofl@val+1
 11256  19BB  0D89               	rlf	9,f
 11257  19BC  3B89               	subwfb	9,f
 11258  19BD  0989               	comf	9,f
 11259  19BE  00F3               	movwf	___xxtofl@val+2
 11260  19BF  00F4               	movwf	___xxtofl@val+3
 11261  19C0  3001               	movlw	1
 11262  19C1  31AD  256C  3199   	fcall	___xxtofl
 11263  19C4  0874               	movf	?___xxtofl+3,w
 11264  19C5  0020               	movlb	0	; select bank0
 11265  19C6  00E1               	movwf	___flge@ff2+3
 11266  19C7  0873               	movf	?___xxtofl+2,w
 11267  19C8  00E0               	movwf	___flge@ff2+2
 11268  19C9  0872               	movf	?___xxtofl+1,w
 11269  19CA  00DF               	movwf	___flge@ff2+1
 11270  19CB  0871               	movf	?___xxtofl,w
 11271  19CC  00DE               	movwf	___flge@ff2
 11272  19CD  31AB  2375  3199   	fcall	___flge
 11273  19D0  1C03               	btfss	3,0
 11274  19D1  29DA               	goto	l8015
 11275                           
 11276                           ;BQ76920.c: 85:             protect1.bits.SCD_THRESH = i;
 11277  19D2  0023               	movlb	3	; select bank3
 11278  19D3  0854               	movf	BQ76920@protect1^(0+384),w
 11279  19D4  0021               	movlb	1	; select bank1
 11280  19D5  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11281  19D6  39F8               	andlw	-8
 11282  19D7  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11283  19D8  0023               	movlb	3	; select bank3
 11284  19D9  00D4               	movwf	BQ76920@protect1^(0+384)
 11285  19DA                     l8015:	
 11286                           
 11287                           ;BQ76920.c: 87:     }
 11288  19DA  3001               	movlw	1
 11289  19DB  0021               	movlb	1	; select bank1
 11290  19DC  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11291  19DD  3000               	movlw	0
 11292  19DE  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11293  19DF  3000               	movlw	0
 11294  19E0  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11295  19E1  3007               	movlw	7
 11296  19E2  1903               	skipnz
 11297  19E3  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11298  19E4  1C03               	skipc
 11299  19E5  292E               	goto	l8009
 11300                           
 11301                           ;BQ76920.c: 89:     protect1.bits.SCD_DELAY = 0;
 11302  19E6  30E7               	movlw	-25
 11303  19E7  0023               	movlb	3	; select bank3
 11304  19E8  05D4               	andwf	BQ76920@protect1^(0+384),f
 11305                           
 11306                           ;BQ76920.c: 90:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11307  19E9  0021               	movlb	1	; select bank1
 11308  19EA  01AA               	clrf	setShortCircuitProtection@i_968^(0+128)
 11309  19EB  01AB               	clrf	(setShortCircuitProtection@i_968+1)^(0+128)
 11310  19EC                     l8027:	
 11311                           
 11312                           ;BQ76920.c: 91:         if (delay_us >= SCD_delay_setting[i]) {
 11313  19EC  082B               	movf	(setShortCircuitProtection@i_968+1)^(0+128),w
 11314  19ED  0085               	movwf	5
 11315  19EE  082A               	movf	setShortCircuitProtection@i_968^(0+128),w
 11316  19EF  0084               	movwf	4
 11317  19F0  3584               	lslf	4,f
 11318  19F1  0D85               	rlf	5,f
 11319  19F2  30A1               	movlw	low (_SCD_delay_setting| (0+32768))
 11320  19F3  0784               	addwf	4,f
 11321  19F4  30B9               	movlw	high (_SCD_delay_setting| (0+32768))
 11322  19F5  3D85               	addwfc	5,f
 11323  19F6  3F00               	moviw [0]fsr0
 11324  19F7  0020               	movlb	0	; select bank0
 11325  19F8  00EC               	movwf	??_setShortCircuitProtection
 11326  19F9  3F01               	moviw [1]fsr0
 11327  19FA  00ED               	movwf	??_setShortCircuitProtection+1
 11328  19FB  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11329  19FC  3A80               	xorlw	128
 11330  19FD  00EE               	movwf	??_setShortCircuitProtection+2
 11331  19FE  086D               	movf	??_setShortCircuitProtection+1,w
 11332  19FF  3A80               	xorlw	128
 11333  1A00  026E               	subwf	??_setShortCircuitProtection+2,w
 11334  1A01  1D03               	skipz
 11335  1A02  2A05               	goto	u11155
 11336  1A03  086C               	movf	??_setShortCircuitProtection,w
 11337  1A04  026A               	subwf	setShortCircuitProtection@delay_us,w
 11338  1A05                     u11155:	
 11339  1A05  1C03               	skipc
 11340  1A06  2A16               	goto	l8031
 11341                           
 11342                           ;BQ76920.c: 92:             protect1.bits.SCD_DELAY = i;
 11343  1A07  0021               	movlb	1	; select bank1
 11344  1A08  082A               	movf	setShortCircuitProtection@i_968^(0+128),w
 11345  1A09  0020               	movlb	0	; select bank0
 11346  1A0A  00EC               	movwf	??_setShortCircuitProtection
 11347  1A0B  0DEC               	rlf	??_setShortCircuitProtection,f
 11348  1A0C  0DEC               	rlf	??_setShortCircuitProtection,f
 11349  1A0D  0DEC               	rlf	??_setShortCircuitProtection,f
 11350  1A0E  0023               	movlb	3	; select bank3
 11351  1A0F  0854               	movf	BQ76920@protect1^(0+384),w
 11352  1A10  0020               	movlb	0	; select bank0
 11353  1A11  066C               	xorwf	??_setShortCircuitProtection,w
 11354  1A12  39E7               	andlw	-25
 11355  1A13  066C               	xorwf	??_setShortCircuitProtection,w
 11356  1A14  0023               	movlb	3	; select bank3
 11357  1A15  00D4               	movwf	BQ76920@protect1^(0+384)
 11358  1A16                     l8031:	
 11359                           
 11360                           ;BQ76920.c: 94:     }
 11361  1A16  3001               	movlw	1
 11362  1A17  0021               	movlb	1	; select bank1
 11363  1A18  07AA               	addwf	setShortCircuitProtection@i_968^(0+128),f
 11364  1A19  3000               	movlw	0
 11365  1A1A  3DAB               	addwfc	(setShortCircuitProtection@i_968+1)^(0+128),f
 11366  1A1B  3000               	movlw	0
 11367  1A1C  022B               	subwf	(setShortCircuitProtection@i_968+1)^(0+128),w
 11368  1A1D  3007               	movlw	7
 11369  1A1E  1903               	skipnz
 11370  1A1F  022A               	subwf	setShortCircuitProtection@i_968^(0+128),w
 11371  1A20  1C03               	skipc
 11372  1A21  29EC               	goto	l8027
 11373                           
 11374                           ;BQ76920.c: 96:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11375  1A22  3018               	movlw	24
 11376  1A23  00F5               	movwf	I2C_writeRegister@slaveAddress
 11377  1A24  3000               	movlw	0
 11378  1A25  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11379  1A26  3006               	movlw	6
 11380  1A27  00F7               	movwf	I2C_writeRegister@regAddress
 11381  1A28  3000               	movlw	0
 11382  1A29  00F8               	movwf	I2C_writeRegister@regAddress+1
 11383  1A2A  0023               	movlb	3	; select bank3
 11384  1A2B  0854               	movf	BQ76920@protect1^(0+384),w
 11385  1A2C  0020               	movlb	0	; select bank0
 11386  1A2D  00EC               	movwf	??_setShortCircuitProtection
 11387  1A2E  01ED               	clrf	??_setShortCircuitProtection+1
 11388  1A2F  086C               	movf	??_setShortCircuitProtection,w
 11389  1A30  00F9               	movwf	I2C_writeRegister@data
 11390  1A31  086D               	movf	??_setShortCircuitProtection+1,w
 11391  1A32  00FA               	movwf	I2C_writeRegister@data+1
 11392  1A33  31B6  2692         	fcall	_I2C_writeRegister
 11393  1A35  0008               	return
 11394  1A36                     __end_of_setShortCircuitProtection:	
 11395                           
 11396                           	psect	text39
 11397  180A                     __ptext39:	
 11398 ;; *************** function _setOverCurrentDischargeProtection *****************
 11399 ;; Defined at:
 11400 ;;		line 103 in file "BQ76920.c"
 11401 ;; Parameters:    Size  Location     Type
 11402 ;;  current_mA      4   70[BANK0 ] long 
 11403 ;;  delay_ms        2   74[BANK0 ] int 
 11404 ;; Auto vars:     Size  Location     Type
 11405 ;;  i               2   10[BANK1 ] int 
 11406 ;;  i               2    8[BANK1 ] int 
 11407 ;;  scaler          4    0[BANK1 ] float 
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  1    wreg      void 
 11410 ;; Registers used:
 11411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11417 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11418 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11419 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11420 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11421 ;;Total ram usage:       21 bytes
 11422 ;; Hardware stack levels used:    1
 11423 ;; Hardware stack levels required when called:    3
 11424 ;; This function calls:
 11425 ;;		_I2C_writeRegister
 11426 ;;		___fldiv
 11427 ;;		___flge
 11428 ;;		___flmul
 11429 ;;		___xxtofl
 11430 ;; This function is called by:
 11431 ;;		_init_AFE
 11432 ;; This function uses a non-reentrant model
 11433 ;;
 11434                           
 11435                           
 11436                           ;psect for function _setOverCurrentDischargeProtection
 11437  180A                     _setOverCurrentDischargeProtection:	
 11438                           
 11439                           ;BQ76920.c: 106:     float scaler = 1000.0;
 11440                           
 11441                           ;incstack = 0
 11442                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11443  180A  3044               	movlw	68
 11444  180B  0021               	movlb	1	; select bank1
 11445  180C  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11446  180D  307A               	movlw	122
 11447  180E  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11448  180F  3000               	movlw	0
 11449  1810  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11450  1811  3000               	movlw	0
 11451  1812  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11452                           
 11453                           ;BQ76920.c: 107:     protect2.bits.OCD_THRESH = 0;
 11454  1813  30F0               	movlw	-16
 11455  1814  0023               	movlb	3	; select bank3
 11456  1815  05D3               	andwf	BQ76920@protect2^(0+384),f
 11457                           
 11458                           ;BQ76920.c: 108:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11459  1816  0021               	movlb	1	; select bank1
 11460  1817  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11461  1818  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11462  1819                     l8047:	
 11463                           
 11464                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11465  1819  0023               	movlb	3	; select bank3
 11466  181A  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 11467  181B  0020               	movlb	0	; select bank0
 11468  181C  00A9               	movwf	___flmul@b+3
 11469  181D  0023               	movlb	3	; select bank3
 11470  181E  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 11471  181F  0020               	movlb	0	; select bank0
 11472  1820  00A8               	movwf	___flmul@b+2
 11473  1821  0023               	movlb	3	; select bank3
 11474  1822  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 11475  1823  0020               	movlb	0	; select bank0
 11476  1824  00A7               	movwf	___flmul@b+1
 11477  1825  0023               	movlb	3	; select bank3
 11478  1826  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 11479  1827  0020               	movlb	0	; select bank0
 11480  1828  00A6               	movwf	___flmul@b
 11481  1829  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11482  182A  00F4               	movwf	___xxtofl@val+3
 11483  182B  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11484  182C  00F3               	movwf	___xxtofl@val+2
 11485  182D  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11486  182E  00F2               	movwf	___xxtofl@val+1
 11487  182F  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11488  1830  00F1               	movwf	___xxtofl@val
 11489  1831  3001               	movlw	1
 11490  1832  31AD  256C  3198   	fcall	___xxtofl
 11491  1835  0874               	movf	?___xxtofl+3,w
 11492  1836  0020               	movlb	0	; select bank0
 11493  1837  00AD               	movwf	___flmul@a+3
 11494  1838  0873               	movf	?___xxtofl+2,w
 11495  1839  00AC               	movwf	___flmul@a+2
 11496  183A  0872               	movf	?___xxtofl+1,w
 11497  183B  00AB               	movwf	___flmul@a+1
 11498  183C  0871               	movf	?___xxtofl,w
 11499  183D  00AA               	movwf	___flmul@a
 11500  183E  3190  2023  3198   	fcall	___flmul
 11501  1841  0020               	movlb	0	; select bank0
 11502  1842  0829               	movf	?___flmul+3,w
 11503  1843  0021               	movlb	1	; select bank1
 11504  1844  00A7               	movwf	(_setOverCurrentDischargeProtection$2032+3)^(0+128)
 11505  1845  0020               	movlb	0	; select bank0
 11506  1846  0828               	movf	?___flmul+2,w
 11507  1847  0021               	movlb	1	; select bank1
 11508  1848  00A6               	movwf	(_setOverCurrentDischargeProtection$2032+2)^(0+128)
 11509  1849  0020               	movlb	0	; select bank0
 11510  184A  0827               	movf	?___flmul+1,w
 11511  184B  0021               	movlb	1	; select bank1
 11512  184C  00A5               	movwf	(_setOverCurrentDischargeProtection$2032+1)^(0+128)
 11513  184D  0020               	movlb	0	; select bank0
 11514  184E  0826               	movf	?___flmul,w
 11515  184F  0021               	movlb	1	; select bank1
 11516  1850  00A4               	movwf	_setOverCurrentDischargeProtection$2032^(0+128)
 11517                           
 11518                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11519  1851  3044               	movlw	68
 11520  1852  0020               	movlb	0	; select bank0
 11521  1853  00C3               	movwf	___fldiv@a+3
 11522  1854  307A               	movlw	122
 11523  1855  00C2               	movwf	___fldiv@a+2
 11524  1856  3000               	movlw	0
 11525  1857  00C1               	movwf	___fldiv@a+1
 11526  1858  3000               	movlw	0
 11527  1859  00C0               	movwf	___fldiv@a
 11528  185A  0021               	movlb	1	; select bank1
 11529  185B  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 11530  185C  0020               	movlb	0	; select bank0
 11531  185D  00A9               	movwf	___flmul@b+3
 11532  185E  0021               	movlb	1	; select bank1
 11533  185F  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 11534  1860  0020               	movlb	0	; select bank0
 11535  1861  00A8               	movwf	___flmul@b+2
 11536  1862  0021               	movlb	1	; select bank1
 11537  1863  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 11538  1864  0020               	movlb	0	; select bank0
 11539  1865  00A7               	movwf	___flmul@b+1
 11540  1866  0021               	movlb	1	; select bank1
 11541  1867  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 11542  1868  0020               	movlb	0	; select bank0
 11543  1869  00A6               	movwf	___flmul@b
 11544  186A  0021               	movlb	1	; select bank1
 11545  186B  0827               	movf	(_setOverCurrentDischargeProtection$2032+3)^(0+128),w
 11546  186C  0020               	movlb	0	; select bank0
 11547  186D  00AD               	movwf	___flmul@a+3
 11548  186E  0021               	movlb	1	; select bank1
 11549  186F  0826               	movf	(_setOverCurrentDischargeProtection$2032+2)^(0+128),w
 11550  1870  0020               	movlb	0	; select bank0
 11551  1871  00AC               	movwf	___flmul@a+2
 11552  1872  0021               	movlb	1	; select bank1
 11553  1873  0825               	movf	(_setOverCurrentDischargeProtection$2032+1)^(0+128),w
 11554  1874  0020               	movlb	0	; select bank0
 11555  1875  00AB               	movwf	___flmul@a+1
 11556  1876  0021               	movlb	1	; select bank1
 11557  1877  0824               	movf	_setOverCurrentDischargeProtection$2032^(0+128),w
 11558  1878  0020               	movlb	0	; select bank0
 11559  1879  00AA               	movwf	___flmul@a
 11560  187A  3190  2023  3198   	fcall	___flmul
 11561  187D  0020               	movlb	0	; select bank0
 11562  187E  0829               	movf	?___flmul+3,w
 11563  187F  00C7               	movwf	___fldiv@b+3
 11564  1880  0828               	movf	?___flmul+2,w
 11565  1881  00C6               	movwf	___fldiv@b+2
 11566  1882  0827               	movf	?___flmul+1,w
 11567  1883  00C5               	movwf	___fldiv@b+1
 11568  1884  0826               	movf	?___flmul,w
 11569  1885  00C4               	movwf	___fldiv@b
 11570  1886  319C  24E2  3198   	fcall	___fldiv
 11571  1889  0020               	movlb	0	; select bank0
 11572  188A  0843               	movf	?___fldiv+3,w
 11573  188B  00DD               	movwf	___flge@ff1+3
 11574  188C  0842               	movf	?___fldiv+2,w
 11575  188D  00DC               	movwf	___flge@ff1+2
 11576  188E  0841               	movf	?___fldiv+1,w
 11577  188F  00DB               	movwf	___flge@ff1+1
 11578  1890  0840               	movf	?___fldiv,w
 11579  1891  00DA               	movwf	___flge@ff1
 11580  1892  0021               	movlb	1	; select bank1
 11581  1893  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11582  1894  0085               	movwf	5
 11583  1895  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 11584  1896  0084               	movwf	4
 11585  1897  3584               	lslf	4,f
 11586  1898  0D85               	rlf	5,f
 11587  1899  304E               	movlw	low (_OCD_threshold_setting| (0+32768))
 11588  189A  0784               	addwf	4,f
 11589  189B  30B8               	movlw	high (_OCD_threshold_setting| (0+32768))
 11590  189C  3D85               	addwfc	5,f
 11591  189D  3F00               	moviw [0]fsr0
 11592  189E  0020               	movlb	0	; select bank0
 11593  189F  00EC               	movwf	??_setOverCurrentDischargeProtection
 11594  18A0  3F01               	moviw [1]fsr0
 11595  18A1  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11596  18A2  086C               	movf	??_setOverCurrentDischargeProtection,w
 11597  18A3  00F1               	movwf	___xxtofl@val
 11598  18A4  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11599  18A5  00F2               	movwf	___xxtofl@val+1
 11600  18A6  0D89               	rlf	9,f
 11601  18A7  3B89               	subwfb	9,f
 11602  18A8  0989               	comf	9,f
 11603  18A9  00F3               	movwf	___xxtofl@val+2
 11604  18AA  00F4               	movwf	___xxtofl@val+3
 11605  18AB  3001               	movlw	1
 11606  18AC  31AD  256C  3198   	fcall	___xxtofl
 11607  18AF  0874               	movf	?___xxtofl+3,w
 11608  18B0  0020               	movlb	0	; select bank0
 11609  18B1  00E1               	movwf	___flge@ff2+3
 11610  18B2  0873               	movf	?___xxtofl+2,w
 11611  18B3  00E0               	movwf	___flge@ff2+2
 11612  18B4  0872               	movf	?___xxtofl+1,w
 11613  18B5  00DF               	movwf	___flge@ff2+1
 11614  18B6  0871               	movf	?___xxtofl,w
 11615  18B7  00DE               	movwf	___flge@ff2
 11616  18B8  31AB  2375  3198   	fcall	___flge
 11617  18BB  1C03               	btfss	3,0
 11618  18BC  28C5               	goto	l8053
 11619                           
 11620                           ;BQ76920.c: 110:             protect2.bits.OCD_THRESH = i;
 11621  18BD  0023               	movlb	3	; select bank3
 11622  18BE  0853               	movf	BQ76920@protect2^(0+384),w
 11623  18BF  0021               	movlb	1	; select bank1
 11624  18C0  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11625  18C1  39F0               	andlw	-16
 11626  18C2  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11627  18C3  0023               	movlb	3	; select bank3
 11628  18C4  00D3               	movwf	BQ76920@protect2^(0+384)
 11629  18C5                     l8053:	
 11630                           
 11631                           ;BQ76920.c: 112:     }
 11632  18C5  3001               	movlw	1
 11633  18C6  0021               	movlb	1	; select bank1
 11634  18C7  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 11635  18C8  3000               	movlw	0
 11636  18C9  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 11637  18CA  3000               	movlw	0
 11638  18CB  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11639  18CC  300F               	movlw	15
 11640  18CD  1903               	skipnz
 11641  18CE  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 11642  18CF  1C03               	skipc
 11643  18D0  2819               	goto	l8047
 11644                           
 11645                           ;BQ76920.c: 114:     protect2.bits.OCD_DELAY = 0;
 11646  18D1  308F               	movlw	-113
 11647  18D2  0023               	movlb	3	; select bank3
 11648  18D3  05D3               	andwf	BQ76920@protect2^(0+384),f
 11649                           
 11650                           ;BQ76920.c: 115:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 11651  18D4  0021               	movlb	1	; select bank1
 11652  18D5  01AA               	clrf	setOverCurrentDischargeProtection@i_977^(0+128)
 11653  18D6  01AB               	clrf	(setOverCurrentDischargeProtection@i_977+1)^(0+128)
 11654  18D7                     l8065:	
 11655                           
 11656                           ;BQ76920.c: 116:         if (delay_ms >= OCD_delay_setting[i]) {
 11657  18D7  082B               	movf	(setOverCurrentDischargeProtection@i_977+1)^(0+128),w
 11658  18D8  0085               	movwf	5
 11659  18D9  082A               	movf	setOverCurrentDischargeProtection@i_977^(0+128),w
 11660  18DA  0084               	movwf	4
 11661  18DB  3584               	lslf	4,f
 11662  18DC  0D85               	rlf	5,f
 11663  18DD  3062               	movlw	low (_OCD_delay_setting| (0+32768))
 11664  18DE  0784               	addwf	4,f
 11665  18DF  30B9               	movlw	high (_OCD_delay_setting| (0+32768))
 11666  18E0  3D85               	addwfc	5,f
 11667  18E1  3F00               	moviw [0]fsr0
 11668  18E2  0020               	movlb	0	; select bank0
 11669  18E3  00EC               	movwf	??_setOverCurrentDischargeProtection
 11670  18E4  3F01               	moviw [1]fsr0
 11671  18E5  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11672  18E6  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 11673  18E7  3A80               	xorlw	128
 11674  18E8  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 11675  18E9  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11676  18EA  3A80               	xorlw	128
 11677  18EB  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 11678  18EC  1D03               	skipz
 11679  18ED  28F0               	goto	u11195
 11680  18EE  086C               	movf	??_setOverCurrentDischargeProtection,w
 11681  18EF  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 11682  18F0                     u11195:	
 11683  18F0  1C03               	skipc
 11684  18F1  28FF               	goto	l8069
 11685                           
 11686                           ;BQ76920.c: 117:             protect2.bits.OCD_DELAY = i;
 11687  18F2  0021               	movlb	1	; select bank1
 11688  18F3  082A               	movf	setOverCurrentDischargeProtection@i_977^(0+128),w
 11689  18F4  0020               	movlb	0	; select bank0
 11690  18F5  00EC               	movwf	??_setOverCurrentDischargeProtection
 11691  18F6  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 11692  18F7  0023               	movlb	3	; select bank3
 11693  18F8  0853               	movf	BQ76920@protect2^(0+384),w
 11694  18F9  0020               	movlb	0	; select bank0
 11695  18FA  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11696  18FB  398F               	andlw	-113
 11697  18FC  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11698  18FD  0023               	movlb	3	; select bank3
 11699  18FE  00D3               	movwf	BQ76920@protect2^(0+384)
 11700  18FF                     l8069:	
 11701                           
 11702                           ;BQ76920.c: 119:     }
 11703  18FF  3001               	movlw	1
 11704  1900  0021               	movlb	1	; select bank1
 11705  1901  07AA               	addwf	setOverCurrentDischargeProtection@i_977^(0+128),f
 11706  1902  3000               	movlw	0
 11707  1903  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_977+1)^(0+128),f
 11708  1904  3000               	movlw	0
 11709  1905  022B               	subwf	(setOverCurrentDischargeProtection@i_977+1)^(0+128),w
 11710  1906  3007               	movlw	7
 11711  1907  1903               	skipnz
 11712  1908  022A               	subwf	setOverCurrentDischargeProtection@i_977^(0+128),w
 11713  1909  1C03               	skipc
 11714  190A  28D7               	goto	l8065
 11715                           
 11716                           ;BQ76920.c: 121:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 11717  190B  3018               	movlw	24
 11718  190C  00F5               	movwf	I2C_writeRegister@slaveAddress
 11719  190D  3000               	movlw	0
 11720  190E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11721  190F  3007               	movlw	7
 11722  1910  00F7               	movwf	I2C_writeRegister@regAddress
 11723  1911  3000               	movlw	0
 11724  1912  00F8               	movwf	I2C_writeRegister@regAddress+1
 11725  1913  0023               	movlb	3	; select bank3
 11726  1914  0853               	movf	BQ76920@protect2^(0+384),w
 11727  1915  0020               	movlb	0	; select bank0
 11728  1916  00EC               	movwf	??_setOverCurrentDischargeProtection
 11729  1917  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 11730  1918  086C               	movf	??_setOverCurrentDischargeProtection,w
 11731  1919  00F9               	movwf	I2C_writeRegister@data
 11732  191A  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11733  191B  00FA               	movwf	I2C_writeRegister@data+1
 11734  191C  31B6  2692         	fcall	_I2C_writeRegister
 11735  191E  0008               	return
 11736  191F                     __end_of_setOverCurrentDischargeProtection:	
 11737                           
 11738                           	psect	text40
 11739  2B75                     __ptext40:	
 11740 ;; *************** function ___flge *****************
 11741 ;; Defined at:
 11742 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11743 ;; Parameters:    Size  Location     Type
 11744 ;;  ff1             4   58[BANK0 ] void 
 11745 ;;  ff2             4   62[BANK0 ] void 
 11746 ;; Auto vars:     Size  Location     Type
 11747 ;;		None
 11748 ;; Return value:  Size  Location     Type
 11749 ;;		None               void
 11750 ;; Registers used:
 11751 ;;		wreg, status,2, status,0
 11752 ;; Tracked objects:
 11753 ;;		On entry : 0/0
 11754 ;;		On exit  : 0/0
 11755 ;;		Unchanged: 0/0
 11756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11757 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11759 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11760 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11761 ;;Total ram usage:       12 bytes
 11762 ;; Hardware stack levels used:    1
 11763 ;; Hardware stack levels required when called:    1
 11764 ;; This function calls:
 11765 ;;		Nothing
 11766 ;; This function is called by:
 11767 ;;		_setShortCircuitProtection
 11768 ;;		_setOverCurrentDischargeProtection
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           
 11773                           ;psect for function ___flge
 11774  2B75                     ___flge:	
 11775                           
 11776                           ;incstack = 0
 11777                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11778  2B75  3000               	movlw	0
 11779  2B76  0020               	movlb	0	; select bank0
 11780  2B77  055A               	andwf	___flge@ff1,w
 11781  2B78  00E2               	movwf	??___flge
 11782  2B79  3000               	movlw	0
 11783  2B7A  055B               	andwf	___flge@ff1+1,w
 11784  2B7B  00E3               	movwf	??___flge+1
 11785  2B7C  3080               	movlw	128
 11786  2B7D  055C               	andwf	___flge@ff1+2,w
 11787  2B7E  00E4               	movwf	??___flge+2
 11788  2B7F  307F               	movlw	127
 11789  2B80  055D               	andwf	___flge@ff1+3,w
 11790  2B81  00E5               	movwf	??___flge+3
 11791  2B82  0865               	movf	??___flge+3,w
 11792  2B83  0464               	iorwf	??___flge+2,w
 11793  2B84  0463               	iorwf	??___flge+1,w
 11794  2B85  0462               	iorwf	??___flge,w
 11795  2B86  1D03               	skipz
 11796  2B87  2B90               	goto	l1024
 11797  2B88  3000               	movlw	0
 11798  2B89  00DD               	movwf	___flge@ff1+3
 11799  2B8A  3000               	movlw	0
 11800  2B8B  00DC               	movwf	___flge@ff1+2
 11801  2B8C  3000               	movlw	0
 11802  2B8D  00DB               	movwf	___flge@ff1+1
 11803  2B8E  3000               	movlw	0
 11804  2B8F  00DA               	movwf	___flge@ff1
 11805  2B90                     l1024:	
 11806  2B90  3000               	movlw	0
 11807  2B91  055E               	andwf	___flge@ff2,w
 11808  2B92  00E2               	movwf	??___flge
 11809  2B93  3000               	movlw	0
 11810  2B94  055F               	andwf	___flge@ff2+1,w
 11811  2B95  00E3               	movwf	??___flge+1
 11812  2B96  3080               	movlw	128
 11813  2B97  0560               	andwf	___flge@ff2+2,w
 11814  2B98  00E4               	movwf	??___flge+2
 11815  2B99  307F               	movlw	127
 11816  2B9A  0561               	andwf	___flge@ff2+3,w
 11817  2B9B  00E5               	movwf	??___flge+3
 11818  2B9C  0865               	movf	??___flge+3,w
 11819  2B9D  0464               	iorwf	??___flge+2,w
 11820  2B9E  0463               	iorwf	??___flge+1,w
 11821  2B9F  0462               	iorwf	??___flge,w
 11822  2BA0  1D03               	skipz
 11823  2BA1  2BAA               	goto	l7889
 11824  2BA2  3000               	movlw	0
 11825  2BA3  00E1               	movwf	___flge@ff2+3
 11826  2BA4  3000               	movlw	0
 11827  2BA5  00E0               	movwf	___flge@ff2+2
 11828  2BA6  3000               	movlw	0
 11829  2BA7  00DF               	movwf	___flge@ff2+1
 11830  2BA8  3000               	movlw	0
 11831  2BA9  00DE               	movwf	___flge@ff2
 11832  2BAA                     l7889:	
 11833  2BAA  1FDD               	btfss	___flge@ff1+3,7
 11834  2BAB  2BC4               	goto	l7893
 11835  2BAC  3000               	movlw	0
 11836  2BAD  00E2               	movwf	??___flge
 11837  2BAE  3000               	movlw	0
 11838  2BAF  00E3               	movwf	??___flge+1
 11839  2BB0  3000               	movlw	0
 11840  2BB1  00E4               	movwf	??___flge+2
 11841  2BB2  3080               	movlw	128
 11842  2BB3  00E5               	movwf	??___flge+3
 11843  2BB4  085A               	movf	___flge@ff1,w
 11844  2BB5  02E2               	subwf	??___flge,f
 11845  2BB6  085B               	movf	___flge@ff1+1,w
 11846  2BB7  3BE3               	subwfb	??___flge+1,f
 11847  2BB8  085C               	movf	___flge@ff1+2,w
 11848  2BB9  3BE4               	subwfb	??___flge+2,f
 11849  2BBA  085D               	movf	___flge@ff1+3,w
 11850  2BBB  3BE5               	subwfb	??___flge+3,f
 11851  2BBC  0865               	movf	??___flge+3,w
 11852  2BBD  00DD               	movwf	___flge@ff1+3
 11853  2BBE  0864               	movf	??___flge+2,w
 11854  2BBF  00DC               	movwf	___flge@ff1+2
 11855  2BC0  0863               	movf	??___flge+1,w
 11856  2BC1  00DB               	movwf	___flge@ff1+1
 11857  2BC2  0862               	movf	??___flge,w
 11858  2BC3  00DA               	movwf	___flge@ff1
 11859  2BC4                     l7893:	
 11860  2BC4  1FE1               	btfss	___flge@ff2+3,7
 11861  2BC5  2BDE               	goto	l1027
 11862  2BC6  3000               	movlw	0
 11863  2BC7  00E2               	movwf	??___flge
 11864  2BC8  3000               	movlw	0
 11865  2BC9  00E3               	movwf	??___flge+1
 11866  2BCA  3000               	movlw	0
 11867  2BCB  00E4               	movwf	??___flge+2
 11868  2BCC  3080               	movlw	128
 11869  2BCD  00E5               	movwf	??___flge+3
 11870  2BCE  085E               	movf	___flge@ff2,w
 11871  2BCF  02E2               	subwf	??___flge,f
 11872  2BD0  085F               	movf	___flge@ff2+1,w
 11873  2BD1  3BE3               	subwfb	??___flge+1,f
 11874  2BD2  0860               	movf	___flge@ff2+2,w
 11875  2BD3  3BE4               	subwfb	??___flge+2,f
 11876  2BD4  0861               	movf	___flge@ff2+3,w
 11877  2BD5  3BE5               	subwfb	??___flge+3,f
 11878  2BD6  0865               	movf	??___flge+3,w
 11879  2BD7  00E1               	movwf	___flge@ff2+3
 11880  2BD8  0864               	movf	??___flge+2,w
 11881  2BD9  00E0               	movwf	___flge@ff2+2
 11882  2BDA  0863               	movf	??___flge+1,w
 11883  2BDB  00DF               	movwf	___flge@ff2+1
 11884  2BDC  0862               	movf	??___flge,w
 11885  2BDD  00DE               	movwf	___flge@ff2
 11886  2BDE                     l1027:	
 11887  2BDE  3080               	movlw	128
 11888  2BDF  06DD               	xorwf	___flge@ff1+3,f
 11889  2BE0  3080               	movlw	128
 11890  2BE1  06E1               	xorwf	___flge@ff2+3,f
 11891  2BE2  0861               	movf	___flge@ff2+3,w
 11892  2BE3  025D               	subwf	___flge@ff1+3,w
 11893  2BE4  1D03               	skipz
 11894  2BE5  0008               	return
 11895  2BE6  0860               	movf	___flge@ff2+2,w
 11896  2BE7  025C               	subwf	___flge@ff1+2,w
 11897  2BE8  1D03               	skipz
 11898  2BE9  0008               	return
 11899  2BEA  085F               	movf	___flge@ff2+1,w
 11900  2BEB  025B               	subwf	___flge@ff1+1,w
 11901  2BEC  1D03               	skipz
 11902  2BED  0008               	return
 11903  2BEE  085E               	movf	___flge@ff2,w
 11904  2BEF  025A               	subwf	___flge@ff1,w
 11905  2BF0  0008               	return
 11906  2BF1                     __end_of___flge:	
 11907                           
 11908                           	psect	text41
 11909  2289                     __ptext41:	
 11910 ;; *************** function _setCellUndervoltageProtection *****************
 11911 ;; Defined at:
 11912 ;;		line 127 in file "BQ76920.c"
 11913 ;; Parameters:    Size  Location     Type
 11914 ;;  voltage_mV      2   18[BANK0 ] int 
 11915 ;;  delay_s         2   20[BANK0 ] int 
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;  i               2   37[BANK0 ] int 
 11918 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 11919 ;; Return value:  Size  Location     Type
 11920 ;;                  1    wreg      void 
 11921 ;; Registers used:
 11922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11923 ;; Tracked objects:
 11924 ;;		On entry : 0/0
 11925 ;;		On exit  : 0/0
 11926 ;;		Unchanged: 0/0
 11927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11928 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11929 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11930 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11931 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11932 ;;Total ram usage:       21 bytes
 11933 ;; Hardware stack levels used:    1
 11934 ;; Hardware stack levels required when called:    3
 11935 ;; This function calls:
 11936 ;;		_I2C_writeRegister
 11937 ;;		___aldiv
 11938 ;;		___lmul
 11939 ;;		_readRegister
 11940 ;; This function is called by:
 11941 ;;		_init_AFE
 11942 ;; This function uses a non-reentrant model
 11943 ;;
 11944                           
 11945                           
 11946                           ;psect for function _setCellUndervoltageProtection
 11947  2289                     _setCellUndervoltageProtection:	
 11948                           
 11949                           ;BQ76920.c: 129:     minCellVoltage = voltage_mV;
 11950                           
 11951                           ;incstack = 0
 11952                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 11953  2289  0020               	movlb	0	; select bank0
 11954  228A  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 11955  228B  0023               	movlb	3	; select bank3
 11956  228C  00C7               	movwf	(_minCellVoltage+1)^(0+384)
 11957  228D  0020               	movlb	0	; select bank0
 11958  228E  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 11959  228F  0023               	movlb	3	; select bank3
 11960  2290  00C6               	movwf	_minCellVoltage^(0+384)
 11961                           
 11962                           ;BQ76920.c: 131:     protect3.regByte = readRegister(0x18, 0x08);
 11963  2291  3018               	movlw	24
 11964  2292  00F5               	movwf	readRegister@slaveAddress
 11965  2293  3000               	movlw	0
 11966  2294  00F6               	movwf	readRegister@slaveAddress+1
 11967  2295  3008               	movlw	8
 11968  2296  00F7               	movwf	readRegister@regAddress
 11969  2297  3000               	movlw	0
 11970  2298  00F8               	movwf	readRegister@regAddress+1
 11971  2299  31B7  27CA  31A2   	fcall	_readRegister
 11972  229C  0875               	movf	?_readRegister,w
 11973  229D  0020               	movlb	0	; select bank0
 11974  229E  00B6               	movwf	??_setCellUndervoltageProtection
 11975  229F  0836               	movf	??_setCellUndervoltageProtection,w
 11976  22A0  0023               	movlb	3	; select bank3
 11977  22A1  00D2               	movwf	BQ76920@protect3^(0+384)
 11978                           
 11979                           ;BQ76920.c: 132:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 11980  22A2  0022               	movlb	2	; select bank2
 11981  22A3  086D               	movf	_adcGain^(0+256),w
 11982  22A4  0020               	movlb	0	; select bank0
 11983  22A5  00A4               	movwf	___aldiv@divisor
 11984  22A6  0022               	movlb	2	; select bank2
 11985  22A7  086E               	movf	(_adcGain+1)^(0+256),w
 11986  22A8  0020               	movlb	0	; select bank0
 11987  22A9  00A5               	movwf	___aldiv@divisor+1
 11988  22AA  0D89               	rlf	9,f
 11989  22AB  3B89               	subwfb	9,f
 11990  22AC  0989               	comf	9,f
 11991  22AD  00A6               	movwf	___aldiv@divisor+2
 11992  22AE  00A7               	movwf	___aldiv@divisor+3
 11993  22AF  0022               	movlb	2	; select bank2
 11994  22B0  086B               	movf	_adcOffset^(0+256),w
 11995  22B1  0020               	movlb	0	; select bank0
 11996  22B2  00B6               	movwf	??_setCellUndervoltageProtection
 11997  22B3  0022               	movlb	2	; select bank2
 11998  22B4  086C               	movf	(_adcOffset+1)^(0+256),w
 11999  22B5  0020               	movlb	0	; select bank0
 12000  22B6  00B7               	movwf	??_setCellUndervoltageProtection+1
 12001  22B7  3000               	movlw	0
 12002  22B8  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12003  22B9  30FF               	movlw	255
 12004  22BA  00B8               	movwf	??_setCellUndervoltageProtection+2
 12005  22BB  00B9               	movwf	??_setCellUndervoltageProtection+3
 12006  22BC  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12007  22BD  00BA               	movwf	??_setCellUndervoltageProtection+4
 12008  22BE  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12009  22BF  00BB               	movwf	??_setCellUndervoltageProtection+5
 12010  22C0  3000               	movlw	0
 12011  22C1  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12012  22C2  30FF               	movlw	255
 12013  22C3  00BC               	movwf	??_setCellUndervoltageProtection+6
 12014  22C4  00BD               	movwf	??_setCellUndervoltageProtection+7
 12015  22C5  0836               	movf	??_setCellUndervoltageProtection,w
 12016  22C6  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12017  22C7  0837               	movf	??_setCellUndervoltageProtection+1,w
 12018  22C8  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12019  22C9  0838               	movf	??_setCellUndervoltageProtection+2,w
 12020  22CA  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12021  22CB  0839               	movf	??_setCellUndervoltageProtection+3,w
 12022  22CC  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12023  22CD  083D               	movf	??_setCellUndervoltageProtection+7,w
 12024  22CE  00F4               	movwf	___lmul@multiplier+3
 12025  22CF  083C               	movf	??_setCellUndervoltageProtection+6,w
 12026  22D0  00F3               	movwf	___lmul@multiplier+2
 12027  22D1  083B               	movf	??_setCellUndervoltageProtection+5,w
 12028  22D2  00F2               	movwf	___lmul@multiplier+1
 12029  22D3  083A               	movf	??_setCellUndervoltageProtection+4,w
 12030  22D4  00F1               	movwf	___lmul@multiplier
 12031  22D5  3000               	movlw	0
 12032  22D6  00F8               	movwf	___lmul@multiplicand+3
 12033  22D7  3000               	movlw	0
 12034  22D8  00F7               	movwf	___lmul@multiplicand+2
 12035  22D9  3003               	movlw	3
 12036  22DA  00F6               	movwf	___lmul@multiplicand+1
 12037  22DB  30E8               	movlw	232
 12038  22DC  00F5               	movwf	___lmul@multiplicand
 12039  22DD  31B7  2731  31A2   	fcall	___lmul
 12040  22E0  0874               	movf	?___lmul+3,w
 12041  22E1  0020               	movlb	0	; select bank0
 12042  22E2  00AB               	movwf	___aldiv@dividend+3
 12043  22E3  0873               	movf	?___lmul+2,w
 12044  22E4  00AA               	movwf	___aldiv@dividend+2
 12045  22E5  0872               	movf	?___lmul+1,w
 12046  22E6  00A9               	movwf	___aldiv@dividend+1
 12047  22E7  0871               	movf	?___lmul,w
 12048  22E8  00A8               	movwf	___aldiv@dividend
 12049  22E9  31AC  24EA  31A2   	fcall	___aldiv
 12050  22EC  0020               	movlb	0	; select bank0
 12051  22ED  0824               	movf	?___aldiv,w
 12052  22EE  00BE               	movwf	??_setCellUndervoltageProtection+8
 12053  22EF  0825               	movf	?___aldiv+1,w
 12054  22F0  00BF               	movwf	??_setCellUndervoltageProtection+9
 12055  22F1  0826               	movf	?___aldiv+2,w
 12056  22F2  00C0               	movwf	??_setCellUndervoltageProtection+10
 12057  22F3  0827               	movf	?___aldiv+3,w
 12058  22F4  00C1               	movwf	??_setCellUndervoltageProtection+11
 12059  22F5  3004               	movlw	4
 12060  22F6  00C2               	movwf	??_setCellUndervoltageProtection+12
 12061  22F7                     u11215:	
 12062  22F7  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12063  22F8  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12064  22F9  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12065  22FA  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12066  22FB  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12067  22FC  2AF7               	goto	u11215
 12068  22FD  083E               	movf	??_setCellUndervoltageProtection+8,w
 12069  22FE  00C3               	movwf	??_setCellUndervoltageProtection+13
 12070  22FF  0843               	movf	??_setCellUndervoltageProtection+13,w
 12071  2300  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12072                           
 12073                           ;BQ76920.c: 133:     uv_trip += 1;
 12074  2301  3001               	movlw	1
 12075  2302  00B6               	movwf	??_setCellUndervoltageProtection
 12076  2303  0836               	movf	??_setCellUndervoltageProtection,w
 12077  2304  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12078                           
 12079                           ;BQ76920.c: 134:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12080  2305  3018               	movlw	24
 12081  2306  00F5               	movwf	I2C_writeRegister@slaveAddress
 12082  2307  3000               	movlw	0
 12083  2308  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12084  2309  300A               	movlw	10
 12085  230A  00F7               	movwf	I2C_writeRegister@regAddress
 12086  230B  3000               	movlw	0
 12087  230C  00F8               	movwf	I2C_writeRegister@regAddress+1
 12088  230D  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12089  230E  00B6               	movwf	??_setCellUndervoltageProtection
 12090  230F  01B7               	clrf	??_setCellUndervoltageProtection+1
 12091  2310  0836               	movf	??_setCellUndervoltageProtection,w
 12092  2311  00F9               	movwf	I2C_writeRegister@data
 12093  2312  0837               	movf	??_setCellUndervoltageProtection+1,w
 12094  2313  00FA               	movwf	I2C_writeRegister@data+1
 12095  2314  31B6  2692  31A2   	fcall	_I2C_writeRegister
 12096                           
 12097                           ;BQ76920.c: 136:     protect3.bits.UV_DELAY = 0;
 12098  2317  303F               	movlw	-193
 12099  2318  0023               	movlb	3	; select bank3
 12100  2319  05D2               	andwf	BQ76920@protect3^(0+384),f
 12101                           
 12102                           ;BQ76920.c: 137:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12103  231A  0020               	movlb	0	; select bank0
 12104  231B  01C5               	clrf	setCellUndervoltageProtection@i
 12105  231C  01C6               	clrf	setCellUndervoltageProtection@i+1
 12106  231D                     l8095:	
 12107                           
 12108                           ;BQ76920.c: 138:         if (delay_s >= UV_delay_setting[i]) {
 12109  231D  0846               	movf	setCellUndervoltageProtection@i+1,w
 12110  231E  0085               	movwf	5
 12111  231F  0845               	movf	setCellUndervoltageProtection@i,w
 12112  2320  0084               	movwf	4
 12113  2321  3584               	lslf	4,f
 12114  2322  0D85               	rlf	5,f
 12115  2323  3099               	movlw	low (_UV_delay_setting| (0+32768))
 12116  2324  0784               	addwf	4,f
 12117  2325  30B9               	movlw	high (_UV_delay_setting| (0+32768))
 12118  2326  3D85               	addwfc	5,f
 12119  2327  3F00               	moviw [0]fsr0
 12120  2328  00B6               	movwf	??_setCellUndervoltageProtection
 12121  2329  3F01               	moviw [1]fsr0
 12122  232A  00B7               	movwf	??_setCellUndervoltageProtection+1
 12123  232B  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12124  232C  3A80               	xorlw	128
 12125  232D  00B8               	movwf	??_setCellUndervoltageProtection+2
 12126  232E  0837               	movf	??_setCellUndervoltageProtection+1,w
 12127  232F  3A80               	xorlw	128
 12128  2330  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12129  2331  1D03               	skipz
 12130  2332  2B35               	goto	u11225
 12131  2333  0836               	movf	??_setCellUndervoltageProtection,w
 12132  2334  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12133  2335                     u11225:	
 12134  2335  1C03               	skipc
 12135  2336  2B45               	goto	l8099
 12136                           
 12137                           ;BQ76920.c: 139:             protect3.bits.UV_DELAY = i;
 12138  2337  0020               	movlb	0	; select bank0
 12139  2338  0845               	movf	setCellUndervoltageProtection@i,w
 12140  2339  00B6               	movwf	??_setCellUndervoltageProtection
 12141  233A  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12142  233B  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12143  233C  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12144  233D  0023               	movlb	3	; select bank3
 12145  233E  0852               	movf	BQ76920@protect3^(0+384),w
 12146  233F  0020               	movlb	0	; select bank0
 12147  2340  0636               	xorwf	??_setCellUndervoltageProtection,w
 12148  2341  393F               	andlw	-193
 12149  2342  0636               	xorwf	??_setCellUndervoltageProtection,w
 12150  2343  0023               	movlb	3	; select bank3
 12151  2344  00D2               	movwf	BQ76920@protect3^(0+384)
 12152  2345                     l8099:	
 12153                           
 12154                           ;BQ76920.c: 141:     }
 12155  2345  3001               	movlw	1
 12156  2346  0020               	movlb	0	; select bank0
 12157  2347  07C5               	addwf	setCellUndervoltageProtection@i,f
 12158  2348  3000               	movlw	0
 12159  2349  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12160  234A  3000               	movlw	0
 12161  234B  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12162  234C  3003               	movlw	3
 12163  234D  1903               	skipnz
 12164  234E  0245               	subwf	setCellUndervoltageProtection@i,w
 12165  234F  1C03               	skipc
 12166  2350  2B1D               	goto	l8095
 12167                           
 12168                           ;BQ76920.c: 142:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12169  2351  3018               	movlw	24
 12170  2352  00F5               	movwf	I2C_writeRegister@slaveAddress
 12171  2353  3000               	movlw	0
 12172  2354  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12173  2355  3008               	movlw	8
 12174  2356  00F7               	movwf	I2C_writeRegister@regAddress
 12175  2357  3000               	movlw	0
 12176  2358  00F8               	movwf	I2C_writeRegister@regAddress+1
 12177  2359  0023               	movlb	3	; select bank3
 12178  235A  0852               	movf	BQ76920@protect3^(0+384),w
 12179  235B  0020               	movlb	0	; select bank0
 12180  235C  00B6               	movwf	??_setCellUndervoltageProtection
 12181  235D  01B7               	clrf	??_setCellUndervoltageProtection+1
 12182  235E  0836               	movf	??_setCellUndervoltageProtection,w
 12183  235F  00F9               	movwf	I2C_writeRegister@data
 12184  2360  0837               	movf	??_setCellUndervoltageProtection+1,w
 12185  2361  00FA               	movwf	I2C_writeRegister@data+1
 12186  2362  31B6  2692         	fcall	_I2C_writeRegister
 12187  2364  0008               	return
 12188  2365                     __end_of_setCellUndervoltageProtection:	
 12189                           
 12190                           	psect	text42
 12191  21B4                     __ptext42:	
 12192 ;; *************** function _setCellOvervoltageProtection *****************
 12193 ;; Defined at:
 12194 ;;		line 148 in file "BQ76920.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;  voltage_mV      2   18[BANK0 ] int 
 12197 ;;  delay_s         2   20[BANK0 ] int 
 12198 ;; Auto vars:     Size  Location     Type
 12199 ;;  i               2   37[BANK0 ] int 
 12200 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12201 ;; Return value:  Size  Location     Type
 12202 ;;                  1    wreg      void 
 12203 ;; Registers used:
 12204 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12205 ;; Tracked objects:
 12206 ;;		On entry : 0/0
 12207 ;;		On exit  : 0/0
 12208 ;;		Unchanged: 0/0
 12209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12210 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12211 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12212 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12213 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12214 ;;Total ram usage:       21 bytes
 12215 ;; Hardware stack levels used:    1
 12216 ;; Hardware stack levels required when called:    3
 12217 ;; This function calls:
 12218 ;;		_I2C_writeRegister
 12219 ;;		___aldiv
 12220 ;;		___lmul
 12221 ;;		_readRegister
 12222 ;; This function is called by:
 12223 ;;		_init_AFE
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function _setCellOvervoltageProtection
 12229  21B4                     _setCellOvervoltageProtection:	
 12230                           
 12231                           ;BQ76920.c: 150:     maxCellVoltage = voltage_mV;
 12232                           
 12233                           ;incstack = 0
 12234                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12235  21B4  0020               	movlb	0	; select bank0
 12236  21B5  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12237  21B6  0023               	movlb	3	; select bank3
 12238  21B7  00C9               	movwf	(_maxCellVoltage+1)^(0+384)
 12239  21B8  0020               	movlb	0	; select bank0
 12240  21B9  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12241  21BA  0023               	movlb	3	; select bank3
 12242  21BB  00C8               	movwf	_maxCellVoltage^(0+384)
 12243                           
 12244                           ;BQ76920.c: 151:     protect3.regByte = readRegister(0x18, 0x08);
 12245  21BC  3018               	movlw	24
 12246  21BD  00F5               	movwf	readRegister@slaveAddress
 12247  21BE  3000               	movlw	0
 12248  21BF  00F6               	movwf	readRegister@slaveAddress+1
 12249  21C0  3008               	movlw	8
 12250  21C1  00F7               	movwf	readRegister@regAddress
 12251  21C2  3000               	movlw	0
 12252  21C3  00F8               	movwf	readRegister@regAddress+1
 12253  21C4  31B7  27CA  31A1   	fcall	_readRegister
 12254  21C7  0875               	movf	?_readRegister,w
 12255  21C8  0020               	movlb	0	; select bank0
 12256  21C9  00B6               	movwf	??_setCellOvervoltageProtection
 12257  21CA  0836               	movf	??_setCellOvervoltageProtection,w
 12258  21CB  0023               	movlb	3	; select bank3
 12259  21CC  00D2               	movwf	BQ76920@protect3^(0+384)
 12260                           
 12261                           ;BQ76920.c: 152:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12262  21CD  0022               	movlb	2	; select bank2
 12263  21CE  086D               	movf	_adcGain^(0+256),w
 12264  21CF  0020               	movlb	0	; select bank0
 12265  21D0  00A4               	movwf	___aldiv@divisor
 12266  21D1  0022               	movlb	2	; select bank2
 12267  21D2  086E               	movf	(_adcGain+1)^(0+256),w
 12268  21D3  0020               	movlb	0	; select bank0
 12269  21D4  00A5               	movwf	___aldiv@divisor+1
 12270  21D5  0D89               	rlf	9,f
 12271  21D6  3B89               	subwfb	9,f
 12272  21D7  0989               	comf	9,f
 12273  21D8  00A6               	movwf	___aldiv@divisor+2
 12274  21D9  00A7               	movwf	___aldiv@divisor+3
 12275  21DA  0022               	movlb	2	; select bank2
 12276  21DB  086B               	movf	_adcOffset^(0+256),w
 12277  21DC  0020               	movlb	0	; select bank0
 12278  21DD  00B6               	movwf	??_setCellOvervoltageProtection
 12279  21DE  0022               	movlb	2	; select bank2
 12280  21DF  086C               	movf	(_adcOffset+1)^(0+256),w
 12281  21E0  0020               	movlb	0	; select bank0
 12282  21E1  00B7               	movwf	??_setCellOvervoltageProtection+1
 12283  21E2  3000               	movlw	0
 12284  21E3  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12285  21E4  30FF               	movlw	255
 12286  21E5  00B8               	movwf	??_setCellOvervoltageProtection+2
 12287  21E6  00B9               	movwf	??_setCellOvervoltageProtection+3
 12288  21E7  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12289  21E8  00BA               	movwf	??_setCellOvervoltageProtection+4
 12290  21E9  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12291  21EA  00BB               	movwf	??_setCellOvervoltageProtection+5
 12292  21EB  3000               	movlw	0
 12293  21EC  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12294  21ED  30FF               	movlw	255
 12295  21EE  00BC               	movwf	??_setCellOvervoltageProtection+6
 12296  21EF  00BD               	movwf	??_setCellOvervoltageProtection+7
 12297  21F0  0836               	movf	??_setCellOvervoltageProtection,w
 12298  21F1  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12299  21F2  0837               	movf	??_setCellOvervoltageProtection+1,w
 12300  21F3  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12301  21F4  0838               	movf	??_setCellOvervoltageProtection+2,w
 12302  21F5  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12303  21F6  0839               	movf	??_setCellOvervoltageProtection+3,w
 12304  21F7  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12305  21F8  083D               	movf	??_setCellOvervoltageProtection+7,w
 12306  21F9  00F4               	movwf	___lmul@multiplier+3
 12307  21FA  083C               	movf	??_setCellOvervoltageProtection+6,w
 12308  21FB  00F3               	movwf	___lmul@multiplier+2
 12309  21FC  083B               	movf	??_setCellOvervoltageProtection+5,w
 12310  21FD  00F2               	movwf	___lmul@multiplier+1
 12311  21FE  083A               	movf	??_setCellOvervoltageProtection+4,w
 12312  21FF  00F1               	movwf	___lmul@multiplier
 12313  2200  3000               	movlw	0
 12314  2201  00F8               	movwf	___lmul@multiplicand+3
 12315  2202  3000               	movlw	0
 12316  2203  00F7               	movwf	___lmul@multiplicand+2
 12317  2204  3003               	movlw	3
 12318  2205  00F6               	movwf	___lmul@multiplicand+1
 12319  2206  30E8               	movlw	232
 12320  2207  00F5               	movwf	___lmul@multiplicand
 12321  2208  31B7  2731  31A1   	fcall	___lmul
 12322  220B  0874               	movf	?___lmul+3,w
 12323  220C  0020               	movlb	0	; select bank0
 12324  220D  00AB               	movwf	___aldiv@dividend+3
 12325  220E  0873               	movf	?___lmul+2,w
 12326  220F  00AA               	movwf	___aldiv@dividend+2
 12327  2210  0872               	movf	?___lmul+1,w
 12328  2211  00A9               	movwf	___aldiv@dividend+1
 12329  2212  0871               	movf	?___lmul,w
 12330  2213  00A8               	movwf	___aldiv@dividend
 12331  2214  31AC  24EA  31A1   	fcall	___aldiv
 12332  2217  0020               	movlb	0	; select bank0
 12333  2218  0824               	movf	?___aldiv,w
 12334  2219  00BE               	movwf	??_setCellOvervoltageProtection+8
 12335  221A  0825               	movf	?___aldiv+1,w
 12336  221B  00BF               	movwf	??_setCellOvervoltageProtection+9
 12337  221C  0826               	movf	?___aldiv+2,w
 12338  221D  00C0               	movwf	??_setCellOvervoltageProtection+10
 12339  221E  0827               	movf	?___aldiv+3,w
 12340  221F  00C1               	movwf	??_setCellOvervoltageProtection+11
 12341  2220  3004               	movlw	4
 12342  2221  00C2               	movwf	??_setCellOvervoltageProtection+12
 12343  2222                     u11245:	
 12344  2222  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12345  2223  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12346  2224  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12347  2225  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12348  2226  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12349  2227  2A22               	goto	u11245
 12350  2228  083E               	movf	??_setCellOvervoltageProtection+8,w
 12351  2229  00C3               	movwf	??_setCellOvervoltageProtection+13
 12352  222A  0843               	movf	??_setCellOvervoltageProtection+13,w
 12353  222B  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12354                           
 12355                           ;BQ76920.c: 153:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12356  222C  3018               	movlw	24
 12357  222D  00F5               	movwf	I2C_writeRegister@slaveAddress
 12358  222E  3000               	movlw	0
 12359  222F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12360  2230  3009               	movlw	9
 12361  2231  00F7               	movwf	I2C_writeRegister@regAddress
 12362  2232  3000               	movlw	0
 12363  2233  00F8               	movwf	I2C_writeRegister@regAddress+1
 12364  2234  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12365  2235  00B6               	movwf	??_setCellOvervoltageProtection
 12366  2236  01B7               	clrf	??_setCellOvervoltageProtection+1
 12367  2237  0836               	movf	??_setCellOvervoltageProtection,w
 12368  2238  00F9               	movwf	I2C_writeRegister@data
 12369  2239  0837               	movf	??_setCellOvervoltageProtection+1,w
 12370  223A  00FA               	movwf	I2C_writeRegister@data+1
 12371  223B  31B6  2692  31A1   	fcall	_I2C_writeRegister
 12372                           
 12373                           ;BQ76920.c: 155:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12374  223E  0020               	movlb	0	; select bank0
 12375  223F  01C5               	clrf	setCellOvervoltageProtection@i
 12376  2240  01C6               	clrf	setCellOvervoltageProtection@i+1
 12377  2241                     l8121:	
 12378                           
 12379                           ;BQ76920.c: 156:         if (delay_s >= OV_delay_setting[i]) {
 12380  2241  0846               	movf	setCellOvervoltageProtection@i+1,w
 12381  2242  0085               	movwf	5
 12382  2243  0845               	movf	setCellOvervoltageProtection@i,w
 12383  2244  0084               	movwf	4
 12384  2245  3584               	lslf	4,f
 12385  2246  0D85               	rlf	5,f
 12386  2247  3091               	movlw	low (_OV_delay_setting| (0+32768))
 12387  2248  0784               	addwf	4,f
 12388  2249  30B9               	movlw	high (_OV_delay_setting| (0+32768))
 12389  224A  3D85               	addwfc	5,f
 12390  224B  3F00               	moviw [0]fsr0
 12391  224C  00B6               	movwf	??_setCellOvervoltageProtection
 12392  224D  3F01               	moviw [1]fsr0
 12393  224E  00B7               	movwf	??_setCellOvervoltageProtection+1
 12394  224F  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12395  2250  3A80               	xorlw	128
 12396  2251  00B8               	movwf	??_setCellOvervoltageProtection+2
 12397  2252  0837               	movf	??_setCellOvervoltageProtection+1,w
 12398  2253  3A80               	xorlw	128
 12399  2254  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12400  2255  1D03               	skipz
 12401  2256  2A59               	goto	u11255
 12402  2257  0836               	movf	??_setCellOvervoltageProtection,w
 12403  2258  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12404  2259                     u11255:	
 12405  2259  1C03               	skipc
 12406  225A  2A69               	goto	l8125
 12407                           
 12408                           ;BQ76920.c: 157:             protect3.bits.UV_DELAY = i;
 12409  225B  0020               	movlb	0	; select bank0
 12410  225C  0845               	movf	setCellOvervoltageProtection@i,w
 12411  225D  00B6               	movwf	??_setCellOvervoltageProtection
 12412  225E  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12413  225F  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12414  2260  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12415  2261  0023               	movlb	3	; select bank3
 12416  2262  0852               	movf	BQ76920@protect3^(0+384),w
 12417  2263  0020               	movlb	0	; select bank0
 12418  2264  0636               	xorwf	??_setCellOvervoltageProtection,w
 12419  2265  393F               	andlw	-193
 12420  2266  0636               	xorwf	??_setCellOvervoltageProtection,w
 12421  2267  0023               	movlb	3	; select bank3
 12422  2268  00D2               	movwf	BQ76920@protect3^(0+384)
 12423  2269                     l8125:	
 12424                           
 12425                           ;BQ76920.c: 159:     }
 12426  2269  3001               	movlw	1
 12427  226A  0020               	movlb	0	; select bank0
 12428  226B  07C5               	addwf	setCellOvervoltageProtection@i,f
 12429  226C  3000               	movlw	0
 12430  226D  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12431  226E  3000               	movlw	0
 12432  226F  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12433  2270  3003               	movlw	3
 12434  2271  1903               	skipnz
 12435  2272  0245               	subwf	setCellOvervoltageProtection@i,w
 12436  2273  1C03               	skipc
 12437  2274  2A41               	goto	l8121
 12438                           
 12439                           ;BQ76920.c: 160:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12440  2275  3018               	movlw	24
 12441  2276  00F5               	movwf	I2C_writeRegister@slaveAddress
 12442  2277  3000               	movlw	0
 12443  2278  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12444  2279  3008               	movlw	8
 12445  227A  00F7               	movwf	I2C_writeRegister@regAddress
 12446  227B  3000               	movlw	0
 12447  227C  00F8               	movwf	I2C_writeRegister@regAddress+1
 12448  227D  0023               	movlb	3	; select bank3
 12449  227E  0852               	movf	BQ76920@protect3^(0+384),w
 12450  227F  0020               	movlb	0	; select bank0
 12451  2280  00B6               	movwf	??_setCellOvervoltageProtection
 12452  2281  01B7               	clrf	??_setCellOvervoltageProtection+1
 12453  2282  0836               	movf	??_setCellOvervoltageProtection,w
 12454  2283  00F9               	movwf	I2C_writeRegister@data
 12455  2284  0837               	movf	??_setCellOvervoltageProtection+1,w
 12456  2285  00FA               	movwf	I2C_writeRegister@data+1
 12457  2286  31B6  2692         	fcall	_I2C_writeRegister
 12458  2288  0008               	return
 12459  2289                     __end_of_setCellOvervoltageProtection:	
 12460                           
 12461                           	psect	text43
 12462  2F4C                     __ptext43:	
 12463 ;; *************** function _beginAFEcommunication *****************
 12464 ;; Defined at:
 12465 ;;		line 23 in file "BQ76920.c"
 12466 ;; Parameters:    Size  Location     Type
 12467 ;;		None
 12468 ;; Auto vars:     Size  Location     Type
 12469 ;;  i               2   13[BANK0 ] int 
 12470 ;;  commSuccess     2   11[BANK0 ] int 
 12471 ;; Return value:  Size  Location     Type
 12472 ;;                  2    0[BANK0 ] int 
 12473 ;; Registers used:
 12474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12475 ;; Tracked objects:
 12476 ;;		On entry : 0/0
 12477 ;;		On exit  : 0/0
 12478 ;;		Unchanged: 0/0
 12479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12481 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12482 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12483 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12484 ;;Total ram usage:       15 bytes
 12485 ;; Hardware stack levels used:    1
 12486 ;; Hardware stack levels required when called:    3
 12487 ;; This function calls:
 12488 ;;		_I2C_writeRegister
 12489 ;;		_readRegister
 12490 ;; This function is called by:
 12491 ;;		_statemachine
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           
 12496                           ;psect for function _beginAFEcommunication
 12497  2F4C                     _beginAFEcommunication:	
 12498                           
 12499                           ;BQ76920.c: 25:     int commSuccess = 0;
 12500                           
 12501                           ;incstack = 0
 12502                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12503  2F4C  0020               	movlb	0	; select bank0
 12504  2F4D  01AB               	clrf	beginAFEcommunication@commSuccess
 12505  2F4E  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12506                           
 12507                           ;BQ76920.c: 28:     for (int i = 0; i < 4; i++) {
 12508  2F4F  01AD               	clrf	beginAFEcommunication@i
 12509  2F50  01AE               	clrf	beginAFEcommunication@i+1
 12510  2F51                     l8229:	
 12511                           
 12512                           ;BQ76920.c: 29:         cellVoltages[i] = 0;
 12513  2F51  0020               	movlb	0	; select bank0
 12514  2F52  352D               	lslf	beginAFEcommunication@i,w
 12515  2F53  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12516  2F54  0086               	movwf	6
 12517  2F55  3001               	movlw	1	; select bank3/4
 12518  2F56  0087               	movwf	7
 12519  2F57  3000               	movlw	0
 12520  2F58  3FC0               	movwi [0]fsr1
 12521  2F59  3FC1               	movwi [1]fsr1
 12522                           
 12523                           ;BQ76920.c: 30:     }
 12524  2F5A  3001               	movlw	1
 12525  2F5B  07AD               	addwf	beginAFEcommunication@i,f
 12526  2F5C  3000               	movlw	0
 12527  2F5D  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12528  2F5E  082E               	movf	beginAFEcommunication@i+1,w
 12529  2F5F  3A80               	xorlw	128
 12530  2F60  00A2               	movwf	??_beginAFEcommunication
 12531  2F61  3080               	movlw	128
 12532  2F62  0222               	subwf	??_beginAFEcommunication,w
 12533  2F63  1D03               	skipz
 12534  2F64  2F67               	goto	u11345
 12535  2F65  3004               	movlw	4
 12536  2F66  022D               	subwf	beginAFEcommunication@i,w
 12537  2F67                     u11345:	
 12538  2F67  1C03               	skipc
 12539  2F68  2F51               	goto	l8229
 12540                           
 12541                           ;BQ76920.c: 33:     I2C_writeRegister(0x18, 0x0B, 0x19);
 12542  2F69  3018               	movlw	24
 12543  2F6A  00F5               	movwf	I2C_writeRegister@slaveAddress
 12544  2F6B  3000               	movlw	0
 12545  2F6C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12546  2F6D  300B               	movlw	11
 12547  2F6E  00F7               	movwf	I2C_writeRegister@regAddress
 12548  2F6F  3000               	movlw	0
 12549  2F70  00F8               	movwf	I2C_writeRegister@regAddress+1
 12550  2F71  3019               	movlw	25
 12551  2F72  00F9               	movwf	I2C_writeRegister@data
 12552  2F73  3000               	movlw	0
 12553  2F74  00FA               	movwf	I2C_writeRegister@data+1
 12554  2F75  31B6  2692  31AF   	fcall	_I2C_writeRegister
 12555                           
 12556                           ;BQ76920.c: 35:     if (readRegister(0x18, 0x0B) == 0x19) {
 12557  2F78  3018               	movlw	24
 12558  2F79  00F5               	movwf	readRegister@slaveAddress
 12559  2F7A  3000               	movlw	0
 12560  2F7B  00F6               	movwf	readRegister@slaveAddress+1
 12561  2F7C  300B               	movlw	11
 12562  2F7D  00F7               	movwf	readRegister@regAddress
 12563  2F7E  3000               	movlw	0
 12564  2F7F  00F8               	movwf	readRegister@regAddress+1
 12565  2F80  31B7  27CA  31AF   	fcall	_readRegister
 12566  2F83  3019               	movlw	25
 12567  2F84  0675               	xorwf	?_readRegister,w
 12568  2F85  0476               	iorwf	?_readRegister+1,w
 12569  2F86  1D03               	btfss	3,2
 12570  2F87  2FFA               	goto	l445
 12571                           
 12572                           ;BQ76920.c: 36:         commSuccess = 1;
 12573  2F88  3001               	movlw	1
 12574  2F89  0020               	movlb	0	; select bank0
 12575  2F8A  00AB               	movwf	beginAFEcommunication@commSuccess
 12576  2F8B  3000               	movlw	0
 12577  2F8C  00AC               	movwf	beginAFEcommunication@commSuccess+1
 12578                           
 12579                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x04, 0x18);
 12580  2F8D  3018               	movlw	24
 12581  2F8E  00F5               	movwf	I2C_writeRegister@slaveAddress
 12582  2F8F  3000               	movlw	0
 12583  2F90  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12584  2F91  3004               	movlw	4
 12585  2F92  00F7               	movwf	I2C_writeRegister@regAddress
 12586  2F93  3000               	movlw	0
 12587  2F94  00F8               	movwf	I2C_writeRegister@regAddress+1
 12588  2F95  3018               	movlw	24
 12589  2F96  00F9               	movwf	I2C_writeRegister@data
 12590  2F97  3000               	movlw	0
 12591  2F98  00FA               	movwf	I2C_writeRegister@data+1
 12592  2F99  31B6  2692  31AF   	fcall	_I2C_writeRegister
 12593                           
 12594                           ;BQ76920.c: 41:         I2C_writeRegister(0x18, 0x05, 0x40);
 12595  2F9C  3018               	movlw	24
 12596  2F9D  00F5               	movwf	I2C_writeRegister@slaveAddress
 12597  2F9E  3000               	movlw	0
 12598  2F9F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12599  2FA0  3005               	movlw	5
 12600  2FA1  00F7               	movwf	I2C_writeRegister@regAddress
 12601  2FA2  3000               	movlw	0
 12602  2FA3  00F8               	movwf	I2C_writeRegister@regAddress+1
 12603  2FA4  3040               	movlw	64
 12604  2FA5  00F9               	movwf	I2C_writeRegister@data
 12605  2FA6  3000               	movlw	0
 12606  2FA7  00FA               	movwf	I2C_writeRegister@data+1
 12607  2FA8  31B6  2692  31AF   	fcall	_I2C_writeRegister
 12608                           
 12609                           ;BQ76920.c: 44:         adcOffset = (signed int) readRegister(0x18, 0x51);
 12610  2FAB  3018               	movlw	24
 12611  2FAC  00F5               	movwf	readRegister@slaveAddress
 12612  2FAD  3000               	movlw	0
 12613  2FAE  00F6               	movwf	readRegister@slaveAddress+1
 12614  2FAF  3051               	movlw	81
 12615  2FB0  00F7               	movwf	readRegister@regAddress
 12616  2FB1  3000               	movlw	0
 12617  2FB2  00F8               	movwf	readRegister@regAddress+1
 12618  2FB3  31B7  27CA  31AF   	fcall	_readRegister
 12619  2FB6  0876               	movf	?_readRegister+1,w
 12620  2FB7  0022               	movlb	2	; select bank2
 12621  2FB8  00EC               	movwf	(_adcOffset+1)^(0+256)
 12622  2FB9  0875               	movf	?_readRegister,w
 12623  2FBA  00EB               	movwf	_adcOffset^(0+256)
 12624                           
 12625                           ;BQ76920.c: 45:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 12626  2FBB  3018               	movlw	24
 12627  2FBC  00F5               	movwf	readRegister@slaveAddress
 12628  2FBD  3000               	movlw	0
 12629  2FBE  00F6               	movwf	readRegister@slaveAddress+1
 12630  2FBF  3059               	movlw	89
 12631  2FC0  00F7               	movwf	readRegister@regAddress
 12632  2FC1  3000               	movlw	0
 12633  2FC2  00F8               	movwf	readRegister@regAddress+1
 12634  2FC3  31B7  27CA  31AF   	fcall	_readRegister
 12635  2FC6  0875               	movf	?_readRegister,w
 12636  2FC7  0020               	movlb	0	; select bank0
 12637  2FC8  00A2               	movwf	??_beginAFEcommunication
 12638  2FC9  0876               	movf	?_readRegister+1,w
 12639  2FCA  00A3               	movwf	??_beginAFEcommunication+1
 12640  2FCB  3005               	movlw	5
 12641  2FCC  00A4               	movwf	??_beginAFEcommunication+2
 12642  2FCD                     u11365:	
 12643  2FCD  0D23               	rlf	??_beginAFEcommunication+1,w
 12644  2FCE  0CA3               	rrf	??_beginAFEcommunication+1,f
 12645  2FCF  0CA2               	rrf	??_beginAFEcommunication,f
 12646  2FD0  0BA4               	decfsz	??_beginAFEcommunication+2,f
 12647  2FD1  2FCD               	goto	u11365
 12648  2FD2  3007               	movlw	7
 12649  2FD3  0522               	andwf	??_beginAFEcommunication,w
 12650  2FD4  00A5               	movwf	??_beginAFEcommunication+3
 12651  2FD5  3000               	movlw	0
 12652  2FD6  0523               	andwf	??_beginAFEcommunication+1,w
 12653  2FD7  00A6               	movwf	??_beginAFEcommunication+4
 12654  2FD8  3018               	movlw	24
 12655  2FD9  00F5               	movwf	readRegister@slaveAddress
 12656  2FDA  3000               	movlw	0
 12657  2FDB  00F6               	movwf	readRegister@slaveAddress+1
 12658  2FDC  3050               	movlw	80
 12659  2FDD  00F7               	movwf	readRegister@regAddress
 12660  2FDE  3000               	movlw	0
 12661  2FDF  00F8               	movwf	readRegister@regAddress+1
 12662  2FE0  31B7  27CA         	fcall	_readRegister
 12663  2FE2  300C               	movlw	12
 12664  2FE3  0575               	andwf	?_readRegister,w
 12665  2FE4  0020               	movlb	0	; select bank0
 12666  2FE5  00A7               	movwf	??_beginAFEcommunication+5
 12667  2FE6  3000               	movlw	0
 12668  2FE7  0576               	andwf	?_readRegister+1,w
 12669  2FE8  00A8               	movwf	??_beginAFEcommunication+6
 12670  2FE9  35A7               	lslf	??_beginAFEcommunication+5,f
 12671  2FEA  0DA8               	rlf	??_beginAFEcommunication+6,f
 12672  2FEB  0825               	movf	??_beginAFEcommunication+3,w
 12673  2FEC  0427               	iorwf	??_beginAFEcommunication+5,w
 12674  2FED  00A9               	movwf	??_beginAFEcommunication+7
 12675  2FEE  0826               	movf	??_beginAFEcommunication+4,w
 12676  2FEF  0428               	iorwf	??_beginAFEcommunication+6,w
 12677  2FF0  00AA               	movwf	??_beginAFEcommunication+8
 12678  2FF1  0829               	movf	??_beginAFEcommunication+7,w
 12679  2FF2  3E6D               	addlw	109
 12680  2FF3  0022               	movlb	2	; select bank2
 12681  2FF4  00ED               	movwf	_adcGain^(0+256)
 12682  2FF5  3001               	movlw	1
 12683  2FF6  0020               	movlb	0	; select bank0
 12684  2FF7  3D2A               	addwfc	??_beginAFEcommunication+8,w
 12685  2FF8  0022               	movlb	2	; select bank2
 12686  2FF9  00EE               	movwf	(_adcGain+1)^(0+256)
 12687  2FFA                     l445:	
 12688                           ;BQ76920.c: 48:     }
 12689                           
 12690                           
 12691                           ;BQ76920.c: 49:     return commSuccess;
 12692  2FFA  0020               	movlb	0	; select bank0
 12693  2FFB  082C               	movf	beginAFEcommunication@commSuccess+1,w
 12694  2FFC  00A1               	movwf	?_beginAFEcommunication+1
 12695  2FFD  082B               	movf	beginAFEcommunication@commSuccess,w
 12696  2FFE  00A0               	movwf	?_beginAFEcommunication
 12697  2FFF  0008               	return
 12698  3000                     __end_of_beginAFEcommunication:	
 12699                           
 12700                           	psect	text44
 12701  2000                     __ptext44:	
 12702 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 12703 ;; Defined at:
 12704 ;;		line 43 in file "RGB.c"
 12705 ;; Parameters:    Size  Location     Type
 12706 ;;		None
 12707 ;; Auto vars:     Size  Location     Type
 12708 ;;		None
 12709 ;; Return value:  Size  Location     Type
 12710 ;;                  1    wreg      void 
 12711 ;; Registers used:
 12712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12713 ;; Tracked objects:
 12714 ;;		On entry : 0/0
 12715 ;;		On exit  : 0/0
 12716 ;;		Unchanged: 0/0
 12717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12720 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12721 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12722 ;;Total ram usage:        1 bytes
 12723 ;; Hardware stack levels used:    1
 12724 ;; Hardware stack levels required when called:    2
 12725 ;; This function calls:
 12726 ;;		_RGB_color
 12727 ;; This function is called by:
 12728 ;;		_statemachine
 12729 ;; This function uses a non-reentrant model
 12730 ;;
 12731                           
 12732                           
 12733                           ;psect for function _RGB_AWAIT_AFE_CONN
 12734  2000                     _RGB_AWAIT_AFE_CONN:	
 12735                           
 12736                           ;RGB.c: 45:     if (toggleColor) {
 12737                           
 12738                           ;incstack = 0
 12739                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12740  2000  087C               	movf	_toggleColor,w
 12741  2001  1903               	btfsc	3,2
 12742  2002  2812               	goto	l8219
 12743                           
 12744                           ;RGB.c: 46:         toggleColor = !toggleColor;
 12745  2003  087C               	movf	_toggleColor,w
 12746  2004  1D03               	btfss	3,2
 12747  2005  2808               	goto	u11300
 12748  2006  3001               	movlw	1
 12749  2007  2809               	goto	u11310
 12750  2008                     u11300:	
 12751  2008  3000               	movlw	0
 12752  2009                     u11310:	
 12753  2009  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12754  200A  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12755  200B  00FC               	movwf	_toggleColor
 12756                           
 12757                           ;RGB.c: 47:         RGB_color(0);
 12758  200C  3000               	movlw	0
 12759  200D  00F1               	movwf	RGB_color@color
 12760  200E  00F2               	movwf	RGB_color@color+1
 12761  200F  31A8  200E         	fcall	_RGB_color
 12762                           
 12763                           ;RGB.c: 48:     } else {
 12764  2011  0008               	return
 12765  2012                     l8219:	
 12766                           
 12767                           ;RGB.c: 49:         toggleColor = !toggleColor;
 12768  2012  087C               	movf	_toggleColor,w
 12769  2013  1D03               	btfss	3,2
 12770  2014  2817               	goto	u11320
 12771  2015  3001               	movlw	1
 12772  2016  2818               	goto	u11330
 12773  2017                     u11320:	
 12774  2017  3000               	movlw	0
 12775  2018                     u11330:	
 12776  2018  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12777  2019  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12778  201A  00FC               	movwf	_toggleColor
 12779                           
 12780                           ;RGB.c: 50:         RGB_color(1);
 12781  201B  3001               	movlw	1
 12782  201C  00F1               	movwf	RGB_color@color
 12783  201D  3000               	movlw	0
 12784  201E  00F2               	movwf	RGB_color@color+1
 12785  201F  31A8  200E         	fcall	_RGB_color
 12786  2021  0008               	return
 12787  2022                     __end_of_RGB_AWAIT_AFE_CONN:	
 12788                           
 12789                           	psect	text45
 12790  280E                     __ptext45:	
 12791 ;; *************** function _RGB_color *****************
 12792 ;; Defined at:
 12793 ;;		line 17 in file "RGB.c"
 12794 ;; Parameters:    Size  Location     Type
 12795 ;;  color           2    1[COMMON] int 
 12796 ;; Auto vars:     Size  Location     Type
 12797 ;;		None
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  1    wreg      void 
 12800 ;; Registers used:
 12801 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12810 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12811 ;;Total ram usage:        2 bytes
 12812 ;; Hardware stack levels used:    1
 12813 ;; Hardware stack levels required when called:    1
 12814 ;; This function calls:
 12815 ;;		Nothing
 12816 ;; This function is called by:
 12817 ;;		_statemachine
 12818 ;;		_RGB_AWAIT_AFE_CONN
 12819 ;;		_watchdog_timeout_shutdown
 12820 ;; This function uses a non-reentrant model
 12821 ;;
 12822                           
 12823                           
 12824                           ;psect for function _RGB_color
 12825  280E                     _RGB_color:	
 12826                           
 12827                           ;RGB.c: 19:     switch (color) {
 12828                           
 12829                           ;incstack = 0
 12830                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 12831  280E  281E               	goto	l7975
 12832  280F                     l342:	
 12833                           ;RGB.c: 20:         case 0:
 12834                           
 12835                           
 12836                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 12837  280F  0022               	movlb	2	; select bank2
 12838  2810  120C               	bcf	12,4	;volatile
 12839                           
 12840                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 12841  2811  168C               	bsf	12,5	;volatile
 12842                           
 12843                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 12844  2812  1410               	bsf	16,0	;volatile
 12845                           
 12846                           ;RGB.c: 24:             break;
 12847  2813  0008               	return
 12848  2814                     l344:	
 12849                           ;RGB.c: 25:         case 1:
 12850                           
 12851                           
 12852                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 12853  2814  0022               	movlb	2	; select bank2
 12854  2815  160C               	bsf	12,4	;volatile
 12855                           
 12856                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 12857  2816  128C               	bcf	12,5	;volatile
 12858                           
 12859                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 12860  2817  1410               	bsf	16,0	;volatile
 12861                           
 12862                           ;RGB.c: 29:             break;
 12863  2818  0008               	return
 12864  2819                     l345:	
 12865                           ;RGB.c: 30:         case 2:
 12866                           
 12867                           
 12868                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 12869  2819  0022               	movlb	2	; select bank2
 12870  281A  160C               	bsf	12,4	;volatile
 12871                           
 12872                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 12873  281B  168C               	bsf	12,5	;volatile
 12874                           
 12875                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 12876  281C  1010               	bcf	16,0	;volatile
 12877                           
 12878                           ;RGB.c: 34:             break;
 12879  281D  0008               	return
 12880  281E                     l7975:	
 12881                           
 12882                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12883                           ; Switch size 1, requested type "simple"
 12884                           ; Number of cases is 1, Range of values is 0 to 0
 12885                           ; switch strategies available:
 12886                           ; Name         Instructions Cycles
 12887                           ; simple_byte            4     3 (average)
 12888                           ; direct_byte            8     6 (fixed)
 12889                           ; jumptable            260     6 (fixed)
 12890                           ;	Chosen strategy is simple_byte
 12891  281E  0872               	movf	RGB_color@color+1,w
 12892  281F  3A00               	xorlw	0	; case 0
 12893  2820  1903               	skipnz
 12894  2821  2823               	goto	l8555
 12895  2822  282E               	goto	l346
 12896  2823                     l8555:	
 12897                           
 12898                           ; Switch size 1, requested type "simple"
 12899                           ; Number of cases is 3, Range of values is 0 to 2
 12900                           ; switch strategies available:
 12901                           ; Name         Instructions Cycles
 12902                           ; simple_byte           10     6 (average)
 12903                           ; direct_byte           12     6 (fixed)
 12904                           ; jumptable            260     6 (fixed)
 12905                           ;	Chosen strategy is simple_byte
 12906  2823  0871               	movf	RGB_color@color,w
 12907  2824  3A00               	xorlw	0	; case 0
 12908  2825  1903               	skipnz
 12909  2826  280F               	goto	l342
 12910  2827  3A01               	xorlw	1	; case 1
 12911  2828  1903               	skipnz
 12912  2829  2814               	goto	l344
 12913  282A  3A03               	xorlw	3	; case 2
 12914  282B  1903               	skipnz
 12915  282C  2819               	goto	l345
 12916  282D  282E               	goto	l346
 12917  282E                     l346:	
 12918  282E  0008               	return
 12919  282F                     __end_of_RGB_color:	
 12920                           
 12921                           	psect	text46
 12922  3567                     __ptext46:	
 12923 ;; *************** function _AFE_UPDATE *****************
 12924 ;; Defined at:
 12925 ;;		line 166 in file "BQ76920.c"
 12926 ;; Parameters:    Size  Location     Type
 12927 ;;		None
 12928 ;; Auto vars:     Size  Location     Type
 12929 ;;		None
 12930 ;; Return value:  Size  Location     Type
 12931 ;;                  1    wreg      void 
 12932 ;; Registers used:
 12933 ;;		wreg, status,2, status,0, pclath, cstack
 12934 ;; Tracked objects:
 12935 ;;		On entry : 0/0
 12936 ;;		On exit  : 0/0
 12937 ;;		Unchanged: 0/0
 12938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12943 ;;Total ram usage:        0 bytes
 12944 ;; Hardware stack levels used:    1
 12945 ;; Hardware stack levels required when called:    5
 12946 ;; This function calls:
 12947 ;;		_enableCharging
 12948 ;;		_enableDischarging
 12949 ;;		_updateTemperatures
 12950 ;;		_updateVoltages
 12951 ;; This function is called by:
 12952 ;;		_statemachine
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           
 12957                           ;psect for function _AFE_UPDATE
 12958  3567                     _AFE_UPDATE:	
 12959                           
 12960                           ;BQ76920.c: 168:     updateVoltages();
 12961                           
 12962                           ;incstack = 0
 12963                           ; Regs used in _AFE_UPDATE: [wreg+status,2+status,0+pclath+cstack]
 12964  3567  3192  224F  31B5   	fcall	_updateVoltages
 12965                           
 12966                           ;BQ76920.c: 169:     updateTemperatures();
 12967  356A  3195  2527  31B5   	fcall	_updateTemperatures
 12968                           
 12969                           ;BQ76920.c: 172:     enableDischarging(0);
 12970  356D  3000               	movlw	0
 12971  356E  0020               	movlb	0	; select bank0
 12972  356F  00A0               	movwf	enableDischarging@enable
 12973  3570  00A1               	movwf	enableDischarging@enable+1
 12974  3571  31A8  2066  31B5   	fcall	_enableDischarging
 12975                           
 12976                           ;BQ76920.c: 173:     enableCharging(0);
 12977  3574  3000               	movlw	0
 12978  3575  0020               	movlb	0	; select bank0
 12979  3576  00A0               	movwf	enableCharging@enable
 12980  3577  00A1               	movwf	enableCharging@enable+1
 12981  3578  31A8  202F         	fcall	_enableCharging
 12982  357A  0008               	return
 12983  357B                     __end_of_AFE_UPDATE:	
 12984                           
 12985                           	psect	text47
 12986  124F                     __ptext47:	
 12987 ;; *************** function _updateVoltages *****************
 12988 ;; Defined at:
 12989 ;;		line 203 in file "BQ76920.c"
 12990 ;; Parameters:    Size  Location     Type
 12991 ;;		None
 12992 ;; Auto vars:     Size  Location     Type
 12993 ;;  adcVal          4   24[BANK1 ] long 
 12994 ;; Return value:  Size  Location     Type
 12995 ;;                  1    wreg      void 
 12996 ;; Registers used:
 12997 ;;		wreg, status,2, status,0, pclath, cstack
 12998 ;; Tracked objects:
 12999 ;;		On entry : 0/0
 13000 ;;		On exit  : 0/0
 13001 ;;		Unchanged: 0/0
 13002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13004 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13005 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13006 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13007 ;;Total ram usage:       11 bytes
 13008 ;; Hardware stack levels used:    1
 13009 ;; Hardware stack levels required when called:    3
 13010 ;; This function calls:
 13011 ;;		___aldiv
 13012 ;;		___fladd
 13013 ;;		___fldiv
 13014 ;;		___flmul
 13015 ;;		___fltol
 13016 ;;		___lmul
 13017 ;;		___xxtofl
 13018 ;;		_readRegister
 13019 ;; This function is called by:
 13020 ;;		_AFE_UPDATE
 13021 ;; This function uses a non-reentrant model
 13022 ;;
 13023                           
 13024                           
 13025                           ;psect for function _updateVoltages
 13026  124F                     _updateVoltages:	
 13027                           
 13028                           ;BQ76920.c: 207:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13029                           
 13030                           ;incstack = 0
 13031                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13032  124F  3018               	movlw	24
 13033  1250  00F5               	movwf	readRegister@slaveAddress
 13034  1251  3000               	movlw	0
 13035  1252  00F6               	movwf	readRegister@slaveAddress+1
 13036  1253  302A               	movlw	42
 13037  1254  00F7               	movwf	readRegister@regAddress
 13038  1255  3000               	movlw	0
 13039  1256  00F8               	movwf	readRegister@regAddress+1
 13040  1257  31B7  27CA  3192   	fcall	_readRegister
 13041  125A  0875               	movf	?_readRegister,w
 13042  125B  0021               	movlb	1	; select bank1
 13043  125C  00B1               	movwf	??_updateVoltages^(0+128)
 13044  125D  0876               	movf	?_readRegister+1,w
 13045  125E  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13046  125F  0831               	movf	??_updateVoltages^(0+128),w
 13047  1260  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13048  1261  01B1               	clrf	??_updateVoltages^(0+128)
 13049  1262  3018               	movlw	24
 13050  1263  00F5               	movwf	readRegister@slaveAddress
 13051  1264  3000               	movlw	0
 13052  1265  00F6               	movwf	readRegister@slaveAddress+1
 13053  1266  302B               	movlw	43
 13054  1267  00F7               	movwf	readRegister@regAddress
 13055  1268  3000               	movlw	0
 13056  1269  00F8               	movwf	readRegister@regAddress+1
 13057  126A  31B7  27CA  3192   	fcall	_readRegister
 13058  126D  0875               	movf	?_readRegister,w
 13059  126E  0021               	movlb	1	; select bank1
 13060  126F  0431               	iorwf	??_updateVoltages^(0+128),w
 13061  1270  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13062  1271  0876               	movf	?_readRegister+1,w
 13063  1272  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13064  1273  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13065  1274  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13066  1275  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13067  1276  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13068  1277  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13069  1278  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13070                           
 13071                           ;BQ76920.c: 208:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13072  1279  0022               	movlb	2	; select bank2
 13073  127A  086D               	movf	_adcGain^(0+256),w
 13074  127B  00F1               	movwf	___xxtofl@val
 13075  127C  086E               	movf	(_adcGain+1)^(0+256),w
 13076  127D  00F2               	movwf	___xxtofl@val+1
 13077  127E  0D89               	rlf	9,f
 13078  127F  3B89               	subwfb	9,f
 13079  1280  0989               	comf	9,f
 13080  1281  00F3               	movwf	___xxtofl@val+2
 13081  1282  00F4               	movwf	___xxtofl@val+3
 13082  1283  3001               	movlw	1
 13083  1284  31AD  256C  3192   	fcall	___xxtofl
 13084  1287  0874               	movf	?___xxtofl+3,w
 13085  1288  0020               	movlb	0	; select bank0
 13086  1289  00AD               	movwf	___flmul@a+3
 13087  128A  0873               	movf	?___xxtofl+2,w
 13088  128B  00AC               	movwf	___flmul@a+2
 13089  128C  0872               	movf	?___xxtofl+1,w
 13090  128D  00AB               	movwf	___flmul@a+1
 13091  128E  0871               	movf	?___xxtofl,w
 13092  128F  00AA               	movwf	___flmul@a
 13093  1290  3040               	movlw	64
 13094  1291  00A9               	movwf	___flmul@b+3
 13095  1292  3080               	movlw	128
 13096  1293  00A8               	movwf	___flmul@b+2
 13097  1294  3000               	movlw	0
 13098  1295  00A7               	movwf	___flmul@b+1
 13099  1296  3000               	movlw	0
 13100  1297  00A6               	movwf	___flmul@b
 13101  1298  3190  2023  3192   	fcall	___flmul
 13102  129B  0020               	movlb	0	; select bank0
 13103  129C  0829               	movf	?___flmul+3,w
 13104  129D  0021               	movlb	1	; select bank1
 13105  129E  00B7               	movwf	(_updateVoltages$2033+3)^(0+128)
 13106  129F  0020               	movlb	0	; select bank0
 13107  12A0  0828               	movf	?___flmul+2,w
 13108  12A1  0021               	movlb	1	; select bank1
 13109  12A2  00B6               	movwf	(_updateVoltages$2033+2)^(0+128)
 13110  12A3  0020               	movlb	0	; select bank0
 13111  12A4  0827               	movf	?___flmul+1,w
 13112  12A5  0021               	movlb	1	; select bank1
 13113  12A6  00B5               	movwf	(_updateVoltages$2033+1)^(0+128)
 13114  12A7  0020               	movlb	0	; select bank0
 13115  12A8  0826               	movf	?___flmul,w
 13116  12A9  0021               	movlb	1	; select bank1
 13117  12AA  00B4               	movwf	_updateVoltages$2033^(0+128)
 13118                           
 13119                           ;BQ76920.c: 208:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13120  12AB  0837               	movf	(_updateVoltages$2033+3)^(0+128),w
 13121  12AC  0020               	movlb	0	; select bank0
 13122  12AD  00AD               	movwf	___flmul@a+3
 13123  12AE  0021               	movlb	1	; select bank1
 13124  12AF  0836               	movf	(_updateVoltages$2033+2)^(0+128),w
 13125  12B0  0020               	movlb	0	; select bank0
 13126  12B1  00AC               	movwf	___flmul@a+2
 13127  12B2  0021               	movlb	1	; select bank1
 13128  12B3  0835               	movf	(_updateVoltages$2033+1)^(0+128),w
 13129  12B4  0020               	movlb	0	; select bank0
 13130  12B5  00AB               	movwf	___flmul@a+1
 13131  12B6  0021               	movlb	1	; select bank1
 13132  12B7  0834               	movf	_updateVoltages$2033^(0+128),w
 13133  12B8  0020               	movlb	0	; select bank0
 13134  12B9  00AA               	movwf	___flmul@a
 13135  12BA  0021               	movlb	1	; select bank1
 13136  12BB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13137  12BC  00F4               	movwf	___xxtofl@val+3
 13138  12BD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13139  12BE  00F3               	movwf	___xxtofl@val+2
 13140  12BF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13141  12C0  00F2               	movwf	___xxtofl@val+1
 13142  12C1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13143  12C2  00F1               	movwf	___xxtofl@val
 13144  12C3  3001               	movlw	1
 13145  12C4  31AD  256C  3192   	fcall	___xxtofl
 13146  12C7  0874               	movf	?___xxtofl+3,w
 13147  12C8  0020               	movlb	0	; select bank0
 13148  12C9  00A9               	movwf	___flmul@b+3
 13149  12CA  0873               	movf	?___xxtofl+2,w
 13150  12CB  00A8               	movwf	___flmul@b+2
 13151  12CC  0872               	movf	?___xxtofl+1,w
 13152  12CD  00A7               	movwf	___flmul@b+1
 13153  12CE  0871               	movf	?___xxtofl,w
 13154  12CF  00A6               	movwf	___flmul@b
 13155  12D0  3190  2023  3192   	fcall	___flmul
 13156  12D3  0020               	movlb	0	; select bank0
 13157  12D4  0829               	movf	?___flmul+3,w
 13158  12D5  00C7               	movwf	___fldiv@b+3
 13159  12D6  0828               	movf	?___flmul+2,w
 13160  12D7  00C6               	movwf	___fldiv@b+2
 13161  12D8  0827               	movf	?___flmul+1,w
 13162  12D9  00C5               	movwf	___fldiv@b+1
 13163  12DA  0826               	movf	?___flmul,w
 13164  12DB  00C4               	movwf	___fldiv@b
 13165  12DC  3044               	movlw	68
 13166  12DD  00C3               	movwf	___fldiv@a+3
 13167  12DE  307A               	movlw	122
 13168  12DF  00C2               	movwf	___fldiv@a+2
 13169  12E0  3000               	movlw	0
 13170  12E1  00C1               	movwf	___fldiv@a+1
 13171  12E2  3000               	movlw	0
 13172  12E3  00C0               	movwf	___fldiv@a
 13173  12E4  319C  24E2  3192   	fcall	___fldiv
 13174  12E7  0020               	movlb	0	; select bank0
 13175  12E8  0843               	movf	?___fldiv+3,w
 13176  12E9  00E1               	movwf	___fladd@a+3
 13177  12EA  0842               	movf	?___fldiv+2,w
 13178  12EB  00E0               	movwf	___fladd@a+2
 13179  12EC  0841               	movf	?___fldiv+1,w
 13180  12ED  00DF               	movwf	___fladd@a+1
 13181  12EE  0840               	movf	?___fldiv,w
 13182  12EF  00DE               	movwf	___fladd@a
 13183  12F0  0022               	movlb	2	; select bank2
 13184  12F1  086C               	movf	(_adcOffset+1)^(0+256),w
 13185  12F2  0021               	movlb	1	; select bank1
 13186  12F3  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13187  12F4  0022               	movlb	2	; select bank2
 13188  12F5  086B               	movf	_adcOffset^(0+256),w
 13189  12F6  0021               	movlb	1	; select bank1
 13190  12F7  00B1               	movwf	??_updateVoltages^(0+128)
 13191  12F8  35B1               	lslf	??_updateVoltages^(0+128),f
 13192  12F9  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13193  12FA  35B1               	lslf	??_updateVoltages^(0+128),f
 13194  12FB  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13195  12FC  0831               	movf	??_updateVoltages^(0+128),w
 13196  12FD  00F1               	movwf	___xxtofl@val
 13197  12FE  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13198  12FF  00F2               	movwf	___xxtofl@val+1
 13199  1300  0D89               	rlf	9,f
 13200  1301  3B89               	subwfb	9,f
 13201  1302  0989               	comf	9,f
 13202  1303  00F3               	movwf	___xxtofl@val+2
 13203  1304  00F4               	movwf	___xxtofl@val+3
 13204  1305  3001               	movlw	1
 13205  1306  31AD  256C  3192   	fcall	___xxtofl
 13206  1309  0874               	movf	?___xxtofl+3,w
 13207  130A  0020               	movlb	0	; select bank0
 13208  130B  00DD               	movwf	___fladd@b+3
 13209  130C  0873               	movf	?___xxtofl+2,w
 13210  130D  00DC               	movwf	___fladd@b+2
 13211  130E  0872               	movf	?___xxtofl+1,w
 13212  130F  00DB               	movwf	___fladd@b+1
 13213  1310  0871               	movf	?___xxtofl,w
 13214  1311  00DA               	movwf	___fladd@b
 13215  1312  3185  25F5  3192   	fcall	___fladd
 13216  1315  0020               	movlb	0	; select bank0
 13217  1316  085D               	movf	?___fladd+3,w
 13218  1317  0021               	movlb	1	; select bank1
 13219  1318  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13220  1319  0020               	movlb	0	; select bank0
 13221  131A  085C               	movf	?___fladd+2,w
 13222  131B  0021               	movlb	1	; select bank1
 13223  131C  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13224  131D  0020               	movlb	0	; select bank0
 13225  131E  085B               	movf	?___fladd+1,w
 13226  131F  0021               	movlb	1	; select bank1
 13227  1320  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13228  1321  0020               	movlb	0	; select bank0
 13229  1322  085A               	movf	?___fladd,w
 13230  1323  0021               	movlb	1	; select bank1
 13231  1324  00A8               	movwf	___fltol@f1^(0+128)
 13232  1325  31AA  222E  3192   	fcall	___fltol
 13233  1328  0021               	movlb	1	; select bank1
 13234  1329  082B               	movf	(?___fltol+3)^(0+128),w
 13235  132A  0023               	movlb	3	; select bank3
 13236  132B  00C1               	movwf	(_batVoltage+3)^(0+384)
 13237  132C  0021               	movlb	1	; select bank1
 13238  132D  082A               	movf	(?___fltol+2)^(0+128),w
 13239  132E  0023               	movlb	3	; select bank3
 13240  132F  00C0               	movwf	(_batVoltage+2)^(0+384)
 13241  1330  0021               	movlb	1	; select bank1
 13242  1331  0829               	movf	(?___fltol+1)^(0+128),w
 13243  1332  0023               	movlb	3	; select bank3
 13244  1333  00BF               	movwf	(_batVoltage+1)^(0+384)
 13245  1334  0021               	movlb	1	; select bank1
 13246  1335  0828               	movf	?___fltol^(0+128),w
 13247  1336  0023               	movlb	3	; select bank3
 13248  1337  00BE               	movwf	_batVoltage^(0+384)
 13249                           
 13250                           ;BQ76920.c: 231:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13251  1338  3018               	movlw	24
 13252  1339  00F5               	movwf	readRegister@slaveAddress
 13253  133A  3000               	movlw	0
 13254  133B  00F6               	movwf	readRegister@slaveAddress+1
 13255  133C  300C               	movlw	12
 13256  133D  00F7               	movwf	readRegister@regAddress
 13257  133E  3000               	movlw	0
 13258  133F  00F8               	movwf	readRegister@regAddress+1
 13259  1340  31B7  27CA  3192   	fcall	_readRegister
 13260  1343  303F               	movlw	63
 13261  1344  0575               	andwf	?_readRegister,w
 13262  1345  0021               	movlb	1	; select bank1
 13263  1346  00B1               	movwf	??_updateVoltages^(0+128)
 13264  1347  3000               	movlw	0
 13265  1348  0576               	andwf	?_readRegister+1,w
 13266  1349  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13267  134A  0831               	movf	??_updateVoltages^(0+128),w
 13268  134B  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13269  134C  01B1               	clrf	??_updateVoltages^(0+128)
 13270  134D  3018               	movlw	24
 13271  134E  00F5               	movwf	readRegister@slaveAddress
 13272  134F  3000               	movlw	0
 13273  1350  00F6               	movwf	readRegister@slaveAddress+1
 13274  1351  300D               	movlw	13
 13275  1352  00F7               	movwf	readRegister@regAddress
 13276  1353  3000               	movlw	0
 13277  1354  00F8               	movwf	readRegister@regAddress+1
 13278  1355  31B7  27CA  3192   	fcall	_readRegister
 13279  1358  0875               	movf	?_readRegister,w
 13280  1359  0021               	movlb	1	; select bank1
 13281  135A  0431               	iorwf	??_updateVoltages^(0+128),w
 13282  135B  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13283  135C  0876               	movf	?_readRegister+1,w
 13284  135D  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13285  135E  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13286  135F  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13287  1360  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13288  1361  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13289  1362  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13290  1363  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13291                           
 13292                           ;BQ76920.c: 232:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13293  1364  3000               	movlw	0
 13294  1365  0020               	movlb	0	; select bank0
 13295  1366  00A7               	movwf	___aldiv@divisor+3
 13296  1367  3000               	movlw	0
 13297  1368  00A6               	movwf	___aldiv@divisor+2
 13298  1369  3003               	movlw	3
 13299  136A  00A5               	movwf	___aldiv@divisor+1
 13300  136B  30E8               	movlw	232
 13301  136C  00A4               	movwf	___aldiv@divisor
 13302  136D  0022               	movlb	2	; select bank2
 13303  136E  086D               	movf	_adcGain^(0+256),w
 13304  136F  00F1               	movwf	___lmul@multiplier
 13305  1370  086E               	movf	(_adcGain+1)^(0+256),w
 13306  1371  00F2               	movwf	___lmul@multiplier+1
 13307  1372  0D89               	rlf	9,f
 13308  1373  3B89               	subwfb	9,f
 13309  1374  0989               	comf	9,f
 13310  1375  00F3               	movwf	___lmul@multiplier+2
 13311  1376  00F4               	movwf	___lmul@multiplier+3
 13312  1377  0021               	movlb	1	; select bank1
 13313  1378  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13314  1379  00F8               	movwf	___lmul@multiplicand+3
 13315  137A  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13316  137B  00F7               	movwf	___lmul@multiplicand+2
 13317  137C  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13318  137D  00F6               	movwf	___lmul@multiplicand+1
 13319  137E  0838               	movf	updateVoltages@adcVal^(0+128),w
 13320  137F  00F5               	movwf	___lmul@multiplicand
 13321  1380  31B7  2731  3192   	fcall	___lmul
 13322  1383  0874               	movf	?___lmul+3,w
 13323  1384  0020               	movlb	0	; select bank0
 13324  1385  00AB               	movwf	___aldiv@dividend+3
 13325  1386  0873               	movf	?___lmul+2,w
 13326  1387  00AA               	movwf	___aldiv@dividend+2
 13327  1388  0872               	movf	?___lmul+1,w
 13328  1389  00A9               	movwf	___aldiv@dividend+1
 13329  138A  0871               	movf	?___lmul,w
 13330  138B  00A8               	movwf	___aldiv@dividend
 13331  138C  31AC  24EA  3192   	fcall	___aldiv
 13332  138F  0022               	movlb	2	; select bank2
 13333  1390  086B               	movf	_adcOffset^(0+256),w
 13334  1391  0020               	movlb	0	; select bank0
 13335  1392  0724               	addwf	?___aldiv,w
 13336  1393  0023               	movlb	3	; select bank3
 13337  1394  00A0               	movwf	_cellVoltages^(0+384)
 13338  1395  0022               	movlb	2	; select bank2
 13339  1396  086C               	movf	(_adcOffset+1)^(0+256),w
 13340  1397  0020               	movlb	0	; select bank0
 13341  1398  3D25               	addwfc	?___aldiv+1,w
 13342  1399  0023               	movlb	3	; select bank3
 13343  139A  00A1               	movwf	(_cellVoltages+1)^(0+384)
 13344                           
 13345                           ;BQ76920.c: 233:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13346  139B  3018               	movlw	24
 13347  139C  00F5               	movwf	readRegister@slaveAddress
 13348  139D  3000               	movlw	0
 13349  139E  00F6               	movwf	readRegister@slaveAddress+1
 13350  139F  300E               	movlw	14
 13351  13A0  00F7               	movwf	readRegister@regAddress
 13352  13A1  3000               	movlw	0
 13353  13A2  00F8               	movwf	readRegister@regAddress+1
 13354  13A3  31B7  27CA  3192   	fcall	_readRegister
 13355  13A6  303F               	movlw	63
 13356  13A7  0575               	andwf	?_readRegister,w
 13357  13A8  0021               	movlb	1	; select bank1
 13358  13A9  00B1               	movwf	??_updateVoltages^(0+128)
 13359  13AA  3000               	movlw	0
 13360  13AB  0576               	andwf	?_readRegister+1,w
 13361  13AC  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13362  13AD  0831               	movf	??_updateVoltages^(0+128),w
 13363  13AE  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13364  13AF  01B1               	clrf	??_updateVoltages^(0+128)
 13365  13B0  3018               	movlw	24
 13366  13B1  00F5               	movwf	readRegister@slaveAddress
 13367  13B2  3000               	movlw	0
 13368  13B3  00F6               	movwf	readRegister@slaveAddress+1
 13369  13B4  300F               	movlw	15
 13370  13B5  00F7               	movwf	readRegister@regAddress
 13371  13B6  3000               	movlw	0
 13372  13B7  00F8               	movwf	readRegister@regAddress+1
 13373  13B8  31B7  27CA  3192   	fcall	_readRegister
 13374  13BB  0875               	movf	?_readRegister,w
 13375  13BC  0021               	movlb	1	; select bank1
 13376  13BD  0431               	iorwf	??_updateVoltages^(0+128),w
 13377  13BE  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13378  13BF  0876               	movf	?_readRegister+1,w
 13379  13C0  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13380  13C1  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13381  13C2  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13382  13C3  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13383  13C4  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13384  13C5  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13385  13C6  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13386                           
 13387                           ;BQ76920.c: 234:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13388  13C7  3000               	movlw	0
 13389  13C8  0020               	movlb	0	; select bank0
 13390  13C9  00A7               	movwf	___aldiv@divisor+3
 13391  13CA  3000               	movlw	0
 13392  13CB  00A6               	movwf	___aldiv@divisor+2
 13393  13CC  3003               	movlw	3
 13394  13CD  00A5               	movwf	___aldiv@divisor+1
 13395  13CE  30E8               	movlw	232
 13396  13CF  00A4               	movwf	___aldiv@divisor
 13397  13D0  0022               	movlb	2	; select bank2
 13398  13D1  086D               	movf	_adcGain^(0+256),w
 13399  13D2  00F1               	movwf	___lmul@multiplier
 13400  13D3  086E               	movf	(_adcGain+1)^(0+256),w
 13401  13D4  00F2               	movwf	___lmul@multiplier+1
 13402  13D5  0D89               	rlf	9,f
 13403  13D6  3B89               	subwfb	9,f
 13404  13D7  0989               	comf	9,f
 13405  13D8  00F3               	movwf	___lmul@multiplier+2
 13406  13D9  00F4               	movwf	___lmul@multiplier+3
 13407  13DA  0021               	movlb	1	; select bank1
 13408  13DB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13409  13DC  00F8               	movwf	___lmul@multiplicand+3
 13410  13DD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13411  13DE  00F7               	movwf	___lmul@multiplicand+2
 13412  13DF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13413  13E0  00F6               	movwf	___lmul@multiplicand+1
 13414  13E1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13415  13E2  00F5               	movwf	___lmul@multiplicand
 13416  13E3  31B7  2731  3192   	fcall	___lmul
 13417  13E6  0874               	movf	?___lmul+3,w
 13418  13E7  0020               	movlb	0	; select bank0
 13419  13E8  00AB               	movwf	___aldiv@dividend+3
 13420  13E9  0873               	movf	?___lmul+2,w
 13421  13EA  00AA               	movwf	___aldiv@dividend+2
 13422  13EB  0872               	movf	?___lmul+1,w
 13423  13EC  00A9               	movwf	___aldiv@dividend+1
 13424  13ED  0871               	movf	?___lmul,w
 13425  13EE  00A8               	movwf	___aldiv@dividend
 13426  13EF  31AC  24EA  3192   	fcall	___aldiv
 13427  13F2  0022               	movlb	2	; select bank2
 13428  13F3  086B               	movf	_adcOffset^(0+256),w
 13429  13F4  0020               	movlb	0	; select bank0
 13430  13F5  0724               	addwf	?___aldiv,w
 13431  13F6  0023               	movlb	3	; select bank3
 13432  13F7  00A2               	movwf	(_cellVoltages^(0+384)+2)
 13433  13F8  0022               	movlb	2	; select bank2
 13434  13F9  086C               	movf	(_adcOffset+1)^(0+256),w
 13435  13FA  0020               	movlb	0	; select bank0
 13436  13FB  3D25               	addwfc	?___aldiv+1,w
 13437  13FC  0023               	movlb	3	; select bank3
 13438  13FD  00A3               	movwf	((_cellVoltages+1)^(0+384)+2)
 13439                           
 13440                           ;BQ76920.c: 235:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13441  13FE  3018               	movlw	24
 13442  13FF  00F5               	movwf	readRegister@slaveAddress
 13443  1400  3000               	movlw	0
 13444  1401  00F6               	movwf	readRegister@slaveAddress+1
 13445  1402  3010               	movlw	16
 13446  1403  00F7               	movwf	readRegister@regAddress
 13447  1404  3000               	movlw	0
 13448  1405  00F8               	movwf	readRegister@regAddress+1
 13449  1406  31B7  27CA  3192   	fcall	_readRegister
 13450  1409  303F               	movlw	63
 13451  140A  0575               	andwf	?_readRegister,w
 13452  140B  0021               	movlb	1	; select bank1
 13453  140C  00B1               	movwf	??_updateVoltages^(0+128)
 13454  140D  3000               	movlw	0
 13455  140E  0576               	andwf	?_readRegister+1,w
 13456  140F  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13457  1410  0831               	movf	??_updateVoltages^(0+128),w
 13458  1411  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13459  1412  01B1               	clrf	??_updateVoltages^(0+128)
 13460  1413  3018               	movlw	24
 13461  1414  00F5               	movwf	readRegister@slaveAddress
 13462  1415  3000               	movlw	0
 13463  1416  00F6               	movwf	readRegister@slaveAddress+1
 13464  1417  3011               	movlw	17
 13465  1418  00F7               	movwf	readRegister@regAddress
 13466  1419  3000               	movlw	0
 13467  141A  00F8               	movwf	readRegister@regAddress+1
 13468  141B  31B7  27CA  3192   	fcall	_readRegister
 13469  141E  0875               	movf	?_readRegister,w
 13470  141F  0021               	movlb	1	; select bank1
 13471  1420  0431               	iorwf	??_updateVoltages^(0+128),w
 13472  1421  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13473  1422  0876               	movf	?_readRegister+1,w
 13474  1423  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13475  1424  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13476  1425  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13477  1426  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13478  1427  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13479  1428  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13480  1429  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13481                           
 13482                           ;BQ76920.c: 236:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13483  142A  3000               	movlw	0
 13484  142B  0020               	movlb	0	; select bank0
 13485  142C  00A7               	movwf	___aldiv@divisor+3
 13486  142D  3000               	movlw	0
 13487  142E  00A6               	movwf	___aldiv@divisor+2
 13488  142F  3003               	movlw	3
 13489  1430  00A5               	movwf	___aldiv@divisor+1
 13490  1431  30E8               	movlw	232
 13491  1432  00A4               	movwf	___aldiv@divisor
 13492  1433  0022               	movlb	2	; select bank2
 13493  1434  086D               	movf	_adcGain^(0+256),w
 13494  1435  00F1               	movwf	___lmul@multiplier
 13495  1436  086E               	movf	(_adcGain+1)^(0+256),w
 13496  1437  00F2               	movwf	___lmul@multiplier+1
 13497  1438  0D89               	rlf	9,f
 13498  1439  3B89               	subwfb	9,f
 13499  143A  0989               	comf	9,f
 13500  143B  00F3               	movwf	___lmul@multiplier+2
 13501  143C  00F4               	movwf	___lmul@multiplier+3
 13502  143D  0021               	movlb	1	; select bank1
 13503  143E  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13504  143F  00F8               	movwf	___lmul@multiplicand+3
 13505  1440  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13506  1441  00F7               	movwf	___lmul@multiplicand+2
 13507  1442  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13508  1443  00F6               	movwf	___lmul@multiplicand+1
 13509  1444  0838               	movf	updateVoltages@adcVal^(0+128),w
 13510  1445  00F5               	movwf	___lmul@multiplicand
 13511  1446  31B7  2731  3192   	fcall	___lmul
 13512  1449  0874               	movf	?___lmul+3,w
 13513  144A  0020               	movlb	0	; select bank0
 13514  144B  00AB               	movwf	___aldiv@dividend+3
 13515  144C  0873               	movf	?___lmul+2,w
 13516  144D  00AA               	movwf	___aldiv@dividend+2
 13517  144E  0872               	movf	?___lmul+1,w
 13518  144F  00A9               	movwf	___aldiv@dividend+1
 13519  1450  0871               	movf	?___lmul,w
 13520  1451  00A8               	movwf	___aldiv@dividend
 13521  1452  31AC  24EA  3192   	fcall	___aldiv
 13522  1455  0022               	movlb	2	; select bank2
 13523  1456  086B               	movf	_adcOffset^(0+256),w
 13524  1457  0020               	movlb	0	; select bank0
 13525  1458  0724               	addwf	?___aldiv,w
 13526  1459  0023               	movlb	3	; select bank3
 13527  145A  00A4               	movwf	(_cellVoltages^(0+384)+4)
 13528  145B  0022               	movlb	2	; select bank2
 13529  145C  086C               	movf	(_adcOffset+1)^(0+256),w
 13530  145D  0020               	movlb	0	; select bank0
 13531  145E  3D25               	addwfc	?___aldiv+1,w
 13532  145F  0023               	movlb	3	; select bank3
 13533  1460  00A5               	movwf	((_cellVoltages+1)^(0+384)+4)
 13534                           
 13535                           ;BQ76920.c: 237:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 13536  1461  3018               	movlw	24
 13537  1462  00F5               	movwf	readRegister@slaveAddress
 13538  1463  3000               	movlw	0
 13539  1464  00F6               	movwf	readRegister@slaveAddress+1
 13540  1465  3012               	movlw	18
 13541  1466  00F7               	movwf	readRegister@regAddress
 13542  1467  3000               	movlw	0
 13543  1468  00F8               	movwf	readRegister@regAddress+1
 13544  1469  31B7  27CA  3192   	fcall	_readRegister
 13545  146C  303F               	movlw	63
 13546  146D  0575               	andwf	?_readRegister,w
 13547  146E  0021               	movlb	1	; select bank1
 13548  146F  00B1               	movwf	??_updateVoltages^(0+128)
 13549  1470  3000               	movlw	0
 13550  1471  0576               	andwf	?_readRegister+1,w
 13551  1472  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13552  1473  0831               	movf	??_updateVoltages^(0+128),w
 13553  1474  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13554  1475  01B1               	clrf	??_updateVoltages^(0+128)
 13555  1476  3018               	movlw	24
 13556  1477  00F5               	movwf	readRegister@slaveAddress
 13557  1478  3000               	movlw	0
 13558  1479  00F6               	movwf	readRegister@slaveAddress+1
 13559  147A  3013               	movlw	19
 13560  147B  00F7               	movwf	readRegister@regAddress
 13561  147C  3000               	movlw	0
 13562  147D  00F8               	movwf	readRegister@regAddress+1
 13563  147E  31B7  27CA  3192   	fcall	_readRegister
 13564  1481  0875               	movf	?_readRegister,w
 13565  1482  0021               	movlb	1	; select bank1
 13566  1483  0431               	iorwf	??_updateVoltages^(0+128),w
 13567  1484  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13568  1485  0876               	movf	?_readRegister+1,w
 13569  1486  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13570  1487  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13571  1488  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13572  1489  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13573  148A  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13574  148B  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13575  148C  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13576                           
 13577                           ;BQ76920.c: 238:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 13578  148D  3000               	movlw	0
 13579  148E  0020               	movlb	0	; select bank0
 13580  148F  00A7               	movwf	___aldiv@divisor+3
 13581  1490  3000               	movlw	0
 13582  1491  00A6               	movwf	___aldiv@divisor+2
 13583  1492  3003               	movlw	3
 13584  1493  00A5               	movwf	___aldiv@divisor+1
 13585  1494  30E8               	movlw	232
 13586  1495  00A4               	movwf	___aldiv@divisor
 13587  1496  0022               	movlb	2	; select bank2
 13588  1497  086D               	movf	_adcGain^(0+256),w
 13589  1498  00F1               	movwf	___lmul@multiplier
 13590  1499  086E               	movf	(_adcGain+1)^(0+256),w
 13591  149A  00F2               	movwf	___lmul@multiplier+1
 13592  149B  0D89               	rlf	9,f
 13593  149C  3B89               	subwfb	9,f
 13594  149D  0989               	comf	9,f
 13595  149E  00F3               	movwf	___lmul@multiplier+2
 13596  149F  00F4               	movwf	___lmul@multiplier+3
 13597  14A0  0021               	movlb	1	; select bank1
 13598  14A1  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13599  14A2  00F8               	movwf	___lmul@multiplicand+3
 13600  14A3  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13601  14A4  00F7               	movwf	___lmul@multiplicand+2
 13602  14A5  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13603  14A6  00F6               	movwf	___lmul@multiplicand+1
 13604  14A7  0838               	movf	updateVoltages@adcVal^(0+128),w
 13605  14A8  00F5               	movwf	___lmul@multiplicand
 13606  14A9  31B7  2731  3192   	fcall	___lmul
 13607  14AC  0874               	movf	?___lmul+3,w
 13608  14AD  0020               	movlb	0	; select bank0
 13609  14AE  00AB               	movwf	___aldiv@dividend+3
 13610  14AF  0873               	movf	?___lmul+2,w
 13611  14B0  00AA               	movwf	___aldiv@dividend+2
 13612  14B1  0872               	movf	?___lmul+1,w
 13613  14B2  00A9               	movwf	___aldiv@dividend+1
 13614  14B3  0871               	movf	?___lmul,w
 13615  14B4  00A8               	movwf	___aldiv@dividend
 13616  14B5  31AC  24EA  3192   	fcall	___aldiv
 13617  14B8  0022               	movlb	2	; select bank2
 13618  14B9  086B               	movf	_adcOffset^(0+256),w
 13619  14BA  0020               	movlb	0	; select bank0
 13620  14BB  0724               	addwf	?___aldiv,w
 13621  14BC  0023               	movlb	3	; select bank3
 13622  14BD  00A6               	movwf	(_cellVoltages^(0+384)+6)
 13623  14BE  0022               	movlb	2	; select bank2
 13624  14BF  086C               	movf	(_adcOffset+1)^(0+256),w
 13625  14C0  0020               	movlb	0	; select bank0
 13626  14C1  3D25               	addwfc	?___aldiv+1,w
 13627  14C2  0023               	movlb	3	; select bank3
 13628  14C3  00A7               	movwf	((_cellVoltages+1)^(0+384)+6)
 13629                           
 13630                           ;BQ76920.c: 239:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 13631  14C4  3018               	movlw	24
 13632  14C5  00F5               	movwf	readRegister@slaveAddress
 13633  14C6  3000               	movlw	0
 13634  14C7  00F6               	movwf	readRegister@slaveAddress+1
 13635  14C8  3014               	movlw	20
 13636  14C9  00F7               	movwf	readRegister@regAddress
 13637  14CA  3000               	movlw	0
 13638  14CB  00F8               	movwf	readRegister@regAddress+1
 13639  14CC  31B7  27CA  3192   	fcall	_readRegister
 13640  14CF  303F               	movlw	63
 13641  14D0  0575               	andwf	?_readRegister,w
 13642  14D1  0021               	movlb	1	; select bank1
 13643  14D2  00B1               	movwf	??_updateVoltages^(0+128)
 13644  14D3  3000               	movlw	0
 13645  14D4  0576               	andwf	?_readRegister+1,w
 13646  14D5  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13647  14D6  0831               	movf	??_updateVoltages^(0+128),w
 13648  14D7  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13649  14D8  01B1               	clrf	??_updateVoltages^(0+128)
 13650  14D9  3018               	movlw	24
 13651  14DA  00F5               	movwf	readRegister@slaveAddress
 13652  14DB  3000               	movlw	0
 13653  14DC  00F6               	movwf	readRegister@slaveAddress+1
 13654  14DD  3015               	movlw	21
 13655  14DE  00F7               	movwf	readRegister@regAddress
 13656  14DF  3000               	movlw	0
 13657  14E0  00F8               	movwf	readRegister@regAddress+1
 13658  14E1  31B7  27CA  3192   	fcall	_readRegister
 13659  14E4  0875               	movf	?_readRegister,w
 13660  14E5  0021               	movlb	1	; select bank1
 13661  14E6  0431               	iorwf	??_updateVoltages^(0+128),w
 13662  14E7  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13663  14E8  0876               	movf	?_readRegister+1,w
 13664  14E9  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13665  14EA  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13666  14EB  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13667  14EC  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13668  14ED  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13669  14EE  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13670  14EF  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13671                           
 13672                           ;BQ76920.c: 240:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 13673  14F0  3000               	movlw	0
 13674  14F1  0020               	movlb	0	; select bank0
 13675  14F2  00A7               	movwf	___aldiv@divisor+3
 13676  14F3  3000               	movlw	0
 13677  14F4  00A6               	movwf	___aldiv@divisor+2
 13678  14F5  3003               	movlw	3
 13679  14F6  00A5               	movwf	___aldiv@divisor+1
 13680  14F7  30E8               	movlw	232
 13681  14F8  00A4               	movwf	___aldiv@divisor
 13682  14F9  0022               	movlb	2	; select bank2
 13683  14FA  086D               	movf	_adcGain^(0+256),w
 13684  14FB  00F1               	movwf	___lmul@multiplier
 13685  14FC  086E               	movf	(_adcGain+1)^(0+256),w
 13686  14FD  00F2               	movwf	___lmul@multiplier+1
 13687  14FE  0D89               	rlf	9,f
 13688  14FF  3B89               	subwfb	9,f
 13689  1500  0989               	comf	9,f
 13690  1501  00F3               	movwf	___lmul@multiplier+2
 13691  1502  00F4               	movwf	___lmul@multiplier+3
 13692  1503  0021               	movlb	1	; select bank1
 13693  1504  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13694  1505  00F8               	movwf	___lmul@multiplicand+3
 13695  1506  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13696  1507  00F7               	movwf	___lmul@multiplicand+2
 13697  1508  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13698  1509  00F6               	movwf	___lmul@multiplicand+1
 13699  150A  0838               	movf	updateVoltages@adcVal^(0+128),w
 13700  150B  00F5               	movwf	___lmul@multiplicand
 13701  150C  31B7  2731  3192   	fcall	___lmul
 13702  150F  0874               	movf	?___lmul+3,w
 13703  1510  0020               	movlb	0	; select bank0
 13704  1511  00AB               	movwf	___aldiv@dividend+3
 13705  1512  0873               	movf	?___lmul+2,w
 13706  1513  00AA               	movwf	___aldiv@dividend+2
 13707  1514  0872               	movf	?___lmul+1,w
 13708  1515  00A9               	movwf	___aldiv@dividend+1
 13709  1516  0871               	movf	?___lmul,w
 13710  1517  00A8               	movwf	___aldiv@dividend
 13711  1518  31AC  24EA         	fcall	___aldiv
 13712  151A  0022               	movlb	2	; select bank2
 13713  151B  086B               	movf	_adcOffset^(0+256),w
 13714  151C  0020               	movlb	0	; select bank0
 13715  151D  0724               	addwf	?___aldiv,w
 13716  151E  0023               	movlb	3	; select bank3
 13717  151F  00A8               	movwf	(_cellVoltages^(0+384)+8)
 13718  1520  0022               	movlb	2	; select bank2
 13719  1521  086C               	movf	(_adcOffset+1)^(0+256),w
 13720  1522  0020               	movlb	0	; select bank0
 13721  1523  3D25               	addwfc	?___aldiv+1,w
 13722  1524  0023               	movlb	3	; select bank3
 13723  1525  00A9               	movwf	((_cellVoltages+1)^(0+384)+8)
 13724  1526  0008               	return
 13725  1527                     __end_of_updateVoltages:	
 13726                           
 13727                           	psect	text48
 13728  3731                     __ptext48:	
 13729 ;; *************** function ___lmul *****************
 13730 ;; Defined at:
 13731 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 13732 ;; Parameters:    Size  Location     Type
 13733 ;;  multiplier      4    1[COMMON] unsigned long 
 13734 ;;  multiplicand    4    5[COMMON] unsigned long 
 13735 ;; Auto vars:     Size  Location     Type
 13736 ;;  product         4    0[BANK0 ] unsigned long 
 13737 ;; Return value:  Size  Location     Type
 13738 ;;                  4    1[COMMON] unsigned long 
 13739 ;; Registers used:
 13740 ;;		wreg, status,2, status,0
 13741 ;; Tracked objects:
 13742 ;;		On entry : 0/0
 13743 ;;		On exit  : 0/0
 13744 ;;		Unchanged: 0/0
 13745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13746 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13747 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13749 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13750 ;;Total ram usage:       12 bytes
 13751 ;; Hardware stack levels used:    1
 13752 ;; Hardware stack levels required when called:    1
 13753 ;; This function calls:
 13754 ;;		Nothing
 13755 ;; This function is called by:
 13756 ;;		_setCellUndervoltageProtection
 13757 ;;		_setCellOvervoltageProtection
 13758 ;;		_updateVoltages
 13759 ;; This function uses a non-reentrant model
 13760 ;;
 13761                           
 13762                           
 13763                           ;psect for function ___lmul
 13764  3731                     ___lmul:	
 13765                           
 13766                           ;incstack = 0
 13767                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13768  3731  3000               	movlw	0
 13769  3732  0020               	movlb	0	; select bank0
 13770  3733  00A3               	movwf	___lmul@product+3
 13771  3734  3000               	movlw	0
 13772  3735  00A2               	movwf	___lmul@product+2
 13773  3736  3000               	movlw	0
 13774  3737  00A1               	movwf	___lmul@product+1
 13775  3738  3000               	movlw	0
 13776  3739  00A0               	movwf	___lmul@product
 13777  373A                     l7831:	
 13778  373A  1C71               	btfss	___lmul@multiplier,0
 13779  373B  2F45               	goto	l7835
 13780  373C  0875               	movf	___lmul@multiplicand,w
 13781  373D  0020               	movlb	0	; select bank0
 13782  373E  07A0               	addwf	___lmul@product,f
 13783  373F  0876               	movf	___lmul@multiplicand+1,w
 13784  3740  3DA1               	addwfc	___lmul@product+1,f
 13785  3741  0877               	movf	___lmul@multiplicand+2,w
 13786  3742  3DA2               	addwfc	___lmul@product+2,f
 13787  3743  0878               	movf	___lmul@multiplicand+3,w
 13788  3744  3DA3               	addwfc	___lmul@product+3,f
 13789  3745                     l7835:	
 13790  3745  3001               	movlw	1
 13791  3746                     u10795:	
 13792  3746  35F5               	lslf	___lmul@multiplicand,f
 13793  3747  0DF6               	rlf	___lmul@multiplicand+1,f
 13794  3748  0DF7               	rlf	___lmul@multiplicand+2,f
 13795  3749  0DF8               	rlf	___lmul@multiplicand+3,f
 13796  374A  0B89               	decfsz	9,f
 13797  374B  2F46               	goto	u10795
 13798  374C  3001               	movlw	1
 13799  374D                     u10805:	
 13800  374D  36F4               	lsrf	___lmul@multiplier+3,f
 13801  374E  0CF3               	rrf	___lmul@multiplier+2,f
 13802  374F  0CF2               	rrf	___lmul@multiplier+1,f
 13803  3750  0CF1               	rrf	___lmul@multiplier,f
 13804  3751  0B89               	decfsz	9,f
 13805  3752  2F4D               	goto	u10805
 13806  3753  0874               	movf	___lmul@multiplier+3,w
 13807  3754  0473               	iorwf	___lmul@multiplier+2,w
 13808  3755  0472               	iorwf	___lmul@multiplier+1,w
 13809  3756  0471               	iorwf	___lmul@multiplier,w
 13810  3757  1D03               	skipz
 13811  3758  2F3A               	goto	l7831
 13812  3759  0020               	movlb	0	; select bank0
 13813  375A  0823               	movf	___lmul@product+3,w
 13814  375B  00F4               	movwf	?___lmul+3
 13815  375C  0822               	movf	___lmul@product+2,w
 13816  375D  00F3               	movwf	?___lmul+2
 13817  375E  0821               	movf	___lmul@product+1,w
 13818  375F  00F2               	movwf	?___lmul+1
 13819  3760  0820               	movf	___lmul@product,w
 13820  3761  00F1               	movwf	?___lmul
 13821  3762  0008               	return
 13822  3763                     __end_of___lmul:	
 13823                           
 13824                           	psect	text49
 13825  1527                     __ptext49:	
 13826 ;; *************** function _updateTemperatures *****************
 13827 ;; Defined at:
 13828 ;;		line 247 in file "BQ76920.c"
 13829 ;; Parameters:    Size  Location     Type
 13830 ;;		None
 13831 ;; Auto vars:     Size  Location     Type
 13832 ;;  rts             4   75[BANK1 ] unsigned long 
 13833 ;;  tmp             4   67[BANK1 ] float 
 13834 ;;  vtsx            2   73[BANK1 ] int 
 13835 ;;  adcVal          2   71[BANK1 ] int 
 13836 ;; Return value:  Size  Location     Type
 13837 ;;                  1    wreg      void 
 13838 ;; Registers used:
 13839 ;;		wreg, status,2, status,0, pclath, cstack
 13840 ;; Tracked objects:
 13841 ;;		On entry : 0/0
 13842 ;;		On exit  : 0/0
 13843 ;;		Unchanged: 0/0
 13844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13846 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13847 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13848 ;;      Totals:         0       0      59       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13849 ;;Total ram usage:       59 bytes
 13850 ;; Hardware stack levels used:    1
 13851 ;; Hardware stack levels required when called:    4
 13852 ;; This function calls:
 13853 ;;		___fladd
 13854 ;;		___fldiv
 13855 ;;		___flmul
 13856 ;;		___flsub
 13857 ;;		___fltol
 13858 ;;		___xxtofl
 13859 ;;		_logf
 13860 ;;		_readRegister
 13861 ;; This function is called by:
 13862 ;;		_AFE_UPDATE
 13863 ;; This function uses a non-reentrant model
 13864 ;;
 13865                           
 13866                           
 13867                           ;psect for function _updateTemperatures
 13868  1527                     _updateTemperatures:	
 13869                           
 13870                           ;BQ76920.c: 251:      unsigned long rts = 0;
 13871                           
 13872                           ;incstack = 0
 13873                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 13874  1527  3000               	movlw	0
 13875  1528  0021               	movlb	1	; select bank1
 13876  1529  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 13877  152A  3000               	movlw	0
 13878  152B  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 13879  152C  3000               	movlw	0
 13880  152D  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 13881  152E  3000               	movlw	0
 13882  152F  00EB               	movwf	updateTemperatures@rts^(0+128)
 13883                           
 13884                           ;BQ76920.c: 253:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 13885  1530  3018               	movlw	24
 13886  1531  00F5               	movwf	readRegister@slaveAddress
 13887  1532  3000               	movlw	0
 13888  1533  00F6               	movwf	readRegister@slaveAddress+1
 13889  1534  302C               	movlw	44
 13890  1535  00F7               	movwf	readRegister@regAddress
 13891  1536  3000               	movlw	0
 13892  1537  00F8               	movwf	readRegister@regAddress+1
 13893  1538  31B7  27CA  3195   	fcall	_readRegister
 13894  153B  303F               	movlw	63
 13895  153C  0575               	andwf	?_readRegister,w
 13896  153D  0021               	movlb	1	; select bank1
 13897  153E  00B4               	movwf	??_updateTemperatures^(0+128)
 13898  153F  3000               	movlw	0
 13899  1540  0576               	andwf	?_readRegister+1,w
 13900  1541  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 13901  1542  0834               	movf	??_updateTemperatures^(0+128),w
 13902  1543  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 13903  1544  01B4               	clrf	??_updateTemperatures^(0+128)
 13904  1545  3018               	movlw	24
 13905  1546  00F5               	movwf	readRegister@slaveAddress
 13906  1547  3000               	movlw	0
 13907  1548  00F6               	movwf	readRegister@slaveAddress+1
 13908  1549  302D               	movlw	45
 13909  154A  00F7               	movwf	readRegister@regAddress
 13910  154B  3000               	movlw	0
 13911  154C  00F8               	movwf	readRegister@regAddress+1
 13912  154D  31B7  27CA  3195   	fcall	_readRegister
 13913  1550  0875               	movf	?_readRegister,w
 13914  1551  0021               	movlb	1	; select bank1
 13915  1552  0434               	iorwf	??_updateTemperatures^(0+128),w
 13916  1553  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 13917  1554  0876               	movf	?_readRegister+1,w
 13918  1555  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 13919  1556  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 13920                           
 13921                           ;BQ76920.c: 254:      vtsx = adcVal * 0.382;
 13922  1557  0867               	movf	updateTemperatures@adcVal^(0+128),w
 13923  1558  00F1               	movwf	___xxtofl@val
 13924  1559  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 13925  155A  00F2               	movwf	___xxtofl@val+1
 13926  155B  0D89               	rlf	9,f
 13927  155C  3B89               	subwfb	9,f
 13928  155D  0989               	comf	9,f
 13929  155E  00F3               	movwf	___xxtofl@val+2
 13930  155F  00F4               	movwf	___xxtofl@val+3
 13931  1560  3001               	movlw	1
 13932  1561  31AD  256C  3195   	fcall	___xxtofl
 13933  1564  0874               	movf	?___xxtofl+3,w
 13934  1565  0020               	movlb	0	; select bank0
 13935  1566  00AD               	movwf	___flmul@a+3
 13936  1567  0873               	movf	?___xxtofl+2,w
 13937  1568  00AC               	movwf	___flmul@a+2
 13938  1569  0872               	movf	?___xxtofl+1,w
 13939  156A  00AB               	movwf	___flmul@a+1
 13940  156B  0871               	movf	?___xxtofl,w
 13941  156C  00AA               	movwf	___flmul@a
 13942  156D  303E               	movlw	62
 13943  156E  00A9               	movwf	___flmul@b+3
 13944  156F  30C3               	movlw	195
 13945  1570  00A8               	movwf	___flmul@b+2
 13946  1571  3095               	movlw	149
 13947  1572  00A7               	movwf	___flmul@b+1
 13948  1573  3081               	movlw	129
 13949  1574  00A6               	movwf	___flmul@b
 13950  1575  3190  2023  3195   	fcall	___flmul
 13951  1578  0020               	movlb	0	; select bank0
 13952  1579  0829               	movf	?___flmul+3,w
 13953  157A  0021               	movlb	1	; select bank1
 13954  157B  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13955  157C  0020               	movlb	0	; select bank0
 13956  157D  0828               	movf	?___flmul+2,w
 13957  157E  0021               	movlb	1	; select bank1
 13958  157F  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13959  1580  0020               	movlb	0	; select bank0
 13960  1581  0827               	movf	?___flmul+1,w
 13961  1582  0021               	movlb	1	; select bank1
 13962  1583  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13963  1584  0020               	movlb	0	; select bank0
 13964  1585  0826               	movf	?___flmul,w
 13965  1586  0021               	movlb	1	; select bank1
 13966  1587  00A8               	movwf	___fltol@f1^(0+128)
 13967  1588  31AA  222E  3195   	fcall	___fltol
 13968  158B  0021               	movlb	1	; select bank1
 13969  158C  0829               	movf	(?___fltol+1)^(0+128),w
 13970  158D  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 13971  158E  0828               	movf	?___fltol^(0+128),w
 13972  158F  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 13973                           
 13974                           ;BQ76920.c: 255:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 13975  1590  0869               	movf	updateTemperatures@vtsx^(0+128),w
 13976  1591  00F1               	movwf	___xxtofl@val
 13977  1592  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 13978  1593  00F2               	movwf	___xxtofl@val+1
 13979  1594  0D89               	rlf	9,f
 13980  1595  3B89               	subwfb	9,f
 13981  1596  0989               	comf	9,f
 13982  1597  00F3               	movwf	___xxtofl@val+2
 13983  1598  00F4               	movwf	___xxtofl@val+3
 13984  1599  3001               	movlw	1
 13985  159A  31AD  256C  3195   	fcall	___xxtofl
 13986  159D  0874               	movf	?___xxtofl+3,w
 13987  159E  0020               	movlb	0	; select bank0
 13988  159F  00AD               	movwf	___flmul@a+3
 13989  15A0  0873               	movf	?___xxtofl+2,w
 13990  15A1  00AC               	movwf	___flmul@a+2
 13991  15A2  0872               	movf	?___xxtofl+1,w
 13992  15A3  00AB               	movwf	___flmul@a+1
 13993  15A4  0871               	movf	?___xxtofl,w
 13994  15A5  00AA               	movwf	___flmul@a
 13995  15A6  3046               	movlw	70
 13996  15A7  00A9               	movwf	___flmul@b+3
 13997  15A8  301C               	movlw	28
 13998  15A9  00A8               	movwf	___flmul@b+2
 13999  15AA  3040               	movlw	64
 14000  15AB  00A7               	movwf	___flmul@b+1
 14001  15AC  3000               	movlw	0
 14002  15AD  00A6               	movwf	___flmul@b
 14003  15AE  3190  2023  3195   	fcall	___flmul
 14004  15B1  0020               	movlb	0	; select bank0
 14005  15B2  0829               	movf	?___flmul+3,w
 14006  15B3  00C7               	movwf	___fldiv@b+3
 14007  15B4  0828               	movf	?___flmul+2,w
 14008  15B5  00C6               	movwf	___fldiv@b+2
 14009  15B6  0827               	movf	?___flmul+1,w
 14010  15B7  00C5               	movwf	___fldiv@b+1
 14011  15B8  0826               	movf	?___flmul,w
 14012  15B9  00C4               	movwf	___fldiv@b
 14013  15BA  3045               	movlw	69
 14014  15BB  0021               	movlb	1	; select bank1
 14015  15BC  00A7               	movwf	(___flsub@b+3)^(0+128)
 14016  15BD  304E               	movlw	78
 14017  15BE  00A6               	movwf	(___flsub@b+2)^(0+128)
 14018  15BF  3040               	movlw	64
 14019  15C0  00A5               	movwf	(___flsub@b+1)^(0+128)
 14020  15C1  3000               	movlw	0
 14021  15C2  00A4               	movwf	___flsub@b^(0+128)
 14022  15C3  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14023  15C4  00F1               	movwf	___xxtofl@val
 14024  15C5  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14025  15C6  00F2               	movwf	___xxtofl@val+1
 14026  15C7  0D89               	rlf	9,f
 14027  15C8  3B89               	subwfb	9,f
 14028  15C9  0989               	comf	9,f
 14029  15CA  00F3               	movwf	___xxtofl@val+2
 14030  15CB  00F4               	movwf	___xxtofl@val+3
 14031  15CC  3001               	movlw	1
 14032  15CD  31AD  256C  3195   	fcall	___xxtofl
 14033  15D0  0874               	movf	?___xxtofl+3,w
 14034  15D1  0021               	movlb	1	; select bank1
 14035  15D2  00A3               	movwf	(___flsub@a+3)^(0+128)
 14036  15D3  0873               	movf	?___xxtofl+2,w
 14037  15D4  00A2               	movwf	(___flsub@a+2)^(0+128)
 14038  15D5  0872               	movf	?___xxtofl+1,w
 14039  15D6  00A1               	movwf	(___flsub@a+1)^(0+128)
 14040  15D7  0871               	movf	?___xxtofl,w
 14041  15D8  00A0               	movwf	___flsub@a^(0+128)
 14042  15D9  31B7  2795  3195   	fcall	___flsub
 14043  15DC  0021               	movlb	1	; select bank1
 14044  15DD  0823               	movf	(?___flsub+3)^(0+128),w
 14045  15DE  0020               	movlb	0	; select bank0
 14046  15DF  00C3               	movwf	___fldiv@a+3
 14047  15E0  0021               	movlb	1	; select bank1
 14048  15E1  0822               	movf	(?___flsub+2)^(0+128),w
 14049  15E2  0020               	movlb	0	; select bank0
 14050  15E3  00C2               	movwf	___fldiv@a+2
 14051  15E4  0021               	movlb	1	; select bank1
 14052  15E5  0821               	movf	(?___flsub+1)^(0+128),w
 14053  15E6  0020               	movlb	0	; select bank0
 14054  15E7  00C1               	movwf	___fldiv@a+1
 14055  15E8  0021               	movlb	1	; select bank1
 14056  15E9  0820               	movf	?___flsub^(0+128),w
 14057  15EA  0020               	movlb	0	; select bank0
 14058  15EB  00C0               	movwf	___fldiv@a
 14059  15EC  319C  24E2  3195   	fcall	___fldiv
 14060  15EF  0020               	movlb	0	; select bank0
 14061  15F0  0843               	movf	?___fldiv+3,w
 14062  15F1  0021               	movlb	1	; select bank1
 14063  15F2  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14064  15F3  0020               	movlb	0	; select bank0
 14065  15F4  0842               	movf	?___fldiv+2,w
 14066  15F5  0021               	movlb	1	; select bank1
 14067  15F6  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14068  15F7  0020               	movlb	0	; select bank0
 14069  15F8  0841               	movf	?___fldiv+1,w
 14070  15F9  0021               	movlb	1	; select bank1
 14071  15FA  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14072  15FB  0020               	movlb	0	; select bank0
 14073  15FC  0840               	movf	?___fldiv,w
 14074  15FD  0021               	movlb	1	; select bank1
 14075  15FE  00A8               	movwf	___fltol@f1^(0+128)
 14076  15FF  31AA  222E  3195   	fcall	___fltol
 14077  1602  0021               	movlb	1	; select bank1
 14078  1603  082B               	movf	(?___fltol+3)^(0+128),w
 14079  1604  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14080  1605  082A               	movf	(?___fltol+2)^(0+128),w
 14081  1606  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14082  1607  0829               	movf	(?___fltol+1)^(0+128),w
 14083  1608  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14084  1609  0828               	movf	?___fltol^(0+128),w
 14085  160A  00EB               	movwf	updateTemperatures@rts^(0+128)
 14086                           
 14087                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14088  160B  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14089  160C  00F4               	movwf	___xxtofl@val+3
 14090  160D  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14091  160E  00F3               	movwf	___xxtofl@val+2
 14092  160F  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14093  1610  00F2               	movwf	___xxtofl@val+1
 14094  1611  086B               	movf	updateTemperatures@rts^(0+128),w
 14095  1612  00F1               	movwf	___xxtofl@val
 14096  1613  3000               	movlw	0
 14097  1614  31AD  256C  3195   	fcall	___xxtofl
 14098  1617  0874               	movf	?___xxtofl+3,w
 14099  1618  0021               	movlb	1	; select bank1
 14100  1619  00BA               	movwf	(_updateTemperatures$2034+3)^(0+128)
 14101  161A  0873               	movf	?___xxtofl+2,w
 14102  161B  00B9               	movwf	(_updateTemperatures$2034+2)^(0+128)
 14103  161C  0872               	movf	?___xxtofl+1,w
 14104  161D  00B8               	movwf	(_updateTemperatures$2034+1)^(0+128)
 14105  161E  0871               	movf	?___xxtofl,w
 14106  161F  00B7               	movwf	_updateTemperatures$2034^(0+128)
 14107                           
 14108                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14109  1620  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14110  1621  00F4               	movwf	___xxtofl@val+3
 14111  1622  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14112  1623  00F3               	movwf	___xxtofl@val+2
 14113  1624  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14114  1625  00F2               	movwf	___xxtofl@val+1
 14115  1626  086B               	movf	updateTemperatures@rts^(0+128),w
 14116  1627  00F1               	movwf	___xxtofl@val
 14117  1628  3000               	movlw	0
 14118  1629  31AD  256C  3195   	fcall	___xxtofl
 14119  162C  0874               	movf	?___xxtofl+3,w
 14120  162D  0021               	movlb	1	; select bank1
 14121  162E  00BE               	movwf	(_updateTemperatures$2035+3)^(0+128)
 14122  162F  0873               	movf	?___xxtofl+2,w
 14123  1630  00BD               	movwf	(_updateTemperatures$2035+2)^(0+128)
 14124  1631  0872               	movf	?___xxtofl+1,w
 14125  1632  00BC               	movwf	(_updateTemperatures$2035+1)^(0+128)
 14126  1633  0871               	movf	?___xxtofl,w
 14127  1634  00BB               	movwf	_updateTemperatures$2035^(0+128)
 14128                           
 14129                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14130  1635  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14131  1636  00F4               	movwf	___xxtofl@val+3
 14132  1637  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14133  1638  00F3               	movwf	___xxtofl@val+2
 14134  1639  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14135  163A  00F2               	movwf	___xxtofl@val+1
 14136  163B  086B               	movf	updateTemperatures@rts^(0+128),w
 14137  163C  00F1               	movwf	___xxtofl@val
 14138  163D  3000               	movlw	0
 14139  163E  31AD  256C  3195   	fcall	___xxtofl
 14140  1641  0874               	movf	?___xxtofl+3,w
 14141  1642  0021               	movlb	1	; select bank1
 14142  1643  00C2               	movwf	(_updateTemperatures$2036+3)^(0+128)
 14143  1644  0873               	movf	?___xxtofl+2,w
 14144  1645  00C1               	movwf	(_updateTemperatures$2036+2)^(0+128)
 14145  1646  0872               	movf	?___xxtofl+1,w
 14146  1647  00C0               	movwf	(_updateTemperatures$2036+1)^(0+128)
 14147  1648  0871               	movf	?___xxtofl,w
 14148  1649  00BF               	movwf	_updateTemperatures$2036^(0+128)
 14149                           
 14150                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14151  164A  083E               	movf	(_updateTemperatures$2035+3)^(0+128),w
 14152  164B  00AB               	movwf	(logf@x+3)^(0+128)
 14153  164C  083D               	movf	(_updateTemperatures$2035+2)^(0+128),w
 14154  164D  00AA               	movwf	(logf@x+2)^(0+128)
 14155  164E  083C               	movf	(_updateTemperatures$2035+1)^(0+128),w
 14156  164F  00A9               	movwf	(logf@x+1)^(0+128)
 14157  1650  083B               	movf	_updateTemperatures$2035^(0+128),w
 14158  1651  00A8               	movwf	logf@x^(0+128)
 14159  1652  3180  206B  3195   	fcall	_logf
 14160  1655  0021               	movlb	1	; select bank1
 14161  1656  082B               	movf	(?_logf+3)^(0+128),w
 14162  1657  00C6               	movwf	(_updateTemperatures$2037+3)^(0+128)
 14163  1658  082A               	movf	(?_logf+2)^(0+128),w
 14164  1659  00C5               	movwf	(_updateTemperatures$2037+2)^(0+128)
 14165  165A  0829               	movf	(?_logf+1)^(0+128),w
 14166  165B  00C4               	movwf	(_updateTemperatures$2037+1)^(0+128)
 14167  165C  0828               	movf	?_logf^(0+128),w
 14168  165D  00C3               	movwf	_updateTemperatures$2037^(0+128)
 14169                           
 14170                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14171  165E  0842               	movf	(_updateTemperatures$2036+3)^(0+128),w
 14172  165F  00AB               	movwf	(logf@x+3)^(0+128)
 14173  1660  0841               	movf	(_updateTemperatures$2036+2)^(0+128),w
 14174  1661  00AA               	movwf	(logf@x+2)^(0+128)
 14175  1662  0840               	movf	(_updateTemperatures$2036+1)^(0+128),w
 14176  1663  00A9               	movwf	(logf@x+1)^(0+128)
 14177  1664  083F               	movf	_updateTemperatures$2036^(0+128),w
 14178  1665  00A8               	movwf	logf@x^(0+128)
 14179  1666  3180  206B  3195   	fcall	_logf
 14180  1669  0021               	movlb	1	; select bank1
 14181  166A  082B               	movf	(?_logf+3)^(0+128),w
 14182  166B  00CA               	movwf	(_updateTemperatures$2038+3)^(0+128)
 14183  166C  082A               	movf	(?_logf+2)^(0+128),w
 14184  166D  00C9               	movwf	(_updateTemperatures$2038+2)^(0+128)
 14185  166E  0829               	movf	(?_logf+1)^(0+128),w
 14186  166F  00C8               	movwf	(_updateTemperatures$2038+1)^(0+128)
 14187  1670  0828               	movf	?_logf^(0+128),w
 14188  1671  00C7               	movwf	_updateTemperatures$2038^(0+128)
 14189                           
 14190                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14191  1672  083A               	movf	(_updateTemperatures$2034+3)^(0+128),w
 14192  1673  00AB               	movwf	(logf@x+3)^(0+128)
 14193  1674  0839               	movf	(_updateTemperatures$2034+2)^(0+128),w
 14194  1675  00AA               	movwf	(logf@x+2)^(0+128)
 14195  1676  0838               	movf	(_updateTemperatures$2034+1)^(0+128),w
 14196  1677  00A9               	movwf	(logf@x+1)^(0+128)
 14197  1678  0837               	movf	_updateTemperatures$2034^(0+128),w
 14198  1679  00A8               	movwf	logf@x^(0+128)
 14199  167A  3180  206B  3195   	fcall	_logf
 14200  167D  0021               	movlb	1	; select bank1
 14201  167E  082B               	movf	(?_logf+3)^(0+128),w
 14202  167F  00CE               	movwf	(_updateTemperatures$2039+3)^(0+128)
 14203  1680  082A               	movf	(?_logf+2)^(0+128),w
 14204  1681  00CD               	movwf	(_updateTemperatures$2039+2)^(0+128)
 14205  1682  0829               	movf	(?_logf+1)^(0+128),w
 14206  1683  00CC               	movwf	(_updateTemperatures$2039+1)^(0+128)
 14207  1684  0828               	movf	?_logf^(0+128),w
 14208  1685  00CB               	movwf	_updateTemperatures$2039^(0+128)
 14209                           
 14210                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14211  1686  0846               	movf	(_updateTemperatures$2037+3)^(0+128),w
 14212  1687  0020               	movlb	0	; select bank0
 14213  1688  00A9               	movwf	___flmul@b+3
 14214  1689  0021               	movlb	1	; select bank1
 14215  168A  0845               	movf	(_updateTemperatures$2037+2)^(0+128),w
 14216  168B  0020               	movlb	0	; select bank0
 14217  168C  00A8               	movwf	___flmul@b+2
 14218  168D  0021               	movlb	1	; select bank1
 14219  168E  0844               	movf	(_updateTemperatures$2037+1)^(0+128),w
 14220  168F  0020               	movlb	0	; select bank0
 14221  1690  00A7               	movwf	___flmul@b+1
 14222  1691  0021               	movlb	1	; select bank1
 14223  1692  0843               	movf	_updateTemperatures$2037^(0+128),w
 14224  1693  0020               	movlb	0	; select bank0
 14225  1694  00A6               	movwf	___flmul@b
 14226  1695  0021               	movlb	1	; select bank1
 14227  1696  084A               	movf	(_updateTemperatures$2038+3)^(0+128),w
 14228  1697  0020               	movlb	0	; select bank0
 14229  1698  00AD               	movwf	___flmul@a+3
 14230  1699  0021               	movlb	1	; select bank1
 14231  169A  0849               	movf	(_updateTemperatures$2038+2)^(0+128),w
 14232  169B  0020               	movlb	0	; select bank0
 14233  169C  00AC               	movwf	___flmul@a+2
 14234  169D  0021               	movlb	1	; select bank1
 14235  169E  0848               	movf	(_updateTemperatures$2038+1)^(0+128),w
 14236  169F  0020               	movlb	0	; select bank0
 14237  16A0  00AB               	movwf	___flmul@a+1
 14238  16A1  0021               	movlb	1	; select bank1
 14239  16A2  0847               	movf	_updateTemperatures$2038^(0+128),w
 14240  16A3  0020               	movlb	0	; select bank0
 14241  16A4  00AA               	movwf	___flmul@a
 14242  16A5  3190  2023  3195   	fcall	___flmul
 14243  16A8  0020               	movlb	0	; select bank0
 14244  16A9  0829               	movf	?___flmul+3,w
 14245  16AA  0021               	movlb	1	; select bank1
 14246  16AB  00D2               	movwf	(_updateTemperatures$2040+3)^(0+128)
 14247  16AC  0020               	movlb	0	; select bank0
 14248  16AD  0828               	movf	?___flmul+2,w
 14249  16AE  0021               	movlb	1	; select bank1
 14250  16AF  00D1               	movwf	(_updateTemperatures$2040+2)^(0+128)
 14251  16B0  0020               	movlb	0	; select bank0
 14252  16B1  0827               	movf	?___flmul+1,w
 14253  16B2  0021               	movlb	1	; select bank1
 14254  16B3  00D0               	movwf	(_updateTemperatures$2040+1)^(0+128)
 14255  16B4  0020               	movlb	0	; select bank0
 14256  16B5  0826               	movf	?___flmul,w
 14257  16B6  0021               	movlb	1	; select bank1
 14258  16B7  00CF               	movwf	_updateTemperatures$2040^(0+128)
 14259                           
 14260                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14261  16B8  084E               	movf	(_updateTemperatures$2039+3)^(0+128),w
 14262  16B9  0020               	movlb	0	; select bank0
 14263  16BA  00A9               	movwf	___flmul@b+3
 14264  16BB  0021               	movlb	1	; select bank1
 14265  16BC  084D               	movf	(_updateTemperatures$2039+2)^(0+128),w
 14266  16BD  0020               	movlb	0	; select bank0
 14267  16BE  00A8               	movwf	___flmul@b+2
 14268  16BF  0021               	movlb	1	; select bank1
 14269  16C0  084C               	movf	(_updateTemperatures$2039+1)^(0+128),w
 14270  16C1  0020               	movlb	0	; select bank0
 14271  16C2  00A7               	movwf	___flmul@b+1
 14272  16C3  0021               	movlb	1	; select bank1
 14273  16C4  084B               	movf	_updateTemperatures$2039^(0+128),w
 14274  16C5  0020               	movlb	0	; select bank0
 14275  16C6  00A6               	movwf	___flmul@b
 14276  16C7  0021               	movlb	1	; select bank1
 14277  16C8  0852               	movf	(_updateTemperatures$2040+3)^(0+128),w
 14278  16C9  0020               	movlb	0	; select bank0
 14279  16CA  00AD               	movwf	___flmul@a+3
 14280  16CB  0021               	movlb	1	; select bank1
 14281  16CC  0851               	movf	(_updateTemperatures$2040+2)^(0+128),w
 14282  16CD  0020               	movlb	0	; select bank0
 14283  16CE  00AC               	movwf	___flmul@a+2
 14284  16CF  0021               	movlb	1	; select bank1
 14285  16D0  0850               	movf	(_updateTemperatures$2040+1)^(0+128),w
 14286  16D1  0020               	movlb	0	; select bank0
 14287  16D2  00AB               	movwf	___flmul@a+1
 14288  16D3  0021               	movlb	1	; select bank1
 14289  16D4  084F               	movf	_updateTemperatures$2040^(0+128),w
 14290  16D5  0020               	movlb	0	; select bank0
 14291  16D6  00AA               	movwf	___flmul@a
 14292  16D7  3190  2023  3195   	fcall	___flmul
 14293  16DA  0020               	movlb	0	; select bank0
 14294  16DB  0829               	movf	?___flmul+3,w
 14295  16DC  0021               	movlb	1	; select bank1
 14296  16DD  00D6               	movwf	(_updateTemperatures$2041+3)^(0+128)
 14297  16DE  0020               	movlb	0	; select bank0
 14298  16DF  0828               	movf	?___flmul+2,w
 14299  16E0  0021               	movlb	1	; select bank1
 14300  16E1  00D5               	movwf	(_updateTemperatures$2041+2)^(0+128)
 14301  16E2  0020               	movlb	0	; select bank0
 14302  16E3  0827               	movf	?___flmul+1,w
 14303  16E4  0021               	movlb	1	; select bank1
 14304  16E5  00D4               	movwf	(_updateTemperatures$2041+1)^(0+128)
 14305  16E6  0020               	movlb	0	; select bank0
 14306  16E7  0826               	movf	?___flmul,w
 14307  16E8  0021               	movlb	1	; select bank1
 14308  16E9  00D3               	movwf	_updateTemperatures$2041^(0+128)
 14309                           
 14310                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14311  16EA  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14312  16EB  00F4               	movwf	___xxtofl@val+3
 14313  16EC  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14314  16ED  00F3               	movwf	___xxtofl@val+2
 14315  16EE  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14316  16EF  00F2               	movwf	___xxtofl@val+1
 14317  16F0  086B               	movf	updateTemperatures@rts^(0+128),w
 14318  16F1  00F1               	movwf	___xxtofl@val
 14319  16F2  3000               	movlw	0
 14320  16F3  31AD  256C  3195   	fcall	___xxtofl
 14321  16F6  0874               	movf	?___xxtofl+3,w
 14322  16F7  0021               	movlb	1	; select bank1
 14323  16F8  00DA               	movwf	(_updateTemperatures$2042+3)^(0+128)
 14324  16F9  0873               	movf	?___xxtofl+2,w
 14325  16FA  00D9               	movwf	(_updateTemperatures$2042+2)^(0+128)
 14326  16FB  0872               	movf	?___xxtofl+1,w
 14327  16FC  00D8               	movwf	(_updateTemperatures$2042+1)^(0+128)
 14328  16FD  0871               	movf	?___xxtofl,w
 14329  16FE  00D7               	movwf	_updateTemperatures$2042^(0+128)
 14330                           
 14331                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14332  16FF  085A               	movf	(_updateTemperatures$2042+3)^(0+128),w
 14333  1700  00AB               	movwf	(logf@x+3)^(0+128)
 14334  1701  0859               	movf	(_updateTemperatures$2042+2)^(0+128),w
 14335  1702  00AA               	movwf	(logf@x+2)^(0+128)
 14336  1703  0858               	movf	(_updateTemperatures$2042+1)^(0+128),w
 14337  1704  00A9               	movwf	(logf@x+1)^(0+128)
 14338  1705  0857               	movf	_updateTemperatures$2042^(0+128),w
 14339  1706  00A8               	movwf	logf@x^(0+128)
 14340  1707  3180  206B  3195   	fcall	_logf
 14341  170A  0021               	movlb	1	; select bank1
 14342  170B  082B               	movf	(?_logf+3)^(0+128),w
 14343  170C  00DE               	movwf	(_updateTemperatures$2043+3)^(0+128)
 14344  170D  082A               	movf	(?_logf+2)^(0+128),w
 14345  170E  00DD               	movwf	(_updateTemperatures$2043+2)^(0+128)
 14346  170F  0829               	movf	(?_logf+1)^(0+128),w
 14347  1710  00DC               	movwf	(_updateTemperatures$2043+1)^(0+128)
 14348  1711  0828               	movf	?_logf^(0+128),w
 14349  1712  00DB               	movwf	_updateTemperatures$2043^(0+128)
 14350                           
 14351                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14352  1713  30BC               	movlw	188
 14353  1714  0020               	movlb	0	; select bank0
 14354  1715  00DD               	movwf	___fladd@b+3
 14355  1716  308E               	movlw	142
 14356  1717  00DC               	movwf	___fladd@b+2
 14357  1718  30C5               	movlw	197
 14358  1719  00DB               	movwf	___fladd@b+1
 14359  171A  3072               	movlw	114
 14360  171B  00DA               	movwf	___fladd@b
 14361  171C  303B               	movlw	59
 14362  171D  00A9               	movwf	___flmul@b+3
 14363  171E  304D               	movlw	77
 14364  171F  00A8               	movwf	___flmul@b+2
 14365  1720  3098               	movlw	152
 14366  1721  00A7               	movwf	___flmul@b+1
 14367  1722  3025               	movlw	37
 14368  1723  00A6               	movwf	___flmul@b
 14369  1724  0021               	movlb	1	; select bank1
 14370  1725  085E               	movf	(_updateTemperatures$2043+3)^(0+128),w
 14371  1726  0020               	movlb	0	; select bank0
 14372  1727  00AD               	movwf	___flmul@a+3
 14373  1728  0021               	movlb	1	; select bank1
 14374  1729  085D               	movf	(_updateTemperatures$2043+2)^(0+128),w
 14375  172A  0020               	movlb	0	; select bank0
 14376  172B  00AC               	movwf	___flmul@a+2
 14377  172C  0021               	movlb	1	; select bank1
 14378  172D  085C               	movf	(_updateTemperatures$2043+1)^(0+128),w
 14379  172E  0020               	movlb	0	; select bank0
 14380  172F  00AB               	movwf	___flmul@a+1
 14381  1730  0021               	movlb	1	; select bank1
 14382  1731  085B               	movf	_updateTemperatures$2043^(0+128),w
 14383  1732  0020               	movlb	0	; select bank0
 14384  1733  00AA               	movwf	___flmul@a
 14385  1734  3190  2023  3195   	fcall	___flmul
 14386  1737  0020               	movlb	0	; select bank0
 14387  1738  0829               	movf	?___flmul+3,w
 14388  1739  00E1               	movwf	___fladd@a+3
 14389  173A  0828               	movf	?___flmul+2,w
 14390  173B  00E0               	movwf	___fladd@a+2
 14391  173C  0827               	movf	?___flmul+1,w
 14392  173D  00DF               	movwf	___fladd@a+1
 14393  173E  0826               	movf	?___flmul,w
 14394  173F  00DE               	movwf	___fladd@a
 14395  1740  3185  25F5  3195   	fcall	___fladd
 14396  1743  0020               	movlb	0	; select bank0
 14397  1744  085D               	movf	?___fladd+3,w
 14398  1745  0021               	movlb	1	; select bank1
 14399  1746  00E2               	movwf	(_updateTemperatures$2044+3)^(0+128)
 14400  1747  0020               	movlb	0	; select bank0
 14401  1748  085C               	movf	?___fladd+2,w
 14402  1749  0021               	movlb	1	; select bank1
 14403  174A  00E1               	movwf	(_updateTemperatures$2044+2)^(0+128)
 14404  174B  0020               	movlb	0	; select bank0
 14405  174C  085B               	movf	?___fladd+1,w
 14406  174D  0021               	movlb	1	; select bank1
 14407  174E  00E0               	movwf	(_updateTemperatures$2044+1)^(0+128)
 14408  174F  0020               	movlb	0	; select bank0
 14409  1750  085A               	movf	?___fladd,w
 14410  1751  0021               	movlb	1	; select bank1
 14411  1752  00DF               	movwf	_updateTemperatures$2044^(0+128)
 14412                           
 14413                           ;BQ76920.c: 261:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14414  1753  30B7               	movlw	183
 14415  1754  0020               	movlb	0	; select bank0
 14416  1755  00A9               	movwf	___flmul@b+3
 14417  1756  302E               	movlw	46
 14418  1757  00A8               	movwf	___flmul@b+2
 14419  1758  302F               	movlw	47
 14420  1759  00A7               	movwf	___flmul@b+1
 14421  175A  3045               	movlw	69
 14422  175B  00A6               	movwf	___flmul@b
 14423  175C  0021               	movlb	1	; select bank1
 14424  175D  0856               	movf	(_updateTemperatures$2041+3)^(0+128),w
 14425  175E  0020               	movlb	0	; select bank0
 14426  175F  00AD               	movwf	___flmul@a+3
 14427  1760  0021               	movlb	1	; select bank1
 14428  1761  0855               	movf	(_updateTemperatures$2041+2)^(0+128),w
 14429  1762  0020               	movlb	0	; select bank0
 14430  1763  00AC               	movwf	___flmul@a+2
 14431  1764  0021               	movlb	1	; select bank1
 14432  1765  0854               	movf	(_updateTemperatures$2041+1)^(0+128),w
 14433  1766  0020               	movlb	0	; select bank0
 14434  1767  00AB               	movwf	___flmul@a+1
 14435  1768  0021               	movlb	1	; select bank1
 14436  1769  0853               	movf	_updateTemperatures$2041^(0+128),w
 14437  176A  0020               	movlb	0	; select bank0
 14438  176B  00AA               	movwf	___flmul@a
 14439  176C  3190  2023  3195   	fcall	___flmul
 14440  176F  0020               	movlb	0	; select bank0
 14441  1770  0829               	movf	?___flmul+3,w
 14442  1771  00DD               	movwf	___fladd@b+3
 14443  1772  0828               	movf	?___flmul+2,w
 14444  1773  00DC               	movwf	___fladd@b+2
 14445  1774  0827               	movf	?___flmul+1,w
 14446  1775  00DB               	movwf	___fladd@b+1
 14447  1776  0826               	movf	?___flmul,w
 14448  1777  00DA               	movwf	___fladd@b
 14449  1778  0021               	movlb	1	; select bank1
 14450  1779  0862               	movf	(_updateTemperatures$2044+3)^(0+128),w
 14451  177A  0020               	movlb	0	; select bank0
 14452  177B  00E1               	movwf	___fladd@a+3
 14453  177C  0021               	movlb	1	; select bank1
 14454  177D  0861               	movf	(_updateTemperatures$2044+2)^(0+128),w
 14455  177E  0020               	movlb	0	; select bank0
 14456  177F  00E0               	movwf	___fladd@a+2
 14457  1780  0021               	movlb	1	; select bank1
 14458  1781  0860               	movf	(_updateTemperatures$2044+1)^(0+128),w
 14459  1782  0020               	movlb	0	; select bank0
 14460  1783  00DF               	movwf	___fladd@a+1
 14461  1784  0021               	movlb	1	; select bank1
 14462  1785  085F               	movf	_updateTemperatures$2044^(0+128),w
 14463  1786  0020               	movlb	0	; select bank0
 14464  1787  00DE               	movwf	___fladd@a
 14465  1788  3185  25F5  3195   	fcall	___fladd
 14466  178B  0020               	movlb	0	; select bank0
 14467  178C  085D               	movf	?___fladd+3,w
 14468  178D  00C3               	movwf	___fldiv@a+3
 14469  178E  085C               	movf	?___fladd+2,w
 14470  178F  00C2               	movwf	___fldiv@a+2
 14471  1790  085B               	movf	?___fladd+1,w
 14472  1791  00C1               	movwf	___fldiv@a+1
 14473  1792  085A               	movf	?___fladd,w
 14474  1793  00C0               	movwf	___fldiv@a
 14475  1794  303F               	movlw	63
 14476  1795  00C7               	movwf	___fldiv@b+3
 14477  1796  3080               	movlw	128
 14478  1797  00C6               	movwf	___fldiv@b+2
 14479  1798  3000               	movlw	0
 14480  1799  00C5               	movwf	___fldiv@b+1
 14481  179A  3000               	movlw	0
 14482  179B  00C4               	movwf	___fldiv@b
 14483  179C  319C  24E2  3195   	fcall	___fldiv
 14484  179F  0020               	movlb	0	; select bank0
 14485  17A0  0843               	movf	?___fldiv+3,w
 14486  17A1  0021               	movlb	1	; select bank1
 14487  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 14488  17A3  0020               	movlb	0	; select bank0
 14489  17A4  0842               	movf	?___fldiv+2,w
 14490  17A5  0021               	movlb	1	; select bank1
 14491  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 14492  17A7  0020               	movlb	0	; select bank0
 14493  17A8  0841               	movf	?___fldiv+1,w
 14494  17A9  0021               	movlb	1	; select bank1
 14495  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 14496  17AB  0020               	movlb	0	; select bank0
 14497  17AC  0840               	movf	?___fldiv,w
 14498  17AD  0021               	movlb	1	; select bank1
 14499  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 14500                           
 14501                           ;BQ76920.c: 263:      temperatureThermistor = (tmp - 273.15)*100;
 14502  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 14503  17B0  0020               	movlb	0	; select bank0
 14504  17B1  00E1               	movwf	___fladd@a+3
 14505  17B2  0021               	movlb	1	; select bank1
 14506  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 14507  17B4  0020               	movlb	0	; select bank0
 14508  17B5  00E0               	movwf	___fladd@a+2
 14509  17B6  0021               	movlb	1	; select bank1
 14510  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 14511  17B8  0020               	movlb	0	; select bank0
 14512  17B9  00DF               	movwf	___fladd@a+1
 14513  17BA  0021               	movlb	1	; select bank1
 14514  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 14515  17BC  0020               	movlb	0	; select bank0
 14516  17BD  00DE               	movwf	___fladd@a
 14517  17BE  30C3               	movlw	195
 14518  17BF  00DD               	movwf	___fladd@b+3
 14519  17C0  3088               	movlw	136
 14520  17C1  00DC               	movwf	___fladd@b+2
 14521  17C2  3093               	movlw	147
 14522  17C3  00DB               	movwf	___fladd@b+1
 14523  17C4  3033               	movlw	51
 14524  17C5  00DA               	movwf	___fladd@b
 14525  17C6  3185  25F5  3195   	fcall	___fladd
 14526  17C9  0020               	movlb	0	; select bank0
 14527  17CA  085D               	movf	?___fladd+3,w
 14528  17CB  00AD               	movwf	___flmul@a+3
 14529  17CC  085C               	movf	?___fladd+2,w
 14530  17CD  00AC               	movwf	___flmul@a+2
 14531  17CE  085B               	movf	?___fladd+1,w
 14532  17CF  00AB               	movwf	___flmul@a+1
 14533  17D0  085A               	movf	?___fladd,w
 14534  17D1  00AA               	movwf	___flmul@a
 14535  17D2  3042               	movlw	66
 14536  17D3  00A9               	movwf	___flmul@b+3
 14537  17D4  30C8               	movlw	200
 14538  17D5  00A8               	movwf	___flmul@b+2
 14539  17D6  3000               	movlw	0
 14540  17D7  00A7               	movwf	___flmul@b+1
 14541  17D8  3000               	movlw	0
 14542  17D9  00A6               	movwf	___flmul@b
 14543  17DA  3190  2023  3195   	fcall	___flmul
 14544  17DD  0020               	movlb	0	; select bank0
 14545  17DE  0829               	movf	?___flmul+3,w
 14546  17DF  0021               	movlb	1	; select bank1
 14547  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14548  17E1  0020               	movlb	0	; select bank0
 14549  17E2  0828               	movf	?___flmul+2,w
 14550  17E3  0021               	movlb	1	; select bank1
 14551  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14552  17E5  0020               	movlb	0	; select bank0
 14553  17E6  0827               	movf	?___flmul+1,w
 14554  17E7  0021               	movlb	1	; select bank1
 14555  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14556  17E9  0020               	movlb	0	; select bank0
 14557  17EA  0826               	movf	?___flmul,w
 14558  17EB  0021               	movlb	1	; select bank1
 14559  17EC  00A8               	movwf	___fltol@f1^(0+128)
 14560  17ED  31AA  222E         	fcall	___fltol
 14561  17EF  0021               	movlb	1	; select bank1
 14562  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 14563  17F1  0023               	movlb	3	; select bank3
 14564  17F2  00B9               	movwf	(_temperatureThermistor+3)^(0+384)
 14565  17F3  0021               	movlb	1	; select bank1
 14566  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 14567  17F5  0023               	movlb	3	; select bank3
 14568  17F6  00B8               	movwf	(_temperatureThermistor+2)^(0+384)
 14569  17F7  0021               	movlb	1	; select bank1
 14570  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 14571  17F9  0023               	movlb	3	; select bank3
 14572  17FA  00B7               	movwf	(_temperatureThermistor+1)^(0+384)
 14573  17FB  0021               	movlb	1	; select bank1
 14574  17FC  0828               	movf	?___fltol^(0+128),w
 14575  17FD  0023               	movlb	3	; select bank3
 14576  17FE  00B6               	movwf	_temperatureThermistor^(0+384)
 14577  17FF  0008               	return
 14578  1800                     __end_of_updateTemperatures:	
 14579                           
 14580                           	psect	text50
 14581  006B                     __ptext50:	
 14582 ;; *************** function _logf *****************
 14583 ;; Defined at:
 14584 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;  x               4    8[BANK1 ] float 
 14587 ;; Auto vars:     Size  Location     Type
 14588 ;;  ix              4   62[BANK2 ] unsigned long 
 14589 ;;  f               4   58[BANK2 ] float 
 14590 ;;  u               4   54[BANK2 ] struct .
 14591 ;;  w               4   46[BANK2 ] float 
 14592 ;;  z               4   42[BANK2 ] float 
 14593 ;;  s               4   38[BANK2 ] float 
 14594 ;;  dk              4   34[BANK2 ] float 
 14595 ;;  hfsq            4   30[BANK2 ] float 
 14596 ;;  t2              4    8[BANK2 ] float 
 14597 ;;  t1              4    4[BANK2 ] float 
 14598 ;;  R               4    0[BANK2 ] float 
 14599 ;;  k               2   28[BANK2 ] int 
 14600 ;; Return value:  Size  Location     Type
 14601 ;;                  4    8[BANK1 ] float 
 14602 ;; Registers used:
 14603 ;;		wreg, status,2, status,0, pclath, cstack
 14604 ;; Tracked objects:
 14605 ;;		On entry : 0/0
 14606 ;;		On exit  : 0/0
 14607 ;;		Unchanged: 0/0
 14608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14609 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14610 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14611 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14612 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14613 ;;Total ram usage:       78 bytes
 14614 ;; Hardware stack levels used:    1
 14615 ;; Hardware stack levels required when called:    3
 14616 ;; This function calls:
 14617 ;;		___fladd
 14618 ;;		___fldiv
 14619 ;;		___flmul
 14620 ;;		___flsub
 14621 ;;		___xxtofl
 14622 ;; This function is called by:
 14623 ;;		_updateTemperatures
 14624 ;; This function uses a non-reentrant model
 14625 ;;
 14626                           
 14627                           
 14628                           ;psect for function _logf
 14629  006B                     _logf:	
 14630                           
 14631                           ;incstack = 0
 14632                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 14633  006B  0023               	movlb	3	; select bank3
 14634  006C  082D               	movf	(logf@F469+3)^(0+384),w
 14635  006D  0022               	movlb	2	; select bank2
 14636  006E  00D9               	movwf	(logf@u+3)^(0+256)
 14637  006F  0023               	movlb	3	; select bank3
 14638  0070  082C               	movf	(logf@F469+2)^(0+384),w
 14639  0071  0022               	movlb	2	; select bank2
 14640  0072  00D8               	movwf	(logf@u+2)^(0+256)
 14641  0073  0023               	movlb	3	; select bank3
 14642  0074  082B               	movf	(logf@F469+1)^(0+384),w
 14643  0075  0022               	movlb	2	; select bank2
 14644  0076  00D7               	movwf	(logf@u+1)^(0+256)
 14645  0077  0023               	movlb	3	; select bank3
 14646  0078  082A               	movf	logf@F469^(0+384),w
 14647  0079  0022               	movlb	2	; select bank2
 14648  007A  00D6               	movwf	logf@u^(0+256)
 14649  007B  0021               	movlb	1	; select bank1
 14650  007C  082B               	movf	(logf@x+3)^(0+128),w
 14651  007D  0022               	movlb	2	; select bank2
 14652  007E  00D9               	movwf	(logf@u+3)^(0+256)
 14653  007F  0021               	movlb	1	; select bank1
 14654  0080  082A               	movf	(logf@x+2)^(0+128),w
 14655  0081  0022               	movlb	2	; select bank2
 14656  0082  00D8               	movwf	(logf@u+2)^(0+256)
 14657  0083  0021               	movlb	1	; select bank1
 14658  0084  0829               	movf	(logf@x+1)^(0+128),w
 14659  0085  0022               	movlb	2	; select bank2
 14660  0086  00D7               	movwf	(logf@u+1)^(0+256)
 14661  0087  0021               	movlb	1	; select bank1
 14662  0088  0828               	movf	logf@x^(0+128),w
 14663  0089  0022               	movlb	2	; select bank2
 14664  008A  00D6               	movwf	logf@u^(0+256)
 14665  008B  0859               	movf	(logf@u+3)^(0+256),w
 14666  008C  00E1               	movwf	(logf@ix+3)^(0+256)
 14667  008D  0858               	movf	(logf@u+2)^(0+256),w
 14668  008E  00E0               	movwf	(logf@ix+2)^(0+256)
 14669  008F  0857               	movf	(logf@u+1)^(0+256),w
 14670  0090  00DF               	movwf	(logf@ix+1)^(0+256)
 14671  0091  0856               	movf	logf@u^(0+256),w
 14672  0092  00DE               	movwf	logf@ix^(0+256)
 14673  0093  01BC               	clrf	logf@k^(0+256)
 14674  0094  01BD               	clrf	(logf@k+1)^(0+256)
 14675  0095  0861               	movf	(logf@ix+3)^(0+256),w
 14676  0096  1D03               	btfss	3,2
 14677  0097  289C               	goto	l7749
 14678  0098  3080               	movlw	128
 14679  0099  0260               	subwf	(logf@ix+2)^(0+256),w
 14680  009A  1C03               	btfss	3,0
 14681  009B  28B8               	goto	l7751
 14682  009C                     l7749:	
 14683  009C  085E               	movf	logf@ix^(0+256),w
 14684  009D  0021               	movlb	1	; select bank1
 14685  009E  00AC               	movwf	??_logf^(0+128)
 14686  009F  0022               	movlb	2	; select bank2
 14687  00A0  085F               	movf	(logf@ix+1)^(0+256),w
 14688  00A1  0021               	movlb	1	; select bank1
 14689  00A2  00AD               	movwf	(??_logf^(0+128)+1)
 14690  00A3  0022               	movlb	2	; select bank2
 14691  00A4  0860               	movf	(logf@ix+2)^(0+256),w
 14692  00A5  0021               	movlb	1	; select bank1
 14693  00A6  00AE               	movwf	(??_logf^(0+128)+2)
 14694  00A7  0022               	movlb	2	; select bank2
 14695  00A8  0861               	movf	(logf@ix+3)^(0+256),w
 14696  00A9  0021               	movlb	1	; select bank1
 14697  00AA  00AF               	movwf	(??_logf^(0+128)+3)
 14698  00AB  301F               	movlw	31
 14699  00AC                     u10695:	
 14700  00AC  36AF               	lsrf	(??_logf^(0+128)+3),f
 14701  00AD  0CAE               	rrf	(??_logf^(0+128)+2),f
 14702  00AE  0CAD               	rrf	(??_logf^(0+128)+1),f
 14703  00AF  0CAC               	rrf	??_logf^(0+128),f
 14704  00B0  0B89               	decfsz	9,f
 14705  00B1  28AC               	goto	u10695
 14706  00B2  082F               	movf	(??_logf+3)^(0+128),w
 14707  00B3  042E               	iorwf	(??_logf+2)^(0+128),w
 14708  00B4  042D               	iorwf	(??_logf+1)^(0+128),w
 14709  00B5  042C               	iorwf	??_logf^(0+128),w
 14710  00B6  1903               	skipnz
 14711  00B7  29C1               	goto	l7771
 14712  00B8                     l7751:	
 14713  00B8  0022               	movlb	2	; select bank2
 14714  00B9  085E               	movf	logf@ix^(0+256),w
 14715  00BA  0021               	movlb	1	; select bank1
 14716  00BB  00AC               	movwf	??_logf^(0+128)
 14717  00BC  0022               	movlb	2	; select bank2
 14718  00BD  085F               	movf	(logf@ix+1)^(0+256),w
 14719  00BE  0021               	movlb	1	; select bank1
 14720  00BF  00AD               	movwf	(??_logf^(0+128)+1)
 14721  00C0  0022               	movlb	2	; select bank2
 14722  00C1  0860               	movf	(logf@ix+2)^(0+256),w
 14723  00C2  0021               	movlb	1	; select bank1
 14724  00C3  00AE               	movwf	(??_logf^(0+128)+2)
 14725  00C4  0022               	movlb	2	; select bank2
 14726  00C5  0861               	movf	(logf@ix+3)^(0+256),w
 14727  00C6  0021               	movlb	1	; select bank1
 14728  00C7  00AF               	movwf	(??_logf^(0+128)+3)
 14729  00C8  3001               	movlw	1
 14730  00C9                     u10715:	
 14731  00C9  35AC               	lslf	??_logf^(0+128),f
 14732  00CA  0DAD               	rlf	(??_logf^(0+128)+1),f
 14733  00CB  0DAE               	rlf	(??_logf^(0+128)+2),f
 14734  00CC  0DAF               	rlf	(??_logf^(0+128)+3),f
 14735  00CD  0B89               	decfsz	9,f
 14736  00CE  28C9               	goto	u10715
 14737  00CF  082F               	movf	(??_logf+3)^(0+128),w
 14738  00D0  042E               	iorwf	(??_logf+2)^(0+128),w
 14739  00D1  042D               	iorwf	(??_logf+1)^(0+128),w
 14740  00D2  042C               	iorwf	??_logf^(0+128),w
 14741  00D3  1D03               	skipz
 14742  00D4  291B               	goto	l7757
 14743  00D5  082B               	movf	(logf@x+3)^(0+128),w
 14744  00D6  0020               	movlb	0	; select bank0
 14745  00D7  00A9               	movwf	___flmul@b+3
 14746  00D8  0021               	movlb	1	; select bank1
 14747  00D9  082A               	movf	(logf@x+2)^(0+128),w
 14748  00DA  0020               	movlb	0	; select bank0
 14749  00DB  00A8               	movwf	___flmul@b+2
 14750  00DC  0021               	movlb	1	; select bank1
 14751  00DD  0829               	movf	(logf@x+1)^(0+128),w
 14752  00DE  0020               	movlb	0	; select bank0
 14753  00DF  00A7               	movwf	___flmul@b+1
 14754  00E0  0021               	movlb	1	; select bank1
 14755  00E1  0828               	movf	logf@x^(0+128),w
 14756  00E2  0020               	movlb	0	; select bank0
 14757  00E3  00A6               	movwf	___flmul@b
 14758  00E4  0021               	movlb	1	; select bank1
 14759  00E5  082B               	movf	(logf@x+3)^(0+128),w
 14760  00E6  0020               	movlb	0	; select bank0
 14761  00E7  00AD               	movwf	___flmul@a+3
 14762  00E8  0021               	movlb	1	; select bank1
 14763  00E9  082A               	movf	(logf@x+2)^(0+128),w
 14764  00EA  0020               	movlb	0	; select bank0
 14765  00EB  00AC               	movwf	___flmul@a+2
 14766  00EC  0021               	movlb	1	; select bank1
 14767  00ED  0829               	movf	(logf@x+1)^(0+128),w
 14768  00EE  0020               	movlb	0	; select bank0
 14769  00EF  00AB               	movwf	___flmul@a+1
 14770  00F0  0021               	movlb	1	; select bank1
 14771  00F1  0828               	movf	logf@x^(0+128),w
 14772  00F2  0020               	movlb	0	; select bank0
 14773  00F3  00AA               	movwf	___flmul@a
 14774  00F4  3190  2023  3180   	fcall	___flmul
 14775  00F7  0020               	movlb	0	; select bank0
 14776  00F8  0829               	movf	?___flmul+3,w
 14777  00F9  00C3               	movwf	___fldiv@a+3
 14778  00FA  0828               	movf	?___flmul+2,w
 14779  00FB  00C2               	movwf	___fldiv@a+2
 14780  00FC  0827               	movf	?___flmul+1,w
 14781  00FD  00C1               	movwf	___fldiv@a+1
 14782  00FE  0826               	movf	?___flmul,w
 14783  00FF  00C0               	movwf	___fldiv@a
 14784  0100  30BF               	movlw	191
 14785  0101  00C7               	movwf	___fldiv@b+3
 14786  0102  3080               	movlw	128
 14787  0103  00C6               	movwf	___fldiv@b+2
 14788  0104  3000               	movlw	0
 14789  0105  00C5               	movwf	___fldiv@b+1
 14790  0106  3000               	movlw	0
 14791  0107  00C4               	movwf	___fldiv@b
 14792  0108  319C  24E2         	fcall	___fldiv
 14793  010A  0020               	movlb	0	; select bank0
 14794  010B  0843               	movf	?___fldiv+3,w
 14795  010C  0021               	movlb	1	; select bank1
 14796  010D  00AB               	movwf	(?_logf+3)^(0+128)
 14797  010E  0020               	movlb	0	; select bank0
 14798  010F  0842               	movf	?___fldiv+2,w
 14799  0110  0021               	movlb	1	; select bank1
 14800  0111  00AA               	movwf	(?_logf+2)^(0+128)
 14801  0112  0020               	movlb	0	; select bank0
 14802  0113  0841               	movf	?___fldiv+1,w
 14803  0114  0021               	movlb	1	; select bank1
 14804  0115  00A9               	movwf	(?_logf+1)^(0+128)
 14805  0116  0020               	movlb	0	; select bank0
 14806  0117  0840               	movf	?___fldiv,w
 14807  0118  0021               	movlb	1	; select bank1
 14808  0119  00A8               	movwf	?_logf^(0+128)
 14809  011A  0008               	return
 14810  011B                     l7757:	
 14811  011B  0022               	movlb	2	; select bank2
 14812  011C  085E               	movf	logf@ix^(0+256),w
 14813  011D  0021               	movlb	1	; select bank1
 14814  011E  00AC               	movwf	??_logf^(0+128)
 14815  011F  0022               	movlb	2	; select bank2
 14816  0120  085F               	movf	(logf@ix+1)^(0+256),w
 14817  0121  0021               	movlb	1	; select bank1
 14818  0122  00AD               	movwf	(??_logf^(0+128)+1)
 14819  0123  0022               	movlb	2	; select bank2
 14820  0124  0860               	movf	(logf@ix+2)^(0+256),w
 14821  0125  0021               	movlb	1	; select bank1
 14822  0126  00AE               	movwf	(??_logf^(0+128)+2)
 14823  0127  0022               	movlb	2	; select bank2
 14824  0128  0861               	movf	(logf@ix+3)^(0+256),w
 14825  0129  0021               	movlb	1	; select bank1
 14826  012A  00AF               	movwf	(??_logf^(0+128)+3)
 14827  012B  301F               	movlw	31
 14828  012C                     u10735:	
 14829  012C  36AF               	lsrf	(??_logf^(0+128)+3),f
 14830  012D  0CAE               	rrf	(??_logf^(0+128)+2),f
 14831  012E  0CAD               	rrf	(??_logf^(0+128)+1),f
 14832  012F  0CAC               	rrf	??_logf^(0+128),f
 14833  0130  0B89               	decfsz	9,f
 14834  0131  292C               	goto	u10735
 14835  0132  082F               	movf	(??_logf+3)^(0+128),w
 14836  0133  042E               	iorwf	(??_logf+2)^(0+128),w
 14837  0134  042D               	iorwf	(??_logf+1)^(0+128),w
 14838  0135  042C               	iorwf	??_logf^(0+128),w
 14839  0136  1903               	skipnz
 14840  0137  2978               	goto	l7763
 14841  0138  3000               	movlw	0
 14842  0139  0020               	movlb	0	; select bank0
 14843  013A  00C3               	movwf	___fldiv@a+3
 14844  013B  3000               	movlw	0
 14845  013C  00C2               	movwf	___fldiv@a+2
 14846  013D  3000               	movlw	0
 14847  013E  00C1               	movwf	___fldiv@a+1
 14848  013F  3000               	movlw	0
 14849  0140  00C0               	movwf	___fldiv@a
 14850  0141  0021               	movlb	1	; select bank1
 14851  0142  082B               	movf	(logf@x+3)^(0+128),w
 14852  0143  00A3               	movwf	(___flsub@a+3)^(0+128)
 14853  0144  082A               	movf	(logf@x+2)^(0+128),w
 14854  0145  00A2               	movwf	(___flsub@a+2)^(0+128)
 14855  0146  0829               	movf	(logf@x+1)^(0+128),w
 14856  0147  00A1               	movwf	(___flsub@a+1)^(0+128)
 14857  0148  0828               	movf	logf@x^(0+128),w
 14858  0149  00A0               	movwf	___flsub@a^(0+128)
 14859  014A  082B               	movf	(logf@x+3)^(0+128),w
 14860  014B  00A7               	movwf	(___flsub@b+3)^(0+128)
 14861  014C  082A               	movf	(logf@x+2)^(0+128),w
 14862  014D  00A6               	movwf	(___flsub@b+2)^(0+128)
 14863  014E  0829               	movf	(logf@x+1)^(0+128),w
 14864  014F  00A5               	movwf	(___flsub@b+1)^(0+128)
 14865  0150  0828               	movf	logf@x^(0+128),w
 14866  0151  00A4               	movwf	___flsub@b^(0+128)
 14867  0152  31B7  2795  3180   	fcall	___flsub
 14868  0155  0021               	movlb	1	; select bank1
 14869  0156  0823               	movf	(?___flsub+3)^(0+128),w
 14870  0157  0020               	movlb	0	; select bank0
 14871  0158  00C7               	movwf	___fldiv@b+3
 14872  0159  0021               	movlb	1	; select bank1
 14873  015A  0822               	movf	(?___flsub+2)^(0+128),w
 14874  015B  0020               	movlb	0	; select bank0
 14875  015C  00C6               	movwf	___fldiv@b+2
 14876  015D  0021               	movlb	1	; select bank1
 14877  015E  0821               	movf	(?___flsub+1)^(0+128),w
 14878  015F  0020               	movlb	0	; select bank0
 14879  0160  00C5               	movwf	___fldiv@b+1
 14880  0161  0021               	movlb	1	; select bank1
 14881  0162  0820               	movf	?___flsub^(0+128),w
 14882  0163  0020               	movlb	0	; select bank0
 14883  0164  00C4               	movwf	___fldiv@b
 14884  0165  319C  24E2         	fcall	___fldiv
 14885  0167  0020               	movlb	0	; select bank0
 14886  0168  0843               	movf	?___fldiv+3,w
 14887  0169  0021               	movlb	1	; select bank1
 14888  016A  00AB               	movwf	(?_logf+3)^(0+128)
 14889  016B  0020               	movlb	0	; select bank0
 14890  016C  0842               	movf	?___fldiv+2,w
 14891  016D  0021               	movlb	1	; select bank1
 14892  016E  00AA               	movwf	(?_logf+2)^(0+128)
 14893  016F  0020               	movlb	0	; select bank0
 14894  0170  0841               	movf	?___fldiv+1,w
 14895  0171  0021               	movlb	1	; select bank1
 14896  0172  00A9               	movwf	(?_logf+1)^(0+128)
 14897  0173  0020               	movlb	0	; select bank0
 14898  0174  0840               	movf	?___fldiv,w
 14899  0175  0021               	movlb	1	; select bank1
 14900  0176  00A8               	movwf	?_logf^(0+128)
 14901  0177  0008               	return
 14902  0178                     l7763:	
 14903  0178  30E7               	movlw	231
 14904  0179  0022               	movlb	2	; select bank2
 14905  017A  07BC               	addwf	logf@k^(0+256),f
 14906  017B  30FF               	movlw	255
 14907  017C  3DBD               	addwfc	(logf@k+1)^(0+256),f
 14908  017D  304C               	movlw	76
 14909  017E  0020               	movlb	0	; select bank0
 14910  017F  00A9               	movwf	___flmul@b+3
 14911  0180  3000               	movlw	0
 14912  0181  00A8               	movwf	___flmul@b+2
 14913  0182  3000               	movlw	0
 14914  0183  00A7               	movwf	___flmul@b+1
 14915  0184  3000               	movlw	0
 14916  0185  00A6               	movwf	___flmul@b
 14917  0186  0021               	movlb	1	; select bank1
 14918  0187  082B               	movf	(logf@x+3)^(0+128),w
 14919  0188  0020               	movlb	0	; select bank0
 14920  0189  00AD               	movwf	___flmul@a+3
 14921  018A  0021               	movlb	1	; select bank1
 14922  018B  082A               	movf	(logf@x+2)^(0+128),w
 14923  018C  0020               	movlb	0	; select bank0
 14924  018D  00AC               	movwf	___flmul@a+2
 14925  018E  0021               	movlb	1	; select bank1
 14926  018F  0829               	movf	(logf@x+1)^(0+128),w
 14927  0190  0020               	movlb	0	; select bank0
 14928  0191  00AB               	movwf	___flmul@a+1
 14929  0192  0021               	movlb	1	; select bank1
 14930  0193  0828               	movf	logf@x^(0+128),w
 14931  0194  0020               	movlb	0	; select bank0
 14932  0195  00AA               	movwf	___flmul@a
 14933  0196  3190  2023  3180   	fcall	___flmul
 14934  0199  0020               	movlb	0	; select bank0
 14935  019A  0829               	movf	?___flmul+3,w
 14936  019B  0021               	movlb	1	; select bank1
 14937  019C  00AB               	movwf	(logf@x+3)^(0+128)
 14938  019D  0020               	movlb	0	; select bank0
 14939  019E  0828               	movf	?___flmul+2,w
 14940  019F  0021               	movlb	1	; select bank1
 14941  01A0  00AA               	movwf	(logf@x+2)^(0+128)
 14942  01A1  0020               	movlb	0	; select bank0
 14943  01A2  0827               	movf	?___flmul+1,w
 14944  01A3  0021               	movlb	1	; select bank1
 14945  01A4  00A9               	movwf	(logf@x+1)^(0+128)
 14946  01A5  0020               	movlb	0	; select bank0
 14947  01A6  0826               	movf	?___flmul,w
 14948  01A7  0021               	movlb	1	; select bank1
 14949  01A8  00A8               	movwf	logf@x^(0+128)
 14950  01A9  082B               	movf	(logf@x+3)^(0+128),w
 14951  01AA  0022               	movlb	2	; select bank2
 14952  01AB  00D9               	movwf	(logf@u+3)^(0+256)
 14953  01AC  0021               	movlb	1	; select bank1
 14954  01AD  082A               	movf	(logf@x+2)^(0+128),w
 14955  01AE  0022               	movlb	2	; select bank2
 14956  01AF  00D8               	movwf	(logf@u+2)^(0+256)
 14957  01B0  0021               	movlb	1	; select bank1
 14958  01B1  0829               	movf	(logf@x+1)^(0+128),w
 14959  01B2  0022               	movlb	2	; select bank2
 14960  01B3  00D7               	movwf	(logf@u+1)^(0+256)
 14961  01B4  0021               	movlb	1	; select bank1
 14962  01B5  0828               	movf	logf@x^(0+128),w
 14963  01B6  0022               	movlb	2	; select bank2
 14964  01B7  00D6               	movwf	logf@u^(0+256)
 14965  01B8  0859               	movf	(logf@u+3)^(0+256),w
 14966  01B9  00E1               	movwf	(logf@ix+3)^(0+256)
 14967  01BA  0858               	movf	(logf@u+2)^(0+256),w
 14968  01BB  00E0               	movwf	(logf@ix+2)^(0+256)
 14969  01BC  0857               	movf	(logf@u+1)^(0+256),w
 14970  01BD  00DF               	movwf	(logf@ix+1)^(0+256)
 14971  01BE  0856               	movf	logf@u^(0+256),w
 14972  01BF  00DE               	movwf	logf@ix^(0+256)
 14973  01C0  29DB               	goto	l7783
 14974  01C1                     l7771:	
 14975  01C1  3080               	movlw	128
 14976  01C2  0022               	movlb	2	; select bank2
 14977  01C3  0260               	subwf	(logf@ix+2)^(0+256),w
 14978  01C4  307F               	movlw	127
 14979  01C5  3B61               	subwfb	(logf@ix+3)^(0+256),w
 14980  01C6  1803               	btfsc	3,0
 14981  01C7  0008               	return
 14982  01C8  3080               	movlw	128
 14983  01C9  0660               	xorwf	(logf@ix+2)^(0+256),w
 14984  01CA  303F               	movlw	63
 14985  01CB  1903               	skipnz
 14986  01CC  0661               	xorwf	(logf@ix+3)^(0+256),w
 14987  01CD  045E               	iorwf	logf@ix^(0+256),w
 14988  01CE  045F               	iorwf	(logf@ix+1)^(0+256),w
 14989  01CF  1D03               	btfss	3,2
 14990  01D0  29DB               	goto	l7783
 14991  01D1  3000               	movlw	0
 14992  01D2  0021               	movlb	1	; select bank1
 14993  01D3  00AB               	movwf	(?_logf+3)^(0+128)
 14994  01D4  3000               	movlw	0
 14995  01D5  00AA               	movwf	(?_logf+2)^(0+128)
 14996  01D6  3000               	movlw	0
 14997  01D7  00A9               	movwf	(?_logf+1)^(0+128)
 14998  01D8  3000               	movlw	0
 14999  01D9  00A8               	movwf	?_logf^(0+128)
 15000  01DA  0008               	return
 15001  01DB                     l7783:	
 15002  01DB  300D               	movlw	13
 15003  01DC  07DE               	addwf	logf@ix^(0+256),f
 15004  01DD  30FB               	movlw	251
 15005  01DE  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15006  01DF  304A               	movlw	74
 15007  01E0  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15008  01E1  3000               	movlw	0
 15009  01E2  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15010  01E3  085E               	movf	logf@ix^(0+256),w
 15011  01E4  0021               	movlb	1	; select bank1
 15012  01E5  00AC               	movwf	??_logf^(0+128)
 15013  01E6  0022               	movlb	2	; select bank2
 15014  01E7  085F               	movf	(logf@ix+1)^(0+256),w
 15015  01E8  0021               	movlb	1	; select bank1
 15016  01E9  00AD               	movwf	(??_logf^(0+128)+1)
 15017  01EA  0022               	movlb	2	; select bank2
 15018  01EB  0860               	movf	(logf@ix+2)^(0+256),w
 15019  01EC  0021               	movlb	1	; select bank1
 15020  01ED  00AE               	movwf	(??_logf^(0+128)+2)
 15021  01EE  0022               	movlb	2	; select bank2
 15022  01EF  0861               	movf	(logf@ix+3)^(0+256),w
 15023  01F0  0021               	movlb	1	; select bank1
 15024  01F1  00AF               	movwf	(??_logf^(0+128)+3)
 15025  01F2  3017               	movlw	23
 15026  01F3                     u10775:	
 15027  01F3  36AF               	lsrf	(??_logf^(0+128)+3),f
 15028  01F4  0CAE               	rrf	(??_logf^(0+128)+2),f
 15029  01F5  0CAD               	rrf	(??_logf^(0+128)+1),f
 15030  01F6  0CAC               	rrf	??_logf^(0+128),f
 15031  01F7  0B89               	decfsz	9,f
 15032  01F8  29F3               	goto	u10775
 15033  01F9  082C               	movf	??_logf^(0+128),w
 15034  01FA  3E81               	addlw	129
 15035  01FB  00B0               	movwf	(??_logf+4)^(0+128)
 15036  01FC  30FF               	movlw	255
 15037  01FD  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15038  01FE  00B1               	movwf	(??_logf+5)^(0+128)
 15039  01FF  0830               	movf	(??_logf+4)^(0+128),w
 15040  0200  0022               	movlb	2	; select bank2
 15041  0201  07BC               	addwf	logf@k^(0+256),f
 15042  0202  0021               	movlb	1	; select bank1
 15043  0203  0831               	movf	(??_logf+5)^(0+128),w
 15044  0204  0022               	movlb	2	; select bank2
 15045  0205  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15046  0206  30F3               	movlw	243
 15047  0207  0021               	movlb	1	; select bank1
 15048  0208  00AC               	movwf	??_logf^(0+128)
 15049  0209  3004               	movlw	4
 15050  020A  00AD               	movwf	(??_logf^(0+128)+1)
 15051  020B  3035               	movlw	53
 15052  020C  00AE               	movwf	(??_logf^(0+128)+2)
 15053  020D  303F               	movlw	63
 15054  020E  00AF               	movwf	(??_logf^(0+128)+3)
 15055  020F  30FF               	movlw	255
 15056  0210  0022               	movlb	2	; select bank2
 15057  0211  055E               	andwf	logf@ix^(0+256),w
 15058  0212  0021               	movlb	1	; select bank1
 15059  0213  00B0               	movwf	(??_logf+4)^(0+128)
 15060  0214  30FF               	movlw	255
 15061  0215  0022               	movlb	2	; select bank2
 15062  0216  055F               	andwf	(logf@ix+1)^(0+256),w
 15063  0217  0021               	movlb	1	; select bank1
 15064  0218  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15065  0219  307F               	movlw	127
 15066  021A  0022               	movlb	2	; select bank2
 15067  021B  0560               	andwf	(logf@ix+2)^(0+256),w
 15068  021C  0021               	movlb	1	; select bank1
 15069  021D  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15070  021E  3000               	movlw	0
 15071  021F  0022               	movlb	2	; select bank2
 15072  0220  0561               	andwf	(logf@ix+3)^(0+256),w
 15073  0221  0021               	movlb	1	; select bank1
 15074  0222  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15075  0223  0830               	movf	(??_logf+4)^(0+128),w
 15076  0224  07AC               	addwf	??_logf^(0+128),f
 15077  0225  0831               	movf	(??_logf+5)^(0+128),w
 15078  0226  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15079  0227  0832               	movf	(??_logf+6)^(0+128),w
 15080  0228  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15081  0229  0833               	movf	(??_logf+7)^(0+128),w
 15082  022A  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15083  022B  082F               	movf	(??_logf+3)^(0+128),w
 15084  022C  0022               	movlb	2	; select bank2
 15085  022D  00E1               	movwf	(logf@ix+3)^(0+256)
 15086  022E  0021               	movlb	1	; select bank1
 15087  022F  082E               	movf	(??_logf+2)^(0+128),w
 15088  0230  0022               	movlb	2	; select bank2
 15089  0231  00E0               	movwf	(logf@ix+2)^(0+256)
 15090  0232  0021               	movlb	1	; select bank1
 15091  0233  082D               	movf	(??_logf+1)^(0+128),w
 15092  0234  0022               	movlb	2	; select bank2
 15093  0235  00DF               	movwf	(logf@ix+1)^(0+256)
 15094  0236  0021               	movlb	1	; select bank1
 15095  0237  082C               	movf	??_logf^(0+128),w
 15096  0238  0022               	movlb	2	; select bank2
 15097  0239  00DE               	movwf	logf@ix^(0+256)
 15098  023A  0861               	movf	(logf@ix+3)^(0+256),w
 15099  023B  00D9               	movwf	(logf@u+3)^(0+256)
 15100  023C  0860               	movf	(logf@ix+2)^(0+256),w
 15101  023D  00D8               	movwf	(logf@u+2)^(0+256)
 15102  023E  085F               	movf	(logf@ix+1)^(0+256),w
 15103  023F  00D7               	movwf	(logf@u+1)^(0+256)
 15104  0240  085E               	movf	logf@ix^(0+256),w
 15105  0241  00D6               	movwf	logf@u^(0+256)
 15106  0242  0859               	movf	(logf@u+3)^(0+256),w
 15107  0243  0021               	movlb	1	; select bank1
 15108  0244  00AB               	movwf	(logf@x+3)^(0+128)
 15109  0245  0022               	movlb	2	; select bank2
 15110  0246  0858               	movf	(logf@u+2)^(0+256),w
 15111  0247  0021               	movlb	1	; select bank1
 15112  0248  00AA               	movwf	(logf@x+2)^(0+128)
 15113  0249  0022               	movlb	2	; select bank2
 15114  024A  0857               	movf	(logf@u+1)^(0+256),w
 15115  024B  0021               	movlb	1	; select bank1
 15116  024C  00A9               	movwf	(logf@x+1)^(0+128)
 15117  024D  0022               	movlb	2	; select bank2
 15118  024E  0856               	movf	logf@u^(0+256),w
 15119  024F  0021               	movlb	1	; select bank1
 15120  0250  00A8               	movwf	logf@x^(0+128)
 15121  0251  30BF               	movlw	191
 15122  0252  0020               	movlb	0	; select bank0
 15123  0253  00DD               	movwf	___fladd@b+3
 15124  0254  3080               	movlw	128
 15125  0255  00DC               	movwf	___fladd@b+2
 15126  0256  3000               	movlw	0
 15127  0257  00DB               	movwf	___fladd@b+1
 15128  0258  3000               	movlw	0
 15129  0259  00DA               	movwf	___fladd@b
 15130  025A  0021               	movlb	1	; select bank1
 15131  025B  082B               	movf	(logf@x+3)^(0+128),w
 15132  025C  0020               	movlb	0	; select bank0
 15133  025D  00E1               	movwf	___fladd@a+3
 15134  025E  0021               	movlb	1	; select bank1
 15135  025F  082A               	movf	(logf@x+2)^(0+128),w
 15136  0260  0020               	movlb	0	; select bank0
 15137  0261  00E0               	movwf	___fladd@a+2
 15138  0262  0021               	movlb	1	; select bank1
 15139  0263  0829               	movf	(logf@x+1)^(0+128),w
 15140  0264  0020               	movlb	0	; select bank0
 15141  0265  00DF               	movwf	___fladd@a+1
 15142  0266  0021               	movlb	1	; select bank1
 15143  0267  0828               	movf	logf@x^(0+128),w
 15144  0268  0020               	movlb	0	; select bank0
 15145  0269  00DE               	movwf	___fladd@a
 15146  026A  3185  25F5  3180   	fcall	___fladd
 15147  026D  0020               	movlb	0	; select bank0
 15148  026E  085D               	movf	?___fladd+3,w
 15149  026F  0022               	movlb	2	; select bank2
 15150  0270  00DD               	movwf	(logf@f+3)^(0+256)
 15151  0271  0020               	movlb	0	; select bank0
 15152  0272  085C               	movf	?___fladd+2,w
 15153  0273  0022               	movlb	2	; select bank2
 15154  0274  00DC               	movwf	(logf@f+2)^(0+256)
 15155  0275  0020               	movlb	0	; select bank0
 15156  0276  085B               	movf	?___fladd+1,w
 15157  0277  0022               	movlb	2	; select bank2
 15158  0278  00DB               	movwf	(logf@f+1)^(0+256)
 15159  0279  0020               	movlb	0	; select bank0
 15160  027A  085A               	movf	?___fladd,w
 15161  027B  0022               	movlb	2	; select bank2
 15162  027C  00DA               	movwf	logf@f^(0+256)
 15163  027D  3040               	movlw	64
 15164  027E  0020               	movlb	0	; select bank0
 15165  027F  00DD               	movwf	___fladd@b+3
 15166  0280  3000               	movlw	0
 15167  0281  00DC               	movwf	___fladd@b+2
 15168  0282  3000               	movlw	0
 15169  0283  00DB               	movwf	___fladd@b+1
 15170  0284  3000               	movlw	0
 15171  0285  00DA               	movwf	___fladd@b
 15172  0286  0022               	movlb	2	; select bank2
 15173  0287  085D               	movf	(logf@f+3)^(0+256),w
 15174  0288  0020               	movlb	0	; select bank0
 15175  0289  00E1               	movwf	___fladd@a+3
 15176  028A  0022               	movlb	2	; select bank2
 15177  028B  085C               	movf	(logf@f+2)^(0+256),w
 15178  028C  0020               	movlb	0	; select bank0
 15179  028D  00E0               	movwf	___fladd@a+2
 15180  028E  0022               	movlb	2	; select bank2
 15181  028F  085B               	movf	(logf@f+1)^(0+256),w
 15182  0290  0020               	movlb	0	; select bank0
 15183  0291  00DF               	movwf	___fladd@a+1
 15184  0292  0022               	movlb	2	; select bank2
 15185  0293  085A               	movf	logf@f^(0+256),w
 15186  0294  0020               	movlb	0	; select bank0
 15187  0295  00DE               	movwf	___fladd@a
 15188  0296  3185  25F5  3180   	fcall	___fladd
 15189  0299  0020               	movlb	0	; select bank0
 15190  029A  085D               	movf	?___fladd+3,w
 15191  029B  00C3               	movwf	___fldiv@a+3
 15192  029C  085C               	movf	?___fladd+2,w
 15193  029D  00C2               	movwf	___fldiv@a+2
 15194  029E  085B               	movf	?___fladd+1,w
 15195  029F  00C1               	movwf	___fldiv@a+1
 15196  02A0  085A               	movf	?___fladd,w
 15197  02A1  00C0               	movwf	___fldiv@a
 15198  02A2  0022               	movlb	2	; select bank2
 15199  02A3  085D               	movf	(logf@f+3)^(0+256),w
 15200  02A4  0020               	movlb	0	; select bank0
 15201  02A5  00C7               	movwf	___fldiv@b+3
 15202  02A6  0022               	movlb	2	; select bank2
 15203  02A7  085C               	movf	(logf@f+2)^(0+256),w
 15204  02A8  0020               	movlb	0	; select bank0
 15205  02A9  00C6               	movwf	___fldiv@b+2
 15206  02AA  0022               	movlb	2	; select bank2
 15207  02AB  085B               	movf	(logf@f+1)^(0+256),w
 15208  02AC  0020               	movlb	0	; select bank0
 15209  02AD  00C5               	movwf	___fldiv@b+1
 15210  02AE  0022               	movlb	2	; select bank2
 15211  02AF  085A               	movf	logf@f^(0+256),w
 15212  02B0  0020               	movlb	0	; select bank0
 15213  02B1  00C4               	movwf	___fldiv@b
 15214  02B2  319C  24E2  3180   	fcall	___fldiv
 15215  02B5  0020               	movlb	0	; select bank0
 15216  02B6  0843               	movf	?___fldiv+3,w
 15217  02B7  0022               	movlb	2	; select bank2
 15218  02B8  00C9               	movwf	(logf@s+3)^(0+256)
 15219  02B9  0020               	movlb	0	; select bank0
 15220  02BA  0842               	movf	?___fldiv+2,w
 15221  02BB  0022               	movlb	2	; select bank2
 15222  02BC  00C8               	movwf	(logf@s+2)^(0+256)
 15223  02BD  0020               	movlb	0	; select bank0
 15224  02BE  0841               	movf	?___fldiv+1,w
 15225  02BF  0022               	movlb	2	; select bank2
 15226  02C0  00C7               	movwf	(logf@s+1)^(0+256)
 15227  02C1  0020               	movlb	0	; select bank0
 15228  02C2  0840               	movf	?___fldiv,w
 15229  02C3  0022               	movlb	2	; select bank2
 15230  02C4  00C6               	movwf	logf@s^(0+256)
 15231  02C5  0849               	movf	(logf@s+3)^(0+256),w
 15232  02C6  0020               	movlb	0	; select bank0
 15233  02C7  00A9               	movwf	___flmul@b+3
 15234  02C8  0022               	movlb	2	; select bank2
 15235  02C9  0848               	movf	(logf@s+2)^(0+256),w
 15236  02CA  0020               	movlb	0	; select bank0
 15237  02CB  00A8               	movwf	___flmul@b+2
 15238  02CC  0022               	movlb	2	; select bank2
 15239  02CD  0847               	movf	(logf@s+1)^(0+256),w
 15240  02CE  0020               	movlb	0	; select bank0
 15241  02CF  00A7               	movwf	___flmul@b+1
 15242  02D0  0022               	movlb	2	; select bank2
 15243  02D1  0846               	movf	logf@s^(0+256),w
 15244  02D2  0020               	movlb	0	; select bank0
 15245  02D3  00A6               	movwf	___flmul@b
 15246  02D4  0022               	movlb	2	; select bank2
 15247  02D5  0849               	movf	(logf@s+3)^(0+256),w
 15248  02D6  0020               	movlb	0	; select bank0
 15249  02D7  00AD               	movwf	___flmul@a+3
 15250  02D8  0022               	movlb	2	; select bank2
 15251  02D9  0848               	movf	(logf@s+2)^(0+256),w
 15252  02DA  0020               	movlb	0	; select bank0
 15253  02DB  00AC               	movwf	___flmul@a+2
 15254  02DC  0022               	movlb	2	; select bank2
 15255  02DD  0847               	movf	(logf@s+1)^(0+256),w
 15256  02DE  0020               	movlb	0	; select bank0
 15257  02DF  00AB               	movwf	___flmul@a+1
 15258  02E0  0022               	movlb	2	; select bank2
 15259  02E1  0846               	movf	logf@s^(0+256),w
 15260  02E2  0020               	movlb	0	; select bank0
 15261  02E3  00AA               	movwf	___flmul@a
 15262  02E4  3190  2023  3180   	fcall	___flmul
 15263  02E7  0020               	movlb	0	; select bank0
 15264  02E8  0829               	movf	?___flmul+3,w
 15265  02E9  0022               	movlb	2	; select bank2
 15266  02EA  00CD               	movwf	(logf@z+3)^(0+256)
 15267  02EB  0020               	movlb	0	; select bank0
 15268  02EC  0828               	movf	?___flmul+2,w
 15269  02ED  0022               	movlb	2	; select bank2
 15270  02EE  00CC               	movwf	(logf@z+2)^(0+256)
 15271  02EF  0020               	movlb	0	; select bank0
 15272  02F0  0827               	movf	?___flmul+1,w
 15273  02F1  0022               	movlb	2	; select bank2
 15274  02F2  00CB               	movwf	(logf@z+1)^(0+256)
 15275  02F3  0020               	movlb	0	; select bank0
 15276  02F4  0826               	movf	?___flmul,w
 15277  02F5  0022               	movlb	2	; select bank2
 15278  02F6  00CA               	movwf	logf@z^(0+256)
 15279  02F7  084D               	movf	(logf@z+3)^(0+256),w
 15280  02F8  0020               	movlb	0	; select bank0
 15281  02F9  00A9               	movwf	___flmul@b+3
 15282  02FA  0022               	movlb	2	; select bank2
 15283  02FB  084C               	movf	(logf@z+2)^(0+256),w
 15284  02FC  0020               	movlb	0	; select bank0
 15285  02FD  00A8               	movwf	___flmul@b+2
 15286  02FE  0022               	movlb	2	; select bank2
 15287  02FF  084B               	movf	(logf@z+1)^(0+256),w
 15288  0300  0020               	movlb	0	; select bank0
 15289  0301  00A7               	movwf	___flmul@b+1
 15290  0302  0022               	movlb	2	; select bank2
 15291  0303  084A               	movf	logf@z^(0+256),w
 15292  0304  0020               	movlb	0	; select bank0
 15293  0305  00A6               	movwf	___flmul@b
 15294  0306  0022               	movlb	2	; select bank2
 15295  0307  084D               	movf	(logf@z+3)^(0+256),w
 15296  0308  0020               	movlb	0	; select bank0
 15297  0309  00AD               	movwf	___flmul@a+3
 15298  030A  0022               	movlb	2	; select bank2
 15299  030B  084C               	movf	(logf@z+2)^(0+256),w
 15300  030C  0020               	movlb	0	; select bank0
 15301  030D  00AC               	movwf	___flmul@a+2
 15302  030E  0022               	movlb	2	; select bank2
 15303  030F  084B               	movf	(logf@z+1)^(0+256),w
 15304  0310  0020               	movlb	0	; select bank0
 15305  0311  00AB               	movwf	___flmul@a+1
 15306  0312  0022               	movlb	2	; select bank2
 15307  0313  084A               	movf	logf@z^(0+256),w
 15308  0314  0020               	movlb	0	; select bank0
 15309  0315  00AA               	movwf	___flmul@a
 15310  0316  3190  2023  3180   	fcall	___flmul
 15311  0319  0020               	movlb	0	; select bank0
 15312  031A  0829               	movf	?___flmul+3,w
 15313  031B  0022               	movlb	2	; select bank2
 15314  031C  00D1               	movwf	(logf@w+3)^(0+256)
 15315  031D  0020               	movlb	0	; select bank0
 15316  031E  0828               	movf	?___flmul+2,w
 15317  031F  0022               	movlb	2	; select bank2
 15318  0320  00D0               	movwf	(logf@w+2)^(0+256)
 15319  0321  0020               	movlb	0	; select bank0
 15320  0322  0827               	movf	?___flmul+1,w
 15321  0323  0022               	movlb	2	; select bank2
 15322  0324  00CF               	movwf	(logf@w+1)^(0+256)
 15323  0325  0020               	movlb	0	; select bank0
 15324  0326  0826               	movf	?___flmul,w
 15325  0327  0022               	movlb	2	; select bank2
 15326  0328  00CE               	movwf	logf@w^(0+256)
 15327  0329  303E               	movlw	62
 15328  032A  0020               	movlb	0	; select bank0
 15329  032B  00DD               	movwf	___fladd@b+3
 15330  032C  30CC               	movlw	204
 15331  032D  00DC               	movwf	___fladd@b+2
 15332  032E  30CE               	movlw	206
 15333  032F  00DB               	movwf	___fladd@b+1
 15334  0330  3013               	movlw	19
 15335  0331  00DA               	movwf	___fladd@b
 15336  0332  303E               	movlw	62
 15337  0333  00A9               	movwf	___flmul@b+3
 15338  0334  3078               	movlw	120
 15339  0335  00A8               	movwf	___flmul@b+2
 15340  0336  309E               	movlw	158
 15341  0337  00A7               	movwf	___flmul@b+1
 15342  0338  3026               	movlw	38
 15343  0339  00A6               	movwf	___flmul@b
 15344  033A  0022               	movlb	2	; select bank2
 15345  033B  0851               	movf	(logf@w+3)^(0+256),w
 15346  033C  0020               	movlb	0	; select bank0
 15347  033D  00AD               	movwf	___flmul@a+3
 15348  033E  0022               	movlb	2	; select bank2
 15349  033F  0850               	movf	(logf@w+2)^(0+256),w
 15350  0340  0020               	movlb	0	; select bank0
 15351  0341  00AC               	movwf	___flmul@a+2
 15352  0342  0022               	movlb	2	; select bank2
 15353  0343  084F               	movf	(logf@w+1)^(0+256),w
 15354  0344  0020               	movlb	0	; select bank0
 15355  0345  00AB               	movwf	___flmul@a+1
 15356  0346  0022               	movlb	2	; select bank2
 15357  0347  084E               	movf	logf@w^(0+256),w
 15358  0348  0020               	movlb	0	; select bank0
 15359  0349  00AA               	movwf	___flmul@a
 15360  034A  3190  2023  3180   	fcall	___flmul
 15361  034D  0020               	movlb	0	; select bank0
 15362  034E  0829               	movf	?___flmul+3,w
 15363  034F  00E1               	movwf	___fladd@a+3
 15364  0350  0828               	movf	?___flmul+2,w
 15365  0351  00E0               	movwf	___fladd@a+2
 15366  0352  0827               	movf	?___flmul+1,w
 15367  0353  00DF               	movwf	___fladd@a+1
 15368  0354  0826               	movf	?___flmul,w
 15369  0355  00DE               	movwf	___fladd@a
 15370  0356  3185  25F5  3180   	fcall	___fladd
 15371  0359  0020               	movlb	0	; select bank0
 15372  035A  085D               	movf	?___fladd+3,w
 15373  035B  0022               	movlb	2	; select bank2
 15374  035C  00D5               	movwf	(_logf$2045+3)^(0+256)
 15375  035D  0020               	movlb	0	; select bank0
 15376  035E  085C               	movf	?___fladd+2,w
 15377  035F  0022               	movlb	2	; select bank2
 15378  0360  00D4               	movwf	(_logf$2045+2)^(0+256)
 15379  0361  0020               	movlb	0	; select bank0
 15380  0362  085B               	movf	?___fladd+1,w
 15381  0363  0022               	movlb	2	; select bank2
 15382  0364  00D3               	movwf	(_logf$2045+1)^(0+256)
 15383  0365  0020               	movlb	0	; select bank0
 15384  0366  085A               	movf	?___fladd,w
 15385  0367  0022               	movlb	2	; select bank2
 15386  0368  00D2               	movwf	_logf$2045^(0+256)
 15387  0369  0851               	movf	(logf@w+3)^(0+256),w
 15388  036A  0020               	movlb	0	; select bank0
 15389  036B  00A9               	movwf	___flmul@b+3
 15390  036C  0022               	movlb	2	; select bank2
 15391  036D  0850               	movf	(logf@w+2)^(0+256),w
 15392  036E  0020               	movlb	0	; select bank0
 15393  036F  00A8               	movwf	___flmul@b+2
 15394  0370  0022               	movlb	2	; select bank2
 15395  0371  084F               	movf	(logf@w+1)^(0+256),w
 15396  0372  0020               	movlb	0	; select bank0
 15397  0373  00A7               	movwf	___flmul@b+1
 15398  0374  0022               	movlb	2	; select bank2
 15399  0375  084E               	movf	logf@w^(0+256),w
 15400  0376  0020               	movlb	0	; select bank0
 15401  0377  00A6               	movwf	___flmul@b
 15402  0378  0022               	movlb	2	; select bank2
 15403  0379  0855               	movf	(_logf$2045+3)^(0+256),w
 15404  037A  0020               	movlb	0	; select bank0
 15405  037B  00AD               	movwf	___flmul@a+3
 15406  037C  0022               	movlb	2	; select bank2
 15407  037D  0854               	movf	(_logf$2045+2)^(0+256),w
 15408  037E  0020               	movlb	0	; select bank0
 15409  037F  00AC               	movwf	___flmul@a+2
 15410  0380  0022               	movlb	2	; select bank2
 15411  0381  0853               	movf	(_logf$2045+1)^(0+256),w
 15412  0382  0020               	movlb	0	; select bank0
 15413  0383  00AB               	movwf	___flmul@a+1
 15414  0384  0022               	movlb	2	; select bank2
 15415  0385  0852               	movf	_logf$2045^(0+256),w
 15416  0386  0020               	movlb	0	; select bank0
 15417  0387  00AA               	movwf	___flmul@a
 15418  0388  3190  2023  3180   	fcall	___flmul
 15419  038B  0020               	movlb	0	; select bank0
 15420  038C  0829               	movf	?___flmul+3,w
 15421  038D  0022               	movlb	2	; select bank2
 15422  038E  00A7               	movwf	(logf@t1+3)^(0+256)
 15423  038F  0020               	movlb	0	; select bank0
 15424  0390  0828               	movf	?___flmul+2,w
 15425  0391  0022               	movlb	2	; select bank2
 15426  0392  00A6               	movwf	(logf@t1+2)^(0+256)
 15427  0393  0020               	movlb	0	; select bank0
 15428  0394  0827               	movf	?___flmul+1,w
 15429  0395  0022               	movlb	2	; select bank2
 15430  0396  00A5               	movwf	(logf@t1+1)^(0+256)
 15431  0397  0020               	movlb	0	; select bank0
 15432  0398  0826               	movf	?___flmul,w
 15433  0399  0022               	movlb	2	; select bank2
 15434  039A  00A4               	movwf	logf@t1^(0+256)
 15435  039B  303F               	movlw	63
 15436  039C  0020               	movlb	0	; select bank0
 15437  039D  00DD               	movwf	___fladd@b+3
 15438  039E  302A               	movlw	42
 15439  039F  00DC               	movwf	___fladd@b+2
 15440  03A0  30AA               	movlw	170
 15441  03A1  00DB               	movwf	___fladd@b+1
 15442  03A2  30AA               	movlw	170
 15443  03A3  00DA               	movwf	___fladd@b
 15444  03A4  303E               	movlw	62
 15445  03A5  00A9               	movwf	___flmul@b+3
 15446  03A6  3091               	movlw	145
 15447  03A7  00A8               	movwf	___flmul@b+2
 15448  03A8  30E9               	movlw	233
 15449  03A9  00A7               	movwf	___flmul@b+1
 15450  03AA  30EE               	movlw	238
 15451  03AB  00A6               	movwf	___flmul@b
 15452  03AC  0022               	movlb	2	; select bank2
 15453  03AD  0851               	movf	(logf@w+3)^(0+256),w
 15454  03AE  0020               	movlb	0	; select bank0
 15455  03AF  00AD               	movwf	___flmul@a+3
 15456  03B0  0022               	movlb	2	; select bank2
 15457  03B1  0850               	movf	(logf@w+2)^(0+256),w
 15458  03B2  0020               	movlb	0	; select bank0
 15459  03B3  00AC               	movwf	___flmul@a+2
 15460  03B4  0022               	movlb	2	; select bank2
 15461  03B5  084F               	movf	(logf@w+1)^(0+256),w
 15462  03B6  0020               	movlb	0	; select bank0
 15463  03B7  00AB               	movwf	___flmul@a+1
 15464  03B8  0022               	movlb	2	; select bank2
 15465  03B9  084E               	movf	logf@w^(0+256),w
 15466  03BA  0020               	movlb	0	; select bank0
 15467  03BB  00AA               	movwf	___flmul@a
 15468  03BC  3190  2023  3180   	fcall	___flmul
 15469  03BF  0020               	movlb	0	; select bank0
 15470  03C0  0829               	movf	?___flmul+3,w
 15471  03C1  00E1               	movwf	___fladd@a+3
 15472  03C2  0828               	movf	?___flmul+2,w
 15473  03C3  00E0               	movwf	___fladd@a+2
 15474  03C4  0827               	movf	?___flmul+1,w
 15475  03C5  00DF               	movwf	___fladd@a+1
 15476  03C6  0826               	movf	?___flmul,w
 15477  03C7  00DE               	movwf	___fladd@a
 15478  03C8  3185  25F5  3180   	fcall	___fladd
 15479  03CB  0020               	movlb	0	; select bank0
 15480  03CC  085D               	movf	?___fladd+3,w
 15481  03CD  0022               	movlb	2	; select bank2
 15482  03CE  00D5               	movwf	(_logf$2045+3)^(0+256)
 15483  03CF  0020               	movlb	0	; select bank0
 15484  03D0  085C               	movf	?___fladd+2,w
 15485  03D1  0022               	movlb	2	; select bank2
 15486  03D2  00D4               	movwf	(_logf$2045+2)^(0+256)
 15487  03D3  0020               	movlb	0	; select bank0
 15488  03D4  085B               	movf	?___fladd+1,w
 15489  03D5  0022               	movlb	2	; select bank2
 15490  03D6  00D3               	movwf	(_logf$2045+1)^(0+256)
 15491  03D7  0020               	movlb	0	; select bank0
 15492  03D8  085A               	movf	?___fladd,w
 15493  03D9  0022               	movlb	2	; select bank2
 15494  03DA  00D2               	movwf	_logf$2045^(0+256)
 15495  03DB  084D               	movf	(logf@z+3)^(0+256),w
 15496  03DC  0020               	movlb	0	; select bank0
 15497  03DD  00A9               	movwf	___flmul@b+3
 15498  03DE  0022               	movlb	2	; select bank2
 15499  03DF  084C               	movf	(logf@z+2)^(0+256),w
 15500  03E0  0020               	movlb	0	; select bank0
 15501  03E1  00A8               	movwf	___flmul@b+2
 15502  03E2  0022               	movlb	2	; select bank2
 15503  03E3  084B               	movf	(logf@z+1)^(0+256),w
 15504  03E4  0020               	movlb	0	; select bank0
 15505  03E5  00A7               	movwf	___flmul@b+1
 15506  03E6  0022               	movlb	2	; select bank2
 15507  03E7  084A               	movf	logf@z^(0+256),w
 15508  03E8  0020               	movlb	0	; select bank0
 15509  03E9  00A6               	movwf	___flmul@b
 15510  03EA  0022               	movlb	2	; select bank2
 15511  03EB  0855               	movf	(_logf$2045+3)^(0+256),w
 15512  03EC  0020               	movlb	0	; select bank0
 15513  03ED  00AD               	movwf	___flmul@a+3
 15514  03EE  0022               	movlb	2	; select bank2
 15515  03EF  0854               	movf	(_logf$2045+2)^(0+256),w
 15516  03F0  0020               	movlb	0	; select bank0
 15517  03F1  00AC               	movwf	___flmul@a+2
 15518  03F2  0022               	movlb	2	; select bank2
 15519  03F3  0853               	movf	(_logf$2045+1)^(0+256),w
 15520  03F4  0020               	movlb	0	; select bank0
 15521  03F5  00AB               	movwf	___flmul@a+1
 15522  03F6  0022               	movlb	2	; select bank2
 15523  03F7  0852               	movf	_logf$2045^(0+256),w
 15524  03F8  0020               	movlb	0	; select bank0
 15525  03F9  00AA               	movwf	___flmul@a
 15526  03FA  3190  2023  3180   	fcall	___flmul
 15527  03FD  0020               	movlb	0	; select bank0
 15528  03FE  0829               	movf	?___flmul+3,w
 15529  03FF  0022               	movlb	2	; select bank2
 15530  0400  00AB               	movwf	(logf@t2+3)^(0+256)
 15531  0401  0020               	movlb	0	; select bank0
 15532  0402  0828               	movf	?___flmul+2,w
 15533  0403  0022               	movlb	2	; select bank2
 15534  0404  00AA               	movwf	(logf@t2+2)^(0+256)
 15535  0405  0020               	movlb	0	; select bank0
 15536  0406  0827               	movf	?___flmul+1,w
 15537  0407  0022               	movlb	2	; select bank2
 15538  0408  00A9               	movwf	(logf@t2+1)^(0+256)
 15539  0409  0020               	movlb	0	; select bank0
 15540  040A  0826               	movf	?___flmul,w
 15541  040B  0022               	movlb	2	; select bank2
 15542  040C  00A8               	movwf	logf@t2^(0+256)
 15543  040D  0827               	movf	(logf@t1+3)^(0+256),w
 15544  040E  0020               	movlb	0	; select bank0
 15545  040F  00DD               	movwf	___fladd@b+3
 15546  0410  0022               	movlb	2	; select bank2
 15547  0411  0826               	movf	(logf@t1+2)^(0+256),w
 15548  0412  0020               	movlb	0	; select bank0
 15549  0413  00DC               	movwf	___fladd@b+2
 15550  0414  0022               	movlb	2	; select bank2
 15551  0415  0825               	movf	(logf@t1+1)^(0+256),w
 15552  0416  0020               	movlb	0	; select bank0
 15553  0417  00DB               	movwf	___fladd@b+1
 15554  0418  0022               	movlb	2	; select bank2
 15555  0419  0824               	movf	logf@t1^(0+256),w
 15556  041A  0020               	movlb	0	; select bank0
 15557  041B  00DA               	movwf	___fladd@b
 15558  041C  0022               	movlb	2	; select bank2
 15559  041D  082B               	movf	(logf@t2+3)^(0+256),w
 15560  041E  0020               	movlb	0	; select bank0
 15561  041F  00E1               	movwf	___fladd@a+3
 15562  0420  0022               	movlb	2	; select bank2
 15563  0421  082A               	movf	(logf@t2+2)^(0+256),w
 15564  0422  0020               	movlb	0	; select bank0
 15565  0423  00E0               	movwf	___fladd@a+2
 15566  0424  0022               	movlb	2	; select bank2
 15567  0425  0829               	movf	(logf@t2+1)^(0+256),w
 15568  0426  0020               	movlb	0	; select bank0
 15569  0427  00DF               	movwf	___fladd@a+1
 15570  0428  0022               	movlb	2	; select bank2
 15571  0429  0828               	movf	logf@t2^(0+256),w
 15572  042A  0020               	movlb	0	; select bank0
 15573  042B  00DE               	movwf	___fladd@a
 15574  042C  3185  25F5  3180   	fcall	___fladd
 15575  042F  0020               	movlb	0	; select bank0
 15576  0430  085D               	movf	?___fladd+3,w
 15577  0431  0022               	movlb	2	; select bank2
 15578  0432  00A3               	movwf	(logf@R+3)^(0+256)
 15579  0433  0020               	movlb	0	; select bank0
 15580  0434  085C               	movf	?___fladd+2,w
 15581  0435  0022               	movlb	2	; select bank2
 15582  0436  00A2               	movwf	(logf@R+2)^(0+256)
 15583  0437  0020               	movlb	0	; select bank0
 15584  0438  085B               	movf	?___fladd+1,w
 15585  0439  0022               	movlb	2	; select bank2
 15586  043A  00A1               	movwf	(logf@R+1)^(0+256)
 15587  043B  0020               	movlb	0	; select bank0
 15588  043C  085A               	movf	?___fladd,w
 15589  043D  0022               	movlb	2	; select bank2
 15590  043E  00A0               	movwf	logf@R^(0+256)
 15591  043F  303F               	movlw	63
 15592  0440  0020               	movlb	0	; select bank0
 15593  0441  00A9               	movwf	___flmul@b+3
 15594  0442  3000               	movlw	0
 15595  0443  00A8               	movwf	___flmul@b+2
 15596  0444  3000               	movlw	0
 15597  0445  00A7               	movwf	___flmul@b+1
 15598  0446  3000               	movlw	0
 15599  0447  00A6               	movwf	___flmul@b
 15600  0448  0022               	movlb	2	; select bank2
 15601  0449  085D               	movf	(logf@f+3)^(0+256),w
 15602  044A  0020               	movlb	0	; select bank0
 15603  044B  00AD               	movwf	___flmul@a+3
 15604  044C  0022               	movlb	2	; select bank2
 15605  044D  085C               	movf	(logf@f+2)^(0+256),w
 15606  044E  0020               	movlb	0	; select bank0
 15607  044F  00AC               	movwf	___flmul@a+2
 15608  0450  0022               	movlb	2	; select bank2
 15609  0451  085B               	movf	(logf@f+1)^(0+256),w
 15610  0452  0020               	movlb	0	; select bank0
 15611  0453  00AB               	movwf	___flmul@a+1
 15612  0454  0022               	movlb	2	; select bank2
 15613  0455  085A               	movf	logf@f^(0+256),w
 15614  0456  0020               	movlb	0	; select bank0
 15615  0457  00AA               	movwf	___flmul@a
 15616  0458  3190  2023  3180   	fcall	___flmul
 15617  045B  0020               	movlb	0	; select bank0
 15618  045C  0829               	movf	?___flmul+3,w
 15619  045D  0022               	movlb	2	; select bank2
 15620  045E  00D5               	movwf	(_logf$2045+3)^(0+256)
 15621  045F  0020               	movlb	0	; select bank0
 15622  0460  0828               	movf	?___flmul+2,w
 15623  0461  0022               	movlb	2	; select bank2
 15624  0462  00D4               	movwf	(_logf$2045+2)^(0+256)
 15625  0463  0020               	movlb	0	; select bank0
 15626  0464  0827               	movf	?___flmul+1,w
 15627  0465  0022               	movlb	2	; select bank2
 15628  0466  00D3               	movwf	(_logf$2045+1)^(0+256)
 15629  0467  0020               	movlb	0	; select bank0
 15630  0468  0826               	movf	?___flmul,w
 15631  0469  0022               	movlb	2	; select bank2
 15632  046A  00D2               	movwf	_logf$2045^(0+256)
 15633  046B  085D               	movf	(logf@f+3)^(0+256),w
 15634  046C  0020               	movlb	0	; select bank0
 15635  046D  00A9               	movwf	___flmul@b+3
 15636  046E  0022               	movlb	2	; select bank2
 15637  046F  085C               	movf	(logf@f+2)^(0+256),w
 15638  0470  0020               	movlb	0	; select bank0
 15639  0471  00A8               	movwf	___flmul@b+2
 15640  0472  0022               	movlb	2	; select bank2
 15641  0473  085B               	movf	(logf@f+1)^(0+256),w
 15642  0474  0020               	movlb	0	; select bank0
 15643  0475  00A7               	movwf	___flmul@b+1
 15644  0476  0022               	movlb	2	; select bank2
 15645  0477  085A               	movf	logf@f^(0+256),w
 15646  0478  0020               	movlb	0	; select bank0
 15647  0479  00A6               	movwf	___flmul@b
 15648  047A  0022               	movlb	2	; select bank2
 15649  047B  0855               	movf	(_logf$2045+3)^(0+256),w
 15650  047C  0020               	movlb	0	; select bank0
 15651  047D  00AD               	movwf	___flmul@a+3
 15652  047E  0022               	movlb	2	; select bank2
 15653  047F  0854               	movf	(_logf$2045+2)^(0+256),w
 15654  0480  0020               	movlb	0	; select bank0
 15655  0481  00AC               	movwf	___flmul@a+2
 15656  0482  0022               	movlb	2	; select bank2
 15657  0483  0853               	movf	(_logf$2045+1)^(0+256),w
 15658  0484  0020               	movlb	0	; select bank0
 15659  0485  00AB               	movwf	___flmul@a+1
 15660  0486  0022               	movlb	2	; select bank2
 15661  0487  0852               	movf	_logf$2045^(0+256),w
 15662  0488  0020               	movlb	0	; select bank0
 15663  0489  00AA               	movwf	___flmul@a
 15664  048A  3190  2023  3180   	fcall	___flmul
 15665  048D  0020               	movlb	0	; select bank0
 15666  048E  0829               	movf	?___flmul+3,w
 15667  048F  0022               	movlb	2	; select bank2
 15668  0490  00C1               	movwf	(logf@hfsq+3)^(0+256)
 15669  0491  0020               	movlb	0	; select bank0
 15670  0492  0828               	movf	?___flmul+2,w
 15671  0493  0022               	movlb	2	; select bank2
 15672  0494  00C0               	movwf	(logf@hfsq+2)^(0+256)
 15673  0495  0020               	movlb	0	; select bank0
 15674  0496  0827               	movf	?___flmul+1,w
 15675  0497  0022               	movlb	2	; select bank2
 15676  0498  00BF               	movwf	(logf@hfsq+1)^(0+256)
 15677  0499  0020               	movlb	0	; select bank0
 15678  049A  0826               	movf	?___flmul,w
 15679  049B  0022               	movlb	2	; select bank2
 15680  049C  00BE               	movwf	logf@hfsq^(0+256)
 15681  049D  083C               	movf	logf@k^(0+256),w
 15682  049E  00F1               	movwf	___xxtofl@val
 15683  049F  083D               	movf	(logf@k+1)^(0+256),w
 15684  04A0  00F2               	movwf	___xxtofl@val+1
 15685  04A1  0D89               	rlf	9,f
 15686  04A2  3B89               	subwfb	9,f
 15687  04A3  0989               	comf	9,f
 15688  04A4  00F3               	movwf	___xxtofl@val+2
 15689  04A5  00F4               	movwf	___xxtofl@val+3
 15690  04A6  3001               	movlw	1
 15691  04A7  31AD  256C  3180   	fcall	___xxtofl
 15692  04AA  0874               	movf	?___xxtofl+3,w
 15693  04AB  0022               	movlb	2	; select bank2
 15694  04AC  00C5               	movwf	(logf@dk+3)^(0+256)
 15695  04AD  0873               	movf	?___xxtofl+2,w
 15696  04AE  00C4               	movwf	(logf@dk+2)^(0+256)
 15697  04AF  0872               	movf	?___xxtofl+1,w
 15698  04B0  00C3               	movwf	(logf@dk+1)^(0+256)
 15699  04B1  0871               	movf	?___xxtofl,w
 15700  04B2  00C2               	movwf	logf@dk^(0+256)
 15701  04B3  0849               	movf	(logf@s+3)^(0+256),w
 15702  04B4  0020               	movlb	0	; select bank0
 15703  04B5  00A9               	movwf	___flmul@b+3
 15704  04B6  0022               	movlb	2	; select bank2
 15705  04B7  0848               	movf	(logf@s+2)^(0+256),w
 15706  04B8  0020               	movlb	0	; select bank0
 15707  04B9  00A8               	movwf	___flmul@b+2
 15708  04BA  0022               	movlb	2	; select bank2
 15709  04BB  0847               	movf	(logf@s+1)^(0+256),w
 15710  04BC  0020               	movlb	0	; select bank0
 15711  04BD  00A7               	movwf	___flmul@b+1
 15712  04BE  0022               	movlb	2	; select bank2
 15713  04BF  0846               	movf	logf@s^(0+256),w
 15714  04C0  0020               	movlb	0	; select bank0
 15715  04C1  00A6               	movwf	___flmul@b
 15716  04C2  0022               	movlb	2	; select bank2
 15717  04C3  0823               	movf	(logf@R+3)^(0+256),w
 15718  04C4  0020               	movlb	0	; select bank0
 15719  04C5  00DD               	movwf	___fladd@b+3
 15720  04C6  0022               	movlb	2	; select bank2
 15721  04C7  0822               	movf	(logf@R+2)^(0+256),w
 15722  04C8  0020               	movlb	0	; select bank0
 15723  04C9  00DC               	movwf	___fladd@b+2
 15724  04CA  0022               	movlb	2	; select bank2
 15725  04CB  0821               	movf	(logf@R+1)^(0+256),w
 15726  04CC  0020               	movlb	0	; select bank0
 15727  04CD  00DB               	movwf	___fladd@b+1
 15728  04CE  0022               	movlb	2	; select bank2
 15729  04CF  0820               	movf	logf@R^(0+256),w
 15730  04D0  0020               	movlb	0	; select bank0
 15731  04D1  00DA               	movwf	___fladd@b
 15732  04D2  0022               	movlb	2	; select bank2
 15733  04D3  0841               	movf	(logf@hfsq+3)^(0+256),w
 15734  04D4  0020               	movlb	0	; select bank0
 15735  04D5  00E1               	movwf	___fladd@a+3
 15736  04D6  0022               	movlb	2	; select bank2
 15737  04D7  0840               	movf	(logf@hfsq+2)^(0+256),w
 15738  04D8  0020               	movlb	0	; select bank0
 15739  04D9  00E0               	movwf	___fladd@a+2
 15740  04DA  0022               	movlb	2	; select bank2
 15741  04DB  083F               	movf	(logf@hfsq+1)^(0+256),w
 15742  04DC  0020               	movlb	0	; select bank0
 15743  04DD  00DF               	movwf	___fladd@a+1
 15744  04DE  0022               	movlb	2	; select bank2
 15745  04DF  083E               	movf	logf@hfsq^(0+256),w
 15746  04E0  0020               	movlb	0	; select bank0
 15747  04E1  00DE               	movwf	___fladd@a
 15748  04E2  3185  25F5  3180   	fcall	___fladd
 15749  04E5  0020               	movlb	0	; select bank0
 15750  04E6  085D               	movf	?___fladd+3,w
 15751  04E7  00AD               	movwf	___flmul@a+3
 15752  04E8  085C               	movf	?___fladd+2,w
 15753  04E9  00AC               	movwf	___flmul@a+2
 15754  04EA  085B               	movf	?___fladd+1,w
 15755  04EB  00AB               	movwf	___flmul@a+1
 15756  04EC  085A               	movf	?___fladd,w
 15757  04ED  00AA               	movwf	___flmul@a
 15758  04EE  3190  2023  3180   	fcall	___flmul
 15759  04F1  0020               	movlb	0	; select bank0
 15760  04F2  0829               	movf	?___flmul+3,w
 15761  04F3  0022               	movlb	2	; select bank2
 15762  04F4  00AF               	movwf	(_logf$2046+3)^(0+256)
 15763  04F5  0020               	movlb	0	; select bank0
 15764  04F6  0828               	movf	?___flmul+2,w
 15765  04F7  0022               	movlb	2	; select bank2
 15766  04F8  00AE               	movwf	(_logf$2046+2)^(0+256)
 15767  04F9  0020               	movlb	0	; select bank0
 15768  04FA  0827               	movf	?___flmul+1,w
 15769  04FB  0022               	movlb	2	; select bank2
 15770  04FC  00AD               	movwf	(_logf$2046+1)^(0+256)
 15771  04FD  0020               	movlb	0	; select bank0
 15772  04FE  0826               	movf	?___flmul,w
 15773  04FF  0022               	movlb	2	; select bank2
 15774  0500  00AC               	movwf	_logf$2046^(0+256)
 15775  0501  3037               	movlw	55
 15776  0502  0020               	movlb	0	; select bank0
 15777  0503  00A9               	movwf	___flmul@b+3
 15778  0504  3017               	movlw	23
 15779  0505  00A8               	movwf	___flmul@b+2
 15780  0506  30F7               	movlw	247
 15781  0507  00A7               	movwf	___flmul@b+1
 15782  0508  30D1               	movlw	209
 15783  0509  00A6               	movwf	___flmul@b
 15784  050A  0022               	movlb	2	; select bank2
 15785  050B  0845               	movf	(logf@dk+3)^(0+256),w
 15786  050C  0020               	movlb	0	; select bank0
 15787  050D  00AD               	movwf	___flmul@a+3
 15788  050E  0022               	movlb	2	; select bank2
 15789  050F  0844               	movf	(logf@dk+2)^(0+256),w
 15790  0510  0020               	movlb	0	; select bank0
 15791  0511  00AC               	movwf	___flmul@a+2
 15792  0512  0022               	movlb	2	; select bank2
 15793  0513  0843               	movf	(logf@dk+1)^(0+256),w
 15794  0514  0020               	movlb	0	; select bank0
 15795  0515  00AB               	movwf	___flmul@a+1
 15796  0516  0022               	movlb	2	; select bank2
 15797  0517  0842               	movf	logf@dk^(0+256),w
 15798  0518  0020               	movlb	0	; select bank0
 15799  0519  00AA               	movwf	___flmul@a
 15800  051A  3190  2023  3180   	fcall	___flmul
 15801  051D  0020               	movlb	0	; select bank0
 15802  051E  0829               	movf	?___flmul+3,w
 15803  051F  00DD               	movwf	___fladd@b+3
 15804  0520  0828               	movf	?___flmul+2,w
 15805  0521  00DC               	movwf	___fladd@b+2
 15806  0522  0827               	movf	?___flmul+1,w
 15807  0523  00DB               	movwf	___fladd@b+1
 15808  0524  0826               	movf	?___flmul,w
 15809  0525  00DA               	movwf	___fladd@b
 15810  0526  0022               	movlb	2	; select bank2
 15811  0527  082F               	movf	(_logf$2046+3)^(0+256),w
 15812  0528  0020               	movlb	0	; select bank0
 15813  0529  00E1               	movwf	___fladd@a+3
 15814  052A  0022               	movlb	2	; select bank2
 15815  052B  082E               	movf	(_logf$2046+2)^(0+256),w
 15816  052C  0020               	movlb	0	; select bank0
 15817  052D  00E0               	movwf	___fladd@a+2
 15818  052E  0022               	movlb	2	; select bank2
 15819  052F  082D               	movf	(_logf$2046+1)^(0+256),w
 15820  0530  0020               	movlb	0	; select bank0
 15821  0531  00DF               	movwf	___fladd@a+1
 15822  0532  0022               	movlb	2	; select bank2
 15823  0533  082C               	movf	_logf$2046^(0+256),w
 15824  0534  0020               	movlb	0	; select bank0
 15825  0535  00DE               	movwf	___fladd@a
 15826  0536  3185  25F5  3180   	fcall	___fladd
 15827  0539  0020               	movlb	0	; select bank0
 15828  053A  085D               	movf	?___fladd+3,w
 15829  053B  0022               	movlb	2	; select bank2
 15830  053C  00B3               	movwf	(_logf$2047+3)^(0+256)
 15831  053D  0020               	movlb	0	; select bank0
 15832  053E  085C               	movf	?___fladd+2,w
 15833  053F  0022               	movlb	2	; select bank2
 15834  0540  00B2               	movwf	(_logf$2047+2)^(0+256)
 15835  0541  0020               	movlb	0	; select bank0
 15836  0542  085B               	movf	?___fladd+1,w
 15837  0543  0022               	movlb	2	; select bank2
 15838  0544  00B1               	movwf	(_logf$2047+1)^(0+256)
 15839  0545  0020               	movlb	0	; select bank0
 15840  0546  085A               	movf	?___fladd,w
 15841  0547  0022               	movlb	2	; select bank2
 15842  0548  00B0               	movwf	_logf$2047^(0+256)
 15843  0549  0841               	movf	(logf@hfsq+3)^(0+256),w
 15844  054A  0021               	movlb	1	; select bank1
 15845  054B  00A3               	movwf	(___flsub@a+3)^(0+128)
 15846  054C  0022               	movlb	2	; select bank2
 15847  054D  0840               	movf	(logf@hfsq+2)^(0+256),w
 15848  054E  0021               	movlb	1	; select bank1
 15849  054F  00A2               	movwf	(___flsub@a+2)^(0+128)
 15850  0550  0022               	movlb	2	; select bank2
 15851  0551  083F               	movf	(logf@hfsq+1)^(0+256),w
 15852  0552  0021               	movlb	1	; select bank1
 15853  0553  00A1               	movwf	(___flsub@a+1)^(0+128)
 15854  0554  0022               	movlb	2	; select bank2
 15855  0555  083E               	movf	logf@hfsq^(0+256),w
 15856  0556  0021               	movlb	1	; select bank1
 15857  0557  00A0               	movwf	___flsub@a^(0+128)
 15858  0558  0022               	movlb	2	; select bank2
 15859  0559  0833               	movf	(_logf$2047+3)^(0+256),w
 15860  055A  0021               	movlb	1	; select bank1
 15861  055B  00A7               	movwf	(___flsub@b+3)^(0+128)
 15862  055C  0022               	movlb	2	; select bank2
 15863  055D  0832               	movf	(_logf$2047+2)^(0+256),w
 15864  055E  0021               	movlb	1	; select bank1
 15865  055F  00A6               	movwf	(___flsub@b+2)^(0+128)
 15866  0560  0022               	movlb	2	; select bank2
 15867  0561  0831               	movf	(_logf$2047+1)^(0+256),w
 15868  0562  0021               	movlb	1	; select bank1
 15869  0563  00A5               	movwf	(___flsub@b+1)^(0+128)
 15870  0564  0022               	movlb	2	; select bank2
 15871  0565  0830               	movf	_logf$2047^(0+256),w
 15872  0566  0021               	movlb	1	; select bank1
 15873  0567  00A4               	movwf	___flsub@b^(0+128)
 15874  0568  31B7  2795  3180   	fcall	___flsub
 15875  056B  0021               	movlb	1	; select bank1
 15876  056C  0823               	movf	(?___flsub+3)^(0+128),w
 15877  056D  0022               	movlb	2	; select bank2
 15878  056E  00B7               	movwf	(_logf$2048+3)^(0+256)
 15879  056F  0021               	movlb	1	; select bank1
 15880  0570  0822               	movf	(?___flsub+2)^(0+128),w
 15881  0571  0022               	movlb	2	; select bank2
 15882  0572  00B6               	movwf	(_logf$2048+2)^(0+256)
 15883  0573  0021               	movlb	1	; select bank1
 15884  0574  0821               	movf	(?___flsub+1)^(0+128),w
 15885  0575  0022               	movlb	2	; select bank2
 15886  0576  00B5               	movwf	(_logf$2048+1)^(0+256)
 15887  0577  0021               	movlb	1	; select bank1
 15888  0578  0820               	movf	?___flsub^(0+128),w
 15889  0579  0022               	movlb	2	; select bank2
 15890  057A  00B4               	movwf	_logf$2048^(0+256)
 15891  057B  085D               	movf	(logf@f+3)^(0+256),w
 15892  057C  0020               	movlb	0	; select bank0
 15893  057D  00DD               	movwf	___fladd@b+3
 15894  057E  0022               	movlb	2	; select bank2
 15895  057F  085C               	movf	(logf@f+2)^(0+256),w
 15896  0580  0020               	movlb	0	; select bank0
 15897  0581  00DC               	movwf	___fladd@b+2
 15898  0582  0022               	movlb	2	; select bank2
 15899  0583  085B               	movf	(logf@f+1)^(0+256),w
 15900  0584  0020               	movlb	0	; select bank0
 15901  0585  00DB               	movwf	___fladd@b+1
 15902  0586  0022               	movlb	2	; select bank2
 15903  0587  085A               	movf	logf@f^(0+256),w
 15904  0588  0020               	movlb	0	; select bank0
 15905  0589  00DA               	movwf	___fladd@b
 15906  058A  0022               	movlb	2	; select bank2
 15907  058B  0837               	movf	(_logf$2048+3)^(0+256),w
 15908  058C  0020               	movlb	0	; select bank0
 15909  058D  00E1               	movwf	___fladd@a+3
 15910  058E  0022               	movlb	2	; select bank2
 15911  058F  0836               	movf	(_logf$2048+2)^(0+256),w
 15912  0590  0020               	movlb	0	; select bank0
 15913  0591  00E0               	movwf	___fladd@a+2
 15914  0592  0022               	movlb	2	; select bank2
 15915  0593  0835               	movf	(_logf$2048+1)^(0+256),w
 15916  0594  0020               	movlb	0	; select bank0
 15917  0595  00DF               	movwf	___fladd@a+1
 15918  0596  0022               	movlb	2	; select bank2
 15919  0597  0834               	movf	_logf$2048^(0+256),w
 15920  0598  0020               	movlb	0	; select bank0
 15921  0599  00DE               	movwf	___fladd@a
 15922  059A  3185  25F5  3180   	fcall	___fladd
 15923  059D  0020               	movlb	0	; select bank0
 15924  059E  085D               	movf	?___fladd+3,w
 15925  059F  0022               	movlb	2	; select bank2
 15926  05A0  00BB               	movwf	(_logf$2049+3)^(0+256)
 15927  05A1  0020               	movlb	0	; select bank0
 15928  05A2  085C               	movf	?___fladd+2,w
 15929  05A3  0022               	movlb	2	; select bank2
 15930  05A4  00BA               	movwf	(_logf$2049+2)^(0+256)
 15931  05A5  0020               	movlb	0	; select bank0
 15932  05A6  085B               	movf	?___fladd+1,w
 15933  05A7  0022               	movlb	2	; select bank2
 15934  05A8  00B9               	movwf	(_logf$2049+1)^(0+256)
 15935  05A9  0020               	movlb	0	; select bank0
 15936  05AA  085A               	movf	?___fladd,w
 15937  05AB  0022               	movlb	2	; select bank2
 15938  05AC  00B8               	movwf	_logf$2049^(0+256)
 15939  05AD  303F               	movlw	63
 15940  05AE  0020               	movlb	0	; select bank0
 15941  05AF  00A9               	movwf	___flmul@b+3
 15942  05B0  3031               	movlw	49
 15943  05B1  00A8               	movwf	___flmul@b+2
 15944  05B2  3071               	movlw	113
 15945  05B3  00A7               	movwf	___flmul@b+1
 15946  05B4  3080               	movlw	128
 15947  05B5  00A6               	movwf	___flmul@b
 15948  05B6  0022               	movlb	2	; select bank2
 15949  05B7  0845               	movf	(logf@dk+3)^(0+256),w
 15950  05B8  0020               	movlb	0	; select bank0
 15951  05B9  00AD               	movwf	___flmul@a+3
 15952  05BA  0022               	movlb	2	; select bank2
 15953  05BB  0844               	movf	(logf@dk+2)^(0+256),w
 15954  05BC  0020               	movlb	0	; select bank0
 15955  05BD  00AC               	movwf	___flmul@a+2
 15956  05BE  0022               	movlb	2	; select bank2
 15957  05BF  0843               	movf	(logf@dk+1)^(0+256),w
 15958  05C0  0020               	movlb	0	; select bank0
 15959  05C1  00AB               	movwf	___flmul@a+1
 15960  05C2  0022               	movlb	2	; select bank2
 15961  05C3  0842               	movf	logf@dk^(0+256),w
 15962  05C4  0020               	movlb	0	; select bank0
 15963  05C5  00AA               	movwf	___flmul@a
 15964  05C6  3190  2023  3180   	fcall	___flmul
 15965  05C9  0020               	movlb	0	; select bank0
 15966  05CA  0829               	movf	?___flmul+3,w
 15967  05CB  00DD               	movwf	___fladd@b+3
 15968  05CC  0828               	movf	?___flmul+2,w
 15969  05CD  00DC               	movwf	___fladd@b+2
 15970  05CE  0827               	movf	?___flmul+1,w
 15971  05CF  00DB               	movwf	___fladd@b+1
 15972  05D0  0826               	movf	?___flmul,w
 15973  05D1  00DA               	movwf	___fladd@b
 15974  05D2  0022               	movlb	2	; select bank2
 15975  05D3  083B               	movf	(_logf$2049+3)^(0+256),w
 15976  05D4  0020               	movlb	0	; select bank0
 15977  05D5  00E1               	movwf	___fladd@a+3
 15978  05D6  0022               	movlb	2	; select bank2
 15979  05D7  083A               	movf	(_logf$2049+2)^(0+256),w
 15980  05D8  0020               	movlb	0	; select bank0
 15981  05D9  00E0               	movwf	___fladd@a+2
 15982  05DA  0022               	movlb	2	; select bank2
 15983  05DB  0839               	movf	(_logf$2049+1)^(0+256),w
 15984  05DC  0020               	movlb	0	; select bank0
 15985  05DD  00DF               	movwf	___fladd@a+1
 15986  05DE  0022               	movlb	2	; select bank2
 15987  05DF  0838               	movf	_logf$2049^(0+256),w
 15988  05E0  0020               	movlb	0	; select bank0
 15989  05E1  00DE               	movwf	___fladd@a
 15990  05E2  3185  25F5         	fcall	___fladd
 15991  05E4  0020               	movlb	0	; select bank0
 15992  05E5  085D               	movf	?___fladd+3,w
 15993  05E6  0021               	movlb	1	; select bank1
 15994  05E7  00AB               	movwf	(?_logf+3)^(0+128)
 15995  05E8  0020               	movlb	0	; select bank0
 15996  05E9  085C               	movf	?___fladd+2,w
 15997  05EA  0021               	movlb	1	; select bank1
 15998  05EB  00AA               	movwf	(?_logf+2)^(0+128)
 15999  05EC  0020               	movlb	0	; select bank0
 16000  05ED  085B               	movf	?___fladd+1,w
 16001  05EE  0021               	movlb	1	; select bank1
 16002  05EF  00A9               	movwf	(?_logf+1)^(0+128)
 16003  05F0  0020               	movlb	0	; select bank0
 16004  05F1  085A               	movf	?___fladd,w
 16005  05F2  0021               	movlb	1	; select bank1
 16006  05F3  00A8               	movwf	?_logf^(0+128)
 16007  05F4  0008               	return
 16008  05F5                     __end_of_logf:	
 16009                           
 16010                           	psect	text51
 16011  2D6C                     __ptext51:	
 16012 ;; *************** function ___xxtofl *****************
 16013 ;; Defined at:
 16014 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 16015 ;; Parameters:    Size  Location     Type
 16016 ;;  sign            1    wreg     unsigned char 
 16017 ;;  val             4    1[COMMON] long 
 16018 ;; Auto vars:     Size  Location     Type
 16019 ;;  sign            1    0[BANK0 ] unsigned char 
 16020 ;;  arg             4    2[BANK0 ] unsigned long 
 16021 ;;  exp             1    1[BANK0 ] unsigned char 
 16022 ;; Return value:  Size  Location     Type
 16023 ;;                  4    1[COMMON] unsigned char 
 16024 ;; Registers used:
 16025 ;;		wreg, status,2, status,0
 16026 ;; Tracked objects:
 16027 ;;		On entry : 0/0
 16028 ;;		On exit  : 0/0
 16029 ;;		Unchanged: 0/0
 16030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16032 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16033 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16034 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16035 ;;Total ram usage:       14 bytes
 16036 ;; Hardware stack levels used:    1
 16037 ;; Hardware stack levels required when called:    1
 16038 ;; This function calls:
 16039 ;;		Nothing
 16040 ;; This function is called by:
 16041 ;;		_setShortCircuitProtection
 16042 ;;		_setOverCurrentDischargeProtection
 16043 ;;		_updateVoltages
 16044 ;;		_updateTemperatures
 16045 ;;		_logf
 16046 ;;		_updateCurrent
 16047 ;;		_AFE_getSetShortCircuitCurrent
 16048 ;;		_AFE_getOverCurrentDischargeCurrent
 16049 ;; This function uses a non-reentrant model
 16050 ;;
 16051                           
 16052                           
 16053                           ;psect for function ___xxtofl
 16054  2D6C                     ___xxtofl:	
 16055                           
 16056                           ;incstack = 0
 16057                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 16058                           ;___xxtofl@sign stored from wreg
 16059  2D6C  0020               	movlb	0	; select bank0
 16060  2D6D  00A0               	movwf	___xxtofl@sign
 16061  2D6E  0820               	movf	___xxtofl@sign,w
 16062  2D6F  1D03               	btfss	3,2
 16063  2D70  1FF4               	btfss	___xxtofl@val+3,7
 16064  2D71  2D82               	goto	l7673
 16065  2D72  0971               	comf	___xxtofl@val,w
 16066  2D73  00A2               	movwf	___xxtofl@arg
 16067  2D74  0972               	comf	___xxtofl@val+1,w
 16068  2D75  00A3               	movwf	___xxtofl@arg+1
 16069  2D76  0973               	comf	___xxtofl@val+2,w
 16070  2D77  00A4               	movwf	___xxtofl@arg+2
 16071  2D78  0974               	comf	___xxtofl@val+3,w
 16072  2D79  00A5               	movwf	___xxtofl@arg+3
 16073  2D7A  0AA2               	incf	___xxtofl@arg,f
 16074  2D7B  1903               	skipnz
 16075  2D7C  0AA3               	incf	___xxtofl@arg+1,f
 16076  2D7D  1903               	skipnz
 16077  2D7E  0AA4               	incf	___xxtofl@arg+2,f
 16078  2D7F  1903               	skipnz
 16079  2D80  0AA5               	incf	___xxtofl@arg+3,f
 16080  2D81  2D8A               	goto	l1281
 16081  2D82                     l7673:	
 16082  2D82  0874               	movf	___xxtofl@val+3,w
 16083  2D83  00A5               	movwf	___xxtofl@arg+3
 16084  2D84  0873               	movf	___xxtofl@val+2,w
 16085  2D85  00A4               	movwf	___xxtofl@arg+2
 16086  2D86  0872               	movf	___xxtofl@val+1,w
 16087  2D87  00A3               	movwf	___xxtofl@arg+1
 16088  2D88  0871               	movf	___xxtofl@val,w
 16089  2D89  00A2               	movwf	___xxtofl@arg
 16090  2D8A                     l1281:	
 16091  2D8A  0874               	movf	___xxtofl@val+3,w
 16092  2D8B  0473               	iorwf	___xxtofl@val+2,w
 16093  2D8C  0472               	iorwf	___xxtofl@val+1,w
 16094  2D8D  0471               	iorwf	___xxtofl@val,w
 16095  2D8E  1D03               	skipz
 16096  2D8F  2D99               	goto	l7679
 16097  2D90  3000               	movlw	0
 16098  2D91  00F4               	movwf	?___xxtofl+3
 16099  2D92  3000               	movlw	0
 16100  2D93  00F3               	movwf	?___xxtofl+2
 16101  2D94  3000               	movlw	0
 16102  2D95  00F2               	movwf	?___xxtofl+1
 16103  2D96  3000               	movlw	0
 16104  2D97  00F1               	movwf	?___xxtofl
 16105  2D98  0008               	return
 16106  2D99                     l7679:	
 16107  2D99  3096               	movlw	150
 16108  2D9A  00F5               	movwf	??___xxtofl
 16109  2D9B  0875               	movf	??___xxtofl,w
 16110  2D9C  00A1               	movwf	___xxtofl@exp
 16111  2D9D                     l7683:	
 16112  2D9D  30FE               	movlw	254
 16113  2D9E  0525               	andwf	___xxtofl@arg+3,w
 16114  2D9F  1903               	btfsc	3,2
 16115  2DA0  2DC0               	goto	l1287
 16116  2DA1  3001               	movlw	1
 16117  2DA2  00F5               	movwf	??___xxtofl
 16118  2DA3  0875               	movf	??___xxtofl,w
 16119  2DA4  07A1               	addwf	___xxtofl@exp,f
 16120  2DA5  3001               	movlw	1
 16121  2DA6                     u10565:	
 16122  2DA6  36A5               	lsrf	___xxtofl@arg+3,f
 16123  2DA7  0CA4               	rrf	___xxtofl@arg+2,f
 16124  2DA8  0CA3               	rrf	___xxtofl@arg+1,f
 16125  2DA9  0CA2               	rrf	___xxtofl@arg,f
 16126  2DAA  0B89               	decfsz	9,f
 16127  2DAB  2DA6               	goto	u10565
 16128  2DAC  2D9D               	goto	l7683
 16129  2DAD                     l7685:	
 16130  2DAD  3001               	movlw	1
 16131  2DAE  00F5               	movwf	??___xxtofl
 16132  2DAF  0875               	movf	??___xxtofl,w
 16133  2DB0  07A1               	addwf	___xxtofl@exp,f
 16134  2DB1  3001               	movlw	1
 16135  2DB2  07A2               	addwf	___xxtofl@arg,f
 16136  2DB3  3000               	movlw	0
 16137  2DB4  3DA3               	addwfc	___xxtofl@arg+1,f
 16138  2DB5  3000               	movlw	0
 16139  2DB6  3DA4               	addwfc	___xxtofl@arg+2,f
 16140  2DB7  3000               	movlw	0
 16141  2DB8  3DA5               	addwfc	___xxtofl@arg+3,f
 16142  2DB9  3001               	movlw	1
 16143  2DBA                     u10585:	
 16144  2DBA  36A5               	lsrf	___xxtofl@arg+3,f
 16145  2DBB  0CA4               	rrf	___xxtofl@arg+2,f
 16146  2DBC  0CA3               	rrf	___xxtofl@arg+1,f
 16147  2DBD  0CA2               	rrf	___xxtofl@arg,f
 16148  2DBE  0B89               	decfsz	9,f
 16149  2DBF  2DBA               	goto	u10585
 16150  2DC0                     l1287:	
 16151  2DC0  30FF               	movlw	255
 16152  2DC1  0525               	andwf	___xxtofl@arg+3,w
 16153  2DC2  1903               	btfsc	3,2
 16154  2DC3  2DD2               	goto	l7693
 16155  2DC4  2DAD               	goto	l7685
 16156  2DC5                     l7695:	
 16157  2DC5  3002               	movlw	2
 16158  2DC6  0221               	subwf	___xxtofl@exp,w
 16159  2DC7  1C03               	btfss	3,0
 16160  2DC8  2DD4               	goto	l1294
 16161  2DC9  3001               	movlw	1
 16162  2DCA  02A1               	subwf	___xxtofl@exp,f
 16163  2DCB  3001               	movlw	1
 16164  2DCC                     u10605:	
 16165  2DCC  35A2               	lslf	___xxtofl@arg,f
 16166  2DCD  0DA3               	rlf	___xxtofl@arg+1,f
 16167  2DCE  0DA4               	rlf	___xxtofl@arg+2,f
 16168  2DCF  0DA5               	rlf	___xxtofl@arg+3,f
 16169  2DD0  0B89               	decfsz	9,f
 16170  2DD1  2DCC               	goto	u10605
 16171  2DD2                     l7693:	
 16172  2DD2  1FA4               	btfss	___xxtofl@arg+2,7
 16173  2DD3  2DC5               	goto	l7695
 16174  2DD4                     l1294:	
 16175  2DD4  1821               	btfsc	___xxtofl@exp,0
 16176  2DD5  2DDE               	goto	l1295
 16177  2DD6  30FF               	movlw	255
 16178  2DD7  05A2               	andwf	___xxtofl@arg,f
 16179  2DD8  30FF               	movlw	255
 16180  2DD9  05A3               	andwf	___xxtofl@arg+1,f
 16181  2DDA  307F               	movlw	127
 16182  2DDB  05A4               	andwf	___xxtofl@arg+2,f
 16183  2DDC  30FF               	movlw	255
 16184  2DDD  05A5               	andwf	___xxtofl@arg+3,f
 16185  2DDE                     l1295:	
 16186  2DDE  1003               	clrc
 16187  2DDF  0CA1               	rrf	___xxtofl@exp,f
 16188  2DE0  0821               	movf	___xxtofl@exp,w
 16189  2DE1  00F5               	movwf	??___xxtofl
 16190  2DE2  01F6               	clrf	??___xxtofl+1
 16191  2DE3  01F7               	clrf	??___xxtofl+2
 16192  2DE4  01F8               	clrf	??___xxtofl+3
 16193  2DE5  3018               	movlw	24
 16194  2DE6                     u10645:	
 16195  2DE6  35F5               	lslf	??___xxtofl,f
 16196  2DE7  0DF6               	rlf	??___xxtofl+1,f
 16197  2DE8  0DF7               	rlf	??___xxtofl+2,f
 16198  2DE9  0DF8               	rlf	??___xxtofl+3,f
 16199  2DEA  0B89               	decfsz	9,f
 16200  2DEB  2DE6               	goto	u10645
 16201  2DEC  0875               	movf	??___xxtofl,w
 16202  2DED  04A2               	iorwf	___xxtofl@arg,f
 16203  2DEE  0876               	movf	??___xxtofl+1,w
 16204  2DEF  04A3               	iorwf	___xxtofl@arg+1,f
 16205  2DF0  0877               	movf	??___xxtofl+2,w
 16206  2DF1  04A4               	iorwf	___xxtofl@arg+2,f
 16207  2DF2  0878               	movf	??___xxtofl+3,w
 16208  2DF3  04A5               	iorwf	___xxtofl@arg+3,f
 16209  2DF4  0820               	movf	___xxtofl@sign,w
 16210  2DF5  1D03               	btfss	3,2
 16211  2DF6  1FF4               	btfss	___xxtofl@val+3,7
 16212  2DF7  2DF9               	goto	l7707
 16213  2DF8  17A5               	bsf	___xxtofl@arg+3,7
 16214  2DF9                     l7707:	
 16215  2DF9  0825               	movf	___xxtofl@arg+3,w
 16216  2DFA  00F4               	movwf	?___xxtofl+3
 16217  2DFB  0824               	movf	___xxtofl@arg+2,w
 16218  2DFC  00F3               	movwf	?___xxtofl+2
 16219  2DFD  0823               	movf	___xxtofl@arg+1,w
 16220  2DFE  00F2               	movwf	?___xxtofl+1
 16221  2DFF  0822               	movf	___xxtofl@arg,w
 16222  2E00  00F1               	movwf	?___xxtofl
 16223  2E01  0008               	return
 16224  2E02                     __end_of___xxtofl:	
 16225                           
 16226                           	psect	text52
 16227  3795                     __ptext52:	
 16228 ;; *************** function ___flsub *****************
 16229 ;; Defined at:
 16230 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16231 ;; Parameters:    Size  Location     Type
 16232 ;;  a               4    0[BANK1 ] unsigned char 
 16233 ;;  b               4    4[BANK1 ] unsigned char 
 16234 ;; Auto vars:     Size  Location     Type
 16235 ;;		None
 16236 ;; Return value:  Size  Location     Type
 16237 ;;                  4    0[BANK1 ] unsigned char 
 16238 ;; Registers used:
 16239 ;;		wreg, status,2, status,0, pclath, cstack
 16240 ;; Tracked objects:
 16241 ;;		On entry : 0/0
 16242 ;;		On exit  : 0/0
 16243 ;;		Unchanged: 0/0
 16244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16245 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16248 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16249 ;;Total ram usage:        8 bytes
 16250 ;; Hardware stack levels used:    1
 16251 ;; Hardware stack levels required when called:    2
 16252 ;; This function calls:
 16253 ;;		___fladd
 16254 ;; This function is called by:
 16255 ;;		_updateTemperatures
 16256 ;;		_logf
 16257 ;; This function uses a non-reentrant model
 16258 ;;
 16259                           
 16260                           
 16261                           ;psect for function ___flsub
 16262  3795                     ___flsub:	
 16263                           
 16264                           ;incstack = 0
 16265                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 16266  3795  3080               	movlw	128
 16267  3796  0021               	movlb	1	; select bank1
 16268  3797  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 16269  3798  0827               	movf	(___flsub@b+3)^(0+128),w
 16270  3799  0020               	movlb	0	; select bank0
 16271  379A  00DD               	movwf	___fladd@b+3
 16272  379B  0021               	movlb	1	; select bank1
 16273  379C  0826               	movf	(___flsub@b+2)^(0+128),w
 16274  379D  0020               	movlb	0	; select bank0
 16275  379E  00DC               	movwf	___fladd@b+2
 16276  379F  0021               	movlb	1	; select bank1
 16277  37A0  0825               	movf	(___flsub@b+1)^(0+128),w
 16278  37A1  0020               	movlb	0	; select bank0
 16279  37A2  00DB               	movwf	___fladd@b+1
 16280  37A3  0021               	movlb	1	; select bank1
 16281  37A4  0824               	movf	___flsub@b^(0+128),w
 16282  37A5  0020               	movlb	0	; select bank0
 16283  37A6  00DA               	movwf	___fladd@b
 16284  37A7  0021               	movlb	1	; select bank1
 16285  37A8  0823               	movf	(___flsub@a+3)^(0+128),w
 16286  37A9  0020               	movlb	0	; select bank0
 16287  37AA  00E1               	movwf	___fladd@a+3
 16288  37AB  0021               	movlb	1	; select bank1
 16289  37AC  0822               	movf	(___flsub@a+2)^(0+128),w
 16290  37AD  0020               	movlb	0	; select bank0
 16291  37AE  00E0               	movwf	___fladd@a+2
 16292  37AF  0021               	movlb	1	; select bank1
 16293  37B0  0821               	movf	(___flsub@a+1)^(0+128),w
 16294  37B1  0020               	movlb	0	; select bank0
 16295  37B2  00DF               	movwf	___fladd@a+1
 16296  37B3  0021               	movlb	1	; select bank1
 16297  37B4  0820               	movf	___flsub@a^(0+128),w
 16298  37B5  0020               	movlb	0	; select bank0
 16299  37B6  00DE               	movwf	___fladd@a
 16300  37B7  3185  25F5         	fcall	___fladd
 16301  37B9  0020               	movlb	0	; select bank0
 16302  37BA  085D               	movf	?___fladd+3,w
 16303  37BB  0021               	movlb	1	; select bank1
 16304  37BC  00A3               	movwf	(?___flsub+3)^(0+128)
 16305  37BD  0020               	movlb	0	; select bank0
 16306  37BE  085C               	movf	?___fladd+2,w
 16307  37BF  0021               	movlb	1	; select bank1
 16308  37C0  00A2               	movwf	(?___flsub+2)^(0+128)
 16309  37C1  0020               	movlb	0	; select bank0
 16310  37C2  085B               	movf	?___fladd+1,w
 16311  37C3  0021               	movlb	1	; select bank1
 16312  37C4  00A1               	movwf	(?___flsub+1)^(0+128)
 16313  37C5  0020               	movlb	0	; select bank0
 16314  37C6  085A               	movf	?___fladd,w
 16315  37C7  0021               	movlb	1	; select bank1
 16316  37C8  00A0               	movwf	?___flsub^(0+128)
 16317  37C9  0008               	return
 16318  37CA                     __end_of___flsub:	
 16319                           
 16320                           	psect	text53
 16321  05F5                     __ptext53:	
 16322 ;; *************** function ___fladd *****************
 16323 ;; Defined at:
 16324 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16325 ;; Parameters:    Size  Location     Type
 16326 ;;  b               4   58[BANK0 ] unsigned char 
 16327 ;;  a               4   62[BANK0 ] unsigned char 
 16328 ;; Auto vars:     Size  Location     Type
 16329 ;;  grs             1   77[BANK0 ] unsigned char 
 16330 ;;  bexp            1   76[BANK0 ] unsigned char 
 16331 ;;  aexp            1   75[BANK0 ] unsigned char 
 16332 ;;  signs           1   74[BANK0 ] unsigned char 
 16333 ;; Return value:  Size  Location     Type
 16334 ;;                  4   58[BANK0 ] unsigned char 
 16335 ;; Registers used:
 16336 ;;		wreg, status,2, status,0
 16337 ;; Tracked objects:
 16338 ;;		On entry : 0/0
 16339 ;;		On exit  : 0/0
 16340 ;;		Unchanged: 0/0
 16341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16342 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16343 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16344 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16345 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16346 ;;Total ram usage:       20 bytes
 16347 ;; Hardware stack levels used:    1
 16348 ;; Hardware stack levels required when called:    1
 16349 ;; This function calls:
 16350 ;;		Nothing
 16351 ;; This function is called by:
 16352 ;;		_updateVoltages
 16353 ;;		_updateTemperatures
 16354 ;;		___flsub
 16355 ;;		_logf
 16356 ;; This function uses a non-reentrant model
 16357 ;;
 16358                           
 16359                           
 16360                           ;psect for function ___fladd
 16361  05F5                     ___fladd:	
 16362                           
 16363                           ;incstack = 0
 16364                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 16365  05F5  0020               	movlb	0	; select bank0
 16366  05F6  085D               	movf	___fladd@b+3,w
 16367  05F7  3980               	andlw	128
 16368  05F8  00E2               	movwf	??___fladd
 16369  05F9  0862               	movf	??___fladd,w
 16370  05FA  00EA               	movwf	___fladd@signs
 16371  05FB  355D               	lslf	___fladd@b+3,w
 16372  05FC  00E2               	movwf	??___fladd
 16373  05FD  0862               	movf	??___fladd,w
 16374  05FE  00EC               	movwf	___fladd@bexp
 16375  05FF  1BDC               	btfsc	___fladd@b+2,7
 16376  0600  146C               	bsf	___fladd@bexp,0
 16377  0601  086C               	movf	___fladd@bexp,w
 16378  0602  1903               	btfsc	3,2
 16379  0603  2E12               	goto	l7159
 16380  0604  0A6C               	incf	___fladd@bexp,w
 16381  0605  1D03               	btfss	3,2
 16382  0606  2E0F               	goto	l7155
 16383  0607  3000               	movlw	0
 16384  0608  00DD               	movwf	___fladd@b+3
 16385  0609  3000               	movlw	0
 16386  060A  00DC               	movwf	___fladd@b+2
 16387  060B  3000               	movlw	0
 16388  060C  00DB               	movwf	___fladd@b+1
 16389  060D  3000               	movlw	0
 16390  060E  00DA               	movwf	___fladd@b
 16391  060F                     l7155:	
 16392  060F  17DC               	bsf	___fladd@b+2,7
 16393  0610  01DD               	clrf	___fladd@b+3
 16394  0611  2E1A               	goto	l7161
 16395  0612                     l7159:	
 16396  0612  3000               	movlw	0
 16397  0613  00DD               	movwf	___fladd@b+3
 16398  0614  3000               	movlw	0
 16399  0615  00DC               	movwf	___fladd@b+2
 16400  0616  3000               	movlw	0
 16401  0617  00DB               	movwf	___fladd@b+1
 16402  0618  3000               	movlw	0
 16403  0619  00DA               	movwf	___fladd@b
 16404  061A                     l7161:	
 16405  061A  0861               	movf	___fladd@a+3,w
 16406  061B  3980               	andlw	128
 16407  061C  00E2               	movwf	??___fladd
 16408  061D  0862               	movf	??___fladd,w
 16409  061E  00EB               	movwf	___fladd@aexp
 16410  061F  086B               	movf	___fladd@aexp,w
 16411  0620  066A               	xorwf	___fladd@signs,w
 16412  0621  1D03               	btfss	3,2
 16413  0622  176A               	bsf	___fladd@signs,6
 16414  0623  3561               	lslf	___fladd@a+3,w
 16415  0624  00E2               	movwf	??___fladd
 16416  0625  0862               	movf	??___fladd,w
 16417  0626  00EB               	movwf	___fladd@aexp
 16418  0627  1BE0               	btfsc	___fladd@a+2,7
 16419  0628  146B               	bsf	___fladd@aexp,0
 16420  0629  086B               	movf	___fladd@aexp,w
 16421  062A  1903               	btfsc	3,2
 16422  062B  2E3A               	goto	l7183
 16423  062C  0A6B               	incf	___fladd@aexp,w
 16424  062D  1D03               	btfss	3,2
 16425  062E  2E37               	goto	l7179
 16426  062F  3000               	movlw	0
 16427  0630  00E1               	movwf	___fladd@a+3
 16428  0631  3000               	movlw	0
 16429  0632  00E0               	movwf	___fladd@a+2
 16430  0633  3000               	movlw	0
 16431  0634  00DF               	movwf	___fladd@a+1
 16432  0635  3000               	movlw	0
 16433  0636  00DE               	movwf	___fladd@a
 16434  0637                     l7179:	
 16435  0637  17E0               	bsf	___fladd@a+2,7
 16436  0638  01E1               	clrf	___fladd@a+3
 16437  0639  2E42               	goto	l1147
 16438  063A                     l7183:	
 16439  063A  3000               	movlw	0
 16440  063B  00E1               	movwf	___fladd@a+3
 16441  063C  3000               	movlw	0
 16442  063D  00E0               	movwf	___fladd@a+2
 16443  063E  3000               	movlw	0
 16444  063F  00DF               	movwf	___fladd@a+1
 16445  0640  3000               	movlw	0
 16446  0641  00DE               	movwf	___fladd@a
 16447  0642                     l1147:	
 16448  0642  086C               	movf	___fladd@bexp,w
 16449  0643  026B               	subwf	___fladd@aexp,w
 16450  0644  1803               	skipnc
 16451  0645  2E88               	goto	l7219
 16452  0646  1F6A               	btfss	___fladd@signs,6
 16453  0647  2E4C               	goto	l7189
 16454  0648  3080               	movlw	128
 16455  0649  00E2               	movwf	??___fladd
 16456  064A  0862               	movf	??___fladd,w
 16457  064B  06EA               	xorwf	___fladd@signs,f
 16458  064C                     l7189:	
 16459  064C  086C               	movf	___fladd@bexp,w
 16460  064D  00E2               	movwf	??___fladd
 16461  064E  0862               	movf	??___fladd,w
 16462  064F  00ED               	movwf	___fladd@grs
 16463  0650  086B               	movf	___fladd@aexp,w
 16464  0651  00E2               	movwf	??___fladd
 16465  0652  0862               	movf	??___fladd,w
 16466  0653  00EC               	movwf	___fladd@bexp
 16467  0654  086D               	movf	___fladd@grs,w
 16468  0655  00E2               	movwf	??___fladd
 16469  0656  0862               	movf	??___fladd,w
 16470  0657  00EB               	movwf	___fladd@aexp
 16471  0658  085A               	movf	___fladd@b,w
 16472  0659  00E2               	movwf	??___fladd
 16473  065A  0862               	movf	??___fladd,w
 16474  065B  00ED               	movwf	___fladd@grs
 16475  065C  085E               	movf	___fladd@a,w
 16476  065D  00E2               	movwf	??___fladd
 16477  065E  0862               	movf	??___fladd,w
 16478  065F  00DA               	movwf	___fladd@b
 16479  0660  086D               	movf	___fladd@grs,w
 16480  0661  00E2               	movwf	??___fladd
 16481  0662  0862               	movf	??___fladd,w
 16482  0663  00DE               	movwf	___fladd@a
 16483  0664  085B               	movf	___fladd@b+1,w
 16484  0665  00E2               	movwf	??___fladd
 16485  0666  0862               	movf	??___fladd,w
 16486  0667  00ED               	movwf	___fladd@grs
 16487  0668  085F               	movf	___fladd@a+1,w
 16488  0669  00E2               	movwf	??___fladd
 16489  066A  0862               	movf	??___fladd,w
 16490  066B  00DB               	movwf	___fladd@b+1
 16491  066C  086D               	movf	___fladd@grs,w
 16492  066D  00E2               	movwf	??___fladd
 16493  066E  0862               	movf	??___fladd,w
 16494  066F  00DF               	movwf	___fladd@a+1
 16495  0670  085C               	movf	___fladd@b+2,w
 16496  0671  00E2               	movwf	??___fladd
 16497  0672  0862               	movf	??___fladd,w
 16498  0673  00ED               	movwf	___fladd@grs
 16499  0674  0860               	movf	___fladd@a+2,w
 16500  0675  00E2               	movwf	??___fladd
 16501  0676  0862               	movf	??___fladd,w
 16502  0677  00DC               	movwf	___fladd@b+2
 16503  0678  086D               	movf	___fladd@grs,w
 16504  0679  00E2               	movwf	??___fladd
 16505  067A  0862               	movf	??___fladd,w
 16506  067B  00E0               	movwf	___fladd@a+2
 16507  067C  085D               	movf	___fladd@b+3,w
 16508  067D  00E2               	movwf	??___fladd
 16509  067E  0862               	movf	??___fladd,w
 16510  067F  00ED               	movwf	___fladd@grs
 16511  0680  0861               	movf	___fladd@a+3,w
 16512  0681  00E2               	movwf	??___fladd
 16513  0682  0862               	movf	??___fladd,w
 16514  0683  00DD               	movwf	___fladd@b+3
 16515  0684  086D               	movf	___fladd@grs,w
 16516  0685  00E2               	movwf	??___fladd
 16517  0686  0862               	movf	??___fladd,w
 16518  0687  00E1               	movwf	___fladd@a+3
 16519  0688                     l7219:	
 16520  0688  01ED               	clrf	___fladd@grs
 16521  0689  086B               	movf	___fladd@aexp,w
 16522  068A  00E2               	movwf	??___fladd
 16523  068B  01E3               	clrf	??___fladd+1
 16524  068C  0863               	movf	??___fladd+1,w
 16525  068D  00E5               	movwf	??___fladd+3
 16526  068E  086C               	movf	___fladd@bexp,w
 16527  068F  0262               	subwf	??___fladd,w
 16528  0690  00E4               	movwf	??___fladd+2
 16529  0691  1C03               	skipc
 16530  0692  03E5               	decf	??___fladd+3,f
 16531  0693  0865               	movf	??___fladd+3,w
 16532  0694  3A80               	xorlw	128
 16533  0695  00E6               	movwf	??___fladd+4
 16534  0696  3080               	movlw	128
 16535  0697  0266               	subwf	??___fladd+4,w
 16536  0698  1D03               	skipz
 16537  0699  2E9C               	goto	u9545
 16538  069A  301A               	movlw	26
 16539  069B  0264               	subwf	??___fladd+2,w
 16540  069C                     u9545:	
 16541  069C  1C03               	skipc
 16542  069D  2ED0               	goto	l7237
 16543  069E  0020               	movlb	0	; select bank0
 16544  069F  085D               	movf	___fladd@b+3,w
 16545  06A0  045C               	iorwf	___fladd@b+2,w
 16546  06A1  045B               	iorwf	___fladd@b+1,w
 16547  06A2  045A               	iorwf	___fladd@b,w
 16548  06A3  1903               	btfsc	3,2
 16549  06A4  2EA7               	goto	u9550
 16550  06A5  3001               	movlw	1
 16551  06A6  2EA8               	goto	u9560
 16552  06A7                     u9550:	
 16553  06A7  3000               	movlw	0
 16554  06A8                     u9560:	
 16555  06A8  00E2               	movwf	??___fladd
 16556  06A9  0862               	movf	??___fladd,w
 16557  06AA  00ED               	movwf	___fladd@grs
 16558  06AB  3000               	movlw	0
 16559  06AC  00DD               	movwf	___fladd@b+3
 16560  06AD  3000               	movlw	0
 16561  06AE  00DC               	movwf	___fladd@b+2
 16562  06AF  3000               	movlw	0
 16563  06B0  00DB               	movwf	___fladd@b+1
 16564  06B1  3000               	movlw	0
 16565  06B2  00DA               	movwf	___fladd@b
 16566  06B3  086B               	movf	___fladd@aexp,w
 16567  06B4  00E2               	movwf	??___fladd
 16568  06B5  0862               	movf	??___fladd,w
 16569  06B6  00EC               	movwf	___fladd@bexp
 16570  06B7  2ED5               	goto	l1151
 16571  06B8                     l1153:	
 16572  06B8  1C6D               	btfss	___fladd@grs,0
 16573  06B9  2EC0               	goto	l7227
 16574  06BA  366D               	lsrf	___fladd@grs,w
 16575  06BB  3801               	iorlw	1
 16576  06BC  00E2               	movwf	??___fladd
 16577  06BD  0862               	movf	??___fladd,w
 16578  06BE  00ED               	movwf	___fladd@grs
 16579  06BF  2EC2               	goto	l7229
 16580  06C0                     l7227:	
 16581  06C0  1003               	clrc
 16582  06C1  0CED               	rrf	___fladd@grs,f
 16583  06C2                     l7229:	
 16584  06C2  185A               	btfsc	___fladd@b,0
 16585  06C3  17ED               	bsf	___fladd@grs,7
 16586  06C4  3001               	movlw	1
 16587  06C5  00E2               	movwf	??___fladd
 16588  06C6                     u9595:	
 16589  06C6  37DD               	asrf	___fladd@b+3,f
 16590  06C7  0CDC               	rrf	___fladd@b+2,f
 16591  06C8  0CDB               	rrf	___fladd@b+1,f
 16592  06C9  0CDA               	rrf	___fladd@b,f
 16593  06CA  0BE2               	decfsz	??___fladd& (0+127),f
 16594  06CB  2EC6               	goto	u9595
 16595  06CC  3001               	movlw	1
 16596  06CD  00E2               	movwf	??___fladd
 16597  06CE  0862               	movf	??___fladd,w
 16598  06CF  07EC               	addwf	___fladd@bexp,f
 16599  06D0                     l7237:	
 16600  06D0  0020               	movlb	0	; select bank0
 16601  06D1  086B               	movf	___fladd@aexp,w
 16602  06D2  026C               	subwf	___fladd@bexp,w
 16603  06D3  1C03               	skipc
 16604  06D4  2EB8               	goto	l1153
 16605  06D5                     l1151:	
 16606  06D5  1B6A               	btfsc	___fladd@signs,6
 16607  06D6  2F06               	goto	l7263
 16608  06D7  086C               	movf	___fladd@bexp,w
 16609  06D8  1D03               	btfss	3,2
 16610  06D9  2EE3               	goto	l7245
 16611  06DA  3000               	movlw	0
 16612  06DB  00DD               	movwf	?___fladd+3
 16613  06DC  3000               	movlw	0
 16614  06DD  00DC               	movwf	?___fladd+2
 16615  06DE  3000               	movlw	0
 16616  06DF  00DB               	movwf	?___fladd+1
 16617  06E0  3000               	movlw	0
 16618  06E1  00DA               	movwf	?___fladd
 16619  06E2  0008               	return
 16620  06E3                     l7245:	
 16621  06E3  085E               	movf	___fladd@a,w
 16622  06E4  07DA               	addwf	___fladd@b,f
 16623  06E5  085F               	movf	___fladd@a+1,w
 16624  06E6  3DDB               	addwfc	___fladd@b+1,f
 16625  06E7  0860               	movf	___fladd@a+2,w
 16626  06E8  3DDC               	addwfc	___fladd@b+2,f
 16627  06E9  0861               	movf	___fladd@a+3,w
 16628  06EA  3DDD               	addwfc	___fladd@b+3,f
 16629  06EB  1C5D               	btfss	___fladd@b+3,0
 16630  06EC  2F80               	goto	l7297
 16631  06ED  1C6D               	btfss	___fladd@grs,0
 16632  06EE  2EF5               	goto	l7253
 16633  06EF  366D               	lsrf	___fladd@grs,w
 16634  06F0  3801               	iorlw	1
 16635  06F1  00E2               	movwf	??___fladd
 16636  06F2  0862               	movf	??___fladd,w
 16637  06F3  00ED               	movwf	___fladd@grs
 16638  06F4  2EF7               	goto	l7255
 16639  06F5                     l7253:	
 16640  06F5  1003               	clrc
 16641  06F6  0CED               	rrf	___fladd@grs,f
 16642  06F7                     l7255:	
 16643  06F7  185A               	btfsc	___fladd@b,0
 16644  06F8  17ED               	bsf	___fladd@grs,7
 16645  06F9  3001               	movlw	1
 16646  06FA  00E2               	movwf	??___fladd
 16647  06FB                     u9665:	
 16648  06FB  37DD               	asrf	___fladd@b+3,f
 16649  06FC  0CDC               	rrf	___fladd@b+2,f
 16650  06FD  0CDB               	rrf	___fladd@b+1,f
 16651  06FE  0CDA               	rrf	___fladd@b,f
 16652  06FF  0BE2               	decfsz	??___fladd& (0+127),f
 16653  0700  2EFB               	goto	u9665
 16654  0701  3001               	movlw	1
 16655  0702  00E2               	movwf	??___fladd
 16656  0703  0862               	movf	??___fladd,w
 16657  0704  07EC               	addwf	___fladd@bexp,f
 16658  0705  2F80               	goto	l7297
 16659  0706                     l7263:	
 16660  0706  085D               	movf	___fladd@b+3,w
 16661  0707  3A80               	xorlw	128
 16662  0708  00E2               	movwf	??___fladd
 16663  0709  0861               	movf	___fladd@a+3,w
 16664  070A  3A80               	xorlw	128
 16665  070B  0262               	subwf	??___fladd,w
 16666  070C  1D03               	skipz
 16667  070D  2F18               	goto	u9673
 16668  070E  0860               	movf	___fladd@a+2,w
 16669  070F  025C               	subwf	___fladd@b+2,w
 16670  0710  1D03               	skipz
 16671  0711  2F18               	goto	u9673
 16672  0712  085F               	movf	___fladd@a+1,w
 16673  0713  025B               	subwf	___fladd@b+1,w
 16674  0714  1D03               	skipz
 16675  0715  2F18               	goto	u9673
 16676  0716  085E               	movf	___fladd@a,w
 16677  0717  025A               	subwf	___fladd@b,w
 16678  0718                     u9673:	
 16679  0718  1803               	skipnc
 16680  0719  2F50               	goto	l7273
 16681  071A  30FF               	movlw	255
 16682  071B  00E2               	movwf	??___fladd
 16683  071C  30FF               	movlw	255
 16684  071D  00E3               	movwf	??___fladd+1
 16685  071E  30FF               	movlw	255
 16686  071F  00E4               	movwf	??___fladd+2
 16687  0720  30FF               	movlw	255
 16688  0721  00E5               	movwf	??___fladd+3
 16689  0722  085A               	movf	___fladd@b,w
 16690  0723  025E               	subwf	___fladd@a,w
 16691  0724  00E6               	movwf	??___fladd+4
 16692  0725  085B               	movf	___fladd@b+1,w
 16693  0726  3B5F               	subwfb	___fladd@a+1,w
 16694  0727  00E7               	movwf	??___fladd+5
 16695  0728  085C               	movf	___fladd@b+2,w
 16696  0729  3B60               	subwfb	___fladd@a+2,w
 16697  072A  00E8               	movwf	??___fladd+6
 16698  072B  085D               	movf	___fladd@b+3,w
 16699  072C  3B61               	subwfb	___fladd@a+3,w
 16700  072D  00E9               	movwf	??___fladd+7
 16701  072E  0866               	movf	??___fladd+4,w
 16702  072F  07E2               	addwf	??___fladd,f
 16703  0730  0867               	movf	??___fladd+5,w
 16704  0731  3DE3               	addwfc	??___fladd+1,f
 16705  0732  0868               	movf	??___fladd+6,w
 16706  0733  3DE4               	addwfc	??___fladd+2,f
 16707  0734  0869               	movf	??___fladd+7,w
 16708  0735  3DE5               	addwfc	??___fladd+3,f
 16709  0736  0865               	movf	??___fladd+3,w
 16710  0737  00DD               	movwf	___fladd@b+3
 16711  0738  0864               	movf	??___fladd+2,w
 16712  0739  00DC               	movwf	___fladd@b+2
 16713  073A  0863               	movf	??___fladd+1,w
 16714  073B  00DB               	movwf	___fladd@b+1
 16715  073C  0862               	movf	??___fladd,w
 16716  073D  00DA               	movwf	___fladd@b
 16717  073E  3080               	movlw	128
 16718  073F  00E2               	movwf	??___fladd
 16719  0740  0862               	movf	??___fladd,w
 16720  0741  06EA               	xorwf	___fladd@signs,f
 16721  0742  09ED               	comf	___fladd@grs,f
 16722  0743  0AED               	incf	___fladd@grs,f
 16723  0744  086D               	movf	___fladd@grs,w
 16724  0745  1D03               	btfss	3,2
 16725  0746  2F58               	goto	l1168
 16726  0747  3001               	movlw	1
 16727  0748  07DA               	addwf	___fladd@b,f
 16728  0749  3000               	movlw	0
 16729  074A  3DDB               	addwfc	___fladd@b+1,f
 16730  074B  3000               	movlw	0
 16731  074C  3DDC               	addwfc	___fladd@b+2,f
 16732  074D  3000               	movlw	0
 16733  074E  3DDD               	addwfc	___fladd@b+3,f
 16734  074F  2F58               	goto	l1168
 16735  0750                     l7273:	
 16736  0750  085E               	movf	___fladd@a,w
 16737  0751  02DA               	subwf	___fladd@b,f
 16738  0752  085F               	movf	___fladd@a+1,w
 16739  0753  3BDB               	subwfb	___fladd@b+1,f
 16740  0754  0860               	movf	___fladd@a+2,w
 16741  0755  3BDC               	subwfb	___fladd@b+2,f
 16742  0756  0861               	movf	___fladd@a+3,w
 16743  0757  3BDD               	subwfb	___fladd@b+3,f
 16744  0758                     l1168:	
 16745  0758  085D               	movf	___fladd@b+3,w
 16746  0759  045C               	iorwf	___fladd@b+2,w
 16747  075A  045B               	iorwf	___fladd@b+1,w
 16748  075B  045A               	iorwf	___fladd@b,w
 16749  075C  1D03               	skipz
 16750  075D  2F7E               	goto	l7295
 16751  075E  086D               	movf	___fladd@grs,w
 16752  075F  1D03               	btfss	3,2
 16753  0760  2F7E               	goto	l7295
 16754  0761  3000               	movlw	0
 16755  0762  00DD               	movwf	?___fladd+3
 16756  0763  3000               	movlw	0
 16757  0764  00DC               	movwf	?___fladd+2
 16758  0765  3000               	movlw	0
 16759  0766  00DB               	movwf	?___fladd+1
 16760  0767  3000               	movlw	0
 16761  0768  00DA               	movwf	?___fladd
 16762  0769  0008               	return
 16763  076A                     l7281:	
 16764  076A  3001               	movlw	1
 16765  076B                     u9715:	
 16766  076B  35DA               	lslf	___fladd@b,f
 16767  076C  0DDB               	rlf	___fladd@b+1,f
 16768  076D  0DDC               	rlf	___fladd@b+2,f
 16769  076E  0DDD               	rlf	___fladd@b+3,f
 16770  076F  0B89               	decfsz	9,f
 16771  0770  2F6B               	goto	u9715
 16772  0771  1BED               	btfsc	___fladd@grs,7
 16773  0772  145A               	bsf	___fladd@b,0
 16774  0773  1C6D               	btfss	___fladd@grs,0
 16775  0774  2F77               	goto	l7289
 16776  0775  1403               	setc
 16777  0776  2F78               	goto	L4
 16778  0777                     l7289:	
 16779  0777  1003               	clrc
 16780  0778                     L4:	
 16781  0778  0DED               	rlf	___fladd@grs,f
 16782  0779  086C               	movf	___fladd@bexp,w
 16783  077A  1903               	btfsc	3,2
 16784  077B  2F7E               	goto	l7295
 16785  077C  3001               	movlw	1
 16786  077D  02EC               	subwf	___fladd@bexp,f
 16787  077E                     l7295:	
 16788  077E  1FDC               	btfss	___fladd@b+2,7
 16789  077F  2F6A               	goto	l7281
 16790  0780                     l7297:	
 16791  0780  01EB               	clrf	___fladd@aexp
 16792  0781  1FED               	btfss	___fladd@grs,7
 16793  0782  2F8B               	goto	l7307
 16794  0783  086D               	movf	___fladd@grs,w
 16795  0784  397F               	andlw	127
 16796  0785  1903               	btfsc	3,2
 16797  0786  185A               	btfsc	___fladd@b,0
 16798  0787  2F89               	goto	l7303
 16799  0788  2F8B               	goto	l7307
 16800  0789                     l7303:	
 16801  0789  01EB               	clrf	___fladd@aexp
 16802  078A  0AEB               	incf	___fladd@aexp,f
 16803  078B                     l7307:	
 16804  078B  086B               	movf	___fladd@aexp,w
 16805  078C  1903               	btfsc	3,2
 16806  078D  2FB7               	goto	l1181
 16807  078E  3001               	movlw	1
 16808  078F  07DA               	addwf	___fladd@b,f
 16809  0790  3000               	movlw	0
 16810  0791  3DDB               	addwfc	___fladd@b+1,f
 16811  0792  3000               	movlw	0
 16812  0793  3DDC               	addwfc	___fladd@b+2,f
 16813  0794  3000               	movlw	0
 16814  0795  3DDD               	addwfc	___fladd@b+3,f
 16815  0796  1C5D               	btfss	___fladd@b+3,0
 16816  0797  2FB7               	goto	l1181
 16817  0798  085A               	movf	___fladd@b,w
 16818  0799  00E2               	movwf	??___fladd
 16819  079A  085B               	movf	___fladd@b+1,w
 16820  079B  00E3               	movwf	??___fladd+1
 16821  079C  085C               	movf	___fladd@b+2,w
 16822  079D  00E4               	movwf	??___fladd+2
 16823  079E  085D               	movf	___fladd@b+3,w
 16824  079F  00E5               	movwf	??___fladd+3
 16825  07A0  3001               	movlw	1
 16826  07A1  00E6               	movwf	??___fladd+4
 16827  07A2                     u9815:	
 16828  07A2  37E5               	asrf	??___fladd+3,f
 16829  07A3  0CE4               	rrf	??___fladd+2,f
 16830  07A4  0CE3               	rrf	??___fladd+1,f
 16831  07A5  0CE2               	rrf	??___fladd,f
 16832  07A6  0BE6               	decfsz	??___fladd+4,f
 16833  07A7  2FA2               	goto	u9815
 16834  07A8  0865               	movf	??___fladd+3,w
 16835  07A9  00DD               	movwf	___fladd@b+3
 16836  07AA  0864               	movf	??___fladd+2,w
 16837  07AB  00DC               	movwf	___fladd@b+2
 16838  07AC  0863               	movf	??___fladd+1,w
 16839  07AD  00DB               	movwf	___fladd@b+1
 16840  07AE  0862               	movf	??___fladd,w
 16841  07AF  00DA               	movwf	___fladd@b
 16842  07B0  0A6C               	incf	___fladd@bexp,w
 16843  07B1  1903               	btfsc	3,2
 16844  07B2  2FB7               	goto	l1181
 16845  07B3  3001               	movlw	1
 16846  07B4  00E2               	movwf	??___fladd
 16847  07B5  0862               	movf	??___fladd,w
 16848  07B6  07EC               	addwf	___fladd@bexp,f
 16849  07B7                     l1181:	
 16850  07B7  0A6C               	incf	___fladd@bexp,w
 16851  07B8  1D03               	btfss	3,2
 16852  07B9  086C               	movf	___fladd@bexp,w
 16853  07BA  1D03               	btfss	3,2
 16854  07BB  2FC7               	goto	l7325
 16855  07BC  3000               	movlw	0
 16856  07BD  00DD               	movwf	___fladd@b+3
 16857  07BE  3000               	movlw	0
 16858  07BF  00DC               	movwf	___fladd@b+2
 16859  07C0  3000               	movlw	0
 16860  07C1  00DB               	movwf	___fladd@b+1
 16861  07C2  3000               	movlw	0
 16862  07C3  00DA               	movwf	___fladd@b
 16863  07C4  086C               	movf	___fladd@bexp,w
 16864  07C5  1903               	btfsc	3,2
 16865  07C6  01EA               	clrf	___fladd@signs
 16866  07C7                     l7325:	
 16867  07C7  1C6C               	btfss	___fladd@bexp,0
 16868  07C8  2FCB               	goto	l7329
 16869  07C9  17DC               	bsf	___fladd@b+2,7
 16870  07CA  2FCF               	goto	l1189
 16871  07CB                     l7329:	
 16872  07CB  307F               	movlw	127
 16873  07CC  00E2               	movwf	??___fladd
 16874  07CD  0862               	movf	??___fladd,w
 16875  07CE  05DC               	andwf	___fladd@b+2,f
 16876  07CF                     l1189:	
 16877  07CF  366C               	lsrf	___fladd@bexp,w
 16878  07D0  00E2               	movwf	??___fladd
 16879  07D1  0862               	movf	??___fladd,w
 16880  07D2  00DD               	movwf	___fladd@b+3
 16881  07D3  1FEA               	btfss	___fladd@signs,7
 16882  07D4  0008               	return
 16883  07D5  17DD               	bsf	___fladd@b+3,7
 16884  07D6  0008               	return
 16885  07D7                     __end_of___fladd:	
 16886                           
 16887                           	psect	text54
 16888  1023                     __ptext54:	
 16889 ;; *************** function ___flmul *****************
 16890 ;; Defined at:
 16891 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;  b               4    6[BANK0 ] unsigned char 
 16894 ;;  a               4   10[BANK0 ] unsigned char 
 16895 ;; Auto vars:     Size  Location     Type
 16896 ;;  prod            4   26[BANK0 ] struct .
 16897 ;;  grs             4   21[BANK0 ] unsigned long 
 16898 ;;  temp            2   30[BANK0 ] struct .
 16899 ;;  bexp            1   25[BANK0 ] unsigned char 
 16900 ;;  aexp            1   20[BANK0 ] unsigned char 
 16901 ;;  sign            1   19[BANK0 ] unsigned char 
 16902 ;; Return value:  Size  Location     Type
 16903 ;;                  4    6[BANK0 ] unsigned char 
 16904 ;; Registers used:
 16905 ;;		wreg, status,2, status,0, pclath, cstack
 16906 ;; Tracked objects:
 16907 ;;		On entry : 0/0
 16908 ;;		On exit  : 0/0
 16909 ;;		Unchanged: 0/0
 16910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16911 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16912 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16913 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16914 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16915 ;;Total ram usage:       26 bytes
 16916 ;; Hardware stack levels used:    1
 16917 ;; Hardware stack levels required when called:    2
 16918 ;; This function calls:
 16919 ;;		__Umul8_16
 16920 ;; This function is called by:
 16921 ;;		_setShortCircuitProtection
 16922 ;;		_setOverCurrentDischargeProtection
 16923 ;;		_updateVoltages
 16924 ;;		_updateTemperatures
 16925 ;;		_logf
 16926 ;;		_updateCurrent
 16927 ;; This function uses a non-reentrant model
 16928 ;;
 16929                           
 16930                           
 16931                           ;psect for function ___flmul
 16932  1023                     ___flmul:	
 16933                           
 16934                           ;incstack = 0
 16935                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 16936  1023  0020               	movlb	0	; select bank0
 16937  1024  0829               	movf	___flmul@b+3,w
 16938  1025  3980               	andlw	128
 16939  1026  00AE               	movwf	??___flmul
 16940  1027  082E               	movf	??___flmul,w
 16941  1028  00B3               	movwf	___flmul@sign
 16942  1029  3529               	lslf	___flmul@b+3,w
 16943  102A  00AE               	movwf	??___flmul
 16944  102B  082E               	movf	??___flmul,w
 16945  102C  00B9               	movwf	___flmul@bexp
 16946  102D  1BA8               	btfsc	___flmul@b+2,7
 16947  102E  1439               	bsf	___flmul@bexp,0
 16948  102F  0839               	movf	___flmul@bexp,w
 16949  1030  1903               	btfsc	3,2
 16950  1031  283F               	goto	l7543
 16951  1032  0A39               	incf	___flmul@bexp,w
 16952  1033  1D03               	btfss	3,2
 16953  1034  283D               	goto	l7541
 16954  1035  3000               	movlw	0
 16955  1036  00A9               	movwf	___flmul@b+3
 16956  1037  3000               	movlw	0
 16957  1038  00A8               	movwf	___flmul@b+2
 16958  1039  3000               	movlw	0
 16959  103A  00A7               	movwf	___flmul@b+1
 16960  103B  3000               	movlw	0
 16961  103C  00A6               	movwf	___flmul@b
 16962  103D                     l7541:	
 16963  103D  17A8               	bsf	___flmul@b+2,7
 16964  103E  2847               	goto	l7545
 16965  103F                     l7543:	
 16966  103F  3000               	movlw	0
 16967  1040  00A9               	movwf	___flmul@b+3
 16968  1041  3000               	movlw	0
 16969  1042  00A8               	movwf	___flmul@b+2
 16970  1043  3000               	movlw	0
 16971  1044  00A7               	movwf	___flmul@b+1
 16972  1045  3000               	movlw	0
 16973  1046  00A6               	movwf	___flmul@b
 16974  1047                     l7545:	
 16975  1047  082D               	movf	___flmul@a+3,w
 16976  1048  3980               	andlw	128
 16977  1049  00AE               	movwf	??___flmul
 16978  104A  082E               	movf	??___flmul,w
 16979  104B  06B3               	xorwf	___flmul@sign,f
 16980  104C  352D               	lslf	___flmul@a+3,w
 16981  104D  00AE               	movwf	??___flmul
 16982  104E  082E               	movf	??___flmul,w
 16983  104F  00B4               	movwf	___flmul@aexp
 16984  1050  1BAC               	btfsc	___flmul@a+2,7
 16985  1051  1434               	bsf	___flmul@aexp,0
 16986  1052  0834               	movf	___flmul@aexp,w
 16987  1053  1903               	btfsc	3,2
 16988  1054  2862               	goto	l7561
 16989  1055  0A34               	incf	___flmul@aexp,w
 16990  1056  1D03               	btfss	3,2
 16991  1057  2860               	goto	l7559
 16992  1058  3000               	movlw	0
 16993  1059  00AD               	movwf	___flmul@a+3
 16994  105A  3000               	movlw	0
 16995  105B  00AC               	movwf	___flmul@a+2
 16996  105C  3000               	movlw	0
 16997  105D  00AB               	movwf	___flmul@a+1
 16998  105E  3000               	movlw	0
 16999  105F  00AA               	movwf	___flmul@a
 17000  1060                     l7559:	
 17001  1060  17AC               	bsf	___flmul@a+2,7
 17002  1061  286A               	goto	l7563
 17003  1062                     l7561:	
 17004  1062  3000               	movlw	0
 17005  1063  00AD               	movwf	___flmul@a+3
 17006  1064  3000               	movlw	0
 17007  1065  00AC               	movwf	___flmul@a+2
 17008  1066  3000               	movlw	0
 17009  1067  00AB               	movwf	___flmul@a+1
 17010  1068  3000               	movlw	0
 17011  1069  00AA               	movwf	___flmul@a
 17012  106A                     l7563:	
 17013  106A  0834               	movf	___flmul@aexp,w
 17014  106B  1D03               	btfss	3,2
 17015  106C  0839               	movf	___flmul@bexp,w
 17016  106D  1D03               	btfss	3,2
 17017  106E  2878               	goto	l7571
 17018  106F  3000               	movlw	0
 17019  1070  00A9               	movwf	?___flmul+3
 17020  1071  3000               	movlw	0
 17021  1072  00A8               	movwf	?___flmul+2
 17022  1073  3000               	movlw	0
 17023  1074  00A7               	movwf	?___flmul+1
 17024  1075  3000               	movlw	0
 17025  1076  00A6               	movwf	?___flmul
 17026  1077  0008               	return
 17027  1078                     l7571:	
 17028  1078  0826               	movf	___flmul@b,w
 17029  1079  00AE               	movwf	??___flmul
 17030  107A  082E               	movf	??___flmul,w
 17031  107B  00F1               	movwf	__Umul8_16@multiplicand
 17032  107C  082C               	movf	___flmul@a+2,w
 17033  107D  31B6  26B0  3190   	fcall	__Umul8_16
 17034  1080  0872               	movf	?__Umul8_16+1,w
 17035  1081  0020               	movlb	0	; select bank0
 17036  1082  00BF               	movwf	___flmul@temp+1
 17037  1083  0871               	movf	?__Umul8_16,w
 17038  1084  00BE               	movwf	___flmul@temp
 17039  1085  083E               	movf	___flmul@temp,w
 17040  1086  00AE               	movwf	??___flmul
 17041  1087  01AF               	clrf	??___flmul+1
 17042  1088  01B0               	clrf	??___flmul+2
 17043  1089  01B1               	clrf	??___flmul+3
 17044  108A  0831               	movf	??___flmul+3,w
 17045  108B  00B8               	movwf	___flmul@grs+3
 17046  108C  0830               	movf	??___flmul+2,w
 17047  108D  00B7               	movwf	___flmul@grs+2
 17048  108E  082F               	movf	??___flmul+1,w
 17049  108F  00B6               	movwf	___flmul@grs+1
 17050  1090  082E               	movf	??___flmul,w
 17051  1091  00B5               	movwf	___flmul@grs
 17052  1092  083F               	movf	___flmul@temp+1,w
 17053  1093  00AE               	movwf	??___flmul
 17054  1094  01AF               	clrf	??___flmul+1
 17055  1095  01B0               	clrf	??___flmul+2
 17056  1096  01B1               	clrf	??___flmul+3
 17057  1097  0831               	movf	??___flmul+3,w
 17058  1098  00BD               	movwf	___flmul@prod+3
 17059  1099  0830               	movf	??___flmul+2,w
 17060  109A  00BC               	movwf	___flmul@prod+2
 17061  109B  082F               	movf	??___flmul+1,w
 17062  109C  00BB               	movwf	___flmul@prod+1
 17063  109D  082E               	movf	??___flmul,w
 17064  109E  00BA               	movwf	___flmul@prod
 17065  109F  0827               	movf	___flmul@b+1,w
 17066  10A0  00AE               	movwf	??___flmul
 17067  10A1  082E               	movf	??___flmul,w
 17068  10A2  00F1               	movwf	__Umul8_16@multiplicand
 17069  10A3  082B               	movf	___flmul@a+1,w
 17070  10A4  31B6  26B0  3190   	fcall	__Umul8_16
 17071  10A7  0872               	movf	?__Umul8_16+1,w
 17072  10A8  0020               	movlb	0	; select bank0
 17073  10A9  00BF               	movwf	___flmul@temp+1
 17074  10AA  0871               	movf	?__Umul8_16,w
 17075  10AB  00BE               	movwf	___flmul@temp
 17076  10AC  083E               	movf	___flmul@temp,w
 17077  10AD  00AE               	movwf	??___flmul
 17078  10AE  01AF               	clrf	??___flmul+1
 17079  10AF  01B0               	clrf	??___flmul+2
 17080  10B0  01B1               	clrf	??___flmul+3
 17081  10B1  082E               	movf	??___flmul,w
 17082  10B2  07B5               	addwf	___flmul@grs,f
 17083  10B3  082F               	movf	??___flmul+1,w
 17084  10B4  3DB6               	addwfc	___flmul@grs+1,f
 17085  10B5  0830               	movf	??___flmul+2,w
 17086  10B6  3DB7               	addwfc	___flmul@grs+2,f
 17087  10B7  0831               	movf	??___flmul+3,w
 17088  10B8  3DB8               	addwfc	___flmul@grs+3,f
 17089  10B9  083F               	movf	___flmul@temp+1,w
 17090  10BA  00AE               	movwf	??___flmul
 17091  10BB  01AF               	clrf	??___flmul+1
 17092  10BC  01B0               	clrf	??___flmul+2
 17093  10BD  01B1               	clrf	??___flmul+3
 17094  10BE  082E               	movf	??___flmul,w
 17095  10BF  07BA               	addwf	___flmul@prod,f
 17096  10C0  082F               	movf	??___flmul+1,w
 17097  10C1  3DBB               	addwfc	___flmul@prod+1,f
 17098  10C2  0830               	movf	??___flmul+2,w
 17099  10C3  3DBC               	addwfc	___flmul@prod+2,f
 17100  10C4  0831               	movf	??___flmul+3,w
 17101  10C5  3DBD               	addwfc	___flmul@prod+3,f
 17102  10C6  0828               	movf	___flmul@b+2,w
 17103  10C7  00AE               	movwf	??___flmul
 17104  10C8  082E               	movf	??___flmul,w
 17105  10C9  00F1               	movwf	__Umul8_16@multiplicand
 17106  10CA  082A               	movf	___flmul@a,w
 17107  10CB  31B6  26B0  3190   	fcall	__Umul8_16
 17108  10CE  0872               	movf	?__Umul8_16+1,w
 17109  10CF  0020               	movlb	0	; select bank0
 17110  10D0  00BF               	movwf	___flmul@temp+1
 17111  10D1  0871               	movf	?__Umul8_16,w
 17112  10D2  00BE               	movwf	___flmul@temp
 17113  10D3  083E               	movf	___flmul@temp,w
 17114  10D4  00AE               	movwf	??___flmul
 17115  10D5  01AF               	clrf	??___flmul+1
 17116  10D6  01B0               	clrf	??___flmul+2
 17117  10D7  01B1               	clrf	??___flmul+3
 17118  10D8  082E               	movf	??___flmul,w
 17119  10D9  07B5               	addwf	___flmul@grs,f
 17120  10DA  082F               	movf	??___flmul+1,w
 17121  10DB  3DB6               	addwfc	___flmul@grs+1,f
 17122  10DC  0830               	movf	??___flmul+2,w
 17123  10DD  3DB7               	addwfc	___flmul@grs+2,f
 17124  10DE  0831               	movf	??___flmul+3,w
 17125  10DF  3DB8               	addwfc	___flmul@grs+3,f
 17126  10E0  083F               	movf	___flmul@temp+1,w
 17127  10E1  00AE               	movwf	??___flmul
 17128  10E2  01AF               	clrf	??___flmul+1
 17129  10E3  01B0               	clrf	??___flmul+2
 17130  10E4  01B1               	clrf	??___flmul+3
 17131  10E5  082E               	movf	??___flmul,w
 17132  10E6  07BA               	addwf	___flmul@prod,f
 17133  10E7  082F               	movf	??___flmul+1,w
 17134  10E8  3DBB               	addwfc	___flmul@prod+1,f
 17135  10E9  0830               	movf	??___flmul+2,w
 17136  10EA  3DBC               	addwfc	___flmul@prod+2,f
 17137  10EB  0831               	movf	??___flmul+3,w
 17138  10EC  3DBD               	addwfc	___flmul@prod+3,f
 17139  10ED  3008               	movlw	8
 17140  10EE                     u10355:	
 17141  10EE  35B5               	lslf	___flmul@grs,f
 17142  10EF  0DB6               	rlf	___flmul@grs+1,f
 17143  10F0  0DB7               	rlf	___flmul@grs+2,f
 17144  10F1  0DB8               	rlf	___flmul@grs+3,f
 17145  10F2  0B89               	decfsz	9,f
 17146  10F3  28EE               	goto	u10355
 17147  10F4  0827               	movf	___flmul@b+1,w
 17148  10F5  00AE               	movwf	??___flmul
 17149  10F6  082E               	movf	??___flmul,w
 17150  10F7  00F1               	movwf	__Umul8_16@multiplicand
 17151  10F8  082A               	movf	___flmul@a,w
 17152  10F9  31B6  26B0  3190   	fcall	__Umul8_16
 17153  10FC  0872               	movf	?__Umul8_16+1,w
 17154  10FD  0020               	movlb	0	; select bank0
 17155  10FE  00BF               	movwf	___flmul@temp+1
 17156  10FF  0871               	movf	?__Umul8_16,w
 17157  1100  00BE               	movwf	___flmul@temp
 17158  1101  083E               	movf	___flmul@temp,w
 17159  1102  07B5               	addwf	___flmul@grs,f
 17160  1103  083F               	movf	___flmul@temp+1,w
 17161  1104  3DB6               	addwfc	___flmul@grs+1,f
 17162  1105  3000               	movlw	0
 17163  1106  3DB7               	addwfc	___flmul@grs+2,f
 17164  1107  3DB8               	addwfc	___flmul@grs+3,f
 17165  1108  0826               	movf	___flmul@b,w
 17166  1109  00AE               	movwf	??___flmul
 17167  110A  082E               	movf	??___flmul,w
 17168  110B  00F1               	movwf	__Umul8_16@multiplicand
 17169  110C  082B               	movf	___flmul@a+1,w
 17170  110D  31B6  26B0  3190   	fcall	__Umul8_16
 17171  1110  0872               	movf	?__Umul8_16+1,w
 17172  1111  0020               	movlb	0	; select bank0
 17173  1112  00BF               	movwf	___flmul@temp+1
 17174  1113  0871               	movf	?__Umul8_16,w
 17175  1114  00BE               	movwf	___flmul@temp
 17176  1115  083E               	movf	___flmul@temp,w
 17177  1116  07B5               	addwf	___flmul@grs,f
 17178  1117  083F               	movf	___flmul@temp+1,w
 17179  1118  3DB6               	addwfc	___flmul@grs+1,f
 17180  1119  3000               	movlw	0
 17181  111A  3DB7               	addwfc	___flmul@grs+2,f
 17182  111B  3DB8               	addwfc	___flmul@grs+3,f
 17183  111C  3008               	movlw	8
 17184  111D                     u10365:	
 17185  111D  35B5               	lslf	___flmul@grs,f
 17186  111E  0DB6               	rlf	___flmul@grs+1,f
 17187  111F  0DB7               	rlf	___flmul@grs+2,f
 17188  1120  0DB8               	rlf	___flmul@grs+3,f
 17189  1121  0B89               	decfsz	9,f
 17190  1122  291D               	goto	u10365
 17191  1123  0826               	movf	___flmul@b,w
 17192  1124  00AE               	movwf	??___flmul
 17193  1125  082E               	movf	??___flmul,w
 17194  1126  00F1               	movwf	__Umul8_16@multiplicand
 17195  1127  082A               	movf	___flmul@a,w
 17196  1128  31B6  26B0  3190   	fcall	__Umul8_16
 17197  112B  0872               	movf	?__Umul8_16+1,w
 17198  112C  0020               	movlb	0	; select bank0
 17199  112D  00BF               	movwf	___flmul@temp+1
 17200  112E  0871               	movf	?__Umul8_16,w
 17201  112F  00BE               	movwf	___flmul@temp
 17202  1130  083E               	movf	___flmul@temp,w
 17203  1131  07B5               	addwf	___flmul@grs,f
 17204  1132  083F               	movf	___flmul@temp+1,w
 17205  1133  3DB6               	addwfc	___flmul@grs+1,f
 17206  1134  3000               	movlw	0
 17207  1135  3DB7               	addwfc	___flmul@grs+2,f
 17208  1136  3DB8               	addwfc	___flmul@grs+3,f
 17209  1137  0827               	movf	___flmul@b+1,w
 17210  1138  00AE               	movwf	??___flmul
 17211  1139  082E               	movf	??___flmul,w
 17212  113A  00F1               	movwf	__Umul8_16@multiplicand
 17213  113B  082C               	movf	___flmul@a+2,w
 17214  113C  31B6  26B0  3190   	fcall	__Umul8_16
 17215  113F  0872               	movf	?__Umul8_16+1,w
 17216  1140  0020               	movlb	0	; select bank0
 17217  1141  00BF               	movwf	___flmul@temp+1
 17218  1142  0871               	movf	?__Umul8_16,w
 17219  1143  00BE               	movwf	___flmul@temp
 17220  1144  083E               	movf	___flmul@temp,w
 17221  1145  07BA               	addwf	___flmul@prod,f
 17222  1146  083F               	movf	___flmul@temp+1,w
 17223  1147  3DBB               	addwfc	___flmul@prod+1,f
 17224  1148  3000               	movlw	0
 17225  1149  3DBC               	addwfc	___flmul@prod+2,f
 17226  114A  3DBD               	addwfc	___flmul@prod+3,f
 17227  114B  0828               	movf	___flmul@b+2,w
 17228  114C  00AE               	movwf	??___flmul
 17229  114D  082E               	movf	??___flmul,w
 17230  114E  00F1               	movwf	__Umul8_16@multiplicand
 17231  114F  082B               	movf	___flmul@a+1,w
 17232  1150  31B6  26B0  3190   	fcall	__Umul8_16
 17233  1153  0872               	movf	?__Umul8_16+1,w
 17234  1154  0020               	movlb	0	; select bank0
 17235  1155  00BF               	movwf	___flmul@temp+1
 17236  1156  0871               	movf	?__Umul8_16,w
 17237  1157  00BE               	movwf	___flmul@temp
 17238  1158  083E               	movf	___flmul@temp,w
 17239  1159  07BA               	addwf	___flmul@prod,f
 17240  115A  083F               	movf	___flmul@temp+1,w
 17241  115B  3DBB               	addwfc	___flmul@prod+1,f
 17242  115C  3000               	movlw	0
 17243  115D  3DBC               	addwfc	___flmul@prod+2,f
 17244  115E  3DBD               	addwfc	___flmul@prod+3,f
 17245  115F  0828               	movf	___flmul@b+2,w
 17246  1160  00AE               	movwf	??___flmul
 17247  1161  082E               	movf	??___flmul,w
 17248  1162  00F1               	movwf	__Umul8_16@multiplicand
 17249  1163  082C               	movf	___flmul@a+2,w
 17250  1164  31B6  26B0  3190   	fcall	__Umul8_16
 17251  1167  0872               	movf	?__Umul8_16+1,w
 17252  1168  0020               	movlb	0	; select bank0
 17253  1169  00BF               	movwf	___flmul@temp+1
 17254  116A  0871               	movf	?__Umul8_16,w
 17255  116B  00BE               	movwf	___flmul@temp
 17256  116C  083E               	movf	___flmul@temp,w
 17257  116D  00AE               	movwf	??___flmul
 17258  116E  083F               	movf	___flmul@temp+1,w
 17259  116F  00AF               	movwf	??___flmul+1
 17260  1170  01B0               	clrf	??___flmul+2
 17261  1171  01B1               	clrf	??___flmul+3
 17262  1172  3008               	movlw	8
 17263  1173                     u10375:	
 17264  1173  35AE               	lslf	??___flmul,f
 17265  1174  0DAF               	rlf	??___flmul+1,f
 17266  1175  0DB0               	rlf	??___flmul+2,f
 17267  1176  0DB1               	rlf	??___flmul+3,f
 17268  1177  0B89               	decfsz	9,f
 17269  1178  2973               	goto	u10375
 17270  1179  082E               	movf	??___flmul,w
 17271  117A  07BA               	addwf	___flmul@prod,f
 17272  117B  082F               	movf	??___flmul+1,w
 17273  117C  3DBB               	addwfc	___flmul@prod+1,f
 17274  117D  0830               	movf	??___flmul+2,w
 17275  117E  3DBC               	addwfc	___flmul@prod+2,f
 17276  117F  0831               	movf	??___flmul+3,w
 17277  1180  3DBD               	addwfc	___flmul@prod+3,f
 17278  1181  0835               	movf	___flmul@grs,w
 17279  1182  00AE               	movwf	??___flmul
 17280  1183  0836               	movf	___flmul@grs+1,w
 17281  1184  00AF               	movwf	??___flmul+1
 17282  1185  0837               	movf	___flmul@grs+2,w
 17283  1186  00B0               	movwf	??___flmul+2
 17284  1187  0838               	movf	___flmul@grs+3,w
 17285  1188  00B1               	movwf	??___flmul+3
 17286  1189  3018               	movlw	24
 17287  118A                     u10385:	
 17288  118A  36B1               	lsrf	??___flmul+3,f
 17289  118B  0CB0               	rrf	??___flmul+2,f
 17290  118C  0CAF               	rrf	??___flmul+1,f
 17291  118D  0CAE               	rrf	??___flmul,f
 17292  118E  0B89               	decfsz	9,f
 17293  118F  298A               	goto	u10385
 17294  1190  082E               	movf	??___flmul,w
 17295  1191  07BA               	addwf	___flmul@prod,f
 17296  1192  082F               	movf	??___flmul+1,w
 17297  1193  3DBB               	addwfc	___flmul@prod+1,f
 17298  1194  0830               	movf	??___flmul+2,w
 17299  1195  3DBC               	addwfc	___flmul@prod+2,f
 17300  1196  0831               	movf	??___flmul+3,w
 17301  1197  3DBD               	addwfc	___flmul@prod+3,f
 17302  1198  3008               	movlw	8
 17303  1199                     u10395:	
 17304  1199  35B5               	lslf	___flmul@grs,f
 17305  119A  0DB6               	rlf	___flmul@grs+1,f
 17306  119B  0DB7               	rlf	___flmul@grs+2,f
 17307  119C  0DB8               	rlf	___flmul@grs+3,f
 17308  119D  0B89               	decfsz	9,f
 17309  119E  2999               	goto	u10395
 17310  119F  0839               	movf	___flmul@bexp,w
 17311  11A0  0734               	addwf	___flmul@aexp,w
 17312  11A1  00AE               	movwf	??___flmul
 17313  11A2  01AF               	clrf	??___flmul+1
 17314  11A3  0DAF               	rlf	??___flmul+1,f
 17315  11A4  082E               	movf	??___flmul,w
 17316  11A5  3E82               	addlw	130
 17317  11A6  00BE               	movwf	___flmul@temp
 17318  11A7  30FF               	movlw	255
 17319  11A8  3D2F               	addwfc	??___flmul+1,w
 17320  11A9  00BF               	movwf	___flmul@temp+1
 17321  11AA                     l7623:	
 17322  11AA  1BBC               	btfsc	___flmul@prod+2,7
 17323  11AB  29C1               	goto	l7625
 17324  11AC  3001               	movlw	1
 17325  11AD                     u10405:	
 17326  11AD  35BA               	lslf	___flmul@prod,f
 17327  11AE  0DBB               	rlf	___flmul@prod+1,f
 17328  11AF  0DBC               	rlf	___flmul@prod+2,f
 17329  11B0  0DBD               	rlf	___flmul@prod+3,f
 17330  11B1  0B89               	decfsz	9,f
 17331  11B2  29AD               	goto	u10405
 17332  11B3  1BB8               	btfsc	___flmul@grs+3,7
 17333  11B4  143A               	bsf	___flmul@prod,0
 17334  11B5  3001               	movlw	1
 17335  11B6                     u10425:	
 17336  11B6  35B5               	lslf	___flmul@grs,f
 17337  11B7  0DB6               	rlf	___flmul@grs+1,f
 17338  11B8  0DB7               	rlf	___flmul@grs+2,f
 17339  11B9  0DB8               	rlf	___flmul@grs+3,f
 17340  11BA  0B89               	decfsz	9,f
 17341  11BB  29B6               	goto	u10425
 17342  11BC  30FF               	movlw	255
 17343  11BD  07BE               	addwf	___flmul@temp,f
 17344  11BE  30FF               	movlw	255
 17345  11BF  3DBF               	addwfc	___flmul@temp+1,f
 17346  11C0  29AA               	goto	l7623
 17347  11C1                     l7625:	
 17348  11C1  01B4               	clrf	___flmul@aexp
 17349  11C2  1FB8               	btfss	___flmul@grs+3,7
 17350  11C3  29DA               	goto	l7635
 17351  11C4  30FF               	movlw	255
 17352  11C5  0535               	andwf	___flmul@grs,w
 17353  11C6  00AE               	movwf	??___flmul
 17354  11C7  30FF               	movlw	255
 17355  11C8  0536               	andwf	___flmul@grs+1,w
 17356  11C9  00AF               	movwf	??___flmul+1
 17357  11CA  30FF               	movlw	255
 17358  11CB  0537               	andwf	___flmul@grs+2,w
 17359  11CC  00B0               	movwf	??___flmul+2
 17360  11CD  307F               	movlw	127
 17361  11CE  0538               	andwf	___flmul@grs+3,w
 17362  11CF  00B1               	movwf	??___flmul+3
 17363  11D0  0831               	movf	??___flmul+3,w
 17364  11D1  0430               	iorwf	??___flmul+2,w
 17365  11D2  042F               	iorwf	??___flmul+1,w
 17366  11D3  042E               	iorwf	??___flmul,w
 17367  11D4  1903               	skipnz
 17368  11D5  183A               	btfsc	___flmul@prod,0
 17369  11D6  29D8               	goto	l7631
 17370  11D7  29DA               	goto	l7635
 17371  11D8                     l7631:	
 17372  11D8  01B4               	clrf	___flmul@aexp
 17373  11D9  0AB4               	incf	___flmul@aexp,f
 17374  11DA                     l7635:	
 17375  11DA  0834               	movf	___flmul@aexp,w
 17376  11DB  1903               	btfsc	3,2
 17377  11DC  2A03               	goto	l7645
 17378  11DD  3001               	movlw	1
 17379  11DE  07BA               	addwf	___flmul@prod,f
 17380  11DF  3000               	movlw	0
 17381  11E0  3DBB               	addwfc	___flmul@prod+1,f
 17382  11E1  3000               	movlw	0
 17383  11E2  3DBC               	addwfc	___flmul@prod+2,f
 17384  11E3  3000               	movlw	0
 17385  11E4  3DBD               	addwfc	___flmul@prod+3,f
 17386  11E5  1C3D               	btfss	___flmul@prod+3,0
 17387  11E6  2A03               	goto	l7645
 17388  11E7  083A               	movf	___flmul@prod,w
 17389  11E8  00AE               	movwf	??___flmul
 17390  11E9  083B               	movf	___flmul@prod+1,w
 17391  11EA  00AF               	movwf	??___flmul+1
 17392  11EB  083C               	movf	___flmul@prod+2,w
 17393  11EC  00B0               	movwf	??___flmul+2
 17394  11ED  083D               	movf	___flmul@prod+3,w
 17395  11EE  00B1               	movwf	??___flmul+3
 17396  11EF  3001               	movlw	1
 17397  11F0  00B2               	movwf	??___flmul+4
 17398  11F1                     u10495:	
 17399  11F1  37B1               	asrf	??___flmul+3,f
 17400  11F2  0CB0               	rrf	??___flmul+2,f
 17401  11F3  0CAF               	rrf	??___flmul+1,f
 17402  11F4  0CAE               	rrf	??___flmul,f
 17403  11F5  0BB2               	decfsz	??___flmul+4,f
 17404  11F6  29F1               	goto	u10495
 17405  11F7  0831               	movf	??___flmul+3,w
 17406  11F8  00BD               	movwf	___flmul@prod+3
 17407  11F9  0830               	movf	??___flmul+2,w
 17408  11FA  00BC               	movwf	___flmul@prod+2
 17409  11FB  082F               	movf	??___flmul+1,w
 17410  11FC  00BB               	movwf	___flmul@prod+1
 17411  11FD  082E               	movf	??___flmul,w
 17412  11FE  00BA               	movwf	___flmul@prod
 17413  11FF  3001               	movlw	1
 17414  1200  07BE               	addwf	___flmul@temp,f
 17415  1201  3000               	movlw	0
 17416  1202  3DBF               	addwfc	___flmul@temp+1,f
 17417  1203                     l7645:	
 17418  1203  083F               	movf	___flmul@temp+1,w
 17419  1204  3A80               	xorlw	128
 17420  1205  00AE               	movwf	??___flmul
 17421  1206  3080               	movlw	128
 17422  1207  022E               	subwf	??___flmul,w
 17423  1208  1D03               	skipz
 17424  1209  2A0C               	goto	u10505
 17425  120A  30FF               	movlw	255
 17426  120B  023E               	subwf	___flmul@temp,w
 17427  120C                     u10505:	
 17428  120C  1C03               	skipc
 17429  120D  2A18               	goto	l7649
 17430  120E  307F               	movlw	127
 17431  120F  0020               	movlb	0	; select bank0
 17432  1210  00BD               	movwf	___flmul@prod+3
 17433  1211  3080               	movlw	128
 17434  1212  00BC               	movwf	___flmul@prod+2
 17435  1213  3000               	movlw	0
 17436  1214  00BB               	movwf	___flmul@prod+1
 17437  1215  3000               	movlw	0
 17438  1216  00BA               	movwf	___flmul@prod
 17439  1217  2A42               	goto	l1255
 17440  1218                     l7649:	
 17441  1218  0020               	movlb	0	; select bank0
 17442  1219  083F               	movf	___flmul@temp+1,w
 17443  121A  3A80               	xorlw	128
 17444  121B  00AE               	movwf	??___flmul
 17445  121C  3080               	movlw	128
 17446  121D  022E               	subwf	??___flmul,w
 17447  121E  1D03               	skipz
 17448  121F  2A22               	goto	u10515
 17449  1220  3001               	movlw	1
 17450  1221  023E               	subwf	___flmul@temp,w
 17451  1222                     u10515:	
 17452  1222  1803               	skipnc
 17453  1223  2A2F               	goto	l7655
 17454  1224  3000               	movlw	0
 17455  1225  0020               	movlb	0	; select bank0
 17456  1226  00BD               	movwf	___flmul@prod+3
 17457  1227  3000               	movlw	0
 17458  1228  00BC               	movwf	___flmul@prod+2
 17459  1229  3000               	movlw	0
 17460  122A  00BB               	movwf	___flmul@prod+1
 17461  122B  3000               	movlw	0
 17462  122C  00BA               	movwf	___flmul@prod
 17463  122D  01B3               	clrf	___flmul@sign
 17464  122E  2A42               	goto	l1255
 17465  122F                     l7655:	
 17466  122F  0020               	movlb	0	; select bank0
 17467  1230  083E               	movf	___flmul@temp,w
 17468  1231  00AE               	movwf	??___flmul
 17469  1232  082E               	movf	??___flmul,w
 17470  1233  00B9               	movwf	___flmul@bexp
 17471  1234  30FF               	movlw	255
 17472  1235  05BA               	andwf	___flmul@prod,f
 17473  1236  30FF               	movlw	255
 17474  1237  05BB               	andwf	___flmul@prod+1,f
 17475  1238  307F               	movlw	127
 17476  1239  05BC               	andwf	___flmul@prod+2,f
 17477  123A  3000               	movlw	0
 17478  123B  05BD               	andwf	___flmul@prod+3,f
 17479  123C  1839               	btfsc	___flmul@bexp,0
 17480  123D  17BC               	bsf	___flmul@prod+2,7
 17481  123E  3639               	lsrf	___flmul@bexp,w
 17482  123F  00AE               	movwf	??___flmul
 17483  1240  082E               	movf	??___flmul,w
 17484  1241  00BD               	movwf	___flmul@prod+3
 17485  1242                     l1255:	
 17486  1242  0833               	movf	___flmul@sign,w
 17487  1243  00AE               	movwf	??___flmul
 17488  1244  082E               	movf	??___flmul,w
 17489  1245  04BD               	iorwf	___flmul@prod+3,f
 17490  1246  083D               	movf	___flmul@prod+3,w
 17491  1247  00A9               	movwf	?___flmul+3
 17492  1248  083C               	movf	___flmul@prod+2,w
 17493  1249  00A8               	movwf	?___flmul+2
 17494  124A  083B               	movf	___flmul@prod+1,w
 17495  124B  00A7               	movwf	?___flmul+1
 17496  124C  083A               	movf	___flmul@prod,w
 17497  124D  00A6               	movwf	?___flmul
 17498  124E  0008               	return
 17499  124F                     __end_of___flmul:	
 17500                           
 17501                           	psect	text55
 17502  36B0                     __ptext55:	
 17503 ;; *************** function __Umul8_16 *****************
 17504 ;; Defined at:
 17505 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 17506 ;; Parameters:    Size  Location     Type
 17507 ;;  multiplier      1    wreg     unsigned char 
 17508 ;;  multiplicand    1    1[COMMON] unsigned char 
 17509 ;; Auto vars:     Size  Location     Type
 17510 ;;  multiplier      1    9[COMMON] unsigned char 
 17511 ;;  word_mpld       2    7[COMMON] unsigned int 
 17512 ;;  product         2    5[COMMON] unsigned int 
 17513 ;; Return value:  Size  Location     Type
 17514 ;;                  2    1[COMMON] unsigned int 
 17515 ;; Registers used:
 17516 ;;		wreg, status,2, status,0
 17517 ;; Tracked objects:
 17518 ;;		On entry : 0/0
 17519 ;;		On exit  : 0/0
 17520 ;;		Unchanged: 0/0
 17521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17523 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17524 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17525 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17526 ;;Total ram usage:        9 bytes
 17527 ;; Hardware stack levels used:    1
 17528 ;; Hardware stack levels required when called:    1
 17529 ;; This function calls:
 17530 ;;		Nothing
 17531 ;; This function is called by:
 17532 ;;		___flmul
 17533 ;; This function uses a non-reentrant model
 17534 ;;
 17535                           
 17536                           
 17537                           ;psect for function __Umul8_16
 17538  36B0                     __Umul8_16:	
 17539                           
 17540                           ;incstack = 0
 17541                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 17542                           ;__Umul8_16@multiplier stored from wreg
 17543  36B0  00F9               	movwf	__Umul8_16@multiplier
 17544  36B1  01F5               	clrf	__Umul8_16@product
 17545  36B2  01F6               	clrf	__Umul8_16@product+1
 17546  36B3  0871               	movf	__Umul8_16@multiplicand,w
 17547  36B4  00F3               	movwf	??__Umul8_16
 17548  36B5  01F4               	clrf	??__Umul8_16+1
 17549  36B6  0873               	movf	??__Umul8_16,w
 17550  36B7  00F7               	movwf	__Umul8_16@word_mpld
 17551  36B8  0874               	movf	??__Umul8_16+1,w
 17552  36B9  00F8               	movwf	__Umul8_16@word_mpld+1
 17553  36BA                     l7339:	
 17554  36BA  1C79               	btfss	__Umul8_16@multiplier,0
 17555  36BB  2EC0               	goto	l1448
 17556  36BC  0877               	movf	__Umul8_16@word_mpld,w
 17557  36BD  07F5               	addwf	__Umul8_16@product,f
 17558  36BE  0878               	movf	__Umul8_16@word_mpld+1,w
 17559  36BF  3DF6               	addwfc	__Umul8_16@product+1,f
 17560  36C0                     l1448:	
 17561  36C0  3001               	movlw	1
 17562  36C1                     u9895:	
 17563  36C1  35F7               	lslf	__Umul8_16@word_mpld,f
 17564  36C2  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 17565  36C3  0B89               	decfsz	9,f
 17566  36C4  2EC1               	goto	u9895
 17567  36C5  1003               	clrc
 17568  36C6  0CF9               	rrf	__Umul8_16@multiplier,f
 17569  36C7  0879               	movf	__Umul8_16@multiplier,w
 17570  36C8  1D03               	btfss	3,2
 17571  36C9  2EBA               	goto	l7339
 17572  36CA  0876               	movf	__Umul8_16@product+1,w
 17573  36CB  00F2               	movwf	?__Umul8_16+1
 17574  36CC  0875               	movf	__Umul8_16@product,w
 17575  36CD  00F1               	movwf	?__Umul8_16
 17576  36CE  0008               	return
 17577  36CF                     __end_of__Umul8_16:	
 17578                           
 17579                           	psect	text56
 17580  1CE2                     __ptext56:	
 17581 ;; *************** function ___fldiv *****************
 17582 ;; Defined at:
 17583 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 17584 ;; Parameters:    Size  Location     Type
 17585 ;;  a               4   32[BANK0 ] unsigned int 
 17586 ;;  b               4   36[BANK0 ] unsigned int 
 17587 ;; Auto vars:     Size  Location     Type
 17588 ;;  grs             4   52[BANK0 ] unsigned long 
 17589 ;;  rem             4   45[BANK0 ] unsigned long 
 17590 ;;  new_exp         2   50[BANK0 ] int 
 17591 ;;  aexp            1   57[BANK0 ] unsigned char 
 17592 ;;  bexp            1   56[BANK0 ] unsigned char 
 17593 ;;  sign            1   49[BANK0 ] unsigned char 
 17594 ;; Return value:  Size  Location     Type
 17595 ;;                  4   32[BANK0 ] unsigned char 
 17596 ;; Registers used:
 17597 ;;		wreg, status,2, status,0
 17598 ;; Tracked objects:
 17599 ;;		On entry : 0/0
 17600 ;;		On exit  : 0/0
 17601 ;;		Unchanged: 0/0
 17602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17603 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17604 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17605 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17606 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17607 ;;Total ram usage:       26 bytes
 17608 ;; Hardware stack levels used:    1
 17609 ;; Hardware stack levels required when called:    1
 17610 ;; This function calls:
 17611 ;;		Nothing
 17612 ;; This function is called by:
 17613 ;;		_setShortCircuitProtection
 17614 ;;		_setOverCurrentDischargeProtection
 17615 ;;		_updateVoltages
 17616 ;;		_updateTemperatures
 17617 ;;		_logf
 17618 ;;		_updateCurrent
 17619 ;;		_AFE_getSetShortCircuitCurrent
 17620 ;;		_AFE_getOverCurrentDischargeCurrent
 17621 ;; This function uses a non-reentrant model
 17622 ;;
 17623                           
 17624                           
 17625                           ;psect for function ___fldiv
 17626  1CE2                     ___fldiv:	
 17627                           
 17628                           ;incstack = 0
 17629                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 17630  1CE2  0020               	movlb	0	; select bank0
 17631  1CE3  0847               	movf	___fldiv@b+3,w
 17632  1CE4  3980               	andlw	128
 17633  1CE5  00C8               	movwf	??___fldiv
 17634  1CE6  0848               	movf	??___fldiv,w
 17635  1CE7  00D1               	movwf	___fldiv@sign
 17636  1CE8  3547               	lslf	___fldiv@b+3,w
 17637  1CE9  00C8               	movwf	??___fldiv
 17638  1CEA  0848               	movf	??___fldiv,w
 17639  1CEB  00D8               	movwf	___fldiv@bexp
 17640  1CEC  1BC6               	btfsc	___fldiv@b+2,7
 17641  1CED  1458               	bsf	___fldiv@bexp,0
 17642  1CEE  0858               	movf	___fldiv@bexp,w
 17643  1CEF  1903               	btfsc	3,2
 17644  1CF0  2CFF               	goto	l7405
 17645  1CF1  0A58               	incf	___fldiv@bexp,w
 17646  1CF2  1D03               	btfss	3,2
 17647  1CF3  2CFC               	goto	l7401
 17648  1CF4  3000               	movlw	0
 17649  1CF5  00C7               	movwf	___fldiv@b+3
 17650  1CF6  3000               	movlw	0
 17651  1CF7  00C6               	movwf	___fldiv@b+2
 17652  1CF8  3000               	movlw	0
 17653  1CF9  00C5               	movwf	___fldiv@b+1
 17654  1CFA  3000               	movlw	0
 17655  1CFB  00C4               	movwf	___fldiv@b
 17656  1CFC                     l7401:	
 17657  1CFC  17C6               	bsf	___fldiv@b+2,7
 17658  1CFD  01C7               	clrf	___fldiv@b+3
 17659  1CFE  2D07               	goto	l7407
 17660  1CFF                     l7405:	
 17661  1CFF  3000               	movlw	0
 17662  1D00  00C7               	movwf	___fldiv@b+3
 17663  1D01  3000               	movlw	0
 17664  1D02  00C6               	movwf	___fldiv@b+2
 17665  1D03  3000               	movlw	0
 17666  1D04  00C5               	movwf	___fldiv@b+1
 17667  1D05  3000               	movlw	0
 17668  1D06  00C4               	movwf	___fldiv@b
 17669  1D07                     l7407:	
 17670  1D07  0843               	movf	___fldiv@a+3,w
 17671  1D08  3980               	andlw	128
 17672  1D09  00C8               	movwf	??___fldiv
 17673  1D0A  0848               	movf	??___fldiv,w
 17674  1D0B  06D1               	xorwf	___fldiv@sign,f
 17675  1D0C  3543               	lslf	___fldiv@a+3,w
 17676  1D0D  00C8               	movwf	??___fldiv
 17677  1D0E  0848               	movf	??___fldiv,w
 17678  1D0F  00D9               	movwf	___fldiv@aexp
 17679  1D10  1BC2               	btfsc	___fldiv@a+2,7
 17680  1D11  1459               	bsf	___fldiv@aexp,0
 17681  1D12  0859               	movf	___fldiv@aexp,w
 17682  1D13  1903               	btfsc	3,2
 17683  1D14  2D23               	goto	l7425
 17684  1D15  0A59               	incf	___fldiv@aexp,w
 17685  1D16  1D03               	btfss	3,2
 17686  1D17  2D20               	goto	l7421
 17687  1D18  3000               	movlw	0
 17688  1D19  00C3               	movwf	___fldiv@a+3
 17689  1D1A  3000               	movlw	0
 17690  1D1B  00C2               	movwf	___fldiv@a+2
 17691  1D1C  3000               	movlw	0
 17692  1D1D  00C1               	movwf	___fldiv@a+1
 17693  1D1E  3000               	movlw	0
 17694  1D1F  00C0               	movwf	___fldiv@a
 17695  1D20                     l7421:	
 17696  1D20  17C2               	bsf	___fldiv@a+2,7
 17697  1D21  01C3               	clrf	___fldiv@a+3
 17698  1D22  2D2B               	goto	l1203
 17699  1D23                     l7425:	
 17700  1D23  3000               	movlw	0
 17701  1D24  00C3               	movwf	___fldiv@a+3
 17702  1D25  3000               	movlw	0
 17703  1D26  00C2               	movwf	___fldiv@a+2
 17704  1D27  3000               	movlw	0
 17705  1D28  00C1               	movwf	___fldiv@a+1
 17706  1D29  3000               	movlw	0
 17707  1D2A  00C0               	movwf	___fldiv@a
 17708  1D2B                     l1203:	
 17709  1D2B  0843               	movf	___fldiv@a+3,w
 17710  1D2C  0442               	iorwf	___fldiv@a+2,w
 17711  1D2D  0441               	iorwf	___fldiv@a+1,w
 17712  1D2E  0440               	iorwf	___fldiv@a,w
 17713  1D2F  1D03               	skipz
 17714  1D30  2D4A               	goto	l7435
 17715  1D31  3000               	movlw	0
 17716  1D32  00C7               	movwf	___fldiv@b+3
 17717  1D33  3000               	movlw	0
 17718  1D34  00C6               	movwf	___fldiv@b+2
 17719  1D35  3000               	movlw	0
 17720  1D36  00C5               	movwf	___fldiv@b+1
 17721  1D37  3000               	movlw	0
 17722  1D38  00C4               	movwf	___fldiv@b
 17723  1D39  3080               	movlw	128
 17724  1D3A  04C6               	iorwf	___fldiv@b+2,f
 17725  1D3B  307F               	movlw	127
 17726  1D3C  04C7               	iorwf	___fldiv@b+3,f
 17727  1D3D                     L5:	
 17728  1D3D  0851               	movf	___fldiv@sign,w
 17729  1D3E  00C8               	movwf	??___fldiv
 17730  1D3F  0848               	movf	??___fldiv,w
 17731  1D40  04C7               	iorwf	___fldiv@b+3,f
 17732  1D41  0847               	movf	___fldiv@b+3,w
 17733  1D42  00C3               	movwf	?___fldiv+3
 17734  1D43  0846               	movf	___fldiv@b+2,w
 17735  1D44  00C2               	movwf	?___fldiv+2
 17736  1D45  0845               	movf	___fldiv@b+1,w
 17737  1D46  00C1               	movwf	?___fldiv+1
 17738  1D47  0844               	movf	___fldiv@b,w
 17739  1D48  00C0               	movwf	?___fldiv
 17740  1D49  0008               	return
 17741  1D4A                     l7435:	
 17742  1D4A  0858               	movf	___fldiv@bexp,w
 17743  1D4B  1D03               	btfss	3,2
 17744  1D4C  2D56               	goto	l7441
 17745  1D4D  3000               	movlw	0
 17746  1D4E  00C3               	movwf	?___fldiv+3
 17747  1D4F  3000               	movlw	0
 17748  1D50  00C2               	movwf	?___fldiv+2
 17749  1D51  3000               	movlw	0
 17750  1D52  00C1               	movwf	?___fldiv+1
 17751  1D53  3000               	movlw	0
 17752  1D54  00C0               	movwf	?___fldiv
 17753  1D55  0008               	return
 17754  1D56                     l7441:	
 17755  1D56  0858               	movf	___fldiv@bexp,w
 17756  1D57  00C8               	movwf	??___fldiv
 17757  1D58  01C9               	clrf	??___fldiv+1
 17758  1D59  0849               	movf	??___fldiv+1,w
 17759  1D5A  00CB               	movwf	??___fldiv+3
 17760  1D5B  0859               	movf	___fldiv@aexp,w
 17761  1D5C  0248               	subwf	??___fldiv,w
 17762  1D5D  00CA               	movwf	??___fldiv+2
 17763  1D5E  1C03               	skipc
 17764  1D5F  03CB               	decf	??___fldiv+3,f
 17765  1D60  084A               	movf	??___fldiv+2,w
 17766  1D61  3E7F               	addlw	127
 17767  1D62  00D2               	movwf	___fldiv@new_exp
 17768  1D63  3000               	movlw	0
 17769  1D64  3D4B               	addwfc	??___fldiv+3,w
 17770  1D65  00D3               	movwf	___fldiv@new_exp+1
 17771  1D66  0847               	movf	___fldiv@b+3,w
 17772  1D67  00D0               	movwf	___fldiv@rem+3
 17773  1D68  0846               	movf	___fldiv@b+2,w
 17774  1D69  00CF               	movwf	___fldiv@rem+2
 17775  1D6A  0845               	movf	___fldiv@b+1,w
 17776  1D6B  00CE               	movwf	___fldiv@rem+1
 17777  1D6C  0844               	movf	___fldiv@b,w
 17778  1D6D  00CD               	movwf	___fldiv@rem
 17779  1D6E  3000               	movlw	0
 17780  1D6F  00C7               	movwf	___fldiv@b+3
 17781  1D70  3000               	movlw	0
 17782  1D71  00C6               	movwf	___fldiv@b+2
 17783  1D72  3000               	movlw	0
 17784  1D73  00C5               	movwf	___fldiv@b+1
 17785  1D74  3000               	movlw	0
 17786  1D75  00C4               	movwf	___fldiv@b
 17787  1D76  3000               	movlw	0
 17788  1D77  00D7               	movwf	___fldiv@grs+3
 17789  1D78  3000               	movlw	0
 17790  1D79  00D6               	movwf	___fldiv@grs+2
 17791  1D7A  3000               	movlw	0
 17792  1D7B  00D5               	movwf	___fldiv@grs+1
 17793  1D7C  3000               	movlw	0
 17794  1D7D  00D4               	movwf	___fldiv@grs
 17795  1D7E  01D9               	clrf	___fldiv@aexp
 17796  1D7F                     l7469:	
 17797  1D7F  301A               	movlw	26
 17798  1D80  0259               	subwf	___fldiv@aexp,w
 17799  1D81  1803               	btfsc	3,0
 17800  1D82  2DBB               	goto	l7471
 17801  1D83  0859               	movf	___fldiv@aexp,w
 17802  1D84  1903               	btfsc	3,2
 17803  1D85  2D9D               	goto	l7461
 17804  1D86  3001               	movlw	1
 17805  1D87                     u10075:	
 17806  1D87  35CD               	lslf	___fldiv@rem,f
 17807  1D88  0DCE               	rlf	___fldiv@rem+1,f
 17808  1D89  0DCF               	rlf	___fldiv@rem+2,f
 17809  1D8A  0DD0               	rlf	___fldiv@rem+3,f
 17810  1D8B  0B89               	decfsz	9,f
 17811  1D8C  2D87               	goto	u10075
 17812  1D8D  3001               	movlw	1
 17813  1D8E                     u10085:	
 17814  1D8E  35C4               	lslf	___fldiv@b,f
 17815  1D8F  0DC5               	rlf	___fldiv@b+1,f
 17816  1D90  0DC6               	rlf	___fldiv@b+2,f
 17817  1D91  0DC7               	rlf	___fldiv@b+3,f
 17818  1D92  0B89               	decfsz	9,f
 17819  1D93  2D8E               	goto	u10085
 17820  1D94  1BD7               	btfsc	___fldiv@grs+3,7
 17821  1D95  1444               	bsf	___fldiv@b,0
 17822  1D96  3001               	movlw	1
 17823  1D97                     u10105:	
 17824  1D97  35D4               	lslf	___fldiv@grs,f
 17825  1D98  0DD5               	rlf	___fldiv@grs+1,f
 17826  1D99  0DD6               	rlf	___fldiv@grs+2,f
 17827  1D9A  0DD7               	rlf	___fldiv@grs+3,f
 17828  1D9B  0B89               	decfsz	9,f
 17829  1D9C  2D97               	goto	u10105
 17830  1D9D                     l7461:	
 17831  1D9D  0843               	movf	___fldiv@a+3,w
 17832  1D9E  0250               	subwf	___fldiv@rem+3,w
 17833  1D9F  1D03               	skipz
 17834  1DA0  2DAB               	goto	u10115
 17835  1DA1  0842               	movf	___fldiv@a+2,w
 17836  1DA2  024F               	subwf	___fldiv@rem+2,w
 17837  1DA3  1D03               	skipz
 17838  1DA4  2DAB               	goto	u10115
 17839  1DA5  0841               	movf	___fldiv@a+1,w
 17840  1DA6  024E               	subwf	___fldiv@rem+1,w
 17841  1DA7  1D03               	skipz
 17842  1DA8  2DAB               	goto	u10115
 17843  1DA9  0840               	movf	___fldiv@a,w
 17844  1DAA  024D               	subwf	___fldiv@rem,w
 17845  1DAB                     u10115:	
 17846  1DAB  1C03               	skipc
 17847  1DAC  2DB6               	goto	l7467
 17848  1DAD  1757               	bsf	___fldiv@grs+3,6
 17849  1DAE  0840               	movf	___fldiv@a,w
 17850  1DAF  02CD               	subwf	___fldiv@rem,f
 17851  1DB0  0841               	movf	___fldiv@a+1,w
 17852  1DB1  3BCE               	subwfb	___fldiv@rem+1,f
 17853  1DB2  0842               	movf	___fldiv@a+2,w
 17854  1DB3  3BCF               	subwfb	___fldiv@rem+2,f
 17855  1DB4  0843               	movf	___fldiv@a+3,w
 17856  1DB5  3BD0               	subwfb	___fldiv@rem+3,f
 17857  1DB6                     l7467:	
 17858  1DB6  3001               	movlw	1
 17859  1DB7  00C8               	movwf	??___fldiv
 17860  1DB8  0848               	movf	??___fldiv,w
 17861  1DB9  07D9               	addwf	___fldiv@aexp,f
 17862  1DBA  2D7F               	goto	l7469
 17863  1DBB                     l7471:	
 17864  1DBB  0850               	movf	___fldiv@rem+3,w
 17865  1DBC  044F               	iorwf	___fldiv@rem+2,w
 17866  1DBD  044E               	iorwf	___fldiv@rem+1,w
 17867  1DBE  044D               	iorwf	___fldiv@rem,w
 17868  1DBF  1D03               	btfss	3,2
 17869  1DC0  1454               	bsf	___fldiv@grs,0
 17870  1DC1                     l7485:	
 17871  1DC1  1BC6               	btfsc	___fldiv@b+2,7
 17872  1DC2  2DD8               	goto	l7487
 17873  1DC3  3001               	movlw	1
 17874  1DC4                     u10145:	
 17875  1DC4  35C4               	lslf	___fldiv@b,f
 17876  1DC5  0DC5               	rlf	___fldiv@b+1,f
 17877  1DC6  0DC6               	rlf	___fldiv@b+2,f
 17878  1DC7  0DC7               	rlf	___fldiv@b+3,f
 17879  1DC8  0B89               	decfsz	9,f
 17880  1DC9  2DC4               	goto	u10145
 17881  1DCA  1BD7               	btfsc	___fldiv@grs+3,7
 17882  1DCB  1444               	bsf	___fldiv@b,0
 17883  1DCC  3001               	movlw	1
 17884  1DCD                     u10165:	
 17885  1DCD  35D4               	lslf	___fldiv@grs,f
 17886  1DCE  0DD5               	rlf	___fldiv@grs+1,f
 17887  1DCF  0DD6               	rlf	___fldiv@grs+2,f
 17888  1DD0  0DD7               	rlf	___fldiv@grs+3,f
 17889  1DD1  0B89               	decfsz	9,f
 17890  1DD2  2DCD               	goto	u10165
 17891  1DD3  30FF               	movlw	255
 17892  1DD4  07D2               	addwf	___fldiv@new_exp,f
 17893  1DD5  30FF               	movlw	255
 17894  1DD6  3DD3               	addwfc	___fldiv@new_exp+1,f
 17895  1DD7  2DC1               	goto	l7485
 17896  1DD8                     l7487:	
 17897  1DD8  01D9               	clrf	___fldiv@aexp
 17898  1DD9  1FD7               	btfss	___fldiv@grs+3,7
 17899  1DDA  2DF1               	goto	l7497
 17900  1DDB  30FF               	movlw	255
 17901  1DDC  0554               	andwf	___fldiv@grs,w
 17902  1DDD  00C8               	movwf	??___fldiv
 17903  1DDE  30FF               	movlw	255
 17904  1DDF  0555               	andwf	___fldiv@grs+1,w
 17905  1DE0  00C9               	movwf	??___fldiv+1
 17906  1DE1  30FF               	movlw	255
 17907  1DE2  0556               	andwf	___fldiv@grs+2,w
 17908  1DE3  00CA               	movwf	??___fldiv+2
 17909  1DE4  307F               	movlw	127
 17910  1DE5  0557               	andwf	___fldiv@grs+3,w
 17911  1DE6  00CB               	movwf	??___fldiv+3
 17912  1DE7  084B               	movf	??___fldiv+3,w
 17913  1DE8  044A               	iorwf	??___fldiv+2,w
 17914  1DE9  0449               	iorwf	??___fldiv+1,w
 17915  1DEA  0448               	iorwf	??___fldiv,w
 17916  1DEB  1903               	skipnz
 17917  1DEC  1844               	btfsc	___fldiv@b,0
 17918  1DED  2DEF               	goto	l7493
 17919  1DEE  2DF1               	goto	l7497
 17920  1DEF                     l7493:	
 17921  1DEF  01D9               	clrf	___fldiv@aexp
 17922  1DF0  0AD9               	incf	___fldiv@aexp,f
 17923  1DF1                     l7497:	
 17924  1DF1  0859               	movf	___fldiv@aexp,w
 17925  1DF2  1903               	btfsc	3,2
 17926  1DF3  2E1A               	goto	l7507
 17927  1DF4  3001               	movlw	1
 17928  1DF5  07C4               	addwf	___fldiv@b,f
 17929  1DF6  3000               	movlw	0
 17930  1DF7  3DC5               	addwfc	___fldiv@b+1,f
 17931  1DF8  3000               	movlw	0
 17932  1DF9  3DC6               	addwfc	___fldiv@b+2,f
 17933  1DFA  3000               	movlw	0
 17934  1DFB  3DC7               	addwfc	___fldiv@b+3,f
 17935  1DFC  1C47               	btfss	___fldiv@b+3,0
 17936  1DFD  2E1A               	goto	l7507
 17937  1DFE  0844               	movf	___fldiv@b,w
 17938  1DFF  00C8               	movwf	??___fldiv
 17939  1E00  0845               	movf	___fldiv@b+1,w
 17940  1E01  00C9               	movwf	??___fldiv+1
 17941  1E02  0846               	movf	___fldiv@b+2,w
 17942  1E03  00CA               	movwf	??___fldiv+2
 17943  1E04  0847               	movf	___fldiv@b+3,w
 17944  1E05  00CB               	movwf	??___fldiv+3
 17945  1E06  3001               	movlw	1
 17946  1E07  00CC               	movwf	??___fldiv+4
 17947  1E08                     u10235:	
 17948  1E08  37CB               	asrf	??___fldiv+3,f
 17949  1E09  0CCA               	rrf	??___fldiv+2,f
 17950  1E0A  0CC9               	rrf	??___fldiv+1,f
 17951  1E0B  0CC8               	rrf	??___fldiv,f
 17952  1E0C  0BCC               	decfsz	??___fldiv+4,f
 17953  1E0D  2E08               	goto	u10235
 17954  1E0E  084B               	movf	??___fldiv+3,w
 17955  1E0F  00C7               	movwf	___fldiv@b+3
 17956  1E10  084A               	movf	??___fldiv+2,w
 17957  1E11  00C6               	movwf	___fldiv@b+2
 17958  1E12  0849               	movf	??___fldiv+1,w
 17959  1E13  00C5               	movwf	___fldiv@b+1
 17960  1E14  0848               	movf	??___fldiv,w
 17961  1E15  00C4               	movwf	___fldiv@b
 17962  1E16  3001               	movlw	1
 17963  1E17  07D2               	addwf	___fldiv@new_exp,f
 17964  1E18  3000               	movlw	0
 17965  1E19  3DD3               	addwfc	___fldiv@new_exp+1,f
 17966  1E1A                     l7507:	
 17967  1E1A  0853               	movf	___fldiv@new_exp+1,w
 17968  1E1B  3A80               	xorlw	128
 17969  1E1C  00C8               	movwf	??___fldiv
 17970  1E1D  3080               	movlw	128
 17971  1E1E  0248               	subwf	??___fldiv,w
 17972  1E1F  1D03               	skipz
 17973  1E20  2E23               	goto	u10245
 17974  1E21  30FF               	movlw	255
 17975  1E22  0252               	subwf	___fldiv@new_exp,w
 17976  1E23                     u10245:	
 17977  1E23  1C03               	skipc
 17978  1E24  2E32               	goto	l1224
 17979  1E25  30FF               	movlw	255
 17980  1E26  0020               	movlb	0	; select bank0
 17981  1E27  00D2               	movwf	___fldiv@new_exp
 17982  1E28  3000               	movlw	0
 17983  1E29  00D3               	movwf	___fldiv@new_exp+1
 17984  1E2A  3000               	movlw	0
 17985  1E2B  00C7               	movwf	___fldiv@b+3
 17986  1E2C  3000               	movlw	0
 17987  1E2D  00C6               	movwf	___fldiv@b+2
 17988  1E2E  3000               	movlw	0
 17989  1E2F  00C5               	movwf	___fldiv@b+1
 17990  1E30  3000               	movlw	0
 17991  1E31  00C4               	movwf	___fldiv@b
 17992  1E32                     l1224:	
 17993  1E32  0020               	movlb	0	; select bank0
 17994  1E33  0853               	movf	___fldiv@new_exp+1,w
 17995  1E34  3A80               	xorlw	128
 17996  1E35  00C8               	movwf	??___fldiv
 17997  1E36  3080               	movlw	128
 17998  1E37  0248               	subwf	??___fldiv,w
 17999  1E38  1D03               	skipz
 18000  1E39  2E3C               	goto	u10255
 18001  1E3A  3001               	movlw	1
 18002  1E3B  0252               	subwf	___fldiv@new_exp,w
 18003  1E3C                     u10255:	
 18004  1E3C  1803               	skipnc
 18005  1E3D  2E4A               	goto	l1225
 18006  1E3E  0020               	movlb	0	; select bank0
 18007  1E3F  01D2               	clrf	___fldiv@new_exp
 18008  1E40  01D3               	clrf	___fldiv@new_exp+1
 18009  1E41  3000               	movlw	0
 18010  1E42  00C7               	movwf	___fldiv@b+3
 18011  1E43  3000               	movlw	0
 18012  1E44  00C6               	movwf	___fldiv@b+2
 18013  1E45  3000               	movlw	0
 18014  1E46  00C5               	movwf	___fldiv@b+1
 18015  1E47  3000               	movlw	0
 18016  1E48  00C4               	movwf	___fldiv@b
 18017  1E49  01D1               	clrf	___fldiv@sign
 18018  1E4A                     l1225:	
 18019  1E4A  0020               	movlb	0	; select bank0
 18020  1E4B  0852               	movf	___fldiv@new_exp,w
 18021  1E4C  00C8               	movwf	??___fldiv
 18022  1E4D  0848               	movf	??___fldiv,w
 18023  1E4E  00D8               	movwf	___fldiv@bexp
 18024  1E4F  1C58               	btfss	___fldiv@bexp,0
 18025  1E50  2E53               	goto	l7521
 18026  1E51  17C6               	bsf	___fldiv@b+2,7
 18027  1E52  2E57               	goto	l1227
 18028  1E53                     l7521:	
 18029  1E53  307F               	movlw	127
 18030  1E54  00C8               	movwf	??___fldiv
 18031  1E55  0848               	movf	??___fldiv,w
 18032  1E56  05C6               	andwf	___fldiv@b+2,f
 18033  1E57                     l1227:	
 18034  1E57  3658               	lsrf	___fldiv@bexp,w
 18035  1E58  00C8               	movwf	??___fldiv
 18036  1E59  0848               	movf	??___fldiv,w
 18037  1E5A  00C7               	movwf	___fldiv@b+3
 18038  1E5B  2D3D               	goto	L5
 18039  1E5C                     __end_of___fldiv:	
 18040                           
 18041                           	psect	text57
 18042  2A2E                     __ptext57:	
 18043 ;; *************** function ___fltol *****************
 18044 ;; Defined at:
 18045 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18046 ;; Parameters:    Size  Location     Type
 18047 ;;  f1              4    8[BANK1 ] unsigned char 
 18048 ;; Auto vars:     Size  Location     Type
 18049 ;;  exp1            1   11[COMMON] unsigned char 
 18050 ;;  sign1           1   10[COMMON] unsigned char 
 18051 ;; Return value:  Size  Location     Type
 18052 ;;                  4    8[BANK1 ] long 
 18053 ;; Registers used:
 18054 ;;		wreg, status,2, status,0
 18055 ;; Tracked objects:
 18056 ;;		On entry : 0/0
 18057 ;;		On exit  : 0/0
 18058 ;;		Unchanged: 0/0
 18059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18060 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18061 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18062 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18063 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18064 ;;Total ram usage:       11 bytes
 18065 ;; Hardware stack levels used:    1
 18066 ;; Hardware stack levels required when called:    1
 18067 ;; This function calls:
 18068 ;;		Nothing
 18069 ;; This function is called by:
 18070 ;;		_updateVoltages
 18071 ;;		_updateTemperatures
 18072 ;;		_updateCurrent
 18073 ;;		_AFE_getSetShortCircuitCurrent
 18074 ;;		_AFE_getOverCurrentDischargeCurrent
 18075 ;; This function uses a non-reentrant model
 18076 ;;
 18077                           
 18078                           
 18079                           ;psect for function ___fltol
 18080  2A2E                     ___fltol:	
 18081                           
 18082                           ;incstack = 0
 18083                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18084  2A2E  1003               	clrc
 18085  2A2F  0021               	movlb	1	; select bank1
 18086  2A30  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 18087  2A31  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 18088  2A32  00AC               	movwf	??___fltol^(0+128)
 18089  2A33  082C               	movf	??___fltol^(0+128),w
 18090  2A34  00FB               	movwf	___fltol@exp1
 18091  2A35  087B               	movf	___fltol@exp1,w
 18092  2A36  1D03               	btfss	3,2
 18093  2A37  2A41               	goto	l7909
 18094  2A38                     l7905:	
 18095  2A38  3000               	movlw	0
 18096  2A39  00AB               	movwf	(?___fltol+3)^(0+128)
 18097  2A3A  3000               	movlw	0
 18098  2A3B  00AA               	movwf	(?___fltol+2)^(0+128)
 18099  2A3C  3000               	movlw	0
 18100  2A3D  00A9               	movwf	(?___fltol+1)^(0+128)
 18101  2A3E  3000               	movlw	0
 18102  2A3F  00A8               	movwf	?___fltol^(0+128)
 18103  2A40  0008               	return
 18104  2A41                     l7909:	
 18105  2A41  0828               	movf	___fltol@f1^(0+128),w
 18106  2A42  00AC               	movwf	??___fltol^(0+128)
 18107  2A43  0829               	movf	(___fltol@f1+1)^(0+128),w
 18108  2A44  00AD               	movwf	(??___fltol^(0+128)+1)
 18109  2A45  082A               	movf	(___fltol@f1+2)^(0+128),w
 18110  2A46  00AE               	movwf	(??___fltol^(0+128)+2)
 18111  2A47  082B               	movf	(___fltol@f1+3)^(0+128),w
 18112  2A48  00AF               	movwf	(??___fltol^(0+128)+3)
 18113  2A49  301F               	movlw	31
 18114  2A4A                     u10985:	
 18115  2A4A  36AF               	lsrf	(??___fltol^(0+128)+3),f
 18116  2A4B  0CAE               	rrf	(??___fltol^(0+128)+2),f
 18117  2A4C  0CAD               	rrf	(??___fltol^(0+128)+1),f
 18118  2A4D  0CAC               	rrf	??___fltol^(0+128),f
 18119  2A4E  0B89               	decfsz	9,f
 18120  2A4F  2A4A               	goto	u10985
 18121  2A50  082C               	movf	??___fltol^(0+128),w
 18122  2A51  00B0               	movwf	(??___fltol+4)^(0+128)
 18123  2A52  0830               	movf	(??___fltol+4)^(0+128),w
 18124  2A53  00FA               	movwf	___fltol@sign1
 18125  2A54  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 18126  2A55  30FF               	movlw	255
 18127  2A56  05A8               	andwf	___fltol@f1^(0+128),f
 18128  2A57  30FF               	movlw	255
 18129  2A58  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 18130  2A59  30FF               	movlw	255
 18131  2A5A  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 18132  2A5B  3000               	movlw	0
 18133  2A5C  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 18134  2A5D  3096               	movlw	150
 18135  2A5E  02FB               	subwf	___fltol@exp1,f
 18136  2A5F  1FFB               	btfss	___fltol@exp1,7
 18137  2A60  2A74               	goto	l7927
 18138  2A61  087B               	movf	___fltol@exp1,w
 18139  2A62  3A80               	xorlw	128
 18140  2A63  3E97               	addlw	151
 18141  2A64  1C03               	btfss	3,0
 18142  2A65  2A38               	goto	l7905
 18143  2A66                     l7925:	
 18144  2A66  3001               	movlw	1
 18145  2A67                     u11015:	
 18146  2A67  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 18147  2A68  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 18148  2A69  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 18149  2A6A  0CA8               	rrf	___fltol@f1^(0+128),f
 18150  2A6B  0B89               	decfsz	9,f
 18151  2A6C  2A67               	goto	u11015
 18152  2A6D  3001               	movlw	1
 18153  2A6E  00AC               	movwf	??___fltol^(0+128)
 18154  2A6F  082C               	movf	??___fltol^(0+128),w
 18155  2A70  07FB               	addwf	___fltol@exp1,f
 18156  2A71  1903               	btfsc	3,2
 18157  2A72  2A85               	goto	l7935
 18158  2A73  2A66               	goto	l7925
 18159  2A74                     l7927:	
 18160  2A74  3020               	movlw	32
 18161  2A75  027B               	subwf	___fltol@exp1,w
 18162  2A76  1803               	btfsc	3,0
 18163  2A77  2A38               	goto	l7905
 18164  2A78                     l1047:	
 18165  2A78  087B               	movf	___fltol@exp1,w
 18166  2A79  1903               	btfsc	3,2
 18167  2A7A  2A85               	goto	l7935
 18168  2A7B  3001               	movlw	1
 18169  2A7C                     u11045:	
 18170  2A7C  35A8               	lslf	___fltol@f1^(0+128),f
 18171  2A7D  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 18172  2A7E  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 18173  2A7F  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 18174  2A80  0B89               	decfsz	9,f
 18175  2A81  2A7C               	goto	u11045
 18176  2A82  3001               	movlw	1
 18177  2A83  02FB               	subwf	___fltol@exp1,f
 18178  2A84  2A78               	goto	l1047
 18179  2A85                     l7935:	
 18180  2A85  087A               	movf	___fltol@sign1,w
 18181  2A86  1903               	btfsc	3,2
 18182  2A87  0008               	return
 18183  2A88  09A8               	comf	___fltol@f1^(0+128),f
 18184  2A89  09A9               	comf	(___fltol@f1+1)^(0+128),f
 18185  2A8A  09AA               	comf	(___fltol@f1+2)^(0+128),f
 18186  2A8B  09AB               	comf	(___fltol@f1+3)^(0+128),f
 18187  2A8C  0AA8               	incf	___fltol@f1^(0+128),f
 18188  2A8D  1903               	skipnz
 18189  2A8E  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 18190  2A8F  1903               	skipnz
 18191  2A90  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 18192  2A91  1903               	skipnz
 18193  2A92  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 18194  2A93  0008               	return
 18195  2A94                     __end_of___fltol:	
 18196                           
 18197                           	psect	text58
 18198  2866                     __ptext58:	
 18199 ;; *************** function _enableDischarging *****************
 18200 ;; Defined at:
 18201 ;;		line 270 in file "BQ76920.c"
 18202 ;; Parameters:    Size  Location     Type
 18203 ;;  enable          2    0[BANK0 ] unsigned int 
 18204 ;; Auto vars:     Size  Location     Type
 18205 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 18206 ;; Return value:  Size  Location     Type
 18207 ;;                  1    wreg      void 
 18208 ;; Registers used:
 18209 ;;		wreg, status,2, status,0, pclath, cstack
 18210 ;; Tracked objects:
 18211 ;;		On entry : 0/0
 18212 ;;		On exit  : 0/0
 18213 ;;		Unchanged: 0/0
 18214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18217 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18218 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18219 ;;Total ram usage:        5 bytes
 18220 ;; Hardware stack levels used:    1
 18221 ;; Hardware stack levels required when called:    3
 18222 ;; This function calls:
 18223 ;;		_I2C_writeRegister
 18224 ;;		_readRegister
 18225 ;; This function is called by:
 18226 ;;		_AFE_UPDATE
 18227 ;; This function uses a non-reentrant model
 18228 ;;
 18229                           
 18230                           
 18231                           ;psect for function _enableDischarging
 18232  2866                     _enableDischarging:	
 18233                           
 18234                           ;BQ76920.c: 271:     uint8_t sys_ctrl2;;BQ76920.c: 272:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 18235                           
 18236                           ;incstack = 0
 18237                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 18238  2866  3018               	movlw	24
 18239  2867  00F5               	movwf	readRegister@slaveAddress
 18240  2868  3000               	movlw	0
 18241  2869  00F6               	movwf	readRegister@slaveAddress+1
 18242  286A  3005               	movlw	5
 18243  286B  00F7               	movwf	readRegister@regAddress
 18244  286C  3000               	movlw	0
 18245  286D  00F8               	movwf	readRegister@regAddress+1
 18246  286E  31B7  27CA  31A8   	fcall	_readRegister
 18247  2871  0875               	movf	?_readRegister,w
 18248  2872  0020               	movlb	0	; select bank0
 18249  2873  00A2               	movwf	??_enableDischarging
 18250  2874  0822               	movf	??_enableDischarging,w
 18251  2875  00FB               	movwf	enableDischarging@sys_ctrl2
 18252                           
 18253                           ;BQ76920.c: 273:     if(enable){
 18254  2876  0820               	movf	enableDischarging@enable,w
 18255  2877  0421               	iorwf	enableDischarging@enable+1,w
 18256  2878  1903               	btfsc	3,2
 18257  2879  288A               	goto	l8203
 18258                           
 18259                           ;BQ76920.c: 274:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 18260  287A  3018               	movlw	24
 18261  287B  00F5               	movwf	I2C_writeRegister@slaveAddress
 18262  287C  3000               	movlw	0
 18263  287D  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18264  287E  3005               	movlw	5
 18265  287F  00F7               	movwf	I2C_writeRegister@regAddress
 18266  2880  3000               	movlw	0
 18267  2881  00F8               	movwf	I2C_writeRegister@regAddress+1
 18268  2882  3002               	movlw	2
 18269  2883  047B               	iorwf	enableDischarging@sys_ctrl2,w
 18270  2884  00F9               	movwf	I2C_writeRegister@data
 18271  2885  3000               	movlw	0
 18272  2886  00FA               	movwf	I2C_writeRegister@data+1
 18273  2887  31B6  2692         	fcall	_I2C_writeRegister
 18274                           
 18275                           ;BQ76920.c: 275:     }else{
 18276  2889  0008               	return
 18277  288A                     l8203:	
 18278                           
 18279                           ;BQ76920.c: 276:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 18280  288A  3018               	movlw	24
 18281  288B  00F5               	movwf	I2C_writeRegister@slaveAddress
 18282  288C  3000               	movlw	0
 18283  288D  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18284  288E  3005               	movlw	5
 18285  288F  00F7               	movwf	I2C_writeRegister@regAddress
 18286  2890  3000               	movlw	0
 18287  2891  00F8               	movwf	I2C_writeRegister@regAddress+1
 18288  2892  087B               	movf	enableDischarging@sys_ctrl2,w
 18289  2893  39FD               	andlw	253
 18290  2894  00A2               	movwf	??_enableDischarging
 18291  2895  01A3               	clrf	??_enableDischarging+1
 18292  2896  0822               	movf	??_enableDischarging,w
 18293  2897  00F9               	movwf	I2C_writeRegister@data
 18294  2898  0823               	movf	??_enableDischarging+1,w
 18295  2899  00FA               	movwf	I2C_writeRegister@data+1
 18296  289A  31B6  2692         	fcall	_I2C_writeRegister
 18297  289C  0008               	return
 18298  289D                     __end_of_enableDischarging:	
 18299                           
 18300                           	psect	text59
 18301  282F                     __ptext59:	
 18302 ;; *************** function _enableCharging *****************
 18303 ;; Defined at:
 18304 ;;		line 280 in file "BQ76920.c"
 18305 ;; Parameters:    Size  Location     Type
 18306 ;;  enable          2    0[BANK0 ] unsigned int 
 18307 ;; Auto vars:     Size  Location     Type
 18308 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 18309 ;; Return value:  Size  Location     Type
 18310 ;;                  1    wreg      void 
 18311 ;; Registers used:
 18312 ;;		wreg, status,2, status,0, pclath, cstack
 18313 ;; Tracked objects:
 18314 ;;		On entry : 0/0
 18315 ;;		On exit  : 0/0
 18316 ;;		Unchanged: 0/0
 18317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18320 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18321 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18322 ;;Total ram usage:        5 bytes
 18323 ;; Hardware stack levels used:    1
 18324 ;; Hardware stack levels required when called:    3
 18325 ;; This function calls:
 18326 ;;		_I2C_writeRegister
 18327 ;;		_readRegister
 18328 ;; This function is called by:
 18329 ;;		_AFE_UPDATE
 18330 ;; This function uses a non-reentrant model
 18331 ;;
 18332                           
 18333                           
 18334                           ;psect for function _enableCharging
 18335  282F                     _enableCharging:	
 18336                           
 18337                           ;BQ76920.c: 281:     uint8_t sys_ctrl2;;BQ76920.c: 282:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 18338                           
 18339                           ;incstack = 0
 18340                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 18341  282F  3018               	movlw	24
 18342  2830  00F5               	movwf	readRegister@slaveAddress
 18343  2831  3000               	movlw	0
 18344  2832  00F6               	movwf	readRegister@slaveAddress+1
 18345  2833  3005               	movlw	5
 18346  2834  00F7               	movwf	readRegister@regAddress
 18347  2835  3000               	movlw	0
 18348  2836  00F8               	movwf	readRegister@regAddress+1
 18349  2837  31B7  27CA  31A8   	fcall	_readRegister
 18350  283A  0875               	movf	?_readRegister,w
 18351  283B  0020               	movlb	0	; select bank0
 18352  283C  00A2               	movwf	??_enableCharging
 18353  283D  0822               	movf	??_enableCharging,w
 18354  283E  00FB               	movwf	enableCharging@sys_ctrl2
 18355                           
 18356                           ;BQ76920.c: 283:     if(enable){
 18357  283F  0820               	movf	enableCharging@enable,w
 18358  2840  0421               	iorwf	enableCharging@enable+1,w
 18359  2841  1903               	btfsc	3,2
 18360  2842  2853               	goto	l8211
 18361                           
 18362                           ;BQ76920.c: 284:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 18363  2843  3018               	movlw	24
 18364  2844  00F5               	movwf	I2C_writeRegister@slaveAddress
 18365  2845  3000               	movlw	0
 18366  2846  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18367  2847  3005               	movlw	5
 18368  2848  00F7               	movwf	I2C_writeRegister@regAddress
 18369  2849  3000               	movlw	0
 18370  284A  00F8               	movwf	I2C_writeRegister@regAddress+1
 18371  284B  3001               	movlw	1
 18372  284C  047B               	iorwf	enableCharging@sys_ctrl2,w
 18373  284D  00F9               	movwf	I2C_writeRegister@data
 18374  284E  3000               	movlw	0
 18375  284F  00FA               	movwf	I2C_writeRegister@data+1
 18376  2850  31B6  2692         	fcall	_I2C_writeRegister
 18377                           
 18378                           ;BQ76920.c: 285:     }else{
 18379  2852  0008               	return
 18380  2853                     l8211:	
 18381                           
 18382                           ;BQ76920.c: 286:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 18383  2853  3018               	movlw	24
 18384  2854  00F5               	movwf	I2C_writeRegister@slaveAddress
 18385  2855  3000               	movlw	0
 18386  2856  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18387  2857  3005               	movlw	5
 18388  2858  00F7               	movwf	I2C_writeRegister@regAddress
 18389  2859  3000               	movlw	0
 18390  285A  00F8               	movwf	I2C_writeRegister@regAddress+1
 18391  285B  087B               	movf	enableCharging@sys_ctrl2,w
 18392  285C  39FE               	andlw	254
 18393  285D  00A2               	movwf	??_enableCharging
 18394  285E  01A3               	clrf	??_enableCharging+1
 18395  285F  0822               	movf	??_enableCharging,w
 18396  2860  00F9               	movwf	I2C_writeRegister@data
 18397  2861  0823               	movf	??_enableCharging+1,w
 18398  2862  00FA               	movwf	I2C_writeRegister@data+1
 18399  2863  31B6  2692         	fcall	_I2C_writeRegister
 18400  2865  0008               	return
 18401  2866                     __end_of_enableCharging:	
 18402                           
 18403                           	psect	text60
 18404  37CA                     __ptext60:	
 18405 ;; *************** function _readRegister *****************
 18406 ;; Defined at:
 18407 ;;		line 115 in file "I2C.c"
 18408 ;; Parameters:    Size  Location     Type
 18409 ;;  slaveAddress    2    5[COMMON] int 
 18410 ;;  regAddress      2    7[COMMON] int 
 18411 ;; Auto vars:     Size  Location     Type
 18412 ;;  recievedData    2    9[COMMON] int 
 18413 ;; Return value:  Size  Location     Type
 18414 ;;                  2    5[COMMON] int 
 18415 ;; Registers used:
 18416 ;;		wreg, status,2, status,0, pclath, cstack
 18417 ;; Tracked objects:
 18418 ;;		On entry : 0/0
 18419 ;;		On exit  : 0/0
 18420 ;;		Unchanged: 0/0
 18421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18422 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18423 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18425 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18426 ;;Total ram usage:        6 bytes
 18427 ;; Hardware stack levels used:    1
 18428 ;; Hardware stack levels required when called:    2
 18429 ;; This function calls:
 18430 ;;		_read_I2C_data
 18431 ;;		_send_I2C_NACK
 18432 ;;		_send_I2C_controlByte
 18433 ;;		_send_I2C_data
 18434 ;;		_send_I2C_startBit
 18435 ;;		_send_I2C_stopBit
 18436 ;; This function is called by:
 18437 ;;		_beginAFEcommunication
 18438 ;;		_setCellUndervoltageProtection
 18439 ;;		_setCellOvervoltageProtection
 18440 ;;		_updateVoltages
 18441 ;;		_updateTemperatures
 18442 ;;		_enableDischarging
 18443 ;;		_enableCharging
 18444 ;;		_printcellParameters
 18445 ;;		_updateCurrent
 18446 ;;		_printotAFERegisters
 18447 ;; This function uses a non-reentrant model
 18448 ;;
 18449                           
 18450                           
 18451                           ;psect for function _readRegister
 18452  37CA                     _readRegister:	
 18453                           
 18454                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 18455                           
 18456                           ;incstack = 0
 18457                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 18458  37CA  31B4  24FE  31B7   	fcall	_send_I2C_startBit
 18459                           
 18460                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 18461  37CD  0876               	movf	readRegister@slaveAddress+1,w
 18462  37CE  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18463  37CF  0875               	movf	readRegister@slaveAddress,w
 18464  37D0  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18465  37D1  3000               	movlw	0
 18466  37D2  00F3               	movwf	send_I2C_controlByte@RW_bit
 18467  37D3  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18468  37D4  31B5  2532  31B7   	fcall	_send_I2C_controlByte
 18469                           
 18470                           ;I2C.c: 119:     send_I2C_data(regAddress);
 18471  37D7  0878               	movf	readRegister@regAddress+1,w
 18472  37D8  00F2               	movwf	send_I2C_data@databyte+1
 18473  37D9  0877               	movf	readRegister@regAddress,w
 18474  37DA  00F1               	movwf	send_I2C_data@databyte
 18475  37DB  31B5  2517  31B7   	fcall	_send_I2C_data
 18476                           
 18477                           ;I2C.c: 120:     send_I2C_stopBit();
 18478  37DE  31B5  2506  31B7   	fcall	_send_I2C_stopBit
 18479                           
 18480                           ;I2C.c: 121:     send_I2C_startBit();
 18481  37E1  31B4  24FE  31B7   	fcall	_send_I2C_startBit
 18482                           
 18483                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 18484  37E4  0876               	movf	readRegister@slaveAddress+1,w
 18485  37E5  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18486  37E6  0875               	movf	readRegister@slaveAddress,w
 18487  37E7  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18488  37E8  3001               	movlw	1
 18489  37E9  00F3               	movwf	send_I2C_controlByte@RW_bit
 18490  37EA  3000               	movlw	0
 18491  37EB  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18492  37EC  31B5  2532  31B7   	fcall	_send_I2C_controlByte
 18493                           
 18494                           ;I2C.c: 123:     recievedData = read_I2C_data();
 18495  37EF  31B5  2557  31B7   	fcall	_read_I2C_data
 18496  37F2  0872               	movf	?_read_I2C_data+1,w
 18497  37F3  00FA               	movwf	readRegister@recievedData+1
 18498  37F4  0871               	movf	?_read_I2C_data,w
 18499  37F5  00F9               	movwf	readRegister@recievedData
 18500                           
 18501                           ;I2C.c: 124:     send_I2C_NACK();
 18502  37F6  31B5  2520  31B7   	fcall	_send_I2C_NACK
 18503                           
 18504                           ;I2C.c: 125:     send_I2C_stopBit();
 18505  37F9  31B5  2506         	fcall	_send_I2C_stopBit
 18506                           
 18507                           ;I2C.c: 126:     return recievedData;
 18508  37FB  087A               	movf	readRegister@recievedData+1,w
 18509  37FC  00F6               	movwf	?_readRegister+1
 18510  37FD  0879               	movf	readRegister@recievedData,w
 18511  37FE  00F5               	movwf	?_readRegister
 18512  37FF  0008               	return
 18513  3800                     __end_of_readRegister:	
 18514                           
 18515                           	psect	text61
 18516  3520                     __ptext61:	
 18517 ;; *************** function _send_I2C_NACK *****************
 18518 ;; Defined at:
 18519 ;;		line 91 in file "I2C.c"
 18520 ;; Parameters:    Size  Location     Type
 18521 ;;		None
 18522 ;; Auto vars:     Size  Location     Type
 18523 ;;		None
 18524 ;; Return value:  Size  Location     Type
 18525 ;;                  1    wreg      void 
 18526 ;; Registers used:
 18527 ;;		None
 18528 ;; Tracked objects:
 18529 ;;		On entry : 0/0
 18530 ;;		On exit  : 0/0
 18531 ;;		Unchanged: 0/0
 18532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18537 ;;Total ram usage:        0 bytes
 18538 ;; Hardware stack levels used:    1
 18539 ;; Hardware stack levels required when called:    1
 18540 ;; This function calls:
 18541 ;;		Nothing
 18542 ;; This function is called by:
 18543 ;;		_readRegister
 18544 ;; This function uses a non-reentrant model
 18545 ;;
 18546                           
 18547                           
 18548                           ;psect for function _send_I2C_NACK
 18549  3520                     _send_I2C_NACK:	
 18550                           
 18551                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 18552                           
 18553                           ;incstack = 0
 18554                           ; Regs used in _send_I2C_NACK: []
 18555  3520  0020               	movlb	0	; select bank0
 18556  3521  1191               	bcf	17,3	;volatile
 18557                           
 18558                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 18559  3522  0024               	movlb	4	; select bank4
 18560  3523  1696               	bsf	22,5	;volatile
 18561                           
 18562                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 18563  3524  1616               	bsf	22,4	;volatile
 18564  3525                     l320:	
 18565                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 18566                           
 18567  3525  0020               	movlb	0	; select bank0
 18568  3526  1991               	btfsc	17,3	;volatile
 18569  3527  0008               	return
 18570  3528  2D25               	goto	l320
 18571  3529                     __end_of_send_I2C_NACK:	
 18572                           
 18573                           	psect	text62
 18574  3557                     __ptext62:	
 18575 ;; *************** function _read_I2C_data *****************
 18576 ;; Defined at:
 18577 ;;		line 43 in file "I2C.c"
 18578 ;; Parameters:    Size  Location     Type
 18579 ;;		None
 18580 ;; Auto vars:     Size  Location     Type
 18581 ;;		None
 18582 ;; Return value:  Size  Location     Type
 18583 ;;                  2    1[COMMON] unsigned int 
 18584 ;; Registers used:
 18585 ;;		wreg
 18586 ;; Tracked objects:
 18587 ;;		On entry : 0/0
 18588 ;;		On exit  : 0/0
 18589 ;;		Unchanged: 0/0
 18590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18595 ;;Total ram usage:        4 bytes
 18596 ;; Hardware stack levels used:    1
 18597 ;; Hardware stack levels required when called:    1
 18598 ;; This function calls:
 18599 ;;		Nothing
 18600 ;; This function is called by:
 18601 ;;		_readRegister
 18602 ;; This function uses a non-reentrant model
 18603 ;;
 18604                           
 18605                           
 18606                           ;psect for function _read_I2C_data
 18607  3557                     _read_I2C_data:	
 18608                           
 18609                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 18610                           
 18611                           ;incstack = 0
 18612                           ; Regs used in _read_I2C_data: [wreg]
 18613  3557  0020               	movlb	0	; select bank0
 18614  3558  1191               	bcf	17,3	;volatile
 18615                           
 18616                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 18617  3559  0024               	movlb	4	; select bank4
 18618  355A  1596               	bsf	22,3	;volatile
 18619  355B                     l284:	
 18620                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 18621                           
 18622  355B  0020               	movlb	0	; select bank0
 18623  355C  1D91               	btfss	17,3	;volatile
 18624  355D  2D5B               	goto	l284
 18625                           
 18626                           ;I2C.c: 47:     return (SSPBUF);
 18627  355E  0024               	movlb	4	; select bank4
 18628  355F  0811               	movf	17,w	;volatile
 18629  3560  00F3               	movwf	??_read_I2C_data
 18630  3561  01F4               	clrf	??_read_I2C_data+1
 18631  3562  0873               	movf	??_read_I2C_data,w
 18632  3563  00F1               	movwf	?_read_I2C_data
 18633  3564  0874               	movf	??_read_I2C_data+1,w
 18634  3565  00F2               	movwf	?_read_I2C_data+1
 18635  3566  0008               	return
 18636  3567                     __end_of_read_I2C_data:	
 18637                           
 18638                           	psect	text63
 18639  3692                     __ptext63:	
 18640 ;; *************** function _I2C_writeRegister *****************
 18641 ;; Defined at:
 18642 ;;		line 104 in file "I2C.c"
 18643 ;; Parameters:    Size  Location     Type
 18644 ;;  slaveAddress    2    5[COMMON] int 
 18645 ;;  regAddress      2    7[COMMON] int 
 18646 ;;  data            2    9[COMMON] int 
 18647 ;; Auto vars:     Size  Location     Type
 18648 ;;		None
 18649 ;; Return value:  Size  Location     Type
 18650 ;;                  1    wreg      void 
 18651 ;; Registers used:
 18652 ;;		wreg, status,2, status,0, pclath, cstack
 18653 ;; Tracked objects:
 18654 ;;		On entry : 0/0
 18655 ;;		On exit  : 0/0
 18656 ;;		Unchanged: 0/0
 18657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18658 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18661 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18662 ;;Total ram usage:        6 bytes
 18663 ;; Hardware stack levels used:    1
 18664 ;; Hardware stack levels required when called:    2
 18665 ;; This function calls:
 18666 ;;		_send_I2C_controlByte
 18667 ;;		_send_I2C_data
 18668 ;;		_send_I2C_startBit
 18669 ;;		_send_I2C_stopBit
 18670 ;; This function is called by:
 18671 ;;		_beginAFEcommunication
 18672 ;;		_setShortCircuitProtection
 18673 ;;		_setOverCurrentDischargeProtection
 18674 ;;		_setCellUndervoltageProtection
 18675 ;;		_setCellOvervoltageProtection
 18676 ;;		_enableDischarging
 18677 ;;		_enableCharging
 18678 ;;		_updateCurrent
 18679 ;; This function uses a non-reentrant model
 18680 ;;
 18681                           
 18682                           
 18683                           ;psect for function _I2C_writeRegister
 18684  3692                     _I2C_writeRegister:	
 18685                           
 18686                           ;I2C.c: 105:     send_I2C_startBit();
 18687                           
 18688                           ;incstack = 0
 18689                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 18690  3692  31B4  24FE  31B6   	fcall	_send_I2C_startBit
 18691                           
 18692                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 18693  3695  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 18694  3696  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18695  3697  0875               	movf	I2C_writeRegister@slaveAddress,w
 18696  3698  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18697  3699  3000               	movlw	0
 18698  369A  00F3               	movwf	send_I2C_controlByte@RW_bit
 18699  369B  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18700  369C  31B5  2532  31B6   	fcall	_send_I2C_controlByte
 18701                           
 18702                           ;I2C.c: 107:     send_I2C_data(regAddress);
 18703  369F  0878               	movf	I2C_writeRegister@regAddress+1,w
 18704  36A0  00F2               	movwf	send_I2C_data@databyte+1
 18705  36A1  0877               	movf	I2C_writeRegister@regAddress,w
 18706  36A2  00F1               	movwf	send_I2C_data@databyte
 18707  36A3  31B5  2517  31B6   	fcall	_send_I2C_data
 18708                           
 18709                           ;I2C.c: 108:     send_I2C_data(data);
 18710  36A6  087A               	movf	I2C_writeRegister@data+1,w
 18711  36A7  00F2               	movwf	send_I2C_data@databyte+1
 18712  36A8  0879               	movf	I2C_writeRegister@data,w
 18713  36A9  00F1               	movwf	send_I2C_data@databyte
 18714  36AA  31B5  2517  31B6   	fcall	_send_I2C_data
 18715                           
 18716                           ;I2C.c: 109:     send_I2C_stopBit();
 18717  36AD  31B5  2506         	fcall	_send_I2C_stopBit
 18718  36AF  0008               	return
 18719  36B0                     __end_of_I2C_writeRegister:	
 18720                           
 18721                           	psect	text64
 18722  3506                     __ptext64:	
 18723 ;; *************** function _send_I2C_stopBit *****************
 18724 ;; Defined at:
 18725 ;;		line 78 in file "I2C.c"
 18726 ;; Parameters:    Size  Location     Type
 18727 ;;		None
 18728 ;; Auto vars:     Size  Location     Type
 18729 ;;		None
 18730 ;; Return value:  Size  Location     Type
 18731 ;;                  1    wreg      void 
 18732 ;; Registers used:
 18733 ;;		None
 18734 ;; Tracked objects:
 18735 ;;		On entry : 0/0
 18736 ;;		On exit  : 0/0
 18737 ;;		Unchanged: 0/0
 18738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18743 ;;Total ram usage:        0 bytes
 18744 ;; Hardware stack levels used:    1
 18745 ;; Hardware stack levels required when called:    1
 18746 ;; This function calls:
 18747 ;;		Nothing
 18748 ;; This function is called by:
 18749 ;;		_I2C_writeRegister
 18750 ;;		_readRegister
 18751 ;; This function uses a non-reentrant model
 18752 ;;
 18753                           
 18754                           
 18755                           ;psect for function _send_I2C_stopBit
 18756  3506                     _send_I2C_stopBit:	
 18757                           
 18758                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 18759                           
 18760                           ;incstack = 0
 18761                           ; Regs used in _send_I2C_stopBit: []
 18762  3506  0020               	movlb	0	; select bank0
 18763  3507  1191               	bcf	17,3	;volatile
 18764                           
 18765                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 18766  3508  0024               	movlb	4	; select bank4
 18767  3509  1516               	bsf	22,2	;volatile
 18768  350A                     l308:	
 18769                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 18770                           
 18771  350A  0020               	movlb	0	; select bank0
 18772  350B  1991               	btfsc	17,3	;volatile
 18773  350C  0008               	return
 18774  350D  2D0A               	goto	l308
 18775  350E                     __end_of_send_I2C_stopBit:	
 18776                           
 18777                           	psect	text65
 18778  34FE                     __ptext65:	
 18779 ;; *************** function _send_I2C_startBit *****************
 18780 ;; Defined at:
 18781 ;;		line 65 in file "I2C.c"
 18782 ;; Parameters:    Size  Location     Type
 18783 ;;		None
 18784 ;; Auto vars:     Size  Location     Type
 18785 ;;		None
 18786 ;; Return value:  Size  Location     Type
 18787 ;;                  1    wreg      void 
 18788 ;; Registers used:
 18789 ;;		None
 18790 ;; Tracked objects:
 18791 ;;		On entry : 0/0
 18792 ;;		On exit  : 0/0
 18793 ;;		Unchanged: 0/0
 18794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18799 ;;Total ram usage:        0 bytes
 18800 ;; Hardware stack levels used:    1
 18801 ;; Hardware stack levels required when called:    1
 18802 ;; This function calls:
 18803 ;;		Nothing
 18804 ;; This function is called by:
 18805 ;;		_I2C_writeRegister
 18806 ;;		_readRegister
 18807 ;; This function uses a non-reentrant model
 18808 ;;
 18809                           
 18810                           
 18811                           ;psect for function _send_I2C_startBit
 18812  34FE                     _send_I2C_startBit:	
 18813                           
 18814                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 18815                           
 18816                           ;incstack = 0
 18817                           ; Regs used in _send_I2C_startBit: []
 18818  34FE  0020               	movlb	0	; select bank0
 18819  34FF  1191               	bcf	17,3	;volatile
 18820                           
 18821                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 18822  3500  0024               	movlb	4	; select bank4
 18823  3501  1416               	bsf	22,0	;volatile
 18824  3502                     l296:	
 18825                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 18826                           
 18827  3502  0020               	movlb	0	; select bank0
 18828  3503  1991               	btfsc	17,3	;volatile
 18829  3504  0008               	return
 18830  3505  2D02               	goto	l296
 18831  3506                     __end_of_send_I2C_startBit:	
 18832                           
 18833                           	psect	text66
 18834  3517                     __ptext66:	
 18835 ;; *************** function _send_I2C_data *****************
 18836 ;; Defined at:
 18837 ;;		line 33 in file "I2C.c"
 18838 ;; Parameters:    Size  Location     Type
 18839 ;;  databyte        2    1[COMMON] unsigned int 
 18840 ;; Auto vars:     Size  Location     Type
 18841 ;;		None
 18842 ;; Return value:  Size  Location     Type
 18843 ;;                  1    wreg      void 
 18844 ;; Registers used:
 18845 ;;		wreg
 18846 ;; Tracked objects:
 18847 ;;		On entry : 0/0
 18848 ;;		On exit  : 0/0
 18849 ;;		Unchanged: 0/0
 18850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18855 ;;Total ram usage:        2 bytes
 18856 ;; Hardware stack levels used:    1
 18857 ;; Hardware stack levels required when called:    1
 18858 ;; This function calls:
 18859 ;;		Nothing
 18860 ;; This function is called by:
 18861 ;;		_I2C_writeRegister
 18862 ;;		_readRegister
 18863 ;; This function uses a non-reentrant model
 18864 ;;
 18865                           
 18866                           
 18867                           ;psect for function _send_I2C_data
 18868  3517                     _send_I2C_data:	
 18869                           
 18870                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 18871                           
 18872                           ;incstack = 0
 18873                           ; Regs used in _send_I2C_data: [wreg]
 18874  3517  0020               	movlb	0	; select bank0
 18875  3518  1191               	bcf	17,3	;volatile
 18876                           
 18877                           ;I2C.c: 35:     SSPBUF = databyte;
 18878  3519  0871               	movf	send_I2C_data@databyte,w
 18879  351A  0024               	movlb	4	; select bank4
 18880  351B  0091               	movwf	17	;volatile
 18881  351C                     l278:	
 18882                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 18883                           
 18884  351C  0020               	movlb	0	; select bank0
 18885  351D  1991               	btfsc	17,3	;volatile
 18886  351E  0008               	return
 18887  351F  2D1C               	goto	l278
 18888  3520                     __end_of_send_I2C_data:	
 18889                           
 18890                           	psect	text67
 18891  3532                     __ptext67:	
 18892 ;; *************** function _send_I2C_controlByte *****************
 18893 ;; Defined at:
 18894 ;;		line 53 in file "I2C.c"
 18895 ;; Parameters:    Size  Location     Type
 18896 ;;  BlockAddress    2    1[COMMON] unsigned int 
 18897 ;;  RW_bit          2    3[COMMON] unsigned int 
 18898 ;; Auto vars:     Size  Location     Type
 18899 ;;		None
 18900 ;; Return value:  Size  Location     Type
 18901 ;;                  1    wreg      void 
 18902 ;; Registers used:
 18903 ;;		wreg, status,2, status,0
 18904 ;; Tracked objects:
 18905 ;;		On entry : 0/0
 18906 ;;		On exit  : 0/0
 18907 ;;		Unchanged: 0/0
 18908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18912 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18913 ;;Total ram usage:        4 bytes
 18914 ;; Hardware stack levels used:    1
 18915 ;; Hardware stack levels required when called:    1
 18916 ;; This function calls:
 18917 ;;		Nothing
 18918 ;; This function is called by:
 18919 ;;		_I2C_writeRegister
 18920 ;;		_readRegister
 18921 ;; This function uses a non-reentrant model
 18922 ;;
 18923                           
 18924                           
 18925                           ;psect for function _send_I2C_controlByte
 18926  3532                     _send_I2C_controlByte:	
 18927                           
 18928                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 18929                           
 18930                           ;incstack = 0
 18931                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 18932  3532  0020               	movlb	0	; select bank0
 18933  3533  1191               	bcf	17,3	;volatile
 18934                           
 18935                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 18936  3534  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 18937  3535  0773               	addwf	send_I2C_controlByte@RW_bit,w
 18938  3536  0024               	movlb	4	; select bank4
 18939  3537  0091               	movwf	17	;volatile
 18940  3538                     l290:	
 18941                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 18942                           
 18943  3538  0020               	movlb	0	; select bank0
 18944  3539  1991               	btfsc	17,3	;volatile
 18945  353A  0008               	return
 18946  353B  2D38               	goto	l290
 18947  353C                     __end_of_send_I2C_controlByte:	
 18948                           
 18949                           	psect	text68
 18950  353C                     __ptext68:	
 18951 ;; *************** function _init_TMR1 *****************
 18952 ;; Defined at:
 18953 ;;		line 189 in file "main.c"
 18954 ;; Parameters:    Size  Location     Type
 18955 ;;		None
 18956 ;; Auto vars:     Size  Location     Type
 18957 ;;		None
 18958 ;; Return value:  Size  Location     Type
 18959 ;;                  1    wreg      void 
 18960 ;; Registers used:
 18961 ;;		wreg, status,2, status,0
 18962 ;; Tracked objects:
 18963 ;;		On entry : 0/0
 18964 ;;		On exit  : 0/0
 18965 ;;		Unchanged: 0/0
 18966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18971 ;;Total ram usage:        0 bytes
 18972 ;; Hardware stack levels used:    1
 18973 ;; Hardware stack levels required when called:    1
 18974 ;; This function calls:
 18975 ;;		Nothing
 18976 ;; This function is called by:
 18977 ;;		_main
 18978 ;; This function uses a non-reentrant model
 18979 ;;
 18980                           
 18981                           
 18982                           ;psect for function _init_TMR1
 18983  353C                     _init_TMR1:	
 18984                           
 18985                           ;main.c: 192:     T1CONbits.T1CKPS = 0b00;
 18986                           
 18987                           ;incstack = 0
 18988                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 18989  353C  30CF               	movlw	-49
 18990  353D  0020               	movlb	0	; select bank0
 18991  353E  0598               	andwf	24,f	;volatile
 18992                           
 18993                           ;main.c: 194:     TMR1 = 0;
 18994  353F  0196               	clrf	22	;volatile
 18995  3540  0197               	clrf	23	;volatile
 18996                           
 18997                           ;main.c: 196:     T1CONbits.TMR1ON = 1;
 18998  3541  1418               	bsf	24,0	;volatile
 18999                           
 19000                           ;main.c: 198:     PIE1bits.TMR1IE = 1;
 19001  3542  0021               	movlb	1	; select bank1
 19002  3543  1411               	bsf	17,0	;volatile
 19003                           
 19004                           ;main.c: 200:     INTCONbits.PEIE = 1;
 19005  3544  170B               	bsf	11,6	;volatile
 19006                           
 19007                           ;main.c: 202:     (INTCONbits.GIE = 1);
 19008  3545  178B               	bsf	11,7	;volatile
 19009  3546  0008               	return
 19010  3547                     __end_of_init_TMR1:	
 19011                           
 19012                           	psect	text69
 19013  34F3                     __ptext69:	
 19014 ;; *************** function _init_RGB *****************
 19015 ;; Defined at:
 19016 ;;		line 6 in file "RGB.c"
 19017 ;; Parameters:    Size  Location     Type
 19018 ;;		None
 19019 ;; Auto vars:     Size  Location     Type
 19020 ;;		None
 19021 ;; Return value:  Size  Location     Type
 19022 ;;                  1    wreg      void 
 19023 ;; Registers used:
 19024 ;;		None
 19025 ;; Tracked objects:
 19026 ;;		On entry : 0/0
 19027 ;;		On exit  : 0/0
 19028 ;;		Unchanged: 0/0
 19029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19034 ;;Total ram usage:        0 bytes
 19035 ;; Hardware stack levels used:    1
 19036 ;; Hardware stack levels required when called:    1
 19037 ;; This function calls:
 19038 ;;		Nothing
 19039 ;; This function is called by:
 19040 ;;		_main
 19041 ;; This function uses a non-reentrant model
 19042 ;;
 19043                           
 19044                           
 19045                           ;psect for function _init_RGB
 19046  34F3                     _init_RGB:	
 19047                           
 19048                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 19049                           
 19050                           ;incstack = 0
 19051                           ; Regs used in _init_RGB: []
 19052  34F3  0022               	movlb	2	; select bank2
 19053  34F4  160C               	bsf	12,4	;volatile
 19054                           
 19055                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 19056  34F5  168C               	bsf	12,5	;volatile
 19057                           
 19058                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 19059  34F6  1410               	bsf	16,0	;volatile
 19060  34F7  0008               	return
 19061  34F8                     __end_of_init_RGB:	
 19062                           
 19063                           	psect	text70
 19064  3547                     __ptext70:	
 19065 ;; *************** function _init_I2C *****************
 19066 ;; Defined at:
 19067 ;;		line 10 in file "I2C.c"
 19068 ;; Parameters:    Size  Location     Type
 19069 ;;		None
 19070 ;; Auto vars:     Size  Location     Type
 19071 ;;		None
 19072 ;; Return value:  Size  Location     Type
 19073 ;;                  1    wreg      void 
 19074 ;; Registers used:
 19075 ;;		wreg, status,2, status,0
 19076 ;; Tracked objects:
 19077 ;;		On entry : 0/0
 19078 ;;		On exit  : 0/0
 19079 ;;		Unchanged: 0/0
 19080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19083 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19084 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19085 ;;Total ram usage:        1 bytes
 19086 ;; Hardware stack levels used:    1
 19087 ;; Hardware stack levels required when called:    1
 19088 ;; This function calls:
 19089 ;;		Nothing
 19090 ;; This function is called by:
 19091 ;;		_main
 19092 ;; This function uses a non-reentrant model
 19093 ;;
 19094                           
 19095                           
 19096                           ;psect for function _init_I2C
 19097  3547                     _init_I2C:	
 19098                           
 19099                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 19100                           
 19101                           ;incstack = 0
 19102                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 19103  3547  0024               	movlb	4	; select bank4
 19104  3548  0815               	movf	21,w	;volatile
 19105  3549  39F0               	andlw	-16
 19106  354A  3808               	iorlw	8
 19107  354B  0095               	movwf	21	;volatile
 19108                           
 19109                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 19110  354C  1695               	bsf	21,5	;volatile
 19111                           
 19112                           ;I2C.c: 24:     SSPADD = 39;
 19113  354D  3027               	movlw	39
 19114  354E  0092               	movwf	18	;volatile
 19115                           
 19116                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 19117  354F  3034               	movlw	52
 19118  3550  00F1               	movwf	??_init_I2C
 19119  3551  30F2               	movlw	242
 19120  3552                     u11527:	
 19121  3552  0B89               	decfsz	9,f
 19122  3553  2D52               	goto	u11527
 19123  3554  0BF1               	decfsz	??_init_I2C,f
 19124  3555  2D52               	goto	u11527
 19125  3556  0008               	return
 19126  3557                     __end_of_init_I2C:	
 19127                           
 19128                           	psect	text71
 19129  0808                     __ptext71:	
 19130 ;; *************** function _init_GPIO *****************
 19131 ;; Defined at:
 19132 ;;		line 206 in file "main.c"
 19133 ;; Parameters:    Size  Location     Type
 19134 ;;		None
 19135 ;; Auto vars:     Size  Location     Type
 19136 ;;		None
 19137 ;; Return value:  Size  Location     Type
 19138 ;;                  1    wreg      void 
 19139 ;; Registers used:
 19140 ;;		wreg, status,2, status,0
 19141 ;; Tracked objects:
 19142 ;;		On entry : 0/0
 19143 ;;		On exit  : 0/0
 19144 ;;		Unchanged: 0/0
 19145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19150 ;;Total ram usage:        0 bytes
 19151 ;; Hardware stack levels used:    1
 19152 ;; Hardware stack levels required when called:    1
 19153 ;; This function calls:
 19154 ;;		Nothing
 19155 ;; This function is called by:
 19156 ;;		_main
 19157 ;; This function uses a non-reentrant model
 19158 ;;
 19159                           
 19160                           
 19161                           ;psect for function _init_GPIO
 19162  0808                     _init_GPIO:	
 19163                           
 19164                           ;main.c: 212:     TRISBbits.TRISB2 = 0;
 19165                           
 19166                           ;incstack = 0
 19167                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 19168  0808  0021               	movlb	1	; select bank1
 19169  0809  110D               	bcf	13,2	;volatile
 19170                           
 19171                           ;main.c: 213:     ANSELBbits.ANSB2 = 0;
 19172  080A  0023               	movlb	3	; select bank3
 19173  080B  110D               	bcf	13,2	;volatile
 19174                           
 19175                           ;main.c: 214:     TRISBbits.TRISB3 = 1;
 19176  080C  0021               	movlb	1	; select bank1
 19177  080D  158D               	bsf	13,3	;volatile
 19178                           
 19179                           ;main.c: 215:     ANSELBbits.ANSB3 = 0;
 19180  080E  0023               	movlb	3	; select bank3
 19181  080F  118D               	bcf	13,3	;volatile
 19182                           
 19183                           ;main.c: 220:     ANSELCbits.ANSC4 = 0;
 19184  0810  120E               	bcf	14,4	;volatile
 19185                           
 19186                           ;main.c: 221:     ANSELCbits.ANSC5 = 0;
 19187  0811  128E               	bcf	14,5	;volatile
 19188                           
 19189                           ;main.c: 222:     TRISCbits.TRISC4 = 1;
 19190  0812  0021               	movlb	1	; select bank1
 19191  0813  160E               	bsf	14,4	;volatile
 19192                           
 19193                           ;main.c: 223:     TRISCbits.TRISC5 = 1;
 19194  0814  168E               	bsf	14,5	;volatile
 19195                           
 19196                           ;main.c: 232:     TRISAbits.TRISA4 = 0;
 19197  0815  120C               	bcf	12,4	;volatile
 19198                           
 19199                           ;main.c: 233:     TRISAbits.TRISA5 = 0;
 19200  0816  128C               	bcf	12,5	;volatile
 19201                           
 19202                           ;main.c: 234:     TRISEbits.TRISE0 = 0;
 19203  0817  1010               	bcf	16,0	;volatile
 19204                           
 19205                           ;main.c: 239:     TRISAbits.TRISA3 = 0;
 19206  0818  118C               	bcf	12,3	;volatile
 19207                           
 19208                           ;main.c: 240:     LATAbits.LATA3 = 0;
 19209  0819  0022               	movlb	2	; select bank2
 19210  081A  118C               	bcf	12,3	;volatile
 19211                           
 19212                           ;main.c: 246:     PPSLOCK = 0x55;
 19213  081B  3055               	movlw	85
 19214  081C  003C               	movlb	28	; select bank28
 19215  081D  008F               	movwf	15	;volsfr
 19216                           
 19217                           ;main.c: 247:     PPSLOCK = 0xAA;
 19218  081E  30AA               	movlw	170
 19219  081F  008F               	movwf	15	;volsfr
 19220                           
 19221                           ;main.c: 248:     PPSLOCKbits.PPSLOCKED = 0x00;
 19222  0820  100F               	bcf	15,0	;volsfr
 19223                           
 19224                           ;main.c: 252:     RC4PPSbits.RC4PPS = 0x0011;
 19225  0821  003D               	movlb	29	; select bank29
 19226  0822  0824               	movf	36,w	;volatile
 19227  0823  39E0               	andlw	-32
 19228  0824  3811               	iorlw	17
 19229  0825  00A4               	movwf	36	;volatile
 19230                           
 19231                           ;main.c: 253:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 19232  0826  003C               	movlb	28	; select bank28
 19233  0827  0821               	movf	33,w	;volatile
 19234  0828  39E0               	andlw	-32
 19235  0829  3814               	iorlw	20
 19236  082A  00A1               	movwf	33	;volatile
 19237                           
 19238                           ;main.c: 254:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 19239  082B  0820               	movf	32,w	;volatile
 19240  082C  39E0               	andlw	-32
 19241  082D  3815               	iorlw	21
 19242  082E  00A0               	movwf	32	;volatile
 19243                           
 19244                           ;main.c: 255:     RC5PPSbits.RC5PPS = 0x0010;
 19245  082F  003D               	movlb	29	; select bank29
 19246  0830  0825               	movf	37,w	;volatile
 19247  0831  39E0               	andlw	-32
 19248  0832  3810               	iorlw	16
 19249  0833  00A5               	movwf	37	;volatile
 19250                           
 19251                           ;main.c: 258:     RB2PPSbits.RB2PPS = 0x14;
 19252  0834  081A               	movf	26,w	;volatile
 19253  0835  39E0               	andlw	-32
 19254  0836  3814               	iorlw	20
 19255  0837  009A               	movwf	26	;volatile
 19256                           
 19257                           ;main.c: 259:     RXPPSbits.RXPPS = 0x0B;
 19258  0838  003C               	movlb	28	; select bank28
 19259  0839  0824               	movf	36,w	;volatile
 19260  083A  39E0               	andlw	-32
 19261  083B  380B               	iorlw	11
 19262  083C  00A4               	movwf	36	;volatile
 19263                           
 19264                           ;main.c: 261:     PPSLOCK = 0x55;
 19265  083D  3055               	movlw	85
 19266  083E  008F               	movwf	15	;volsfr
 19267                           
 19268                           ;main.c: 262:     PPSLOCK = 0xAA;
 19269  083F  30AA               	movlw	170
 19270  0840  008F               	movwf	15	;volsfr
 19271                           
 19272                           ;main.c: 263:     PPSLOCKbits.PPSLOCKED = 0x01;
 19273  0841  140F               	bsf	15,0	;volsfr
 19274  0842  0008               	return
 19275  0843                     __end_of_init_GPIO:	
 19276                           
 19277                           	psect	text72
 19278  34F8                     __ptext72:	
 19279 ;; *************** function _initWDT *****************
 19280 ;; Defined at:
 19281 ;;		line 267 in file "main.c"
 19282 ;; Parameters:    Size  Location     Type
 19283 ;;		None
 19284 ;; Auto vars:     Size  Location     Type
 19285 ;;		None
 19286 ;; Return value:  Size  Location     Type
 19287 ;;                  1    wreg      void 
 19288 ;; Registers used:
 19289 ;;		wreg, status,2, status,0
 19290 ;; Tracked objects:
 19291 ;;		On entry : 0/0
 19292 ;;		On exit  : 0/0
 19293 ;;		Unchanged: 0/0
 19294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19299 ;;Total ram usage:        0 bytes
 19300 ;; Hardware stack levels used:    1
 19301 ;; Hardware stack levels required when called:    1
 19302 ;; This function calls:
 19303 ;;		Nothing
 19304 ;; This function is called by:
 19305 ;;		_main
 19306 ;; This function uses a non-reentrant model
 19307 ;;
 19308                           
 19309                           
 19310                           ;psect for function _initWDT
 19311  34F8                     _initWDT:	
 19312                           
 19313                           ;main.c: 269:     WDTCONbits.WDTPS = 0b01101;
 19314                           
 19315                           ;incstack = 0
 19316                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 19317  34F8  0021               	movlb	1	; select bank1
 19318  34F9  0817               	movf	23,w	;volatile
 19319  34FA  39C1               	andlw	-63
 19320  34FB  381A               	iorlw	26
 19321  34FC  0097               	movwf	23	;volatile
 19322  34FD  0008               	return
 19323  34FE                     __end_of_initWDT:	
 19324                           
 19325                           	psect	text73
 19326  07FD                     __ptext73:	
 19327 ;; *************** function _initClock *****************
 19328 ;; Defined at:
 19329 ;;		line 180 in file "main.c"
 19330 ;; Parameters:    Size  Location     Type
 19331 ;;		None
 19332 ;; Auto vars:     Size  Location     Type
 19333 ;;		None
 19334 ;; Return value:  Size  Location     Type
 19335 ;;                  1    wreg      void 
 19336 ;; Registers used:
 19337 ;;		status,2, status,0, pclath, cstack
 19338 ;; Tracked objects:
 19339 ;;		On entry : 0/0
 19340 ;;		On exit  : 0/0
 19341 ;;		Unchanged: 0/0
 19342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19347 ;;Total ram usage:        0 bytes
 19348 ;; Hardware stack levels used:    1
 19349 ;; Hardware stack levels required when called:    2
 19350 ;; This function calls:
 19351 ;;		_internal_16
 19352 ;; This function is called by:
 19353 ;;		_main
 19354 ;; This function uses a non-reentrant model
 19355 ;;
 19356                           
 19357                           
 19358                           ;psect for function _initClock
 19359  07FD                     _initClock:	
 19360                           
 19361                           ;main.c: 182:     internal_16();
 19362                           
 19363                           ;incstack = 0
 19364                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 19365  07FD  31B5  250E         	fcall	_internal_16
 19366  07FF  0008               	return
 19367  0800                     __end_of_initClock:	
 19368                           
 19369                           	psect	text74
 19370  350E                     __ptext74:	
 19371 ;; *************** function _internal_16 *****************
 19372 ;; Defined at:
 19373 ;;		line 26 in file "pic16f1719_internals.c"
 19374 ;; Parameters:    Size  Location     Type
 19375 ;;		None
 19376 ;; Auto vars:     Size  Location     Type
 19377 ;;		None
 19378 ;; Return value:  Size  Location     Type
 19379 ;;                  1    wreg      void 
 19380 ;; Registers used:
 19381 ;;		None
 19382 ;; Tracked objects:
 19383 ;;		On entry : 0/0
 19384 ;;		On exit  : 0/0
 19385 ;;		Unchanged: 0/0
 19386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19391 ;;Total ram usage:        0 bytes
 19392 ;; Hardware stack levels used:    1
 19393 ;; Hardware stack levels required when called:    1
 19394 ;; This function calls:
 19395 ;;		Nothing
 19396 ;; This function is called by:
 19397 ;;		_initClock
 19398 ;; This function uses a non-reentrant model
 19399 ;;
 19400                           
 19401                           
 19402                           ;psect for function _internal_16
 19403  350E                     _internal_16:	
 19404                           
 19405                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 19406                           
 19407                           ;incstack = 0
 19408                           ; Regs used in _internal_16: []
 19409  350E  0021               	movlb	1	; select bank1
 19410  350F  1019               	bcf	25,0	;volatile
 19411                           
 19412                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 19413  3510  1099               	bcf	25,1	;volatile
 19414                           
 19415                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 19416  3511  1599               	bsf	25,3	;volatile
 19417                           
 19418                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 19419  3512  1619               	bsf	25,4	;volatile
 19420                           
 19421                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 19422  3513  1699               	bsf	25,5	;volatile
 19423                           
 19424                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 19425  3514  1719               	bsf	25,6	;volatile
 19426                           
 19427                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 19428  3515  1399               	bcf	25,7	;volatile
 19429  3516  0008               	return
 19430  3517                     __end_of_internal_16:	
 19431                           
 19432                           	psect	text75
 19433  2EA3                     __ptext75:	
 19434 ;; *************** function _EUSART_Initialize *****************
 19435 ;; Defined at:
 19436 ;;		line 6 in file "EUSART.c"
 19437 ;; Parameters:    Size  Location     Type
 19438 ;;  baudrate        4   18[BANK0 ] const long 
 19439 ;; Auto vars:     Size  Location     Type
 19440 ;;  x               2   10[COMMON] unsigned int 
 19441 ;; Return value:  Size  Location     Type
 19442 ;;                  1    wreg      unsigned char 
 19443 ;; Registers used:
 19444 ;;		wreg, status,2, status,0, pclath, cstack
 19445 ;; Tracked objects:
 19446 ;;		On entry : 0/0
 19447 ;;		On exit  : 0/0
 19448 ;;		Unchanged: 0/0
 19449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19450 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19452 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19453 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19454 ;;Total ram usage:       18 bytes
 19455 ;; Hardware stack levels used:    1
 19456 ;; Hardware stack levels required when called:    2
 19457 ;; This function calls:
 19458 ;;		___aldiv
 19459 ;; This function is called by:
 19460 ;;		_main
 19461 ;; This function uses a non-reentrant model
 19462 ;;
 19463                           
 19464                           
 19465                           ;psect for function _EUSART_Initialize
 19466  2EA3                     _EUSART_Initialize:	
 19467                           
 19468                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 19469                           
 19470                           ;incstack = 0
 19471                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19472  2EA3  0020               	movlb	0	; select bank0
 19473  2EA4  0832               	movf	EUSART_Initialize@baudrate,w
 19474  2EA5  00B6               	movwf	??_EUSART_Initialize
 19475  2EA6  0833               	movf	EUSART_Initialize@baudrate+1,w
 19476  2EA7  00B7               	movwf	??_EUSART_Initialize+1
 19477  2EA8  0834               	movf	EUSART_Initialize@baudrate+2,w
 19478  2EA9  00B8               	movwf	??_EUSART_Initialize+2
 19479  2EAA  0835               	movf	EUSART_Initialize@baudrate+3,w
 19480  2EAB  00B9               	movwf	??_EUSART_Initialize+3
 19481  2EAC  3006               	movlw	6
 19482  2EAD                     u11375:	
 19483  2EAD  35B6               	lslf	??_EUSART_Initialize,f
 19484  2EAE  0DB7               	rlf	??_EUSART_Initialize+1,f
 19485  2EAF  0DB8               	rlf	??_EUSART_Initialize+2,f
 19486  2EB0  0DB9               	rlf	??_EUSART_Initialize+3,f
 19487  2EB1  0B89               	decfsz	9,f
 19488  2EB2  2EAD               	goto	u11375
 19489  2EB3  0839               	movf	??_EUSART_Initialize+3,w
 19490  2EB4  00A7               	movwf	___aldiv@divisor+3
 19491  2EB5  0838               	movf	??_EUSART_Initialize+2,w
 19492  2EB6  00A6               	movwf	___aldiv@divisor+2
 19493  2EB7  0837               	movf	??_EUSART_Initialize+1,w
 19494  2EB8  00A5               	movwf	___aldiv@divisor+1
 19495  2EB9  0836               	movf	??_EUSART_Initialize,w
 19496  2EBA  00A4               	movwf	___aldiv@divisor
 19497  2EBB  0832               	movf	EUSART_Initialize@baudrate,w
 19498  2EBC  00BA               	movwf	??_EUSART_Initialize+4
 19499  2EBD  0833               	movf	EUSART_Initialize@baudrate+1,w
 19500  2EBE  00BB               	movwf	??_EUSART_Initialize+5
 19501  2EBF  0834               	movf	EUSART_Initialize@baudrate+2,w
 19502  2EC0  00BC               	movwf	??_EUSART_Initialize+6
 19503  2EC1  0835               	movf	EUSART_Initialize@baudrate+3,w
 19504  2EC2  00BD               	movwf	??_EUSART_Initialize+7
 19505  2EC3  3006               	movlw	6
 19506  2EC4                     u11385:	
 19507  2EC4  35BA               	lslf	??_EUSART_Initialize+4,f
 19508  2EC5  0DBB               	rlf	??_EUSART_Initialize+5,f
 19509  2EC6  0DBC               	rlf	??_EUSART_Initialize+6,f
 19510  2EC7  0DBD               	rlf	??_EUSART_Initialize+7,f
 19511  2EC8  0B89               	decfsz	9,f
 19512  2EC9  2EC4               	goto	u11385
 19513  2ECA  3000               	movlw	0
 19514  2ECB  00BE               	movwf	??_EUSART_Initialize+8
 19515  2ECC  3024               	movlw	36
 19516  2ECD  00BF               	movwf	??_EUSART_Initialize+9
 19517  2ECE  30F4               	movlw	244
 19518  2ECF  00C0               	movwf	??_EUSART_Initialize+10
 19519  2ED0  3000               	movlw	0
 19520  2ED1  00C1               	movwf	??_EUSART_Initialize+11
 19521  2ED2  083A               	movf	??_EUSART_Initialize+4,w
 19522  2ED3  02BE               	subwf	??_EUSART_Initialize+8,f
 19523  2ED4  083B               	movf	??_EUSART_Initialize+5,w
 19524  2ED5  3BBF               	subwfb	??_EUSART_Initialize+9,f
 19525  2ED6  083C               	movf	??_EUSART_Initialize+6,w
 19526  2ED7  3BC0               	subwfb	??_EUSART_Initialize+10,f
 19527  2ED8  083D               	movf	??_EUSART_Initialize+7,w
 19528  2ED9  3BC1               	subwfb	??_EUSART_Initialize+11,f
 19529  2EDA  0841               	movf	??_EUSART_Initialize+11,w
 19530  2EDB  00AB               	movwf	___aldiv@dividend+3
 19531  2EDC  0840               	movf	??_EUSART_Initialize+10,w
 19532  2EDD  00AA               	movwf	___aldiv@dividend+2
 19533  2EDE  083F               	movf	??_EUSART_Initialize+9,w
 19534  2EDF  00A9               	movwf	___aldiv@dividend+1
 19535  2EE0  083E               	movf	??_EUSART_Initialize+8,w
 19536  2EE1  00A8               	movwf	___aldiv@dividend
 19537  2EE2  31AC  24EA  31AE   	fcall	___aldiv
 19538  2EE5  0020               	movlb	0	; select bank0
 19539  2EE6  0825               	movf	?___aldiv+1,w
 19540  2EE7  00FB               	movwf	EUSART_Initialize@x+1
 19541  2EE8  0824               	movf	?___aldiv,w
 19542  2EE9  00FA               	movwf	EUSART_Initialize@x
 19543                           
 19544                           ;EUSART.c: 10:  if(x>255)
 19545  2EEA  3001               	movlw	1
 19546  2EEB  027B               	subwf	EUSART_Initialize@x+1,w
 19547  2EEC  3000               	movlw	0
 19548  2EED  1903               	skipnz
 19549  2EEE  027A               	subwf	EUSART_Initialize@x,w
 19550  2EEF  1C03               	skipc
 19551  2EF0  2F39               	goto	l8279
 19552                           
 19553                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 19554  2EF1  0832               	movf	EUSART_Initialize@baudrate,w
 19555  2EF2  00B6               	movwf	??_EUSART_Initialize
 19556  2EF3  0833               	movf	EUSART_Initialize@baudrate+1,w
 19557  2EF4  00B7               	movwf	??_EUSART_Initialize+1
 19558  2EF5  0834               	movf	EUSART_Initialize@baudrate+2,w
 19559  2EF6  00B8               	movwf	??_EUSART_Initialize+2
 19560  2EF7  0835               	movf	EUSART_Initialize@baudrate+3,w
 19561  2EF8  00B9               	movwf	??_EUSART_Initialize+3
 19562  2EF9  3004               	movlw	4
 19563  2EFA                     u11405:	
 19564  2EFA  35B6               	lslf	??_EUSART_Initialize,f
 19565  2EFB  0DB7               	rlf	??_EUSART_Initialize+1,f
 19566  2EFC  0DB8               	rlf	??_EUSART_Initialize+2,f
 19567  2EFD  0DB9               	rlf	??_EUSART_Initialize+3,f
 19568  2EFE  0B89               	decfsz	9,f
 19569  2EFF  2EFA               	goto	u11405
 19570  2F00  0839               	movf	??_EUSART_Initialize+3,w
 19571  2F01  00A7               	movwf	___aldiv@divisor+3
 19572  2F02  0838               	movf	??_EUSART_Initialize+2,w
 19573  2F03  00A6               	movwf	___aldiv@divisor+2
 19574  2F04  0837               	movf	??_EUSART_Initialize+1,w
 19575  2F05  00A5               	movwf	___aldiv@divisor+1
 19576  2F06  0836               	movf	??_EUSART_Initialize,w
 19577  2F07  00A4               	movwf	___aldiv@divisor
 19578  2F08  0832               	movf	EUSART_Initialize@baudrate,w
 19579  2F09  00BA               	movwf	??_EUSART_Initialize+4
 19580  2F0A  0833               	movf	EUSART_Initialize@baudrate+1,w
 19581  2F0B  00BB               	movwf	??_EUSART_Initialize+5
 19582  2F0C  0834               	movf	EUSART_Initialize@baudrate+2,w
 19583  2F0D  00BC               	movwf	??_EUSART_Initialize+6
 19584  2F0E  0835               	movf	EUSART_Initialize@baudrate+3,w
 19585  2F0F  00BD               	movwf	??_EUSART_Initialize+7
 19586  2F10  3004               	movlw	4
 19587  2F11                     u11415:	
 19588  2F11  35BA               	lslf	??_EUSART_Initialize+4,f
 19589  2F12  0DBB               	rlf	??_EUSART_Initialize+5,f
 19590  2F13  0DBC               	rlf	??_EUSART_Initialize+6,f
 19591  2F14  0DBD               	rlf	??_EUSART_Initialize+7,f
 19592  2F15  0B89               	decfsz	9,f
 19593  2F16  2F11               	goto	u11415
 19594  2F17  3000               	movlw	0
 19595  2F18  00BE               	movwf	??_EUSART_Initialize+8
 19596  2F19  3024               	movlw	36
 19597  2F1A  00BF               	movwf	??_EUSART_Initialize+9
 19598  2F1B  30F4               	movlw	244
 19599  2F1C  00C0               	movwf	??_EUSART_Initialize+10
 19600  2F1D  3000               	movlw	0
 19601  2F1E  00C1               	movwf	??_EUSART_Initialize+11
 19602  2F1F  083A               	movf	??_EUSART_Initialize+4,w
 19603  2F20  02BE               	subwf	??_EUSART_Initialize+8,f
 19604  2F21  083B               	movf	??_EUSART_Initialize+5,w
 19605  2F22  3BBF               	subwfb	??_EUSART_Initialize+9,f
 19606  2F23  083C               	movf	??_EUSART_Initialize+6,w
 19607  2F24  3BC0               	subwfb	??_EUSART_Initialize+10,f
 19608  2F25  083D               	movf	??_EUSART_Initialize+7,w
 19609  2F26  3BC1               	subwfb	??_EUSART_Initialize+11,f
 19610  2F27  0841               	movf	??_EUSART_Initialize+11,w
 19611  2F28  00AB               	movwf	___aldiv@dividend+3
 19612  2F29  0840               	movf	??_EUSART_Initialize+10,w
 19613  2F2A  00AA               	movwf	___aldiv@dividend+2
 19614  2F2B  083F               	movf	??_EUSART_Initialize+9,w
 19615  2F2C  00A9               	movwf	___aldiv@dividend+1
 19616  2F2D  083E               	movf	??_EUSART_Initialize+8,w
 19617  2F2E  00A8               	movwf	___aldiv@dividend
 19618  2F2F  31AC  24EA  31AE   	fcall	___aldiv
 19619  2F32  0020               	movlb	0	; select bank0
 19620  2F33  0825               	movf	?___aldiv+1,w
 19621  2F34  00FB               	movwf	EUSART_Initialize@x+1
 19622  2F35  0824               	movf	?___aldiv,w
 19623  2F36  00FA               	movwf	EUSART_Initialize@x
 19624                           
 19625                           ;EUSART.c: 13:   BRGH = 1;
 19626  2F37  0023               	movlb	3	; select bank3
 19627  2F38  151E               	bsf	30,2	;volatile
 19628  2F39                     l8279:	
 19629                           
 19630                           ;EUSART.c: 15:  if(x<256)
 19631  2F39  3001               	movlw	1
 19632  2F3A  027B               	subwf	EUSART_Initialize@x+1,w
 19633  2F3B  3000               	movlw	0
 19634  2F3C  1903               	skipnz
 19635  2F3D  027A               	subwf	EUSART_Initialize@x,w
 19636  2F3E  1803               	skipnc
 19637  2F3F  0008               	return
 19638                           
 19639                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 19640  2F40  087A               	movf	EUSART_Initialize@x,w
 19641  2F41  0023               	movlb	3	; select bank3
 19642  2F42  009B               	movwf	27	;volatile
 19643                           
 19644                           ;EUSART.c: 18:    SYNC = 0;
 19645  2F43  121E               	bcf	30,4	;volatile
 19646                           
 19647                           ;EUSART.c: 19:    SPEN = 1;
 19648  2F44  179D               	bsf	29,7	;volatile
 19649                           
 19650                           ;EUSART.c: 20:           TRISC7 = 1;
 19651  2F45  0021               	movlb	1	; select bank1
 19652  2F46  178E               	bsf	14,7	;volatile
 19653                           
 19654                           ;EUSART.c: 21:           TRISC6 = 1;
 19655  2F47  170E               	bsf	14,6	;volatile
 19656                           
 19657                           ;EUSART.c: 22:           CREN = 1;
 19658  2F48  0023               	movlb	3	; select bank3
 19659  2F49  161D               	bsf	29,4	;volatile
 19660                           
 19661                           ;EUSART.c: 23:           TXEN = 1;
 19662  2F4A  169E               	bsf	30,5	;volatile
 19663  2F4B  0008               	return
 19664  2F4C                     __end_of_EUSART_Initialize:	
 19665                           
 19666                           	psect	text76
 19667  2CEA                     __ptext76:	
 19668 ;; *************** function ___aldiv *****************
 19669 ;; Defined at:
 19670 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 19671 ;; Parameters:    Size  Location     Type
 19672 ;;  divisor         4    4[BANK0 ] long 
 19673 ;;  dividend        4    8[BANK0 ] long 
 19674 ;; Auto vars:     Size  Location     Type
 19675 ;;  quotient        4   14[BANK0 ] long 
 19676 ;;  sign            1   13[BANK0 ] unsigned char 
 19677 ;;  counter         1   12[BANK0 ] unsigned char 
 19678 ;; Return value:  Size  Location     Type
 19679 ;;                  4    4[BANK0 ] long 
 19680 ;; Registers used:
 19681 ;;		wreg, status,2, status,0
 19682 ;; Tracked objects:
 19683 ;;		On entry : 0/0
 19684 ;;		On exit  : 0/0
 19685 ;;		Unchanged: 0/0
 19686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19687 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19688 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19690 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19691 ;;Total ram usage:       15 bytes
 19692 ;; Hardware stack levels used:    1
 19693 ;; Hardware stack levels required when called:    1
 19694 ;; This function calls:
 19695 ;;		Nothing
 19696 ;; This function is called by:
 19697 ;;		_EUSART_Initialize
 19698 ;;		_setCellUndervoltageProtection
 19699 ;;		_setCellOvervoltageProtection
 19700 ;;		_updateVoltages
 19701 ;; This function uses a non-reentrant model
 19702 ;;
 19703                           
 19704                           
 19705                           ;psect for function ___aldiv
 19706  2CEA                     ___aldiv:	
 19707                           
 19708                           ;incstack = 0
 19709                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 19710  2CEA  0020               	movlb	0	; select bank0
 19711  2CEB  01AD               	clrf	___aldiv@sign
 19712  2CEC  1FA7               	btfss	___aldiv@divisor+3,7
 19713  2CED  2CFB               	goto	l911
 19714  2CEE  09A4               	comf	___aldiv@divisor,f
 19715  2CEF  09A5               	comf	___aldiv@divisor+1,f
 19716  2CF0  09A6               	comf	___aldiv@divisor+2,f
 19717  2CF1  09A7               	comf	___aldiv@divisor+3,f
 19718  2CF2  0AA4               	incf	___aldiv@divisor,f
 19719  2CF3  1903               	skipnz
 19720  2CF4  0AA5               	incf	___aldiv@divisor+1,f
 19721  2CF5  1903               	skipnz
 19722  2CF6  0AA6               	incf	___aldiv@divisor+2,f
 19723  2CF7  1903               	skipnz
 19724  2CF8  0AA7               	incf	___aldiv@divisor+3,f
 19725  2CF9  01AD               	clrf	___aldiv@sign
 19726  2CFA  0AAD               	incf	___aldiv@sign,f
 19727  2CFB                     l911:	
 19728  2CFB  1FAB               	btfss	___aldiv@dividend+3,7
 19729  2CFC  2D0C               	goto	l7853
 19730  2CFD  09A8               	comf	___aldiv@dividend,f
 19731  2CFE  09A9               	comf	___aldiv@dividend+1,f
 19732  2CFF  09AA               	comf	___aldiv@dividend+2,f
 19733  2D00  09AB               	comf	___aldiv@dividend+3,f
 19734  2D01  0AA8               	incf	___aldiv@dividend,f
 19735  2D02  1903               	skipnz
 19736  2D03  0AA9               	incf	___aldiv@dividend+1,f
 19737  2D04  1903               	skipnz
 19738  2D05  0AAA               	incf	___aldiv@dividend+2,f
 19739  2D06  1903               	skipnz
 19740  2D07  0AAB               	incf	___aldiv@dividend+3,f
 19741  2D08  3001               	movlw	1
 19742  2D09  00F9               	movwf	??___aldiv
 19743  2D0A  0879               	movf	??___aldiv,w
 19744  2D0B  06AD               	xorwf	___aldiv@sign,f
 19745  2D0C                     l7853:	
 19746  2D0C  3000               	movlw	0
 19747  2D0D  00B1               	movwf	___aldiv@quotient+3
 19748  2D0E  3000               	movlw	0
 19749  2D0F  00B0               	movwf	___aldiv@quotient+2
 19750  2D10  3000               	movlw	0
 19751  2D11  00AF               	movwf	___aldiv@quotient+1
 19752  2D12  3000               	movlw	0
 19753  2D13  00AE               	movwf	___aldiv@quotient
 19754  2D14  0827               	movf	___aldiv@divisor+3,w
 19755  2D15  0426               	iorwf	___aldiv@divisor+2,w
 19756  2D16  0425               	iorwf	___aldiv@divisor+1,w
 19757  2D17  0424               	iorwf	___aldiv@divisor,w
 19758  2D18  1903               	skipnz
 19759  2D19  2D55               	goto	l7875
 19760  2D1A  01AC               	clrf	___aldiv@counter
 19761  2D1B  0AAC               	incf	___aldiv@counter,f
 19762  2D1C                     l7861:	
 19763  2D1C  1BA7               	btfsc	___aldiv@divisor+3,7
 19764  2D1D  2D2A               	goto	l7863
 19765  2D1E  3001               	movlw	1
 19766  2D1F                     u10855:	
 19767  2D1F  35A4               	lslf	___aldiv@divisor,f
 19768  2D20  0DA5               	rlf	___aldiv@divisor+1,f
 19769  2D21  0DA6               	rlf	___aldiv@divisor+2,f
 19770  2D22  0DA7               	rlf	___aldiv@divisor+3,f
 19771  2D23  0B89               	decfsz	9,f
 19772  2D24  2D1F               	goto	u10855
 19773  2D25  3001               	movlw	1
 19774  2D26  00F9               	movwf	??___aldiv
 19775  2D27  0879               	movf	??___aldiv,w
 19776  2D28  07AC               	addwf	___aldiv@counter,f
 19777  2D29  2D1C               	goto	l7861
 19778  2D2A                     l7863:	
 19779  2D2A  3001               	movlw	1
 19780  2D2B                     u10875:	
 19781  2D2B  35AE               	lslf	___aldiv@quotient,f
 19782  2D2C  0DAF               	rlf	___aldiv@quotient+1,f
 19783  2D2D  0DB0               	rlf	___aldiv@quotient+2,f
 19784  2D2E  0DB1               	rlf	___aldiv@quotient+3,f
 19785  2D2F  0B89               	decfsz	9,f
 19786  2D30  2D2B               	goto	u10875
 19787  2D31  0827               	movf	___aldiv@divisor+3,w
 19788  2D32  022B               	subwf	___aldiv@dividend+3,w
 19789  2D33  1D03               	skipz
 19790  2D34  2D3F               	goto	u10885
 19791  2D35  0826               	movf	___aldiv@divisor+2,w
 19792  2D36  022A               	subwf	___aldiv@dividend+2,w
 19793  2D37  1D03               	skipz
 19794  2D38  2D3F               	goto	u10885
 19795  2D39  0825               	movf	___aldiv@divisor+1,w
 19796  2D3A  0229               	subwf	___aldiv@dividend+1,w
 19797  2D3B  1D03               	skipz
 19798  2D3C  2D3F               	goto	u10885
 19799  2D3D  0824               	movf	___aldiv@divisor,w
 19800  2D3E  0228               	subwf	___aldiv@dividend,w
 19801  2D3F                     u10885:	
 19802  2D3F  1C03               	skipc
 19803  2D40  2D4A               	goto	l7871
 19804  2D41  0824               	movf	___aldiv@divisor,w
 19805  2D42  02A8               	subwf	___aldiv@dividend,f
 19806  2D43  0825               	movf	___aldiv@divisor+1,w
 19807  2D44  3BA9               	subwfb	___aldiv@dividend+1,f
 19808  2D45  0826               	movf	___aldiv@divisor+2,w
 19809  2D46  3BAA               	subwfb	___aldiv@dividend+2,f
 19810  2D47  0827               	movf	___aldiv@divisor+3,w
 19811  2D48  3BAB               	subwfb	___aldiv@dividend+3,f
 19812  2D49  142E               	bsf	___aldiv@quotient,0
 19813  2D4A                     l7871:	
 19814  2D4A  3001               	movlw	1
 19815  2D4B                     u10895:	
 19816  2D4B  36A7               	lsrf	___aldiv@divisor+3,f
 19817  2D4C  0CA6               	rrf	___aldiv@divisor+2,f
 19818  2D4D  0CA5               	rrf	___aldiv@divisor+1,f
 19819  2D4E  0CA4               	rrf	___aldiv@divisor,f
 19820  2D4F  0B89               	decfsz	9,f
 19821  2D50  2D4B               	goto	u10895
 19822  2D51  3001               	movlw	1
 19823  2D52  02AC               	subwf	___aldiv@counter,f
 19824  2D53  1D03               	btfss	3,2
 19825  2D54  2D2A               	goto	l7863
 19826  2D55                     l7875:	
 19827  2D55  082D               	movf	___aldiv@sign,w
 19828  2D56  1903               	btfsc	3,2
 19829  2D57  2D63               	goto	l7879
 19830  2D58  09AE               	comf	___aldiv@quotient,f
 19831  2D59  09AF               	comf	___aldiv@quotient+1,f
 19832  2D5A  09B0               	comf	___aldiv@quotient+2,f
 19833  2D5B  09B1               	comf	___aldiv@quotient+3,f
 19834  2D5C  0AAE               	incf	___aldiv@quotient,f
 19835  2D5D  1903               	skipnz
 19836  2D5E  0AAF               	incf	___aldiv@quotient+1,f
 19837  2D5F  1903               	skipnz
 19838  2D60  0AB0               	incf	___aldiv@quotient+2,f
 19839  2D61  1903               	skipnz
 19840  2D62  0AB1               	incf	___aldiv@quotient+3,f
 19841  2D63                     l7879:	
 19842  2D63  0831               	movf	___aldiv@quotient+3,w
 19843  2D64  00A7               	movwf	?___aldiv+3
 19844  2D65  0830               	movf	___aldiv@quotient+2,w
 19845  2D66  00A6               	movwf	?___aldiv+2
 19846  2D67  082F               	movf	___aldiv@quotient+1,w
 19847  2D68  00A5               	movwf	?___aldiv+1
 19848  2D69  082E               	movf	___aldiv@quotient,w
 19849  2D6A  00A4               	movwf	?___aldiv
 19850  2D6B  0008               	return
 19851  2D6C                     __end_of___aldiv:	
 19852                           
 19853                           	psect	intentry
 19854  0004                     __pintentry:	
 19855 ;; *************** function _myIsr *****************
 19856 ;; Defined at:
 19857 ;;		line 54 in file "main.c"
 19858 ;; Parameters:    Size  Location     Type
 19859 ;;		None
 19860 ;; Auto vars:     Size  Location     Type
 19861 ;;		None
 19862 ;; Return value:  Size  Location     Type
 19863 ;;                  1    wreg      void 
 19864 ;; Registers used:
 19865 ;;		wreg, status,2, status,0
 19866 ;; Tracked objects:
 19867 ;;		On entry : 0/0
 19868 ;;		On exit  : 0/0
 19869 ;;		Unchanged: 0/0
 19870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19875 ;;Total ram usage:        1 bytes
 19876 ;; Hardware stack levels used:    1
 19877 ;; This function calls:
 19878 ;;		Nothing
 19879 ;; This function is called by:
 19880 ;;		Interrupt level 1
 19881 ;; This function uses a non-reentrant model
 19882 ;;
 19883                           
 19884  0004                     _myIsr:	
 19885                           
 19886                           ;incstack = 0
 19887  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 19888                           
 19889                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 19890  0005  3180               	pagesel	$
 19891                           
 19892                           ;main.c: 56:     static uint8_t count = 0;;main.c: 58:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 19893  0006  0020               	movlb	0	; select bank0
 19894  0007  1C11               	btfss	17,0	;volatile
 19895  0008  281E               	goto	i1l145
 19896  0009  0021               	movlb	1	; select bank1
 19897  000A  1C11               	btfss	17,0	;volatile
 19898  000B  281E               	goto	i1l145
 19899                           
 19900                           ;main.c: 59:         PIR1bits.TMR1IF = 0;
 19901  000C  0020               	movlb	0	; select bank0
 19902  000D  1011               	bcf	17,0	;volatile
 19903                           
 19904                           ;main.c: 60:         count++;
 19905  000E  3001               	movlw	1
 19906  000F  00F0               	movwf	??_myIsr
 19907  0010  0870               	movf	??_myIsr,w
 19908  0011  0023               	movlb	3	; select bank3
 19909  0012  07D5               	addwf	myIsr@count^(0+384),f
 19910                           
 19911                           ;main.c: 63:         if (count == 61) {
 19912  0013  303D               	movlw	61
 19913  0014  0655               	xorwf	myIsr@count^(0+384),w
 19914  0015  1D03               	btfss	3,2
 19915  0016  281E               	goto	i1l145
 19916                           
 19917                           ;main.c: 64:             tmr1_flag = 1;
 19918  0017  3001               	movlw	1
 19919  0018  00F0               	movwf	??_myIsr
 19920  0019  0870               	movf	??_myIsr,w
 19921  001A  0021               	movlb	1	; select bank1
 19922  001B  00EF               	movwf	_tmr1_flag^(0+128)	;volatile
 19923                           
 19924                           ;main.c: 65:             count = 0;
 19925  001C  0023               	movlb	3	; select bank3
 19926  001D  01D5               	clrf	myIsr@count^(0+384)
 19927  001E                     i1l145:	
 19928  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 19929  001F  0009               	retfie
 19930  0020                     __end_of_myIsr:	
 19931  007E                     btemp	set	126	;btemp
 19932  007E                     int$flags	set	126
 19933  007E                     wtemp0	set	126
 19934  2771                     
 19935                           	psect	text7_split_1
 19936  2706                     l6861:	
 19937                           
 19938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 19939  2706  0859               	movf	vfpfcnvrt@fmt,w
 19940  2707  0086               	movwf	6
 19941  2708  0187               	clrf	7
 19942  2709  3F40               	moviw [0]fsr1
 19943  270A  00F1               	movwf	strncmp@_l
 19944  270B  3F41               	moviw [1]fsr1
 19945  270C  00F2               	movwf	strncmp@_l+1
 19946  270D  30C5               	movlw	low (STR_20| (0+32768))
 19947  270E  00F3               	movwf	strncmp@_r
 19948  270F  30B9               	movlw	high (STR_20| (0+32768))
 19949  2710  00F4               	movwf	strncmp@_r+1
 19950  2711  3003               	movlw	3
 19951  2712  00F5               	movwf	strncmp@n
 19952  2713  3000               	movlw	0
 19953  2714  00F6               	movwf	strncmp@n+1
 19954  2715  31A9  2132  31A7   	fcall	_strncmp
 19955  2718  0871               	movf	?_strncmp,w
 19956  2719  0472               	iorwf	?_strncmp+1,w
 19957  271A  1903               	btfsc	3,2
 19958  271B  2F33               	goto	l6865
 19959  271C  0020               	movlb	0	; select bank0
 19960  271D  0859               	movf	vfpfcnvrt@fmt,w
 19961  271E  0086               	movwf	6
 19962  271F  0187               	clrf	7
 19963  2720  3F40               	moviw [0]fsr1
 19964  2721  00F1               	movwf	strncmp@_l
 19965  2722  3F41               	moviw [1]fsr1
 19966  2723  00F2               	movwf	strncmp@_l+1
 19967  2724  30C9               	movlw	low (STR_24| (0+32768))
 19968  2725  00F3               	movwf	strncmp@_r
 19969  2726  30B9               	movlw	high (STR_24| (0+32768))
 19970  2727  00F4               	movwf	strncmp@_r+1
 19971  2728  3003               	movlw	3
 19972  2729  00F5               	movwf	strncmp@n
 19973  272A  3000               	movlw	0
 19974  272B  00F6               	movwf	strncmp@n+1
 19975  272C  31A9  2132  31A7   	fcall	_strncmp
 19976  272F  0871               	movf	?_strncmp,w
 19977  2730  0472               	iorwf	?_strncmp+1,w
 19978  2731  1D03               	btfss	3,2
 19979  2732  2F7E               	goto	l6873
 19980  2733                     l6865:	
 19981                           
 19982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 19983  2733  0020               	movlb	0	; select bank0
 19984  2734  0859               	movf	vfpfcnvrt@fmt,w
 19985  2735  0086               	movwf	6
 19986  2736  0187               	clrf	7
 19987  2737  3003               	movlw	3
 19988  2738  0781               	addwf	1,f
 19989  2739  3141               	addfsr 1,1
 19990  273A  1803               	skipnc
 19991  273B  0A81               	incf	1,f
 19992                           
 19993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 19994  273C  085A               	movf	vfpfcnvrt@ap,w
 19995  273D  0086               	movwf	6
 19996  273E  0187               	clrf	7
 19997  273F  0801               	movf	1,w
 19998  2740  0084               	movwf	4
 19999  2741  0185               	clrf	5
 20000  2742  3002               	movlw	2
 20001  2743  0781               	addwf	1,f
 20002  2744  0800               	movf	0,w
 20003  2745  0021               	movlb	1	; select bank1
 20004  2746  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20005  2747  3980               	andlw	128
 20006  2748  1D03               	skipz
 20007  2749  30FF               	movlw	255
 20008  274A  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20009  274B  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20010  274C  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20011  274D  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20012  274E  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20013  274F  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20014  2750  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20015                           
 20016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 20017  2751  0020               	movlb	0	; select bank0
 20018  2752  0858               	movf	vfpfcnvrt@fp+1,w
 20019  2753  00B1               	movwf	dtoa@fp+1
 20020  2754  0857               	movf	vfpfcnvrt@fp,w
 20021  2755  00B0               	movwf	dtoa@fp
 20022  2756  0021               	movlb	1	; select bank1
 20023  2757  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20024  2758  0020               	movlb	0	; select bank0
 20025  2759  00B2               	movwf	dtoa@d
 20026  275A  0021               	movlb	1	; select bank1
 20027  275B  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20028  275C  0020               	movlb	0	; select bank0
 20029  275D  00B3               	movwf	dtoa@d+1
 20030  275E  0021               	movlb	1	; select bank1
 20031  275F  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20032  2760  0020               	movlb	0	; select bank0
 20033  2761  00B4               	movwf	dtoa@d+2
 20034  2762  0021               	movlb	1	; select bank1
 20035  2763  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20036  2764  0020               	movlb	0	; select bank0
 20037  2765  00B5               	movwf	dtoa@d+3
 20038  2766  0021               	movlb	1	; select bank1
 20039  2767  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20040  2768  0020               	movlb	0	; select bank0
 20041  2769  00B6               	movwf	dtoa@d+4
 20042  276A  0021               	movlb	1	; select bank1
 20043  276B  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20044  276C  0020               	movlb	0	; select bank0
 20045  276D  00B7               	movwf	dtoa@d+5
 20046  276E  0021               	movlb	1	; select bank1
 20047  276F  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20048  2770  0020               	movlb	0	; select bank0
 20049  2771  00B8               	movwf	dtoa@d+6
 20050  2772  0021               	movlb	1	; select bank1
 20051  2773  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20052  2774  0020               	movlb	0	; select bank0
 20053  2775  00B9               	movwf	dtoa@d+7
 20054  2776  319A  2236         	fcall	_dtoa
 20055  2778  0020               	movlb	0	; select bank0
 20056  2779  0831               	movf	?_dtoa+1,w
 20057  277A  00D8               	movwf	?_vfpfcnvrt+1
 20058  277B  0830               	movf	?_dtoa,w
 20059  277C  00D7               	movwf	?_vfpfcnvrt
 20060  277D  0008               	return
 20061  277E                     l6873:	
 20062                           
 20063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 20064  277E  0020               	movlb	0	; select bank0
 20065  277F  0859               	movf	vfpfcnvrt@fmt,w
 20066  2780  0086               	movwf	6
 20067  2781  0187               	clrf	7
 20068  2782  3F40               	moviw [0]fsr1
 20069  2783  00F1               	movwf	strncmp@_l
 20070  2784  3F41               	moviw [1]fsr1
 20071  2785  00F2               	movwf	strncmp@_l+1
 20072  2786  30C6               	movlw	low ((STR_20+1)| (0+32768))
 20073  2787  00F3               	movwf	strncmp@_r
 20074  2788  30B9               	movlw	high ((STR_20+1)| (0+32768))
 20075  2789  00F4               	movwf	strncmp@_r+1
 20076  278A  3002               	movlw	2
 20077  278B  00F5               	movwf	strncmp@n
 20078  278C  3000               	movlw	0
 20079  278D  00F6               	movwf	strncmp@n+1
 20080  278E  31A9  2132  31A7   	fcall	_strncmp
 20081  2791  0871               	movf	?_strncmp,w
 20082  2792  0472               	iorwf	?_strncmp+1,w
 20083  2793  1903               	btfsc	3,2
 20084  2794  2FAC               	goto	l6877
 20085  2795  0020               	movlb	0	; select bank0
 20086  2796  0859               	movf	vfpfcnvrt@fmt,w
 20087  2797  0086               	movwf	6
 20088  2798  0187               	clrf	7
 20089  2799  3F40               	moviw [0]fsr1
 20090  279A  00F1               	movwf	strncmp@_l
 20091  279B  3F41               	moviw [1]fsr1
 20092  279C  00F2               	movwf	strncmp@_l+1
 20093  279D  30CA               	movlw	low ((STR_24+1)| (0+32768))
 20094  279E  00F3               	movwf	strncmp@_r
 20095  279F  30B9               	movlw	high ((STR_24+1)| (0+32768))
 20096  27A0  00F4               	movwf	strncmp@_r+1
 20097  27A1  3002               	movlw	2
 20098  27A2  00F5               	movwf	strncmp@n
 20099  27A3  3000               	movlw	0
 20100  27A4  00F6               	movwf	strncmp@n+1
 20101  27A5  31A9  2132  31A7   	fcall	_strncmp
 20102  27A8  0871               	movf	?_strncmp,w
 20103  27A9  0472               	iorwf	?_strncmp+1,w
 20104  27AA  1D03               	btfss	3,2
 20105  27AB  2FFE               	goto	L9
 20106  27AC                     l6877:	
 20107                           
 20108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 20109  27AC  0020               	movlb	0	; select bank0
 20110  27AD  0859               	movf	vfpfcnvrt@fmt,w
 20111  27AE  0086               	movwf	6
 20112  27AF  0187               	clrf	7
 20113  27B0  3002               	movlw	2
 20114  27B1  0781               	addwf	1,f
 20115  27B2  3141               	addfsr 1,1
 20116  27B3  1803               	skipnc
 20117  27B4  0A81               	incf	1,f
 20118                           
 20119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 20120  27B5  085A               	movf	vfpfcnvrt@ap,w
 20121  27B6  0086               	movwf	6
 20122  27B7  0187               	clrf	7
 20123  27B8  0801               	movf	1,w
 20124  27B9  0084               	movwf	4
 20125  27BA  0185               	clrf	5
 20126  27BB  3002               	movlw	2
 20127  27BC  0781               	addwf	1,f
 20128  27BD  3F00               	moviw [0]fsr0
 20129  27BE  00DB               	movwf	??_vfpfcnvrt
 20130  27BF  3F01               	moviw [1]fsr0
 20131  27C0  00DC               	movwf	??_vfpfcnvrt+1
 20132  27C1  085B               	movf	??_vfpfcnvrt,w
 20133  27C2  0021               	movlb	1	; select bank1
 20134  27C3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20135  27C4  0020               	movlb	0	; select bank0
 20136  27C5  085C               	movf	??_vfpfcnvrt+1,w
 20137  27C6  0021               	movlb	1	; select bank1
 20138  27C7  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20139  27C8  0D89               	rlf	9,f
 20140  27C9  3B89               	subwfb	9,f
 20141  27CA  0989               	comf	9,f
 20142  27CB  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20143  27CC  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20144  27CD  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20145  27CE  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20146  27CF  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20147  27D0  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20148                           
 20149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 20150  27D1  0020               	movlb	0	; select bank0
 20151  27D2  0858               	movf	vfpfcnvrt@fp+1,w
 20152  27D3  00B1               	movwf	dtoa@fp+1
 20153  27D4  0857               	movf	vfpfcnvrt@fp,w
 20154  27D5  00B0               	movwf	dtoa@fp
 20155  27D6  0021               	movlb	1	; select bank1
 20156  27D7  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20157  27D8  0020               	movlb	0	; select bank0
 20158  27D9  00B2               	movwf	dtoa@d
 20159  27DA  0021               	movlb	1	; select bank1
 20160  27DB  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20161  27DC  0020               	movlb	0	; select bank0
 20162  27DD  00B3               	movwf	dtoa@d+1
 20163  27DE  0021               	movlb	1	; select bank1
 20164  27DF  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20165  27E0  0020               	movlb	0	; select bank0
 20166  27E1  00B4               	movwf	dtoa@d+2
 20167  27E2  0021               	movlb	1	; select bank1
 20168  27E3  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20169  27E4  0020               	movlb	0	; select bank0
 20170  27E5  00B5               	movwf	dtoa@d+3
 20171  27E6  0021               	movlb	1	; select bank1
 20172  27E7  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20173  27E8  0020               	movlb	0	; select bank0
 20174  27E9  00B6               	movwf	dtoa@d+4
 20175  27EA  0021               	movlb	1	; select bank1
 20176  27EB  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20177  27EC  0020               	movlb	0	; select bank0
 20178  27ED  00B7               	movwf	dtoa@d+5
 20179  27EE  0021               	movlb	1	; select bank1
 20180  27EF  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20181  27F0  0020               	movlb	0	; select bank0
 20182  27F1  00B8               	movwf	dtoa@d+6
 20183  27F2  0021               	movlb	1	; select bank1
 20184  27F3  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20185  27F4  0020               	movlb	0	; select bank0
 20186  27F5  00B9               	movwf	dtoa@d+7
 20187  27F6  319A  2236         	fcall	_dtoa
 20188  27F8  0020               	movlb	0	; select bank0
 20189  27F9  0831               	movf	?_dtoa+1,w
 20190  27FA  00D8               	movwf	?_vfpfcnvrt+1
 20191  27FB  0830               	movf	?_dtoa,w
 20192  27FC  00D7               	movwf	?_vfpfcnvrt
 20193  27FD  0008               	return
 20194  27FE                     L9:	
 20195  27FE                     L8:	
 20196  27FE  3188  2843         	ljmp	l6885
 20197                           
 20198                           	psect	text7_split_2
 20199  0843                     l6885:	
 20200                           
 20201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 20202  0843  0020               	movlb	0	; select bank0
 20203  0844  0859               	movf	vfpfcnvrt@fmt,w
 20204  0845  0086               	movwf	6
 20205  0846  0187               	clrf	7
 20206  0847  3F40               	moviw [0]fsr1
 20207  0848  00DB               	movwf	??_vfpfcnvrt
 20208  0849  3F41               	moviw [1]fsr1
 20209  084A  00DC               	movwf	??_vfpfcnvrt+1
 20210  084B  085B               	movf	??_vfpfcnvrt,w
 20211  084C  0084               	movwf	4
 20212  084D  085C               	movf	??_vfpfcnvrt+1,w
 20213  084E  0085               	movwf	5
 20214  084F  0012               	moviw fsr0++
 20215  0850  3A64               	xorlw	100
 20216  0851  1903               	btfsc	3,2
 20217  0852  2862               	goto	l6889
 20218  0853  0859               	movf	vfpfcnvrt@fmt,w
 20219  0854  0086               	movwf	6
 20220  0855  0187               	clrf	7
 20221  0856  3F40               	moviw [0]fsr1
 20222  0857  00DB               	movwf	??_vfpfcnvrt
 20223  0858  3F41               	moviw [1]fsr1
 20224  0859  00DC               	movwf	??_vfpfcnvrt+1
 20225  085A  085B               	movf	??_vfpfcnvrt,w
 20226  085B  0084               	movwf	4
 20227  085C  085C               	movf	??_vfpfcnvrt+1,w
 20228  085D  0085               	movwf	5
 20229  085E  0012               	moviw fsr0++
 20230  085F  3A69               	xorlw	105
 20231  0860  1D03               	btfss	3,2
 20232  0861  28B3               	goto	l6897
 20233  0862                     l6889:	
 20234                           
 20235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 20236  0862  0859               	movf	vfpfcnvrt@fmt,w
 20237  0863  0086               	movwf	6
 20238  0864  0187               	clrf	7
 20239  0865  3001               	movlw	1
 20240  0866  0781               	addwf	1,f
 20241  0867  3141               	addfsr 1,1
 20242  0868  1803               	skipnc
 20243  0869  0A81               	incf	1,f
 20244                           
 20245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 20246  086A  085A               	movf	vfpfcnvrt@ap,w
 20247  086B  0086               	movwf	6
 20248  086C  0187               	clrf	7
 20249  086D  0801               	movf	1,w
 20250  086E  0084               	movwf	4
 20251  086F  0185               	clrf	5
 20252  0870  3002               	movlw	2
 20253  0871  0781               	addwf	1,f
 20254  0872  3F00               	moviw [0]fsr0
 20255  0873  00DB               	movwf	??_vfpfcnvrt
 20256  0874  3F01               	moviw [1]fsr0
 20257  0875  00DC               	movwf	??_vfpfcnvrt+1
 20258  0876  085B               	movf	??_vfpfcnvrt,w
 20259  0877  0021               	movlb	1	; select bank1
 20260  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20261  0879  0020               	movlb	0	; select bank0
 20262  087A  085C               	movf	??_vfpfcnvrt+1,w
 20263  087B  0021               	movlb	1	; select bank1
 20264  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20265  087D  0D89               	rlf	9,f
 20266  087E  3B89               	subwfb	9,f
 20267  087F  0989               	comf	9,f
 20268  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20269  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20270  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20271  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20272  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20273  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20274                           
 20275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 20276  0886  0020               	movlb	0	; select bank0
 20277  0887  0858               	movf	vfpfcnvrt@fp+1,w
 20278  0888  00B1               	movwf	dtoa@fp+1
 20279  0889  0857               	movf	vfpfcnvrt@fp,w
 20280  088A  00B0               	movwf	dtoa@fp
 20281  088B  0021               	movlb	1	; select bank1
 20282  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20283  088D  0020               	movlb	0	; select bank0
 20284  088E  00B2               	movwf	dtoa@d
 20285  088F  0021               	movlb	1	; select bank1
 20286  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20287  0891  0020               	movlb	0	; select bank0
 20288  0892  00B3               	movwf	dtoa@d+1
 20289  0893  0021               	movlb	1	; select bank1
 20290  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20291  0895  0020               	movlb	0	; select bank0
 20292  0896  00B4               	movwf	dtoa@d+2
 20293  0897  0021               	movlb	1	; select bank1
 20294  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20295  0899  0020               	movlb	0	; select bank0
 20296  089A  00B5               	movwf	dtoa@d+3
 20297  089B  0021               	movlb	1	; select bank1
 20298  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20299  089D  0020               	movlb	0	; select bank0
 20300  089E  00B6               	movwf	dtoa@d+4
 20301  089F  0021               	movlb	1	; select bank1
 20302  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20303  08A1  0020               	movlb	0	; select bank0
 20304  08A2  00B7               	movwf	dtoa@d+5
 20305  08A3  0021               	movlb	1	; select bank1
 20306  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20307  08A5  0020               	movlb	0	; select bank0
 20308  08A6  00B8               	movwf	dtoa@d+6
 20309  08A7  0021               	movlb	1	; select bank1
 20310  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20311  08A9  0020               	movlb	0	; select bank0
 20312  08AA  00B9               	movwf	dtoa@d+7
 20313  08AB  319A  2236         	fcall	_dtoa
 20314  08AD  0020               	movlb	0	; select bank0
 20315  08AE  0831               	movf	?_dtoa+1,w
 20316  08AF  00D8               	movwf	?_vfpfcnvrt+1
 20317  08B0  0830               	movf	?_dtoa,w
 20318  08B1  00D7               	movwf	?_vfpfcnvrt
 20319  08B2  0008               	return
 20320  08B3                     l6897:	
 20321                           
 20322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 20323  08B3  0859               	movf	vfpfcnvrt@fmt,w
 20324  08B4  0086               	movwf	6
 20325  08B5  0187               	clrf	7
 20326  08B6  3F40               	moviw [0]fsr1
 20327  08B7  00F1               	movwf	strncmp@_l
 20328  08B8  3F41               	moviw [1]fsr1
 20329  08B9  00F2               	movwf	strncmp@_l+1
 20330  08BA  30E0               	movlw	low (STR_38| (0+32768))
 20331  08BB  00F3               	movwf	strncmp@_r
 20332  08BC  30B9               	movlw	high (STR_38| (0+32768))
 20333  08BD  00F4               	movwf	strncmp@_r+1
 20334  08BE  3002               	movlw	2
 20335  08BF  00F5               	movwf	strncmp@n
 20336  08C0  3000               	movlw	0
 20337  08C1  00F6               	movwf	strncmp@n+1
 20338  08C2  31A9  2132  3188   	fcall	_strncmp
 20339  08C5  0871               	movf	?_strncmp,w
 20340  08C6  0472               	iorwf	?_strncmp+1,w
 20341  08C7  1903               	btfsc	3,2
 20342  08C8  28E0               	goto	l6901
 20343  08C9  0020               	movlb	0	; select bank0
 20344  08CA  0859               	movf	vfpfcnvrt@fmt,w
 20345  08CB  0086               	movwf	6
 20346  08CC  0187               	clrf	7
 20347  08CD  3F40               	moviw [0]fsr1
 20348  08CE  00F1               	movwf	strncmp@_l
 20349  08CF  3F41               	moviw [1]fsr1
 20350  08D0  00F2               	movwf	strncmp@_l+1
 20351  08D1  30E3               	movlw	low (STR_42| (0+32768))
 20352  08D2  00F3               	movwf	strncmp@_r
 20353  08D3  30B9               	movlw	high (STR_42| (0+32768))
 20354  08D4  00F4               	movwf	strncmp@_r+1
 20355  08D5  3002               	movlw	2
 20356  08D6  00F5               	movwf	strncmp@n
 20357  08D7  3000               	movlw	0
 20358  08D8  00F6               	movwf	strncmp@n+1
 20359  08D9  31A9  2132  3188   	fcall	_strncmp
 20360  08DC  0871               	movf	?_strncmp,w
 20361  08DD  0472               	iorwf	?_strncmp+1,w
 20362  08DE  1D03               	btfss	3,2
 20363  08DF  2929               	goto	l6909
 20364  08E0                     l6901:	
 20365                           
 20366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 20367  08E0  0020               	movlb	0	; select bank0
 20368  08E1  0859               	movf	vfpfcnvrt@fmt,w
 20369  08E2  0086               	movwf	6
 20370  08E3  0187               	clrf	7
 20371  08E4  3002               	movlw	2
 20372  08E5  0781               	addwf	1,f
 20373  08E6  3141               	addfsr 1,1
 20374  08E7  1803               	skipnc
 20375  08E8  0A81               	incf	1,f
 20376                           
 20377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20378  08E9  085A               	movf	vfpfcnvrt@ap,w
 20379  08EA  0086               	movwf	6
 20380  08EB  0187               	clrf	7
 20381  08EC  0801               	movf	1,w
 20382  08ED  0084               	movwf	4
 20383  08EE  0185               	clrf	5
 20384  08EF  3002               	movlw	2
 20385  08F0  0781               	addwf	1,f
 20386  08F1  3F00               	moviw [0]fsr0
 20387  08F2  0021               	movlb	1	; select bank1
 20388  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20389  08F4  3F01               	moviw [1]fsr0
 20390  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20391  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 20392  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 20393  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 20394  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 20395  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 20396  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 20397                           
 20398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 20399  08FC  0020               	movlb	0	; select bank0
 20400  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 20401  08FE  00B1               	movwf	dtoa@fp+1
 20402  08FF  0857               	movf	vfpfcnvrt@fp,w
 20403  0900  00B0               	movwf	dtoa@fp
 20404  0901  0021               	movlb	1	; select bank1
 20405  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20406  0903  0020               	movlb	0	; select bank0
 20407  0904  00B2               	movwf	dtoa@d
 20408  0905  0021               	movlb	1	; select bank1
 20409  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20410  0907  0020               	movlb	0	; select bank0
 20411  0908  00B3               	movwf	dtoa@d+1
 20412  0909  0021               	movlb	1	; select bank1
 20413  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20414  090B  0020               	movlb	0	; select bank0
 20415  090C  00B4               	movwf	dtoa@d+2
 20416  090D  0021               	movlb	1	; select bank1
 20417  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20418  090F  0020               	movlb	0	; select bank0
 20419  0910  00B5               	movwf	dtoa@d+3
 20420  0911  0021               	movlb	1	; select bank1
 20421  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20422  0913  0020               	movlb	0	; select bank0
 20423  0914  00B6               	movwf	dtoa@d+4
 20424  0915  0021               	movlb	1	; select bank1
 20425  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20426  0917  0020               	movlb	0	; select bank0
 20427  0918  00B7               	movwf	dtoa@d+5
 20428  0919  0021               	movlb	1	; select bank1
 20429  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20430  091B  0020               	movlb	0	; select bank0
 20431  091C  00B8               	movwf	dtoa@d+6
 20432  091D  0021               	movlb	1	; select bank1
 20433  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20434  091F  0020               	movlb	0	; select bank0
 20435  0920  00B9               	movwf	dtoa@d+7
 20436  0921  319A  2236         	fcall	_dtoa
 20437  0923  0020               	movlb	0	; select bank0
 20438  0924  0831               	movf	?_dtoa+1,w
 20439  0925  00D8               	movwf	?_vfpfcnvrt+1
 20440  0926  0830               	movf	?_dtoa,w
 20441  0927  00D7               	movwf	?_vfpfcnvrt
 20442  0928  0008               	return
 20443  0929                     l6909:	
 20444                           
 20445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 20446  0929  0020               	movlb	0	; select bank0
 20447  092A  0859               	movf	vfpfcnvrt@fmt,w
 20448  092B  0086               	movwf	6
 20449  092C  0187               	clrf	7
 20450  092D  3F40               	moviw [0]fsr1
 20451  092E  00F1               	movwf	strncmp@_l
 20452  092F  3F41               	moviw [1]fsr1
 20453  0930  00F2               	movwf	strncmp@_l+1
 20454  0931  30D1               	movlw	low (STR_47| (0+32768))
 20455  0932  00F3               	movwf	strncmp@_r
 20456  0933  30B9               	movlw	high (STR_47| (0+32768))
 20457  0934  00F4               	movwf	strncmp@_r+1
 20458  0935  3003               	movlw	3
 20459  0936  00F5               	movwf	strncmp@n
 20460  0937  3000               	movlw	0
 20461  0938  00F6               	movwf	strncmp@n+1
 20462  0939  31A9  2132  3188   	fcall	_strncmp
 20463  093C  0871               	movf	?_strncmp,w
 20464  093D  0472               	iorwf	?_strncmp+1,w
 20465  093E  1D03               	btfss	3,2
 20466  093F  2988               	goto	l6919
 20467                           
 20468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 20469  0940  0020               	movlb	0	; select bank0
 20470  0941  0859               	movf	vfpfcnvrt@fmt,w
 20471  0942  0086               	movwf	6
 20472  0943  0187               	clrf	7
 20473  0944  3003               	movlw	3
 20474  0945  0781               	addwf	1,f
 20475  0946  3141               	addfsr 1,1
 20476  0947  1803               	skipnc
 20477  0948  0A81               	incf	1,f
 20478                           
 20479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20480  0949  085A               	movf	vfpfcnvrt@ap,w
 20481  094A  0086               	movwf	6
 20482  094B  0187               	clrf	7
 20483  094C  0801               	movf	1,w
 20484  094D  0084               	movwf	4
 20485  094E  0185               	clrf	5
 20486  094F  3002               	movlw	2
 20487  0950  0781               	addwf	1,f
 20488  0951  0800               	movf	0,w
 20489  0952  0021               	movlb	1	; select bank1
 20490  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20491  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 20492  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20493  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20494  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20495  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20496  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20497  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20498                           
 20499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 20500  095B  0020               	movlb	0	; select bank0
 20501  095C  0858               	movf	vfpfcnvrt@fp+1,w
 20502  095D  00B1               	movwf	otoa@fp+1
 20503  095E  0857               	movf	vfpfcnvrt@fp,w
 20504  095F  00B0               	movwf	otoa@fp
 20505  0960  0021               	movlb	1	; select bank1
 20506  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20507  0962  0020               	movlb	0	; select bank0
 20508  0963  00B2               	movwf	otoa@d
 20509  0964  0021               	movlb	1	; select bank1
 20510  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20511  0966  0020               	movlb	0	; select bank0
 20512  0967  00B3               	movwf	otoa@d+1
 20513  0968  0021               	movlb	1	; select bank1
 20514  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20515  096A  0020               	movlb	0	; select bank0
 20516  096B  00B4               	movwf	otoa@d+2
 20517  096C  0021               	movlb	1	; select bank1
 20518  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20519  096E  0020               	movlb	0	; select bank0
 20520  096F  00B5               	movwf	otoa@d+3
 20521  0970  0021               	movlb	1	; select bank1
 20522  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20523  0972  0020               	movlb	0	; select bank0
 20524  0973  00B6               	movwf	otoa@d+4
 20525  0974  0021               	movlb	1	; select bank1
 20526  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20527  0976  0020               	movlb	0	; select bank0
 20528  0977  00B7               	movwf	otoa@d+5
 20529  0978  0021               	movlb	1	; select bank1
 20530  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20531  097A  0020               	movlb	0	; select bank0
 20532  097B  00B8               	movwf	otoa@d+6
 20533  097C  0021               	movlb	1	; select bank1
 20534  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20535  097E  0020               	movlb	0	; select bank0
 20536  097F  00B9               	movwf	otoa@d+7
 20537  0980  31A5  2522         	fcall	_otoa
 20538  0982  0020               	movlb	0	; select bank0
 20539  0983  0831               	movf	?_otoa+1,w
 20540  0984  00D8               	movwf	?_vfpfcnvrt+1
 20541  0985  0830               	movf	?_otoa,w
 20542  0986  00D7               	movwf	?_vfpfcnvrt
 20543  0987  0008               	return
 20544  0988                     l6919:	
 20545                           
 20546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 20547  0988  0020               	movlb	0	; select bank0
 20548  0989  0859               	movf	vfpfcnvrt@fmt,w
 20549  098A  0086               	movwf	6
 20550  098B  0187               	clrf	7
 20551  098C  3F40               	moviw [0]fsr1
 20552  098D  00F1               	movwf	strncmp@_l
 20553  098E  3F41               	moviw [1]fsr1
 20554  098F  00F2               	movwf	strncmp@_l+1
 20555  0990  30D2               	movlw	low ((STR_47+1)| (0+32768))
 20556  0991  00F3               	movwf	strncmp@_r
 20557  0992  30B9               	movlw	high ((STR_47+1)| (0+32768))
 20558  0993  00F4               	movwf	strncmp@_r+1
 20559  0994  3002               	movlw	2
 20560  0995  00F5               	movwf	strncmp@n
 20561  0996  3000               	movlw	0
 20562  0997  00F6               	movwf	strncmp@n+1
 20563  0998  31A9  2132  3188   	fcall	_strncmp
 20564  099B  0871               	movf	?_strncmp,w
 20565  099C  0472               	iorwf	?_strncmp+1,w
 20566  099D  1D03               	btfss	3,2
 20567  099E  29E8               	goto	l6929
 20568                           
 20569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 20570  099F  0020               	movlb	0	; select bank0
 20571  09A0  0859               	movf	vfpfcnvrt@fmt,w
 20572  09A1  0086               	movwf	6
 20573  09A2  0187               	clrf	7
 20574  09A3  3002               	movlw	2
 20575  09A4  0781               	addwf	1,f
 20576  09A5  3141               	addfsr 1,1
 20577  09A6  1803               	skipnc
 20578  09A7  0A81               	incf	1,f
 20579                           
 20580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 20581  09A8  085A               	movf	vfpfcnvrt@ap,w
 20582  09A9  0086               	movwf	6
 20583  09AA  0187               	clrf	7
 20584  09AB  0801               	movf	1,w
 20585  09AC  0084               	movwf	4
 20586  09AD  0185               	clrf	5
 20587  09AE  3002               	movlw	2
 20588  09AF  0781               	addwf	1,f
 20589  09B0  3F00               	moviw [0]fsr0
 20590  09B1  0021               	movlb	1	; select bank1
 20591  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20592  09B3  3F01               	moviw [1]fsr0
 20593  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 20594  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20595  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20596  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20597  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20598  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20599  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20600                           
 20601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 20602  09BB  0020               	movlb	0	; select bank0
 20603  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 20604  09BD  00B1               	movwf	otoa@fp+1
 20605  09BE  0857               	movf	vfpfcnvrt@fp,w
 20606  09BF  00B0               	movwf	otoa@fp
 20607  09C0  0021               	movlb	1	; select bank1
 20608  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20609  09C2  0020               	movlb	0	; select bank0
 20610  09C3  00B2               	movwf	otoa@d
 20611  09C4  0021               	movlb	1	; select bank1
 20612  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20613  09C6  0020               	movlb	0	; select bank0
 20614  09C7  00B3               	movwf	otoa@d+1
 20615  09C8  0021               	movlb	1	; select bank1
 20616  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20617  09CA  0020               	movlb	0	; select bank0
 20618  09CB  00B4               	movwf	otoa@d+2
 20619  09CC  0021               	movlb	1	; select bank1
 20620  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20621  09CE  0020               	movlb	0	; select bank0
 20622  09CF  00B5               	movwf	otoa@d+3
 20623  09D0  0021               	movlb	1	; select bank1
 20624  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20625  09D2  0020               	movlb	0	; select bank0
 20626  09D3  00B6               	movwf	otoa@d+4
 20627  09D4  0021               	movlb	1	; select bank1
 20628  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20629  09D6  0020               	movlb	0	; select bank0
 20630  09D7  00B7               	movwf	otoa@d+5
 20631  09D8  0021               	movlb	1	; select bank1
 20632  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20633  09DA  0020               	movlb	0	; select bank0
 20634  09DB  00B8               	movwf	otoa@d+6
 20635  09DC  0021               	movlb	1	; select bank1
 20636  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20637  09DE  0020               	movlb	0	; select bank0
 20638  09DF  00B9               	movwf	otoa@d+7
 20639  09E0  31A5  2522         	fcall	_otoa
 20640  09E2  0020               	movlb	0	; select bank0
 20641  09E3  0831               	movf	?_otoa+1,w
 20642  09E4  00D8               	movwf	?_vfpfcnvrt+1
 20643  09E5  0830               	movf	?_otoa,w
 20644  09E6  00D7               	movwf	?_vfpfcnvrt
 20645  09E7  0008               	return
 20646  09E8                     l6929:	
 20647                           
 20648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 20649  09E8  0020               	movlb	0	; select bank0
 20650  09E9  0859               	movf	vfpfcnvrt@fmt,w
 20651  09EA  0086               	movwf	6
 20652  09EB  0187               	clrf	7
 20653  09EC  3F40               	moviw [0]fsr1
 20654  09ED  00DB               	movwf	??_vfpfcnvrt
 20655  09EE  3F41               	moviw [1]fsr1
 20656  09EF  00DC               	movwf	??_vfpfcnvrt+1
 20657  09F0  085B               	movf	??_vfpfcnvrt,w
 20658  09F1  0084               	movwf	4
 20659  09F2  085C               	movf	??_vfpfcnvrt+1,w
 20660  09F3  0085               	movwf	5
 20661  09F4  0012               	moviw fsr0++
 20662  09F5  3A6F               	xorlw	111
 20663  09F6  1D03               	btfss	3,2
 20664  09F7  2A40               	goto	l6939
 20665                           
 20666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 20667  09F8  0859               	movf	vfpfcnvrt@fmt,w
 20668  09F9  0086               	movwf	6
 20669  09FA  0187               	clrf	7
 20670  09FB  3001               	movlw	1
 20671  09FC  0781               	addwf	1,f
 20672  09FD  3141               	addfsr 1,1
 20673  09FE  1803               	skipnc
 20674  09FF  0A81               	incf	1,f
 20675                           
 20676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 20677  0A00  085A               	movf	vfpfcnvrt@ap,w
 20678  0A01  0086               	movwf	6
 20679  0A02  0187               	clrf	7
 20680  0A03  0801               	movf	1,w
 20681  0A04  0084               	movwf	4
 20682  0A05  0185               	clrf	5
 20683  0A06  3002               	movlw	2
 20684  0A07  0781               	addwf	1,f
 20685  0A08  3F00               	moviw [0]fsr0
 20686  0A09  0021               	movlb	1	; select bank1
 20687  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20688  0A0B  3F01               	moviw [1]fsr0
 20689  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 20690  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20691  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20692  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20693  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20694  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20695  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20696                           
 20697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 20698  0A13  0020               	movlb	0	; select bank0
 20699  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 20700  0A15  00B1               	movwf	otoa@fp+1
 20701  0A16  0857               	movf	vfpfcnvrt@fp,w
 20702  0A17  00B0               	movwf	otoa@fp
 20703  0A18  0021               	movlb	1	; select bank1
 20704  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20705  0A1A  0020               	movlb	0	; select bank0
 20706  0A1B  00B2               	movwf	otoa@d
 20707  0A1C  0021               	movlb	1	; select bank1
 20708  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20709  0A1E  0020               	movlb	0	; select bank0
 20710  0A1F  00B3               	movwf	otoa@d+1
 20711  0A20  0021               	movlb	1	; select bank1
 20712  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20713  0A22  0020               	movlb	0	; select bank0
 20714  0A23  00B4               	movwf	otoa@d+2
 20715  0A24  0021               	movlb	1	; select bank1
 20716  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20717  0A26  0020               	movlb	0	; select bank0
 20718  0A27  00B5               	movwf	otoa@d+3
 20719  0A28  0021               	movlb	1	; select bank1
 20720  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20721  0A2A  0020               	movlb	0	; select bank0
 20722  0A2B  00B6               	movwf	otoa@d+4
 20723  0A2C  0021               	movlb	1	; select bank1
 20724  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20725  0A2E  0020               	movlb	0	; select bank0
 20726  0A2F  00B7               	movwf	otoa@d+5
 20727  0A30  0021               	movlb	1	; select bank1
 20728  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20729  0A32  0020               	movlb	0	; select bank0
 20730  0A33  00B8               	movwf	otoa@d+6
 20731  0A34  0021               	movlb	1	; select bank1
 20732  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20733  0A36  0020               	movlb	0	; select bank0
 20734  0A37  00B9               	movwf	otoa@d+7
 20735  0A38  31A5  2522         	fcall	_otoa
 20736  0A3A  0020               	movlb	0	; select bank0
 20737  0A3B  0831               	movf	?_otoa+1,w
 20738  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 20739  0A3D  0830               	movf	?_otoa,w
 20740  0A3E  00D7               	movwf	?_vfpfcnvrt
 20741  0A3F  0008               	return
 20742  0A40                     l6939:	
 20743                           
 20744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 20745  0A40  0859               	movf	vfpfcnvrt@fmt,w
 20746  0A41  0086               	movwf	6
 20747  0A42  0187               	clrf	7
 20748  0A43  3F40               	moviw [0]fsr1
 20749  0A44  00F1               	movwf	strncmp@_l
 20750  0A45  3F41               	moviw [1]fsr1
 20751  0A46  00F2               	movwf	strncmp@_l+1
 20752  0A47  30E9               	movlw	low (STR_57| (0+32768))
 20753  0A48  00F3               	movwf	strncmp@_r
 20754  0A49  30B9               	movlw	high (STR_57| (0+32768))
 20755  0A4A  00F4               	movwf	strncmp@_r+1
 20756  0A4B  3002               	movlw	2
 20757  0A4C  00F5               	movwf	strncmp@n
 20758  0A4D  3000               	movlw	0
 20759  0A4E  00F6               	movwf	strncmp@n+1
 20760  0A4F  31A9  2132  3188   	fcall	_strncmp
 20761  0A52  0871               	movf	?_strncmp,w
 20762  0A53  0472               	iorwf	?_strncmp+1,w
 20763  0A54  1D03               	btfss	3,2
 20764  0A55  2A9F               	goto	l6949
 20765                           
 20766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 20767  0A56  0020               	movlb	0	; select bank0
 20768  0A57  0859               	movf	vfpfcnvrt@fmt,w
 20769  0A58  0086               	movwf	6
 20770  0A59  0187               	clrf	7
 20771  0A5A  3002               	movlw	2
 20772  0A5B  0781               	addwf	1,f
 20773  0A5C  3141               	addfsr 1,1
 20774  0A5D  1803               	skipnc
 20775  0A5E  0A81               	incf	1,f
 20776                           
 20777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20778  0A5F  085A               	movf	vfpfcnvrt@ap,w
 20779  0A60  0086               	movwf	6
 20780  0A61  0187               	clrf	7
 20781  0A62  0801               	movf	1,w
 20782  0A63  0084               	movwf	4
 20783  0A64  0185               	clrf	5
 20784  0A65  3002               	movlw	2
 20785  0A66  0781               	addwf	1,f
 20786  0A67  3F00               	moviw [0]fsr0
 20787  0A68  0021               	movlb	1	; select bank1
 20788  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20789  0A6A  3F01               	moviw [1]fsr0
 20790  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 20791  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20792  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20793  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20794  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20795  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20796  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20797                           
 20798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 20799  0A72  0020               	movlb	0	; select bank0
 20800  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 20801  0A74  00B1               	movwf	otoa@fp+1
 20802  0A75  0857               	movf	vfpfcnvrt@fp,w
 20803  0A76  00B0               	movwf	otoa@fp
 20804  0A77  0021               	movlb	1	; select bank1
 20805  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20806  0A79  0020               	movlb	0	; select bank0
 20807  0A7A  00B2               	movwf	otoa@d
 20808  0A7B  0021               	movlb	1	; select bank1
 20809  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20810  0A7D  0020               	movlb	0	; select bank0
 20811  0A7E  00B3               	movwf	otoa@d+1
 20812  0A7F  0021               	movlb	1	; select bank1
 20813  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20814  0A81  0020               	movlb	0	; select bank0
 20815  0A82  00B4               	movwf	otoa@d+2
 20816  0A83  0021               	movlb	1	; select bank1
 20817  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20818  0A85  0020               	movlb	0	; select bank0
 20819  0A86  00B5               	movwf	otoa@d+3
 20820  0A87  0021               	movlb	1	; select bank1
 20821  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20822  0A89  0020               	movlb	0	; select bank0
 20823  0A8A  00B6               	movwf	otoa@d+4
 20824  0A8B  0021               	movlb	1	; select bank1
 20825  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20826  0A8D  0020               	movlb	0	; select bank0
 20827  0A8E  00B7               	movwf	otoa@d+5
 20828  0A8F  0021               	movlb	1	; select bank1
 20829  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20830  0A91  0020               	movlb	0	; select bank0
 20831  0A92  00B8               	movwf	otoa@d+6
 20832  0A93  0021               	movlb	1	; select bank1
 20833  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20834  0A95  0020               	movlb	0	; select bank0
 20835  0A96  00B9               	movwf	otoa@d+7
 20836  0A97  31A5  2522         	fcall	_otoa
 20837  0A99  0020               	movlb	0	; select bank0
 20838  0A9A  0831               	movf	?_otoa+1,w
 20839  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 20840  0A9C  0830               	movf	?_otoa,w
 20841  0A9D  00D7               	movwf	?_vfpfcnvrt
 20842  0A9E  0008               	return
 20843  0A9F                     l6949:	
 20844                           
 20845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 20846  0A9F  0020               	movlb	0	; select bank0
 20847  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 20848  0AA1  0086               	movwf	6
 20849  0AA2  0187               	clrf	7
 20850  0AA3  3F40               	moviw [0]fsr1
 20851  0AA4  00F1               	movwf	strncmp@_l
 20852  0AA5  3F41               	moviw [1]fsr1
 20853  0AA6  00F2               	movwf	strncmp@_l+1
 20854  0AA7  30CD               	movlw	low (STR_62| (0+32768))
 20855  0AA8  00F3               	movwf	strncmp@_r
 20856  0AA9  30B9               	movlw	high (STR_62| (0+32768))
 20857  0AAA  00F4               	movwf	strncmp@_r+1
 20858  0AAB  3003               	movlw	3
 20859  0AAC  00F5               	movwf	strncmp@n
 20860  0AAD  3000               	movlw	0
 20861  0AAE  00F6               	movwf	strncmp@n+1
 20862  0AAF  31A9  2132  3188   	fcall	_strncmp
 20863  0AB2  0871               	movf	?_strncmp,w
 20864  0AB3  0472               	iorwf	?_strncmp+1,w
 20865  0AB4  1D03               	btfss	3,2
 20866  0AB5  2B36               	goto	l6961
 20867                           
 20868                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 20869  0AB6  0020               	movlb	0	; select bank0
 20870  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 20871  0AB8  0086               	movwf	6
 20872  0AB9  0187               	clrf	7
 20873  0ABA  3003               	movlw	3
 20874  0ABB  0781               	addwf	1,f
 20875  0ABC  3141               	addfsr 1,1
 20876  0ABD  1803               	skipnc
 20877  0ABE  0A81               	incf	1,f
 20878                           
 20879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 20880  0ABF  085A               	movf	vfpfcnvrt@ap,w
 20881  0AC0  0086               	movwf	6
 20882  0AC1  0187               	clrf	7
 20883  0AC2  0801               	movf	1,w
 20884  0AC3  0084               	movwf	4
 20885  0AC4  0185               	clrf	5
 20886  0AC5  3002               	movlw	2
 20887  0AC6  0781               	addwf	1,f
 20888  0AC7  3F00               	moviw [0]fsr0
 20889  0AC8  0021               	movlb	1	; select bank1
 20890  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 20891  0ACA  3F01               	moviw [1]fsr0
 20892  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 20893                           
 20894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 20895  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 20896  0ACD  0086               	movwf	6
 20897  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 20898  0ACF  0087               	movwf	7
 20899  0AD0  0023               	movlb	3	; select bank3
 20900  0AD1  0844               	movf	_nout^(0+384),w
 20901  0AD2  0081               	movwf	1
 20902  0AD3  2B32               	goto	l6957
 20903  0AD4                     l6963:	
 20904                           
 20905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 20906  0AD4  0020               	movlb	0	; select bank0
 20907  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 20908  0AD6  0086               	movwf	6
 20909  0AD7  0187               	clrf	7
 20910  0AD8  3002               	movlw	2
 20911  0AD9  0781               	addwf	1,f
 20912  0ADA  3141               	addfsr 1,1
 20913  0ADB  1803               	skipnc
 20914  0ADC  0A81               	incf	1,f
 20915                           
 20916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 20917  0ADD  085A               	movf	vfpfcnvrt@ap,w
 20918  0ADE  0086               	movwf	6
 20919  0ADF  0187               	clrf	7
 20920  0AE0  0801               	movf	1,w
 20921  0AE1  0084               	movwf	4
 20922  0AE2  0185               	clrf	5
 20923  0AE3  3002               	movlw	2
 20924  0AE4  0781               	addwf	1,f
 20925  0AE5  3F00               	moviw [0]fsr0
 20926  0AE6  0021               	movlb	1	; select bank1
 20927  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 20928  0AE8  3F01               	moviw [1]fsr0
 20929  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 20930                           
 20931                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 20932  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 20933  0AEB  0086               	movwf	6
 20934  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 20935  0AED  0087               	movwf	7
 20936  0AEE  0023               	movlb	3	; select bank3
 20937  0AEF  0844               	movf	_nout^(0+384),w
 20938  0AF0  3FC0               	movwi [0]fsr1
 20939  0AF1  0845               	movf	(_nout+1)^(0+384),w
 20940  0AF2  3FC1               	movwi [1]fsr1
 20941  0AF3  2B32               	goto	l6957
 20942  0AF4                     l6975:	
 20943                           
 20944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 20945  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 20946  0AF5  0086               	movwf	6
 20947  0AF6  0187               	clrf	7
 20948  0AF7  3001               	movlw	1
 20949  0AF8  0781               	addwf	1,f
 20950  0AF9  3141               	addfsr 1,1
 20951  0AFA  1803               	skipnc
 20952  0AFB  0A81               	incf	1,f
 20953                           
 20954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 20955  0AFC  085A               	movf	vfpfcnvrt@ap,w
 20956  0AFD  0086               	movwf	6
 20957  0AFE  0187               	clrf	7
 20958  0AFF  0801               	movf	1,w
 20959  0B00  0084               	movwf	4
 20960  0B01  0185               	clrf	5
 20961  0B02  3002               	movlw	2
 20962  0B03  0781               	addwf	1,f
 20963  0B04  3F00               	moviw [0]fsr0
 20964  0B05  0021               	movlb	1	; select bank1
 20965  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 20966  0B07  3F01               	moviw [1]fsr0
 20967  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 20968                           
 20969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 20970  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 20971  0B0A  0086               	movwf	6
 20972  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 20973  0B0C  0087               	movwf	7
 20974  0B0D  0023               	movlb	3	; select bank3
 20975  0B0E  0844               	movf	_nout^(0+384),w
 20976  0B0F  3FC0               	movwi [0]fsr1
 20977  0B10  0845               	movf	(_nout+1)^(0+384),w
 20978  0B11  3FC1               	movwi [1]fsr1
 20979  0B12  2B32               	goto	l6957
 20980  0B13                     l6987:	
 20981                           
 20982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 20983  0B13  0020               	movlb	0	; select bank0
 20984  0B14  0859               	movf	vfpfcnvrt@fmt,w
 20985  0B15  0086               	movwf	6
 20986  0B16  0187               	clrf	7
 20987  0B17  3002               	movlw	2
 20988  0B18  0781               	addwf	1,f
 20989  0B19  3141               	addfsr 1,1
 20990  0B1A  1803               	skipnc
 20991  0B1B  0A81               	incf	1,f
 20992                           
 20993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 20994  0B1C  085A               	movf	vfpfcnvrt@ap,w
 20995  0B1D  0086               	movwf	6
 20996  0B1E  0187               	clrf	7
 20997  0B1F  0801               	movf	1,w
 20998  0B20  0084               	movwf	4
 20999  0B21  0185               	clrf	5
 21000  0B22  3002               	movlw	2
 21001  0B23  0781               	addwf	1,f
 21002  0B24  3F00               	moviw [0]fsr0
 21003  0B25  0021               	movlb	1	; select bank1
 21004  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21005  0B27  3F01               	moviw [1]fsr0
 21006  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21007                           
 21008                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 21009  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21010  0B2A  0086               	movwf	6
 21011  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21012  0B2C  0087               	movwf	7
 21013  0B2D  0023               	movlb	3	; select bank3
 21014  0B2E  0844               	movf	_nout^(0+384),w
 21015  0B2F  3FC0               	movwi [0]fsr1
 21016  0B30  0845               	movf	(_nout+1)^(0+384),w
 21017  0B31  3FC1               	movwi [1]fsr1
 21018  0B32                     l6957:	
 21019                           
 21020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 21021  0B32  0020               	movlb	0	; select bank0
 21022  0B33  01D7               	clrf	?_vfpfcnvrt
 21023  0B34  01D8               	clrf	?_vfpfcnvrt+1
 21024  0B35  0008               	return
 21025  0B36                     l6961:	
 21026                           
 21027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 21028  0B36  0020               	movlb	0	; select bank0
 21029  0B37  0859               	movf	vfpfcnvrt@fmt,w
 21030  0B38  0086               	movwf	6
 21031  0B39  0187               	clrf	7
 21032  0B3A  3F40               	moviw [0]fsr1
 21033  0B3B  00F1               	movwf	strncmp@_l
 21034  0B3C  3F41               	moviw [1]fsr1
 21035  0B3D  00F2               	movwf	strncmp@_l+1
 21036  0B3E  30CE               	movlw	low ((STR_62+1)| (0+32768))
 21037  0B3F  00F3               	movwf	strncmp@_r
 21038  0B40  30B9               	movlw	high ((STR_62+1)| (0+32768))
 21039  0B41  00F4               	movwf	strncmp@_r+1
 21040  0B42  3002               	movlw	2
 21041  0B43  00F5               	movwf	strncmp@n
 21042  0B44  3000               	movlw	0
 21043  0B45  00F6               	movwf	strncmp@n+1
 21044  0B46  31A9  2132  3188   	fcall	_strncmp
 21045  0B49  0871               	movf	?_strncmp,w
 21046  0B4A  0472               	iorwf	?_strncmp+1,w
 21047  0B4B  1903               	btfsc	3,2
 21048  0B4C  2AD4               	goto	l6963
 21049                           
 21050                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 21051  0B4D  0020               	movlb	0	; select bank0
 21052  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 21053  0B4F  0086               	movwf	6
 21054  0B50  0187               	clrf	7
 21055  0B51  3F40               	moviw [0]fsr1
 21056  0B52  00DB               	movwf	??_vfpfcnvrt
 21057  0B53  3F41               	moviw [1]fsr1
 21058  0B54  00DC               	movwf	??_vfpfcnvrt+1
 21059  0B55  085B               	movf	??_vfpfcnvrt,w
 21060  0B56  0084               	movwf	4
 21061  0B57  085C               	movf	??_vfpfcnvrt+1,w
 21062  0B58  0085               	movwf	5
 21063  0B59  0012               	moviw fsr0++
 21064  0B5A  3A6E               	xorlw	110
 21065  0B5B  1903               	btfsc	3,2
 21066  0B5C  2AF4               	goto	l6975
 21067                           
 21068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 21069  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 21070  0B5E  0086               	movwf	6
 21071  0B5F  0187               	clrf	7
 21072  0B60  3F40               	moviw [0]fsr1
 21073  0B61  00F1               	movwf	strncmp@_l
 21074  0B62  3F41               	moviw [1]fsr1
 21075  0B63  00F2               	movwf	strncmp@_l+1
 21076  0B64  30E6               	movlw	low (STR_72| (0+32768))
 21077  0B65  00F3               	movwf	strncmp@_r
 21078  0B66  30B9               	movlw	high (STR_72| (0+32768))
 21079  0B67  00F4               	movwf	strncmp@_r+1
 21080  0B68  3002               	movlw	2
 21081  0B69  00F5               	movwf	strncmp@n
 21082  0B6A  3000               	movlw	0
 21083  0B6B  00F6               	movwf	strncmp@n+1
 21084  0B6C  31A9  2132  3188   	fcall	_strncmp
 21085  0B6F  0871               	movf	?_strncmp,w
 21086  0B70  0472               	iorwf	?_strncmp+1,w
 21087  0B71  1903               	btfsc	3,2
 21088  0B72  2B13               	goto	l6987
 21089                           
 21090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 21091  0B73  0020               	movlb	0	; select bank0
 21092  0B74  0859               	movf	vfpfcnvrt@fmt,w
 21093  0B75  0086               	movwf	6
 21094  0B76  0187               	clrf	7
 21095  0B77  3F40               	moviw [0]fsr1
 21096  0B78  00DB               	movwf	??_vfpfcnvrt
 21097  0B79  3F41               	moviw [1]fsr1
 21098  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 21099  0B7B  085B               	movf	??_vfpfcnvrt,w
 21100  0B7C  0084               	movwf	4
 21101  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 21102  0B7E  0085               	movwf	5
 21103  0B7F  0012               	moviw fsr0++
 21104  0B80  3A70               	xorlw	112
 21105  0B81  1D03               	btfss	3,2
 21106  0B82  2BCF               	goto	l7007
 21107                           
 21108                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 21109  0B83  0859               	movf	vfpfcnvrt@fmt,w
 21110  0B84  0086               	movwf	6
 21111  0B85  0187               	clrf	7
 21112  0B86  3001               	movlw	1
 21113  0B87  0781               	addwf	1,f
 21114  0B88  3141               	addfsr 1,1
 21115  0B89  1803               	skipnc
 21116  0B8A  0A81               	incf	1,f
 21117                           
 21118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 21119  0B8B  085A               	movf	vfpfcnvrt@ap,w
 21120  0B8C  0086               	movwf	6
 21121  0B8D  0187               	clrf	7
 21122  0B8E  0801               	movf	1,w
 21123  0B8F  0084               	movwf	4
 21124  0B90  0185               	clrf	5
 21125  0B91  3002               	movlw	2
 21126  0B92  0781               	addwf	1,f
 21127  0B93  3F00               	moviw [0]fsr0
 21128  0B94  0021               	movlb	1	; select bank1
 21129  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21130  0B96  3F01               	moviw [1]fsr0
 21131  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21132  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21133  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21134  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21135  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21136  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21137  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21138                           
 21139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 21140  0B9E  0020               	movlb	0	; select bank0
 21141  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 21142  0BA0  00B1               	movwf	xtoa@fp+1
 21143  0BA1  0857               	movf	vfpfcnvrt@fp,w
 21144  0BA2  00B0               	movwf	xtoa@fp
 21145  0BA3  0021               	movlb	1	; select bank1
 21146  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21147  0BA5  0020               	movlb	0	; select bank0
 21148  0BA6  00B2               	movwf	xtoa@d
 21149  0BA7  0021               	movlb	1	; select bank1
 21150  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21151  0BA9  0020               	movlb	0	; select bank0
 21152  0BAA  00B3               	movwf	xtoa@d+1
 21153  0BAB  0021               	movlb	1	; select bank1
 21154  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21155  0BAD  0020               	movlb	0	; select bank0
 21156  0BAE  00B4               	movwf	xtoa@d+2
 21157  0BAF  0021               	movlb	1	; select bank1
 21158  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21159  0BB1  0020               	movlb	0	; select bank0
 21160  0BB2  00B5               	movwf	xtoa@d+3
 21161  0BB3  0021               	movlb	1	; select bank1
 21162  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21163  0BB5  0020               	movlb	0	; select bank0
 21164  0BB6  00B6               	movwf	xtoa@d+4
 21165  0BB7  0021               	movlb	1	; select bank1
 21166  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21167  0BB9  0020               	movlb	0	; select bank0
 21168  0BBA  00B7               	movwf	xtoa@d+5
 21169  0BBB  0021               	movlb	1	; select bank1
 21170  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21171  0BBD  0020               	movlb	0	; select bank0
 21172  0BBE  00B8               	movwf	xtoa@d+6
 21173  0BBF  0021               	movlb	1	; select bank1
 21174  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21175  0BC1  0020               	movlb	0	; select bank0
 21176  0BC2  00B9               	movwf	xtoa@d+7
 21177  0BC3  3078               	movlw	120
 21178  0BC4  00DB               	movwf	??_vfpfcnvrt
 21179  0BC5  085B               	movf	??_vfpfcnvrt,w
 21180  0BC6  00BA               	movwf	xtoa@x
 21181  0BC7  319B  2389         	fcall	_xtoa
 21182  0BC9  0020               	movlb	0	; select bank0
 21183  0BCA  0831               	movf	?_xtoa+1,w
 21184  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 21185  0BCC  0830               	movf	?_xtoa,w
 21186  0BCD  00D7               	movwf	?_vfpfcnvrt
 21187  0BCE  0008               	return
 21188  0BCF                     l7007:	
 21189                           
 21190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 21191  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 21192  0BD0  0086               	movwf	6
 21193  0BD1  0187               	clrf	7
 21194  0BD2  3F40               	moviw [0]fsr1
 21195  0BD3  00DB               	movwf	??_vfpfcnvrt
 21196  0BD4  3F41               	moviw [1]fsr1
 21197  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 21198  0BD6  085B               	movf	??_vfpfcnvrt,w
 21199  0BD7  0084               	movwf	4
 21200  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 21201  0BD9  0085               	movwf	5
 21202  0BDA  0012               	moviw fsr0++
 21203  0BDB  3A73               	xorlw	115
 21204  0BDC  1D03               	btfss	3,2
 21205  0BDD  2C08               	goto	l7017
 21206                           
 21207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 21208  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 21209  0BDF  0086               	movwf	6
 21210  0BE0  0187               	clrf	7
 21211  0BE1  3001               	movlw	1
 21212  0BE2  0781               	addwf	1,f
 21213  0BE3  3141               	addfsr 1,1
 21214  0BE4  1803               	skipnc
 21215  0BE5  0A81               	incf	1,f
 21216                           
 21217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21218  0BE6  085A               	movf	vfpfcnvrt@ap,w
 21219  0BE7  0086               	movwf	6
 21220  0BE8  0187               	clrf	7
 21221  0BE9  0801               	movf	1,w
 21222  0BEA  0084               	movwf	4
 21223  0BEB  0185               	clrf	5
 21224  0BEC  3002               	movlw	2
 21225  0BED  0781               	addwf	1,f
 21226  0BEE  3F00               	moviw [0]fsr0
 21227  0BEF  0021               	movlb	1	; select bank1
 21228  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 21229  0BF1  3F01               	moviw [1]fsr0
 21230  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 21231                           
 21232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 21233  0BF3  0020               	movlb	0	; select bank0
 21234  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 21235  0BF5  00A1               	movwf	stoa@fp+1
 21236  0BF6  0857               	movf	vfpfcnvrt@fp,w
 21237  0BF7  00A0               	movwf	stoa@fp
 21238  0BF8  0021               	movlb	1	; select bank1
 21239  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 21240  0BFA  0020               	movlb	0	; select bank0
 21241  0BFB  00A3               	movwf	stoa@s+1
 21242  0BFC  0021               	movlb	1	; select bank1
 21243  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 21244  0BFE  0020               	movlb	0	; select bank0
 21245  0BFF  00A2               	movwf	stoa@s
 21246  0C00  31A0  2022         	fcall	_stoa
 21247  0C02  0020               	movlb	0	; select bank0
 21248  0C03  0821               	movf	?_stoa+1,w
 21249  0C04  00D8               	movwf	?_vfpfcnvrt+1
 21250  0C05  0820               	movf	?_stoa,w
 21251  0C06  00D7               	movwf	?_vfpfcnvrt
 21252  0C07  0008               	return
 21253  0C08                     l7017:	
 21254                           
 21255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 21256  0C08  0859               	movf	vfpfcnvrt@fmt,w
 21257  0C09  0086               	movwf	6
 21258  0C0A  0187               	clrf	7
 21259  0C0B  3F40               	moviw [0]fsr1
 21260  0C0C  00F1               	movwf	strncmp@_l
 21261  0C0D  3F41               	moviw [1]fsr1
 21262  0C0E  00F2               	movwf	strncmp@_l+1
 21263  0C0F  30D5               	movlw	low (STR_77| (0+32768))
 21264  0C10  00F3               	movwf	strncmp@_r
 21265  0C11  30B9               	movlw	high (STR_77| (0+32768))
 21266  0C12  00F4               	movwf	strncmp@_r+1
 21267  0C13  3003               	movlw	3
 21268  0C14  00F5               	movwf	strncmp@n
 21269  0C15  3000               	movlw	0
 21270  0C16  00F6               	movwf	strncmp@n+1
 21271  0C17  31A9  2132  3188   	fcall	_strncmp
 21272  0C1A  0871               	movf	?_strncmp,w
 21273  0C1B  0472               	iorwf	?_strncmp+1,w
 21274  0C1C  1D03               	btfss	3,2
 21275  0C1D  2C66               	goto	l7027
 21276                           
 21277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 21278  0C1E  0020               	movlb	0	; select bank0
 21279  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 21280  0C20  0086               	movwf	6
 21281  0C21  0187               	clrf	7
 21282  0C22  3003               	movlw	3
 21283  0C23  0781               	addwf	1,f
 21284  0C24  3141               	addfsr 1,1
 21285  0C25  1803               	skipnc
 21286  0C26  0A81               	incf	1,f
 21287                           
 21288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21289  0C27  085A               	movf	vfpfcnvrt@ap,w
 21290  0C28  0086               	movwf	6
 21291  0C29  0187               	clrf	7
 21292  0C2A  0801               	movf	1,w
 21293  0C2B  0084               	movwf	4
 21294  0C2C  0185               	clrf	5
 21295  0C2D  3002               	movlw	2
 21296  0C2E  0781               	addwf	1,f
 21297  0C2F  0800               	movf	0,w
 21298  0C30  0021               	movlb	1	; select bank1
 21299  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21300  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21301  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21302  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21303  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21304  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21305  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21306  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21307                           
 21308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 21309  0C39  0020               	movlb	0	; select bank0
 21310  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 21311  0C3B  00B1               	movwf	utoa@fp+1
 21312  0C3C  0857               	movf	vfpfcnvrt@fp,w
 21313  0C3D  00B0               	movwf	utoa@fp
 21314  0C3E  0021               	movlb	1	; select bank1
 21315  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21316  0C40  0020               	movlb	0	; select bank0
 21317  0C41  00B2               	movwf	utoa@d
 21318  0C42  0021               	movlb	1	; select bank1
 21319  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21320  0C44  0020               	movlb	0	; select bank0
 21321  0C45  00B3               	movwf	utoa@d+1
 21322  0C46  0021               	movlb	1	; select bank1
 21323  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21324  0C48  0020               	movlb	0	; select bank0
 21325  0C49  00B4               	movwf	utoa@d+2
 21326  0C4A  0021               	movlb	1	; select bank1
 21327  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21328  0C4C  0020               	movlb	0	; select bank0
 21329  0C4D  00B5               	movwf	utoa@d+3
 21330  0C4E  0021               	movlb	1	; select bank1
 21331  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21332  0C50  0020               	movlb	0	; select bank0
 21333  0C51  00B6               	movwf	utoa@d+4
 21334  0C52  0021               	movlb	1	; select bank1
 21335  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21336  0C54  0020               	movlb	0	; select bank0
 21337  0C55  00B7               	movwf	utoa@d+5
 21338  0C56  0021               	movlb	1	; select bank1
 21339  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21340  0C58  0020               	movlb	0	; select bank0
 21341  0C59  00B8               	movwf	utoa@d+6
 21342  0C5A  0021               	movlb	1	; select bank1
 21343  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21344  0C5C  0020               	movlb	0	; select bank0
 21345  0C5D  00B9               	movwf	utoa@d+7
 21346  0C5E  31A4  2441         	fcall	_utoa
 21347  0C60  0020               	movlb	0	; select bank0
 21348  0C61  0831               	movf	?_utoa+1,w
 21349  0C62  00D8               	movwf	?_vfpfcnvrt+1
 21350  0C63  0830               	movf	?_utoa,w
 21351  0C64  00D7               	movwf	?_vfpfcnvrt
 21352  0C65  0008               	return
 21353  0C66                     l7027:	
 21354                           
 21355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 21356  0C66  0020               	movlb	0	; select bank0
 21357  0C67  0859               	movf	vfpfcnvrt@fmt,w
 21358  0C68  0086               	movwf	6
 21359  0C69  0187               	clrf	7
 21360  0C6A  3F40               	moviw [0]fsr1
 21361  0C6B  00F1               	movwf	strncmp@_l
 21362  0C6C  3F41               	moviw [1]fsr1
 21363  0C6D  00F2               	movwf	strncmp@_l+1
 21364  0C6E  30D6               	movlw	low ((STR_77+1)| (0+32768))
 21365  0C6F  00F3               	movwf	strncmp@_r
 21366  0C70  30B9               	movlw	high ((STR_77+1)| (0+32768))
 21367  0C71  00F4               	movwf	strncmp@_r+1
 21368  0C72  3002               	movlw	2
 21369  0C73  00F5               	movwf	strncmp@n
 21370  0C74  3000               	movlw	0
 21371  0C75  00F6               	movwf	strncmp@n+1
 21372  0C76  31A9  2132  3188   	fcall	_strncmp
 21373  0C79  0871               	movf	?_strncmp,w
 21374  0C7A  0472               	iorwf	?_strncmp+1,w
 21375  0C7B  1D03               	btfss	3,2
 21376  0C7C  2CC6               	goto	l7037
 21377                           
 21378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 21379  0C7D  0020               	movlb	0	; select bank0
 21380  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 21381  0C7F  0086               	movwf	6
 21382  0C80  0187               	clrf	7
 21383  0C81  3002               	movlw	2
 21384  0C82  0781               	addwf	1,f
 21385  0C83  3141               	addfsr 1,1
 21386  0C84  1803               	skipnc
 21387  0C85  0A81               	incf	1,f
 21388                           
 21389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 21390  0C86  085A               	movf	vfpfcnvrt@ap,w
 21391  0C87  0086               	movwf	6
 21392  0C88  0187               	clrf	7
 21393  0C89  0801               	movf	1,w
 21394  0C8A  0084               	movwf	4
 21395  0C8B  0185               	clrf	5
 21396  0C8C  3002               	movlw	2
 21397  0C8D  0781               	addwf	1,f
 21398  0C8E  3F00               	moviw [0]fsr0
 21399  0C8F  0021               	movlb	1	; select bank1
 21400  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21401  0C91  3F01               	moviw [1]fsr0
 21402  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21403  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21404  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21405  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21406  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21407  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21408  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21409                           
 21410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 21411  0C99  0020               	movlb	0	; select bank0
 21412  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 21413  0C9B  00B1               	movwf	utoa@fp+1
 21414  0C9C  0857               	movf	vfpfcnvrt@fp,w
 21415  0C9D  00B0               	movwf	utoa@fp
 21416  0C9E  0021               	movlb	1	; select bank1
 21417  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21418  0CA0  0020               	movlb	0	; select bank0
 21419  0CA1  00B2               	movwf	utoa@d
 21420  0CA2  0021               	movlb	1	; select bank1
 21421  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21422  0CA4  0020               	movlb	0	; select bank0
 21423  0CA5  00B3               	movwf	utoa@d+1
 21424  0CA6  0021               	movlb	1	; select bank1
 21425  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21426  0CA8  0020               	movlb	0	; select bank0
 21427  0CA9  00B4               	movwf	utoa@d+2
 21428  0CAA  0021               	movlb	1	; select bank1
 21429  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21430  0CAC  0020               	movlb	0	; select bank0
 21431  0CAD  00B5               	movwf	utoa@d+3
 21432  0CAE  0021               	movlb	1	; select bank1
 21433  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21434  0CB0  0020               	movlb	0	; select bank0
 21435  0CB1  00B6               	movwf	utoa@d+4
 21436  0CB2  0021               	movlb	1	; select bank1
 21437  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21438  0CB4  0020               	movlb	0	; select bank0
 21439  0CB5  00B7               	movwf	utoa@d+5
 21440  0CB6  0021               	movlb	1	; select bank1
 21441  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21442  0CB8  0020               	movlb	0	; select bank0
 21443  0CB9  00B8               	movwf	utoa@d+6
 21444  0CBA  0021               	movlb	1	; select bank1
 21445  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21446  0CBC  0020               	movlb	0	; select bank0
 21447  0CBD  00B9               	movwf	utoa@d+7
 21448  0CBE  31A4  2441         	fcall	_utoa
 21449  0CC0  0020               	movlb	0	; select bank0
 21450  0CC1  0831               	movf	?_utoa+1,w
 21451  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 21452  0CC3  0830               	movf	?_utoa,w
 21453  0CC4  00D7               	movwf	?_vfpfcnvrt
 21454  0CC5  0008               	return
 21455  0CC6                     l7037:	
 21456                           
 21457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 21458  0CC6  0020               	movlb	0	; select bank0
 21459  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 21460  0CC8  0086               	movwf	6
 21461  0CC9  0187               	clrf	7
 21462  0CCA  3F40               	moviw [0]fsr1
 21463  0CCB  00DB               	movwf	??_vfpfcnvrt
 21464  0CCC  3F41               	moviw [1]fsr1
 21465  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 21466  0CCE  085B               	movf	??_vfpfcnvrt,w
 21467  0CCF  0084               	movwf	4
 21468  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 21469  0CD1  0085               	movwf	5
 21470  0CD2  0012               	moviw fsr0++
 21471  0CD3  3A75               	xorlw	117
 21472  0CD4  1D03               	btfss	3,2
 21473  0CD5  2D1E               	goto	l7047
 21474                           
 21475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 21476  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 21477  0CD7  0086               	movwf	6
 21478  0CD8  0187               	clrf	7
 21479  0CD9  3001               	movlw	1
 21480  0CDA  0781               	addwf	1,f
 21481  0CDB  3141               	addfsr 1,1
 21482  0CDC  1803               	skipnc
 21483  0CDD  0A81               	incf	1,f
 21484                           
 21485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 21486  0CDE  085A               	movf	vfpfcnvrt@ap,w
 21487  0CDF  0086               	movwf	6
 21488  0CE0  0187               	clrf	7
 21489  0CE1  0801               	movf	1,w
 21490  0CE2  0084               	movwf	4
 21491  0CE3  0185               	clrf	5
 21492  0CE4  3002               	movlw	2
 21493  0CE5  0781               	addwf	1,f
 21494  0CE6  3F00               	moviw [0]fsr0
 21495  0CE7  0021               	movlb	1	; select bank1
 21496  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21497  0CE9  3F01               	moviw [1]fsr0
 21498  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21499  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21500  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21501  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21502  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21503  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21504  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21505                           
 21506                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 21507  0CF1  0020               	movlb	0	; select bank0
 21508  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 21509  0CF3  00B1               	movwf	utoa@fp+1
 21510  0CF4  0857               	movf	vfpfcnvrt@fp,w
 21511  0CF5  00B0               	movwf	utoa@fp
 21512  0CF6  0021               	movlb	1	; select bank1
 21513  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21514  0CF8  0020               	movlb	0	; select bank0
 21515  0CF9  00B2               	movwf	utoa@d
 21516  0CFA  0021               	movlb	1	; select bank1
 21517  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21518  0CFC  0020               	movlb	0	; select bank0
 21519  0CFD  00B3               	movwf	utoa@d+1
 21520  0CFE  0021               	movlb	1	; select bank1
 21521  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21522  0D00  0020               	movlb	0	; select bank0
 21523  0D01  00B4               	movwf	utoa@d+2
 21524  0D02  0021               	movlb	1	; select bank1
 21525  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21526  0D04  0020               	movlb	0	; select bank0
 21527  0D05  00B5               	movwf	utoa@d+3
 21528  0D06  0021               	movlb	1	; select bank1
 21529  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21530  0D08  0020               	movlb	0	; select bank0
 21531  0D09  00B6               	movwf	utoa@d+4
 21532  0D0A  0021               	movlb	1	; select bank1
 21533  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21534  0D0C  0020               	movlb	0	; select bank0
 21535  0D0D  00B7               	movwf	utoa@d+5
 21536  0D0E  0021               	movlb	1	; select bank1
 21537  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21538  0D10  0020               	movlb	0	; select bank0
 21539  0D11  00B8               	movwf	utoa@d+6
 21540  0D12  0021               	movlb	1	; select bank1
 21541  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21542  0D14  0020               	movlb	0	; select bank0
 21543  0D15  00B9               	movwf	utoa@d+7
 21544  0D16  31A4  2441         	fcall	_utoa
 21545  0D18  0020               	movlb	0	; select bank0
 21546  0D19  0831               	movf	?_utoa+1,w
 21547  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 21548  0D1B  0830               	movf	?_utoa,w
 21549  0D1C  00D7               	movwf	?_vfpfcnvrt
 21550  0D1D  0008               	return
 21551  0D1E                     l7047:	
 21552                           
 21553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 21554  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 21555  0D1F  0086               	movwf	6
 21556  0D20  0187               	clrf	7
 21557  0D21  3F40               	moviw [0]fsr1
 21558  0D22  00F1               	movwf	strncmp@_l
 21559  0D23  3F41               	moviw [1]fsr1
 21560  0D24  00F2               	movwf	strncmp@_l+1
 21561  0D25  30EC               	movlw	low (STR_87| (0+32768))
 21562  0D26  00F3               	movwf	strncmp@_r
 21563  0D27  30B9               	movlw	high (STR_87| (0+32768))
 21564  0D28  00F4               	movwf	strncmp@_r+1
 21565  0D29  3002               	movlw	2
 21566  0D2A  00F5               	movwf	strncmp@n
 21567  0D2B  3000               	movlw	0
 21568  0D2C  00F6               	movwf	strncmp@n+1
 21569  0D2D  31A9  2132  3188   	fcall	_strncmp
 21570  0D30  0871               	movf	?_strncmp,w
 21571  0D31  0472               	iorwf	?_strncmp+1,w
 21572  0D32  1D03               	btfss	3,2
 21573  0D33  2D7D               	goto	l7057
 21574                           
 21575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 21576  0D34  0020               	movlb	0	; select bank0
 21577  0D35  0859               	movf	vfpfcnvrt@fmt,w
 21578  0D36  0086               	movwf	6
 21579  0D37  0187               	clrf	7
 21580  0D38  3002               	movlw	2
 21581  0D39  0781               	addwf	1,f
 21582  0D3A  3141               	addfsr 1,1
 21583  0D3B  1803               	skipnc
 21584  0D3C  0A81               	incf	1,f
 21585                           
 21586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21587  0D3D  085A               	movf	vfpfcnvrt@ap,w
 21588  0D3E  0086               	movwf	6
 21589  0D3F  0187               	clrf	7
 21590  0D40  0801               	movf	1,w
 21591  0D41  0084               	movwf	4
 21592  0D42  0185               	clrf	5
 21593  0D43  3002               	movlw	2
 21594  0D44  0781               	addwf	1,f
 21595  0D45  3F00               	moviw [0]fsr0
 21596  0D46  0021               	movlb	1	; select bank1
 21597  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21598  0D48  3F01               	moviw [1]fsr0
 21599  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21600  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21601  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21602  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21603  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21604  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21605  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21606                           
 21607                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 21608  0D50  0020               	movlb	0	; select bank0
 21609  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 21610  0D52  00B1               	movwf	utoa@fp+1
 21611  0D53  0857               	movf	vfpfcnvrt@fp,w
 21612  0D54  00B0               	movwf	utoa@fp
 21613  0D55  0021               	movlb	1	; select bank1
 21614  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21615  0D57  0020               	movlb	0	; select bank0
 21616  0D58  00B2               	movwf	utoa@d
 21617  0D59  0021               	movlb	1	; select bank1
 21618  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21619  0D5B  0020               	movlb	0	; select bank0
 21620  0D5C  00B3               	movwf	utoa@d+1
 21621  0D5D  0021               	movlb	1	; select bank1
 21622  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21623  0D5F  0020               	movlb	0	; select bank0
 21624  0D60  00B4               	movwf	utoa@d+2
 21625  0D61  0021               	movlb	1	; select bank1
 21626  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21627  0D63  0020               	movlb	0	; select bank0
 21628  0D64  00B5               	movwf	utoa@d+3
 21629  0D65  0021               	movlb	1	; select bank1
 21630  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21631  0D67  0020               	movlb	0	; select bank0
 21632  0D68  00B6               	movwf	utoa@d+4
 21633  0D69  0021               	movlb	1	; select bank1
 21634  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21635  0D6B  0020               	movlb	0	; select bank0
 21636  0D6C  00B7               	movwf	utoa@d+5
 21637  0D6D  0021               	movlb	1	; select bank1
 21638  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21639  0D6F  0020               	movlb	0	; select bank0
 21640  0D70  00B8               	movwf	utoa@d+6
 21641  0D71  0021               	movlb	1	; select bank1
 21642  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21643  0D73  0020               	movlb	0	; select bank0
 21644  0D74  00B9               	movwf	utoa@d+7
 21645  0D75  31A4  2441         	fcall	_utoa
 21646  0D77  0020               	movlb	0	; select bank0
 21647  0D78  0831               	movf	?_utoa+1,w
 21648  0D79  00D8               	movwf	?_vfpfcnvrt+1
 21649  0D7A  0830               	movf	?_utoa,w
 21650  0D7B  00D7               	movwf	?_vfpfcnvrt
 21651  0D7C  0008               	return
 21652  0D7D                     l7057:	
 21653                           
 21654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 21655  0D7D  0020               	movlb	0	; select bank0
 21656  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 21657  0D7F  0086               	movwf	6
 21658  0D80  0187               	clrf	7
 21659  0D81  3F40               	moviw [0]fsr1
 21660  0D82  00F1               	movwf	strncmp@_l
 21661  0D83  3F41               	moviw [1]fsr1
 21662  0D84  00F2               	movwf	strncmp@_l+1
 21663  0D85  30D9               	movlw	low (STR_92| (0+32768))
 21664  0D86  00F3               	movwf	strncmp@_r
 21665  0D87  30B9               	movlw	high (STR_92| (0+32768))
 21666  0D88  00F4               	movwf	strncmp@_r+1
 21667  0D89  3003               	movlw	3
 21668  0D8A  00F5               	movwf	strncmp@n
 21669  0D8B  3000               	movlw	0
 21670  0D8C  00F6               	movwf	strncmp@n+1
 21671  0D8D  31A9  2132  3188   	fcall	_strncmp
 21672  0D90  0871               	movf	?_strncmp,w
 21673  0D91  0472               	iorwf	?_strncmp+1,w
 21674  0D92  1903               	btfsc	3,2
 21675  0D93  2DAB               	goto	l7061
 21676  0D94  0020               	movlb	0	; select bank0
 21677  0D95  0859               	movf	vfpfcnvrt@fmt,w
 21678  0D96  0086               	movwf	6
 21679  0D97  0187               	clrf	7
 21680  0D98  3F40               	moviw [0]fsr1
 21681  0D99  00F1               	movwf	strncmp@_l
 21682  0D9A  3F41               	moviw [1]fsr1
 21683  0D9B  00F2               	movwf	strncmp@_l+1
 21684  0D9C  30C1               	movlw	low (STR_96| (0+32768))
 21685  0D9D  00F3               	movwf	strncmp@_r
 21686  0D9E  30B9               	movlw	high (STR_96| (0+32768))
 21687  0D9F  00F4               	movwf	strncmp@_r+1
 21688  0DA0  3003               	movlw	3
 21689  0DA1  00F5               	movwf	strncmp@n
 21690  0DA2  3000               	movlw	0
 21691  0DA3  00F6               	movwf	strncmp@n+1
 21692  0DA4  31A9  2132  3188   	fcall	_strncmp
 21693  0DA7  0871               	movf	?_strncmp,w
 21694  0DA8  0472               	iorwf	?_strncmp+1,w
 21695  0DA9  1D03               	btfss	3,2
 21696  0DAA  2E0D               	goto	l7071
 21697  0DAB                     l7061:	
 21698                           
 21699                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 21700  0DAB  0020               	movlb	0	; select bank0
 21701  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 21702  0DAD  0086               	movwf	6
 21703  0DAE  0187               	clrf	7
 21704  0DAF  3F40               	moviw [0]fsr1
 21705  0DB0  00DB               	movwf	??_vfpfcnvrt
 21706  0DB1  3F41               	moviw [1]fsr1
 21707  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 21708  0DB3  3002               	movlw	2
 21709  0DB4  075B               	addwf	??_vfpfcnvrt,w
 21710  0DB5  0084               	movwf	4
 21711  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 21712  0DB7  1803               	skipnc
 21713  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 21714  0DB9  0085               	movwf	5
 21715  0DBA  0800               	movf	0,w	;code access
 21716  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 21717  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 21718  0DBD  0021               	movlb	1	; select bank1
 21719  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 21720                           
 21721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 21722  0DBF  0020               	movlb	0	; select bank0
 21723  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 21724  0DC1  0086               	movwf	6
 21725  0DC2  0187               	clrf	7
 21726  0DC3  3003               	movlw	3
 21727  0DC4  0781               	addwf	1,f
 21728  0DC5  3141               	addfsr 1,1
 21729  0DC6  1803               	skipnc
 21730  0DC7  0A81               	incf	1,f
 21731                           
 21732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21733  0DC8  085A               	movf	vfpfcnvrt@ap,w
 21734  0DC9  0086               	movwf	6
 21735  0DCA  0187               	clrf	7
 21736  0DCB  0801               	movf	1,w
 21737  0DCC  0084               	movwf	4
 21738  0DCD  0185               	clrf	5
 21739  0DCE  3002               	movlw	2
 21740  0DCF  0781               	addwf	1,f
 21741  0DD0  0800               	movf	0,w
 21742  0DD1  0021               	movlb	1	; select bank1
 21743  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21744  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21745  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21746  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21747  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21748  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21749  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21750  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21751                           
 21752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 21753  0DDA  0020               	movlb	0	; select bank0
 21754  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 21755  0DDC  00B1               	movwf	xtoa@fp+1
 21756  0DDD  0857               	movf	vfpfcnvrt@fp,w
 21757  0DDE  00B0               	movwf	xtoa@fp
 21758  0DDF  0021               	movlb	1	; select bank1
 21759  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21760  0DE1  0020               	movlb	0	; select bank0
 21761  0DE2  00B2               	movwf	xtoa@d
 21762  0DE3  0021               	movlb	1	; select bank1
 21763  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21764  0DE5  0020               	movlb	0	; select bank0
 21765  0DE6  00B3               	movwf	xtoa@d+1
 21766  0DE7  0021               	movlb	1	; select bank1
 21767  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21768  0DE9  0020               	movlb	0	; select bank0
 21769  0DEA  00B4               	movwf	xtoa@d+2
 21770  0DEB  0021               	movlb	1	; select bank1
 21771  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21772  0DED  0020               	movlb	0	; select bank0
 21773  0DEE  00B5               	movwf	xtoa@d+3
 21774  0DEF  0021               	movlb	1	; select bank1
 21775  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21776  0DF1  0020               	movlb	0	; select bank0
 21777  0DF2  00B6               	movwf	xtoa@d+4
 21778  0DF3  0021               	movlb	1	; select bank1
 21779  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21780  0DF5  0020               	movlb	0	; select bank0
 21781  0DF6  00B7               	movwf	xtoa@d+5
 21782  0DF7  0021               	movlb	1	; select bank1
 21783  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21784  0DF9  0020               	movlb	0	; select bank0
 21785  0DFA  00B8               	movwf	xtoa@d+6
 21786  0DFB  0021               	movlb	1	; select bank1
 21787  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21788  0DFD  0020               	movlb	0	; select bank0
 21789  0DFE  00B9               	movwf	xtoa@d+7
 21790  0DFF  0021               	movlb	1	; select bank1
 21791  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 21792  0E01  0020               	movlb	0	; select bank0
 21793  0E02  00DB               	movwf	??_vfpfcnvrt
 21794  0E03  085B               	movf	??_vfpfcnvrt,w
 21795  0E04  00BA               	movwf	xtoa@x
 21796  0E05  319B  2389         	fcall	_xtoa
 21797  0E07  0020               	movlb	0	; select bank0
 21798  0E08  0831               	movf	?_xtoa+1,w
 21799  0E09  00D8               	movwf	?_vfpfcnvrt+1
 21800  0E0A  0830               	movf	?_xtoa,w
 21801  0E0B  00D7               	movwf	?_vfpfcnvrt
 21802  0E0C  0008               	return
 21803  0E0D                     l7071:	
 21804                           
 21805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 21806  0E0D  0020               	movlb	0	; select bank0
 21807  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 21808  0E0F  0086               	movwf	6
 21809  0E10  0187               	clrf	7
 21810  0E11  3F40               	moviw [0]fsr1
 21811  0E12  00F1               	movwf	strncmp@_l
 21812  0E13  3F41               	moviw [1]fsr1
 21813  0E14  00F2               	movwf	strncmp@_l+1
 21814  0E15  30DA               	movlw	low ((STR_92+1)| (0+32768))
 21815  0E16  00F3               	movwf	strncmp@_r
 21816  0E17  30B9               	movlw	high ((STR_92+1)| (0+32768))
 21817  0E18  00F4               	movwf	strncmp@_r+1
 21818  0E19  3002               	movlw	2
 21819  0E1A  00F5               	movwf	strncmp@n
 21820  0E1B  3000               	movlw	0
 21821  0E1C  00F6               	movwf	strncmp@n+1
 21822  0E1D  31A9  2132  3188   	fcall	_strncmp
 21823  0E20  0871               	movf	?_strncmp,w
 21824  0E21  0472               	iorwf	?_strncmp+1,w
 21825  0E22  1903               	btfsc	3,2
 21826  0E23  2E3B               	goto	l7075
 21827  0E24  0020               	movlb	0	; select bank0
 21828  0E25  0859               	movf	vfpfcnvrt@fmt,w
 21829  0E26  0086               	movwf	6
 21830  0E27  0187               	clrf	7
 21831  0E28  3F40               	moviw [0]fsr1
 21832  0E29  00F1               	movwf	strncmp@_l
 21833  0E2A  3F41               	moviw [1]fsr1
 21834  0E2B  00F2               	movwf	strncmp@_l+1
 21835  0E2C  30C2               	movlw	low ((STR_96+1)| (0+32768))
 21836  0E2D  00F3               	movwf	strncmp@_r
 21837  0E2E  30B9               	movlw	high ((STR_96+1)| (0+32768))
 21838  0E2F  00F4               	movwf	strncmp@_r+1
 21839  0E30  3002               	movlw	2
 21840  0E31  00F5               	movwf	strncmp@n
 21841  0E32  3000               	movlw	0
 21842  0E33  00F6               	movwf	strncmp@n+1
 21843  0E34  31A9  2132  3188   	fcall	_strncmp
 21844  0E37  0871               	movf	?_strncmp,w
 21845  0E38  0472               	iorwf	?_strncmp+1,w
 21846  0E39  1D03               	btfss	3,2
 21847  0E3A  2E9E               	goto	l7085
 21848  0E3B                     l7075:	
 21849                           
 21850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 21851  0E3B  0020               	movlb	0	; select bank0
 21852  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 21853  0E3D  0086               	movwf	6
 21854  0E3E  0187               	clrf	7
 21855  0E3F  3F40               	moviw [0]fsr1
 21856  0E40  00DB               	movwf	??_vfpfcnvrt
 21857  0E41  3F41               	moviw [1]fsr1
 21858  0E42  00DC               	movwf	??_vfpfcnvrt+1
 21859  0E43  3001               	movlw	1
 21860  0E44  075B               	addwf	??_vfpfcnvrt,w
 21861  0E45  0084               	movwf	4
 21862  0E46  085C               	movf	??_vfpfcnvrt+1,w
 21863  0E47  1803               	skipnc
 21864  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 21865  0E49  0085               	movwf	5
 21866  0E4A  0800               	movf	0,w	;code access
 21867  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 21868  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 21869  0E4D  0021               	movlb	1	; select bank1
 21870  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 21871                           
 21872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 21873  0E4F  0020               	movlb	0	; select bank0
 21874  0E50  0859               	movf	vfpfcnvrt@fmt,w
 21875  0E51  0086               	movwf	6
 21876  0E52  0187               	clrf	7
 21877  0E53  3002               	movlw	2
 21878  0E54  0781               	addwf	1,f
 21879  0E55  3141               	addfsr 1,1
 21880  0E56  1803               	skipnc
 21881  0E57  0A81               	incf	1,f
 21882                           
 21883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 21884  0E58  085A               	movf	vfpfcnvrt@ap,w
 21885  0E59  0086               	movwf	6
 21886  0E5A  0187               	clrf	7
 21887  0E5B  0801               	movf	1,w
 21888  0E5C  0084               	movwf	4
 21889  0E5D  0185               	clrf	5
 21890  0E5E  3002               	movlw	2
 21891  0E5F  0781               	addwf	1,f
 21892  0E60  3F00               	moviw [0]fsr0
 21893  0E61  0021               	movlb	1	; select bank1
 21894  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21895  0E63  3F01               	moviw [1]fsr0
 21896  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21897  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21898  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21899  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21900  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21901  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21902  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21903                           
 21904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 21905  0E6B  0020               	movlb	0	; select bank0
 21906  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 21907  0E6D  00B1               	movwf	xtoa@fp+1
 21908  0E6E  0857               	movf	vfpfcnvrt@fp,w
 21909  0E6F  00B0               	movwf	xtoa@fp
 21910  0E70  0021               	movlb	1	; select bank1
 21911  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21912  0E72  0020               	movlb	0	; select bank0
 21913  0E73  00B2               	movwf	xtoa@d
 21914  0E74  0021               	movlb	1	; select bank1
 21915  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21916  0E76  0020               	movlb	0	; select bank0
 21917  0E77  00B3               	movwf	xtoa@d+1
 21918  0E78  0021               	movlb	1	; select bank1
 21919  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21920  0E7A  0020               	movlb	0	; select bank0
 21921  0E7B  00B4               	movwf	xtoa@d+2
 21922  0E7C  0021               	movlb	1	; select bank1
 21923  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21924  0E7E  0020               	movlb	0	; select bank0
 21925  0E7F  00B5               	movwf	xtoa@d+3
 21926  0E80  0021               	movlb	1	; select bank1
 21927  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21928  0E82  0020               	movlb	0	; select bank0
 21929  0E83  00B6               	movwf	xtoa@d+4
 21930  0E84  0021               	movlb	1	; select bank1
 21931  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21932  0E86  0020               	movlb	0	; select bank0
 21933  0E87  00B7               	movwf	xtoa@d+5
 21934  0E88  0021               	movlb	1	; select bank1
 21935  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21936  0E8A  0020               	movlb	0	; select bank0
 21937  0E8B  00B8               	movwf	xtoa@d+6
 21938  0E8C  0021               	movlb	1	; select bank1
 21939  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21940  0E8E  0020               	movlb	0	; select bank0
 21941  0E8F  00B9               	movwf	xtoa@d+7
 21942  0E90  0021               	movlb	1	; select bank1
 21943  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 21944  0E92  0020               	movlb	0	; select bank0
 21945  0E93  00DB               	movwf	??_vfpfcnvrt
 21946  0E94  085B               	movf	??_vfpfcnvrt,w
 21947  0E95  00BA               	movwf	xtoa@x
 21948  0E96  319B  2389         	fcall	_xtoa
 21949  0E98  0020               	movlb	0	; select bank0
 21950  0E99  0831               	movf	?_xtoa+1,w
 21951  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 21952  0E9B  0830               	movf	?_xtoa,w
 21953  0E9C  00D7               	movwf	?_vfpfcnvrt
 21954  0E9D  0008               	return
 21955  0E9E                     l7085:	
 21956                           
 21957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 21958  0E9E  0020               	movlb	0	; select bank0
 21959  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 21960  0EA0  0086               	movwf	6
 21961  0EA1  0187               	clrf	7
 21962  0EA2  3F40               	moviw [0]fsr1
 21963  0EA3  00DB               	movwf	??_vfpfcnvrt
 21964  0EA4  3F41               	moviw [1]fsr1
 21965  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 21966  0EA6  085B               	movf	??_vfpfcnvrt,w
 21967  0EA7  0084               	movwf	4
 21968  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 21969  0EA9  0085               	movwf	5
 21970  0EAA  0012               	moviw fsr0++
 21971  0EAB  3A78               	xorlw	120
 21972  0EAC  1903               	btfsc	3,2
 21973  0EAD  2EBD               	goto	l7089
 21974  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 21975  0EAF  0086               	movwf	6
 21976  0EB0  0187               	clrf	7
 21977  0EB1  3F40               	moviw [0]fsr1
 21978  0EB2  00DB               	movwf	??_vfpfcnvrt
 21979  0EB3  3F41               	moviw [1]fsr1
 21980  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 21981  0EB5  085B               	movf	??_vfpfcnvrt,w
 21982  0EB6  0084               	movwf	4
 21983  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 21984  0EB8  0085               	movwf	5
 21985  0EB9  0012               	moviw fsr0++
 21986  0EBA  3A58               	xorlw	88
 21987  0EBB  1D03               	btfss	3,2
 21988  0EBC  2F1C               	goto	l7099
 21989  0EBD                     l7089:	
 21990                           
 21991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 21992  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 21993  0EBE  0086               	movwf	6
 21994  0EBF  0187               	clrf	7
 21995  0EC0  3F40               	moviw [0]fsr1
 21996  0EC1  00DB               	movwf	??_vfpfcnvrt
 21997  0EC2  3F41               	moviw [1]fsr1
 21998  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 21999  0EC4  085B               	movf	??_vfpfcnvrt,w
 22000  0EC5  0084               	movwf	4
 22001  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 22002  0EC7  0085               	movwf	5
 22003  0EC8  0800               	movf	0,w	;code access
 22004  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 22005  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 22006  0ECB  0021               	movlb	1	; select bank1
 22007  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22008                           
 22009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 22010  0ECD  0020               	movlb	0	; select bank0
 22011  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 22012  0ECF  0086               	movwf	6
 22013  0ED0  0187               	clrf	7
 22014  0ED1  3001               	movlw	1
 22015  0ED2  0781               	addwf	1,f
 22016  0ED3  3141               	addfsr 1,1
 22017  0ED4  1803               	skipnc
 22018  0ED5  0A81               	incf	1,f
 22019                           
 22020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22021  0ED6  085A               	movf	vfpfcnvrt@ap,w
 22022  0ED7  0086               	movwf	6
 22023  0ED8  0187               	clrf	7
 22024  0ED9  0801               	movf	1,w
 22025  0EDA  0084               	movwf	4
 22026  0EDB  0185               	clrf	5
 22027  0EDC  3002               	movlw	2
 22028  0EDD  0781               	addwf	1,f
 22029  0EDE  3F00               	moviw [0]fsr0
 22030  0EDF  0021               	movlb	1	; select bank1
 22031  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22032  0EE1  3F01               	moviw [1]fsr0
 22033  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22034  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22035  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22036  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22037  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22038  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22039  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22040                           
 22041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 22042  0EE9  0020               	movlb	0	; select bank0
 22043  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 22044  0EEB  00B1               	movwf	xtoa@fp+1
 22045  0EEC  0857               	movf	vfpfcnvrt@fp,w
 22046  0EED  00B0               	movwf	xtoa@fp
 22047  0EEE  0021               	movlb	1	; select bank1
 22048  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22049  0EF0  0020               	movlb	0	; select bank0
 22050  0EF1  00B2               	movwf	xtoa@d
 22051  0EF2  0021               	movlb	1	; select bank1
 22052  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22053  0EF4  0020               	movlb	0	; select bank0
 22054  0EF5  00B3               	movwf	xtoa@d+1
 22055  0EF6  0021               	movlb	1	; select bank1
 22056  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22057  0EF8  0020               	movlb	0	; select bank0
 22058  0EF9  00B4               	movwf	xtoa@d+2
 22059  0EFA  0021               	movlb	1	; select bank1
 22060  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22061  0EFC  0020               	movlb	0	; select bank0
 22062  0EFD  00B5               	movwf	xtoa@d+3
 22063  0EFE  0021               	movlb	1	; select bank1
 22064  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22065  0F00  0020               	movlb	0	; select bank0
 22066  0F01  00B6               	movwf	xtoa@d+4
 22067  0F02  0021               	movlb	1	; select bank1
 22068  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22069  0F04  0020               	movlb	0	; select bank0
 22070  0F05  00B7               	movwf	xtoa@d+5
 22071  0F06  0021               	movlb	1	; select bank1
 22072  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22073  0F08  0020               	movlb	0	; select bank0
 22074  0F09  00B8               	movwf	xtoa@d+6
 22075  0F0A  0021               	movlb	1	; select bank1
 22076  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22077  0F0C  0020               	movlb	0	; select bank0
 22078  0F0D  00B9               	movwf	xtoa@d+7
 22079  0F0E  0021               	movlb	1	; select bank1
 22080  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 22081  0F10  0020               	movlb	0	; select bank0
 22082  0F11  00DB               	movwf	??_vfpfcnvrt
 22083  0F12  085B               	movf	??_vfpfcnvrt,w
 22084  0F13  00BA               	movwf	xtoa@x
 22085  0F14  319B  2389         	fcall	_xtoa
 22086  0F16  0020               	movlb	0	; select bank0
 22087  0F17  0831               	movf	?_xtoa+1,w
 22088  0F18  00D8               	movwf	?_vfpfcnvrt+1
 22089  0F19  0830               	movf	?_xtoa,w
 22090  0F1A  00D7               	movwf	?_vfpfcnvrt
 22091  0F1B  0008               	return
 22092  0F1C                     l7099:	
 22093                           
 22094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 22095  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 22096  0F1D  0086               	movwf	6
 22097  0F1E  0187               	clrf	7
 22098  0F1F  3F40               	moviw [0]fsr1
 22099  0F20  00F1               	movwf	strncmp@_l
 22100  0F21  3F41               	moviw [1]fsr1
 22101  0F22  00F2               	movwf	strncmp@_l+1
 22102  0F23  30EF               	movlw	low (STR_110| (0+32768))
 22103  0F24  00F3               	movwf	strncmp@_r
 22104  0F25  30B9               	movlw	high (STR_110| (0+32768))
 22105  0F26  00F4               	movwf	strncmp@_r+1
 22106  0F27  3002               	movlw	2
 22107  0F28  00F5               	movwf	strncmp@n
 22108  0F29  3000               	movlw	0
 22109  0F2A  00F6               	movwf	strncmp@n+1
 22110  0F2B  31A9  2132  3188   	fcall	_strncmp
 22111  0F2E  0871               	movf	?_strncmp,w
 22112  0F2F  0472               	iorwf	?_strncmp+1,w
 22113  0F30  1903               	btfsc	3,2
 22114  0F31  2F49               	goto	l7103
 22115  0F32  0020               	movlb	0	; select bank0
 22116  0F33  0859               	movf	vfpfcnvrt@fmt,w
 22117  0F34  0086               	movwf	6
 22118  0F35  0187               	clrf	7
 22119  0F36  3F40               	moviw [0]fsr1
 22120  0F37  00F1               	movwf	strncmp@_l
 22121  0F38  3F41               	moviw [1]fsr1
 22122  0F39  00F2               	movwf	strncmp@_l+1
 22123  0F3A  30DD               	movlw	low (STR_114| (0+32768))
 22124  0F3B  00F3               	movwf	strncmp@_r
 22125  0F3C  30B9               	movlw	high (STR_114| (0+32768))
 22126  0F3D  00F4               	movwf	strncmp@_r+1
 22127  0F3E  3002               	movlw	2
 22128  0F3F  00F5               	movwf	strncmp@n
 22129  0F40  3000               	movlw	0
 22130  0F41  00F6               	movwf	strncmp@n+1
 22131  0F42  31A9  2132  3188   	fcall	_strncmp
 22132  0F45  0871               	movf	?_strncmp,w
 22133  0F46  0472               	iorwf	?_strncmp+1,w
 22134  0F47  1D03               	btfss	3,2
 22135  0F48  2FAC               	goto	l7113
 22136  0F49                     l7103:	
 22137                           
 22138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 22139  0F49  0020               	movlb	0	; select bank0
 22140  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 22141  0F4B  0086               	movwf	6
 22142  0F4C  0187               	clrf	7
 22143  0F4D  3F40               	moviw [0]fsr1
 22144  0F4E  00DB               	movwf	??_vfpfcnvrt
 22145  0F4F  3F41               	moviw [1]fsr1
 22146  0F50  00DC               	movwf	??_vfpfcnvrt+1
 22147  0F51  3001               	movlw	1
 22148  0F52  075B               	addwf	??_vfpfcnvrt,w
 22149  0F53  0084               	movwf	4
 22150  0F54  085C               	movf	??_vfpfcnvrt+1,w
 22151  0F55  1803               	skipnc
 22152  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 22153  0F57  0085               	movwf	5
 22154  0F58  0800               	movf	0,w	;code access
 22155  0F59  00DD               	movwf	??_vfpfcnvrt+2
 22156  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 22157  0F5B  0021               	movlb	1	; select bank1
 22158  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22159                           
 22160                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 22161  0F5D  0020               	movlb	0	; select bank0
 22162  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 22163  0F5F  0086               	movwf	6
 22164  0F60  0187               	clrf	7
 22165  0F61  3002               	movlw	2
 22166  0F62  0781               	addwf	1,f
 22167  0F63  3141               	addfsr 1,1
 22168  0F64  1803               	skipnc
 22169  0F65  0A81               	incf	1,f
 22170                           
 22171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22172  0F66  085A               	movf	vfpfcnvrt@ap,w
 22173  0F67  0086               	movwf	6
 22174  0F68  0187               	clrf	7
 22175  0F69  0801               	movf	1,w
 22176  0F6A  0084               	movwf	4
 22177  0F6B  0185               	clrf	5
 22178  0F6C  3002               	movlw	2
 22179  0F6D  0781               	addwf	1,f
 22180  0F6E  3F00               	moviw [0]fsr0
 22181  0F6F  0021               	movlb	1	; select bank1
 22182  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22183  0F71  3F01               	moviw [1]fsr0
 22184  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22185  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22186  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22187  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22188  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22189  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22190  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22191                           
 22192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 22193  0F79  0020               	movlb	0	; select bank0
 22194  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 22195  0F7B  00B1               	movwf	xtoa@fp+1
 22196  0F7C  0857               	movf	vfpfcnvrt@fp,w
 22197  0F7D  00B0               	movwf	xtoa@fp
 22198  0F7E  0021               	movlb	1	; select bank1
 22199  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22200  0F80  0020               	movlb	0	; select bank0
 22201  0F81  00B2               	movwf	xtoa@d
 22202  0F82  0021               	movlb	1	; select bank1
 22203  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22204  0F84  0020               	movlb	0	; select bank0
 22205  0F85  00B3               	movwf	xtoa@d+1
 22206  0F86  0021               	movlb	1	; select bank1
 22207  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22208  0F88  0020               	movlb	0	; select bank0
 22209  0F89  00B4               	movwf	xtoa@d+2
 22210  0F8A  0021               	movlb	1	; select bank1
 22211  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22212  0F8C  0020               	movlb	0	; select bank0
 22213  0F8D  00B5               	movwf	xtoa@d+3
 22214  0F8E  0021               	movlb	1	; select bank1
 22215  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22216  0F90  0020               	movlb	0	; select bank0
 22217  0F91  00B6               	movwf	xtoa@d+4
 22218  0F92  0021               	movlb	1	; select bank1
 22219  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22220  0F94  0020               	movlb	0	; select bank0
 22221  0F95  00B7               	movwf	xtoa@d+5
 22222  0F96  0021               	movlb	1	; select bank1
 22223  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22224  0F98  0020               	movlb	0	; select bank0
 22225  0F99  00B8               	movwf	xtoa@d+6
 22226  0F9A  0021               	movlb	1	; select bank1
 22227  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22228  0F9C  0020               	movlb	0	; select bank0
 22229  0F9D  00B9               	movwf	xtoa@d+7
 22230  0F9E  0021               	movlb	1	; select bank1
 22231  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 22232  0FA0  0020               	movlb	0	; select bank0
 22233  0FA1  00DB               	movwf	??_vfpfcnvrt
 22234  0FA2  085B               	movf	??_vfpfcnvrt,w
 22235  0FA3  00BA               	movwf	xtoa@x
 22236  0FA4  319B  2389         	fcall	_xtoa
 22237  0FA6  0020               	movlb	0	; select bank0
 22238  0FA7  0831               	movf	?_xtoa+1,w
 22239  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 22240  0FA9  0830               	movf	?_xtoa,w
 22241  0FAA  00D7               	movwf	?_vfpfcnvrt
 22242  0FAB  0008               	return
 22243  0FAC                     l7113:	
 22244                           
 22245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 22246  0FAC  0020               	movlb	0	; select bank0
 22247  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 22248  0FAE  0086               	movwf	6
 22249  0FAF  0187               	clrf	7
 22250  0FB0  3F40               	moviw [0]fsr1
 22251  0FB1  00DB               	movwf	??_vfpfcnvrt
 22252  0FB2  3F41               	moviw [1]fsr1
 22253  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 22254  0FB4  085B               	movf	??_vfpfcnvrt,w
 22255  0FB5  0084               	movwf	4
 22256  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 22257  0FB7  0085               	movwf	5
 22258  0FB8  0012               	moviw fsr0++
 22259  0FB9  3A25               	xorlw	37
 22260  0FBA  1D03               	btfss	3,2
 22261  0FBB  2FD4               	goto	l7123
 22262                           
 22263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 22264  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 22265  0FBD  0086               	movwf	6
 22266  0FBE  0187               	clrf	7
 22267  0FBF  3001               	movlw	1
 22268  0FC0  0781               	addwf	1,f
 22269  0FC1  3141               	addfsr 1,1
 22270  0FC2  1803               	skipnc
 22271  0FC3  0A81               	incf	1,f
 22272                           
 22273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 22274  0FC4  3025               	movlw	37
 22275  0FC5  00F1               	movwf	fputc@c
 22276  0FC6  3000               	movlw	0
 22277  0FC7  00F2               	movwf	fputc@c+1
 22278  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 22279  0FC9  00F4               	movwf	fputc@fp+1
 22280  0FCA  0857               	movf	vfpfcnvrt@fp,w
 22281  0FCB  00F3               	movwf	fputc@fp
 22282  0FCC  31A9  2184         	fcall	_fputc
 22283  0FCE                     l7119:	
 22284                           
 22285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 22286  0FCE  3001               	movlw	1
 22287  0FCF  0020               	movlb	0	; select bank0
 22288  0FD0  00D7               	movwf	?_vfpfcnvrt
 22289  0FD1  3000               	movlw	0
 22290  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 22291  0FD3  0008               	return
 22292  0FD4                     l7123:	
 22293                           
 22294                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 22295  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 22296  0FD5  0086               	movwf	6
 22297  0FD6  0187               	clrf	7
 22298  0FD7  3001               	movlw	1
 22299  0FD8  0781               	addwf	1,f
 22300  0FD9  3141               	addfsr 1,1
 22301  0FDA  1803               	skipnc
 22302  0FDB  0A81               	incf	1,f
 22303  0FDC  2B32               	goto	l6957
 22304  0FDD                     l7129:	
 22305                           
 22306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 22307  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 22308  0FDE  0086               	movwf	6
 22309  0FDF  0187               	clrf	7
 22310  0FE0  3F40               	moviw [0]fsr1
 22311  0FE1  00DB               	movwf	??_vfpfcnvrt
 22312  0FE2  3F41               	moviw [1]fsr1
 22313  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 22314  0FE4  085B               	movf	??_vfpfcnvrt,w
 22315  0FE5  0084               	movwf	4
 22316  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 22317  0FE7  0085               	movwf	5
 22318  0FE8  0800               	movf	0,w	;code access
 22319  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 22320  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 22321  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 22322  0FEC  00F1               	movwf	fputc@c
 22323  0FED  085E               	movf	??_vfpfcnvrt+3,w
 22324  0FEE  00F2               	movwf	fputc@c+1
 22325  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 22326  0FF0  00F4               	movwf	fputc@fp+1
 22327  0FF1  0857               	movf	vfpfcnvrt@fp,w
 22328  0FF2  00F3               	movwf	fputc@fp
 22329  0FF3  31A9  2184  3188   	fcall	_fputc
 22330                           
 22331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 22332  0FF6  0020               	movlb	0	; select bank0
 22333  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 22334  0FF8  0086               	movwf	6
 22335  0FF9  0187               	clrf	7
 22336  0FFA  3001               	movlw	1
 22337  0FFB  0781               	addwf	1,f
 22338  0FFC  3141               	addfsr 1,1
 22339  0FFD  1803               	skipnc
 22340  0FFE  0A81               	incf	1,f
 22341  0FFF  2FCE               	goto	l7119
 22342  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     457
    Constant    114
    Data        9
    BSS         102
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     79      80
    BANK2            80     69      79
    BANK3            80      2      69
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_18(CODE[18]), STR_17(CODE[18]), STR_16(CODE[19]), STR_15(CODE[20]), 
		 -> STR_14(CODE[20]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[22]), STR_9(CODE[22]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_4(CODE[15]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_116(CODE[3]), STR_112(CODE[3]), STR_107(CODE[3]), STR_103(CODE[3]), 
		 -> STR_98(CODE[4]), STR_94(CODE[4]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[4]), STR_74(CODE[3]), STR_69(CODE[3]), STR_64(CODE[4]), 
		 -> STR_59(CODE[3]), STR_54(CODE[3]), STR_49(CODE[4]), STR_44(CODE[3]), 
		 -> STR_40(CODE[3]), STR_35(CODE[3]), STR_31(CODE[3]), STR_26(CODE[4]), 
		 -> STR_22(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_116(CODE[3]), STR_112(CODE[3]), STR_107(CODE[3]), STR_103(CODE[3]), 
		 -> STR_98(CODE[4]), STR_94(CODE[4]), STR_89(CODE[3]), STR_84(CODE[3]), 
		 -> STR_79(CODE[4]), STR_74(CODE[3]), STR_69(CODE[3]), STR_64(CODE[4]), 
		 -> STR_59(CODE[3]), STR_54(CODE[3]), STR_49(CODE[4]), STR_44(CODE[3]), 
		 -> STR_40(CODE[3]), STR_35(CODE[3]), STR_31(CODE[3]), STR_26(CODE[4]), 
		 -> STR_22(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_18(CODE[18]), STR_17(CODE[18]), STR_16(CODE[19]), STR_15(CODE[20]), 
		 -> STR_14(CODE[20]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[22]), STR_9(CODE[22]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_4(CODE[15]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_18(CODE[18]), STR_17(CODE[18]), STR_16(CODE[19]), STR_15(CODE[20]), 
		 -> STR_14(CODE[20]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[22]), STR_9(CODE[22]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_4(CODE[15]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_18(CODE[18]), STR_17(CODE[18]), STR_16(CODE[19]), STR_15(CODE[20]), 
		 -> STR_14(CODE[20]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[22]), STR_9(CODE[22]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_4(CODE[15]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1720_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_18(CODE[18]), STR_17(CODE[18]), STR_16(CODE[19]), STR_15(CODE[20]), 
		 -> STR_14(CODE[20]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[22]), STR_9(CODE[22]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_4(CODE[15]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_18(CODE[18]), STR_17(CODE[18]), STR_16(CODE[19]), STR_15(CODE[20]), 
		 -> STR_14(CODE[20]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[22]), STR_9(CODE[22]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_4(CODE[15]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_18(CODE[18]), STR_17(CODE[18]), STR_16(CODE[19]), STR_15(CODE[20]), 
		 -> STR_14(CODE[20]), STR_13(CODE[21]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_10(CODE[22]), STR_9(CODE[22]), STR_8(CODE[21]), STR_7(CODE[21]), 
		 -> STR_4(CODE[15]), STR_3(CODE[22]), STR_2(CODE[71]), STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_19(CODE[3]), STR_6(CODE[3]), STR_5(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    ___flmul->__Umul8_16
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fltol->___fladd
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  344900
                                              0 BANK3      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     481
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  342041
                                             66 BANK2      3     3      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   70604
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            34     4     30   60683
                                             76 BANK0      4     4      0
                                             44 BANK1     30     0     30
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   56076
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   55039
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   54264
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    8411
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     191
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7272
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     412
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     421
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5995
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2652
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6544
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    8126
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     613
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     625
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5656
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5396
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1969
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1577
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2319
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     259
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     371
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    1871
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   74626
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1520
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1036
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     626
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   16730
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   16727
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   12962
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     481
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     481
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  120299
                     _enableCharging
                  _enableDischarging
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   31973
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  59    59      0   62302
                                             20 BANK1     59    59      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   27318
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2096
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6067
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    5462
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    8033
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3663
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     967
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   13012
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   13012
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    8050
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     45      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     161      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     161      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar 07 19:38:14 2020

          __end_of_setShortCircuitProtection 1A36                               _maxCellVoltage 01C8  
                      __end_of_send_I2C_data 3520                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124F  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                        ___wmul@multiplicand 0073                        _setShuntResistorValue 1800  
                        __Umul8_16@word_mpld 0077                                          l320 3525  
                                        l243 0801                                          l308 350A  
                                        l164 2B74                                          l342 280F  
                    enableDischarging@enable 0020                                          l344 2814  
                                        l345 2819                                          l290 3538  
                                        l346 282E                                          l284 355B  
                                        l445 2FFA                                          l701 2064  
                                        l278 351C                                          l710 20BF  
                                        l296 3502                                          l641 2917  
                                        l722 2463                                          l653 1A7B  
                                        l733 1B90                                          l638 28F7  
                                        l662 1B47                                          l654 1A82  
                                        l718 2448                                          l911 2CFB  
                                        l737 1BAB                                          l658 1A9D  
                                        l690 25E4                                          l770 1E90  
                                        l659 1AB1                                          l683 2544  
                                        l771 1E93                                          l684 25D9  
                                        l772 1E96                                          l846 3610  
                                        l758 1CAE                                          l774 1EC9  
                                        l679 2529                                          l767 1E81  
                                        l769 1E8D                                          l946 26F4  
                                        l959 242F                                          _Lg1 39B5  
                                        _Lg2 39B1                                          _Lg3 39AD  
                                        _Lg4 39A9                          __size_of_AFE_UPDATE 0014  
                                        _abs 35A9                               RGB_color@color 0071  
                                        _pad 28E1                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0034                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 2AFD  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       l1024 2B90                                         l1203 1D2B  
                                       l1027 2BDE                                         ?_abs 0074  
                                       l1047 2A78                                         l1151 06D5  
                                       l1224 1E32                                         l1225 1E4A  
                                       l1153 06B8                                         l1321 2E6B  
                                       l1227 1E57                                         l1147 0642  
                                       l1181 07B7                                         l1255 1242  
                                       l1079 2C5C                                         l1168 0758  
                                       l1281 2D8A                                         l1089 2AEC  
                                       l1189 07CF                                         l1294 2DD4  
                                       l1295 2DDE                                         l1287 2DC0  
                                       l1448 36C0                                         ?_pad 0026  
                                       l6231 2990                                         l7103 0F49  
                                       l7007 0BCF                                         l6313 360A  
                                       l7113 0FAC                                         l7017 0C08  
                                       l6235 29B7                                         l6331 263D  
                                       l6403 2C08                                         l7123 0FD4  
                                       l7027 0C66                                         l6229 298C  
                                       l6253 3596                                         l6501 1B5B  
                                       l6413 2C50                                         l6405 2C17  
                                       l7061 0DAB                                         l7037 0CC6  
                                       l7303 0789                                         l8031 1A16  
                                       l8015 19DA                                         l6247 07DB  
                                       l6255 35A2                                         l6271 28F5  
                                       l6335 2664                                         l6511 1B73  
                                       l6423 2AA1                                         l7119 0FCE  
                                       l7071 0E0D                                         l7047 0D1E  
                                       l7401 1CFC                                         l7161 061A  
                                       l8121 2241                                         l8009 192E  
                                       l6281 2923                                         l6337 2668  
                                       l6521 253C                                         l6425 2AB0  
                                       l7057 0D7D                                         l7129 0FDD  
                                       l8211 2853                                         l8203 288A  
                                       l7307 078B                                         l7227 06C0  
                                       l7219 0688                                         l7155 060F  
                                       l8027 19EC                                         l6267 28ED  
                                       l6347 267F                                         l6507 1B66  
                                       l6603 20D4                                         l7075 0E3B  
                                       l7421 1D20                                         l7405 1CFF  
                                       l7325 07C7                                         l7253 06F5  
                                       l7245 06E3                                         l7229 06C2  
                                       l7237 06D0                                         l8125 2269  
                                       l8053 18C5                                         l6277 28F9  
                                       l6357 26C7                                         l6349 268E  
                                       l6381 23C3                                         l6373 23B6  
                                       l6605 20E1                                         l6429 2AE0  
                                       l6621 24A6                                         l7085 0E9E  
                                       l7407 1D07                                         l7255 06F7  
                                       l7263 0706                                         l7183 063A  
                                       l7159 0612                                         l8047 1819  
                                       l6439 366D                                         l6447 36DC  
                                       l6359 26D3                                         l6383 23D2  
                                       l6631 2507                                         l6615 245B  
                                       l7521 1E53                                         l7441 1D56  
                                       l7425 1D23                                         l7329 07CB  
                                       l7281 076A                                         l7273 0750  
                                       l8065 18D7                                         l6721 2E23  
                                       l6713 2E07                                         l6449 36E5  
                                       l6369 238F                                         l6529 258B  
                                       l6633 2482                                         l6641 250C  
                                       l6705 1CCC                                         l7089 0EBD  
                                       l7507 1E1A                                         l7435 1D4A  
                                       l7339 36BA                                         l7179 0637  
                                       l8219 2012                                         l6731 2E4C  
                                       l6387 2402                                         l6475 1AAC  
                                       l6555 25FD                                         l6539 2566  
                                       l6651 1BA3                                         l7099 0F1C  
                                       l6803 1E9E                                         l8307 2AFE  
                                       l7461 1D9D                                         l7541 103D  
                                       l7189 064C                                         l8229 2F51  
                                       l8069 18FF                                         l6389 240E  
                                       l6469 1A95                                         l6581 2075  
                                       l6661 1BD3                                         l6901 08E0  
                                       l6821 1F0E                                         l8325 2B21  
                                       l8341 2B5C                                         l7471 1DBB  
                                       l7631 11D8                                         l7623 11AA  
                                       l7543 103F                                         l7295 077E  
                                       l8095 231D                                         l6735 2E6F  
                                       l6727 2E33                                         l6479 1ADE  
                                       l6567 203D                                         l6823 1F17  
                                       l6807 1ED0                                         l7375 3708  
                                       l8335 2B45                                         l7625 11C1  
                                       l7561 1062                                         l7545 1047  
                                       l7289 0777                                         l7297 0780  
                                       l6745 2E9E                                         l6729 2E38  
                                       l6489 1AB9                                         l6497 1B53  
                                       l6585 2086                                         l6681 1C3B  
                                       l6665 1BED                                         l6657 1BBB  
                                       l6841 1F82                                         l7377 3728  
                                       l8329 2B31                                         l7467 1DB6  
                                       l7635 11DA                                         l7571 1078  
                                       l7563 106A                                         l7707 2DF9  
                                       l8099 2345                                         l6595 2096  
                                       l6587 2093                                         l6843 1F92  
                                       l6851 1FC5                                         l6819 1EFE  
                                       l7493 1DEF                                         l7485 1DC1  
                                       l7469 1D7F                                         l7645 1203  
                                       l6773 2973                                         l6765 296C  
                                       l6909 0929                                         l6861 2706  
                                       l6845 1F9B                                         l6829 1F41  
                                       l8365 3784                                         l8279 2F39  
                                       l7487 1DD8                                         l7655 122F  
                                       l7559 1060                                         l7751 00B8  
                                       l7831 373A                                         l6599 20C3  
                                       l6767 2947                                         l6919 0988  
                                       l8551 1EB7                                         l7905 2A38  
                                       l7497 1DF1                                         l7649 1218  
                                       l7673 2D82                                         l8553 2E44  
                                       l6689 1C7D                                         l6961 0B36  
                                       l6929 09E8                                         l6873 277E  
                                       l6865 2733                                         l7683 2D9D  
                                       l7763 0178                                         l7771 01C1  
                                       l7835 3745                                         l8555 2823  
                                       l6963 0AD4                                         l6939 0A40  
                                       l6787 1E83                                         l7861 2D1C  
                                       l7853 2D0C                                         l7925 2A66  
                                       l7909 2A41                                         l7693 2DD2  
                                       l7685 2DAD                                         l7757 011B  
                                       l7749 009C                                         l6957 0B32  
                                       l6949 0A9F                                         l6885 0843  
                                       l6877 27AC                                         l6797 1E99  
                                       l8549 2B66                                         l7871 2D4A  
                                       l7863 2D2A                                         l7935 2A85  
                                       l7927 2A74                                         l7695 2DC5  
                                       l7679 2D99                                         l7783 01DB  
                                       l6975 0AF4                                         l7951 2C94  
                                       l6897 08B3                                         l6889 0862  
                                       l7953 2C9C                                         l7945 2C80  
                                       l7875 2D55                                         l6987 0B13  
                                       l7963 2CDA                                         l7893 2BC4  
                                       l7965 2CDE                                         l7879 2D63  
                                       l7975 281E                                         l7967 2CE5  
                                       l7889 2BAA                                         l7993 35F0  
                                       STR_1 3800                                 __CFG_WDTE$ON 0000  
                                       STR_2 3002                                         STR_3 3884  
                                       STR_4 3982                                         STR_5 3828  
                                       STR_7 38EE                                         STR_8 389A  
                                       STR_9 386E                                         _BRGH 0CF2  
                                       _CREN 0CEC                                         u8000 266F  
                 enableDischarging@sys_ctrl2 007B                                         _SCS0 04C8  
                                       u8035 26B4                                         _SCS1 04C9  
                                       u8300 1A52                                         u9100 1FB7  
                                       u8205 2C3D                                         u9110 1FB8  
                                       u8135 23F0                                         u8170 2BF8  
                                       u9050 1F33                                         u9060 1F34  
                                       u8405 1AD9                                         u8245 2ACE  
                                       u8345 1A8D                                         u8505 257A  
                                       u8290 1A51                                         u8515 2586  
                                       u7900 358A                                         u7805 2903  
                                       u8605 2091                                         u7910 358B  
                                       u8550 202C                                         u7830 35CF  
                                       u7735 29B5                                         u8375 1B51  
                                       u8615 20A0                                         u7840 35D0  
                                       u7760 35E6                                         u7825 35B2  
                                       u8465 2534                                         u7850 368A  
                                       u7770 35E7                                         u8395 1ACD  
                                       u8475 25BD                                         u8635 20DF  
                                       u7860 368B                                         u8485 25E2  
                                       u8725 1B9B                                         u9550 06A7  
                                       u8910 2E83                                         u7870 1011  
                                       u8750 1C04                                         u7935 3611  
                                       u8655 2453                                         u8815 1C61  
                                       u9560 06A8                                         u8920 2E84  
                                       u7880 1012                                         u8760 1C05  
                                       u9545 069C                                         u7945 3616  
                                       u8585 205D                                         u8825 1C87  
                                       u8745 1BE7                                         u9715 076B  
                                       u8780 1C24                                         u8685 2495  
                                       u8845 1C9D                                         u8790 1C25  
                                       u9815 07A2                                         u8695 24A1  
                                       u8855 1CA9                                         u9673 0718  
                                       u9665 06FB                                         u9595 06C6  
                                       _TMR1 0016                                         u9895 36C1  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 0220                                         _atoi 2E02  
                                       _ctoa 36CF                                         _main 3763  
                                       _dtoa 1A36                                         _logf 006B  
                                       _prec 0167                                         _otoa 2522  
                                       _nout 01C4                                         pad@i 002C  
                                       pad@p 0029                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         pad@w 002E  
                                       _stoa 2022                                         btemp 007E  
                                       _utoa 2441                                         _xtoa 1B89  
                                       start 0020                              ___fldiv@new_exp 0052  
                     __end_of_updateVoltages 1527                     __end_of_send_I2C_stopBit 350E  
                          _enableDischarging 2866                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 3532  
                              ?_EUSART_Write 0070                           ?_enableDischarging 0020  
                              ___fltol@sign1 007A                              __end_of___aldiv 2D6C  
                            __end_of___aodiv 2706                                        ?_atoi 0077  
                                      ?_ctoa 0030                              __end_of___fladd 07D7  
                                      ?_main 0070                                        ?_dtoa 0030  
                            __end_of___aomod 2441                I2C_writeRegister@slaveAddress 0075  
                                      ?_logf 00A8                              __end_of___fldiv 1E5C  
                                      STR_11 38AF                                        STR_20 39C5  
                                      STR_12 38C4                                        STR_13 38D9  
                                      STR_22 39C5                                        STR_14 3903  
                                      STR_31 39C6                                        STR_15 3917  
                                      STR_40 39E0                                        STR_24 39C9  
                                      STR_16 392B                                        STR_17 393E  
                                      STR_26 39C9                                        STR_42 39E3  
                                      STR_18 3950                                        STR_35 39CA  
                                      STR_44 39E3                                        STR_54 39D2  
                                      STR_38 39E0                                        STR_62 39CD  
                                      STR_47 39D1                                        STR_64 39CD  
                                      STR_72 39E6                                        STR_49 39D1  
                                      STR_57 39E9                                        STR_74 39E6  
                                      STR_59 39E9                                        STR_84 39D6  
                                      STR_92 39D9                                        STR_69 39CE  
                                      STR_77 39D5                                        STR_94 39D9  
                                      STR_79 39D5                                        STR_87 39EC  
                                      STR_96 39C1                              __end_of___flmul 124F  
                                      STR_89 39EC                                        STR_98 39C1  
                                      ?_otoa 0030                              __end_of___flsub 37CA  
                            __end_of___fltol 2A94                                        ?_stoa 0020  
                                      ?_utoa 0030                                        u10105 1D97  
                                      u10115 1DAB                                        u11015 2A67  
                                      u10145 1DC4                                        u10235 1E08  
                                      u10075 1D87                                        u11115 2CD1  
                                      u11300 2008                                        u11045 2A7C  
                                      u10245 1E23                                        u10165 1DCD  
                                      u10085 1D8E                                        u10405 11AD  
                                      u11310 2009                                        u10255 1E3C  
                                      u11215 22F7                                        u11320 2017  
                                      u10505 120C                                        u10425 11B6  
                                      u11225 2335                                        u11330 2018  
                                      u10515 1222                                        u10355 10EE  
                                      u11155 1A05                              __end_of___lodiv 2C6D  
                                      u11405 2EFA                                        u10365 111D  
                                      u10605 2DCC                                        u11245 2222  
                                      u11415 2F11                                        u10375 1173  
                                      u11255 2259                                        ?_xtoa 0030  
                                      u10385 118A                                        u11345 2F67  
                                      u10395 1199                                        u10715 00C9  
                                      u11195 18F0                                        u11507 364C  
                                      u10645 2DE6                                        u10565 2DA6  
                                      u10805 374D                                        u11365 2FCD  
                                      u11517 2B3E                                        u11375 2EAD  
                                      u11527 3552                                        u10495 11F1  
                                      u10735 012C                                        u11385 2EC4  
                                      u10585 2DBA                                        u10855 2D1F  
                                      u10775 01F3                                        u10695 00AC  
                                      u11497 378D                                        u10875 2D2B  
                                      u10795 3746                                        u10885 2D3F  
                                      u10895 2D4B                                        u10985 2A4A  
                            __end_of___lomod 2AFD                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l145 001E                                 vfpfcnvrt@fmt 0059  
                               vfpfcnvrt@llu 00B3                                        _SPBRG 019B  
                         __size_of_RGB_color 0021                          ___lmul@multiplicand 0075  
                        ??_enableDischarging 0022                               __CFG_FCMEN$OFF 0000  
                            __end_of_initWDT 34FE                                        _flags 0169  
                                      _errno 01C2                                        _fputc 2984  
                            __end_of_isalpha 3692                                        _fputs 07D7  
                                      _myIsr 0004                              __end_of_isdigit 3592  
                                      atoi@n 002B                                        pad@fp 0026  
                                      atoi@s 0077                                        _width 0165  
                                      ctoa@c 0032                                        _putch 0003  
                                      ctoa@w 0034                                        dtoa@d 0032  
                                      dtoa@i 004D                                        dtoa@n 0045  
                                      dtoa@p 003F                                        dtoa@s 0043  
                                      dtoa@w 0041                              __end_of_islower 35EE  
                            __end_of_isspace 3675                                        logf@R 0120  
                                      logf@f 015A                                        logf@k 013C  
                                      logf@s 0146                                        logf@u 0156  
                                      logf@w 014E                                        logf@x 00A8  
                                      logf@z 014A                               __CFG_BOREN$OFF 0000  
                            __end_of_isupper 35D7                                        otoa@d 0032  
                                      otoa@i 0050                                        otoa@n 0048  
                                      otoa@p 0042                                        otoa@t 0044  
                                      otoa@w 0046                      enableCharging@sys_ctrl2 007B  
                                      stoa@i 002B                                        stoa@l 0033  
                                      stoa@p 0031                                        stoa@s 0022  
                                      stoa@w 002D                                        utoa@d 0032  
                                      utoa@i 0047                                        utoa@n 003F  
                                      utoa@p 003B                                        utoa@w 003D  
                                      status 0003                                        wtemp0 007E  
                                      xtoa@c 0055                                        xtoa@d 0032  
                                      xtoa@i 0053                                        xtoa@n 004B  
                                      xtoa@p 0047                                        xtoa@w 0049  
                                      xtoa@x 003A                            _SCD_delay_setting 39A1  
                            __end_of_strncmp 2984                              __end_of_toupper 1023  
                           ___lodiv@dividend 0028                                 ?_internal_16 0070  
                               _toupper$1787 0079                               __CFG_MCLRE$OFF 0000  
                  __end_of_enableDischarging 289D                              __initialization 0022  
                            ?_updateVoltages 0070                     updateTemperatures@adcVal 00E7  
      setTemperatureLimitsint@maxCharge_degC 0026                                 __end_of_atoi 2EA3  
                               __end_of_ctoa 3700                                 __end_of_main 3795  
                               __end_of_dtoa 1B89                                 __end_of_logf 05F5  
                               __end_of_otoa 2613                                 __end_of_stoa 20E7  
                               __end_of_utoa 2522                                 __end_of_xtoa 1CE2  
                   __end_of_UV_delay_setting 39A1                       ?_setShuntResistorValue 0071  
                     beginAFEcommunication@i 002D                        ?_send_I2C_controlByte 0071  
                             ??_EUSART_Write 0071                    _watchdog_timeout_shutdown 363E  
                             __CFG_LPBOR$OFF 0000                            _ATmega328_address 3000  
                                     ??_atoi 0020                                       ??_ctoa 0033  
                                     ??_main 01E3                                       ??_dtoa 003A  
                                     ??_logf 00AC                                       ??_otoa 003A  
                                     ??_stoa 007A                                       ??_utoa 003A  
                                     ??_xtoa 003B                  __end_of_printcellParameters 21B4  
                             __CFG_PLLEN$OFF 0000                             ___lodiv@quotient 0072  
                              ?_readRegister 0075                                       ?_fputc 0071  
                                     STR_110 39EF                                       ?_fputs 007A  
                                     STR_103 39DA                                       STR_112 39EF  
                                     STR_114 39DD                                       STR_107 39C2  
                                     ?_myIsr 0070                                       STR_116 39DD  
                             __CFG_ZCDDIS$ON 0000                                       ?_putch 0070  
              __end_of_OCD_threshold_setting 386E                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 39A9                                vfpfcnvrt@done 00A2  
                               ??_AFE_UPDATE 007C                                       _TX1REG 019A  
                                     _SPLLEN 04CF       setOverCurrentDischargeProtection@i_977 00AA  
                                     _SSPADD 0212                                       _TRISC6 0476  
                                     _TRISC7 0477                                       _SSPBUF 0211  
                                     u808lld 238D                                _read_I2C_data 3557  
                           __end_of___xxtofl 2E02                                       u797lld 263B  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 282F  
                               vfprintf@cfmt 0068                                       ___flge 2B75  
                                     ___lmul 3731                                    ??___aldiv 0079  
                                  ??___aodiv 0071                               _minCellVoltage 01C6  
                                  ??___fladd 0062                                    ??___aomod 0071  
                                     ___wmul 3608                                       _ln2_hi 39BD  
                                  ??___fldiv 0048                                       _ln2_lo 39B9  
                             __CFG_STVREN$ON 0000                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 00AC  
                                  ??___lodiv 0071                             __end_of_init_I2C 3557  
                                  ??___lomod 0071                             __end_of_init_AFE 2A2E  
                           __end_of_init_RGB 34F8                    __end_of_ATmega328_address 3002  
                      _beginAFEcommunication 2F4C                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strlen 3592                                       logf@t1 0124  
                                     logf@t2 0128                                    ??_initWDT 0071  
                                     logf@dk 0142                                       logf@ix 015E  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 357B                           __size_of__Umul8_16 001F  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2033 00B4                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002F                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 3731  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 363E                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                                 ___flge@ff1 005A                                   ___flge@ff2 005E  
                               ___xxtofl@arg 0022                                 ___xxtofl@exp 0021  
                               ___xxtofl@val 0071                      __end_of__initialization 0067  
                             ?_read_I2C_data 0071                                   ___fltol@f1 00A8  
                   ?_setTemperatureLimitsint 0020                   __size_of_enableDischarging 0037  
   setTemperatureLimitsint@minDischarge_degC 0020                               __pcstackCOMMON 0070  
                     ??_send_I2C_controlByte 0075                                 __pidataBANK3 3529  
                              __end_of_fputc 29D8                                __end_of_fputs 07FD  
                              __end_of_myIsr 0020                                 _cellVoltages 01A0  
                              __end_of_putch 0004                                   _batCurrent 01BA  
                         _RGB_AWAIT_AFE_CONN 2000                       updateTemperatures@vtsx 00E9  
                __size_of_updateTemperatures 02D9                                   _batVoltage 01BE  
                        ?_RGB_AWAIT_AFE_CONN 0070                      __size_of_enableCharging 0037  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK1 00EF  
                                 __pbssBANK2 0165                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                         __end_of_EUSART_Write 0808  
                         __size_of_init_GPIO 003B                           __size_of_initClock 0003  
                         __size_of_init_TMR1 000B                          statemachine@success 0164  
                          __end_of__Umul8_16 36CF                                   __pmaintext 3763  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                          ?_send_I2C_stopBit 0070                                      ?___lmul 0071  
                                    ?___wmul 0071        setTemperatureLimitsint@minCharge_degC 0024  
                            __CFG_PPS1WAY$ON 0000                   ?_setShortCircuitProtection 0066  
                                 __pintentry 0004                       ?_beginAFEcommunication 0020  
                         ??_send_I2C_stopBit 0071                               ___lmul@product 0020  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 01B2  
                                  ?___xxtofl 0071               setShortCircuitProtection@i_968 00AA  
                         __size_of_vfpfcnvrt F1A4           __size_of_watchdog_timeout_shutdown 001B  
                                    _PPSLOCK 0E0F                       __size_of_send_I2C_NACK 0009  
                           ___lomod@dividend 0028                              ??_read_I2C_data 0073  
                     __size_of_send_I2C_data 0009                                    ?_init_I2C 0070  
                                  ?_init_AFE 0070                                    ?_init_RGB 0070  
       __end_of_setCellOvervoltageProtection 2289        __size_of_setCellOvervoltageProtection 00D5  
               _setCellOvervoltageProtection 21B4                             ??_updateVoltages 00B1  
      __end_of_setCellUndervoltageProtection 2365       __size_of_setCellUndervoltageProtection 00DC  
              _setCellUndervoltageProtection 2289                     readRegister@recievedData 0079  
                    ??_setShuntResistorValue 0075                           __size_of_vsnprintf 007D  
                       __end_of_readRegister 3800                                      ___aldiv 2CEA  
                                    _adcGain 016D                              __size_of___flge 007C  
                                    ___aodiv 2613                                      ___fladd 05F5  
                                    ___aomod 2365                                      ___fldiv 1CE2  
                            __size_of___lmul 0032                                      ___flmul 1023  
                                    ___flsub 3795                                      ___fltol 2A2E  
                            __size_of___wmul 001B                                      ___lodiv 2BF1  
                                    ___lomod 2A94                                    ?_vfprintf 0061  
                                  ?_snprintf 00CC                                _messageBuffer 2771  
                                    __ptext1 363E                                      __ptext2 2AFD  
                                    __ptext3 20E7                                      __ptext4 3623  
                                    __ptext5 2C6D                                      __ptext6 3700  
                                    __ptext7 1E5C                                      __ptext8 1B89  
                                    __ptext9 1001                            __end_of_init_GPIO 0843  
                          __end_of_initClock 0800                            __end_of_init_TMR1 3547  
                            __size_of_strlen 0017                                    _T1CONbits 0018  
                                    _initWDT 34F8                                 __size_of_abs 0017  
                               __size_of_pad 0051                                      _isalpha 3675  
                                    _isdigit 357B                                   ??___xxtofl 0075  
                           ___aldiv@dividend 0028                                      _islower 35D7  
                                    _isspace 3659    __end_of_setOverCurrentDischargeProtection 191F  
 __size_of_setOverCurrentDischargeProtection 0115          ??_setOverCurrentDischargeProtection 006C  
         ?_setOverCurrentDischargeProtection 0066            _setOverCurrentDischargeProtection 180A  
                                    _isupper 35C0                                      atoi@neg 0024  
                                    clrloop0 2803            __end_of_watchdog_timeout_shutdown 3659  
                                    _strncmp 2932                                      _toupper 1001  
                       end_of_initialization 0067                                   ??_init_I2C 0071  
                                 ??_init_AFE 007B                                   ??_init_RGB 0071  
                                    fputc@fp 0073                                      fputs@fp 007A  
              ?_setCellOvervoltageProtection 0032                            _EUSART_Initialize 2EA3  
                         ?_EUSART_Initialize 0032                            __end_of_vfpfcnvrt 1000  
                              _send_I2C_NACK 3520                             ___aldiv@quotient 002E  
                 send_I2C_controlByte@RW_bit 0073                                      psplit$0 420089  
                                    psplit$1 89008A                                _send_I2C_data 3517  
                                  _RGB_color 280E                                   ??_vfprintf 0066  
                         EUSART_Initialize@x 007A                                   ??_snprintf 006C  
                                    strlen@a 0073                                      strlen@s 0071  
                        ??_EUSART_Initialize 0036                                  ___fladd@grs 006D  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                                    _TRISBbits 008D  
                                  _TRISCbits 008E                                    _TRISEbits 0090  
                      __size_of_EUSART_Write 0008                               _enableCharging 282F  
                          __end_of_vsnprintf 2CEA                                  ___fldiv@grs 0054  
                                ___fldiv@rem 004D                 __size_of_printcellParameters 00CD  
              __end_of_SCD_threshold_setting 3982                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 3692                                  ___flmul@grs 0035  
                  __end_of_EUSART_Initialize 2F4C                        _OCD_threshold_setting 384E  
                         ?_I2C_writeRegister 0075             beginAFEcommunication@commSuccess 002B  
                             ?_send_I2C_NACK 0070                     readRegister@slaveAddress 0075  
             ?_setCellUndervoltageProtection 0032                               ?_send_I2C_data 0071  
                        ??_I2C_writeRegister 007B                                   ?_RGB_color 0071  
                             __end_of___flge 2BF1                               __end_of___lmul 3763  
                                vfpfcnvrt@ap 005A                                  vfpfcnvrt@cp 00A0  
                                vfpfcnvrt@fp 0057                                  vfpfcnvrt@ll 00A8  
                             __end_of___wmul 3623                                  vfpfcnvrt@vp 00B0  
                             __end_of_ln2_hi 39C1                               __end_of_ln2_lo 39BD  
                               _EUSART_Write 0800                  I2C_writeRegister@regAddress 0077  
              setShuntResistorValue@res_mOhm 0071                       __end_of_enableCharging 2866  
           __size_of_setTemperatureLimitsint 0044                               __end_of_strlen 35A9  
                        start_initialization 0022                              ___lodiv@divisor 0020  
                            ___lodiv@counter 007A                          _thermistorBetaValue 01E1  
                                __end_of_Lg1 39B9                                  __end_of_Lg2 39B5  
                                __end_of_Lg3 39B1                                  __end_of_Lg4 39AD  
                              ?_statemachine 0070                                  __end_of_abs 35C0  
                                __end_of_pad 2932                            _minCellTempCharge 01D0  
              setCellOvervoltageProtection@i 0045                         _maxCellTempDischarge 01CA  
                       updateVoltages@adcVal 00B8                         _minCellTempDischarge 01CE  
                          pnum$text7_split_1 0089                            pnum$text7_split_2 008A  
                  __end_of_I2C_writeRegister 36B0       _setOverCurrentDischargeProtection$2032 00A4  
        setCellOvervoltageProtection@delay_s 0034         setCellUndervoltageProtection@delay_s 0034  
                          _EUSART_Write_Text 35EE                        __size_of_readRegister 0036  
                         ?_EUSART_Write_Text 0072                      ??_beginAFEcommunication 0022  
                                vfprintf@fmt 0063                                     ??___flge 0062  
                                   ??___lmul 0079                                     ??___wmul 0075  
             ??_setCellOvervoltageProtection 0036          setCellOvervoltageProtection@ov_trip 0044  
                                  __Umul8_16 36B0                  ??_setShortCircuitProtection 006C  
                                __pdataBANK3 01DA                          ??_EUSART_Write_Text 0074  
              __size_of_send_I2C_controlByte 000A         setCellUndervoltageProtection@uv_trip 0044  
                 __end_of_updateTemperatures 1800                                     ??_strlen 0073  
                                  ___fladd@a 005E                                    ___fladd@b 005A  
                               vsnprintf@cnt 00C4                                 vsnprintf@fmt 00BF  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                              ?_enableCharging 0020  
                       enableCharging@enable 0020                                    _adcOffset 016B  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                                    ___flsub@a 00A0  
                                  ___flsub@b 00A4                               ??_statemachine 0162  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 01D5                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                              __pcstackBANK3 01E3                             ___aodiv@dividend 0028  
                  __size_of_send_I2C_stopBit 0008                                  snprintf@fmt 00D0  
                          __size_of___xxtofl 0096                                 _readRegister 37CA  
   setTemperatureLimitsint@maxDischarge_degC 0022                        updateTemperatures@tmp 00E3  
                      updateTemperatures@rts 00EB                    __end_of_EUSART_Write_Text 3608  
                 __size_of_EUSART_Initialize 00A9                                ??_internal_16 0071  
                                  _atoi$1652 0026                                    _atoi$1653 002A  
                                  _atoi$1654 0028                             _OV_delay_setting 3991  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 0056  
                          __size_of_init_RGB 0005                            _send_I2C_startBit 34FE  
                                  _dtoa$1201 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0022               __size_of_setShuntResistorValue 000A  
                                   ?___aldiv 0024                                     ?___aodiv 0020  
                         ?_send_I2C_startBit 0070                                     ?___fladd 005A  
              __end_of_setShuntResistorValue 180A                                     ?___aomod 0020  
                                   ?___fldiv 0040                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                                     ?___flsub 00A0  
                                   ?___fltol 00A8                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0032  
                                  _logf$2045 0152                                    _logf$2046 012C  
                                  _logf$2047 0130                                    _logf$2048 0134  
                                  _logf$2049 0138                            __size_of_vfprintf 0031  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 001B  
             BQ76920@shuntResistorValue_mOhm 01AE                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                                  _init_GPIO 0808                                     ?_isupper 0071  
                                  _initClock 07FD                                    _init_TMR1 353C  
                                  _currState 01D9                    _setShortCircuitProtection 191F  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001C  
                                   ?_strncmp 0071                                     ?_toupper 0077  
                             __size_of_putch 0001                              ___aldiv@divisor 0024  
                      __end_of_read_I2C_data 3567                              ___aldiv@counter 002C  
                             ___wmul@product 0075                              BQ76920@protect1 01D4  
                            BQ76920@protect2 01D3                              BQ76920@protect3 01D2  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 3506                                    clear_ram0 2802  
                                  _tmr1_flag 00EF                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 3517  
                        _printcellParameters 20E7                                    _vfpfcnvrt 1E5C  
                                  _xtoa$1237 0043                                    _xtoa$1238 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 289D  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                        send_I2C_data@databyte 0071  
                               _isspace$1679 0075                                   vfpfcnvrt@c 00B2  
                          ___lmul@multiplier 0071                         ?_printcellParameters 0070  
                      _temperatureThermistor 01B6                   __size_of_EUSART_Write_Text 001A  
                 ?_watchdog_timeout_shutdown 0070                                    _vsnprintf 2C6D  
                                 _AFE_UPDATE 3567                            _OCD_delay_setting 3962  
                       __end_of_statemachine 2B75                                   vfprintf@ap 0065  
                                 vfprintf@fp 0061                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                      __size_of_updateVoltages 02D8  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
             _setShortCircuitProtection$2031 00A4                                  vsnprintf@ap 00C1  
                           __size_of___flmul 022C                             __size_of___flsub 0035  
                           __size_of___fltol 0066                       readRegister@regAddress 0077  
                           __size_of___lodiv 007C                             __size_of___lomod 0069  
                                 ?_vfpfcnvrt 0057                                   snprintf@ap 006F  
                            ___aodiv@divisor 0020                              ___aodiv@counter 0072  
                                 _ANSELBbits 018D                                   _ANSELCbits 018E  
                                   ___xxtofl 2D6C  setOverCurrentDischargeProtection@current_mA 0066  
                           __size_of_initWDT 0006                             __size_of_isalpha 001D  
                           __size_of_isdigit 0017                             _send_I2C_stopBit 3506  
                           __size_of_islower 0017                             __size_of_isspace 001C  
                                   __ptext10 35D7                                     __ptext11 35C0  
                                   __ptext20 35A9                                     __ptext12 3675  
                                   __ptext21 2365                                     __ptext13 2441  
                                   __ptext30 3659                                     __ptext22 2613  
                                   __ptext14 2A94                                     __ptext31 357B  
                                   __ptext23 36CF                                     __ptext15 2BF1  
                                   __ptext40 2B75                                     __ptext32 35EE  
                                   __ptext24 28E1                                     __ptext16 2932  
                                   __ptext41 2289                                     __ptext33 0800  
                                   __ptext25 3592                                     __ptext17 2022  
                                   __ptext50 006B                                     __ptext42 21B4  
                                   __ptext34 29D8                                     __ptext26 07D7  
                                   __ptext18 2522                                     __ptext51 2D6C  
                                   __ptext43 2F4C                                     __ptext35 289D  
                                   __ptext27 2984                                     __ptext19 1A36  
                                   __ptext60 37CA                                     __ptext52 3795  
                                   __ptext44 2000                                     __ptext36 3608  
                                   __ptext28 0003                                     __ptext61 3520  
                                   __ptext53 05F5                                     __ptext45 280E  
                                   __ptext37 1800                                     __ptext29 2E02  
                                   __ptext70 3547                                     __ptext62 3557  
                                   __ptext54 1023                                     __ptext46 3567  
                                   __ptext38 191F                                     __ptext71 0808  
                                   __ptext63 3692                                     __ptext55 36B0  
                                   __ptext47 124F                                     __ptext39 180A  
                                   __ptext72 34F8                                     __ptext64 3506  
                                   __ptext56 1CE2                                     __ptext48 3731  
                                   __ptext73 07FD                                     __ptext65 34FE  
                                   __ptext57 2A2E                                     __ptext49 1527  
                                   __ptext74 350E                                     __ptext66 3517  
                                   __ptext58 2866                                     __ptext75 2EA3  
                                   __ptext67 3532                                     __ptext59 282F  
                                   __ptext76 2CEA                                     __ptext68 353C  
                                   __ptext69 34F3                             __size_of_isupper 0017  
                      ??_printcellParameters 007C               setCellUndervoltageProtection@i 0045  
                  __end_of_OCD_delay_setting 3972                             __size_of_strncmp 0052  
                           __size_of_toupper 0022                                   ?_vsnprintf 00BB  
                                   _init_I2C 3547                                     _init_AFE 29D8  
                                   _init_RGB 34F3                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0032  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text7 0042                                __size_of_logf 058A  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 3972  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 350E                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                    stoa@F1152 01DA  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 3000  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 01D8                                     _protect2 01D7  
                                   _protect3 01D6                    ??_setTemperatureLimitsint 0077  
                                   _vfprintf 3700                             ??_enableCharging 0022  
                                   _snprintf 3623                             ___aomod@dividend 0028  
                                   logf@F469 01AA    setOverCurrentDischargeProtection@delay_ms 006A  
                   __end_of_OV_delay_setting 3999                               _vfpfcnvrt$1252 00A4  
                             _vfpfcnvrt$1253 00A6                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                                     logf@hfsq 013E  
                             __pstringtext10 39B5                               __pstringtext11 39B9  
                             __pstringtext20 38C4                               __pstringtext12 39BD  
                             __pstringtext21 38D9                               __pstringtext13 3000  
                             __pstringtext30 39C5                               __pstringtext22 38EE  
                             __pstringtext14 3800                               __pstringtext31 39C9  
                             __pstringtext23 3903                               __pstringtext15 3828  
                             __pstringtext40 39E9                               __pstringtext32 39CD  
                             __pstringtext24 3917                               __pstringtext16 386E  
                             __pstringtext41 39EC                               __pstringtext33 39D1  
                             __pstringtext25 392B                               __pstringtext17 3884  
                             __pstringtext42 39EF                               __pstringtext34 39D5  
                             __pstringtext26 393E                               __pstringtext18 389A  
                             __pstringtext43 0000                               __pstringtext35 39D9  
                             __pstringtext27 3950                               __pstringtext19 38AF  
                             __pstringtext36 39DD                               __pstringtext28 3982  
                             __pstringtext37 39E0                               __pstringtext29 39C1  
                             __pstringtext38 39E3                               __pstringtext39 39E6  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 00C6                                   vsnprintf@n 00BD  
                                 vsnprintf@s 00BB                           _updateTemperatures 1527  
                           _UV_delay_setting 3999                                    snprintf@n 00CE  
                                  snprintf@s 00CC                 __end_of_send_I2C_controlByte 353C  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                          ?_updateTemperatures 0070  
                          __CFG_CLKOUTEN$OFF 0000                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0117  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                          _maxCellTempCharge 01CC                              ___aomod@divisor 0020  
                                ??_vfpfcnvrt 005B                                     stoa@nuls 0024  
                            ___aomod@counter 0072                                __pstringtext1 384E  
                              __pstringtext2 3962                                __pstringtext3 3972  
                              __pstringtext4 3991                                __pstringtext5 3999  
                              __pstringtext6 39A1                                __pstringtext7 39A9  
                              __pstringtext8 39AD                                __pstringtext9 39B1  
                       ??_updateTemperatures 00B4                       __Umul8_16@multiplicand 0071  
                             _vsnprintf$1824 00C2                                     strncmp@l 0078  
                                   strncmp@n 0075                                     strncmp@r 007A  
                                   toupper@c 0077                        EUSART_Write_Text@text 0072  
                               ___aldiv@sign 002D                                  _SSPCON2bits 0216  
                                 _WDTCONbits 0097                                ___fladd@signs 006A  
            __end_of_setTemperatureLimitsint 28E1                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 006A                      _updateTemperatures$2040 00CF  
                    _updateTemperatures$2041 00D3                      _updateTemperatures$2042 00D7  
                    _updateTemperatures$2034 00B7                      _updateTemperatures$2043 00DB  
                    _updateTemperatures$2035 00BB                      _updateTemperatures$2044 00DF  
                    _updateTemperatures$2036 00BF                      _updateTemperatures$2037 00C3  
                    _updateTemperatures$2038 00C7                      _updateTemperatures$2039 00CB  
                               ___fladd@aexp 006B                                 ___fladd@bexp 006C  
                      __size_of_statemachine 0078                                   _STATUSbits 0003  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 2022  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 3529                            __Umul8_16@product 0075  
