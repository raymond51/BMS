

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Dec 25 01:42:55 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	cinit,global,class=CODE,merge=1,delta=2
    47                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    48                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    49                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    50                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    51                           	psect	clrtext,global,class=CODE,delta=2
    52                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    53                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    54                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    55                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    56                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    57                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    58                           	psect	text1,local,class=CODE,merge=1,delta=2
    59                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text4,local,class=CODE,merge=1,delta=2
    62                           	psect	text5,local,class=CODE,merge=1,delta=2
    63                           	psect	text6,local,class=CODE,merge=1,delta=2
    64                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text10,local,class=CODE,merge=1,delta=2
    68                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text14,local,class=CODE,merge=1,delta=2
    72                           	psect	text15,local,class=CODE,merge=1,delta=2
    73                           	psect	text16,local,class=CODE,merge=1,delta=2
    74                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    82                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    83                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text28,local,class=CODE,merge=1,delta=2
    86                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    88                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text32,local,class=CODE,merge=1,delta=2
    90                           	psect	text33,local,class=CODE,merge=1,delta=2
    91                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text41,local,class=CODE,merge=1,delta=2
    99                           	psect	text42,local,class=CODE,merge=1,delta=2
   100                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
   101                           	psect	text44,local,class=CODE,merge=1,delta=2
   102                           	psect	text45,local,class=CODE,merge=1,delta=2
   103                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
   105                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   106                           	psect	text49,local,class=CODE,merge=1,delta=2
   107                           	psect	text50,local,class=CODE,merge=1,delta=2
   108                           	psect	text51,local,class=CODE,merge=1,delta=2
   109                           	psect	text52,local,class=CODE,merge=1,delta=2
   110                           	psect	text53,local,class=CODE,merge=1,delta=2
   111                           	psect	text54,local,class=CODE,merge=1,delta=2
   112                           	psect	text55,local,class=CODE,merge=1,delta=2
   113                           	psect	text56,local,class=CODE,merge=1,delta=2
   114                           	psect	text57,local,class=CODE,merge=1,delta=2
   115                           	psect	text58,local,class=CODE,merge=1,delta=2
   116                           	psect	text59,local,class=CODE,merge=1,delta=2
   117                           	psect	text60,local,class=CODE,merge=1,delta=2
   118                           	psect	text61,local,class=CODE,merge=1,delta=2
   119                           	psect	text62,local,class=CODE,merge=1,delta=2
   120                           	psect	text63,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
   123                           	psect	text66,local,class=CODE,merge=1,delta=2
   124                           	psect	text67,local,class=CODE,merge=1,delta=2
   125                           	psect	text68,local,class=CODE,merge=1,delta=2
   126                           	psect	text69,local,class=CODE,merge=1,delta=2
   127                           	psect	text70,local,class=CODE,merge=1,delta=2
   128                           	psect	text71,local,class=CODE,merge=1,delta=2
   129                           	psect	text72,local,class=CODE,merge=1,delta=2
   130                           	psect	text73,local,class=CODE,merge=1,delta=2
   131                           	psect	text74,local,class=CODE,merge=1,delta=2,group=1
   132                           	psect	intentry,global,class=CODE,delta=2
   133                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
   134                           	psect	text5_split_2,local,class=CODE,merge=1,delta=2
   135                           	psect	text5_split_3,local,class=CODE,merge=1,delta=2
   136                           	psect	text5_split_4,local,class=CODE,merge=1,delta=2
   137                           	psect	text5_split_5,local,class=CODE,merge=1,delta=2
   138                           	psect	text5_split_6,local,class=CODE,merge=1,delta=2
   139                           	psect	text5_split_7,local,class=CODE,merge=1,delta=2
   140                           	psect	text5_split_8,local,class=CODE,merge=1,delta=2
   141                           	dabs	1,0xCA0,32
   142                           	dabs	1,0xC20,80
   143                           	dabs	1,0xBE1,15
   144                           	dabs	1,0x2771,0,_messageBuffer
   145                           	dabs	1,0x7E,2
   146  0000                     
   147                           ; Version 2.05
   148                           ; Generated 20/12/2018 GMT
   149                           ; 
   150                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   151                           ; All rights reserved.
   152                           ; 
   153                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   154                           ; 
   155                           ; Redistribution and use in source and binary forms, with or without modification, are
   156                           ; permitted provided that the following conditions are met:
   157                           ; 
   158                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   159                           ;        conditions and the following disclaimer.
   160                           ; 
   161                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   162                           ;        of conditions and the following disclaimer in the documentation and/or other
   163                           ;        materials provided with the distribution.
   164                           ; 
   165                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   166                           ;        software without specific prior written permission.
   167                           ; 
   168                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   169                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   170                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   171                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   172                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   173                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   174                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   175                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   176                           ; 
   177                           ; 
   178                           ; Code-generator required, PIC16F1719 Definitions
   179                           ; 
   180                           ; SFR Addresses
   181  0000                     	;# 
   182  0001                     	;# 
   183  0002                     	;# 
   184  0003                     	;# 
   185  0004                     	;# 
   186  0005                     	;# 
   187  0006                     	;# 
   188  0007                     	;# 
   189  0008                     	;# 
   190  0009                     	;# 
   191  000A                     	;# 
   192  000B                     	;# 
   193  000C                     	;# 
   194  000D                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  008F                     	;# 
   214  0090                     	;# 
   215  0091                     	;# 
   216  0092                     	;# 
   217  0093                     	;# 
   218  0095                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  0110                     	;# 
   235  0111                     	;# 
   236  0112                     	;# 
   237  0113                     	;# 
   238  0114                     	;# 
   239  0115                     	;# 
   240  0116                     	;# 
   241  0117                     	;# 
   242  0118                     	;# 
   243  0119                     	;# 
   244  011A                     	;# 
   245  011B                     	;# 
   246  011B                     	;# 
   247  011C                     	;# 
   248  018C                     	;# 
   249  018D                     	;# 
   250  018E                     	;# 
   251  018F                     	;# 
   252  0190                     	;# 
   253  0191                     	;# 
   254  0191                     	;# 
   255  0192                     	;# 
   256  0193                     	;# 
   257  0193                     	;# 
   258  0194                     	;# 
   259  0195                     	;# 
   260  0196                     	;# 
   261  0197                     	;# 
   262  0199                     	;# 
   263  0199                     	;# 
   264  0199                     	;# 
   265  019A                     	;# 
   266  019A                     	;# 
   267  019A                     	;# 
   268  019B                     	;# 
   269  019B                     	;# 
   270  019B                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019C                     	;# 
   274  019C                     	;# 
   275  019C                     	;# 
   276  019D                     	;# 
   277  019D                     	;# 
   278  019D                     	;# 
   279  019E                     	;# 
   280  019E                     	;# 
   281  019E                     	;# 
   282  019F                     	;# 
   283  019F                     	;# 
   284  019F                     	;# 
   285  019F                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  020D                     	;# 
   289  020E                     	;# 
   290  020F                     	;# 
   291  0210                     	;# 
   292  0211                     	;# 
   293  0211                     	;# 
   294  0212                     	;# 
   295  0212                     	;# 
   296  0213                     	;# 
   297  0213                     	;# 
   298  0214                     	;# 
   299  0214                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0215                     	;# 
   303  0215                     	;# 
   304  0216                     	;# 
   305  0216                     	;# 
   306  0217                     	;# 
   307  0217                     	;# 
   308  028C                     	;# 
   309  028D                     	;# 
   310  028E                     	;# 
   311  028F                     	;# 
   312  0290                     	;# 
   313  0291                     	;# 
   314  0291                     	;# 
   315  0292                     	;# 
   316  0293                     	;# 
   317  0293                     	;# 
   318  0298                     	;# 
   319  0298                     	;# 
   320  0299                     	;# 
   321  029A                     	;# 
   322  029A                     	;# 
   323  029E                     	;# 
   324  030C                     	;# 
   325  030D                     	;# 
   326  030E                     	;# 
   327  030F                     	;# 
   328  0310                     	;# 
   329  038C                     	;# 
   330  038D                     	;# 
   331  038E                     	;# 
   332  038F                     	;# 
   333  0390                     	;# 
   334  0391                     	;# 
   335  0392                     	;# 
   336  0393                     	;# 
   337  0394                     	;# 
   338  0395                     	;# 
   339  0396                     	;# 
   340  0397                     	;# 
   341  0398                     	;# 
   342  0399                     	;# 
   343  039D                     	;# 
   344  039E                     	;# 
   345  039F                     	;# 
   346  0415                     	;# 
   347  0416                     	;# 
   348  0417                     	;# 
   349  041C                     	;# 
   350  041D                     	;# 
   351  041E                     	;# 
   352  0498                     	;# 
   353  0498                     	;# 
   354  0499                     	;# 
   355  049A                     	;# 
   356  049B                     	;# 
   357  049B                     	;# 
   358  049C                     	;# 
   359  049D                     	;# 
   360  049E                     	;# 
   361  049F                     	;# 
   362  0511                     	;# 
   363  0515                     	;# 
   364  0617                     	;# 
   365  0618                     	;# 
   366  0619                     	;# 
   367  0619                     	;# 
   368  061A                     	;# 
   369  061B                     	;# 
   370  061C                     	;# 
   371  061C                     	;# 
   372  0691                     	;# 
   373  0692                     	;# 
   374  0693                     	;# 
   375  0694                     	;# 
   376  0695                     	;# 
   377  0696                     	;# 
   378  0697                     	;# 
   379  0698                     	;# 
   380  0699                     	;# 
   381  069A                     	;# 
   382  069B                     	;# 
   383  069C                     	;# 
   384  069D                     	;# 
   385  069E                     	;# 
   386  069F                     	;# 
   387  0E0F                     	;# 
   388  0E10                     	;# 
   389  0E11                     	;# 
   390  0E12                     	;# 
   391  0E13                     	;# 
   392  0E14                     	;# 
   393  0E15                     	;# 
   394  0E17                     	;# 
   395  0E20                     	;# 
   396  0E21                     	;# 
   397  0E22                     	;# 
   398  0E24                     	;# 
   399  0E25                     	;# 
   400  0E28                     	;# 
   401  0E29                     	;# 
   402  0E2A                     	;# 
   403  0E2B                     	;# 
   404  0E90                     	;# 
   405  0E91                     	;# 
   406  0E92                     	;# 
   407  0E93                     	;# 
   408  0E94                     	;# 
   409  0E95                     	;# 
   410  0E96                     	;# 
   411  0E97                     	;# 
   412  0E98                     	;# 
   413  0E99                     	;# 
   414  0E9A                     	;# 
   415  0E9B                     	;# 
   416  0E9C                     	;# 
   417  0E9D                     	;# 
   418  0E9E                     	;# 
   419  0E9F                     	;# 
   420  0EA0                     	;# 
   421  0EA1                     	;# 
   422  0EA2                     	;# 
   423  0EA3                     	;# 
   424  0EA4                     	;# 
   425  0EA5                     	;# 
   426  0EA6                     	;# 
   427  0EA7                     	;# 
   428  0EA8                     	;# 
   429  0EA9                     	;# 
   430  0EAA                     	;# 
   431  0EAB                     	;# 
   432  0EAC                     	;# 
   433  0EAD                     	;# 
   434  0EAE                     	;# 
   435  0EAF                     	;# 
   436  0EB0                     	;# 
   437  0EB1                     	;# 
   438  0EB2                     	;# 
   439  0F0F                     	;# 
   440  0F10                     	;# 
   441  0F11                     	;# 
   442  0F12                     	;# 
   443  0F13                     	;# 
   444  0F14                     	;# 
   445  0F15                     	;# 
   446  0F16                     	;# 
   447  0F17                     	;# 
   448  0F18                     	;# 
   449  0F19                     	;# 
   450  0F1A                     	;# 
   451  0F1B                     	;# 
   452  0F1C                     	;# 
   453  0F1D                     	;# 
   454  0F1E                     	;# 
   455  0F1F                     	;# 
   456  0F20                     	;# 
   457  0F21                     	;# 
   458  0F22                     	;# 
   459  0F23                     	;# 
   460  0F24                     	;# 
   461  0F25                     	;# 
   462  0F26                     	;# 
   463  0F27                     	;# 
   464  0F28                     	;# 
   465  0F29                     	;# 
   466  0F2A                     	;# 
   467  0F2B                     	;# 
   468  0F2C                     	;# 
   469  0F2D                     	;# 
   470  0F2E                     	;# 
   471  0F2F                     	;# 
   472  0F30                     	;# 
   473  0F31                     	;# 
   474  0F32                     	;# 
   475  0F33                     	;# 
   476  0F34                     	;# 
   477  0F35                     	;# 
   478  0F36                     	;# 
   479  0F37                     	;# 
   480  0FE4                     	;# 
   481  0FE5                     	;# 
   482  0FE6                     	;# 
   483  0FE7                     	;# 
   484  0FE8                     	;# 
   485  0FE9                     	;# 
   486  0FEA                     	;# 
   487  0FEB                     	;# 
   488  0FED                     	;# 
   489  0FEE                     	;# 
   490  0FEF                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0008                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  000D                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0015                     	;# 
   512  0016                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001C                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  008F                     	;# 
   524  0090                     	;# 
   525  0091                     	;# 
   526  0092                     	;# 
   527  0093                     	;# 
   528  0095                     	;# 
   529  0096                     	;# 
   530  0097                     	;# 
   531  0098                     	;# 
   532  0099                     	;# 
   533  009A                     	;# 
   534  009B                     	;# 
   535  009B                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009E                     	;# 
   539  009F                     	;# 
   540  010C                     	;# 
   541  010D                     	;# 
   542  010E                     	;# 
   543  010F                     	;# 
   544  0110                     	;# 
   545  0111                     	;# 
   546  0112                     	;# 
   547  0113                     	;# 
   548  0114                     	;# 
   549  0115                     	;# 
   550  0116                     	;# 
   551  0117                     	;# 
   552  0118                     	;# 
   553  0119                     	;# 
   554  011A                     	;# 
   555  011B                     	;# 
   556  011B                     	;# 
   557  011C                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560  018E                     	;# 
   561  018F                     	;# 
   562  0190                     	;# 
   563  0191                     	;# 
   564  0191                     	;# 
   565  0192                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0194                     	;# 
   569  0195                     	;# 
   570  0196                     	;# 
   571  0197                     	;# 
   572  0199                     	;# 
   573  0199                     	;# 
   574  0199                     	;# 
   575  019A                     	;# 
   576  019A                     	;# 
   577  019A                     	;# 
   578  019B                     	;# 
   579  019B                     	;# 
   580  019B                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019C                     	;# 
   584  019C                     	;# 
   585  019C                     	;# 
   586  019D                     	;# 
   587  019D                     	;# 
   588  019D                     	;# 
   589  019E                     	;# 
   590  019E                     	;# 
   591  019E                     	;# 
   592  019F                     	;# 
   593  019F                     	;# 
   594  019F                     	;# 
   595  019F                     	;# 
   596  019F                     	;# 
   597  020C                     	;# 
   598  020D                     	;# 
   599  020E                     	;# 
   600  020F                     	;# 
   601  0210                     	;# 
   602  0211                     	;# 
   603  0211                     	;# 
   604  0212                     	;# 
   605  0212                     	;# 
   606  0213                     	;# 
   607  0213                     	;# 
   608  0214                     	;# 
   609  0214                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0216                     	;# 
   615  0216                     	;# 
   616  0217                     	;# 
   617  0217                     	;# 
   618  028C                     	;# 
   619  028D                     	;# 
   620  028E                     	;# 
   621  028F                     	;# 
   622  0290                     	;# 
   623  0291                     	;# 
   624  0291                     	;# 
   625  0292                     	;# 
   626  0293                     	;# 
   627  0293                     	;# 
   628  0298                     	;# 
   629  0298                     	;# 
   630  0299                     	;# 
   631  029A                     	;# 
   632  029A                     	;# 
   633  029E                     	;# 
   634  030C                     	;# 
   635  030D                     	;# 
   636  030E                     	;# 
   637  030F                     	;# 
   638  0310                     	;# 
   639  038C                     	;# 
   640  038D                     	;# 
   641  038E                     	;# 
   642  038F                     	;# 
   643  0390                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  0397                     	;# 
   651  0398                     	;# 
   652  0399                     	;# 
   653  039D                     	;# 
   654  039E                     	;# 
   655  039F                     	;# 
   656  0415                     	;# 
   657  0416                     	;# 
   658  0417                     	;# 
   659  041C                     	;# 
   660  041D                     	;# 
   661  041E                     	;# 
   662  0498                     	;# 
   663  0498                     	;# 
   664  0499                     	;# 
   665  049A                     	;# 
   666  049B                     	;# 
   667  049B                     	;# 
   668  049C                     	;# 
   669  049D                     	;# 
   670  049E                     	;# 
   671  049F                     	;# 
   672  0511                     	;# 
   673  0515                     	;# 
   674  0617                     	;# 
   675  0618                     	;# 
   676  0619                     	;# 
   677  0619                     	;# 
   678  061A                     	;# 
   679  061B                     	;# 
   680  061C                     	;# 
   681  061C                     	;# 
   682  0691                     	;# 
   683  0692                     	;# 
   684  0693                     	;# 
   685  0694                     	;# 
   686  0695                     	;# 
   687  0696                     	;# 
   688  0697                     	;# 
   689  0698                     	;# 
   690  0699                     	;# 
   691  069A                     	;# 
   692  069B                     	;# 
   693  069C                     	;# 
   694  069D                     	;# 
   695  069E                     	;# 
   696  069F                     	;# 
   697  0E0F                     	;# 
   698  0E10                     	;# 
   699  0E11                     	;# 
   700  0E12                     	;# 
   701  0E13                     	;# 
   702  0E14                     	;# 
   703  0E15                     	;# 
   704  0E17                     	;# 
   705  0E20                     	;# 
   706  0E21                     	;# 
   707  0E22                     	;# 
   708  0E24                     	;# 
   709  0E25                     	;# 
   710  0E28                     	;# 
   711  0E29                     	;# 
   712  0E2A                     	;# 
   713  0E2B                     	;# 
   714  0E90                     	;# 
   715  0E91                     	;# 
   716  0E92                     	;# 
   717  0E93                     	;# 
   718  0E94                     	;# 
   719  0E95                     	;# 
   720  0E96                     	;# 
   721  0E97                     	;# 
   722  0E98                     	;# 
   723  0E99                     	;# 
   724  0E9A                     	;# 
   725  0E9B                     	;# 
   726  0E9C                     	;# 
   727  0E9D                     	;# 
   728  0E9E                     	;# 
   729  0E9F                     	;# 
   730  0EA0                     	;# 
   731  0EA1                     	;# 
   732  0EA2                     	;# 
   733  0EA3                     	;# 
   734  0EA4                     	;# 
   735  0EA5                     	;# 
   736  0EA6                     	;# 
   737  0EA7                     	;# 
   738  0EA8                     	;# 
   739  0EA9                     	;# 
   740  0EAA                     	;# 
   741  0EAB                     	;# 
   742  0EAC                     	;# 
   743  0EAD                     	;# 
   744  0EAE                     	;# 
   745  0EAF                     	;# 
   746  0EB0                     	;# 
   747  0EB1                     	;# 
   748  0EB2                     	;# 
   749  0F0F                     	;# 
   750  0F10                     	;# 
   751  0F11                     	;# 
   752  0F12                     	;# 
   753  0F13                     	;# 
   754  0F14                     	;# 
   755  0F15                     	;# 
   756  0F16                     	;# 
   757  0F17                     	;# 
   758  0F18                     	;# 
   759  0F19                     	;# 
   760  0F1A                     	;# 
   761  0F1B                     	;# 
   762  0F1C                     	;# 
   763  0F1D                     	;# 
   764  0F1E                     	;# 
   765  0F1F                     	;# 
   766  0F20                     	;# 
   767  0F21                     	;# 
   768  0F22                     	;# 
   769  0F23                     	;# 
   770  0F24                     	;# 
   771  0F25                     	;# 
   772  0F26                     	;# 
   773  0F27                     	;# 
   774  0F28                     	;# 
   775  0F29                     	;# 
   776  0F2A                     	;# 
   777  0F2B                     	;# 
   778  0F2C                     	;# 
   779  0F2D                     	;# 
   780  0F2E                     	;# 
   781  0F2F                     	;# 
   782  0F30                     	;# 
   783  0F31                     	;# 
   784  0F32                     	;# 
   785  0F33                     	;# 
   786  0F34                     	;# 
   787  0F35                     	;# 
   788  0F36                     	;# 
   789  0F37                     	;# 
   790  0FE4                     	;# 
   791  0FE5                     	;# 
   792  0FE6                     	;# 
   793  0FE7                     	;# 
   794  0FE8                     	;# 
   795  0FE9                     	;# 
   796  0FEA                     	;# 
   797  0FEB                     	;# 
   798  0FED                     	;# 
   799  0FEE                     	;# 
   800  0FEF                     	;# 
   801  0000                     	;# 
   802  0001                     	;# 
   803  0002                     	;# 
   804  0003                     	;# 
   805  0004                     	;# 
   806  0005                     	;# 
   807  0006                     	;# 
   808  0007                     	;# 
   809  0008                     	;# 
   810  0009                     	;# 
   811  000A                     	;# 
   812  000B                     	;# 
   813  000C                     	;# 
   814  000D                     	;# 
   815  000E                     	;# 
   816  000F                     	;# 
   817  0010                     	;# 
   818  0011                     	;# 
   819  0012                     	;# 
   820  0013                     	;# 
   821  0015                     	;# 
   822  0016                     	;# 
   823  0016                     	;# 
   824  0017                     	;# 
   825  0018                     	;# 
   826  0019                     	;# 
   827  001A                     	;# 
   828  001B                     	;# 
   829  001C                     	;# 
   830  008C                     	;# 
   831  008D                     	;# 
   832  008E                     	;# 
   833  008F                     	;# 
   834  0090                     	;# 
   835  0091                     	;# 
   836  0092                     	;# 
   837  0093                     	;# 
   838  0095                     	;# 
   839  0096                     	;# 
   840  0097                     	;# 
   841  0098                     	;# 
   842  0099                     	;# 
   843  009A                     	;# 
   844  009B                     	;# 
   845  009B                     	;# 
   846  009C                     	;# 
   847  009D                     	;# 
   848  009E                     	;# 
   849  009F                     	;# 
   850  010C                     	;# 
   851  010D                     	;# 
   852  010E                     	;# 
   853  010F                     	;# 
   854  0110                     	;# 
   855  0111                     	;# 
   856  0112                     	;# 
   857  0113                     	;# 
   858  0114                     	;# 
   859  0115                     	;# 
   860  0116                     	;# 
   861  0117                     	;# 
   862  0118                     	;# 
   863  0119                     	;# 
   864  011A                     	;# 
   865  011B                     	;# 
   866  011B                     	;# 
   867  011C                     	;# 
   868  018C                     	;# 
   869  018D                     	;# 
   870  018E                     	;# 
   871  018F                     	;# 
   872  0190                     	;# 
   873  0191                     	;# 
   874  0191                     	;# 
   875  0192                     	;# 
   876  0193                     	;# 
   877  0193                     	;# 
   878  0194                     	;# 
   879  0195                     	;# 
   880  0196                     	;# 
   881  0197                     	;# 
   882  0199                     	;# 
   883  0199                     	;# 
   884  0199                     	;# 
   885  019A                     	;# 
   886  019A                     	;# 
   887  019A                     	;# 
   888  019B                     	;# 
   889  019B                     	;# 
   890  019B                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019C                     	;# 
   894  019C                     	;# 
   895  019C                     	;# 
   896  019D                     	;# 
   897  019D                     	;# 
   898  019D                     	;# 
   899  019E                     	;# 
   900  019E                     	;# 
   901  019E                     	;# 
   902  019F                     	;# 
   903  019F                     	;# 
   904  019F                     	;# 
   905  019F                     	;# 
   906  019F                     	;# 
   907  020C                     	;# 
   908  020D                     	;# 
   909  020E                     	;# 
   910  020F                     	;# 
   911  0210                     	;# 
   912  0211                     	;# 
   913  0211                     	;# 
   914  0212                     	;# 
   915  0212                     	;# 
   916  0213                     	;# 
   917  0213                     	;# 
   918  0214                     	;# 
   919  0214                     	;# 
   920  0215                     	;# 
   921  0215                     	;# 
   922  0215                     	;# 
   923  0215                     	;# 
   924  0216                     	;# 
   925  0216                     	;# 
   926  0217                     	;# 
   927  0217                     	;# 
   928  028C                     	;# 
   929  028D                     	;# 
   930  028E                     	;# 
   931  028F                     	;# 
   932  0290                     	;# 
   933  0291                     	;# 
   934  0291                     	;# 
   935  0292                     	;# 
   936  0293                     	;# 
   937  0293                     	;# 
   938  0298                     	;# 
   939  0298                     	;# 
   940  0299                     	;# 
   941  029A                     	;# 
   942  029A                     	;# 
   943  029E                     	;# 
   944  030C                     	;# 
   945  030D                     	;# 
   946  030E                     	;# 
   947  030F                     	;# 
   948  0310                     	;# 
   949  038C                     	;# 
   950  038D                     	;# 
   951  038E                     	;# 
   952  038F                     	;# 
   953  0390                     	;# 
   954  0391                     	;# 
   955  0392                     	;# 
   956  0393                     	;# 
   957  0394                     	;# 
   958  0395                     	;# 
   959  0396                     	;# 
   960  0397                     	;# 
   961  0398                     	;# 
   962  0399                     	;# 
   963  039D                     	;# 
   964  039E                     	;# 
   965  039F                     	;# 
   966  0415                     	;# 
   967  0416                     	;# 
   968  0417                     	;# 
   969  041C                     	;# 
   970  041D                     	;# 
   971  041E                     	;# 
   972  0498                     	;# 
   973  0498                     	;# 
   974  0499                     	;# 
   975  049A                     	;# 
   976  049B                     	;# 
   977  049B                     	;# 
   978  049C                     	;# 
   979  049D                     	;# 
   980  049E                     	;# 
   981  049F                     	;# 
   982  0511                     	;# 
   983  0515                     	;# 
   984  0617                     	;# 
   985  0618                     	;# 
   986  0619                     	;# 
   987  0619                     	;# 
   988  061A                     	;# 
   989  061B                     	;# 
   990  061C                     	;# 
   991  061C                     	;# 
   992  0691                     	;# 
   993  0692                     	;# 
   994  0693                     	;# 
   995  0694                     	;# 
   996  0695                     	;# 
   997  0696                     	;# 
   998  0697                     	;# 
   999  0698                     	;# 
  1000  0699                     	;# 
  1001  069A                     	;# 
  1002  069B                     	;# 
  1003  069C                     	;# 
  1004  069D                     	;# 
  1005  069E                     	;# 
  1006  069F                     	;# 
  1007  0E0F                     	;# 
  1008  0E10                     	;# 
  1009  0E11                     	;# 
  1010  0E12                     	;# 
  1011  0E13                     	;# 
  1012  0E14                     	;# 
  1013  0E15                     	;# 
  1014  0E17                     	;# 
  1015  0E20                     	;# 
  1016  0E21                     	;# 
  1017  0E22                     	;# 
  1018  0E24                     	;# 
  1019  0E25                     	;# 
  1020  0E28                     	;# 
  1021  0E29                     	;# 
  1022  0E2A                     	;# 
  1023  0E2B                     	;# 
  1024  0E90                     	;# 
  1025  0E91                     	;# 
  1026  0E92                     	;# 
  1027  0E93                     	;# 
  1028  0E94                     	;# 
  1029  0E95                     	;# 
  1030  0E96                     	;# 
  1031  0E97                     	;# 
  1032  0E98                     	;# 
  1033  0E99                     	;# 
  1034  0E9A                     	;# 
  1035  0E9B                     	;# 
  1036  0E9C                     	;# 
  1037  0E9D                     	;# 
  1038  0E9E                     	;# 
  1039  0E9F                     	;# 
  1040  0EA0                     	;# 
  1041  0EA1                     	;# 
  1042  0EA2                     	;# 
  1043  0EA3                     	;# 
  1044  0EA4                     	;# 
  1045  0EA5                     	;# 
  1046  0EA6                     	;# 
  1047  0EA7                     	;# 
  1048  0EA8                     	;# 
  1049  0EA9                     	;# 
  1050  0EAA                     	;# 
  1051  0EAB                     	;# 
  1052  0EAC                     	;# 
  1053  0EAD                     	;# 
  1054  0EAE                     	;# 
  1055  0EAF                     	;# 
  1056  0EB0                     	;# 
  1057  0EB1                     	;# 
  1058  0EB2                     	;# 
  1059  0F0F                     	;# 
  1060  0F10                     	;# 
  1061  0F11                     	;# 
  1062  0F12                     	;# 
  1063  0F13                     	;# 
  1064  0F14                     	;# 
  1065  0F15                     	;# 
  1066  0F16                     	;# 
  1067  0F17                     	;# 
  1068  0F18                     	;# 
  1069  0F19                     	;# 
  1070  0F1A                     	;# 
  1071  0F1B                     	;# 
  1072  0F1C                     	;# 
  1073  0F1D                     	;# 
  1074  0F1E                     	;# 
  1075  0F1F                     	;# 
  1076  0F20                     	;# 
  1077  0F21                     	;# 
  1078  0F22                     	;# 
  1079  0F23                     	;# 
  1080  0F24                     	;# 
  1081  0F25                     	;# 
  1082  0F26                     	;# 
  1083  0F27                     	;# 
  1084  0F28                     	;# 
  1085  0F29                     	;# 
  1086  0F2A                     	;# 
  1087  0F2B                     	;# 
  1088  0F2C                     	;# 
  1089  0F2D                     	;# 
  1090  0F2E                     	;# 
  1091  0F2F                     	;# 
  1092  0F30                     	;# 
  1093  0F31                     	;# 
  1094  0F32                     	;# 
  1095  0F33                     	;# 
  1096  0F34                     	;# 
  1097  0F35                     	;# 
  1098  0F36                     	;# 
  1099  0F37                     	;# 
  1100  0FE4                     	;# 
  1101  0FE5                     	;# 
  1102  0FE6                     	;# 
  1103  0FE7                     	;# 
  1104  0FE8                     	;# 
  1105  0FE9                     	;# 
  1106  0FEA                     	;# 
  1107  0FEB                     	;# 
  1108  0FED                     	;# 
  1109  0FEE                     	;# 
  1110  0FEF                     	;# 
  1111  0000                     	;# 
  1112  0001                     	;# 
  1113  0002                     	;# 
  1114  0003                     	;# 
  1115  0004                     	;# 
  1116  0005                     	;# 
  1117  0006                     	;# 
  1118  0007                     	;# 
  1119  0008                     	;# 
  1120  0009                     	;# 
  1121  000A                     	;# 
  1122  000B                     	;# 
  1123  000C                     	;# 
  1124  000D                     	;# 
  1125  000E                     	;# 
  1126  000F                     	;# 
  1127  0010                     	;# 
  1128  0011                     	;# 
  1129  0012                     	;# 
  1130  0013                     	;# 
  1131  0015                     	;# 
  1132  0016                     	;# 
  1133  0016                     	;# 
  1134  0017                     	;# 
  1135  0018                     	;# 
  1136  0019                     	;# 
  1137  001A                     	;# 
  1138  001B                     	;# 
  1139  001C                     	;# 
  1140  008C                     	;# 
  1141  008D                     	;# 
  1142  008E                     	;# 
  1143  008F                     	;# 
  1144  0090                     	;# 
  1145  0091                     	;# 
  1146  0092                     	;# 
  1147  0093                     	;# 
  1148  0095                     	;# 
  1149  0096                     	;# 
  1150  0097                     	;# 
  1151  0098                     	;# 
  1152  0099                     	;# 
  1153  009A                     	;# 
  1154  009B                     	;# 
  1155  009B                     	;# 
  1156  009C                     	;# 
  1157  009D                     	;# 
  1158  009E                     	;# 
  1159  009F                     	;# 
  1160  010C                     	;# 
  1161  010D                     	;# 
  1162  010E                     	;# 
  1163  010F                     	;# 
  1164  0110                     	;# 
  1165  0111                     	;# 
  1166  0112                     	;# 
  1167  0113                     	;# 
  1168  0114                     	;# 
  1169  0115                     	;# 
  1170  0116                     	;# 
  1171  0117                     	;# 
  1172  0118                     	;# 
  1173  0119                     	;# 
  1174  011A                     	;# 
  1175  011B                     	;# 
  1176  011B                     	;# 
  1177  011C                     	;# 
  1178  018C                     	;# 
  1179  018D                     	;# 
  1180  018E                     	;# 
  1181  018F                     	;# 
  1182  0190                     	;# 
  1183  0191                     	;# 
  1184  0191                     	;# 
  1185  0192                     	;# 
  1186  0193                     	;# 
  1187  0193                     	;# 
  1188  0194                     	;# 
  1189  0195                     	;# 
  1190  0196                     	;# 
  1191  0197                     	;# 
  1192  0199                     	;# 
  1193  0199                     	;# 
  1194  0199                     	;# 
  1195  019A                     	;# 
  1196  019A                     	;# 
  1197  019A                     	;# 
  1198  019B                     	;# 
  1199  019B                     	;# 
  1200  019B                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019C                     	;# 
  1204  019C                     	;# 
  1205  019C                     	;# 
  1206  019D                     	;# 
  1207  019D                     	;# 
  1208  019D                     	;# 
  1209  019E                     	;# 
  1210  019E                     	;# 
  1211  019E                     	;# 
  1212  019F                     	;# 
  1213  019F                     	;# 
  1214  019F                     	;# 
  1215  019F                     	;# 
  1216  019F                     	;# 
  1217  020C                     	;# 
  1218  020D                     	;# 
  1219  020E                     	;# 
  1220  020F                     	;# 
  1221  0210                     	;# 
  1222  0211                     	;# 
  1223  0211                     	;# 
  1224  0212                     	;# 
  1225  0212                     	;# 
  1226  0213                     	;# 
  1227  0213                     	;# 
  1228  0214                     	;# 
  1229  0214                     	;# 
  1230  0215                     	;# 
  1231  0215                     	;# 
  1232  0215                     	;# 
  1233  0215                     	;# 
  1234  0216                     	;# 
  1235  0216                     	;# 
  1236  0217                     	;# 
  1237  0217                     	;# 
  1238  028C                     	;# 
  1239  028D                     	;# 
  1240  028E                     	;# 
  1241  028F                     	;# 
  1242  0290                     	;# 
  1243  0291                     	;# 
  1244  0291                     	;# 
  1245  0292                     	;# 
  1246  0293                     	;# 
  1247  0293                     	;# 
  1248  0298                     	;# 
  1249  0298                     	;# 
  1250  0299                     	;# 
  1251  029A                     	;# 
  1252  029A                     	;# 
  1253  029E                     	;# 
  1254  030C                     	;# 
  1255  030D                     	;# 
  1256  030E                     	;# 
  1257  030F                     	;# 
  1258  0310                     	;# 
  1259  038C                     	;# 
  1260  038D                     	;# 
  1261  038E                     	;# 
  1262  038F                     	;# 
  1263  0390                     	;# 
  1264  0391                     	;# 
  1265  0392                     	;# 
  1266  0393                     	;# 
  1267  0394                     	;# 
  1268  0395                     	;# 
  1269  0396                     	;# 
  1270  0397                     	;# 
  1271  0398                     	;# 
  1272  0399                     	;# 
  1273  039D                     	;# 
  1274  039E                     	;# 
  1275  039F                     	;# 
  1276  0415                     	;# 
  1277  0416                     	;# 
  1278  0417                     	;# 
  1279  041C                     	;# 
  1280  041D                     	;# 
  1281  041E                     	;# 
  1282  0498                     	;# 
  1283  0498                     	;# 
  1284  0499                     	;# 
  1285  049A                     	;# 
  1286  049B                     	;# 
  1287  049B                     	;# 
  1288  049C                     	;# 
  1289  049D                     	;# 
  1290  049E                     	;# 
  1291  049F                     	;# 
  1292  0511                     	;# 
  1293  0515                     	;# 
  1294  0617                     	;# 
  1295  0618                     	;# 
  1296  0619                     	;# 
  1297  0619                     	;# 
  1298  061A                     	;# 
  1299  061B                     	;# 
  1300  061C                     	;# 
  1301  061C                     	;# 
  1302  0691                     	;# 
  1303  0692                     	;# 
  1304  0693                     	;# 
  1305  0694                     	;# 
  1306  0695                     	;# 
  1307  0696                     	;# 
  1308  0697                     	;# 
  1309  0698                     	;# 
  1310  0699                     	;# 
  1311  069A                     	;# 
  1312  069B                     	;# 
  1313  069C                     	;# 
  1314  069D                     	;# 
  1315  069E                     	;# 
  1316  069F                     	;# 
  1317  0E0F                     	;# 
  1318  0E10                     	;# 
  1319  0E11                     	;# 
  1320  0E12                     	;# 
  1321  0E13                     	;# 
  1322  0E14                     	;# 
  1323  0E15                     	;# 
  1324  0E17                     	;# 
  1325  0E20                     	;# 
  1326  0E21                     	;# 
  1327  0E22                     	;# 
  1328  0E24                     	;# 
  1329  0E25                     	;# 
  1330  0E28                     	;# 
  1331  0E29                     	;# 
  1332  0E2A                     	;# 
  1333  0E2B                     	;# 
  1334  0E90                     	;# 
  1335  0E91                     	;# 
  1336  0E92                     	;# 
  1337  0E93                     	;# 
  1338  0E94                     	;# 
  1339  0E95                     	;# 
  1340  0E96                     	;# 
  1341  0E97                     	;# 
  1342  0E98                     	;# 
  1343  0E99                     	;# 
  1344  0E9A                     	;# 
  1345  0E9B                     	;# 
  1346  0E9C                     	;# 
  1347  0E9D                     	;# 
  1348  0E9E                     	;# 
  1349  0E9F                     	;# 
  1350  0EA0                     	;# 
  1351  0EA1                     	;# 
  1352  0EA2                     	;# 
  1353  0EA3                     	;# 
  1354  0EA4                     	;# 
  1355  0EA5                     	;# 
  1356  0EA6                     	;# 
  1357  0EA7                     	;# 
  1358  0EA8                     	;# 
  1359  0EA9                     	;# 
  1360  0EAA                     	;# 
  1361  0EAB                     	;# 
  1362  0EAC                     	;# 
  1363  0EAD                     	;# 
  1364  0EAE                     	;# 
  1365  0EAF                     	;# 
  1366  0EB0                     	;# 
  1367  0EB1                     	;# 
  1368  0EB2                     	;# 
  1369  0F0F                     	;# 
  1370  0F10                     	;# 
  1371  0F11                     	;# 
  1372  0F12                     	;# 
  1373  0F13                     	;# 
  1374  0F14                     	;# 
  1375  0F15                     	;# 
  1376  0F16                     	;# 
  1377  0F17                     	;# 
  1378  0F18                     	;# 
  1379  0F19                     	;# 
  1380  0F1A                     	;# 
  1381  0F1B                     	;# 
  1382  0F1C                     	;# 
  1383  0F1D                     	;# 
  1384  0F1E                     	;# 
  1385  0F1F                     	;# 
  1386  0F20                     	;# 
  1387  0F21                     	;# 
  1388  0F22                     	;# 
  1389  0F23                     	;# 
  1390  0F24                     	;# 
  1391  0F25                     	;# 
  1392  0F26                     	;# 
  1393  0F27                     	;# 
  1394  0F28                     	;# 
  1395  0F29                     	;# 
  1396  0F2A                     	;# 
  1397  0F2B                     	;# 
  1398  0F2C                     	;# 
  1399  0F2D                     	;# 
  1400  0F2E                     	;# 
  1401  0F2F                     	;# 
  1402  0F30                     	;# 
  1403  0F31                     	;# 
  1404  0F32                     	;# 
  1405  0F33                     	;# 
  1406  0F34                     	;# 
  1407  0F35                     	;# 
  1408  0F36                     	;# 
  1409  0F37                     	;# 
  1410  0FE4                     	;# 
  1411  0FE5                     	;# 
  1412  0FE6                     	;# 
  1413  0FE7                     	;# 
  1414  0FE8                     	;# 
  1415  0FE9                     	;# 
  1416  0FEA                     	;# 
  1417  0FEB                     	;# 
  1418  0FED                     	;# 
  1419  0FEE                     	;# 
  1420  0FEF                     	;# 
  1421  0000                     	;# 
  1422  0001                     	;# 
  1423  0002                     	;# 
  1424  0003                     	;# 
  1425  0004                     	;# 
  1426  0005                     	;# 
  1427  0006                     	;# 
  1428  0007                     	;# 
  1429  0008                     	;# 
  1430  0009                     	;# 
  1431  000A                     	;# 
  1432  000B                     	;# 
  1433  000C                     	;# 
  1434  000D                     	;# 
  1435  000E                     	;# 
  1436  000F                     	;# 
  1437  0010                     	;# 
  1438  0011                     	;# 
  1439  0012                     	;# 
  1440  0013                     	;# 
  1441  0015                     	;# 
  1442  0016                     	;# 
  1443  0016                     	;# 
  1444  0017                     	;# 
  1445  0018                     	;# 
  1446  0019                     	;# 
  1447  001A                     	;# 
  1448  001B                     	;# 
  1449  001C                     	;# 
  1450  008C                     	;# 
  1451  008D                     	;# 
  1452  008E                     	;# 
  1453  008F                     	;# 
  1454  0090                     	;# 
  1455  0091                     	;# 
  1456  0092                     	;# 
  1457  0093                     	;# 
  1458  0095                     	;# 
  1459  0096                     	;# 
  1460  0097                     	;# 
  1461  0098                     	;# 
  1462  0099                     	;# 
  1463  009A                     	;# 
  1464  009B                     	;# 
  1465  009B                     	;# 
  1466  009C                     	;# 
  1467  009D                     	;# 
  1468  009E                     	;# 
  1469  009F                     	;# 
  1470  010C                     	;# 
  1471  010D                     	;# 
  1472  010E                     	;# 
  1473  010F                     	;# 
  1474  0110                     	;# 
  1475  0111                     	;# 
  1476  0112                     	;# 
  1477  0113                     	;# 
  1478  0114                     	;# 
  1479  0115                     	;# 
  1480  0116                     	;# 
  1481  0117                     	;# 
  1482  0118                     	;# 
  1483  0119                     	;# 
  1484  011A                     	;# 
  1485  011B                     	;# 
  1486  011B                     	;# 
  1487  011C                     	;# 
  1488  018C                     	;# 
  1489  018D                     	;# 
  1490  018E                     	;# 
  1491  018F                     	;# 
  1492  0190                     	;# 
  1493  0191                     	;# 
  1494  0191                     	;# 
  1495  0192                     	;# 
  1496  0193                     	;# 
  1497  0193                     	;# 
  1498  0194                     	;# 
  1499  0195                     	;# 
  1500  0196                     	;# 
  1501  0197                     	;# 
  1502  0199                     	;# 
  1503  0199                     	;# 
  1504  0199                     	;# 
  1505  019A                     	;# 
  1506  019A                     	;# 
  1507  019A                     	;# 
  1508  019B                     	;# 
  1509  019B                     	;# 
  1510  019B                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019C                     	;# 
  1514  019C                     	;# 
  1515  019C                     	;# 
  1516  019D                     	;# 
  1517  019D                     	;# 
  1518  019D                     	;# 
  1519  019E                     	;# 
  1520  019E                     	;# 
  1521  019E                     	;# 
  1522  019F                     	;# 
  1523  019F                     	;# 
  1524  019F                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  020C                     	;# 
  1528  020D                     	;# 
  1529  020E                     	;# 
  1530  020F                     	;# 
  1531  0210                     	;# 
  1532  0211                     	;# 
  1533  0211                     	;# 
  1534  0212                     	;# 
  1535  0212                     	;# 
  1536  0213                     	;# 
  1537  0213                     	;# 
  1538  0214                     	;# 
  1539  0214                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0216                     	;# 
  1545  0216                     	;# 
  1546  0217                     	;# 
  1547  0217                     	;# 
  1548  028C                     	;# 
  1549  028D                     	;# 
  1550  028E                     	;# 
  1551  028F                     	;# 
  1552  0290                     	;# 
  1553  0291                     	;# 
  1554  0291                     	;# 
  1555  0292                     	;# 
  1556  0293                     	;# 
  1557  0293                     	;# 
  1558  0298                     	;# 
  1559  0298                     	;# 
  1560  0299                     	;# 
  1561  029A                     	;# 
  1562  029A                     	;# 
  1563  029E                     	;# 
  1564  030C                     	;# 
  1565  030D                     	;# 
  1566  030E                     	;# 
  1567  030F                     	;# 
  1568  0310                     	;# 
  1569  038C                     	;# 
  1570  038D                     	;# 
  1571  038E                     	;# 
  1572  038F                     	;# 
  1573  0390                     	;# 
  1574  0391                     	;# 
  1575  0392                     	;# 
  1576  0393                     	;# 
  1577  0394                     	;# 
  1578  0395                     	;# 
  1579  0396                     	;# 
  1580  0397                     	;# 
  1581  0398                     	;# 
  1582  0399                     	;# 
  1583  039D                     	;# 
  1584  039E                     	;# 
  1585  039F                     	;# 
  1586  0415                     	;# 
  1587  0416                     	;# 
  1588  0417                     	;# 
  1589  041C                     	;# 
  1590  041D                     	;# 
  1591  041E                     	;# 
  1592  0498                     	;# 
  1593  0498                     	;# 
  1594  0499                     	;# 
  1595  049A                     	;# 
  1596  049B                     	;# 
  1597  049B                     	;# 
  1598  049C                     	;# 
  1599  049D                     	;# 
  1600  049E                     	;# 
  1601  049F                     	;# 
  1602  0511                     	;# 
  1603  0515                     	;# 
  1604  0617                     	;# 
  1605  0618                     	;# 
  1606  0619                     	;# 
  1607  0619                     	;# 
  1608  061A                     	;# 
  1609  061B                     	;# 
  1610  061C                     	;# 
  1611  061C                     	;# 
  1612  0691                     	;# 
  1613  0692                     	;# 
  1614  0693                     	;# 
  1615  0694                     	;# 
  1616  0695                     	;# 
  1617  0696                     	;# 
  1618  0697                     	;# 
  1619  0698                     	;# 
  1620  0699                     	;# 
  1621  069A                     	;# 
  1622  069B                     	;# 
  1623  069C                     	;# 
  1624  069D                     	;# 
  1625  069E                     	;# 
  1626  069F                     	;# 
  1627  0E0F                     	;# 
  1628  0E10                     	;# 
  1629  0E11                     	;# 
  1630  0E12                     	;# 
  1631  0E13                     	;# 
  1632  0E14                     	;# 
  1633  0E15                     	;# 
  1634  0E17                     	;# 
  1635  0E20                     	;# 
  1636  0E21                     	;# 
  1637  0E22                     	;# 
  1638  0E24                     	;# 
  1639  0E25                     	;# 
  1640  0E28                     	;# 
  1641  0E29                     	;# 
  1642  0E2A                     	;# 
  1643  0E2B                     	;# 
  1644  0E90                     	;# 
  1645  0E91                     	;# 
  1646  0E92                     	;# 
  1647  0E93                     	;# 
  1648  0E94                     	;# 
  1649  0E95                     	;# 
  1650  0E96                     	;# 
  1651  0E97                     	;# 
  1652  0E98                     	;# 
  1653  0E99                     	;# 
  1654  0E9A                     	;# 
  1655  0E9B                     	;# 
  1656  0E9C                     	;# 
  1657  0E9D                     	;# 
  1658  0E9E                     	;# 
  1659  0E9F                     	;# 
  1660  0EA0                     	;# 
  1661  0EA1                     	;# 
  1662  0EA2                     	;# 
  1663  0EA3                     	;# 
  1664  0EA4                     	;# 
  1665  0EA5                     	;# 
  1666  0EA6                     	;# 
  1667  0EA7                     	;# 
  1668  0EA8                     	;# 
  1669  0EA9                     	;# 
  1670  0EAA                     	;# 
  1671  0EAB                     	;# 
  1672  0EAC                     	;# 
  1673  0EAD                     	;# 
  1674  0EAE                     	;# 
  1675  0EAF                     	;# 
  1676  0EB0                     	;# 
  1677  0EB1                     	;# 
  1678  0EB2                     	;# 
  1679  0F0F                     	;# 
  1680  0F10                     	;# 
  1681  0F11                     	;# 
  1682  0F12                     	;# 
  1683  0F13                     	;# 
  1684  0F14                     	;# 
  1685  0F15                     	;# 
  1686  0F16                     	;# 
  1687  0F17                     	;# 
  1688  0F18                     	;# 
  1689  0F19                     	;# 
  1690  0F1A                     	;# 
  1691  0F1B                     	;# 
  1692  0F1C                     	;# 
  1693  0F1D                     	;# 
  1694  0F1E                     	;# 
  1695  0F1F                     	;# 
  1696  0F20                     	;# 
  1697  0F21                     	;# 
  1698  0F22                     	;# 
  1699  0F23                     	;# 
  1700  0F24                     	;# 
  1701  0F25                     	;# 
  1702  0F26                     	;# 
  1703  0F27                     	;# 
  1704  0F28                     	;# 
  1705  0F29                     	;# 
  1706  0F2A                     	;# 
  1707  0F2B                     	;# 
  1708  0F2C                     	;# 
  1709  0F2D                     	;# 
  1710  0F2E                     	;# 
  1711  0F2F                     	;# 
  1712  0F30                     	;# 
  1713  0F31                     	;# 
  1714  0F32                     	;# 
  1715  0F33                     	;# 
  1716  0F34                     	;# 
  1717  0F35                     	;# 
  1718  0F36                     	;# 
  1719  0F37                     	;# 
  1720  0FE4                     	;# 
  1721  0FE5                     	;# 
  1722  0FE6                     	;# 
  1723  0FE7                     	;# 
  1724  0FE8                     	;# 
  1725  0FE9                     	;# 
  1726  0FEA                     	;# 
  1727  0FEB                     	;# 
  1728  0FED                     	;# 
  1729  0FEE                     	;# 
  1730  0FEF                     	;# 
  1731  0000                     	;# 
  1732  0001                     	;# 
  1733  0002                     	;# 
  1734  0003                     	;# 
  1735  0004                     	;# 
  1736  0005                     	;# 
  1737  0006                     	;# 
  1738  0007                     	;# 
  1739  0008                     	;# 
  1740  0009                     	;# 
  1741  000A                     	;# 
  1742  000B                     	;# 
  1743  000C                     	;# 
  1744  000D                     	;# 
  1745  000E                     	;# 
  1746  000F                     	;# 
  1747  0010                     	;# 
  1748  0011                     	;# 
  1749  0012                     	;# 
  1750  0013                     	;# 
  1751  0015                     	;# 
  1752  0016                     	;# 
  1753  0016                     	;# 
  1754  0017                     	;# 
  1755  0018                     	;# 
  1756  0019                     	;# 
  1757  001A                     	;# 
  1758  001B                     	;# 
  1759  001C                     	;# 
  1760  008C                     	;# 
  1761  008D                     	;# 
  1762  008E                     	;# 
  1763  008F                     	;# 
  1764  0090                     	;# 
  1765  0091                     	;# 
  1766  0092                     	;# 
  1767  0093                     	;# 
  1768  0095                     	;# 
  1769  0096                     	;# 
  1770  0097                     	;# 
  1771  0098                     	;# 
  1772  0099                     	;# 
  1773  009A                     	;# 
  1774  009B                     	;# 
  1775  009B                     	;# 
  1776  009C                     	;# 
  1777  009D                     	;# 
  1778  009E                     	;# 
  1779  009F                     	;# 
  1780  010C                     	;# 
  1781  010D                     	;# 
  1782  010E                     	;# 
  1783  010F                     	;# 
  1784  0110                     	;# 
  1785  0111                     	;# 
  1786  0112                     	;# 
  1787  0113                     	;# 
  1788  0114                     	;# 
  1789  0115                     	;# 
  1790  0116                     	;# 
  1791  0117                     	;# 
  1792  0118                     	;# 
  1793  0119                     	;# 
  1794  011A                     	;# 
  1795  011B                     	;# 
  1796  011B                     	;# 
  1797  011C                     	;# 
  1798  018C                     	;# 
  1799  018D                     	;# 
  1800  018E                     	;# 
  1801  018F                     	;# 
  1802  0190                     	;# 
  1803  0191                     	;# 
  1804  0191                     	;# 
  1805  0192                     	;# 
  1806  0193                     	;# 
  1807  0193                     	;# 
  1808  0194                     	;# 
  1809  0195                     	;# 
  1810  0196                     	;# 
  1811  0197                     	;# 
  1812  0199                     	;# 
  1813  0199                     	;# 
  1814  0199                     	;# 
  1815  019A                     	;# 
  1816  019A                     	;# 
  1817  019A                     	;# 
  1818  019B                     	;# 
  1819  019B                     	;# 
  1820  019B                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019C                     	;# 
  1824  019C                     	;# 
  1825  019C                     	;# 
  1826  019D                     	;# 
  1827  019D                     	;# 
  1828  019D                     	;# 
  1829  019E                     	;# 
  1830  019E                     	;# 
  1831  019E                     	;# 
  1832  019F                     	;# 
  1833  019F                     	;# 
  1834  019F                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  020C                     	;# 
  1838  020D                     	;# 
  1839  020E                     	;# 
  1840  020F                     	;# 
  1841  0210                     	;# 
  1842  0211                     	;# 
  1843  0211                     	;# 
  1844  0212                     	;# 
  1845  0212                     	;# 
  1846  0213                     	;# 
  1847  0213                     	;# 
  1848  0214                     	;# 
  1849  0214                     	;# 
  1850  0215                     	;# 
  1851  0215                     	;# 
  1852  0215                     	;# 
  1853  0215                     	;# 
  1854  0216                     	;# 
  1855  0216                     	;# 
  1856  0217                     	;# 
  1857  0217                     	;# 
  1858  028C                     	;# 
  1859  028D                     	;# 
  1860  028E                     	;# 
  1861  028F                     	;# 
  1862  0290                     	;# 
  1863  0291                     	;# 
  1864  0291                     	;# 
  1865  0292                     	;# 
  1866  0293                     	;# 
  1867  0293                     	;# 
  1868  0298                     	;# 
  1869  0298                     	;# 
  1870  0299                     	;# 
  1871  029A                     	;# 
  1872  029A                     	;# 
  1873  029E                     	;# 
  1874  030C                     	;# 
  1875  030D                     	;# 
  1876  030E                     	;# 
  1877  030F                     	;# 
  1878  0310                     	;# 
  1879  038C                     	;# 
  1880  038D                     	;# 
  1881  038E                     	;# 
  1882  038F                     	;# 
  1883  0390                     	;# 
  1884  0391                     	;# 
  1885  0392                     	;# 
  1886  0393                     	;# 
  1887  0394                     	;# 
  1888  0395                     	;# 
  1889  0396                     	;# 
  1890  0397                     	;# 
  1891  0398                     	;# 
  1892  0399                     	;# 
  1893  039D                     	;# 
  1894  039E                     	;# 
  1895  039F                     	;# 
  1896  0415                     	;# 
  1897  0416                     	;# 
  1898  0417                     	;# 
  1899  041C                     	;# 
  1900  041D                     	;# 
  1901  041E                     	;# 
  1902  0498                     	;# 
  1903  0498                     	;# 
  1904  0499                     	;# 
  1905  049A                     	;# 
  1906  049B                     	;# 
  1907  049B                     	;# 
  1908  049C                     	;# 
  1909  049D                     	;# 
  1910  049E                     	;# 
  1911  049F                     	;# 
  1912  0511                     	;# 
  1913  0515                     	;# 
  1914  0617                     	;# 
  1915  0618                     	;# 
  1916  0619                     	;# 
  1917  0619                     	;# 
  1918  061A                     	;# 
  1919  061B                     	;# 
  1920  061C                     	;# 
  1921  061C                     	;# 
  1922  0691                     	;# 
  1923  0692                     	;# 
  1924  0693                     	;# 
  1925  0694                     	;# 
  1926  0695                     	;# 
  1927  0696                     	;# 
  1928  0697                     	;# 
  1929  0698                     	;# 
  1930  0699                     	;# 
  1931  069A                     	;# 
  1932  069B                     	;# 
  1933  069C                     	;# 
  1934  069D                     	;# 
  1935  069E                     	;# 
  1936  069F                     	;# 
  1937  0E0F                     	;# 
  1938  0E10                     	;# 
  1939  0E11                     	;# 
  1940  0E12                     	;# 
  1941  0E13                     	;# 
  1942  0E14                     	;# 
  1943  0E15                     	;# 
  1944  0E17                     	;# 
  1945  0E20                     	;# 
  1946  0E21                     	;# 
  1947  0E22                     	;# 
  1948  0E24                     	;# 
  1949  0E25                     	;# 
  1950  0E28                     	;# 
  1951  0E29                     	;# 
  1952  0E2A                     	;# 
  1953  0E2B                     	;# 
  1954  0E90                     	;# 
  1955  0E91                     	;# 
  1956  0E92                     	;# 
  1957  0E93                     	;# 
  1958  0E94                     	;# 
  1959  0E95                     	;# 
  1960  0E96                     	;# 
  1961  0E97                     	;# 
  1962  0E98                     	;# 
  1963  0E99                     	;# 
  1964  0E9A                     	;# 
  1965  0E9B                     	;# 
  1966  0E9C                     	;# 
  1967  0E9D                     	;# 
  1968  0E9E                     	;# 
  1969  0E9F                     	;# 
  1970  0EA0                     	;# 
  1971  0EA1                     	;# 
  1972  0EA2                     	;# 
  1973  0EA3                     	;# 
  1974  0EA4                     	;# 
  1975  0EA5                     	;# 
  1976  0EA6                     	;# 
  1977  0EA7                     	;# 
  1978  0EA8                     	;# 
  1979  0EA9                     	;# 
  1980  0EAA                     	;# 
  1981  0EAB                     	;# 
  1982  0EAC                     	;# 
  1983  0EAD                     	;# 
  1984  0EAE                     	;# 
  1985  0EAF                     	;# 
  1986  0EB0                     	;# 
  1987  0EB1                     	;# 
  1988  0EB2                     	;# 
  1989  0F0F                     	;# 
  1990  0F10                     	;# 
  1991  0F11                     	;# 
  1992  0F12                     	;# 
  1993  0F13                     	;# 
  1994  0F14                     	;# 
  1995  0F15                     	;# 
  1996  0F16                     	;# 
  1997  0F17                     	;# 
  1998  0F18                     	;# 
  1999  0F19                     	;# 
  2000  0F1A                     	;# 
  2001  0F1B                     	;# 
  2002  0F1C                     	;# 
  2003  0F1D                     	;# 
  2004  0F1E                     	;# 
  2005  0F1F                     	;# 
  2006  0F20                     	;# 
  2007  0F21                     	;# 
  2008  0F22                     	;# 
  2009  0F23                     	;# 
  2010  0F24                     	;# 
  2011  0F25                     	;# 
  2012  0F26                     	;# 
  2013  0F27                     	;# 
  2014  0F28                     	;# 
  2015  0F29                     	;# 
  2016  0F2A                     	;# 
  2017  0F2B                     	;# 
  2018  0F2C                     	;# 
  2019  0F2D                     	;# 
  2020  0F2E                     	;# 
  2021  0F2F                     	;# 
  2022  0F30                     	;# 
  2023  0F31                     	;# 
  2024  0F32                     	;# 
  2025  0F33                     	;# 
  2026  0F34                     	;# 
  2027  0F35                     	;# 
  2028  0F36                     	;# 
  2029  0F37                     	;# 
  2030  0FE4                     	;# 
  2031  0FE5                     	;# 
  2032  0FE6                     	;# 
  2033  0FE7                     	;# 
  2034  0FE8                     	;# 
  2035  0FE9                     	;# 
  2036  0FEA                     	;# 
  2037  0FEB                     	;# 
  2038  0FED                     	;# 
  2039  0FEE                     	;# 
  2040  0FEF                     	;_messageBuffer
  2041                           
  2042                           	psect	idataBANK3
  2043  0800                     __pidataBANK3:	
  2044                           
  2045                           ;initializer for stoa@F1174
  2046  0800  3428               	retlw	40
  2047  0801  346E               	retlw	110
  2048  0802  3475               	retlw	117
  2049  0803  346C               	retlw	108
  2050  0804  346C               	retlw	108
  2051  0805  3429               	retlw	41
  2052  0806  3400               	retlw	0
  2053                           
  2054                           	psect	stringtext1
  2055  3165                     __pstringtext1:	
  2056  3165                     _OCD_threshold_setting:	
  2057  3165  3411               	retlw	17
  2058  3166  3400               	retlw	0
  2059  3167  3416               	retlw	22
  2060  3168  3400               	retlw	0
  2061  3169  341C               	retlw	28
  2062  316A  3400               	retlw	0
  2063  316B  3421               	retlw	33
  2064  316C  3400               	retlw	0
  2065  316D  3427               	retlw	39
  2066  316E  3400               	retlw	0
  2067  316F  342C               	retlw	44
  2068  3170  3400               	retlw	0
  2069  3171  3432               	retlw	50
  2070  3172  3400               	retlw	0
  2071  3173  3438               	retlw	56
  2072  3174  3400               	retlw	0
  2073  3175  343D               	retlw	61
  2074  3176  3400               	retlw	0
  2075  3177  3443               	retlw	67
  2076  3178  3400               	retlw	0
  2077  3179  3448               	retlw	72
  2078  317A  3400               	retlw	0
  2079  317B  344E               	retlw	78
  2080  317C  3400               	retlw	0
  2081  317D  3453               	retlw	83
  2082  317E  3400               	retlw	0
  2083  317F  3459               	retlw	89
  2084  3180  3400               	retlw	0
  2085  3181  345E               	retlw	94
  2086  3182  3400               	retlw	0
  2087  3183  3464               	retlw	100
  2088  3184  3400               	retlw	0
  2089  3185                     __end_of_OCD_threshold_setting:	
  2090                           
  2091                           	psect	stringtext2
  2092  3800                     __pstringtext2:	
  2093  3800                     _OCD_delay_setting:	
  2094  3800  3408               	retlw	8
  2095  3801  3400               	retlw	0
  2096  3802  3414               	retlw	20
  2097  3803  3400               	retlw	0
  2098  3804  3428               	retlw	40
  2099  3805  3400               	retlw	0
  2100  3806  3450               	retlw	80
  2101  3807  3400               	retlw	0
  2102  3808  34A0               	retlw	160
  2103  3809  3400               	retlw	0
  2104  380A  3440               	retlw	64
  2105  380B  3401               	retlw	1
  2106  380C  3480               	retlw	128
  2107  380D  3402               	retlw	2
  2108  380E  3400               	retlw	0
  2109  380F  3405               	retlw	5
  2110  3810                     __end_of_OCD_delay_setting:	
  2111                           
  2112                           	psect	stringtext3
  2113  3810                     __pstringtext3:	
  2114  3810                     _SCD_threshold_setting:	
  2115  3810  342C               	retlw	44
  2116  3811  3400               	retlw	0
  2117  3812  3443               	retlw	67
  2118  3813  3400               	retlw	0
  2119  3814  3459               	retlw	89
  2120  3815  3400               	retlw	0
  2121  3816  346F               	retlw	111
  2122  3817  3400               	retlw	0
  2123  3818  3485               	retlw	133
  2124  3819  3400               	retlw	0
  2125  381A  349B               	retlw	155
  2126  381B  3400               	retlw	0
  2127  381C  34B2               	retlw	178
  2128  381D  3400               	retlw	0
  2129  381E  34C8               	retlw	200
  2130  381F  3400               	retlw	0
  2131  3820                     __end_of_SCD_threshold_setting:	
  2132                           
  2133                           	psect	stringtext4
  2134  3820                     __pstringtext4:	
  2135  3820                     _OV_delay_setting:	
  2136  3820  3401               	retlw	1
  2137  3821  3400               	retlw	0
  2138  3822  3402               	retlw	2
  2139  3823  3400               	retlw	0
  2140  3824  3404               	retlw	4
  2141  3825  3400               	retlw	0
  2142  3826  3408               	retlw	8
  2143  3827  3400               	retlw	0
  2144  3828                     __end_of_OV_delay_setting:	
  2145                           
  2146                           	psect	stringtext5
  2147  3828                     __pstringtext5:	
  2148  3828                     _UV_delay_setting:	
  2149  3828  3401               	retlw	1
  2150  3829  3400               	retlw	0
  2151  382A  3404               	retlw	4
  2152  382B  3400               	retlw	0
  2153  382C  3408               	retlw	8
  2154  382D  3400               	retlw	0
  2155  382E  3410               	retlw	16
  2156  382F  3400               	retlw	0
  2157  3830                     __end_of_UV_delay_setting:	
  2158                           
  2159                           	psect	stringtext6
  2160  3830                     __pstringtext6:	
  2161  3830                     _SCD_delay_setting:	
  2162  3830  3446               	retlw	70
  2163  3831  3400               	retlw	0
  2164  3832  3464               	retlw	100
  2165  3833  3400               	retlw	0
  2166  3834  34C8               	retlw	200
  2167  3835  3400               	retlw	0
  2168  3836  3490               	retlw	144
  2169  3837  3401               	retlw	1
  2170  3838                     __end_of_SCD_delay_setting:	
  2171                           
  2172                           	psect	stringtext7
  2173  3000                     __pstringtext7:	
  2174  3000                     _ATmega328_address:	
  2175  3000  3402               	retlw	2
  2176  3001  3400               	retlw	0
  2177  3002                     __end_of_ATmega328_address:	
  2178  0016                     _TMR1	set	22
  2179  000B                     _INTCONbits	set	11
  2180  0018                     _T1CONbits	set	24
  2181  0011                     _PIR1bits	set	17
  2182  0090                     _TRISEbits	set	144
  2183  008C                     _TRISAbits	set	140
  2184  008E                     _TRISCbits	set	142
  2185  008D                     _TRISBbits	set	141
  2186  0091                     _PIE1bits	set	145
  2187  0476                     _TRISC6	set	1142
  2188  0477                     _TRISC7	set	1143
  2189  04CF                     _SPLLEN	set	1231
  2190  04CE                     _IRCF3	set	1230
  2191  04CD                     _IRCF2	set	1229
  2192  04CC                     _IRCF1	set	1228
  2193  04CB                     _IRCF0	set	1227
  2194  04C9                     _SCS1	set	1225
  2195  04C8                     _SCS0	set	1224
  2196  0110                     _LATEbits	set	272
  2197  010C                     _LATAbits	set	268
  2198  019A                     _TX1REG	set	410
  2199  0199                     _RC1REG	set	409
  2200  019D                     _RC1STAbits	set	413
  2201  019B                     _SPBRG	set	411
  2202  018E                     _ANSELCbits	set	398
  2203  018D                     _ANSELBbits	set	397
  2204  0CF5                     _TXEN	set	3317
  2205  0CEC                     _CREN	set	3308
  2206  0CEF                     _SPEN	set	3311
  2207  0CF4                     _SYNC	set	3316
  2208  0CF2                     _BRGH	set	3314
  2209  0216                     _SSPCON2bits	set	534
  2210  0211                     _SSPBUF	set	529
  2211  0212                     _SSPADD	set	530
  2212  0215                     _SSPCONbits	set	533
  2213  0E24                     _RXPPSbits	set	3620
  2214  0E20                     _SSPCLKPPSbits	set	3616
  2215  0E21                     _SSPDATPPSbits	set	3617
  2216  0E0F                     _PPSLOCKbits	set	3599
  2217  0E0F                     _PPSLOCK	set	3599
  2218  0E9A                     _RB2PPSbits	set	3738
  2219  0EA5                     _RC5PPSbits	set	3749
  2220  0EA4                     _RC4PPSbits	set	3748
  2221  3002                     STR_4:	
  2222  3002  3441               	retlw	65	;'A'
  2223  3003  3474               	retlw	116	;'t'
  2224  3004  3474               	retlw	116	;'t'
  2225  3005  3465               	retlw	101	;'e'
  2226  3006  346D               	retlw	109	;'m'
  2227  3007  3470               	retlw	112	;'p'
  2228  3008  3474               	retlw	116	;'t'
  2229  3009  3420               	retlw	32	;' '
  2230  300A  3474               	retlw	116	;'t'
  2231  300B  346F               	retlw	111	;'o'
  2232  300C  3420               	retlw	32	;' '
  2233  300D  3473               	retlw	115	;'s'
  2234  300E  3465               	retlw	101	;'e'
  2235  300F  3474               	retlw	116	;'t'
  2236  3010  3420               	retlw	32	;' '
  2237  3011  3469               	retlw	105	;'i'
  2238  3012  346E               	retlw	110	;'n'
  2239  3013  3469               	retlw	105	;'i'
  2240  3014  3474               	retlw	116	;'t'
  2241  3015  3469               	retlw	105	;'i'
  2242  3016  3461               	retlw	97	;'a'
  2243  3017  346C               	retlw	108	;'l'
  2244  3018  3420               	retlw	32	;' '
  2245  3019  3473               	retlw	115	;'s'
  2246  301A  3479               	retlw	121	;'y'
  2247  301B  3473               	retlw	115	;'s'
  2248  301C  3474               	retlw	116	;'t'
  2249  301D  3465               	retlw	101	;'e'
  2250  301E  346D               	retlw	109	;'m'
  2251  301F  3420               	retlw	32	;' '
  2252  3020  3470               	retlw	112	;'p'
  2253  3021  3461               	retlw	97	;'a'
  2254  3022  3472               	retlw	114	;'r'
  2255  3023  3461               	retlw	97	;'a'
  2256  3024  346D               	retlw	109	;'m'
  2257  3025  3465               	retlw	101	;'e'
  2258  3026  3474               	retlw	116	;'t'
  2259  3027  3465               	retlw	101	;'e'
  2260  3028  3472               	retlw	114	;'r'
  2261  3029  3473               	retlw	115	;'s'
  2262  302A  3420               	retlw	32	;' '
  2263  302B  3474               	retlw	116	;'t'
  2264  302C  346F               	retlw	111	;'o'
  2265  302D  3420               	retlw	32	;' '
  2266  302E  3441               	retlw	65	;'A'
  2267  302F  3446               	retlw	70	;'F'
  2268  3030  3445               	retlw	69	;'E'
  2269  3031  342E               	retlw	46	;'.'
  2270  3032  342E               	retlw	46	;'.'
  2271  3033  342E               	retlw	46	;'.'
  2272  3034  340A               	retlw	10
  2273  3035  340D               	retlw	13
  2274  3036  3400               	retlw	0
  2275                           
  2276                           	psect	stringtext8
  2277  3037                     __pstringtext8:	
  2278  3037                     STR_2:	
  2279  3037  3443               	retlw	67	;'C'
  2280  3038  346F               	retlw	111	;'o'
  2281  3039  346D               	retlw	109	;'m'
  2282  303A  346D               	retlw	109	;'m'
  2283  303B  3475               	retlw	117	;'u'
  2284  303C  346E               	retlw	110	;'n'
  2285  303D  3469               	retlw	105	;'i'
  2286  303E  3463               	retlw	99	;'c'
  2287  303F  3461               	retlw	97	;'a'
  2288  3040  3474               	retlw	116	;'t'
  2289  3041  3469               	retlw	105	;'i'
  2290  3042  346F               	retlw	111	;'o'
  2291  3043  346E               	retlw	110	;'n'
  2292  3044  3420               	retlw	32	;' '
  2293  3045  3477               	retlw	119	;'w'
  2294  3046  3469               	retlw	105	;'i'
  2295  3047  3474               	retlw	116	;'t'
  2296  3048  3468               	retlw	104	;'h'
  2297  3049  3420               	retlw	32	;' '
  2298  304A  3442               	retlw	66	;'B'
  2299  304B  3451               	retlw	81	;'Q'
  2300  304C  3437               	retlw	55	;'7'
  2301  304D  3436               	retlw	54	;'6'
  2302  304E  3439               	retlw	57	;'9'
  2303  304F  3432               	retlw	50	;'2'
  2304  3050  3430               	retlw	48	;'0'
  2305  3051  3420               	retlw	32	;' '
  2306  3052  3441               	retlw	65	;'A'
  2307  3053  3446               	retlw	70	;'F'
  2308  3054  3445               	retlw	69	;'E'
  2309  3055  3420               	retlw	32	;' '
  2310  3056  3465               	retlw	101	;'e'
  2311  3057  3473               	retlw	115	;'s'
  2312  3058  3474               	retlw	116	;'t'
  2313  3059  3461               	retlw	97	;'a'
  2314  305A  3462               	retlw	98	;'b'
  2315  305B  346C               	retlw	108	;'l'
  2316  305C  3469               	retlw	105	;'i'
  2317  305D  3473               	retlw	115	;'s'
  2318  305E  3468               	retlw	104	;'h'
  2319  305F  3465               	retlw	101	;'e'
  2320  3060  3464               	retlw	100	;'d'
  2321  3061  3421               	retlw	33	;'!'
  2322  3062  340A               	retlw	10
  2323  3063  340D               	retlw	13
  2324  3064  3400               	retlw	0
  2325                           
  2326                           	psect	stringtext9
  2327  3065                     __pstringtext9:	
  2328  3065                     STR_9:	
  2329  3065  344E               	retlw	78	;'N'
  2330  3066  346F               	retlw	111	;'o'
  2331  3067  3477               	retlw	119	;'w'
  2332  3068  3420               	retlw	32	;' '
  2333  3069  3472               	retlw	114	;'r'
  2334  306A  3465               	retlw	101	;'e'
  2335  306B  3461               	retlw	97	;'a'
  2336  306C  3464               	retlw	100	;'d'
  2337  306D  3469               	retlw	105	;'i'
  2338  306E  346E               	retlw	110	;'n'
  2339  306F  3467               	retlw	103	;'g'
  2340  3070  3420               	retlw	32	;' '
  2341  3071  3441               	retlw	65	;'A'
  2342  3072  3446               	retlw	70	;'F'
  2343  3073  3445               	retlw	69	;'E'
  2344  3074  3420               	retlw	32	;' '
  2345  3075  3464               	retlw	100	;'d'
  2346  3076  3461               	retlw	97	;'a'
  2347  3077  3474               	retlw	116	;'t'
  2348  3078  3461               	retlw	97	;'a'
  2349  3079  3420               	retlw	32	;' '
  2350  307A  3461               	retlw	97	;'a'
  2351  307B  3474               	retlw	116	;'t'
  2352  307C  3420               	retlw	32	;' '
  2353  307D  3472               	retlw	114	;'r'
  2354  307E  3465               	retlw	101	;'e'
  2355  307F  3467               	retlw	103	;'g'
  2356  3080  3475               	retlw	117	;'u'
  2357  3081  346C               	retlw	108	;'l'
  2358  3082  3461               	retlw	97	;'a'
  2359  3083  3472               	retlw	114	;'r'
  2360  3084  3420               	retlw	32	;' '
  2361  3085  3469               	retlw	105	;'i'
  2362  3086  346E               	retlw	110	;'n'
  2363  3087  3474               	retlw	116	;'t'
  2364  3088  3465               	retlw	101	;'e'
  2365  3089  3472               	retlw	114	;'r'
  2366  308A  3476               	retlw	118	;'v'
  2367  308B  3461               	retlw	97	;'a'
  2368  308C  346C               	retlw	108	;'l'
  2369  308D  3473               	retlw	115	;'s'
  2370  308E  342E               	retlw	46	;'.'
  2371  308F  340A               	retlw	10
  2372  3090  340D               	retlw	13
  2373  3091  3400               	retlw	0
  2374                           
  2375                           	psect	stringtext10
  2376  3092                     __pstringtext10:	
  2377  3092                     STR_7:	
  2378  3092  3453               	retlw	83	;'S'
  2379  3093  3465               	retlw	101	;'e'
  2380  3094  3474               	retlw	116	;'t'
  2381  3095  3420               	retlw	32	;' '
  2382  3096  3473               	retlw	115	;'s'
  2383  3097  3468               	retlw	104	;'h'
  2384  3098  346F               	retlw	111	;'o'
  2385  3099  3472               	retlw	114	;'r'
  2386  309A  3474               	retlw	116	;'t'
  2387  309B  3420               	retlw	32	;' '
  2388  309C  3463               	retlw	99	;'c'
  2389  309D  3469               	retlw	105	;'i'
  2390  309E  3472               	retlw	114	;'r'
  2391  309F  3463               	retlw	99	;'c'
  2392  30A0  3475               	retlw	117	;'u'
  2393  30A1  3469               	retlw	105	;'i'
  2394  30A2  3474               	retlw	116	;'t'
  2395  30A3  3420               	retlw	32	;' '
  2396  30A4  3463               	retlw	99	;'c'
  2397  30A5  3475               	retlw	117	;'u'
  2398  30A6  3472               	retlw	114	;'r'
  2399  30A7  3472               	retlw	114	;'r'
  2400  30A8  3465               	retlw	101	;'e'
  2401  30A9  346E               	retlw	110	;'n'
  2402  30AA  3474               	retlw	116	;'t'
  2403  30AB  3420               	retlw	32	;' '
  2404  30AC  3466               	retlw	102	;'f'
  2405  30AD  346F               	retlw	111	;'o'
  2406  30AE  3472               	retlw	114	;'r'
  2407  30AF  3420               	retlw	32	;' '
  2408  30B0  3441               	retlw	65	;'A'
  2409  30B1  3446               	retlw	70	;'F'
  2410  30B2  3445               	retlw	69	;'E'
  2411  30B3  343A               	retlw	58	;':'
  2412  30B4  3420               	retlw	32	;' '
  2413  30B5  3425               	retlw	37	;'%'
  2414  30B6  346C               	retlw	108	;'l'
  2415  30B7  3475               	retlw	117	;'u'
  2416  30B8  3420               	retlw	32	;' '
  2417  30B9  346D               	retlw	109	;'m'
  2418  30BA  3441               	retlw	65	;'A'
  2419  30BB  340A               	retlw	10
  2420  30BC  340D               	retlw	13
  2421  30BD  3400               	retlw	0
  2422                           
  2423                           	psect	stringtext11
  2424  30BE                     __pstringtext11:	
  2425  30BE                     STR_3:	
  2426  30BE  344F               	retlw	79	;'O'
  2427  30BF  3462               	retlw	98	;'b'
  2428  30C0  3474               	retlw	116	;'t'
  2429  30C1  3461               	retlw	97	;'a'
  2430  30C2  3469               	retlw	105	;'i'
  2431  30C3  346E               	retlw	110	;'n'
  2432  30C4  3465               	retlw	101	;'e'
  2433  30C5  3464               	retlw	100	;'d'
  2434  30C6  3420               	retlw	32	;' '
  2435  30C7  3461               	retlw	97	;'a'
  2436  30C8  3464               	retlw	100	;'d'
  2437  30C9  3463               	retlw	99	;'c'
  2438  30CA  344F               	retlw	79	;'O'
  2439  30CB  3466               	retlw	102	;'f'
  2440  30CC  3466               	retlw	102	;'f'
  2441  30CD  3473               	retlw	115	;'s'
  2442  30CE  3465               	retlw	101	;'e'
  2443  30CF  3474               	retlw	116	;'t'
  2444  30D0  3420               	retlw	32	;' '
  2445  30D1  343D               	retlw	61	;'='
  2446  30D2  3420               	retlw	32	;' '
  2447  30D3  3425               	retlw	37	;'%'
  2448  30D4  3469               	retlw	105	;'i'
  2449  30D5  3420               	retlw	32	;' '
  2450  30D6  3461               	retlw	97	;'a'
  2451  30D7  346E               	retlw	110	;'n'
  2452  30D8  3464               	retlw	100	;'d'
  2453  30D9  3420               	retlw	32	;' '
  2454  30DA  3461               	retlw	97	;'a'
  2455  30DB  3464               	retlw	100	;'d'
  2456  30DC  3463               	retlw	99	;'c'
  2457  30DD  3447               	retlw	71	;'G'
  2458  30DE  3461               	retlw	97	;'a'
  2459  30DF  3469               	retlw	105	;'i'
  2460  30E0  346E               	retlw	110	;'n'
  2461  30E1  3420               	retlw	32	;' '
  2462  30E2  343D               	retlw	61	;'='
  2463  30E3  3420               	retlw	32	;' '
  2464  30E4  3425               	retlw	37	;'%'
  2465  30E5  3469               	retlw	105	;'i'
  2466  30E6  340A               	retlw	10
  2467  30E7  340D               	retlw	13
  2468  30E8  3400               	retlw	0
  2469                           
  2470                           	psect	stringtext12
  2471  30E9                     __pstringtext12:	
  2472  30E9                     STR_8:	
  2473  30E9  3449               	retlw	73	;'I'
  2474  30EA  346E               	retlw	110	;'n'
  2475  30EB  3469               	retlw	105	;'i'
  2476  30EC  3474               	retlw	116	;'t'
  2477  30ED  3469               	retlw	105	;'i'
  2478  30EE  3461               	retlw	97	;'a'
  2479  30EF  346C               	retlw	108	;'l'
  2480  30F0  3420               	retlw	32	;' '
  2481  30F1  3470               	retlw	112	;'p'
  2482  30F2  3461               	retlw	97	;'a'
  2483  30F3  3472               	retlw	114	;'r'
  2484  30F4  3461               	retlw	97	;'a'
  2485  30F5  346D               	retlw	109	;'m'
  2486  30F6  3465               	retlw	101	;'e'
  2487  30F7  3474               	retlw	116	;'t'
  2488  30F8  3465               	retlw	101	;'e'
  2489  30F9  3472               	retlw	114	;'r'
  2490  30FA  3473               	retlw	115	;'s'
  2491  30FB  3420               	retlw	32	;' '
  2492  30FC  3466               	retlw	102	;'f'
  2493  30FD  346F               	retlw	111	;'o'
  2494  30FE  3472               	retlw	114	;'r'
  2495  30FF  3420               	retlw	32	;' '
  2496  3100  3442               	retlw	66	;'B'
  2497  3101  3451               	retlw	81	;'Q'
  2498  3102  3437               	retlw	55	;'7'
  2499  3103  3436               	retlw	54	;'6'
  2500  3104  3439               	retlw	57	;'9'
  2501  3105  3432               	retlw	50	;'2'
  2502  3106  3430               	retlw	48	;'0'
  2503  3107  3420               	retlw	32	;' '
  2504  3108  3441               	retlw	65	;'A'
  2505  3109  3446               	retlw	70	;'F'
  2506  310A  3445               	retlw	69	;'E'
  2507  310B  3420               	retlw	32	;' '
  2508  310C  3473               	retlw	115	;'s'
  2509  310D  3465               	retlw	101	;'e'
  2510  310E  3474               	retlw	116	;'t'
  2511  310F  3421               	retlw	33	;'!'
  2512  3110  340A               	retlw	10
  2513  3111  340D               	retlw	13
  2514  3112  3400               	retlw	0
  2515                           
  2516                           	psect	stringtext13
  2517  3113                     __pstringtext13:	
  2518  3113                     STR_6:	
  2519  3113  3443               	retlw	67	;'C'
  2520  3114  3475               	retlw	117	;'u'
  2521  3115  3472               	retlw	114	;'r'
  2522  3116  3472               	retlw	114	;'r'
  2523  3117  3465               	retlw	101	;'e'
  2524  3118  346E               	retlw	110	;'n'
  2525  3119  3474               	retlw	116	;'t'
  2526  311A  3420               	retlw	32	;' '
  2527  311B  3473               	retlw	115	;'s'
  2528  311C  3465               	retlw	101	;'e'
  2529  311D  346E               	retlw	110	;'n'
  2530  311E  3473               	retlw	115	;'s'
  2531  311F  3465               	retlw	101	;'e'
  2532  3120  3420               	retlw	32	;' '
  2533  3121  3472               	retlw	114	;'r'
  2534  3122  3465               	retlw	101	;'e'
  2535  3123  3473               	retlw	115	;'s'
  2536  3124  3469               	retlw	105	;'i'
  2537  3125  3473               	retlw	115	;'s'
  2538  3126  3474               	retlw	116	;'t'
  2539  3127  346F               	retlw	111	;'o'
  2540  3128  3472               	retlw	114	;'r'
  2541  3129  3420               	retlw	32	;' '
  2542  312A  3476               	retlw	118	;'v'
  2543  312B  3461               	retlw	97	;'a'
  2544  312C  346C               	retlw	108	;'l'
  2545  312D  3475               	retlw	117	;'u'
  2546  312E  3465               	retlw	101	;'e'
  2547  312F  343A               	retlw	58	;':'
  2548  3130  3420               	retlw	32	;' '
  2549  3131  3425               	retlw	37	;'%'
  2550  3132  342E               	retlw	46	;'.'
  2551  3133  3434               	retlw	52	;'4'
  2552  3134  3466               	retlw	102	;'f'
  2553  3135  3420               	retlw	32	;' '
  2554  3136  346F               	retlw	111	;'o'
  2555  3137  3468               	retlw	104	;'h'
  2556  3138  346D               	retlw	109	;'m'
  2557  3139  3473               	retlw	115	;'s'
  2558  313A  340A               	retlw	10
  2559  313B  340D               	retlw	13
  2560  313C  3400               	retlw	0
  2561                           
  2562                           	psect	stringtext14
  2563  313D                     __pstringtext14:	
  2564  313D                     STR_1:	
  2565  313D  3441               	retlw	65	;'A'
  2566  313E  3474               	retlw	116	;'t'
  2567  313F  3474               	retlw	116	;'t'
  2568  3140  3465               	retlw	101	;'e'
  2569  3141  346D               	retlw	109	;'m'
  2570  3142  3470               	retlw	112	;'p'
  2571  3143  3474               	retlw	116	;'t'
  2572  3144  3469               	retlw	105	;'i'
  2573  3145  346E               	retlw	110	;'n'
  2574  3146  3467               	retlw	103	;'g'
  2575  3147  3420               	retlw	32	;' '
  2576  3148  3474               	retlw	116	;'t'
  2577  3149  346F               	retlw	111	;'o'
  2578  314A  3420               	retlw	32	;' '
  2579  314B  3463               	retlw	99	;'c'
  2580  314C  346F               	retlw	111	;'o'
  2581  314D  346D               	retlw	109	;'m'
  2582  314E  346D               	retlw	109	;'m'
  2583  314F  3475               	retlw	117	;'u'
  2584  3150  346E               	retlw	110	;'n'
  2585  3151  3469               	retlw	105	;'i'
  2586  3152  3463               	retlw	99	;'c'
  2587  3153  3461               	retlw	97	;'a'
  2588  3154  3474               	retlw	116	;'t'
  2589  3155  3465               	retlw	101	;'e'
  2590  3156  3420               	retlw	32	;' '
  2591  3157  3477               	retlw	119	;'w'
  2592  3158  3469               	retlw	105	;'i'
  2593  3159  3474               	retlw	116	;'t'
  2594  315A  3468               	retlw	104	;'h'
  2595  315B  3420               	retlw	32	;' '
  2596  315C  3441               	retlw	65	;'A'
  2597  315D  3446               	retlw	70	;'F'
  2598  315E  3445               	retlw	69	;'E'
  2599  315F  342E               	retlw	46	;'.'
  2600  3160  342E               	retlw	46	;'.'
  2601  3161  342E               	retlw	46	;'.'
  2602  3162  340A               	retlw	10
  2603  3163  340D               	retlw	13
  2604  3164  3400               	retlw	0
  2605                           
  2606                           	psect	stringtext15
  2607  3838                     __pstringtext15:	
  2608  3838                     STR_10:	
  2609  3838  3449               	retlw	73	;'I'
  2610  3839  344E               	retlw	78	;'N'
  2611  383A  3446               	retlw	70	;'F'
  2612  383B  3400               	retlw	0
  2613                           
  2614                           	psect	stringtext16
  2615  383C                     __pstringtext16:	
  2616  383C                     STR_14:	
  2617  383C  344E               	retlw	78	;'N'
  2618  383D  3441               	retlw	65	;'A'
  2619  383E  344E               	retlw	78	;'N'
  2620  383F  3400               	retlw	0
  2621                           
  2622                           	psect	stringtext17
  2623  3840                     __pstringtext17:	
  2624  3840                     STR_123:	
  2625  3840  3468               	retlw	104	;'h'
  2626  3841  3468               	retlw	104	;'h'
  2627  3842  3458               	retlw	88	;'X'
  2628  3843  3400               	retlw	0
  2629                           
  2630                           	psect	stringtext18
  2631  3844                     __pstringtext18:	
  2632  3844                     STR_18:	
  2633  3844  3468               	retlw	104	;'h'
  2634  3845  3468               	retlw	104	;'h'
  2635  3846  3464               	retlw	100	;'d'
  2636  3847  3400               	retlw	0
  2637                           
  2638                           	psect	stringtext19
  2639  3848                     __pstringtext19:	
  2640  3848                     STR_11:	
  2641  3848  3469               	retlw	105	;'i'
  2642  3849  346E               	retlw	110	;'n'
  2643  384A  3466               	retlw	102	;'f'
  2644  384B  3400               	retlw	0
  2645                           
  2646                           	psect	stringtext20
  2647  384C                     __pstringtext20:	
  2648  384C                     STR_22:	
  2649  384C  3468               	retlw	104	;'h'
  2650  384D  3468               	retlw	104	;'h'
  2651  384E  3469               	retlw	105	;'i'
  2652  384F  3400               	retlw	0
  2653                           
  2654                           	psect	stringtext21
  2655  3850                     __pstringtext21:	
  2656  3850                     STR_15:	
  2657  3850  346E               	retlw	110	;'n'
  2658  3851  3461               	retlw	97	;'a'
  2659  3852  346E               	retlw	110	;'n'
  2660  3853  3400               	retlw	0
  2661                           
  2662                           	psect	stringtext22
  2663  3854                     __pstringtext22:	
  2664  3854                     STR_79:	
  2665  3854  3468               	retlw	104	;'h'
  2666  3855  3468               	retlw	104	;'h'
  2667  3856  346E               	retlw	110	;'n'
  2668  3857  3400               	retlw	0
  2669                           
  2670                           	psect	stringtext23
  2671  3858                     __pstringtext23:	
  2672  3858                     STR_59:	
  2673  3858  3468               	retlw	104	;'h'
  2674  3859  3468               	retlw	104	;'h'
  2675  385A  346F               	retlw	111	;'o'
  2676  385B  3400               	retlw	0
  2677                           
  2678                           	psect	stringtext24
  2679  385C                     __pstringtext24:	
  2680  385C                     STR_99:	
  2681  385C  3468               	retlw	104	;'h'
  2682  385D  3468               	retlw	104	;'h'
  2683  385E  3475               	retlw	117	;'u'
  2684  385F  3400               	retlw	0
  2685                           
  2686                           	psect	stringtext25
  2687  3860                     __pstringtext25:	
  2688  3860                     STR_119:	
  2689  3860  3468               	retlw	104	;'h'
  2690  3861  3468               	retlw	104	;'h'
  2691  3862  3478               	retlw	120	;'x'
  2692  3863  3400               	retlw	0
  2693                           
  2694                           	psect	stringtext26
  2695  3864                     __pstringtext26:	
  2696  3864                     STR_141:	
  2697  3864  346C               	retlw	108	;'l'
  2698  3865  3458               	retlw	88	;'X'
  2699  3866  3400               	retlw	0
  2700                           
  2701                           	psect	stringtext27
  2702  3867                     __pstringtext27:	
  2703  3867                     STR_150:	
  2704  3867  347A               	retlw	122	;'z'
  2705  3868  3458               	retlw	88	;'X'
  2706  3869  3400               	retlw	0
  2707                           
  2708                           	psect	stringtext28
  2709  386A                     __pstringtext28:	
  2710  386A                     STR_36:	
  2711  386A  346C               	retlw	108	;'l'
  2712  386B  3464               	retlw	100	;'d'
  2713  386C  3400               	retlw	0
  2714                           
  2715                           	psect	stringtext29
  2716  386D                     __pstringtext29:	
  2717  386D                     STR_45:	
  2718  386D  347A               	retlw	122	;'z'
  2719  386E  3464               	retlw	100	;'d'
  2720  386F  3400               	retlw	0
  2721                           
  2722                           	psect	stringtext30
  2723  3870                     __pstringtext30:	
  2724  3870                     STR_54:	
  2725  3870  346C               	retlw	108	;'l'
  2726  3871  3466               	retlw	102	;'f'
  2727  3872  3400               	retlw	0
  2728                           
  2729                           	psect	stringtext31
  2730  3873                     __pstringtext31:	
  2731  3873                     STR_40:	
  2732  3873  346C               	retlw	108	;'l'
  2733  3874  3469               	retlw	105	;'i'
  2734  3875  3400               	retlw	0
  2735                           
  2736                           	psect	stringtext32
  2737  3876                     __pstringtext32:	
  2738  3876                     STR_49:	
  2739  3876  347A               	retlw	122	;'z'
  2740  3877  3469               	retlw	105	;'i'
  2741  3878  3400               	retlw	0
  2742                           
  2743                           	psect	stringtext33
  2744  3879                     __pstringtext33:	
  2745  3879                     STR_89:	
  2746  3879  346C               	retlw	108	;'l'
  2747  387A  346E               	retlw	110	;'n'
  2748  387B  3400               	retlw	0
  2749                           
  2750                           	psect	stringtext34
  2751  387C                     __pstringtext34:	
  2752  387C                     STR_94:	
  2753  387C  347A               	retlw	122	;'z'
  2754  387D  346E               	retlw	110	;'n'
  2755  387E  3400               	retlw	0
  2756                           
  2757                           	psect	stringtext35
  2758  387F                     __pstringtext35:	
  2759  387F                     STR_69:	
  2760  387F  346C               	retlw	108	;'l'
  2761  3880  346F               	retlw	111	;'o'
  2762  3881  3400               	retlw	0
  2763                           
  2764                           	psect	stringtext36
  2765  3882                     __pstringtext36:	
  2766  3882                     STR_74:	
  2767  3882  347A               	retlw	122	;'z'
  2768  3883  346F               	retlw	111	;'o'
  2769  3884  3400               	retlw	0
  2770                           
  2771                           	psect	stringtext37
  2772  3885                     __pstringtext37:	
  2773  3885                     STR_109:	
  2774  3885  346C               	retlw	108	;'l'
  2775  3886  3475               	retlw	117	;'u'
  2776  3887  3400               	retlw	0
  2777                           
  2778                           	psect	stringtext38
  2779  3888                     __pstringtext38:	
  2780  3888                     STR_114:	
  2781  3888  347A               	retlw	122	;'z'
  2782  3889  3475               	retlw	117	;'u'
  2783  388A  3400               	retlw	0
  2784                           
  2785                           	psect	stringtext39
  2786  388B                     __pstringtext39:	
  2787  388B                     STR_137:	
  2788  388B  346C               	retlw	108	;'l'
  2789  388C  3478               	retlw	120	;'x'
  2790  388D  3400               	retlw	0
  2791                           
  2792                           	psect	stringtext40
  2793  388E                     __pstringtext40:	
  2794  388E                     STR_146:	
  2795  388E  347A               	retlw	122	;'z'
  2796  388F  3478               	retlw	120	;'x'
  2797  3890  3400               	retlw	0
  2798                           
  2799                           	psect	stringtext41
  2800  0000                     __pstringtext41:	
  2801  3062                     
  2802                           ; #config settings
  2803  0000                     
  2804                           	psect	cinit
  2805  0020                     start_initialization:	
  2806  0020                     __initialization:		;BIGRAM
  2807                           
  2808                           ; Initialize objects allocated to BANK3
  2809  0020  3000               	movlw	low __pidataBANK3
  2810  0021  0084               	movwf	4
  2811  0022  3088               	movlw	(high __pidataBANK3)| (0+128)
  2812  0023  0085               	movwf	5
  2813  0024  0023               	movlb	3	; select bank3
  2814  0025  0012               	moviw fsr0++
  2815  0026  00D4               	movwf	__pdataBANK3& (0+127)
  2816  0027  0012               	moviw fsr0++
  2817  0028  00D5               	movwf	(__pdataBANK3+1)& (0+127)
  2818  0029  0012               	moviw fsr0++
  2819  002A  00D6               	movwf	(__pdataBANK3+2)& (0+127)
  2820  002B  0012               	moviw fsr0++
  2821  002C  00D7               	movwf	(__pdataBANK3+3)& (0+127)
  2822  002D  0012               	moviw fsr0++
  2823  002E  00D8               	movwf	(__pdataBANK3+4)& (0+127)
  2824  002F  0012               	moviw fsr0++
  2825  0030  00D9               	movwf	(__pdataBANK3+5)& (0+127)
  2826  0031  0012               	moviw fsr0++
  2827  0032  00DA               	movwf	(__pdataBANK3+6)& (0+127)
  2828                           
  2829                           ; Clear objects allocated to BIGRAM
  2830  0033  3071               	movlw	low (0+10097)
  2831  0034  0084               	movwf	4
  2832  0035  3027               	movlw	high (0+10097)
  2833  0036  0085               	movwf	5
  2834  0037  307F               	movlw	127
  2835  0038  00FE               	movwf	btemp
  2836  0039  3000               	movlw	0
  2837  003A  00FF               	movwf	btemp+1
  2838  003B  3190  2001  3180   	fcall	clear_ram0
  2839                           
  2840                           ; Clear objects allocated to COMMON
  2841  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  2842                           
  2843                           ; Clear objects allocated to BANK3
  2844  003F  30A0               	movlw	low __pbssBANK3
  2845  0040  0084               	movwf	4
  2846  0041  3001               	movlw	high __pbssBANK3
  2847  0042  0085               	movwf	5
  2848  0043  3034               	movlw	52
  2849  0044  00FE               	movwf	btemp
  2850  0045  3000               	movlw	0
  2851  0046  00FF               	movwf	btemp+1
  2852  0047  3190  2001  3180   	fcall	clear_ram0
  2853                           
  2854                           ; Clear objects allocated to BANK4
  2855  004A  3020               	movlw	low __pbssBANK4
  2856  004B  0084               	movwf	4
  2857  004C  3002               	movlw	high __pbssBANK4
  2858  004D  0085               	movwf	5
  2859  004E  3050               	movlw	80
  2860  004F  00FE               	movwf	btemp
  2861  0050  3000               	movlw	0
  2862  0051  00FF               	movwf	btemp+1
  2863  0052  3190  2001         	fcall	clear_ram0
  2864  0054                     end_of_initialization:	
  2865                           ;End of C runtime variable initialization code
  2866                           
  2867  0054                     __end_of__initialization:	
  2868  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2869  0055  0020               	movlb	0
  2870  0056  31A8  28EE         	ljmp	_main	;jump to C main() function
  2871                           
  2872                           	psect	bssCOMMON
  2873  007C                     __pbssCOMMON:	
  2874  007C                     _toggleColor:	
  2875  007C                     	ds	1
  2876                           
  2877                           	psect	bssBANK3
  2878  01A0                     __pbssBANK3:	
  2879  01A0                     _cellVoltages:	
  2880  01A0                     	ds	10
  2881  01AA                     floorf@F524:	
  2882  01AA                     	ds	4
  2883  01AE                     ___fpclassifyf@F463:	
  2884  01AE                     	ds	4
  2885  01B2                     BQ76920@shuntResistorValue_mOhm:	
  2886  01B2                     	ds	4
  2887  01B6                     _shuntResistorValue_mOhm:	
  2888  01B6                     	ds	4
  2889  01BA                     _errno:	
  2890  01BA                     	ds	2
  2891  01BC                     _nout:	
  2892  01BC                     	ds	2
  2893  01BE                     _width:	
  2894  01BE                     	ds	2
  2895  01C0                     _prec:	
  2896  01C0                     	ds	2
  2897  01C2                     _flags:	
  2898  01C2                     	ds	2
  2899  01C4                     _maxCellTempDischarge:	
  2900  01C4                     	ds	2
  2901  01C6                     _maxCellTempCharge:	
  2902  01C6                     	ds	2
  2903  01C8                     _minCellTempDischarge:	
  2904  01C8                     	ds	2
  2905  01CA                     _minCellTempCharge:	
  2906  01CA                     	ds	2
  2907  01CC                     _adcOffset:	
  2908  01CC                     	ds	2
  2909  01CE                     _adcGain:	
  2910  01CE                     	ds	2
  2911  01D0                     _protect1:	
  2912  01D0                     	ds	1
  2913  01D1                     myIsr@count:	
  2914  01D1                     	ds	1
  2915  01D2                     _tmr1_flag:	
  2916  01D2                     	ds	1
  2917  01D3                     _currState:	
  2918  01D3                     	ds	1
  2919                           
  2920                           	psect	dataBANK3
  2921  01D4                     __pdataBANK3:	
  2922  01D4                     stoa@F1174:	
  2923  01D4                     	ds	7
  2924                           
  2925                           	psect	bssBANK4
  2926  0220                     __pbssBANK4:	
  2927  0220                     _dbuf:	
  2928  0220                     	ds	80
  2929                           
  2930                           	psect	clrtext
  2931  1001                     clear_ram0:	
  2932                           ;	Called with FSR0 containing the base address, and
  2933                           ;	btemp/btemp+1 has the size to clear
  2934                           
  2935  1001  0064               	clrwdt	;clear the watchdog before getting into this loop
  2936  1002                     clrloop0:	
  2937  1002  0180               	clrf	0	;clear RAM location pointed to by FSR
  2938  1003  3101               	addfsr 0,1
  2939  1004  3001               	movlw	1
  2940  1005  02FE               	subwf	126,f
  2941  1006  3000               	movlw	0
  2942  1007  3BFF               	subwfb	127,f
  2943  1008  087F               	movf	127,w
  2944  1009  047E               	iorwf	126,w
  2945  100A  1903               	btfsc	3,2
  2946  100B  3400               	retlw	0	;all done for this memory range, return
  2947  100C  2802               	goto	clrloop0	;have we reached the end yet?
  2948                           
  2949                           	psect	cstackBANK3
  2950  01DB                     __pcstackBANK3:	
  2951  01DB                     ??_main:	
  2952                           
  2953                           ; 1 bytes @ 0x0
  2954  01DB                     	ds	1
  2955                           
  2956                           	psect	cstackBANK2
  2957  0120                     __pcstackBANK2:	
  2958  0120                     ??_vfpfcnvrt:	
  2959                           
  2960                           ; 1 bytes @ 0x0
  2961  0120                     	ds	12
  2962  012C                     vfpfcnvrt@cp:	
  2963                           
  2964                           ; 1 bytes @ 0xC
  2965  012C                     	ds	1
  2966  012D                     vfpfcnvrt@done:	
  2967                           
  2968                           ; 2 bytes @ 0xD
  2969  012D                     	ds	2
  2970  012F                     _vfpfcnvrt$1016:	
  2971                           
  2972                           ; 2 bytes @ 0xF
  2973  012F                     	ds	2
  2974  0131                     _vfpfcnvrt$1017:	
  2975                           
  2976                           ; 2 bytes @ 0x11
  2977  0131                     	ds	2
  2978  0133                     _vfpfcnvrt$1043:	
  2979                           
  2980                           ; 2 bytes @ 0x13
  2981  0133                     	ds	2
  2982  0135                     vfpfcnvrt@ct:	
  2983                           
  2984                           ; 3 bytes @ 0x15
  2985  0135                     	ds	3
  2986  0138                     vfpfcnvrt@f:	
  2987                           
  2988                           ; 4 bytes @ 0x18
  2989  0138                     	ds	4
  2990  013C                     vfpfcnvrt@ll:	
  2991                           
  2992                           ; 8 bytes @ 0x1C
  2993  013C                     	ds	8
  2994  0144                     vfpfcnvrt@vp:	
  2995                           
  2996                           ; 1 bytes @ 0x24
  2997  0144                     	ds	1
  2998  0145                     vfpfcnvrt@c:	
  2999                           
  3000                           ; 1 bytes @ 0x25
  3001  0145                     	ds	1
  3002  0146                     vfpfcnvrt@llu:	
  3003                           
  3004                           ; 8 bytes @ 0x26
  3005  0146                     	ds	8
  3006  014E                     ?_vsnprintf:	
  3007  014E                     vsnprintf@s:	
  3008                           ; 2 bytes @ 0x2E
  3009                           
  3010                           
  3011                           ; 2 bytes @ 0x2E
  3012  014E                     	ds	2
  3013  0150                     vsnprintf@n:	
  3014                           
  3015                           ; 2 bytes @ 0x30
  3016  0150                     	ds	2
  3017  0152                     vsnprintf@fmt:	
  3018                           
  3019                           ; 2 bytes @ 0x32
  3020  0152                     	ds	2
  3021  0154                     vsnprintf@ap:	
  3022                           
  3023                           ; 1 bytes @ 0x34
  3024  0154                     	ds	1
  3025  0155                     _vsnprintf$1645:	
  3026                           
  3027                           ; 2 bytes @ 0x35
  3028  0155                     	ds	2
  3029  0157                     vsnprintf@cnt:	
  3030                           
  3031                           ; 2 bytes @ 0x37
  3032  0157                     	ds	2
  3033  0159                     vsnprintf@f:	
  3034                           
  3035                           ; 6 bytes @ 0x39
  3036  0159                     	ds	6
  3037  015F                     ?_snprintf:	
  3038  015F                     snprintf@s:	
  3039                           ; 2 bytes @ 0x3F
  3040                           
  3041                           
  3042                           ; 2 bytes @ 0x3F
  3043  015F                     	ds	2
  3044  0161                     snprintf@n:	
  3045                           
  3046                           ; 2 bytes @ 0x41
  3047  0161                     	ds	2
  3048  0163                     snprintf@fmt:	
  3049                           
  3050                           ; 2 bytes @ 0x43
  3051  0163                     	ds	6
  3052  0169                     ??_snprintf:	
  3053                           
  3054                           ; 1 bytes @ 0x49
  3055  0169                     	ds	3
  3056  016C                     snprintf@ap:	
  3057                           
  3058                           ; 1 bytes @ 0x4C
  3059  016C                     	ds	1
  3060  016D                     ??_statemachine:	
  3061                           
  3062                           ; 1 bytes @ 0x4D
  3063  016D                     	ds	2
  3064  016F                     statemachine@success:	
  3065                           
  3066                           ; 1 bytes @ 0x4F
  3067  016F                     	ds	1
  3068                           
  3069                           	psect	cstackBANK1
  3070  00A0                     __pcstackBANK1:	
  3071  00A0                     ?_efgtoa:	
  3072  00A0                     efgtoa@fp:	
  3073                           ; 2 bytes @ 0x0
  3074                           
  3075  00A0                     setShortCircuitProtection@scaler:	
  3076                           ; 2 bytes @ 0x0
  3077                           
  3078                           
  3079                           ; 4 bytes @ 0x0
  3080  00A0                     	ds	2
  3081  00A2                     efgtoa@f:	
  3082                           
  3083                           ; 4 bytes @ 0x2
  3084  00A2                     	ds	2
  3085  00A4                     _setShortCircuitProtection$1842:	
  3086                           
  3087                           ; 4 bytes @ 0x4
  3088  00A4                     	ds	2
  3089  00A6                     efgtoa@c:	
  3090                           
  3091                           ; 1 bytes @ 0x6
  3092  00A6                     	ds	1
  3093  00A7                     ??_efgtoa:	
  3094                           
  3095                           ; 1 bytes @ 0x7
  3096  00A7                     	ds	1
  3097  00A8                     setShortCircuitProtection@i:	
  3098                           
  3099                           ; 2 bytes @ 0x8
  3100  00A8                     	ds	2
  3101  00AA                     setShortCircuitProtection@i_790:	
  3102                           
  3103                           ; 2 bytes @ 0xA
  3104  00AA                     	ds	1
  3105  00AB                     efgtoa@ou:	
  3106                           
  3107                           ; 4 bytes @ 0xB
  3108  00AB                     	ds	4
  3109  00AF                     _efgtoa$954:	
  3110                           
  3111                           ; 2 bytes @ 0xF
  3112  00AF                     	ds	2
  3113  00B1                     _efgtoa$955:	
  3114                           
  3115                           ; 2 bytes @ 0x11
  3116  00B1                     	ds	2
  3117  00B3                     _efgtoa$959:	
  3118                           
  3119                           ; 2 bytes @ 0x13
  3120  00B3                     	ds	2
  3121  00B5                     _efgtoa$963:	
  3122                           
  3123                           ; 2 bytes @ 0x15
  3124  00B5                     	ds	2
  3125  00B7                     _efgtoa$964:	
  3126                           
  3127                           ; 2 bytes @ 0x17
  3128  00B7                     	ds	2
  3129  00B9                     _efgtoa$965:	
  3130                           
  3131                           ; 2 bytes @ 0x19
  3132  00B9                     	ds	2
  3133  00BB                     efgtoa@t:	
  3134                           
  3135                           ; 2 bytes @ 0x1B
  3136  00BB                     	ds	2
  3137  00BD                     efgtoa@pp:	
  3138                           
  3139                           ; 2 bytes @ 0x1D
  3140  00BD                     	ds	2
  3141  00BF                     efgtoa@m:	
  3142                           
  3143                           ; 2 bytes @ 0x1F
  3144  00BF                     	ds	2
  3145  00C1                     efgtoa@ne:	
  3146                           
  3147                           ; 2 bytes @ 0x21
  3148  00C1                     	ds	2
  3149  00C3                     efgtoa@d:	
  3150                           
  3151                           ; 2 bytes @ 0x23
  3152  00C3                     	ds	2
  3153  00C5                     efgtoa@sign:	
  3154                           
  3155                           ; 2 bytes @ 0x25
  3156  00C5                     	ds	2
  3157  00C7                     efgtoa@p:	
  3158                           
  3159                           ; 2 bytes @ 0x27
  3160  00C7                     	ds	2
  3161  00C9                     efgtoa@nmode:	
  3162                           
  3163                           ; 1 bytes @ 0x29
  3164  00C9                     	ds	1
  3165  00CA                     efgtoa@w:	
  3166                           
  3167                           ; 2 bytes @ 0x2A
  3168  00CA                     	ds	2
  3169  00CC                     efgtoa@mode:	
  3170                           
  3171                           ; 1 bytes @ 0x2C
  3172  00CC                     	ds	1
  3173  00CD                     efgtoa@h:	
  3174                           
  3175                           ; 4 bytes @ 0x2D
  3176  00CD                     	ds	4
  3177  00D1                     efgtoa@l:	
  3178                           
  3179                           ; 4 bytes @ 0x31
  3180  00D1                     	ds	4
  3181  00D5                     efgtoa@i:	
  3182                           
  3183                           ; 2 bytes @ 0x35
  3184  00D5                     	ds	2
  3185  00D7                     efgtoa@g:	
  3186                           
  3187                           ; 4 bytes @ 0x37
  3188  00D7                     	ds	4
  3189  00DB                     efgtoa@e:	
  3190                           
  3191                           ; 2 bytes @ 0x3B
  3192  00DB                     	ds	2
  3193  00DD                     efgtoa@n:	
  3194                           
  3195                           ; 2 bytes @ 0x3D
  3196  00DD                     	ds	2
  3197  00DF                     efgtoa@u:	
  3198                           
  3199                           ; 4 bytes @ 0x3F
  3200  00DF                     	ds	4
  3201  00E3                     ?_vfpfcnvrt:	
  3202  00E3                     vfpfcnvrt@fp:	
  3203                           ; 2 bytes @ 0x43
  3204                           
  3205                           
  3206                           ; 2 bytes @ 0x43
  3207  00E3                     	ds	2
  3208  00E5                     vfpfcnvrt@fmt:	
  3209                           
  3210                           ; 1 bytes @ 0x45
  3211  00E5                     	ds	1
  3212  00E6                     vfpfcnvrt@ap:	
  3213                           
  3214                           ; 1 bytes @ 0x46
  3215  00E6                     	ds	1
  3216  00E7                     ?_vfprintf:	
  3217  00E7                     vfprintf@fp:	
  3218                           ; 2 bytes @ 0x47
  3219                           
  3220                           
  3221                           ; 2 bytes @ 0x47
  3222  00E7                     	ds	2
  3223  00E9                     vfprintf@fmt:	
  3224                           
  3225                           ; 2 bytes @ 0x49
  3226  00E9                     	ds	2
  3227  00EB                     vfprintf@ap:	
  3228                           
  3229                           ; 1 bytes @ 0x4B
  3230  00EB                     	ds	1
  3231  00EC                     vfprintf@cfmt:	
  3232                           
  3233                           ; 2 bytes @ 0x4C
  3234  00EC                     	ds	2
  3235  00EE                     ??_vsnprintf:	
  3236                           
  3237                           ; 1 bytes @ 0x4E
  3238  00EE                     	ds	2
  3239                           
  3240                           	psect	cstackCOMMON
  3241  0070                     __pcstackCOMMON:	
  3242  0070                     ?_initClock:	
  3243  0070                     ?_init_GPIO:	
  3244                           ; 1 bytes @ 0x0
  3245                           
  3246  0070                     ?_init_I2C:	
  3247                           ; 1 bytes @ 0x0
  3248                           
  3249  0070                     ?_init_TMR1:	
  3250                           ; 1 bytes @ 0x0
  3251                           
  3252  0070                     ?_init_RGB:	
  3253                           ; 1 bytes @ 0x0
  3254                           
  3255  0070                     ?_statemachine:	
  3256                           ; 1 bytes @ 0x0
  3257                           
  3258  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3259                           ; 1 bytes @ 0x0
  3260                           
  3261  0070                     ?_init_AFE:	
  3262                           ; 1 bytes @ 0x0
  3263                           
  3264  0070                     ?_internal_16:	
  3265                           ; 1 bytes @ 0x0
  3266                           
  3267  0070                     ?_putch:	
  3268                           ; 1 bytes @ 0x0
  3269                           
  3270  0070                     ?_myIsr:	
  3271                           ; 1 bytes @ 0x0
  3272                           
  3273  0070                     ??_myIsr:	
  3274                           ; 1 bytes @ 0x0
  3275                           
  3276  0070                     ?_main:	
  3277                           ; 1 bytes @ 0x0
  3278                           
  3279  0070                     ?_EUSART_Write:	
  3280                           ; 1 bytes @ 0x0
  3281                           
  3282  0070                     ?_send_I2C_startBit:	
  3283                           ; 1 bytes @ 0x0
  3284                           
  3285  0070                     ?_send_I2C_stopBit:	
  3286                           ; 1 bytes @ 0x0
  3287                           
  3288  0070                     ?_send_I2C_NACK:	
  3289                           ; 1 bytes @ 0x0
  3290                           
  3291  0070                     putch@c:	
  3292                           ; 1 bytes @ 0x0
  3293                           
  3294                           
  3295                           ; 1 bytes @ 0x0
  3296  0070                     	ds	1
  3297  0071                     ?___fleq:	
  3298  0071                     ??_initClock:	
  3299                           ; 1 bit 
  3300                           
  3301  0071                     ??_init_GPIO:	
  3302                           ; 1 bytes @ 0x1
  3303                           
  3304  0071                     ??_init_I2C:	
  3305                           ; 1 bytes @ 0x1
  3306                           
  3307  0071                     ??_init_TMR1:	
  3308                           ; 1 bytes @ 0x1
  3309                           
  3310  0071                     ??_init_RGB:	
  3311                           ; 1 bytes @ 0x1
  3312                           
  3313  0071                     ?_RGB_color:	
  3314                           ; 1 bytes @ 0x1
  3315                           
  3316  0071                     ??_internal_16:	
  3317                           ; 1 bytes @ 0x1
  3318                           
  3319  0071                     ?_setShuntResistorValue:	
  3320                           ; 1 bytes @ 0x1
  3321                           
  3322  0071                     ?_strcpy:	
  3323                           ; 1 bytes @ 0x1
  3324                           
  3325  0071                     ??_putch:	
  3326                           ; 1 bytes @ 0x1
  3327                           
  3328  0071                     ??_EUSART_Write:	
  3329                           ; 1 bytes @ 0x1
  3330                           
  3331  0071                     ?_send_I2C_data:	
  3332                           ; 1 bytes @ 0x1
  3333                           
  3334  0071                     ?_send_I2C_controlByte:	
  3335                           ; 1 bytes @ 0x1
  3336                           
  3337  0071                     ??_send_I2C_startBit:	
  3338                           ; 1 bytes @ 0x1
  3339                           
  3340  0071                     ??_send_I2C_stopBit:	
  3341                           ; 1 bytes @ 0x1
  3342                           
  3343  0071                     ??_send_I2C_NACK:	
  3344                           ; 1 bytes @ 0x1
  3345                           
  3346  0071                     ??___aodiv:	
  3347                           ; 1 bytes @ 0x1
  3348                           
  3349  0071                     ??___aomod:	
  3350                           ; 1 bytes @ 0x1
  3351                           
  3352  0071                     ??___lodiv:	
  3353                           ; 1 bytes @ 0x1
  3354                           
  3355  0071                     ??___lomod:	
  3356                           ; 1 bytes @ 0x1
  3357                           
  3358  0071                     ?_fputc:	
  3359                           ; 1 bytes @ 0x1
  3360                           
  3361  0071                     ?_strlen:	
  3362                           ; 2 bytes @ 0x1
  3363                           
  3364  0071                     ?___fpclassifyf:	
  3365                           ; 2 bytes @ 0x1
  3366                           
  3367  0071                     ?_isupper:	
  3368                           ; 2 bytes @ 0x1
  3369                           
  3370  0071                     ?_isalpha:	
  3371                           ; 2 bytes @ 0x1
  3372                           
  3373  0071                     ?_isdigit:	
  3374                           ; 2 bytes @ 0x1
  3375                           
  3376  0071                     ?_strncmp:	
  3377                           ; 2 bytes @ 0x1
  3378                           
  3379  0071                     ?__Umul8_16:	
  3380                           ; 2 bytes @ 0x1
  3381                           
  3382  0071                     ?_isspace:	
  3383                           ; 2 bytes @ 0x1
  3384                           
  3385  0071                     ?_islower:	
  3386                           ; 2 bytes @ 0x1
  3387                           
  3388  0071                     ?_read_I2C_data:	
  3389                           ; 2 bytes @ 0x1
  3390                           
  3391  0071                     ?___wmul:	
  3392                           ; 2 bytes @ 0x1
  3393                           
  3394  0071                     ?___awdiv:	
  3395                           ; 2 bytes @ 0x1
  3396                           
  3397  0071                     ?___awmod:	
  3398                           ; 2 bytes @ 0x1
  3399                           
  3400  0071                     ?_AFE_getSetCurrentSenseRes:	
  3401                           ; 2 bytes @ 0x1
  3402                           
  3403  0071                     ?___aldiv:	
  3404                           ; 4 bytes @ 0x1
  3405                           
  3406  0071                     ?___flneg:	
  3407                           ; 4 bytes @ 0x1
  3408                           
  3409  0071                     ?___fladd:	
  3410                           ; 4 bytes @ 0x1
  3411                           
  3412  0071                     ?___xxtofl:	
  3413                           ; 4 bytes @ 0x1
  3414                           
  3415  0071                     EUSART_Write@txData:	
  3416                           ; 4 bytes @ 0x1
  3417                           
  3418  0071                     __Umul8_16@multiplicand:	
  3419                           ; 1 bytes @ 0x1
  3420                           
  3421  0071                     send_I2C_data@databyte:	
  3422                           ; 1 bytes @ 0x1
  3423                           
  3424  0071                     send_I2C_controlByte@BlockAddress:	
  3425                           ; 2 bytes @ 0x1
  3426                           
  3427  0071                     RGB_color@color:	
  3428                           ; 2 bytes @ 0x1
  3429                           
  3430  0071                     ___wmul@multiplier:	
  3431                           ; 2 bytes @ 0x1
  3432                           
  3433  0071                     ___awdiv@divisor:	
  3434                           ; 2 bytes @ 0x1
  3435                           
  3436  0071                     ___awmod@divisor:	
  3437                           ; 2 bytes @ 0x1
  3438                           
  3439  0071                     isalpha@c:	
  3440                           ; 2 bytes @ 0x1
  3441                           
  3442  0071                     isdigit@c:	
  3443                           ; 2 bytes @ 0x1
  3444                           
  3445  0071                     isspace@c:	
  3446                           ; 2 bytes @ 0x1
  3447                           
  3448  0071                     isupper@c:	
  3449                           ; 2 bytes @ 0x1
  3450                           
  3451  0071                     fputc@c:	
  3452                           ; 2 bytes @ 0x1
  3453                           
  3454  0071                     strcpy@src:	
  3455                           ; 2 bytes @ 0x1
  3456                           
  3457  0071                     strlen@s:	
  3458                           ; 2 bytes @ 0x1
  3459                           
  3460  0071                     strncmp@_l:	
  3461                           ; 2 bytes @ 0x1
  3462                           
  3463  0071                     islower@c:	
  3464                           ; 2 bytes @ 0x1
  3465                           
  3466  0071                     setShuntResistorValue@res_mOhm:	
  3467                           ; 2 bytes @ 0x1
  3468                           
  3469  0071                     ___aldiv@divisor:	
  3470                           ; 4 bytes @ 0x1
  3471                           
  3472  0071                     ___fleq@ff1:	
  3473                           ; 4 bytes @ 0x1
  3474                           
  3475  0071                     ___flneg@f1:	
  3476                           ; 4 bytes @ 0x1
  3477                           
  3478  0071                     ___fladd@b:	
  3479                           ; 4 bytes @ 0x1
  3480                           
  3481  0071                     ___xxtofl@val:	
  3482                           ; 4 bytes @ 0x1
  3483                           
  3484  0071                     ___fpclassifyf@x:	
  3485                           ; 4 bytes @ 0x1
  3486                           
  3487                           
  3488                           ; 4 bytes @ 0x1
  3489  0071                     	ds	1
  3490  0072                     ?_EUSART_Write_Text:	
  3491  0072                     ___aodiv@counter:	
  3492                           ; 1 bytes @ 0x2
  3493                           
  3494  0072                     ___aomod@counter:	
  3495                           ; 1 bytes @ 0x2
  3496                           
  3497  0072                     ___lomod@counter:	
  3498                           ; 1 bytes @ 0x2
  3499                           
  3500  0072                     EUSART_Write_Text@text:	
  3501                           ; 1 bytes @ 0x2
  3502                           
  3503  0072                     ___lodiv@quotient:	
  3504                           ; 2 bytes @ 0x2
  3505                           
  3506                           
  3507                           ; 8 bytes @ 0x2
  3508  0072                     	ds	1
  3509  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3510  0073                     ??_RGB_color:	
  3511                           ; 1 bytes @ 0x3
  3512                           
  3513  0073                     ??_strlen:	
  3514                           ; 1 bytes @ 0x3
  3515                           
  3516  0073                     ??_isupper:	
  3517                           ; 1 bytes @ 0x3
  3518                           
  3519  0073                     ??_strcpy:	
  3520                           ; 1 bytes @ 0x3
  3521                           
  3522  0073                     ??_isalpha:	
  3523                           ; 1 bytes @ 0x3
  3524                           
  3525  0073                     ??_isdigit:	
  3526                           ; 1 bytes @ 0x3
  3527                           
  3528  0073                     ??__Umul8_16:	
  3529                           ; 1 bytes @ 0x3
  3530                           
  3531  0073                     ??_isspace:	
  3532                           ; 1 bytes @ 0x3
  3533                           
  3534  0073                     ??_islower:	
  3535                           ; 1 bytes @ 0x3
  3536                           
  3537  0073                     ??_send_I2C_data:	
  3538                           ; 1 bytes @ 0x3
  3539                           
  3540  0073                     ??_read_I2C_data:	
  3541                           ; 1 bytes @ 0x3
  3542                           
  3543  0073                     ___aodiv@sign:	
  3544                           ; 1 bytes @ 0x3
  3545                           
  3546  0073                     ___aomod@sign:	
  3547                           ; 1 bytes @ 0x3
  3548                           
  3549  0073                     send_I2C_controlByte@RW_bit:	
  3550                           ; 1 bytes @ 0x3
  3551                           
  3552  0073                     ___wmul@multiplicand:	
  3553                           ; 2 bytes @ 0x3
  3554                           
  3555  0073                     ___awdiv@dividend:	
  3556                           ; 2 bytes @ 0x3
  3557                           
  3558  0073                     ___awmod@dividend:	
  3559                           ; 2 bytes @ 0x3
  3560                           
  3561  0073                     fputc@fp:	
  3562                           ; 2 bytes @ 0x3
  3563                           
  3564  0073                     strlen@a:	
  3565                           ; 2 bytes @ 0x3
  3566                           
  3567  0073                     strncmp@_r:	
  3568                           ; 2 bytes @ 0x3
  3569                           
  3570                           
  3571                           ; 2 bytes @ 0x3
  3572  0073                     	ds	1
  3573  0074                     ??_EUSART_Write_Text:	
  3574  0074                     ?_abs:	
  3575                           ; 1 bytes @ 0x4
  3576                           
  3577  0074                     abs@a:	
  3578                           ; 2 bytes @ 0x4
  3579                           
  3580  0074                     ___aodiv@quotient:	
  3581                           ; 2 bytes @ 0x4
  3582                           
  3583                           
  3584                           ; 8 bytes @ 0x4
  3585  0074                     	ds	1
  3586  0075                     ??_AFE_getSetCurrentSenseRes:	
  3587  0075                     ??_setShuntResistorValue:	
  3588                           ; 1 bytes @ 0x5
  3589                           
  3590  0075                     ??_fputc:	
  3591                           ; 1 bytes @ 0x5
  3592                           
  3593  0075                     ??___fpclassifyf:	
  3594                           ; 1 bytes @ 0x5
  3595                           
  3596  0075                     ??_send_I2C_controlByte:	
  3597                           ; 1 bytes @ 0x5
  3598                           
  3599  0075                     ?_I2C_writeRegister:	
  3600                           ; 1 bytes @ 0x5
  3601                           
  3602  0075                     ??___wmul:	
  3603                           ; 1 bytes @ 0x5
  3604                           
  3605  0075                     ??___awdiv:	
  3606                           ; 1 bytes @ 0x5
  3607                           
  3608  0075                     ??___awmod:	
  3609                           ; 1 bytes @ 0x5
  3610                           
  3611  0075                     ??___flneg:	
  3612                           ; 1 bytes @ 0x5
  3613                           
  3614  0075                     ??___xxtofl:	
  3615                           ; 1 bytes @ 0x5
  3616                           
  3617  0075                     ?_readRegister:	
  3618                           ; 1 bytes @ 0x5
  3619                           
  3620  0075                     _isspace$1510:	
  3621                           ; 2 bytes @ 0x5
  3622                           
  3623  0075                     EUSART_Write_Text@i:	
  3624                           ; 1 bytes @ 0x5
  3625                           
  3626  0075                     I2C_writeRegister@slaveAddress:	
  3627                           ; 2 bytes @ 0x5
  3628                           
  3629  0075                     readRegister@slaveAddress:	
  3630                           ; 2 bytes @ 0x5
  3631                           
  3632  0075                     ___wmul@product:	
  3633                           ; 2 bytes @ 0x5
  3634                           
  3635  0075                     strcpy@s:	
  3636                           ; 2 bytes @ 0x5
  3637                           
  3638  0075                     strncmp@n:	
  3639                           ; 2 bytes @ 0x5
  3640                           
  3641  0075                     __Umul8_16@product:	
  3642                           ; 2 bytes @ 0x5
  3643                           
  3644  0075                     ___aldiv@dividend:	
  3645                           ; 2 bytes @ 0x5
  3646                           
  3647  0075                     ___fleq@ff2:	
  3648                           ; 4 bytes @ 0x5
  3649                           
  3650  0075                     ___fladd@a:	
  3651                           ; 4 bytes @ 0x5
  3652                           
  3653                           
  3654                           ; 4 bytes @ 0x5
  3655  0075                     	ds	1
  3656  0076                     ??_abs:	
  3657  0076                     ___awdiv@counter:	
  3658                           ; 1 bytes @ 0x6
  3659                           
  3660  0076                     ___awmod@counter:	
  3661                           ; 1 bytes @ 0x6
  3662                           
  3663                           
  3664                           ; 1 bytes @ 0x6
  3665  0076                     	ds	1
  3666  0077                     ??_setTemperatureLimitsint:	
  3667  0077                     ??_strncmp:	
  3668                           ; 1 bytes @ 0x7
  3669                           
  3670  0077                     ?_tolower:	
  3671                           ; 1 bytes @ 0x7
  3672                           
  3673  0077                     ?_toupper:	
  3674                           ; 2 bytes @ 0x7
  3675                           
  3676  0077                     ?_atoi:	
  3677                           ; 2 bytes @ 0x7
  3678                           
  3679  0077                     ___awdiv@sign:	
  3680                           ; 2 bytes @ 0x7
  3681                           
  3682  0077                     ___awmod@sign:	
  3683                           ; 1 bytes @ 0x7
  3684                           
  3685  0077                     strcpy@d:	
  3686                           ; 1 bytes @ 0x7
  3687                           
  3688  0077                     I2C_writeRegister@regAddress:	
  3689                           ; 1 bytes @ 0x7
  3690                           
  3691  0077                     readRegister@regAddress:	
  3692                           ; 2 bytes @ 0x7
  3693                           
  3694  0077                     atoi@s:	
  3695                           ; 2 bytes @ 0x7
  3696                           
  3697  0077                     tolower@c:	
  3698                           ; 2 bytes @ 0x7
  3699                           
  3700  0077                     toupper@c:	
  3701                           ; 2 bytes @ 0x7
  3702                           
  3703  0077                     __Umul8_16@word_mpld:	
  3704                           ; 2 bytes @ 0x7
  3705                           
  3706                           
  3707                           ; 2 bytes @ 0x7
  3708  0077                     	ds	1
  3709  0078                     strcpy@dest:	
  3710  0078                     ___awdiv@quotient:	
  3711                           ; 1 bytes @ 0x8
  3712                           
  3713  0078                     strncmp@l:	
  3714                           ; 2 bytes @ 0x8
  3715                           
  3716                           
  3717                           ; 2 bytes @ 0x8
  3718  0078                     	ds	1
  3719  0079                     ??_readRegister:	
  3720  0079                     ??___aldiv:	
  3721                           ; 1 bytes @ 0x9
  3722                           
  3723  0079                     __Umul8_16@multiplier:	
  3724                           ; 1 bytes @ 0x9
  3725                           
  3726  0079                     I2C_writeRegister@data:	
  3727                           ; 1 bytes @ 0x9
  3728                           
  3729  0079                     readRegister@recievedData:	
  3730                           ; 2 bytes @ 0x9
  3731                           
  3732  0079                     _tolower$1593:	
  3733                           ; 2 bytes @ 0x9
  3734                           
  3735  0079                     _toupper$1608:	
  3736                           ; 2 bytes @ 0x9
  3737                           
  3738                           
  3739                           ; 2 bytes @ 0x9
  3740  0079                     	ds	1
  3741  007A                     ??_init_AFE:	
  3742  007A                     ??_stoa:	
  3743                           ; 1 bytes @ 0xA
  3744                           
  3745  007A                     ??___flsub:	
  3746                           ; 1 bytes @ 0xA
  3747                           
  3748  007A                     ?_fputs:	
  3749                           ; 1 bytes @ 0xA
  3750                           
  3751  007A                     ___fltol@sign1:	
  3752                           ; 2 bytes @ 0xA
  3753                           
  3754  007A                     ___lodiv@counter:	
  3755                           ; 1 bytes @ 0xA
  3756                           
  3757  007A                     EUSART_Initialize@x:	
  3758                           ; 1 bytes @ 0xA
  3759                           
  3760  007A                     fputs@fp:	
  3761                           ; 2 bytes @ 0xA
  3762                           
  3763  007A                     strncmp@r:	
  3764                           ; 2 bytes @ 0xA
  3765                           
  3766                           
  3767                           ; 2 bytes @ 0xA
  3768  007A                     	ds	1
  3769  007B                     ??_I2C_writeRegister:	
  3770  007B                     ___fltol@exp1:	
  3771                           ; 1 bytes @ 0xB
  3772                           
  3773                           
  3774                           ; 1 bytes @ 0xB
  3775  007B                     	ds	1
  3776                           
  3777                           	psect	cstackBANK0
  3778  0020                     __pcstackBANK0:	
  3779  0020                     ?_setTemperatureLimitsint:	
  3780  0020                     ??_fputs:	
  3781                           ; 1 bytes @ 0x0
  3782                           
  3783  0020                     ??_tolower:	
  3784                           ; 1 bytes @ 0x0
  3785                           
  3786  0020                     ??_toupper:	
  3787                           ; 1 bytes @ 0x0
  3788                           
  3789  0020                     ??_atoi:	
  3790                           ; 1 bytes @ 0x0
  3791                           
  3792  0020                     ??___fleq:	
  3793                           ; 1 bytes @ 0x0
  3794                           
  3795  0020                     ??___fladd:	
  3796                           ; 1 bytes @ 0x0
  3797                           
  3798  0020                     ?_beginAFEcommunication:	
  3799                           ; 1 bytes @ 0x0
  3800                           
  3801  0020                     ?_stoa:	
  3802                           ; 2 bytes @ 0x0
  3803                           
  3804  0020                     ?___aodiv:	
  3805                           ; 2 bytes @ 0x0
  3806                           
  3807  0020                     ?___aomod:	
  3808                           ; 8 bytes @ 0x0
  3809                           
  3810  0020                     ?___lodiv:	
  3811                           ; 8 bytes @ 0x0
  3812                           
  3813  0020                     ?___lomod:	
  3814                           ; 8 bytes @ 0x0
  3815                           
  3816  0020                     ___aldiv@counter:	
  3817                           ; 8 bytes @ 0x0
  3818                           
  3819  0020                     ___xxtofl@sign:	
  3820                           ; 1 bytes @ 0x0
  3821                           
  3822  0020                     setTemperatureLimitsint@minDischarge_degC:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825  0020                     stoa@fp:	
  3826                           ; 2 bytes @ 0x0
  3827                           
  3828  0020                     ___fpclassifyf@e:	
  3829                           ; 2 bytes @ 0x0
  3830                           
  3831  0020                     ___aodiv@divisor:	
  3832                           ; 2 bytes @ 0x0
  3833                           
  3834  0020                     ___aomod@divisor:	
  3835                           ; 8 bytes @ 0x0
  3836                           
  3837  0020                     ___lodiv@divisor:	
  3838                           ; 8 bytes @ 0x0
  3839                           
  3840  0020                     ___lomod@divisor:	
  3841                           ; 8 bytes @ 0x0
  3842                           
  3843                           
  3844                           ; 8 bytes @ 0x0
  3845  0020                     	ds	1
  3846  0021                     ___aldiv@sign:	
  3847  0021                     ___xxtofl@exp:	
  3848                           ; 1 bytes @ 0x1
  3849                           
  3850                           
  3851                           ; 1 bytes @ 0x1
  3852  0021                     	ds	1
  3853  0022                     ??_beginAFEcommunication:	
  3854  0022                     stoa@s:	
  3855                           ; 1 bytes @ 0x2
  3856                           
  3857  0022                     fputs@c:	
  3858                           ; 1 bytes @ 0x2
  3859                           
  3860  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  3861                           ; 1 bytes @ 0x2
  3862                           
  3863  0022                     ___aldiv@quotient:	
  3864                           ; 2 bytes @ 0x2
  3865                           
  3866  0022                     ___xxtofl@arg:	
  3867                           ; 4 bytes @ 0x2
  3868                           
  3869  0022                     ___fpclassifyf@u:	
  3870                           ; 4 bytes @ 0x2
  3871                           
  3872                           
  3873                           ; 4 bytes @ 0x2
  3874  0022                     	ds	1
  3875  0023                     fputs@i:	
  3876  0023                     stoa@nuls:	
  3877                           ; 2 bytes @ 0x3
  3878                           
  3879                           
  3880                           ; 7 bytes @ 0x3
  3881  0023                     	ds	1
  3882  0024                     setTemperatureLimitsint@minCharge_degC:	
  3883  0024                     atoi@neg:	
  3884                           ; 2 bytes @ 0x4
  3885                           
  3886                           
  3887                           ; 2 bytes @ 0x4
  3888  0024                     	ds	1
  3889  0025                     fputs@s:	
  3890                           
  3891                           ; 1 bytes @ 0x5
  3892  0025                     	ds	1
  3893  0026                     ?_EUSART_Initialize:	
  3894  0026                     ?_pad:	
  3895                           ; 1 bytes @ 0x6
  3896                           
  3897  0026                     ?___flmul:	
  3898                           ; 2 bytes @ 0x6
  3899                           
  3900  0026                     setTemperatureLimitsint@maxCharge_degC:	
  3901                           ; 4 bytes @ 0x6
  3902                           
  3903  0026                     pad@fp:	
  3904                           ; 2 bytes @ 0x6
  3905                           
  3906  0026                     _atoi$1470:	
  3907                           ; 2 bytes @ 0x6
  3908                           
  3909  0026                     EUSART_Initialize@baudrate:	
  3910                           ; 2 bytes @ 0x6
  3911                           
  3912  0026                     ___flmul@b:	
  3913                           ; 4 bytes @ 0x6
  3914                           
  3915                           
  3916                           ; 4 bytes @ 0x6
  3917  0026                     	ds	2
  3918  0028                     pad@buf:	
  3919  0028                     ___fladd@signs:	
  3920                           ; 1 bytes @ 0x8
  3921                           
  3922  0028                     _atoi$1472:	
  3923                           ; 1 bytes @ 0x8
  3924                           
  3925  0028                     ___aodiv@dividend:	
  3926                           ; 2 bytes @ 0x8
  3927                           
  3928  0028                     ___aomod@dividend:	
  3929                           ; 8 bytes @ 0x8
  3930                           
  3931  0028                     ___lodiv@dividend:	
  3932                           ; 8 bytes @ 0x8
  3933                           
  3934  0028                     ___lomod@dividend:	
  3935                           ; 8 bytes @ 0x8
  3936                           
  3937                           
  3938                           ; 8 bytes @ 0x8
  3939  0028                     	ds	1
  3940  0029                     ___fladd@aexp:	
  3941  0029                     pad@p:	
  3942                           ; 1 bytes @ 0x9
  3943                           
  3944                           
  3945                           ; 2 bytes @ 0x9
  3946  0029                     	ds	1
  3947  002A                     ??_EUSART_Initialize:	
  3948  002A                     ___fladd@bexp:	
  3949                           ; 1 bytes @ 0xA
  3950                           
  3951  002A                     _atoi$1471:	
  3952                           ; 1 bytes @ 0xA
  3953                           
  3954  002A                     stoa@i:	
  3955                           ; 1 bytes @ 0xA
  3956                           
  3957  002A                     ___flmul@a:	
  3958                           ; 2 bytes @ 0xA
  3959                           
  3960                           
  3961                           ; 4 bytes @ 0xA
  3962  002A                     	ds	1
  3963  002B                     ??_pad:	
  3964  002B                     ___fladd@grs:	
  3965                           ; 1 bytes @ 0xB
  3966                           
  3967  002B                     beginAFEcommunication@commSuccess:	
  3968                           ; 1 bytes @ 0xB
  3969                           
  3970  002B                     atoi@n:	
  3971                           ; 2 bytes @ 0xB
  3972                           
  3973                           
  3974                           ; 2 bytes @ 0xB
  3975  002B                     	ds	1
  3976  002C                     pad@i:	
  3977  002C                     stoa@w:	
  3978                           ; 2 bytes @ 0xC
  3979                           
  3980                           
  3981                           ; 2 bytes @ 0xC
  3982  002C                     	ds	1
  3983  002D                     beginAFEcommunication@i:	
  3984                           
  3985                           ; 2 bytes @ 0xD
  3986  002D                     	ds	1
  3987  002E                     ??___flmul:	
  3988  002E                     pad@w:	
  3989                           ; 1 bytes @ 0xE
  3990                           
  3991  002E                     stoa@cp:	
  3992                           ; 2 bytes @ 0xE
  3993                           
  3994                           
  3995                           ; 2 bytes @ 0xE
  3996  002E                     	ds	2
  3997  0030                     ?_ctoa:	
  3998  0030                     ?_dtoa:	
  3999                           ; 2 bytes @ 0x10
  4000                           
  4001  0030                     ?_otoa:	
  4002                           ; 2 bytes @ 0x10
  4003                           
  4004  0030                     ?_utoa:	
  4005                           ; 2 bytes @ 0x10
  4006                           
  4007  0030                     ?_xtoa:	
  4008                           ; 2 bytes @ 0x10
  4009                           
  4010  0030                     ctoa@fp:	
  4011                           ; 2 bytes @ 0x10
  4012                           
  4013  0030                     dtoa@fp:	
  4014                           ; 2 bytes @ 0x10
  4015                           
  4016  0030                     otoa@fp:	
  4017                           ; 2 bytes @ 0x10
  4018                           
  4019  0030                     stoa@p:	
  4020                           ; 2 bytes @ 0x10
  4021                           
  4022  0030                     utoa@fp:	
  4023                           ; 2 bytes @ 0x10
  4024                           
  4025  0030                     xtoa@fp:	
  4026                           ; 2 bytes @ 0x10
  4027                           
  4028                           
  4029                           ; 2 bytes @ 0x10
  4030  0030                     	ds	2
  4031  0032                     ctoa@c:	
  4032  0032                     stoa@l:	
  4033                           ; 1 bytes @ 0x12
  4034                           
  4035  0032                     dtoa@d:	
  4036                           ; 2 bytes @ 0x12
  4037                           
  4038  0032                     otoa@d:	
  4039                           ; 8 bytes @ 0x12
  4040                           
  4041  0032                     utoa@d:	
  4042                           ; 8 bytes @ 0x12
  4043                           
  4044  0032                     xtoa@d:	
  4045                           ; 8 bytes @ 0x12
  4046                           
  4047                           
  4048                           ; 8 bytes @ 0x12
  4049  0032                     	ds	1
  4050  0033                     ??_ctoa:	
  4051  0033                     ___flmul@sign:	
  4052                           ; 1 bytes @ 0x13
  4053                           
  4054                           
  4055                           ; 1 bytes @ 0x13
  4056  0033                     	ds	1
  4057  0034                     ctoa@w:	
  4058  0034                     ___flmul@grs:	
  4059                           ; 2 bytes @ 0x14
  4060                           
  4061                           
  4062                           ; 4 bytes @ 0x14
  4063  0034                     	ds	4
  4064  0038                     ___flmul@aexp:	
  4065                           
  4066                           ; 1 bytes @ 0x18
  4067  0038                     	ds	1
  4068  0039                     ___flmul@bexp:	
  4069                           
  4070                           ; 1 bytes @ 0x19
  4071  0039                     	ds	1
  4072  003A                     ??_dtoa:	
  4073  003A                     ??_otoa:	
  4074                           ; 1 bytes @ 0x1A
  4075                           
  4076  003A                     ??_utoa:	
  4077                           ; 1 bytes @ 0x1A
  4078                           
  4079  003A                     xtoa@x:	
  4080                           ; 1 bytes @ 0x1A
  4081                           
  4082  003A                     ___flmul@prod:	
  4083                           ; 1 bytes @ 0x1A
  4084                           
  4085                           
  4086                           ; 4 bytes @ 0x1A
  4087  003A                     	ds	1
  4088  003B                     ??_xtoa:	
  4089  003B                     utoa@p:	
  4090                           ; 1 bytes @ 0x1B
  4091                           
  4092                           
  4093                           ; 2 bytes @ 0x1B
  4094  003B                     	ds	2
  4095  003D                     _dtoa$931:	
  4096  003D                     utoa@w:	
  4097                           ; 2 bytes @ 0x1D
  4098                           
  4099                           
  4100                           ; 2 bytes @ 0x1D
  4101  003D                     	ds	1
  4102  003E                     ___flmul@temp:	
  4103                           
  4104                           ; 2 bytes @ 0x1E
  4105  003E                     	ds	1
  4106  003F                     dtoa@p:	
  4107  003F                     utoa@n:	
  4108                           ; 2 bytes @ 0x1F
  4109                           
  4110                           
  4111                           ; 8 bytes @ 0x1F
  4112  003F                     	ds	1
  4113  0040                     ?___flsub:	
  4114  0040                     ?___fldiv:	
  4115                           ; 4 bytes @ 0x20
  4116                           
  4117  0040                     ___flsub@a:	
  4118                           ; 4 bytes @ 0x20
  4119                           
  4120  0040                     ___fldiv@a:	
  4121                           ; 4 bytes @ 0x20
  4122                           
  4123                           
  4124                           ; 4 bytes @ 0x20
  4125  0040                     	ds	1
  4126  0041                     dtoa@w:	
  4127                           
  4128                           ; 2 bytes @ 0x21
  4129  0041                     	ds	1
  4130  0042                     otoa@p:	
  4131                           
  4132                           ; 2 bytes @ 0x22
  4133  0042                     	ds	1
  4134  0043                     dtoa@s:	
  4135  0043                     _xtoa$1001:	
  4136                           ; 2 bytes @ 0x23
  4137                           
  4138                           
  4139                           ; 2 bytes @ 0x23
  4140  0043                     	ds	1
  4141  0044                     otoa@t:	
  4142  0044                     ___flsub@b:	
  4143                           ; 2 bytes @ 0x24
  4144                           
  4145  0044                     ___fldiv@b:	
  4146                           ; 4 bytes @ 0x24
  4147                           
  4148                           
  4149                           ; 4 bytes @ 0x24
  4150  0044                     	ds	1
  4151  0045                     _xtoa$1002:	
  4152  0045                     dtoa@n:	
  4153                           ; 2 bytes @ 0x25
  4154                           
  4155                           
  4156                           ; 8 bytes @ 0x25
  4157  0045                     	ds	1
  4158  0046                     otoa@w:	
  4159                           
  4160                           ; 2 bytes @ 0x26
  4161  0046                     	ds	1
  4162  0047                     utoa@i:	
  4163  0047                     xtoa@p:	
  4164                           ; 2 bytes @ 0x27
  4165                           
  4166                           
  4167                           ; 2 bytes @ 0x27
  4168  0047                     	ds	1
  4169  0048                     ??___fldiv:	
  4170  0048                     otoa@n:	
  4171                           ; 1 bytes @ 0x28
  4172                           
  4173                           
  4174                           ; 8 bytes @ 0x28
  4175  0048                     	ds	1
  4176  0049                     xtoa@w:	
  4177                           
  4178                           ; 2 bytes @ 0x29
  4179  0049                     	ds	2
  4180  004B                     xtoa@n:	
  4181                           
  4182                           ; 8 bytes @ 0x2B
  4183  004B                     	ds	2
  4184  004D                     dtoa@i:	
  4185  004D                     ___fldiv@rem:	
  4186                           ; 2 bytes @ 0x2D
  4187                           
  4188                           
  4189                           ; 4 bytes @ 0x2D
  4190  004D                     	ds	3
  4191  0050                     otoa@i:	
  4192                           
  4193                           ; 2 bytes @ 0x30
  4194  0050                     	ds	1
  4195  0051                     ___fldiv@sign:	
  4196                           
  4197                           ; 1 bytes @ 0x31
  4198  0051                     	ds	1
  4199  0052                     ___fldiv@new_exp:	
  4200                           
  4201                           ; 2 bytes @ 0x32
  4202  0052                     	ds	1
  4203  0053                     xtoa@i:	
  4204                           
  4205                           ; 2 bytes @ 0x33
  4206  0053                     	ds	1
  4207  0054                     ___fldiv@grs:	
  4208                           
  4209                           ; 4 bytes @ 0x34
  4210  0054                     	ds	1
  4211  0055                     xtoa@c:	
  4212                           
  4213                           ; 2 bytes @ 0x35
  4214  0055                     	ds	3
  4215  0058                     ___fldiv@bexp:	
  4216                           
  4217                           ; 1 bytes @ 0x38
  4218  0058                     	ds	1
  4219  0059                     ___fldiv@aexp:	
  4220                           
  4221                           ; 1 bytes @ 0x39
  4222  0059                     	ds	1
  4223  005A                     ?___flge:	
  4224  005A                     ?_floorf:	
  4225                           ; 1 bit 
  4226                           
  4227  005A                     ?___fltol:	
  4228                           ; 4 bytes @ 0x3A
  4229                           
  4230  005A                     ___flge@ff1:	
  4231                           ; 4 bytes @ 0x3A
  4232                           
  4233  005A                     ___fltol@f1:	
  4234                           ; 4 bytes @ 0x3A
  4235                           
  4236  005A                     floorf@x:	
  4237                           ; 4 bytes @ 0x3A
  4238                           
  4239                           
  4240                           ; 4 bytes @ 0x3A
  4241  005A                     	ds	4
  4242  005E                     ??_floorf:	
  4243  005E                     ??___fltol:	
  4244                           ; 1 bytes @ 0x3E
  4245                           
  4246  005E                     ___flge@ff2:	
  4247                           ; 1 bytes @ 0x3E
  4248                           
  4249                           
  4250                           ; 4 bytes @ 0x3E
  4251  005E                     	ds	4
  4252  0062                     ??___flge:	
  4253                           
  4254                           ; 1 bytes @ 0x42
  4255  0062                     	ds	1
  4256  0063                     ?_AFE_getSetShortCircuitCurrent:	
  4257                           
  4258                           ; 4 bytes @ 0x43
  4259  0063                     	ds	1
  4260  0064                     floorf@m:	
  4261                           
  4262                           ; 4 bytes @ 0x44
  4263  0064                     	ds	2
  4264  0066                     ?_setShortCircuitProtection:	
  4265  0066                     setShortCircuitProtection@current_mA:	
  4266                           ; 1 bytes @ 0x46
  4267                           
  4268                           
  4269                           ; 4 bytes @ 0x46
  4270  0066                     	ds	1
  4271  0067                     ??_AFE_getSetShortCircuitCurrent:	
  4272                           
  4273                           ; 1 bytes @ 0x47
  4274  0067                     	ds	1
  4275  0068                     floorf@e:	
  4276                           
  4277                           ; 2 bytes @ 0x48
  4278  0068                     	ds	2
  4279  006A                     setShortCircuitProtection@delay_us:	
  4280  006A                     floorf@u:	
  4281                           ; 2 bytes @ 0x4A
  4282                           
  4283                           
  4284                           ; 4 bytes @ 0x4A
  4285  006A                     	ds	2
  4286  006C                     ??_setShortCircuitProtection:	
  4287                           
  4288                           ; 1 bytes @ 0x4C
  4289  006C                     	ds	2
  4290  006E                     ??_vfprintf:	
  4291                           
  4292                           ; 1 bytes @ 0x4E
  4293  006E                     	ds	2
  4294                           
  4295                           	psect	maintext
  4296  28EE                     __pmaintext:	
  4297 ;;
  4298 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4299 ;;
  4300 ;; *************** function _main *****************
  4301 ;; Defined at:
  4302 ;;		line 75 in file "main.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : B1F/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4319 ;;      Totals:         0       0       0       0       1       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4320 ;;Total ram usage:        1 bytes
  4321 ;; Hardware stack levels required when called:   11
  4322 ;; This function calls:
  4323 ;;		_EUSART_Initialize
  4324 ;;		_initClock
  4325 ;;		_init_GPIO
  4326 ;;		_init_I2C
  4327 ;;		_init_RGB
  4328 ;;		_init_TMR1
  4329 ;;		_statemachine
  4330 ;; This function is called by:
  4331 ;;		Startup code after reset
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335                           
  4336                           ;psect for function _main
  4337  28EE                     _main:	
  4338                           
  4339                           ;main.c: 78:     initClock();
  4340                           
  4341                           ;incstack = 0
  4342                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4343  28EE  3198  2001  31A8   	fcall	_initClock
  4344                           
  4345                           ;main.c: 79:     init_GPIO();
  4346  28F1  3188  2007  31A8   	fcall	_init_GPIO
  4347                           
  4348                           ;main.c: 80:     init_I2C();
  4349  28F4  31B6  26C1  31A8   	fcall	_init_I2C
  4350                           
  4351                           ;main.c: 81:     EUSART_Initialize(9600);
  4352  28F7  3000               	movlw	0
  4353  28F8  0020               	movlb	0	; select bank0
  4354  28F9  00A9               	movwf	EUSART_Initialize@baudrate+3
  4355  28FA  3000               	movlw	0
  4356  28FB  00A8               	movwf	EUSART_Initialize@baudrate+2
  4357  28FC  3025               	movlw	37
  4358  28FD  00A7               	movwf	EUSART_Initialize@baudrate+1
  4359  28FE  3080               	movlw	128
  4360  28FF  00A6               	movwf	EUSART_Initialize@baudrate
  4361  2900  31A1  21A3  31A8   	fcall	_EUSART_Initialize
  4362                           
  4363                           ;main.c: 82:     init_TMR1();
  4364  2903  31A0  2001  31A8   	fcall	_init_TMR1
  4365                           
  4366                           ;main.c: 83:     init_RGB();
  4367  2906  31B6  2662  31A8   	fcall	_init_RGB
  4368  2909                     l8129:	
  4369                           
  4370                           ;main.c: 87:         statemachine();
  4371  2909  319B  2351  31A8   	fcall	_statemachine
  4372                           
  4373                           ;main.c: 89:         _delay((unsigned long)((10)*(16000000/4000.0)));
  4374  290C  3034               	movlw	52
  4375  290D  0023               	movlb	3	; select bank3
  4376  290E  00DB               	movwf	??_main^(0+384)
  4377  290F  30F1               	movlw	241
  4378  2910                     u11867:	
  4379  2910  0B89               	decfsz	9,f
  4380  2911  2910               	goto	u11867
  4381  2912  0BDB               	decfsz	??_main^(0+384),f
  4382  2913  2910               	goto	u11867
  4383  2914  3200               	nop2
  4384  2915  2909               	goto	l8129
  4385  2916                     __end_of_main:	
  4386                           
  4387                           	psect	text1
  4388  1B51                     __ptext1:	
  4389 ;; *************** function _statemachine *****************
  4390 ;; Defined at:
  4391 ;;		line 95 in file "main.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;		None
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  success         1   79[BANK2 ] unsigned char 
  4396 ;; Return value:  Size  Location     Type
  4397 ;;                  1    wreg      void 
  4398 ;; Registers used:
  4399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4406 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4407 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4408 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4409 ;;Total ram usage:        3 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; Hardware stack levels required when called:   10
  4412 ;; This function calls:
  4413 ;;		_AFE_getSetCurrentSenseRes
  4414 ;;		_AFE_getSetShortCircuitCurrent
  4415 ;;		_EUSART_Write_Text
  4416 ;;		_RGB_AWAIT_AFE_CONN
  4417 ;;		_RGB_color
  4418 ;;		_beginAFEcommunication
  4419 ;;		_init_AFE
  4420 ;;		_snprintf
  4421 ;; This function is called by:
  4422 ;;		_main
  4423 ;; This function uses a non-reentrant model
  4424 ;;
  4425                           
  4426                           
  4427                           ;psect for function _statemachine
  4428  1B51                     _statemachine:	
  4429                           
  4430                           ;main.c: 97:     switch (currState) {
  4431                           
  4432                           ;incstack = 0
  4433                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4434  1B51  2C36               	goto	l8111
  4435  1B52                     l8057:	
  4436                           
  4437                           ;main.c: 100:             if (tmr1_flag) {
  4438  1B52  0023               	movlb	3	; select bank3
  4439  1B53  0852               	movf	_tmr1_flag^(0+384),w	;volatile
  4440  1B54  1903               	btfsc	3,2
  4441  1B55  0008               	return
  4442                           
  4443                           ;main.c: 101:                 tmr1_flag = 0;
  4444  1B56  01D2               	clrf	_tmr1_flag^(0+384)	;volatile
  4445                           
  4446                           ;main.c: 102:                 RGB_AWAIT_AFE_CONN();
  4447  1B57  31A8  2062  319B   	fcall	_RGB_AWAIT_AFE_CONN
  4448                           
  4449                           ;main.c: 103:                 uint8_t success = beginAFEcommunication();
  4450  1B5A  31A2  224B  319B   	fcall	_beginAFEcommunication
  4451  1B5D  0020               	movlb	0	; select bank0
  4452  1B5E  0820               	movf	?_beginAFEcommunication,w
  4453  1B5F  0022               	movlb	2	; select bank2
  4454  1B60  00ED               	movwf	??_statemachine^(0+256)
  4455  1B61  086D               	movf	??_statemachine^(0+256),w
  4456  1B62  00EF               	movwf	statemachine@success^(0+256)
  4457                           
  4458                           ;main.c: 106:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  4459  1B63  303D               	movlw	low (STR_1| (0+32768))
  4460  1B64  00F2               	movwf	EUSART_Write_Text@text
  4461  1B65  30B1               	movlw	high (STR_1| (0+32768))
  4462  1B66  00F3               	movwf	EUSART_Write_Text@text+1
  4463  1B67  31B7  2755  319B   	fcall	_EUSART_Write_Text
  4464                           
  4465                           ;main.c: 108:                 if (success) {
  4466  1B6A  0022               	movlb	2	; select bank2
  4467  1B6B  086F               	movf	statemachine@success^(0+256),w
  4468  1B6C  1903               	btfsc	3,2
  4469  1B6D  0008               	return
  4470                           
  4471                           ;main.c: 109:                     T1CONbits.TMR1ON = 0;
  4472  1B6E  0020               	movlb	0	; select bank0
  4473  1B6F  1018               	bcf	24,0	;volatile
  4474                           
  4475                           ;main.c: 110:                     PIE1bits.TMR1IE = 0;
  4476  1B70  0021               	movlb	1	; select bank1
  4477  1B71  1011               	bcf	17,0	;volatile
  4478                           
  4479                           ;main.c: 111:                     RGB_color(0);
  4480  1B72  3000               	movlw	0
  4481  1B73  00F1               	movwf	RGB_color@color
  4482  1B74  00F2               	movwf	RGB_color@color+1
  4483  1B75  31A8  2041  319B   	fcall	_RGB_color
  4484                           
  4485                           ;main.c: 112:                     tmr1_flag = 0;
  4486  1B78  0023               	movlb	3	; select bank3
  4487  1B79  01D2               	clrf	_tmr1_flag^(0+384)	;volatile
  4488                           
  4489                           ;main.c: 115:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  4490  1B7A  301A               	movlw	26
  4491  1B7B  0022               	movlb	2	; select bank2
  4492  1B7C  00ED               	movwf	??_statemachine^(0+256)
  4493  1B7D  30F8               	movlw	248
  4494  1B7E                     u11877:	
  4495  1B7E  0B89               	decfsz	9,f
  4496  1B7F  2B7E               	goto	u11877
  4497  1B80  0BED               	decfsz	??_statemachine^(0+256),f
  4498  1B81  2B7E               	goto	u11877
  4499  1B82  0000               	nop
  4500                           
  4501                           ;main.c: 116:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  4502  1B83  3037               	movlw	low (STR_2| (0+32768))
  4503  1B84  00F2               	movwf	EUSART_Write_Text@text
  4504  1B85  30B0               	movlw	high (STR_2| (0+32768))
  4505  1B86  00F3               	movwf	EUSART_Write_Text@text+1
  4506  1B87  31B7  2755  319B   	fcall	_EUSART_Write_Text
  4507                           
  4508                           ;main.c: 117:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  4509  1B8A  3071               	movlw	113
  4510  1B8B  0022               	movlb	2	; select bank2
  4511  1B8C  00DF               	movwf	snprintf@s^(0+256)
  4512  1B8D  3027               	movlw	39
  4513  1B8E  00E0               	movwf	(snprintf@s^(0+256)+1)
  4514  1B8F  307F               	movlw	127
  4515  1B90  00E1               	movwf	snprintf@n^(0+256)
  4516  1B91  3000               	movlw	0
  4517  1B92  00E2               	movwf	(snprintf@n^(0+256)+1)
  4518  1B93  30BE               	movlw	low (STR_3| (0+32768))
  4519  1B94  00E3               	movwf	snprintf@fmt^(0+256)
  4520  1B95  30B0               	movlw	high (STR_3| (0+32768))
  4521  1B96  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4522  1B97  0023               	movlb	3	; select bank3
  4523  1B98  084D               	movf	(_adcOffset+1)^(0+384),w
  4524  1B99  0022               	movlb	2	; select bank2
  4525  1B9A  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4526  1B9B  0023               	movlb	3	; select bank3
  4527  1B9C  084C               	movf	_adcOffset^(0+384),w
  4528  1B9D  0022               	movlb	2	; select bank2
  4529  1B9E  00E5               	movwf	(?_snprintf^(0+256)+6)
  4530  1B9F  0023               	movlb	3	; select bank3
  4531  1BA0  084F               	movf	(_adcGain+1)^(0+384),w
  4532  1BA1  0022               	movlb	2	; select bank2
  4533  1BA2  00E8               	movwf	((?_snprintf+1)^(0+256)+8)
  4534  1BA3  0023               	movlb	3	; select bank3
  4535  1BA4  084E               	movf	_adcGain^(0+384),w
  4536  1BA5  0022               	movlb	2	; select bank2
  4537  1BA6  00E7               	movwf	(?_snprintf^(0+256)+8)
  4538  1BA7  31B7  273D  319B   	fcall	_snprintf
  4539                           
  4540                           ;main.c: 118:                     EUSART_Write_Text(messageBuffer);
  4541  1BAA  3071               	movlw	113
  4542  1BAB  00F2               	movwf	EUSART_Write_Text@text
  4543  1BAC  3027               	movlw	39
  4544  1BAD  00F3               	movwf	EUSART_Write_Text@text+1
  4545  1BAE  31B7  2755  319B   	fcall	_EUSART_Write_Text
  4546                           
  4547                           ;main.c: 119:                     EUSART_Write_Text("Attempt to set initial system param
      +                          eters to AFE...\n\r");
  4548  1BB1  3002               	movlw	low (STR_4| (0+32768))
  4549  1BB2  00F2               	movwf	EUSART_Write_Text@text
  4550  1BB3  30B0               	movlw	high (STR_4| (0+32768))
  4551  1BB4  00F3               	movwf	EUSART_Write_Text@text+1
  4552  1BB5  31B7  2755         	fcall	_EUSART_Write_Text
  4553                           
  4554                           ;main.c: 121:                     currState = 1;
  4555  1BB7  0023               	movlb	3	; select bank3
  4556  1BB8  01D3               	clrf	_currState^(0+384)
  4557  1BB9  0AD3               	incf	_currState^(0+384),f
  4558  1BBA  0008               	return
  4559  1BBB                     l8087:	
  4560                           
  4561                           ;main.c: 130:             init_AFE();
  4562  1BBB  31A9  2116  319B   	fcall	_init_AFE
  4563                           
  4564                           ;main.c: 133:             _delay((unsigned long)((5)*(16000000/4000.0)));
  4565  1BBE  301A               	movlw	26
  4566  1BBF  0022               	movlb	2	; select bank2
  4567  1BC0  00ED               	movwf	??_statemachine^(0+256)
  4568  1BC1  30F8               	movlw	248
  4569  1BC2                     u11887:	
  4570  1BC2  0B89               	decfsz	9,f
  4571  1BC3  2BC2               	goto	u11887
  4572  1BC4  0BED               	decfsz	??_statemachine^(0+256),f
  4573  1BC5  2BC2               	goto	u11887
  4574  1BC6  0000               	nop
  4575                           
  4576                           ;main.c: 134:             EUSART_Write_Text("\n\r");
  4577  1BC7  3062               	movlw	low ((STR_2+43)| (0+32768))
  4578  1BC8  00F2               	movwf	EUSART_Write_Text@text
  4579  1BC9  30B0               	movlw	high ((STR_2+43)| (0+32768))
  4580  1BCA  00F3               	movwf	EUSART_Write_Text@text+1
  4581  1BCB  31B7  2755  319B   	fcall	_EUSART_Write_Text
  4582                           
  4583                           ;main.c: 135:             snprintf(messageBuffer, 127, "Current sense resistor value: %.
      +                          4f ohms\n\r", AFE_getSetCurrentSenseRes());
  4584  1BCE  3071               	movlw	113
  4585  1BCF  0022               	movlb	2	; select bank2
  4586  1BD0  00DF               	movwf	snprintf@s^(0+256)
  4587  1BD1  3027               	movlw	39
  4588  1BD2  00E0               	movwf	(snprintf@s^(0+256)+1)
  4589  1BD3  307F               	movlw	127
  4590  1BD4  00E1               	movwf	snprintf@n^(0+256)
  4591  1BD5  3000               	movlw	0
  4592  1BD6  00E2               	movwf	(snprintf@n^(0+256)+1)
  4593  1BD7  3013               	movlw	low (STR_6| (0+32768))
  4594  1BD8  00E3               	movwf	snprintf@fmt^(0+256)
  4595  1BD9  30B1               	movlw	high (STR_6| (0+32768))
  4596  1BDA  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4597  1BDB  31B6  26A3  319B   	fcall	_AFE_getSetCurrentSenseRes
  4598  1BDE  0874               	movf	?_AFE_getSetCurrentSenseRes+3,w
  4599  1BDF  0022               	movlb	2	; select bank2
  4600  1BE0  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  4601  1BE1  0873               	movf	?_AFE_getSetCurrentSenseRes+2,w
  4602  1BE2  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  4603  1BE3  0872               	movf	?_AFE_getSetCurrentSenseRes+1,w
  4604  1BE4  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4605  1BE5  0871               	movf	?_AFE_getSetCurrentSenseRes,w
  4606  1BE6  00E5               	movwf	(?_snprintf^(0+256)+6)
  4607  1BE7  31B7  273D  319B   	fcall	_snprintf
  4608                           
  4609                           ;main.c: 136:             EUSART_Write_Text(messageBuffer);
  4610  1BEA  3071               	movlw	113
  4611  1BEB  00F2               	movwf	EUSART_Write_Text@text
  4612  1BEC  3027               	movlw	39
  4613  1BED  00F3               	movwf	EUSART_Write_Text@text+1
  4614  1BEE  31B7  2755  319B   	fcall	_EUSART_Write_Text
  4615                           
  4616                           ;main.c: 137:             snprintf(messageBuffer, 127, "Set short circuit current for AF
      +                          E: %lu mA\n\r", AFE_getSetShortCircuitCurrent());
  4617  1BF1  3071               	movlw	113
  4618  1BF2  0022               	movlb	2	; select bank2
  4619  1BF3  00DF               	movwf	snprintf@s^(0+256)
  4620  1BF4  3027               	movlw	39
  4621  1BF5  00E0               	movwf	(snprintf@s^(0+256)+1)
  4622  1BF6  307F               	movlw	127
  4623  1BF7  00E1               	movwf	snprintf@n^(0+256)
  4624  1BF8  3000               	movlw	0
  4625  1BF9  00E2               	movwf	(snprintf@n^(0+256)+1)
  4626  1BFA  3092               	movlw	low (STR_7| (0+32768))
  4627  1BFB  00E3               	movwf	snprintf@fmt^(0+256)
  4628  1BFC  30B0               	movlw	high (STR_7| (0+32768))
  4629  1BFD  00E4               	movwf	(snprintf@fmt^(0+256)+1)
  4630  1BFE  31AA  22B2  319B   	fcall	_AFE_getSetShortCircuitCurrent
  4631  1C01  0020               	movlb	0	; select bank0
  4632  1C02  0866               	movf	?_AFE_getSetShortCircuitCurrent+3,w
  4633  1C03  0022               	movlb	2	; select bank2
  4634  1C04  00E8               	movwf	((?_snprintf+3)^(0+256)+6)
  4635  1C05  0020               	movlb	0	; select bank0
  4636  1C06  0865               	movf	?_AFE_getSetShortCircuitCurrent+2,w
  4637  1C07  0022               	movlb	2	; select bank2
  4638  1C08  00E7               	movwf	((?_snprintf+2)^(0+256)+6)
  4639  1C09  0020               	movlb	0	; select bank0
  4640  1C0A  0864               	movf	?_AFE_getSetShortCircuitCurrent+1,w
  4641  1C0B  0022               	movlb	2	; select bank2
  4642  1C0C  00E6               	movwf	((?_snprintf+1)^(0+256)+6)
  4643  1C0D  0020               	movlb	0	; select bank0
  4644  1C0E  0863               	movf	?_AFE_getSetShortCircuitCurrent,w
  4645  1C0F  0022               	movlb	2	; select bank2
  4646  1C10  00E5               	movwf	(?_snprintf^(0+256)+6)
  4647  1C11  31B7  273D  319B   	fcall	_snprintf
  4648                           
  4649                           ;main.c: 138:             EUSART_Write_Text(messageBuffer);
  4650  1C14  3071               	movlw	113
  4651  1C15  00F2               	movwf	EUSART_Write_Text@text
  4652  1C16  3027               	movlw	39
  4653  1C17  00F3               	movwf	EUSART_Write_Text@text+1
  4654  1C18  31B7  2755  319B   	fcall	_EUSART_Write_Text
  4655                           
  4656                           ;main.c: 139:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  4657  1C1B  30E9               	movlw	low (STR_8| (0+32768))
  4658  1C1C  00F2               	movwf	EUSART_Write_Text@text
  4659  1C1D  30B0               	movlw	high (STR_8| (0+32768))
  4660  1C1E  00F3               	movwf	EUSART_Write_Text@text+1
  4661  1C1F  31B7  2755  319B   	fcall	_EUSART_Write_Text
  4662                           
  4663                           ;main.c: 140:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  4664  1C22  3065               	movlw	low (STR_9| (0+32768))
  4665  1C23  00F2               	movwf	EUSART_Write_Text@text
  4666  1C24  30B0               	movlw	high (STR_9| (0+32768))
  4667  1C25  00F3               	movwf	EUSART_Write_Text@text+1
  4668  1C26  31B7  2755  319B   	fcall	_EUSART_Write_Text
  4669                           
  4670                           ;main.c: 142:             RGB_color(1);
  4671  1C29  3001               	movlw	1
  4672  1C2A  00F1               	movwf	RGB_color@color
  4673  1C2B  3000               	movlw	0
  4674  1C2C  00F2               	movwf	RGB_color@color+1
  4675  1C2D  31A8  2041         	fcall	_RGB_color
  4676                           
  4677                           ;main.c: 143:             currState = 2;
  4678  1C2F  3002               	movlw	2
  4679  1C30  0022               	movlb	2	; select bank2
  4680  1C31  00ED               	movwf	??_statemachine^(0+256)
  4681  1C32  086D               	movf	??_statemachine^(0+256),w
  4682  1C33  0023               	movlb	3	; select bank3
  4683  1C34  00D3               	movwf	_currState^(0+384)
  4684                           
  4685                           ;main.c: 144:             break;
  4686  1C35  0008               	return
  4687  1C36                     l8111:	
  4688  1C36  0023               	movlb	3	; select bank3
  4689  1C37  0853               	movf	_currState^(0+384),w
  4690  1C38  0022               	movlb	2	; select bank2
  4691  1C39  00ED               	movwf	??_statemachine^(0+256)
  4692  1C3A  01EE               	clrf	(??_statemachine^(0+256)+1)
  4693                           
  4694                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4695                           ; Switch size 1, requested type "simple"
  4696                           ; Number of cases is 1, Range of values is 0 to 0
  4697                           ; switch strategies available:
  4698                           ; Name         Instructions Cycles
  4699                           ; simple_byte            4     3 (average)
  4700                           ; direct_byte            8     6 (fixed)
  4701                           ; jumptable            260     6 (fixed)
  4702                           ;	Chosen strategy is simple_byte
  4703  1C3B  086E               	movf	(??_statemachine+1)^(0+256),w
  4704  1C3C  3A00               	xorlw	0	; case 0
  4705  1C3D  1903               	skipnz
  4706  1C3E  2C40               	goto	l8233
  4707  1C3F  2C4B               	goto	l137
  4708  1C40                     l8233:	
  4709                           
  4710                           ; Switch size 1, requested type "simple"
  4711                           ; Number of cases is 3, Range of values is 0 to 2
  4712                           ; switch strategies available:
  4713                           ; Name         Instructions Cycles
  4714                           ; simple_byte           10     6 (average)
  4715                           ; direct_byte           12     6 (fixed)
  4716                           ; jumptable            260     6 (fixed)
  4717                           ;	Chosen strategy is simple_byte
  4718  1C40  086D               	movf	??_statemachine^(0+256),w
  4719  1C41  3A00               	xorlw	0	; case 0
  4720  1C42  1903               	skipnz
  4721  1C43  2B52               	goto	l8057
  4722  1C44  3A01               	xorlw	1	; case 1
  4723  1C45  1903               	skipnz
  4724  1C46  2BBB               	goto	l8087
  4725  1C47  3A03               	xorlw	3	; case 2
  4726  1C48  1903               	skipnz
  4727  1C49  2C4B               	goto	l137
  4728  1C4A  2C4B               	goto	l137
  4729  1C4B                     l137:	
  4730  1C4B  0008               	return
  4731  1C4C                     __end_of_statemachine:	
  4732                           
  4733                           	psect	text2
  4734  373D                     __ptext2:	
  4735 ;; *************** function _snprintf *****************
  4736 ;; Defined at:
  4737 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  s               2   63[BANK2 ] PTR unsigned char 
  4740 ;;		 -> messageBuffer(127), 
  4741 ;;  n               2   65[BANK2 ] unsigned int 
  4742 ;;  fmt             2   67[BANK2 ] PTR const unsigned char 
  4743 ;;		 -> STR_7(44), STR_6(42), STR_3(43), 
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;  ret             2    0        int 
  4746 ;;  ap              1   76[BANK2 ] PTR void [1]
  4747 ;;		 -> ?_snprintf(2), 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  2   63[BANK2 ] int 
  4750 ;; Registers used:
  4751 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4757 ;;      Params:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4758 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4759 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4760 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4761 ;;Total ram usage:       14 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    9
  4764 ;; This function calls:
  4765 ;;		_vsnprintf
  4766 ;; This function is called by:
  4767 ;;		_statemachine
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770                           
  4771                           
  4772                           ;psect for function _snprintf
  4773  373D                     _snprintf:	
  4774                           
  4775                           ;incstack = 0
  4776                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4777  373D  3065               	movlw	(low ((?_snprintf| (0+256)+6)))& (0+255)
  4778  373E  0022               	movlb	2	; select bank2
  4779  373F  00E9               	movwf	??_snprintf^(0+256)
  4780  3740  0869               	movf	??_snprintf^(0+256),w
  4781  3741  00EC               	movwf	snprintf@ap^(0+256)
  4782  3742  0860               	movf	(snprintf@s+1)^(0+256),w
  4783  3743  00CF               	movwf	(vsnprintf@s+1)^(0+256)
  4784  3744  085F               	movf	snprintf@s^(0+256),w
  4785  3745  00CE               	movwf	vsnprintf@s^(0+256)
  4786  3746  0862               	movf	(snprintf@n+1)^(0+256),w
  4787  3747  00D1               	movwf	(vsnprintf@n+1)^(0+256)
  4788  3748  0861               	movf	snprintf@n^(0+256),w
  4789  3749  00D0               	movwf	vsnprintf@n^(0+256)
  4790  374A  0864               	movf	(snprintf@fmt+1)^(0+256),w
  4791  374B  00D3               	movwf	(vsnprintf@fmt+1)^(0+256)
  4792  374C  0863               	movf	snprintf@fmt^(0+256),w
  4793  374D  00D2               	movwf	vsnprintf@fmt^(0+256)
  4794  374E  306C               	movlw	(low (snprintf@ap| (0+256)))& (0+255)
  4795  374F  00E9               	movwf	??_snprintf^(0+256)
  4796  3750  0869               	movf	??_snprintf^(0+256),w
  4797  3751  00D4               	movwf	vsnprintf@ap^(0+256)
  4798  3752  31AD  25E3         	fcall	_vsnprintf
  4799  3754  0008               	return
  4800  3755                     __end_of_snprintf:	
  4801                           
  4802                           	psect	text3
  4803  2DE3                     __ptext3:	
  4804 ;; *************** function _vsnprintf *****************
  4805 ;; Defined at:
  4806 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  4807 ;; Parameters:    Size  Location     Type
  4808 ;;  s               2   46[BANK2 ] PTR unsigned char 
  4809 ;;		 -> messageBuffer(127), 
  4810 ;;  n               2   48[BANK2 ] unsigned int 
  4811 ;;  fmt             2   50[BANK2 ] PTR const unsigned char 
  4812 ;;		 -> STR_7(44), STR_6(42), STR_3(43), 
  4813 ;;  ap              1   52[BANK2 ] PTR PTR void 
  4814 ;;		 -> snprintf@ap(1), 
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;  f               6   57[BANK2 ] struct _IO_FILE
  4817 ;;  cnt             2   55[BANK2 ] int 
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  2   46[BANK2 ] int 
  4820 ;; Registers used:
  4821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4827 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4828 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4829 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4830 ;;      Totals:         0       0       2      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4831 ;;Total ram usage:       19 bytes
  4832 ;; Hardware stack levels used:    1
  4833 ;; Hardware stack levels required when called:    8
  4834 ;; This function calls:
  4835 ;;		_vfprintf
  4836 ;; This function is called by:
  4837 ;;		_snprintf
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           
  4842                           ;psect for function _vsnprintf
  4843  2DE3                     _vsnprintf:	
  4844                           
  4845                           ;incstack = 0
  4846                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4847  2DE3  3080               	movlw	128
  4848  2DE4  0022               	movlb	2	; select bank2
  4849  2DE5  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  4850  2DE6  3000               	movlw	0
  4851  2DE7  1903               	skipnz
  4852  2DE8  0250               	subwf	vsnprintf@n^(0+256),w
  4853  2DE9  1C03               	skipc
  4854  2DEA  2DF6               	goto	l7993
  4855  2DEB  304B               	movlw	75
  4856  2DEC  0023               	movlb	3	; select bank3
  4857  2DED  00BA               	movwf	_errno^(0+384)
  4858  2DEE  3000               	movlw	0
  4859  2DEF  00BB               	movwf	(_errno^(0+384)+1)
  4860  2DF0  30FF               	movlw	255
  4861  2DF1  0022               	movlb	2	; select bank2
  4862  2DF2  00CE               	movwf	?_vsnprintf^(0+256)
  4863  2DF3  30FF               	movlw	255
  4864  2DF4  00CF               	movwf	(?_vsnprintf^(0+256)+1)
  4865  2DF5  0008               	return
  4866  2DF6                     l7993:	
  4867  2DF6  084F               	movf	(vsnprintf@s+1)^(0+256),w
  4868  2DF7  00DA               	movwf	(vsnprintf@f+1)^(0+256)
  4869  2DF8  084E               	movf	vsnprintf@s^(0+256),w
  4870  2DF9  00D9               	movwf	vsnprintf@f^(0+256)
  4871  2DFA  3000               	movlw	0
  4872  2DFB  0251               	subwf	(vsnprintf@n+1)^(0+256),w
  4873  2DFC  3002               	movlw	2
  4874  2DFD  1903               	skipnz
  4875  2DFE  0250               	subwf	vsnprintf@n^(0+256),w
  4876  2DFF  1C03               	skipc
  4877  2E00  2E0A               	goto	l7999
  4878  2E01  0850               	movf	vsnprintf@n^(0+256),w
  4879  2E02  3EFF               	addlw	255
  4880  2E03  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  4881  2E04  30FF               	movlw	255
  4882  2E05  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  4883  2E06  00DE               	movwf	((vsnprintf@f+1)^(0+256)+4)
  4884  2E07  01DB               	clrf	(vsnprintf@f^(0+256)+2)
  4885  2E08  01DC               	clrf	((vsnprintf@f+1)^(0+256)+2)
  4886  2E09  2E12               	goto	l8001
  4887  2E0A                     l7999:	
  4888  2E0A  3001               	movlw	1
  4889  2E0B  00DD               	movwf	(vsnprintf@f^(0+256)+4)
  4890  2E0C  3000               	movlw	0
  4891  2E0D  00DE               	movwf	(vsnprintf@f^(0+256)+5)
  4892  2E0E  3001               	movlw	1
  4893  2E0F  00DB               	movwf	(vsnprintf@f^(0+256)+2)
  4894  2E10  3000               	movlw	0
  4895  2E11  00DC               	movwf	(vsnprintf@f^(0+256)+3)
  4896  2E12                     l8001:	
  4897  2E12  3059               	movlw	low vsnprintf@f
  4898  2E13  0021               	movlb	1	; select bank1
  4899  2E14  00E7               	movwf	vfprintf@fp^(0+128)
  4900  2E15  3001               	movlw	high vsnprintf@f
  4901  2E16  00E8               	movwf	(vfprintf@fp^(0+128)+1)
  4902  2E17  0022               	movlb	2	; select bank2
  4903  2E18  0853               	movf	(vsnprintf@fmt+1)^(0+256),w
  4904  2E19  0021               	movlb	1	; select bank1
  4905  2E1A  00EA               	movwf	(vfprintf@fmt+1)^(0+128)
  4906  2E1B  0022               	movlb	2	; select bank2
  4907  2E1C  0852               	movf	vsnprintf@fmt^(0+256),w
  4908  2E1D  0021               	movlb	1	; select bank1
  4909  2E1E  00E9               	movwf	vfprintf@fmt^(0+128)
  4910  2E1F  0022               	movlb	2	; select bank2
  4911  2E20  0854               	movf	vsnprintf@ap^(0+256),w
  4912  2E21  0021               	movlb	1	; select bank1
  4913  2E22  00EE               	movwf	??_vsnprintf^(0+128)
  4914  2E23  086E               	movf	??_vsnprintf^(0+128),w
  4915  2E24  00EB               	movwf	vfprintf@ap^(0+128)
  4916  2E25  31A9  2175  31AD   	fcall	_vfprintf
  4917  2E28  0021               	movlb	1	; select bank1
  4918  2E29  0868               	movf	(?_vfprintf+1)^(0+128),w
  4919  2E2A  0022               	movlb	2	; select bank2
  4920  2E2B  00D8               	movwf	(vsnprintf@cnt+1)^(0+256)
  4921  2E2C  0021               	movlb	1	; select bank1
  4922  2E2D  0867               	movf	?_vfprintf^(0+128),w
  4923  2E2E  0022               	movlb	2	; select bank2
  4924  2E2F  00D7               	movwf	vsnprintf@cnt^(0+256)
  4925  2E30  0850               	movf	vsnprintf@n^(0+256),w
  4926  2E31  0451               	iorwf	(vsnprintf@n+1)^(0+256),w
  4927  2E32  1D03               	btfss	3,2
  4928  2E33  1BD8               	btfsc	(vsnprintf@cnt+1)^(0+256),7
  4929  2E34  2E5B               	goto	l8015
  4930  2E35  0850               	movf	vsnprintf@n^(0+256),w
  4931  2E36  3EFF               	addlw	255
  4932  2E37  0021               	movlb	1	; select bank1
  4933  2E38  00EE               	movwf	??_vsnprintf^(0+128)
  4934  2E39  30FF               	movlw	255
  4935  2E3A  0022               	movlb	2	; select bank2
  4936  2E3B  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  4937  2E3C  0021               	movlb	1	; select bank1
  4938  2E3D  00EF               	movwf	(??_vsnprintf+1)^(0+128)
  4939  2E3E  086F               	movf	(??_vsnprintf+1)^(0+128),w
  4940  2E3F  0022               	movlb	2	; select bank2
  4941  2E40  0258               	subwf	(vsnprintf@cnt+1)^(0+256),w
  4942  2E41  1D03               	skipz
  4943  2E42  2E47               	goto	u11805
  4944  2E43  0021               	movlb	1	; select bank1
  4945  2E44  086E               	movf	??_vsnprintf^(0+128),w
  4946  2E45  0022               	movlb	2	; select bank2
  4947  2E46  0257               	subwf	vsnprintf@cnt^(0+256),w
  4948  2E47                     u11805:	
  4949  2E47  1C03               	skipc
  4950  2E48  2E50               	goto	l8011
  4951  2E49  0850               	movf	vsnprintf@n^(0+256),w
  4952  2E4A  3EFF               	addlw	255
  4953  2E4B  00D5               	movwf	_vsnprintf$1645^(0+256)
  4954  2E4C  30FF               	movlw	255
  4955  2E4D  3D51               	addwfc	(vsnprintf@n+1)^(0+256),w
  4956  2E4E  00D6               	movwf	(_vsnprintf$1645+1)^(0+256)
  4957  2E4F  2E54               	goto	l8013
  4958  2E50                     l8011:	
  4959  2E50  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  4960  2E51  00D6               	movwf	(_vsnprintf$1645+1)^(0+256)
  4961  2E52  0857               	movf	vsnprintf@cnt^(0+256),w
  4962  2E53  00D5               	movwf	_vsnprintf$1645^(0+256)
  4963  2E54                     l8013:	
  4964  2E54  0855               	movf	_vsnprintf$1645^(0+256),w
  4965  2E55  074E               	addwf	vsnprintf@s^(0+256),w
  4966  2E56  0086               	movwf	6
  4967  2E57  0856               	movf	(_vsnprintf$1645+1)^(0+256),w
  4968  2E58  3D4F               	addwfc	(vsnprintf@s+1)^(0+256),w
  4969  2E59  0087               	movwf	7
  4970  2E5A  0181               	clrf	1
  4971  2E5B                     l8015:	
  4972  2E5B  0858               	movf	(vsnprintf@cnt+1)^(0+256),w
  4973  2E5C  00CF               	movwf	(?_vsnprintf+1)^(0+256)
  4974  2E5D  0857               	movf	vsnprintf@cnt^(0+256),w
  4975  2E5E  00CE               	movwf	?_vsnprintf^(0+256)
  4976  2E5F  0008               	return
  4977  2E60                     __end_of_vsnprintf:	
  4978                           
  4979                           	psect	text4
  4980  2975                     __ptext4:	
  4981 ;; *************** function _vfprintf *****************
  4982 ;; Defined at:
  4983 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;  fp              2   71[BANK1 ] PTR struct _IO_FILE
  4986 ;;		 -> vsnprintf@f(6), 
  4987 ;;  fmt             2   73[BANK1 ] PTR const unsigned char 
  4988 ;;		 -> STR_7(44), STR_6(42), STR_3(43), 
  4989 ;;  ap              1   75[BANK1 ] PTR PTR void 
  4990 ;;		 -> snprintf@ap(1), 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  cfmt            2   76[BANK1 ] PTR unsigned char 
  4993 ;;		 -> STR_7(44), STR_6(42), STR_3(43), 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  2   71[BANK1 ] int 
  4996 ;; Registers used:
  4997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5003 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5004 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5005 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5006 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5007 ;;Total ram usage:        9 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    7
  5010 ;; This function calls:
  5011 ;;		_vfpfcnvrt
  5012 ;; This function is called by:
  5013 ;;		_vsnprintf
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           
  5018                           ;psect for function _vfprintf
  5019  2975                     _vfprintf:	
  5020                           
  5021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5022                           
  5023                           ;incstack = 0
  5024                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5025  2975  0021               	movlb	1	; select bank1
  5026  2976  086A               	movf	(vfprintf@fmt+1)^(0+128),w
  5027  2977  00ED               	movwf	(vfprintf@cfmt+1)^(0+128)
  5028  2978  0869               	movf	vfprintf@fmt^(0+128),w
  5029  2979  00EC               	movwf	vfprintf@cfmt^(0+128)
  5030                           
  5031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5032  297A  0023               	movlb	3	; select bank3
  5033  297B  01BC               	clrf	_nout^(0+384)
  5034  297C  01BD               	clrf	(_nout+1)^(0+384)
  5035  297D                     l7947:	
  5036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5037                           
  5038                           
  5039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5040  297D  0021               	movlb	1	; select bank1
  5041  297E  086C               	movf	vfprintf@cfmt^(0+128),w
  5042  297F  0084               	movwf	4
  5043  2980  086D               	movf	(vfprintf@cfmt+1)^(0+128),w
  5044  2981  0085               	movwf	5
  5045  2982  0012               	moviw fsr0++
  5046  2983  1903               	btfsc	3,2
  5047  2984  29A1               	goto	l7949
  5048                           
  5049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5050  2985  0868               	movf	(vfprintf@fp+1)^(0+128),w
  5051  2986  00E4               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  5052  2987  0867               	movf	vfprintf@fp^(0+128),w
  5053  2988  00E3               	movwf	vfpfcnvrt@fp^(0+128)
  5054  2989  30EC               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5055  298A  0020               	movlb	0	; select bank0
  5056  298B  00EE               	movwf	??_vfprintf
  5057  298C  086E               	movf	??_vfprintf,w
  5058  298D  0021               	movlb	1	; select bank1
  5059  298E  00E5               	movwf	vfpfcnvrt@fmt^(0+128)
  5060  298F  086B               	movf	vfprintf@ap^(0+128),w
  5061  2990  0020               	movlb	0	; select bank0
  5062  2991  00EF               	movwf	??_vfprintf+1
  5063  2992  086F               	movf	??_vfprintf+1,w
  5064  2993  0021               	movlb	1	; select bank1
  5065  2994  00E6               	movwf	vfpfcnvrt@ap^(0+128)
  5066  2995  3193  23BD  31A9   	fcall	_vfpfcnvrt
  5067  2998  0021               	movlb	1	; select bank1
  5068  2999  0863               	movf	?_vfpfcnvrt^(0+128),w
  5069  299A  0023               	movlb	3	; select bank3
  5070  299B  07BC               	addwf	_nout^(0+384),f
  5071  299C  0021               	movlb	1	; select bank1
  5072  299D  0864               	movf	(?_vfpfcnvrt+1)^(0+128),w
  5073  299E  0023               	movlb	3	; select bank3
  5074  299F  3DBD               	addwfc	(_nout+1)^(0+384),f
  5075  29A0  297D               	goto	l7947
  5076  29A1                     l7949:	
  5077                           
  5078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5079  29A1  0023               	movlb	3	; select bank3
  5080  29A2  083D               	movf	(_nout+1)^(0+384),w
  5081  29A3  0021               	movlb	1	; select bank1
  5082  29A4  00E8               	movwf	(?_vfprintf+1)^(0+128)
  5083  29A5  0023               	movlb	3	; select bank3
  5084  29A6  083C               	movf	_nout^(0+384),w
  5085  29A7  0021               	movlb	1	; select bank1
  5086  29A8  00E7               	movwf	?_vfprintf^(0+128)
  5087  29A9  0008               	return
  5088  29AA                     __end_of_vfprintf:	
  5089                           
  5090                           	psect	text5
  5091  13BD                     __ptext5:	
  5092 ;; *************** function _vfpfcnvrt *****************
  5093 ;; Defined at:
  5094 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  fp              2   67[BANK1 ] PTR struct _IO_FILE
  5097 ;;		 -> vsnprintf@f(6), 
  5098 ;;  fmt             1   69[BANK1 ] PTR PTR unsigned char 
  5099 ;;		 -> vfprintf@cfmt(2), 
  5100 ;;  ap              1   70[BANK1 ] PTR PTR void 
  5101 ;;		 -> snprintf@ap(1), 
  5102 ;; Auto vars:     Size  Location     Type
  5103 ;;  llu             8   38[BANK2 ] unsigned long long 
  5104 ;;  ll              8   28[BANK2 ] long long 
  5105 ;;  f               4   24[BANK2 ] long long 
  5106 ;;  ct              3   21[BANK2 ] unsigned char [3]
  5107 ;;  done            2   13[BANK2 ] int 
  5108 ;;  i               2    0        int 
  5109 ;;  c               1   37[BANK2 ] unsigned char 
  5110 ;;  vp              1   36[BANK2 ] PTR void 
  5111 ;;		 -> ?_snprintf(2), 
  5112 ;;  cp              1   12[BANK2 ] PTR unsigned char 
  5113 ;;		 -> ?_snprintf(2), 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  2   67[BANK1 ] int 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5123 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5124 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5125 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5126 ;;      Totals:         0       0       4      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5127 ;;Total ram usage:       50 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:    6
  5130 ;; This function calls:
  5131 ;;		_atoi
  5132 ;;		_ctoa
  5133 ;;		_dtoa
  5134 ;;		_efgtoa
  5135 ;;		_fputc
  5136 ;;		_isdigit
  5137 ;;		_isupper
  5138 ;;		_otoa
  5139 ;;		_stoa
  5140 ;;		_strncmp
  5141 ;;		_tolower
  5142 ;;		_utoa
  5143 ;;		_xtoa
  5144 ;; This function is called by:
  5145 ;;		_vfprintf
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           
  5150                           ;psect for function _vfpfcnvrt
  5151  13BD                     _vfpfcnvrt:	
  5152                           
  5153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5154                           
  5155                           ;incstack = 0
  5156                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5157  13BD  0021               	movlb	1	; select bank1
  5158  13BE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5159  13BF  0086               	movwf	6
  5160  13C0  0187               	clrf	7
  5161  13C1  3F40               	moviw [0]fsr1
  5162  13C2  0022               	movlb	2	; select bank2
  5163  13C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5164  13C4  3F41               	moviw [1]fsr1
  5165  13C5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5166  13C6  0820               	movf	??_vfpfcnvrt^(0+256),w
  5167  13C7  0084               	movwf	4
  5168  13C8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5169  13C9  0085               	movwf	5
  5170  13CA  0012               	moviw fsr0++
  5171  13CB  3A25               	xorlw	37
  5172  13CC  1D03               	btfss	3,2
  5173  13CD  2DD2               	goto	L16
  5174                           
  5175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5176  13CE  0021               	movlb	1	; select bank1
  5177  13CF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5178  13D0  0086               	movwf	6
  5179  13D1  0187               	clrf	7
  5180  13D2  3001               	movlw	1
  5181  13D3  0781               	addwf	1,f
  5182  13D4  3141               	addfsr 1,1
  5183  13D5  1803               	skipnc
  5184  13D6  0A81               	incf	1,f
  5185                           
  5186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5187  13D7  0023               	movlb	3	; select bank3
  5188  13D8  01BE               	clrf	_width^(0+384)
  5189  13D9  01BF               	clrf	(_width+1)^(0+384)
  5190  13DA  01C2               	clrf	_flags^(0+384)
  5191  13DB  01C3               	clrf	(_flags+1)^(0+384)
  5192                           
  5193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5194  13DC  30FF               	movlw	255
  5195  13DD  00C0               	movwf	_prec^(0+384)
  5196  13DE  30FF               	movlw	255
  5197  13DF  00C1               	movwf	(_prec^(0+384)+1)
  5198                           
  5199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5200  13E0  0022               	movlb	2	; select bank2
  5201  13E1  01AD               	clrf	vfpfcnvrt@done^(0+256)
  5202  13E2  01AE               	clrf	(vfpfcnvrt@done+1)^(0+256)
  5203                           
  5204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5205  13E3  2C00               	goto	l7505
  5206  13E4                     l721:	
  5207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  5208                           
  5209                           
  5210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5211  13E4  0023               	movlb	3	; select bank3
  5212  13E5  1442               	bsf	_flags^(0+384),0
  5213  13E6                     l7489:	
  5214                           
  5215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5216  13E6  0021               	movlb	1	; select bank1
  5217  13E7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5218  13E8  0086               	movwf	6
  5219  13E9  0187               	clrf	7
  5220  13EA  3001               	movlw	1
  5221  13EB  0781               	addwf	1,f
  5222  13EC  3141               	addfsr 1,1
  5223  13ED  1803               	skipnc
  5224  13EE  0A81               	incf	1,f
  5225                           
  5226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5227  13EF  2C00               	goto	l7505
  5228  13F0                     l723:	
  5229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  5230                           
  5231                           
  5232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5233  13F0  0023               	movlb	3	; select bank3
  5234  13F1  14C2               	bsf	_flags^(0+384),1
  5235  13F2  2BE6               	goto	l7489
  5236  13F3                     l724:	
  5237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  5238                           
  5239                           
  5240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5241  13F3  0023               	movlb	3	; select bank3
  5242  13F4  1542               	bsf	_flags^(0+384),2
  5243  13F5  2BE6               	goto	l7489
  5244  13F6                     l725:	
  5245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  5246                           
  5247                           
  5248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5249  13F6  0023               	movlb	3	; select bank3
  5250  13F7  15C2               	bsf	_flags^(0+384),3
  5251  13F8  2BE6               	goto	l7489
  5252  13F9                     l726:	
  5253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  5254                           
  5255                           
  5256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  5257  13F9  0023               	movlb	3	; select bank3
  5258  13FA  1642               	bsf	_flags^(0+384),4
  5259  13FB  2BE6               	goto	l7489
  5260  13FC                     l7499:	
  5261                           
  5262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  5263  13FC  3001               	movlw	1
  5264  13FD  00AD               	movwf	vfpfcnvrt@done^(0+256)
  5265  13FE  3000               	movlw	0
  5266  13FF  00AE               	movwf	(vfpfcnvrt@done^(0+256)+1)
  5267  1400                     l7505:	
  5268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  5269                           
  5270                           
  5271                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5272  1400  0022               	movlb	2	; select bank2
  5273  1401  082D               	movf	vfpfcnvrt@done^(0+256),w
  5274  1402  042E               	iorwf	(vfpfcnvrt@done+1)^(0+256),w
  5275  1403  1D03               	btfss	3,2
  5276  1404  2C2C               	goto	l728
  5277  1405  0021               	movlb	1	; select bank1
  5278  1406  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5279  1407  0086               	movwf	6
  5280  1408  0187               	clrf	7
  5281  1409  3F40               	moviw [0]fsr1
  5282  140A  0022               	movlb	2	; select bank2
  5283  140B  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5284  140C  3F41               	moviw [1]fsr1
  5285  140D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5286  140E  0820               	movf	??_vfpfcnvrt^(0+256),w
  5287  140F  0084               	movwf	4
  5288  1410  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5289  1411  0085               	movwf	5
  5290  1412  0800               	movf	0,w	;code access
  5291  1413  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5292  1414  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5293                           
  5294                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5295                           ; Switch size 1, requested type "simple"
  5296                           ; Number of cases is 1, Range of values is 0 to 0
  5297                           ; switch strategies available:
  5298                           ; Name         Instructions Cycles
  5299                           ; simple_byte            4     3 (average)
  5300                           ; direct_byte            8     6 (fixed)
  5301                           ; jumptable            260     6 (fixed)
  5302                           ;	Chosen strategy is simple_byte
  5303  1415  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5304  1416  3A00               	xorlw	0	; case 0
  5305  1417  1903               	skipnz
  5306  1418  2C1A               	goto	l8235
  5307  1419  2BFC               	goto	l7499
  5308  141A                     l8235:	
  5309                           
  5310                           ; Switch size 1, requested type "simple"
  5311                           ; Number of cases is 5, Range of values is 32 to 48
  5312                           ; switch strategies available:
  5313                           ; Name         Instructions Cycles
  5314                           ; simple_byte           16     9 (average)
  5315                           ; direct_byte           43     9 (fixed)
  5316                           ; jumptable            263     9 (fixed)
  5317                           ;	Chosen strategy is simple_byte
  5318  141A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5319  141B  3A20               	xorlw	32	; case 32
  5320  141C  1903               	skipnz
  5321  141D  2BF6               	goto	l725
  5322  141E  3A03               	xorlw	3	; case 35
  5323  141F  1903               	skipnz
  5324  1420  2BF9               	goto	l726
  5325  1421  3A08               	xorlw	8	; case 43
  5326  1422  1903               	skipnz
  5327  1423  2BF3               	goto	l724
  5328  1424  3A06               	xorlw	6	; case 45
  5329  1425  1903               	skipnz
  5330  1426  2BE4               	goto	l721
  5331  1427  3A1D               	xorlw	29	; case 48
  5332  1428  1903               	skipnz
  5333  1429  2BF0               	goto	l723
  5334  142A  2BFC               	goto	l7499
  5335  142B  2C00               	goto	l7505
  5336  142C                     l728:	
  5337                           
  5338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  5339  142C  0023               	movlb	3	; select bank3
  5340  142D  1C42               	btfss	_flags^(0+384),0
  5341  142E  2C33               	goto	l7509
  5342                           
  5343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  5344  142F  30FD               	movlw	253
  5345  1430  05C2               	andwf	_flags^(0+384),f
  5346  1431  30FF               	movlw	255
  5347  1432  05C3               	andwf	(_flags+1)^(0+384),f
  5348  1433                     l7509:	
  5349                           
  5350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  5351  1433  0021               	movlb	1	; select bank1
  5352  1434  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5353  1435  0086               	movwf	6
  5354  1436  0187               	clrf	7
  5355  1437  3F40               	moviw [0]fsr1
  5356  1438  0022               	movlb	2	; select bank2
  5357  1439  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5358  143A  3F41               	moviw [1]fsr1
  5359  143B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5360  143C  0820               	movf	??_vfpfcnvrt^(0+256),w
  5361  143D  0084               	movwf	4
  5362  143E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5363  143F  0085               	movwf	5
  5364  1440  0012               	moviw fsr0++
  5365  1441  3A2A               	xorlw	42
  5366  1442  1D03               	btfss	3,2
  5367  1443  2C65               	goto	l7521
  5368                           
  5369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  5370  1444  0021               	movlb	1	; select bank1
  5371  1445  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5372  1446  0086               	movwf	6
  5373  1447  0187               	clrf	7
  5374  1448  3001               	movlw	1
  5375  1449  0781               	addwf	1,f
  5376  144A  3141               	addfsr 1,1
  5377  144B  1803               	skipnc
  5378  144C  0A81               	incf	1,f
  5379                           
  5380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5381  144D  0866               	movf	vfpfcnvrt@ap^(0+128),w
  5382  144E  0086               	movwf	6
  5383  144F  3001               	movlw	1	; select bank2/3
  5384  1450  0087               	movwf	7
  5385  1451  0801               	movf	1,w
  5386  1452  0084               	movwf	4
  5387  1453  3001               	movlw	1	; select bank2/3
  5388  1454  0085               	movwf	5
  5389  1455  3002               	movlw	2
  5390  1456  0781               	addwf	1,f
  5391  1457  3F00               	moviw [0]fsr0
  5392  1458  0023               	movlb	3	; select bank3
  5393  1459  00BE               	movwf	_width^(0+384)
  5394  145A  3F01               	moviw [1]fsr0
  5395  145B  00BF               	movwf	(_width+1)^(0+384)
  5396                           
  5397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  5398  145C  1FBF               	btfss	(_width+1)^(0+384),7
  5399  145D  2CA7               	goto	l7531
  5400                           
  5401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  5402  145E  1442               	bsf	_flags^(0+384),0
  5403                           
  5404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  5405  145F  09BE               	comf	_width^(0+384),f
  5406  1460  09BF               	comf	(_width+1)^(0+384),f
  5407  1461  0ABE               	incf	_width^(0+384),f
  5408  1462  1903               	skipnz
  5409  1463  0ABF               	incf	(_width+1)^(0+384),f
  5410  1464  2CA7               	goto	l7531
  5411  1465                     l7521:	
  5412                           
  5413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  5414  1465  0021               	movlb	1	; select bank1
  5415  1466  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5416  1467  0086               	movwf	6
  5417  1468  0187               	clrf	7
  5418  1469  3F40               	moviw [0]fsr1
  5419  146A  00F7               	movwf	atoi@s
  5420  146B  3F41               	moviw [1]fsr1
  5421  146C  00F8               	movwf	atoi@s+1
  5422  146D  31A0  205E  3193   	fcall	_atoi
  5423  1470  0878               	movf	?_atoi+1,w
  5424  1471  0023               	movlb	3	; select bank3
  5425  1472  00BF               	movwf	(_width+1)^(0+384)
  5426  1473  0877               	movf	?_atoi,w
  5427  1474  00BE               	movwf	_width^(0+384)
  5428                           
  5429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5430  1475  2C7F               	goto	l7525
  5431  1476                     l7523:	
  5432                           
  5433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  5434  1476  0021               	movlb	1	; select bank1
  5435  1477  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5436  1478  0086               	movwf	6
  5437  1479  0187               	clrf	7
  5438  147A  3001               	movlw	1
  5439  147B  0781               	addwf	1,f
  5440  147C  3141               	addfsr 1,1
  5441  147D  1803               	skipnc
  5442  147E  0A81               	incf	1,f
  5443  147F                     l7525:	
  5444  147F  0021               	movlb	1	; select bank1
  5445  1480  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5446  1481  0086               	movwf	6
  5447  1482  0187               	clrf	7
  5448  1483  3F40               	moviw [0]fsr1
  5449  1484  0022               	movlb	2	; select bank2
  5450  1485  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5451  1486  3F41               	moviw [1]fsr1
  5452  1487  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5453  1488  0820               	movf	??_vfpfcnvrt^(0+256),w
  5454  1489  0084               	movwf	4
  5455  148A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5456  148B  0085               	movwf	5
  5457  148C  0800               	movf	0,w	;code access
  5458  148D  3ED0               	addlw	208
  5459  148E  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5460  148F  30FF               	movlw	255
  5461  1490  1803               	skipnc
  5462  1491  3000               	movlw	0
  5463  1492  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  5464  1493  3000               	movlw	0
  5465  1494  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  5466  1495  300A               	movlw	10
  5467  1496  1903               	skipnz
  5468  1497  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  5469  1498  1803               	btfsc	3,0
  5470  1499  2C9C               	goto	u11170
  5471  149A  3001               	movlw	1
  5472  149B  2C9D               	goto	u11180
  5473  149C                     u11170:	
  5474  149C  3000               	movlw	0
  5475  149D                     u11180:	
  5476  149D  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5477  149E  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  5478  149F  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5479  14A0  00AF               	movwf	_vfpfcnvrt$1016^(0+256)
  5480  14A1  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  5481  14A2  00B0               	movwf	(_vfpfcnvrt$1016+1)^(0+256)
  5482  14A3  082F               	movf	_vfpfcnvrt$1016^(0+256),w
  5483  14A4  0430               	iorwf	(_vfpfcnvrt$1016+1)^(0+256),w
  5484  14A5  1D03               	btfss	3,2
  5485  14A6  2C76               	goto	l7523
  5486  14A7                     l7531:	
  5487                           
  5488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  5489  14A7  0021               	movlb	1	; select bank1
  5490  14A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5491  14A9  0086               	movwf	6
  5492  14AA  0187               	clrf	7
  5493  14AB  3F40               	moviw [0]fsr1
  5494  14AC  0022               	movlb	2	; select bank2
  5495  14AD  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5496  14AE  3F41               	moviw [1]fsr1
  5497  14AF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5498  14B0  0820               	movf	??_vfpfcnvrt^(0+256),w
  5499  14B1  0084               	movwf	4
  5500  14B2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5501  14B3  0085               	movwf	5
  5502  14B4  0012               	moviw fsr0++
  5503  14B5  3A2E               	xorlw	46
  5504  14B6  1D03               	btfss	3,2
  5505  14B7  2D2F               	goto	l7553
  5506                           
  5507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  5508  14B8  0023               	movlb	3	; select bank3
  5509  14B9  01C0               	clrf	_prec^(0+384)
  5510  14BA  01C1               	clrf	(_prec+1)^(0+384)
  5511                           
  5512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  5513  14BB  0021               	movlb	1	; select bank1
  5514  14BC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5515  14BD  0086               	movwf	6
  5516  14BE  0187               	clrf	7
  5517  14BF  3001               	movlw	1
  5518  14C0  0781               	addwf	1,f
  5519  14C1  3141               	addfsr 1,1
  5520  14C2  1803               	skipnc
  5521  14C3  0A81               	incf	1,f
  5522                           
  5523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  5524  14C4  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5525  14C5  0086               	movwf	6
  5526  14C6  0187               	clrf	7
  5527  14C7  3F40               	moviw [0]fsr1
  5528  14C8  0022               	movlb	2	; select bank2
  5529  14C9  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5530  14CA  3F41               	moviw [1]fsr1
  5531  14CB  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5532  14CC  0820               	movf	??_vfpfcnvrt^(0+256),w
  5533  14CD  0084               	movwf	4
  5534  14CE  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5535  14CF  0085               	movwf	5
  5536  14D0  0012               	moviw fsr0++
  5537  14D1  3A2A               	xorlw	42
  5538  14D2  1D03               	btfss	3,2
  5539  14D3  2CED               	goto	l7543
  5540                           
  5541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  5542  14D4  0021               	movlb	1	; select bank1
  5543  14D5  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5544  14D6  0086               	movwf	6
  5545  14D7  0187               	clrf	7
  5546  14D8  3001               	movlw	1
  5547  14D9  0781               	addwf	1,f
  5548  14DA  3141               	addfsr 1,1
  5549  14DB  1803               	skipnc
  5550  14DC  0A81               	incf	1,f
  5551                           
  5552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5553  14DD  0866               	movf	vfpfcnvrt@ap^(0+128),w
  5554  14DE  0086               	movwf	6
  5555  14DF  3001               	movlw	1	; select bank2/3
  5556  14E0  0087               	movwf	7
  5557  14E1  0801               	movf	1,w
  5558  14E2  0084               	movwf	4
  5559  14E3  3001               	movlw	1	; select bank2/3
  5560  14E4  0085               	movwf	5
  5561  14E5  3002               	movlw	2
  5562  14E6  0781               	addwf	1,f
  5563  14E7  3F00               	moviw [0]fsr0
  5564  14E8  0023               	movlb	3	; select bank3
  5565  14E9  00C0               	movwf	_prec^(0+384)
  5566  14EA  3F01               	moviw [1]fsr0
  5567  14EB  00C1               	movwf	(_prec+1)^(0+384)
  5568                           
  5569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  5570  14EC  2D2F               	goto	l7553
  5571  14ED                     l7543:	
  5572                           
  5573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  5574  14ED  0021               	movlb	1	; select bank1
  5575  14EE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5576  14EF  0086               	movwf	6
  5577  14F0  0187               	clrf	7
  5578  14F1  3F40               	moviw [0]fsr1
  5579  14F2  00F7               	movwf	atoi@s
  5580  14F3  3F41               	moviw [1]fsr1
  5581  14F4  00F8               	movwf	atoi@s+1
  5582  14F5  31A0  205E  3193   	fcall	_atoi
  5583  14F8  0878               	movf	?_atoi+1,w
  5584  14F9  0023               	movlb	3	; select bank3
  5585  14FA  00C1               	movwf	(_prec+1)^(0+384)
  5586  14FB  0877               	movf	?_atoi,w
  5587  14FC  00C0               	movwf	_prec^(0+384)
  5588                           
  5589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5590  14FD  2D07               	goto	l7547
  5591  14FE                     l7545:	
  5592                           
  5593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  5594  14FE  0021               	movlb	1	; select bank1
  5595  14FF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5596  1500  0086               	movwf	6
  5597  1501  0187               	clrf	7
  5598  1502  3001               	movlw	1
  5599  1503  0781               	addwf	1,f
  5600  1504  3141               	addfsr 1,1
  5601  1505  1803               	skipnc
  5602  1506  0A81               	incf	1,f
  5603  1507                     l7547:	
  5604  1507  0021               	movlb	1	; select bank1
  5605  1508  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5606  1509  0086               	movwf	6
  5607  150A  0187               	clrf	7
  5608  150B  3F40               	moviw [0]fsr1
  5609  150C  0022               	movlb	2	; select bank2
  5610  150D  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5611  150E  3F41               	moviw [1]fsr1
  5612  150F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5613  1510  0820               	movf	??_vfpfcnvrt^(0+256),w
  5614  1511  0084               	movwf	4
  5615  1512  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5616  1513  0085               	movwf	5
  5617  1514  0800               	movf	0,w	;code access
  5618  1515  3ED0               	addlw	208
  5619  1516  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5620  1517  30FF               	movlw	255
  5621  1518  1803               	skipnc
  5622  1519  3000               	movlw	0
  5623  151A  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  5624  151B  3000               	movlw	0
  5625  151C  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  5626  151D  300A               	movlw	10
  5627  151E  1903               	skipnz
  5628  151F  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  5629  1520  1803               	btfsc	3,0
  5630  1521  2D24               	goto	u11220
  5631  1522  3001               	movlw	1
  5632  1523  2D25               	goto	u11230
  5633  1524                     u11220:	
  5634  1524  3000               	movlw	0
  5635  1525                     u11230:	
  5636  1525  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5637  1526  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  5638  1527  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5639  1528  00B1               	movwf	_vfpfcnvrt$1017^(0+256)
  5640  1529  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  5641  152A  00B2               	movwf	(_vfpfcnvrt$1017+1)^(0+256)
  5642  152B  0831               	movf	_vfpfcnvrt$1017^(0+256),w
  5643  152C  0432               	iorwf	(_vfpfcnvrt$1017+1)^(0+256),w
  5644  152D  1D03               	btfss	3,2
  5645  152E  2CFE               	goto	l7545
  5646  152F                     l7553:	
  5647                           
  5648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  5649  152F  0021               	movlb	1	; select bank1
  5650  1530  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5651  1531  0086               	movwf	6
  5652  1532  0187               	clrf	7
  5653  1533  3F40               	moviw [0]fsr1
  5654  1534  0022               	movlb	2	; select bank2
  5655  1535  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5656  1536  3F41               	moviw [1]fsr1
  5657  1537  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5658  1538  0820               	movf	??_vfpfcnvrt^(0+256),w
  5659  1539  0084               	movwf	4
  5660  153A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5661  153B  0085               	movwf	5
  5662  153C  0800               	movf	0,w	;code access
  5663  153D  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5664  153E  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5665  153F  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5666  1540  00F7               	movwf	tolower@c
  5667  1541  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5668  1542  00F8               	movwf	tolower@c+1
  5669  1543  31A8  2084  3193   	fcall	_tolower
  5670  1546  0877               	movf	?_tolower,w
  5671  1547  0022               	movlb	2	; select bank2
  5672  1548  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5673  1549  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5674  154A  00B5               	movwf	vfpfcnvrt@ct^(0+256)
  5675                           
  5676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  5677  154B  0835               	movf	vfpfcnvrt@ct^(0+256),w
  5678  154C  1903               	btfsc	3,2
  5679  154D  2D8F               	goto	l7563
  5680                           
  5681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  5682  154E  0021               	movlb	1	; select bank1
  5683  154F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5684  1550  0086               	movwf	6
  5685  1551  0187               	clrf	7
  5686  1552  3F40               	moviw [0]fsr1
  5687  1553  0022               	movlb	2	; select bank2
  5688  1554  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5689  1555  3F41               	moviw [1]fsr1
  5690  1556  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5691  1557  3001               	movlw	1
  5692  1558  0720               	addwf	??_vfpfcnvrt^(0+256),w
  5693  1559  0084               	movwf	4
  5694  155A  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  5695  155B  1803               	skipnc
  5696  155C  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  5697  155D  0085               	movwf	5
  5698  155E  0800               	movf	0,w	;code access
  5699  155F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5700  1560  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5701  1561  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5702  1562  00F7               	movwf	tolower@c
  5703  1563  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5704  1564  00F8               	movwf	tolower@c+1
  5705  1565  31A8  2084  3193   	fcall	_tolower
  5706  1568  0877               	movf	?_tolower,w
  5707  1569  0022               	movlb	2	; select bank2
  5708  156A  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5709  156B  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5710  156C  00B6               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  5711                           
  5712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  5713  156D  0836               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  5714  156E  1903               	btfsc	3,2
  5715  156F  2D8F               	goto	l7563
  5716                           
  5717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  5718  1570  0021               	movlb	1	; select bank1
  5719  1571  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5720  1572  0086               	movwf	6
  5721  1573  0187               	clrf	7
  5722  1574  3F40               	moviw [0]fsr1
  5723  1575  0022               	movlb	2	; select bank2
  5724  1576  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5725  1577  3F41               	moviw [1]fsr1
  5726  1578  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5727  1579  3002               	movlw	2
  5728  157A  0720               	addwf	??_vfpfcnvrt^(0+256),w
  5729  157B  0084               	movwf	4
  5730  157C  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  5731  157D  1803               	skipnc
  5732  157E  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  5733  157F  0085               	movwf	5
  5734  1580  0800               	movf	0,w	;code access
  5735  1581  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  5736  1582  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  5737  1583  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  5738  1584  00F7               	movwf	tolower@c
  5739  1585  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  5740  1586  00F8               	movwf	tolower@c+1
  5741  1587  31A8  2084  3193   	fcall	_tolower
  5742  158A  0877               	movf	?_tolower,w
  5743  158B  0022               	movlb	2	; select bank2
  5744  158C  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  5745  158D  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  5746  158E  00B7               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  5747  158F                     l7563:	
  5748                           
  5749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  5750  158F  0021               	movlb	1	; select bank1
  5751  1590  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5752  1591  0086               	movwf	6
  5753  1592  0187               	clrf	7
  5754  1593  3F40               	moviw [0]fsr1
  5755  1594  0022               	movlb	2	; select bank2
  5756  1595  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5757  1596  3F41               	moviw [1]fsr1
  5758  1597  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  5759  1598  0820               	movf	??_vfpfcnvrt^(0+256),w
  5760  1599  0084               	movwf	4
  5761  159A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  5762  159B  0085               	movwf	5
  5763  159C  0012               	moviw fsr0++
  5764  159D  3A63               	xorlw	99
  5765  159E  3198  1D03         	btfss	3,2
  5766  15A0  2804               	goto	l7573
  5767                           
  5768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  5769  15A1  0021               	movlb	1	; select bank1
  5770  15A2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
  5771  15A3  0086               	movwf	6
  5772  15A4  0187               	clrf	7
  5773  15A5  3001               	movlw	1
  5774  15A6  0781               	addwf	1,f
  5775  15A7  3141               	addfsr 1,1
  5776  15A8  1803               	skipnc
  5777  15A9  0A81               	incf	1,f
  5778                           
  5779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  5780  15AA  0866               	movf	vfpfcnvrt@ap^(0+128),w
  5781  15AB  0086               	movwf	6
  5782  15AC  3001               	movlw	1	; select bank2/3
  5783  15AD  0087               	movwf	7
  5784  15AE  0801               	movf	1,w
  5785  15AF  0084               	movwf	4
  5786  15B0  3001               	movlw	1	; select bank2/3
  5787  15B1  0085               	movwf	5
  5788  15B2  3002               	movlw	2
  5789  15B3  0781               	addwf	1,f
  5790  15B4  0800               	movf	0,w
  5791  15B5  0022               	movlb	2	; select bank2
  5792  15B6  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5793  15B7  0820               	movf	??_vfpfcnvrt^(0+256),w
  5794  15B8  00C5               	movwf	vfpfcnvrt@c^(0+256)
  5795                           
  5796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  5797  15B9  0021               	movlb	1	; select bank1
  5798  15BA  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  5799  15BB  0020               	movlb	0	; select bank0
  5800  15BC  00B1               	movwf	ctoa@fp+1
  5801  15BD  0021               	movlb	1	; select bank1
  5802  15BE  0863               	movf	vfpfcnvrt@fp^(0+128),w
  5803  15BF  0020               	movlb	0	; select bank0
  5804  15C0  00B0               	movwf	ctoa@fp
  5805  15C1  0022               	movlb	2	; select bank2
  5806  15C2  0845               	movf	vfpfcnvrt@c^(0+256),w
  5807  15C3  00A0               	movwf	??_vfpfcnvrt^(0+256)
  5808  15C4  0820               	movf	??_vfpfcnvrt^(0+256),w
  5809  15C5  0020               	movlb	0	; select bank0
  5810  15C6  00B2               	movwf	ctoa@c
  5811  15C7  31A9  2144         	fcall	_ctoa
  5812  15C9  0020               	movlb	0	; select bank0
  5813  15CA  0831               	movf	?_ctoa+1,w
  5814  15CB  0021               	movlb	1	; select bank1
  5815  15CC  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
  5816  15CD  0020               	movlb	0	; select bank0
  5817  15CE  0830               	movf	?_ctoa,w
  5818  15CF  0021               	movlb	1	; select bank1
  5819  15D0  00E3               	movwf	?_vfpfcnvrt^(0+128)
  5820  15D1  0008               	return
  5821  15D2                     L16:	
  5822  15D2                     L15:	
  5823  15D2  318F  2FDA         	ljmp	l7929
  5824                           
  5825                           	psect	text6
  5826  1EA7                     __ptext6:	
  5827 ;; *************** function _xtoa *****************
  5828 ;; Defined at:
  5829 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  5832 ;;		 -> vsnprintf@f(6), 
  5833 ;;  d               8   18[BANK0 ] unsigned long long 
  5834 ;;  x               1   26[BANK0 ] unsigned char 
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;  n               8   43[BANK0 ] unsigned long long 
  5837 ;;  c               2   53[BANK0 ] int 
  5838 ;;  i               2   51[BANK0 ] int 
  5839 ;;  w               2   41[BANK0 ] int 
  5840 ;;  p               2   39[BANK0 ] int 
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  2   16[BANK0 ] int 
  5843 ;; Registers used:
  5844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5850 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5851 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5852 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5853 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5854 ;;Total ram usage:       39 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:    5
  5857 ;; This function calls:
  5858 ;;		_isalpha
  5859 ;;		_isupper
  5860 ;;		_pad
  5861 ;;		_toupper
  5862 ;; This function is called by:
  5863 ;;		_vfpfcnvrt
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           
  5868                           ;psect for function _xtoa
  5869  1EA7                     _xtoa:	
  5870                           
  5871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  5872                           
  5873                           ;incstack = 0
  5874                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5875  1EA7  0023               	movlb	3	; select bank3
  5876  1EA8  1BC1               	btfsc	(_prec+1)^(0+384),7
  5877  1EA9  2EAE               	goto	l687
  5878                           
  5879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  5880  1EAA  30FD               	movlw	253
  5881  1EAB  05C2               	andwf	_flags^(0+384),f
  5882  1EAC  30FF               	movlw	255
  5883  1EAD  05C3               	andwf	(_flags+1)^(0+384),f
  5884  1EAE                     l687:	
  5885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  5886                           
  5887                           
  5888                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  5889  1EAE  0841               	movf	(_prec+1)^(0+384),w
  5890  1EAF  3A80               	xorlw	128
  5891  1EB0  0020               	movlb	0	; select bank0
  5892  1EB1  00BB               	movwf	??_xtoa
  5893  1EB2  3080               	movlw	128
  5894  1EB3  023B               	subwf	??_xtoa,w
  5895  1EB4  1D03               	skipz
  5896  1EB5  2EB9               	goto	u10895
  5897  1EB6  3001               	movlw	1
  5898  1EB7  0023               	movlb	3	; select bank3
  5899  1EB8  0240               	subwf	_prec^(0+384),w
  5900  1EB9                     u10895:	
  5901  1EB9  1803               	skipnc
  5902  1EBA  2EC1               	goto	l7375
  5903  1EBB  3001               	movlw	1
  5904  1EBC  0020               	movlb	0	; select bank0
  5905  1EBD  00C7               	movwf	xtoa@p
  5906  1EBE  3000               	movlw	0
  5907  1EBF  00C8               	movwf	xtoa@p+1
  5908  1EC0  2EC9               	goto	l691
  5909  1EC1                     l7375:	
  5910  1EC1  0023               	movlb	3	; select bank3
  5911  1EC2  0841               	movf	(_prec+1)^(0+384),w
  5912  1EC3  0020               	movlb	0	; select bank0
  5913  1EC4  00C8               	movwf	xtoa@p+1
  5914  1EC5  0023               	movlb	3	; select bank3
  5915  1EC6  0840               	movf	_prec^(0+384),w
  5916  1EC7  0020               	movlb	0	; select bank0
  5917  1EC8  00C7               	movwf	xtoa@p
  5918  1EC9                     l691:	
  5919                           
  5920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  5921  1EC9  0023               	movlb	3	; select bank3
  5922  1ECA  083F               	movf	(_width+1)^(0+384),w
  5923  1ECB  0020               	movlb	0	; select bank0
  5924  1ECC  00CA               	movwf	xtoa@w+1
  5925  1ECD  0023               	movlb	3	; select bank3
  5926  1ECE  083E               	movf	_width^(0+384),w
  5927  1ECF  0020               	movlb	0	; select bank0
  5928  1ED0  00C9               	movwf	xtoa@w
  5929                           
  5930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  5931  1ED1  0023               	movlb	3	; select bank3
  5932  1ED2  1E42               	btfss	_flags^(0+384),4
  5933  1ED3  2ED9               	goto	l7381
  5934                           
  5935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  5936  1ED4  30FE               	movlw	254
  5937  1ED5  0020               	movlb	0	; select bank0
  5938  1ED6  07C9               	addwf	xtoa@w,f
  5939  1ED7  30FF               	movlw	255
  5940  1ED8  3DCA               	addwfc	xtoa@w+1,f
  5941  1ED9                     l7381:	
  5942                           
  5943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  5944  1ED9  0020               	movlb	0	; select bank0
  5945  1EDA  0832               	movf	xtoa@d,w
  5946  1EDB  00CB               	movwf	xtoa@n
  5947  1EDC  0833               	movf	xtoa@d+1,w
  5948  1EDD  00CC               	movwf	xtoa@n+1
  5949  1EDE  0834               	movf	xtoa@d+2,w
  5950  1EDF  00CD               	movwf	xtoa@n+2
  5951  1EE0  0835               	movf	xtoa@d+3,w
  5952  1EE1  00CE               	movwf	xtoa@n+3
  5953  1EE2  0836               	movf	xtoa@d+4,w
  5954  1EE3  00CF               	movwf	xtoa@n+4
  5955  1EE4  0837               	movf	xtoa@d+5,w
  5956  1EE5  00D0               	movwf	xtoa@n+5
  5957  1EE6  0838               	movf	xtoa@d+6,w
  5958  1EE7  00D1               	movwf	xtoa@n+6
  5959  1EE8  0839               	movf	xtoa@d+7,w
  5960  1EE9  00D2               	movwf	xtoa@n+7
  5961                           
  5962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  5963  1EEA  304F               	movlw	79
  5964  1EEB  00D3               	movwf	xtoa@i
  5965  1EEC  3000               	movlw	0
  5966  1EED  00D4               	movwf	xtoa@i+1
  5967                           
  5968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  5969  1EEE  0024               	movlb	4	; select bank4
  5970  1EEF  01EF               	clrf	(_dbuf^(0+512)+79)
  5971                           
  5972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5973  1EF0  2F9B               	goto	l7413
  5974  1EF1                     l7385:	
  5975                           
  5976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  5977  1EF1  30FF               	movlw	255
  5978  1EF2  0020               	movlb	0	; select bank0
  5979  1EF3  07D3               	addwf	xtoa@i,f
  5980  1EF4  30FF               	movlw	255
  5981  1EF5  3DD4               	addwfc	xtoa@i+1,f
  5982                           
  5983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  5984  1EF6  300F               	movlw	15
  5985  1EF7  054B               	andwf	xtoa@n,w
  5986  1EF8  00D5               	movwf	xtoa@c
  5987  1EF9  3000               	movlw	0
  5988  1EFA  054C               	andwf	xtoa@n+1,w
  5989  1EFB  00D6               	movwf	xtoa@c+1
  5990                           
  5991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  5992  1EFC  0856               	movf	xtoa@c+1,w
  5993  1EFD  3A80               	xorlw	128
  5994  1EFE  00BB               	movwf	??_xtoa
  5995  1EFF  3080               	movlw	128
  5996  1F00  023B               	subwf	??_xtoa,w
  5997  1F01  1D03               	skipz
  5998  1F02  2F05               	goto	u10915
  5999  1F03  300A               	movlw	10
  6000  1F04  0255               	subwf	xtoa@c,w
  6001  1F05                     u10915:	
  6002  1F05  1C03               	skipc
  6003  1F06  2F0B               	goto	l7389
  6004  1F07  0020               	movlb	0	; select bank0
  6005  1F08  0855               	movf	xtoa@c,w
  6006  1F09  3E57               	addlw	87
  6007  1F0A  2F0E               	goto	L2
  6008  1F0B                     l7389:	
  6009  1F0B  0020               	movlb	0	; select bank0
  6010  1F0C  0855               	movf	xtoa@c,w
  6011  1F0D  3E30               	addlw	48
  6012  1F0E                     L2:	
  6013  1F0E  00D5               	movwf	xtoa@c
  6014  1F0F  3000               	movlw	0
  6015  1F10  3D56               	addwfc	xtoa@c+1,w
  6016  1F11  00D6               	movwf	xtoa@c+1
  6017  1F12  083A               	movf	xtoa@x,w
  6018  1F13  3EBF               	addlw	191
  6019  1F14  00BB               	movwf	??_xtoa
  6020  1F15  30FF               	movlw	255
  6021  1F16  1803               	skipnc
  6022  1F17  3000               	movlw	0
  6023  1F18  00BC               	movwf	??_xtoa+1
  6024  1F19  3000               	movlw	0
  6025  1F1A  023C               	subwf	??_xtoa+1,w
  6026  1F1B  301A               	movlw	26
  6027  1F1C  1903               	skipnz
  6028  1F1D  023B               	subwf	??_xtoa,w
  6029  1F1E  1803               	btfsc	3,0
  6030  1F1F  2F22               	goto	u10920
  6031  1F20  3001               	movlw	1
  6032  1F21  2F23               	goto	u10930
  6033  1F22                     u10920:	
  6034  1F22  3000               	movlw	0
  6035  1F23                     u10930:	
  6036  1F23  00BD               	movwf	??_xtoa+2
  6037  1F24  01BE               	clrf	??_xtoa+3
  6038  1F25  083D               	movf	??_xtoa+2,w
  6039  1F26  00C3               	movwf	_xtoa$1001
  6040  1F27  083E               	movf	??_xtoa+3,w
  6041  1F28  00C4               	movwf	_xtoa$1001+1
  6042  1F29  0843               	movf	_xtoa$1001,w
  6043  1F2A  0444               	iorwf	_xtoa$1001+1,w
  6044  1F2B  1903               	btfsc	3,2
  6045  1F2C  2F59               	goto	l7405
  6046  1F2D  3020               	movlw	32
  6047  1F2E  0455               	iorwf	xtoa@c,w
  6048  1F2F  00BB               	movwf	??_xtoa
  6049  1F30  3000               	movlw	0
  6050  1F31  0456               	iorwf	xtoa@c+1,w
  6051  1F32  00BC               	movwf	??_xtoa+1
  6052  1F33  083B               	movf	??_xtoa,w
  6053  1F34  3E9F               	addlw	159
  6054  1F35  00BD               	movwf	??_xtoa+2
  6055  1F36  30FF               	movlw	255
  6056  1F37  3D3C               	addwfc	??_xtoa+1,w
  6057  1F38  00BE               	movwf	??_xtoa+3
  6058  1F39  3000               	movlw	0
  6059  1F3A  023E               	subwf	??_xtoa+3,w
  6060  1F3B  301A               	movlw	26
  6061  1F3C  1903               	skipnz
  6062  1F3D  023D               	subwf	??_xtoa+2,w
  6063  1F3E  1803               	btfsc	3,0
  6064  1F3F  2F42               	goto	u10950
  6065  1F40  3001               	movlw	1
  6066  1F41  2F43               	goto	u10960
  6067  1F42                     u10950:	
  6068  1F42  3000               	movlw	0
  6069  1F43                     u10960:	
  6070  1F43  00BF               	movwf	??_xtoa+4
  6071  1F44  01C0               	clrf	??_xtoa+5
  6072  1F45  083F               	movf	??_xtoa+4,w
  6073  1F46  00C5               	movwf	_xtoa$1002
  6074  1F47  0840               	movf	??_xtoa+5,w
  6075  1F48  00C6               	movwf	_xtoa$1002+1
  6076  1F49  0845               	movf	_xtoa$1002,w
  6077  1F4A  0446               	iorwf	_xtoa$1002+1,w
  6078  1F4B  1903               	btfsc	3,2
  6079  1F4C  2F59               	goto	l7405
  6080                           
  6081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6082  1F4D  0856               	movf	xtoa@c+1,w
  6083  1F4E  00F8               	movwf	toupper@c+1
  6084  1F4F  0855               	movf	xtoa@c,w
  6085  1F50  00F7               	movwf	toupper@c
  6086  1F51  31A8  20A6  319E   	fcall	_toupper
  6087  1F54  0878               	movf	?_toupper+1,w
  6088  1F55  0020               	movlb	0	; select bank0
  6089  1F56  00D6               	movwf	xtoa@c+1
  6090  1F57  0877               	movf	?_toupper,w
  6091  1F58  00D5               	movwf	xtoa@c
  6092  1F59                     l7405:	
  6093                           
  6094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6095  1F59  0855               	movf	xtoa@c,w
  6096  1F5A  00BB               	movwf	??_xtoa
  6097  1F5B  0853               	movf	xtoa@i,w
  6098  1F5C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6099  1F5D  0086               	movwf	6
  6100  1F5E  3002               	movlw	2	; select bank4/5
  6101  1F5F  0087               	movwf	7
  6102  1F60  083B               	movf	??_xtoa,w
  6103  1F61  0081               	movwf	1
  6104                           
  6105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6106  1F62  30FF               	movlw	255
  6107  1F63  07C7               	addwf	xtoa@p,f
  6108  1F64  30FF               	movlw	255
  6109  1F65  3DC8               	addwfc	xtoa@p+1,f
  6110                           
  6111                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6112  1F66  30FF               	movlw	255
  6113  1F67  07C9               	addwf	xtoa@w,f
  6114  1F68  30FF               	movlw	255
  6115  1F69  3DCA               	addwfc	xtoa@w+1,f
  6116                           
  6117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6118  1F6A  304B               	movlw	low xtoa@n
  6119  1F6B  0086               	movwf	6
  6120  1F6C  3000               	movlw	high xtoa@n
  6121  1F6D  0087               	movwf	7
  6122  1F6E  3F40               	moviw [0]fsr1
  6123  1F6F  00BB               	movwf	??_xtoa
  6124  1F70  3F41               	moviw [1]fsr1
  6125  1F71  00BC               	movwf	??_xtoa+1
  6126  1F72  3F42               	moviw [2]fsr1
  6127  1F73  00BD               	movwf	??_xtoa+2
  6128  1F74  3F43               	moviw [3]fsr1
  6129  1F75  00BE               	movwf	??_xtoa+3
  6130  1F76  3F44               	moviw [4]fsr1
  6131  1F77  00BF               	movwf	??_xtoa+4
  6132  1F78  3F45               	moviw [5]fsr1
  6133  1F79  00C0               	movwf	??_xtoa+5
  6134  1F7A  3F46               	moviw [6]fsr1
  6135  1F7B  00C1               	movwf	??_xtoa+6
  6136  1F7C  3F47               	moviw [7]fsr1
  6137  1F7D  00C2               	movwf	??_xtoa+7
  6138  1F7E  3004               	movlw	4
  6139  1F7F                     u10985:	
  6140  1F7F  0020               	movlb	0	; select bank0
  6141  1F80  36C2               	lsrf	??_xtoa+7,f
  6142  1F81  0CC1               	rrf	??_xtoa+6,f
  6143  1F82  0CC0               	rrf	??_xtoa+5,f
  6144  1F83  0CBF               	rrf	??_xtoa+4,f
  6145  1F84  0CBE               	rrf	??_xtoa+3,f
  6146  1F85  0CBD               	rrf	??_xtoa+2,f
  6147  1F86  0CBC               	rrf	??_xtoa+1,f
  6148  1F87  0CBB               	rrf	??_xtoa,f
  6149  1F88  0B89               	decfsz	9,f
  6150  1F89  2F7F               	goto	u10985
  6151  1F8A  0020               	movlb	0	; select bank0
  6152  1F8B  0842               	movf	??_xtoa+7,w
  6153  1F8C  00D2               	movwf	xtoa@n+7
  6154  1F8D  0841               	movf	??_xtoa+6,w
  6155  1F8E  00D1               	movwf	xtoa@n+6
  6156  1F8F  0840               	movf	??_xtoa+5,w
  6157  1F90  00D0               	movwf	xtoa@n+5
  6158  1F91  083F               	movf	??_xtoa+4,w
  6159  1F92  00CF               	movwf	xtoa@n+4
  6160  1F93  083E               	movf	??_xtoa+3,w
  6161  1F94  00CE               	movwf	xtoa@n+3
  6162  1F95  083D               	movf	??_xtoa+2,w
  6163  1F96  00CD               	movwf	xtoa@n+2
  6164  1F97  083C               	movf	??_xtoa+1,w
  6165  1F98  00CC               	movwf	xtoa@n+1
  6166  1F99  083B               	movf	??_xtoa,w
  6167  1F9A  00CB               	movwf	xtoa@n
  6168  1F9B                     l7413:	
  6169                           
  6170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6171  1F9B  0020               	movlb	0	; select bank0
  6172  1F9C  0854               	movf	xtoa@i+1,w
  6173  1F9D  3A80               	xorlw	128
  6174  1F9E  00BB               	movwf	??_xtoa
  6175  1F9F  3080               	movlw	128
  6176  1FA0  023B               	subwf	??_xtoa,w
  6177  1FA1  1D03               	skipz
  6178  1FA2  2FA5               	goto	u10995
  6179  1FA3  3002               	movlw	2
  6180  1FA4  0253               	subwf	xtoa@i,w
  6181  1FA5                     u10995:	
  6182  1FA5  1C03               	skipc
  6183  1FA6  2FCC               	goto	l712
  6184  1FA7  0020               	movlb	0	; select bank0
  6185  1FA8  084B               	movf	xtoa@n,w
  6186  1FA9  044C               	iorwf	xtoa@n+1,w
  6187  1FAA  044D               	iorwf	xtoa@n+2,w
  6188  1FAB  044E               	iorwf	xtoa@n+3,w
  6189  1FAC  044F               	iorwf	xtoa@n+4,w
  6190  1FAD  0450               	iorwf	xtoa@n+5,w
  6191  1FAE  0451               	iorwf	xtoa@n+6,w
  6192  1FAF  0452               	iorwf	xtoa@n+7,w
  6193  1FB0  1D03               	skipz
  6194  1FB1  2EF1               	goto	l7385
  6195  1FB2  0848               	movf	xtoa@p+1,w
  6196  1FB3  3A80               	xorlw	128
  6197  1FB4  00BB               	movwf	??_xtoa
  6198  1FB5  3080               	movlw	128
  6199  1FB6  023B               	subwf	??_xtoa,w
  6200  1FB7  1D03               	skipz
  6201  1FB8  2FBB               	goto	u11015
  6202  1FB9  3001               	movlw	1
  6203  1FBA  0247               	subwf	xtoa@p,w
  6204  1FBB                     u11015:	
  6205  1FBB  1803               	skipnc
  6206  1FBC  2EF1               	goto	l7385
  6207  1FBD  0020               	movlb	0	; select bank0
  6208  1FBE  084A               	movf	xtoa@w+1,w
  6209  1FBF  3A80               	xorlw	128
  6210  1FC0  00BB               	movwf	??_xtoa
  6211  1FC1  3080               	movlw	128
  6212  1FC2  023B               	subwf	??_xtoa,w
  6213  1FC3  1D03               	skipz
  6214  1FC4  2FC7               	goto	u11025
  6215  1FC5  3001               	movlw	1
  6216  1FC6  0249               	subwf	xtoa@w,w
  6217  1FC7                     u11025:	
  6218  1FC7  1C03               	skipc
  6219  1FC8  2FCC               	goto	l712
  6220  1FC9  0023               	movlb	3	; select bank3
  6221  1FCA  18C2               	btfsc	_flags^(0+384),1
  6222  1FCB  2EF1               	goto	l7385
  6223  1FCC                     l712:	
  6224                           
  6225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6226  1FCC  0023               	movlb	3	; select bank3
  6227  1FCD  1E42               	btfss	_flags^(0+384),4
  6228  1FCE  2FEA               	goto	l7429
  6229                           
  6230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6231  1FCF  30FF               	movlw	255
  6232  1FD0  0020               	movlb	0	; select bank0
  6233  1FD1  07D3               	addwf	xtoa@i,f
  6234  1FD2  30FF               	movlw	255
  6235  1FD3  3DD4               	addwfc	xtoa@i+1,f
  6236                           
  6237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6238  1FD4  083A               	movf	xtoa@x,w
  6239  1FD5  00BB               	movwf	??_xtoa
  6240  1FD6  0853               	movf	xtoa@i,w
  6241  1FD7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6242  1FD8  0086               	movwf	6
  6243  1FD9  3002               	movlw	2	; select bank4/5
  6244  1FDA  0087               	movwf	7
  6245  1FDB  083B               	movf	??_xtoa,w
  6246  1FDC  0081               	movwf	1
  6247                           
  6248                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6249  1FDD  30FF               	movlw	255
  6250  1FDE  07D3               	addwf	xtoa@i,f
  6251  1FDF  30FF               	movlw	255
  6252  1FE0  3DD4               	addwfc	xtoa@i+1,f
  6253                           
  6254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6255  1FE1  3030               	movlw	48
  6256  1FE2  00BB               	movwf	??_xtoa
  6257  1FE3  0853               	movf	xtoa@i,w
  6258  1FE4  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6259  1FE5  0086               	movwf	6
  6260  1FE6  3002               	movlw	2	; select bank4/5
  6261  1FE7  0087               	movwf	7
  6262  1FE8  083B               	movf	??_xtoa,w
  6263  1FE9  0081               	movwf	1
  6264  1FEA                     l7429:	
  6265                           
  6266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6267  1FEA  0020               	movlb	0	; select bank0
  6268  1FEB  0831               	movf	xtoa@fp+1,w
  6269  1FEC  00A7               	movwf	pad@fp+1
  6270  1FED  0830               	movf	xtoa@fp,w
  6271  1FEE  00A6               	movwf	pad@fp
  6272  1FEF  0853               	movf	xtoa@i,w
  6273  1FF0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6274  1FF1  00BB               	movwf	??_xtoa
  6275  1FF2  083B               	movf	??_xtoa,w
  6276  1FF3  00A8               	movwf	pad@buf
  6277  1FF4  084A               	movf	xtoa@w+1,w
  6278  1FF5  00AA               	movwf	pad@p+1
  6279  1FF6  0849               	movf	xtoa@w,w
  6280  1FF7  00A9               	movwf	pad@p
  6281  1FF8  31AB  2302         	fcall	_pad
  6282  1FFA  0020               	movlb	0	; select bank0
  6283  1FFB  0827               	movf	?_pad+1,w
  6284  1FFC  00B1               	movwf	?_xtoa+1
  6285  1FFD  0826               	movf	?_pad,w
  6286  1FFE  00B0               	movwf	?_xtoa
  6287  1FFF  0008               	return
  6288  2000                     __end_of_xtoa:	
  6289                           
  6290                           	psect	text7
  6291  28A6                     __ptext7:	
  6292 ;; *************** function _toupper *****************
  6293 ;; Defined at:
  6294 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  c               2    7[COMMON] int 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;		None
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  2    7[COMMON] int 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6310 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6311 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6312 ;;Total ram usage:        8 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    2
  6315 ;; This function calls:
  6316 ;;		_islower
  6317 ;; This function is called by:
  6318 ;;		_xtoa
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           
  6323                           ;psect for function _toupper
  6324  28A6                     _toupper:	
  6325                           
  6326                           ;incstack = 0
  6327                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6328  28A6  0877               	movf	toupper@c,w
  6329  28A7  3E9F               	addlw	159
  6330  28A8  0020               	movlb	0	; select bank0
  6331  28A9  00A0               	movwf	??_toupper
  6332  28AA  30FF               	movlw	255
  6333  28AB  3D78               	addwfc	toupper@c+1,w
  6334  28AC  00A1               	movwf	??_toupper+1
  6335  28AD  3000               	movlw	0
  6336  28AE  0221               	subwf	??_toupper+1,w
  6337  28AF  301A               	movlw	26
  6338  28B0  1903               	skipnz
  6339  28B1  0220               	subwf	??_toupper,w
  6340  28B2  1803               	btfsc	3,0
  6341  28B3  28B6               	goto	u9870
  6342  28B4  3001               	movlw	1
  6343  28B5  28B7               	goto	u9880
  6344  28B6                     u9870:	
  6345  28B6  3000               	movlw	0
  6346  28B7                     u9880:	
  6347  28B7  00A2               	movwf	??_toupper+2
  6348  28B8  01A3               	clrf	??_toupper+3
  6349  28B9  0822               	movf	??_toupper+2,w
  6350  28BA  00F9               	movwf	_toupper$1608
  6351  28BB  0823               	movf	??_toupper+3,w
  6352  28BC  00FA               	movwf	_toupper$1608+1
  6353  28BD  0879               	movf	_toupper$1608,w
  6354  28BE  047A               	iorwf	_toupper$1608+1,w
  6355  28BF  1903               	btfsc	3,2
  6356  28C0  0008               	return
  6357  28C1  305F               	movlw	95
  6358  28C2  0577               	andwf	toupper@c,w
  6359  28C3  00F7               	movwf	?_toupper
  6360  28C4  3000               	movlw	0
  6361  28C5  0578               	andwf	toupper@c+1,w
  6362  28C6  00F8               	movwf	?_toupper+1
  6363  28C7  0008               	return
  6364  28C8                     __end_of_toupper:	
  6365                           
  6366                           	psect	text8
  6367  07E9                     __ptext8:	
  6368 ;; *************** function _islower *****************
  6369 ;; Defined at:
  6370 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  6371 ;; Parameters:    Size  Location     Type
  6372 ;;  c               2    1[COMMON] int 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;		None
  6375 ;; Return value:  Size  Location     Type
  6376 ;;                  2    1[COMMON] int 
  6377 ;; Registers used:
  6378 ;;		wreg, status,2, status,0
  6379 ;; Tracked objects:
  6380 ;;		On entry : 0/0
  6381 ;;		On exit  : 0/0
  6382 ;;		Unchanged: 0/0
  6383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6386 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6387 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6388 ;;Total ram usage:        6 bytes
  6389 ;; Hardware stack levels used:    1
  6390 ;; Hardware stack levels required when called:    1
  6391 ;; This function calls:
  6392 ;;		Nothing
  6393 ;; This function is called by:
  6394 ;;		_toupper
  6395 ;; This function uses a non-reentrant model
  6396 ;;
  6397                           
  6398                           
  6399                           ;psect for function _islower
  6400  07E9                     _islower:	
  6401                           
  6402                           ;incstack = 0
  6403                           ; Regs used in _islower: [wreg+status,2+status,0]
  6404  07E9  0871               	movf	islower@c,w
  6405  07EA  3E9F               	addlw	159
  6406  07EB  00F3               	movwf	??_islower
  6407  07EC  30FF               	movlw	255
  6408  07ED  3D72               	addwfc	islower@c+1,w
  6409  07EE  00F4               	movwf	??_islower+1
  6410  07EF  3000               	movlw	0
  6411  07F0  0274               	subwf	??_islower+1,w
  6412  07F1  301A               	movlw	26
  6413  07F2  1903               	skipnz
  6414  07F3  0273               	subwf	??_islower,w
  6415  07F4  1803               	btfsc	3,0
  6416  07F5  2FF8               	goto	u9780
  6417  07F6  3001               	movlw	1
  6418  07F7  2FF9               	goto	u9790
  6419  07F8                     u9780:	
  6420  07F8  3000               	movlw	0
  6421  07F9                     u9790:	
  6422  07F9  00F5               	movwf	??_islower+2
  6423  07FA  01F6               	clrf	??_islower+3
  6424  07FB  0875               	movf	??_islower+2,w
  6425  07FC  00F1               	movwf	?_islower
  6426  07FD  0876               	movf	??_islower+3,w
  6427  07FE  00F2               	movwf	?_islower+1
  6428  07FF  0008               	return
  6429  0800                     __end_of_islower:	
  6430                           
  6431                           	psect	text9
  6432  37A6                     __ptext9:	
  6433 ;; *************** function _isalpha *****************
  6434 ;; Defined at:
  6435 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  c               2    1[COMMON] int 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  2    1[COMMON] int 
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6451 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6452 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6453 ;;Total ram usage:        8 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    1
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_xtoa
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           
  6464                           ;psect for function _isalpha
  6465  37A6                     _isalpha:	
  6466                           
  6467                           ;incstack = 0
  6468                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  6469  37A6  3020               	movlw	32
  6470  37A7  0471               	iorwf	isalpha@c,w
  6471  37A8  00F3               	movwf	??_isalpha
  6472  37A9  3000               	movlw	0
  6473  37AA  0472               	iorwf	isalpha@c+1,w
  6474  37AB  00F4               	movwf	??_isalpha+1
  6475  37AC  0873               	movf	??_isalpha,w
  6476  37AD  3E9F               	addlw	159
  6477  37AE  00F5               	movwf	??_isalpha+2
  6478  37AF  30FF               	movlw	255
  6479  37B0  3D74               	addwfc	??_isalpha+1,w
  6480  37B1  00F6               	movwf	??_isalpha+3
  6481  37B2  3000               	movlw	0
  6482  37B3  0276               	subwf	??_isalpha+3,w
  6483  37B4  301A               	movlw	26
  6484  37B5  1903               	skipnz
  6485  37B6  0275               	subwf	??_isalpha+2,w
  6486  37B7  1803               	btfsc	3,0
  6487  37B8  2FBB               	goto	u5530
  6488  37B9  3001               	movlw	1
  6489  37BA  2FBC               	goto	u5540
  6490  37BB                     u5530:	
  6491  37BB  3000               	movlw	0
  6492  37BC                     u5540:	
  6493  37BC  00F7               	movwf	??_isalpha+4
  6494  37BD  01F8               	clrf	??_isalpha+5
  6495  37BE  0877               	movf	??_isalpha+4,w
  6496  37BF  00F1               	movwf	?_isalpha
  6497  37C0  0878               	movf	??_isalpha+5,w
  6498  37C1  00F2               	movwf	?_isalpha+1
  6499  37C2  0008               	return
  6500  37C3                     __end_of_isalpha:	
  6501                           
  6502                           	psect	text10
  6503  271F                     __ptext10:	
  6504 ;; *************** function _utoa *****************
  6505 ;; Defined at:
  6506 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6507 ;; Parameters:    Size  Location     Type
  6508 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6509 ;;		 -> vsnprintf@f(6), 
  6510 ;;  d               8   18[BANK0 ] unsigned long long 
  6511 ;; Auto vars:     Size  Location     Type
  6512 ;;  n               8   31[BANK0 ] unsigned long long 
  6513 ;;  i               2   39[BANK0 ] int 
  6514 ;;  w               2   29[BANK0 ] int 
  6515 ;;  p               2   27[BANK0 ] int 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  2   16[BANK0 ] int 
  6518 ;; Registers used:
  6519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6525 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6526 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6527 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6528 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6529 ;;Total ram usage:       25 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    5
  6532 ;; This function calls:
  6533 ;;		___lodiv
  6534 ;;		___lomod
  6535 ;;		_pad
  6536 ;; This function is called by:
  6537 ;;		_vfpfcnvrt
  6538 ;; This function uses a non-reentrant model
  6539 ;;
  6540                           
  6541                           
  6542                           ;psect for function _utoa
  6543  271F                     _utoa:	
  6544                           
  6545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  6546                           
  6547                           ;incstack = 0
  6548                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6549  271F  0023               	movlb	3	; select bank3
  6550  2720  1BC1               	btfsc	(_prec+1)^(0+384),7
  6551  2721  2F26               	goto	l672
  6552                           
  6553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  6554  2722  30FD               	movlw	253
  6555  2723  05C2               	andwf	_flags^(0+384),f
  6556  2724  30FF               	movlw	255
  6557  2725  05C3               	andwf	(_flags+1)^(0+384),f
  6558  2726                     l672:	
  6559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  6560                           
  6561                           
  6562                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  6563  2726  0841               	movf	(_prec+1)^(0+384),w
  6564  2727  3A80               	xorlw	128
  6565  2728  0020               	movlb	0	; select bank0
  6566  2729  00BA               	movwf	??_utoa
  6567  272A  3080               	movlw	128
  6568  272B  023A               	subwf	??_utoa,w
  6569  272C  1D03               	skipz
  6570  272D  2F31               	goto	u10825
  6571  272E  3001               	movlw	1
  6572  272F  0023               	movlb	3	; select bank3
  6573  2730  0240               	subwf	_prec^(0+384),w
  6574  2731                     u10825:	
  6575  2731  1803               	skipnc
  6576  2732  2F39               	goto	l7339
  6577  2733  3001               	movlw	1
  6578  2734  0020               	movlb	0	; select bank0
  6579  2735  00BB               	movwf	utoa@p
  6580  2736  3000               	movlw	0
  6581  2737  00BC               	movwf	utoa@p+1
  6582  2738  2F41               	goto	l676
  6583  2739                     l7339:	
  6584  2739  0023               	movlb	3	; select bank3
  6585  273A  0841               	movf	(_prec+1)^(0+384),w
  6586  273B  0020               	movlb	0	; select bank0
  6587  273C  00BC               	movwf	utoa@p+1
  6588  273D  0023               	movlb	3	; select bank3
  6589  273E  0840               	movf	_prec^(0+384),w
  6590  273F  0020               	movlb	0	; select bank0
  6591  2740  00BB               	movwf	utoa@p
  6592  2741                     l676:	
  6593                           
  6594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  6595  2741  0023               	movlb	3	; select bank3
  6596  2742  083F               	movf	(_width+1)^(0+384),w
  6597  2743  0020               	movlb	0	; select bank0
  6598  2744  00BE               	movwf	utoa@w+1
  6599  2745  0023               	movlb	3	; select bank3
  6600  2746  083E               	movf	_width^(0+384),w
  6601  2747  0020               	movlb	0	; select bank0
  6602  2748  00BD               	movwf	utoa@w
  6603                           
  6604                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  6605  2749  0832               	movf	utoa@d,w
  6606  274A  00BF               	movwf	utoa@n
  6607  274B  0833               	movf	utoa@d+1,w
  6608  274C  00C0               	movwf	utoa@n+1
  6609  274D  0834               	movf	utoa@d+2,w
  6610  274E  00C1               	movwf	utoa@n+2
  6611  274F  0835               	movf	utoa@d+3,w
  6612  2750  00C2               	movwf	utoa@n+3
  6613  2751  0836               	movf	utoa@d+4,w
  6614  2752  00C3               	movwf	utoa@n+4
  6615  2753  0837               	movf	utoa@d+5,w
  6616  2754  00C4               	movwf	utoa@n+5
  6617  2755  0838               	movf	utoa@d+6,w
  6618  2756  00C5               	movwf	utoa@n+6
  6619  2757  0839               	movf	utoa@d+7,w
  6620  2758  00C6               	movwf	utoa@n+7
  6621                           
  6622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  6623  2759  304F               	movlw	79
  6624  275A  00C7               	movwf	utoa@i
  6625  275B  3000               	movlw	0
  6626  275C  00C8               	movwf	utoa@i+1
  6627                           
  6628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  6629  275D  0024               	movlb	4	; select bank4
  6630  275E  01EF               	clrf	(_dbuf^(0+512)+79)
  6631                           
  6632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6633  275F  2FE5               	goto	l7355
  6634  2760                     l7357:	
  6635  2760  083F               	movf	utoa@n,w
  6636  2761  0440               	iorwf	utoa@n+1,w
  6637  2762  0441               	iorwf	utoa@n+2,w
  6638  2763  0442               	iorwf	utoa@n+3,w
  6639  2764  0443               	iorwf	utoa@n+4,w
  6640  2765  0444               	iorwf	utoa@n+5,w
  6641  2766  0445               	iorwf	utoa@n+6,w
  6642  2767  0446               	iorwf	utoa@n+7,w
  6643  2768  1D03               	skipz
  6644  2769  2F84               	goto	l7345
  6645  276A  083C               	movf	utoa@p+1,w
  6646  276B  3A80               	xorlw	128
  6647  276C  00BA               	movwf	??_utoa
  6648  276D  3080               	movlw	128
  6649  276E  023A               	subwf	??_utoa,w
  6650  276F  1D03               	skipz
  6651  2770  2F73               	goto	u10855
  6652  2771  3001               	movlw	1
  6653  2772  023B               	subwf	utoa@p,w
  6654  2773                     u10855:	
  6655  2773  1803               	skipnc
  6656  2774  2F84               	goto	l7345
  6657  2775  0020               	movlb	0	; select bank0
  6658  2776  083E               	movf	utoa@w+1,w
  6659  2777  3A80               	xorlw	128
  6660  2778  00BA               	movwf	??_utoa
  6661  2779  3080               	movlw	128
  6662  277A  023A               	subwf	??_utoa,w
  6663  277B  1D03               	skipz
  6664  277C  2F7F               	goto	u10865
  6665  277D  3001               	movlw	1
  6666  277E  023D               	subwf	utoa@w,w
  6667  277F                     u10865:	
  6668  277F  1C03               	skipc
  6669  2780  2FEA               	goto	l7365
  6670  2781  0023               	movlb	3	; select bank3
  6671  2782  1CC2               	btfss	_flags^(0+384),1
  6672  2783  2FEA               	goto	l7365
  6673  2784                     l7345:	
  6674                           
  6675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  6676  2784  30FF               	movlw	255
  6677  2785  0020               	movlb	0	; select bank0
  6678  2786  07C7               	addwf	utoa@i,f
  6679  2787  30FF               	movlw	255
  6680  2788  3DC8               	addwfc	utoa@i+1,f
  6681                           
  6682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  6683  2789  300A               	movlw	10
  6684  278A  00A0               	movwf	___lomod@divisor
  6685  278B  01A1               	clrf	___lomod@divisor+1
  6686  278C  01A2               	clrf	___lomod@divisor+2
  6687  278D  01A3               	clrf	___lomod@divisor+3
  6688  278E  01A4               	clrf	___lomod@divisor+4
  6689  278F  01A5               	clrf	___lomod@divisor+5
  6690  2790  01A6               	clrf	___lomod@divisor+6
  6691  2791  01A7               	clrf	___lomod@divisor+7
  6692  2792  083F               	movf	utoa@n,w
  6693  2793  00A8               	movwf	___lomod@dividend
  6694  2794  0840               	movf	utoa@n+1,w
  6695  2795  00A9               	movwf	___lomod@dividend+1
  6696  2796  0841               	movf	utoa@n+2,w
  6697  2797  00AA               	movwf	___lomod@dividend+2
  6698  2798  0842               	movf	utoa@n+3,w
  6699  2799  00AB               	movwf	___lomod@dividend+3
  6700  279A  0843               	movf	utoa@n+4,w
  6701  279B  00AC               	movwf	___lomod@dividend+4
  6702  279C  0844               	movf	utoa@n+5,w
  6703  279D  00AD               	movwf	___lomod@dividend+5
  6704  279E  0845               	movf	utoa@n+6,w
  6705  279F  00AE               	movwf	___lomod@dividend+6
  6706  27A0  0846               	movf	utoa@n+7,w
  6707  27A1  00AF               	movwf	___lomod@dividend+7
  6708  27A2  31AC  240A  31A7   	fcall	___lomod
  6709  27A5  0020               	movlb	0	; select bank0
  6710  27A6  0820               	movf	?___lomod,w
  6711  27A7  3E30               	addlw	48
  6712  27A8  00BA               	movwf	??_utoa
  6713  27A9  0847               	movf	utoa@i,w
  6714  27AA  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6715  27AB  0086               	movwf	6
  6716  27AC  3002               	movlw	2	; select bank4/5
  6717  27AD  0087               	movwf	7
  6718  27AE  083A               	movf	??_utoa,w
  6719  27AF  0081               	movwf	1
  6720                           
  6721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  6722  27B0  30FF               	movlw	255
  6723  27B1  07BB               	addwf	utoa@p,f
  6724  27B2  30FF               	movlw	255
  6725  27B3  3DBC               	addwfc	utoa@p+1,f
  6726                           
  6727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  6728  27B4  30FF               	movlw	255
  6729  27B5  07BD               	addwf	utoa@w,f
  6730  27B6  30FF               	movlw	255
  6731  27B7  3DBE               	addwfc	utoa@w+1,f
  6732                           
  6733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  6734  27B8  300A               	movlw	10
  6735  27B9  00A0               	movwf	___lodiv@divisor
  6736  27BA  01A1               	clrf	___lodiv@divisor+1
  6737  27BB  01A2               	clrf	___lodiv@divisor+2
  6738  27BC  01A3               	clrf	___lodiv@divisor+3
  6739  27BD  01A4               	clrf	___lodiv@divisor+4
  6740  27BE  01A5               	clrf	___lodiv@divisor+5
  6741  27BF  01A6               	clrf	___lodiv@divisor+6
  6742  27C0  01A7               	clrf	___lodiv@divisor+7
  6743  27C1  083F               	movf	utoa@n,w
  6744  27C2  00A8               	movwf	___lodiv@dividend
  6745  27C3  0840               	movf	utoa@n+1,w
  6746  27C4  00A9               	movwf	___lodiv@dividend+1
  6747  27C5  0841               	movf	utoa@n+2,w
  6748  27C6  00AA               	movwf	___lodiv@dividend+2
  6749  27C7  0842               	movf	utoa@n+3,w
  6750  27C8  00AB               	movwf	___lodiv@dividend+3
  6751  27C9  0843               	movf	utoa@n+4,w
  6752  27CA  00AC               	movwf	___lodiv@dividend+4
  6753  27CB  0844               	movf	utoa@n+5,w
  6754  27CC  00AD               	movwf	___lodiv@dividend+5
  6755  27CD  0845               	movf	utoa@n+6,w
  6756  27CE  00AE               	movwf	___lodiv@dividend+6
  6757  27CF  0846               	movf	utoa@n+7,w
  6758  27D0  00AF               	movwf	___lodiv@dividend+7
  6759  27D1  31AD  2567  31A7   	fcall	___lodiv
  6760  27D4  0020               	movlb	0	; select bank0
  6761  27D5  0820               	movf	?___lodiv,w
  6762  27D6  00BF               	movwf	utoa@n
  6763  27D7  0821               	movf	?___lodiv+1,w
  6764  27D8  00C0               	movwf	utoa@n+1
  6765  27D9  0822               	movf	?___lodiv+2,w
  6766  27DA  00C1               	movwf	utoa@n+2
  6767  27DB  0823               	movf	?___lodiv+3,w
  6768  27DC  00C2               	movwf	utoa@n+3
  6769  27DD  0824               	movf	?___lodiv+4,w
  6770  27DE  00C3               	movwf	utoa@n+4
  6771  27DF  0825               	movf	?___lodiv+5,w
  6772  27E0  00C4               	movwf	utoa@n+5
  6773  27E1  0826               	movf	?___lodiv+6,w
  6774  27E2  00C5               	movwf	utoa@n+6
  6775  27E3  0827               	movf	?___lodiv+7,w
  6776  27E4  00C6               	movwf	utoa@n+7
  6777  27E5                     l7355:	
  6778                           
  6779                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6780  27E5  0020               	movlb	0	; select bank0
  6781  27E6  0847               	movf	utoa@i,w
  6782  27E7  0448               	iorwf	utoa@i+1,w
  6783  27E8  1D03               	btfss	3,2
  6784  27E9  2F60               	goto	l7357
  6785  27EA                     l7365:	
  6786                           
  6787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  6788  27EA  0020               	movlb	0	; select bank0
  6789  27EB  0831               	movf	utoa@fp+1,w
  6790  27EC  00A7               	movwf	pad@fp+1
  6791  27ED  0830               	movf	utoa@fp,w
  6792  27EE  00A6               	movwf	pad@fp
  6793  27EF  0847               	movf	utoa@i,w
  6794  27F0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6795  27F1  00BA               	movwf	??_utoa
  6796  27F2  083A               	movf	??_utoa,w
  6797  27F3  00A8               	movwf	pad@buf
  6798  27F4  083E               	movf	utoa@w+1,w
  6799  27F5  00AA               	movwf	pad@p+1
  6800  27F6  083D               	movf	utoa@w,w
  6801  27F7  00A9               	movwf	pad@p
  6802  27F8  31AB  2302         	fcall	_pad
  6803  27FA  0020               	movlb	0	; select bank0
  6804  27FB  0827               	movf	?_pad+1,w
  6805  27FC  00B1               	movwf	?_utoa+1
  6806  27FD  0826               	movf	?_pad,w
  6807  27FE  00B0               	movwf	?_utoa
  6808  27FF  0008               	return
  6809  2800                     __end_of_utoa:	
  6810                           
  6811                           	psect	text11
  6812  2C0A                     __ptext11:	
  6813 ;; *************** function ___lomod *****************
  6814 ;; Defined at:
  6815 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  divisor         8    0[BANK0 ] unsigned long long 
  6818 ;;  dividend        8    8[BANK0 ] unsigned long long 
  6819 ;; Auto vars:     Size  Location     Type
  6820 ;;  counter         1    2[COMMON] unsigned char 
  6821 ;; Return value:  Size  Location     Type
  6822 ;;                  8    0[BANK0 ] unsigned long long 
  6823 ;; Registers used:
  6824 ;;		wreg, status,2, status,0
  6825 ;; Tracked objects:
  6826 ;;		On entry : 0/0
  6827 ;;		On exit  : 0/0
  6828 ;;		Unchanged: 0/0
  6829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6830 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6832 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6833 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6834 ;;Total ram usage:       18 bytes
  6835 ;; Hardware stack levels used:    1
  6836 ;; Hardware stack levels required when called:    1
  6837 ;; This function calls:
  6838 ;;		Nothing
  6839 ;; This function is called by:
  6840 ;;		_utoa
  6841 ;; This function uses a non-reentrant model
  6842 ;;
  6843                           
  6844                           
  6845                           ;psect for function ___lomod
  6846  2C0A                     ___lomod:	
  6847                           
  6848                           ;incstack = 0
  6849                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  6850  2C0A  0020               	movlb	0	; select bank0
  6851  2C0B  0820               	movf	___lomod@divisor,w
  6852  2C0C  0421               	iorwf	___lomod@divisor+1,w
  6853  2C0D  0422               	iorwf	___lomod@divisor+2,w
  6854  2C0E  0423               	iorwf	___lomod@divisor+3,w
  6855  2C0F  0424               	iorwf	___lomod@divisor+4,w
  6856  2C10  0425               	iorwf	___lomod@divisor+5,w
  6857  2C11  0426               	iorwf	___lomod@divisor+6,w
  6858  2C12  0427               	iorwf	___lomod@divisor+7,w
  6859  2C13  1903               	skipnz
  6860  2C14  2C62               	goto	l1062
  6861  2C15  01F2               	clrf	___lomod@counter
  6862  2C16  0AF2               	incf	___lomod@counter,f
  6863  2C17                     l4707:	
  6864  2C17  1BA7               	btfsc	___lomod@divisor+7,7
  6865  2C18  2C26               	goto	l4709
  6866  2C19  35A0               	lslf	___lomod@divisor,f
  6867  2C1A  0DA1               	rlf	___lomod@divisor+1,f
  6868  2C1B  0DA2               	rlf	___lomod@divisor+2,f
  6869  2C1C  0DA3               	rlf	___lomod@divisor+3,f
  6870  2C1D  0DA4               	rlf	___lomod@divisor+4,f
  6871  2C1E  0DA5               	rlf	___lomod@divisor+5,f
  6872  2C1F  0DA6               	rlf	___lomod@divisor+6,f
  6873  2C20  0DA7               	rlf	___lomod@divisor+7,f
  6874  2C21  3001               	movlw	1
  6875  2C22  00F1               	movwf	??___lomod
  6876  2C23  0871               	movf	??___lomod,w
  6877  2C24  07F2               	addwf	___lomod@counter,f
  6878  2C25  2C17               	goto	l4707
  6879  2C26                     l4709:	
  6880  2C26  0827               	movf	___lomod@divisor+7,w
  6881  2C27  022F               	subwf	___lomod@dividend+7,w
  6882  2C28  1D03               	skipz
  6883  2C29  2C44               	goto	u6305
  6884  2C2A  0826               	movf	___lomod@divisor+6,w
  6885  2C2B  022E               	subwf	___lomod@dividend+6,w
  6886  2C2C  1D03               	skipz
  6887  2C2D  2C44               	goto	u6305
  6888  2C2E  0825               	movf	___lomod@divisor+5,w
  6889  2C2F  022D               	subwf	___lomod@dividend+5,w
  6890  2C30  1D03               	skipz
  6891  2C31  2C44               	goto	u6305
  6892  2C32  0824               	movf	___lomod@divisor+4,w
  6893  2C33  022C               	subwf	___lomod@dividend+4,w
  6894  2C34  1D03               	skipz
  6895  2C35  2C44               	goto	u6305
  6896  2C36  0823               	movf	___lomod@divisor+3,w
  6897  2C37  022B               	subwf	___lomod@dividend+3,w
  6898  2C38  1D03               	skipz
  6899  2C39  2C44               	goto	u6305
  6900  2C3A  0822               	movf	___lomod@divisor+2,w
  6901  2C3B  022A               	subwf	___lomod@dividend+2,w
  6902  2C3C  1D03               	skipz
  6903  2C3D  2C44               	goto	u6305
  6904  2C3E  0821               	movf	___lomod@divisor+1,w
  6905  2C3F  0229               	subwf	___lomod@dividend+1,w
  6906  2C40  1D03               	skipz
  6907  2C41  2C44               	goto	u6305
  6908  2C42  0820               	movf	___lomod@divisor,w
  6909  2C43  0228               	subwf	___lomod@dividend,w
  6910  2C44                     u6305:	
  6911  2C44  1C03               	skipc
  6912  2C45  2C56               	goto	l4713
  6913  2C46  0820               	movf	___lomod@divisor,w
  6914  2C47  02A8               	subwf	___lomod@dividend,f
  6915  2C48  0821               	movf	___lomod@divisor+1,w
  6916  2C49  3BA9               	subwfb	___lomod@dividend+1,f
  6917  2C4A  0822               	movf	___lomod@divisor+2,w
  6918  2C4B  3BAA               	subwfb	___lomod@dividend+2,f
  6919  2C4C  0823               	movf	___lomod@divisor+3,w
  6920  2C4D  3BAB               	subwfb	___lomod@dividend+3,f
  6921  2C4E  0824               	movf	___lomod@divisor+4,w
  6922  2C4F  3BAC               	subwfb	___lomod@dividend+4,f
  6923  2C50  0825               	movf	___lomod@divisor+5,w
  6924  2C51  3BAD               	subwfb	___lomod@dividend+5,f
  6925  2C52  0826               	movf	___lomod@divisor+6,w
  6926  2C53  3BAE               	subwfb	___lomod@dividend+6,f
  6927  2C54  0827               	movf	___lomod@divisor+7,w
  6928  2C55  3BAF               	subwfb	___lomod@dividend+7,f
  6929  2C56                     l4713:	
  6930  2C56  36A7               	lsrf	___lomod@divisor+7,f
  6931  2C57  0CA6               	rrf	___lomod@divisor+6,f
  6932  2C58  0CA5               	rrf	___lomod@divisor+5,f
  6933  2C59  0CA4               	rrf	___lomod@divisor+4,f
  6934  2C5A  0CA3               	rrf	___lomod@divisor+3,f
  6935  2C5B  0CA2               	rrf	___lomod@divisor+2,f
  6936  2C5C  0CA1               	rrf	___lomod@divisor+1,f
  6937  2C5D  0CA0               	rrf	___lomod@divisor,f
  6938  2C5E  3001               	movlw	1
  6939  2C5F  02F2               	subwf	___lomod@counter,f
  6940  2C60  1D03               	btfss	3,2
  6941  2C61  2C26               	goto	l4709
  6942  2C62                     l1062:	
  6943  2C62  0828               	movf	___lomod@dividend,w
  6944  2C63  00A0               	movwf	?___lomod
  6945  2C64  0829               	movf	___lomod@dividend+1,w
  6946  2C65  00A1               	movwf	?___lomod+1
  6947  2C66  082A               	movf	___lomod@dividend+2,w
  6948  2C67  00A2               	movwf	?___lomod+2
  6949  2C68  082B               	movf	___lomod@dividend+3,w
  6950  2C69  00A3               	movwf	?___lomod+3
  6951  2C6A  082C               	movf	___lomod@dividend+4,w
  6952  2C6B  00A4               	movwf	?___lomod+4
  6953  2C6C  082D               	movf	___lomod@dividend+5,w
  6954  2C6D  00A5               	movwf	?___lomod+5
  6955  2C6E  082E               	movf	___lomod@dividend+6,w
  6956  2C6F  00A6               	movwf	?___lomod+6
  6957  2C70  082F               	movf	___lomod@dividend+7,w
  6958  2C71  00A7               	movwf	?___lomod+7
  6959  2C72  0008               	return
  6960  2C73                     __end_of___lomod:	
  6961                           
  6962                           	psect	text12
  6963  2D67                     __ptext12:	
  6964 ;; *************** function ___lodiv *****************
  6965 ;; Defined at:
  6966 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;  divisor         8    0[BANK0 ] unsigned long long 
  6969 ;;  dividend        8    8[BANK0 ] unsigned long long 
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;  quotient        8    2[COMMON] unsigned long long 
  6972 ;;  counter         1   10[COMMON] unsigned char 
  6973 ;; Return value:  Size  Location     Type
  6974 ;;                  8    0[BANK0 ] unsigned long long 
  6975 ;; Registers used:
  6976 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6977 ;; Tracked objects:
  6978 ;;		On entry : 0/0
  6979 ;;		On exit  : 0/0
  6980 ;;		Unchanged: 0/0
  6981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6982 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6983 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6985 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6986 ;;Total ram usage:       26 bytes
  6987 ;; Hardware stack levels used:    1
  6988 ;; Hardware stack levels required when called:    1
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_utoa
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           
  6997                           ;psect for function ___lodiv
  6998  2D67                     ___lodiv:	
  6999                           
  7000                           ;incstack = 0
  7001                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7002  2D67  3072               	movlw	low ___lodiv@quotient
  7003  2D68  0086               	movwf	6
  7004  2D69  3000               	movlw	high ___lodiv@quotient
  7005  2D6A  0087               	movwf	7
  7006  2D6B  3008               	movlw	8
  7007  2D6C  00F1               	movwf	??___lodiv
  7008  2D6D  3000               	movlw	0
  7009  2D6E                     u6230:	
  7010  2D6E  001E               	movwi fsr1++
  7011  2D6F  0BF1               	decfsz	??___lodiv,f
  7012  2D70  2D6E               	goto	u6230
  7013  2D71  0020               	movlb	0	; select bank0
  7014  2D72  0820               	movf	___lodiv@divisor,w
  7015  2D73  0421               	iorwf	___lodiv@divisor+1,w
  7016  2D74  0422               	iorwf	___lodiv@divisor+2,w
  7017  2D75  0423               	iorwf	___lodiv@divisor+3,w
  7018  2D76  0424               	iorwf	___lodiv@divisor+4,w
  7019  2D77  0425               	iorwf	___lodiv@divisor+5,w
  7020  2D78  0426               	iorwf	___lodiv@divisor+6,w
  7021  2D79  0427               	iorwf	___lodiv@divisor+7,w
  7022  2D7A  1903               	skipnz
  7023  2D7B  2DD2               	goto	l1052
  7024  2D7C  01FA               	clrf	___lodiv@counter
  7025  2D7D  0AFA               	incf	___lodiv@counter,f
  7026  2D7E                     l4687:	
  7027  2D7E  1BA7               	btfsc	___lodiv@divisor+7,7
  7028  2D7F  2D8D               	goto	l4689
  7029  2D80  35A0               	lslf	___lodiv@divisor,f
  7030  2D81  0DA1               	rlf	___lodiv@divisor+1,f
  7031  2D82  0DA2               	rlf	___lodiv@divisor+2,f
  7032  2D83  0DA3               	rlf	___lodiv@divisor+3,f
  7033  2D84  0DA4               	rlf	___lodiv@divisor+4,f
  7034  2D85  0DA5               	rlf	___lodiv@divisor+5,f
  7035  2D86  0DA6               	rlf	___lodiv@divisor+6,f
  7036  2D87  0DA7               	rlf	___lodiv@divisor+7,f
  7037  2D88  3001               	movlw	1
  7038  2D89  00F1               	movwf	??___lodiv
  7039  2D8A  0871               	movf	??___lodiv,w
  7040  2D8B  07FA               	addwf	___lodiv@counter,f
  7041  2D8C  2D7E               	goto	l4687
  7042  2D8D                     l4689:	
  7043  2D8D  35F2               	lslf	___lodiv@quotient,f
  7044  2D8E  0DF3               	rlf	___lodiv@quotient+1,f
  7045  2D8F  0DF4               	rlf	___lodiv@quotient+2,f
  7046  2D90  0DF5               	rlf	___lodiv@quotient+3,f
  7047  2D91  0DF6               	rlf	___lodiv@quotient+4,f
  7048  2D92  0DF7               	rlf	___lodiv@quotient+5,f
  7049  2D93  0DF8               	rlf	___lodiv@quotient+6,f
  7050  2D94  0DF9               	rlf	___lodiv@quotient+7,f
  7051  2D95  0827               	movf	___lodiv@divisor+7,w
  7052  2D96  022F               	subwf	___lodiv@dividend+7,w
  7053  2D97  1D03               	skipz
  7054  2D98  2DB3               	goto	u6265
  7055  2D99  0826               	movf	___lodiv@divisor+6,w
  7056  2D9A  022E               	subwf	___lodiv@dividend+6,w
  7057  2D9B  1D03               	skipz
  7058  2D9C  2DB3               	goto	u6265
  7059  2D9D  0825               	movf	___lodiv@divisor+5,w
  7060  2D9E  022D               	subwf	___lodiv@dividend+5,w
  7061  2D9F  1D03               	skipz
  7062  2DA0  2DB3               	goto	u6265
  7063  2DA1  0824               	movf	___lodiv@divisor+4,w
  7064  2DA2  022C               	subwf	___lodiv@dividend+4,w
  7065  2DA3  1D03               	skipz
  7066  2DA4  2DB3               	goto	u6265
  7067  2DA5  0823               	movf	___lodiv@divisor+3,w
  7068  2DA6  022B               	subwf	___lodiv@dividend+3,w
  7069  2DA7  1D03               	skipz
  7070  2DA8  2DB3               	goto	u6265
  7071  2DA9  0822               	movf	___lodiv@divisor+2,w
  7072  2DAA  022A               	subwf	___lodiv@dividend+2,w
  7073  2DAB  1D03               	skipz
  7074  2DAC  2DB3               	goto	u6265
  7075  2DAD  0821               	movf	___lodiv@divisor+1,w
  7076  2DAE  0229               	subwf	___lodiv@dividend+1,w
  7077  2DAF  1D03               	skipz
  7078  2DB0  2DB3               	goto	u6265
  7079  2DB1  0820               	movf	___lodiv@divisor,w
  7080  2DB2  0228               	subwf	___lodiv@dividend,w
  7081  2DB3                     u6265:	
  7082  2DB3  1C03               	skipc
  7083  2DB4  2DC6               	goto	l4697
  7084  2DB5  0820               	movf	___lodiv@divisor,w
  7085  2DB6  02A8               	subwf	___lodiv@dividend,f
  7086  2DB7  0821               	movf	___lodiv@divisor+1,w
  7087  2DB8  3BA9               	subwfb	___lodiv@dividend+1,f
  7088  2DB9  0822               	movf	___lodiv@divisor+2,w
  7089  2DBA  3BAA               	subwfb	___lodiv@dividend+2,f
  7090  2DBB  0823               	movf	___lodiv@divisor+3,w
  7091  2DBC  3BAB               	subwfb	___lodiv@dividend+3,f
  7092  2DBD  0824               	movf	___lodiv@divisor+4,w
  7093  2DBE  3BAC               	subwfb	___lodiv@dividend+4,f
  7094  2DBF  0825               	movf	___lodiv@divisor+5,w
  7095  2DC0  3BAD               	subwfb	___lodiv@dividend+5,f
  7096  2DC1  0826               	movf	___lodiv@divisor+6,w
  7097  2DC2  3BAE               	subwfb	___lodiv@dividend+6,f
  7098  2DC3  0827               	movf	___lodiv@divisor+7,w
  7099  2DC4  3BAF               	subwfb	___lodiv@dividend+7,f
  7100  2DC5  1472               	bsf	___lodiv@quotient,0
  7101  2DC6                     l4697:	
  7102  2DC6  36A7               	lsrf	___lodiv@divisor+7,f
  7103  2DC7  0CA6               	rrf	___lodiv@divisor+6,f
  7104  2DC8  0CA5               	rrf	___lodiv@divisor+5,f
  7105  2DC9  0CA4               	rrf	___lodiv@divisor+4,f
  7106  2DCA  0CA3               	rrf	___lodiv@divisor+3,f
  7107  2DCB  0CA2               	rrf	___lodiv@divisor+2,f
  7108  2DCC  0CA1               	rrf	___lodiv@divisor+1,f
  7109  2DCD  0CA0               	rrf	___lodiv@divisor,f
  7110  2DCE  3001               	movlw	1
  7111  2DCF  02FA               	subwf	___lodiv@counter,f
  7112  2DD0  1D03               	btfss	3,2
  7113  2DD1  2D8D               	goto	l4689
  7114  2DD2                     l1052:	
  7115  2DD2  0872               	movf	___lodiv@quotient,w
  7116  2DD3  00A0               	movwf	?___lodiv
  7117  2DD4  0873               	movf	___lodiv@quotient+1,w
  7118  2DD5  00A1               	movwf	?___lodiv+1
  7119  2DD6  0874               	movf	___lodiv@quotient+2,w
  7120  2DD7  00A2               	movwf	?___lodiv+2
  7121  2DD8  0875               	movf	___lodiv@quotient+3,w
  7122  2DD9  00A3               	movwf	?___lodiv+3
  7123  2DDA  0876               	movf	___lodiv@quotient+4,w
  7124  2DDB  00A4               	movwf	?___lodiv+4
  7125  2DDC  0877               	movf	___lodiv@quotient+5,w
  7126  2DDD  00A5               	movwf	?___lodiv+5
  7127  2DDE  0878               	movf	___lodiv@quotient+6,w
  7128  2DDF  00A6               	movwf	?___lodiv+6
  7129  2DE0  0879               	movf	___lodiv@quotient+7,w
  7130  2DE1  00A7               	movwf	?___lodiv+7
  7131  2DE2  0008               	return
  7132  2DE3                     __end_of___lodiv:	
  7133                           
  7134                           	psect	text13
  7135  200C                     __ptext13:	
  7136 ;; *************** function _strncmp *****************
  7137 ;; Defined at:
  7138 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7139 ;; Parameters:    Size  Location     Type
  7140 ;;  _l              2    1[COMMON] PTR const unsigned char 
  7141 ;;		 -> vfpfcnvrt@ct(3), STR_7(44), STR_6(42), STR_3(43), 
  7142 ;;  _r              2    3[COMMON] PTR const unsigned char 
  7143 ;;		 -> STR_152(3), STR_148(3), STR_143(3), STR_139(3), 
  7144 ;;		 -> STR_134(3), STR_130(3), STR_125(4), STR_121(4), 
  7145 ;;		 -> STR_116(3), STR_111(3), STR_106(3), STR_101(4), 
  7146 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  7147 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  7148 ;;		 -> STR_56(3), STR_51(3), STR_47(3), STR_42(3), 
  7149 ;;		 -> STR_38(3), STR_33(3), STR_29(3), STR_24(4), 
  7150 ;;		 -> STR_20(4), 
  7151 ;;  n               2    5[COMMON] unsigned int 
  7152 ;; Auto vars:     Size  Location     Type
  7153 ;;  r               2   10[COMMON] PTR const unsigned char 
  7154 ;;		 -> STR_152(3), STR_148(3), STR_143(3), STR_139(3), 
  7155 ;;		 -> STR_134(3), STR_130(3), STR_125(4), STR_121(4), 
  7156 ;;		 -> STR_116(3), STR_111(3), STR_106(3), STR_101(4), 
  7157 ;;		 -> STR_96(3), STR_91(3), STR_86(3), STR_81(4), 
  7158 ;;		 -> STR_76(3), STR_71(3), STR_66(3), STR_61(4), 
  7159 ;;		 -> STR_56(3), STR_51(3), STR_47(3), STR_42(3), 
  7160 ;;		 -> STR_38(3), STR_33(3), STR_29(3), STR_24(4), 
  7161 ;;		 -> STR_20(4), 
  7162 ;;  l               2    8[COMMON] PTR const unsigned char 
  7163 ;;		 -> vfpfcnvrt@ct(3), STR_7(44), STR_6(42), STR_3(43), 
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  2    1[COMMON] int 
  7166 ;; Registers used:
  7167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7173 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7174 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7176 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7177 ;;Total ram usage:       11 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; Hardware stack levels required when called:    1
  7180 ;; This function calls:
  7181 ;;		Nothing
  7182 ;; This function is called by:
  7183 ;;		_vfpfcnvrt
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187                           
  7188                           ;psect for function _strncmp
  7189  200C                     _strncmp:	
  7190                           
  7191                           ;incstack = 0
  7192                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7193  200C  0872               	movf	strncmp@_l+1,w
  7194  200D  00F9               	movwf	strncmp@l+1
  7195  200E  0871               	movf	strncmp@_l,w
  7196  200F  00F8               	movwf	strncmp@l
  7197  2010  0874               	movf	strncmp@_r+1,w
  7198  2011  00FB               	movwf	strncmp@r+1
  7199  2012  0873               	movf	strncmp@_r,w
  7200  2013  00FA               	movwf	strncmp@r
  7201  2014  3001               	movlw	1
  7202  2015  02F5               	subwf	strncmp@n,f
  7203  2016  3000               	movlw	0
  7204  2017  3BF6               	subwfb	strncmp@n+1,f
  7205  2018  0A75               	incf	strncmp@n,w
  7206  2019  1D03               	skipz
  7207  201A  2846               	goto	l5627
  7208  201B  0A76               	incf	strncmp@n+1,w
  7209  201C  1D03               	btfss	3,2
  7210  201D  2846               	goto	l5627
  7211  201E  01F1               	clrf	?_strncmp
  7212  201F  01F2               	clrf	?_strncmp+1
  7213  2020  0008               	return
  7214  2021                     l5629:	
  7215  2021  087A               	movf	strncmp@r,w
  7216  2022  0084               	movwf	4
  7217  2023  087B               	movf	strncmp@r+1,w
  7218  2024  0085               	movwf	5
  7219  2025  0012               	moviw fsr0++
  7220  2026  1903               	btfsc	3,2
  7221  2027  284D               	goto	l5635
  7222  2028  0875               	movf	strncmp@n,w
  7223  2029  0476               	iorwf	strncmp@n+1,w
  7224  202A  1903               	btfsc	3,2
  7225  202B  284D               	goto	l5635
  7226  202C  087A               	movf	strncmp@r,w
  7227  202D  0084               	movwf	4
  7228  202E  087B               	movf	strncmp@r+1,w
  7229  202F  0085               	movwf	5
  7230  2030  0800               	movf	0,w	;code access
  7231  2031  00F7               	movwf	??_strncmp
  7232  2032  0878               	movf	strncmp@l,w
  7233  2033  0084               	movwf	4
  7234  2034  0879               	movf	strncmp@l+1,w
  7235  2035  0085               	movwf	5
  7236  2036  0800               	movf	0,w	;code access
  7237  2037  0677               	xorwf	??_strncmp,w
  7238  2038  1D03               	btfss	3,2
  7239  2039  284D               	goto	l5635
  7240  203A  3001               	movlw	1
  7241  203B  07F8               	addwf	strncmp@l,f
  7242  203C  3000               	movlw	0
  7243  203D  3DF9               	addwfc	strncmp@l+1,f
  7244  203E  3001               	movlw	1
  7245  203F  07FA               	addwf	strncmp@r,f
  7246  2040  3000               	movlw	0
  7247  2041  3DFB               	addwfc	strncmp@r+1,f
  7248  2042  3001               	movlw	1
  7249  2043  02F5               	subwf	strncmp@n,f
  7250  2044  3000               	movlw	0
  7251  2045  3BF6               	subwfb	strncmp@n+1,f
  7252  2046                     l5627:	
  7253  2046  0878               	movf	strncmp@l,w
  7254  2047  0084               	movwf	4
  7255  2048  0879               	movf	strncmp@l+1,w
  7256  2049  0085               	movwf	5
  7257  204A  0012               	moviw fsr0++
  7258  204B  1D03               	btfss	3,2
  7259  204C  2821               	goto	l5629
  7260  204D                     l5635:	
  7261  204D  0878               	movf	strncmp@l,w
  7262  204E  0084               	movwf	4
  7263  204F  0879               	movf	strncmp@l+1,w
  7264  2050  0085               	movwf	5
  7265  2051  0800               	movf	0,w	;code access
  7266  2052  00F7               	movwf	??_strncmp
  7267  2053  087A               	movf	strncmp@r,w
  7268  2054  0084               	movwf	4
  7269  2055  087B               	movf	strncmp@r+1,w
  7270  2056  0085               	movwf	5
  7271  2057  0800               	movf	0,w	;code access
  7272  2058  0277               	subwf	??_strncmp,w
  7273  2059  00F1               	movwf	?_strncmp
  7274  205A  01F2               	clrf	?_strncmp+1
  7275  205B  1C03               	skipc
  7276  205C  03F2               	decf	?_strncmp+1,f
  7277  205D  0008               	return
  7278  205E                     __end_of_strncmp:	
  7279                           
  7280                           	psect	text14
  7281  22FF                     __ptext14:	
  7282 ;; *************** function _stoa *****************
  7283 ;; Defined at:
  7284 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7287 ;;		 -> vsnprintf@f(6), 
  7288 ;;  s               1    2[BANK0 ] PTR unsigned char 
  7289 ;;		 -> ?_snprintf(2), 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  7292 ;;  l               2   18[BANK0 ] int 
  7293 ;;  p               2   16[BANK0 ] int 
  7294 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  7295 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  7296 ;;  w               2   12[BANK0 ] int 
  7297 ;;  i               2   10[BANK0 ] int 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  2    0[BANK0 ] int 
  7300 ;; Registers used:
  7301 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7307 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7308 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7309 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7310 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7311 ;;Total ram usage:       22 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    3
  7314 ;; This function calls:
  7315 ;;		_fputc
  7316 ;;		_strlen
  7317 ;; This function is called by:
  7318 ;;		_vfpfcnvrt
  7319 ;; This function uses a non-reentrant model
  7320 ;;
  7321                           
  7322                           
  7323                           ;psect for function _stoa
  7324  22FF                     _stoa:	
  7325                           
  7326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7327                           
  7328                           ;incstack = 0
  7329                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7330  22FF  30D4               	movlw	low stoa@F1174
  7331  2300  0086               	movwf	6
  7332  2301  3001               	movlw	high stoa@F1174
  7333  2302  0087               	movwf	7
  7334  2303  3023               	movlw	low stoa@nuls
  7335  2304  0084               	movwf	4
  7336  2305  3000               	movlw	high stoa@nuls
  7337  2306  0085               	movwf	5
  7338  2307  3007               	movlw	7
  7339  2308  00FA               	movwf	??_stoa
  7340  2309                     u10720:	
  7341  2309  0016               	moviw fsr1++
  7342  230A  001A               	movwi fsr0++
  7343  230B  0BFA               	decfsz	??_stoa,f
  7344  230C  2B09               	goto	u10720
  7345                           
  7346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  7347  230D  0020               	movlb	0	; select bank0
  7348  230E  0822               	movf	stoa@s,w
  7349  230F  00AE               	movwf	stoa@cp
  7350  2310  3001               	movlw	1
  7351  2311  00AF               	movwf	stoa@cp+1
  7352                           
  7353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  7354  2312  082E               	movf	stoa@cp,w
  7355  2313  042F               	iorwf	stoa@cp+1,w
  7356  2314  1D03               	btfss	3,2
  7357  2315  2B1A               	goto	l7291
  7358                           
  7359                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  7360  2316  3023               	movlw	low stoa@nuls
  7361  2317  00AE               	movwf	stoa@cp
  7362  2318  3000               	movlw	high stoa@nuls
  7363  2319  00AF               	movwf	stoa@cp+1
  7364  231A                     l7291:	
  7365                           
  7366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  7367  231A  082F               	movf	stoa@cp+1,w
  7368  231B  00F2               	movwf	strlen@s+1
  7369  231C  082E               	movf	stoa@cp,w
  7370  231D  00F1               	movwf	strlen@s
  7371  231E  31B6  26F8  31A2   	fcall	_strlen
  7372  2321  0872               	movf	?_strlen+1,w
  7373  2322  0020               	movlb	0	; select bank0
  7374  2323  00B3               	movwf	stoa@l+1
  7375  2324  0871               	movf	?_strlen,w
  7376  2325  00B2               	movwf	stoa@l
  7377                           
  7378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  7379  2326  0023               	movlb	3	; select bank3
  7380  2327  0841               	movf	(_prec+1)^(0+384),w
  7381  2328  0020               	movlb	0	; select bank0
  7382  2329  00B1               	movwf	stoa@p+1
  7383  232A  0023               	movlb	3	; select bank3
  7384  232B  0840               	movf	_prec^(0+384),w
  7385  232C  0020               	movlb	0	; select bank0
  7386  232D  00B0               	movwf	stoa@p
  7387                           
  7388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  7389  232E  1BB1               	btfsc	stoa@p+1,7
  7390  232F  2B41               	goto	l655
  7391  2330  0831               	movf	stoa@p+1,w
  7392  2331  3A80               	xorlw	128
  7393  2332  00FA               	movwf	??_stoa
  7394  2333  0833               	movf	stoa@l+1,w
  7395  2334  3A80               	xorlw	128
  7396  2335  027A               	subwf	??_stoa,w
  7397  2336  1D03               	skipz
  7398  2337  2B3A               	goto	u10755
  7399  2338  0832               	movf	stoa@l,w
  7400  2339  0230               	subwf	stoa@p,w
  7401  233A                     u10755:	
  7402  233A  1803               	btfsc	3,0
  7403  233B  2B41               	goto	l655
  7404  233C  0020               	movlb	0	; select bank0
  7405  233D  0831               	movf	stoa@p+1,w
  7406  233E  00B3               	movwf	stoa@l+1
  7407  233F  0830               	movf	stoa@p,w
  7408  2340  00B2               	movwf	stoa@l
  7409  2341                     l655:	
  7410                           
  7411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  7412  2341  0020               	movlb	0	; select bank0
  7413  2342  0833               	movf	stoa@l+1,w
  7414  2343  00B1               	movwf	stoa@p+1
  7415  2344  0832               	movf	stoa@l,w
  7416  2345  00B0               	movwf	stoa@p
  7417                           
  7418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  7419  2346  0023               	movlb	3	; select bank3
  7420  2347  083F               	movf	(_width+1)^(0+384),w
  7421  2348  0020               	movlb	0	; select bank0
  7422  2349  00AD               	movwf	stoa@w+1
  7423  234A  0023               	movlb	3	; select bank3
  7424  234B  083E               	movf	_width^(0+384),w
  7425  234C  0020               	movlb	0	; select bank0
  7426  234D  00AC               	movwf	stoa@w
  7427                           
  7428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  7429  234E  0023               	movlb	3	; select bank3
  7430  234F  1C42               	btfss	_flags^(0+384),0
  7431  2350  2B63               	goto	l7309
  7432  2351  2B70               	goto	l7311
  7433  2352                     l7305:	
  7434                           
  7435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  7436  2352  3020               	movlw	32
  7437  2353  00F1               	movwf	fputc@c
  7438  2354  3000               	movlw	0
  7439  2355  00F2               	movwf	fputc@c+1
  7440  2356  0020               	movlb	0	; select bank0
  7441  2357  0821               	movf	stoa@fp+1,w
  7442  2358  00F4               	movwf	fputc@fp+1
  7443  2359  0820               	movf	stoa@fp,w
  7444  235A  00F3               	movwf	fputc@fp
  7445  235B  3190  200D  31A2   	fcall	_fputc
  7446                           
  7447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  7448  235E  3001               	movlw	1
  7449  235F  0020               	movlb	0	; select bank0
  7450  2360  07B2               	addwf	stoa@l,f
  7451  2361  3000               	movlw	0
  7452  2362  3DB3               	addwfc	stoa@l+1,f
  7453  2363                     l7309:	
  7454                           
  7455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  7456  2363  0020               	movlb	0	; select bank0
  7457  2364  0833               	movf	stoa@l+1,w
  7458  2365  3A80               	xorlw	128
  7459  2366  00FA               	movwf	??_stoa
  7460  2367  082D               	movf	stoa@w+1,w
  7461  2368  3A80               	xorlw	128
  7462  2369  027A               	subwf	??_stoa,w
  7463  236A  1D03               	skipz
  7464  236B  2B6E               	goto	u10775
  7465  236C  082C               	movf	stoa@w,w
  7466  236D  0232               	subwf	stoa@l,w
  7467  236E                     u10775:	
  7468  236E  1C03               	skipc
  7469  236F  2B52               	goto	l7305
  7470  2370                     l7311:	
  7471                           
  7472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  7473  2370  0020               	movlb	0	; select bank0
  7474  2371  01AA               	clrf	stoa@i
  7475  2372  01AB               	clrf	stoa@i+1
  7476  2373                     l7319:	
  7477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7478                           
  7479                           
  7480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  7481  2373  082B               	movf	stoa@i+1,w
  7482  2374  3A80               	xorlw	128
  7483  2375  00FA               	movwf	??_stoa
  7484  2376  0831               	movf	stoa@p+1,w
  7485  2377  3A80               	xorlw	128
  7486  2378  027A               	subwf	??_stoa,w
  7487  2379  1D03               	skipz
  7488  237A  2B7D               	goto	u10785
  7489  237B  0830               	movf	stoa@p,w
  7490  237C  022A               	subwf	stoa@i,w
  7491  237D                     u10785:	
  7492  237D  1803               	btfsc	3,0
  7493  237E  2B9C               	goto	l664
  7494                           
  7495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  7496  237F  0020               	movlb	0	; select bank0
  7497  2380  082E               	movf	stoa@cp,w
  7498  2381  0086               	movwf	6
  7499  2382  082F               	movf	stoa@cp+1,w
  7500  2383  0087               	movwf	7
  7501  2384  0801               	movf	1,w
  7502  2385  00FA               	movwf	??_stoa
  7503  2386  01FB               	clrf	??_stoa+1
  7504  2387  087A               	movf	??_stoa,w
  7505  2388  00F1               	movwf	fputc@c
  7506  2389  087B               	movf	??_stoa+1,w
  7507  238A  00F2               	movwf	fputc@c+1
  7508  238B  0821               	movf	stoa@fp+1,w
  7509  238C  00F4               	movwf	fputc@fp+1
  7510  238D  0820               	movf	stoa@fp,w
  7511  238E  00F3               	movwf	fputc@fp
  7512  238F  3190  200D  31A2   	fcall	_fputc
  7513                           
  7514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  7515  2392  3001               	movlw	1
  7516  2393  0020               	movlb	0	; select bank0
  7517  2394  07AE               	addwf	stoa@cp,f
  7518  2395  3000               	movlw	0
  7519  2396  3DAF               	addwfc	stoa@cp+1,f
  7520                           
  7521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  7522  2397  3001               	movlw	1
  7523  2398  07AA               	addwf	stoa@i,f
  7524  2399  3000               	movlw	0
  7525  239A  3DAB               	addwfc	stoa@i+1,f
  7526  239B  2B73               	goto	l7319
  7527  239C                     l664:	
  7528                           
  7529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  7530  239C  0023               	movlb	3	; select bank3
  7531  239D  1842               	btfsc	_flags^(0+384),0
  7532  239E  2BB1               	goto	l7327
  7533  239F  2BBE               	goto	l7329
  7534  23A0                     l7323:	
  7535                           
  7536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  7537  23A0  3020               	movlw	32
  7538  23A1  00F1               	movwf	fputc@c
  7539  23A2  3000               	movlw	0
  7540  23A3  00F2               	movwf	fputc@c+1
  7541  23A4  0020               	movlb	0	; select bank0
  7542  23A5  0821               	movf	stoa@fp+1,w
  7543  23A6  00F4               	movwf	fputc@fp+1
  7544  23A7  0820               	movf	stoa@fp,w
  7545  23A8  00F3               	movwf	fputc@fp
  7546  23A9  3190  200D  31A2   	fcall	_fputc
  7547                           
  7548                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  7549  23AC  3001               	movlw	1
  7550  23AD  0020               	movlb	0	; select bank0
  7551  23AE  07B2               	addwf	stoa@l,f
  7552  23AF  3000               	movlw	0
  7553  23B0  3DB3               	addwfc	stoa@l+1,f
  7554  23B1                     l7327:	
  7555                           
  7556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  7557  23B1  0020               	movlb	0	; select bank0
  7558  23B2  0833               	movf	stoa@l+1,w
  7559  23B3  3A80               	xorlw	128
  7560  23B4  00FA               	movwf	??_stoa
  7561  23B5  082D               	movf	stoa@w+1,w
  7562  23B6  3A80               	xorlw	128
  7563  23B7  027A               	subwf	??_stoa,w
  7564  23B8  1D03               	skipz
  7565  23B9  2BBC               	goto	u10805
  7566  23BA  082C               	movf	stoa@w,w
  7567  23BB  0232               	subwf	stoa@l,w
  7568  23BC                     u10805:	
  7569  23BC  1C03               	skipc
  7570  23BD  2BA0               	goto	l7323
  7571  23BE                     l7329:	
  7572                           
  7573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  7574  23BE  0020               	movlb	0	; select bank0
  7575  23BF  0833               	movf	stoa@l+1,w
  7576  23C0  00A1               	movwf	?_stoa+1
  7577  23C1  0832               	movf	stoa@l,w
  7578  23C2  00A0               	movwf	?_stoa
  7579  23C3  0008               	return
  7580  23C4                     __end_of_stoa:	
  7581                           
  7582                           	psect	text15
  7583  196D                     __ptext15:	
  7584 ;; *************** function _otoa *****************
  7585 ;; Defined at:
  7586 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7589 ;;		 -> vsnprintf@f(6), 
  7590 ;;  d               8   18[BANK0 ] unsigned long long 
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;  n               8   40[BANK0 ] unsigned long long 
  7593 ;;  i               2   48[BANK0 ] int 
  7594 ;;  w               2   38[BANK0 ] int 
  7595 ;;  t               2   36[BANK0 ] int 
  7596 ;;  p               2   34[BANK0 ] int 
  7597 ;; Return value:  Size  Location     Type
  7598 ;;                  2   16[BANK0 ] int 
  7599 ;; Registers used:
  7600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7601 ;; Tracked objects:
  7602 ;;		On entry : 0/0
  7603 ;;		On exit  : 0/0
  7604 ;;		Unchanged: 0/0
  7605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7606 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7607 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7608 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7609 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7610 ;;Total ram usage:       34 bytes
  7611 ;; Hardware stack levels used:    1
  7612 ;; Hardware stack levels required when called:    5
  7613 ;; This function calls:
  7614 ;;		_pad
  7615 ;; This function is called by:
  7616 ;;		_vfpfcnvrt
  7617 ;; This function uses a non-reentrant model
  7618 ;;
  7619                           
  7620                           
  7621                           ;psect for function _otoa
  7622  196D                     _otoa:	
  7623                           
  7624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  7625                           
  7626                           ;incstack = 0
  7627                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7628  196D  0023               	movlb	3	; select bank3
  7629  196E  1BC1               	btfsc	(_prec+1)^(0+384),7
  7630  196F  2974               	goto	l633
  7631                           
  7632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  7633  1970  30FD               	movlw	253
  7634  1971  05C2               	andwf	_flags^(0+384),f
  7635  1972  30FF               	movlw	255
  7636  1973  05C3               	andwf	(_flags+1)^(0+384),f
  7637  1974                     l633:	
  7638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  7639                           
  7640                           
  7641                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  7642  1974  0841               	movf	(_prec+1)^(0+384),w
  7643  1975  3A80               	xorlw	128
  7644  1976  0020               	movlb	0	; select bank0
  7645  1977  00BA               	movwf	??_otoa
  7646  1978  3080               	movlw	128
  7647  1979  023A               	subwf	??_otoa,w
  7648  197A  1D03               	skipz
  7649  197B  297F               	goto	u10635
  7650  197C  3001               	movlw	1
  7651  197D  0023               	movlb	3	; select bank3
  7652  197E  0240               	subwf	_prec^(0+384),w
  7653  197F                     u10635:	
  7654  197F  1803               	skipnc
  7655  1980  2987               	goto	l7245
  7656  1981  3001               	movlw	1
  7657  1982  0020               	movlb	0	; select bank0
  7658  1983  00C2               	movwf	otoa@p
  7659  1984  3000               	movlw	0
  7660  1985  00C3               	movwf	otoa@p+1
  7661  1986  298F               	goto	l637
  7662  1987                     l7245:	
  7663  1987  0023               	movlb	3	; select bank3
  7664  1988  0841               	movf	(_prec+1)^(0+384),w
  7665  1989  0020               	movlb	0	; select bank0
  7666  198A  00C3               	movwf	otoa@p+1
  7667  198B  0023               	movlb	3	; select bank3
  7668  198C  0840               	movf	_prec^(0+384),w
  7669  198D  0020               	movlb	0	; select bank0
  7670  198E  00C2               	movwf	otoa@p
  7671  198F                     l637:	
  7672                           
  7673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  7674  198F  0023               	movlb	3	; select bank3
  7675  1990  083F               	movf	(_width+1)^(0+384),w
  7676  1991  0020               	movlb	0	; select bank0
  7677  1992  00C7               	movwf	otoa@w+1
  7678  1993  0023               	movlb	3	; select bank3
  7679  1994  083E               	movf	_width^(0+384),w
  7680  1995  0020               	movlb	0	; select bank0
  7681  1996  00C6               	movwf	otoa@w
  7682                           
  7683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  7684  1997  0832               	movf	otoa@d,w
  7685  1998  00C8               	movwf	otoa@n
  7686  1999  0833               	movf	otoa@d+1,w
  7687  199A  00C9               	movwf	otoa@n+1
  7688  199B  0834               	movf	otoa@d+2,w
  7689  199C  00CA               	movwf	otoa@n+2
  7690  199D  0835               	movf	otoa@d+3,w
  7691  199E  00CB               	movwf	otoa@n+3
  7692  199F  0836               	movf	otoa@d+4,w
  7693  19A0  00CC               	movwf	otoa@n+4
  7694  19A1  0837               	movf	otoa@d+5,w
  7695  19A2  00CD               	movwf	otoa@n+5
  7696  19A3  0838               	movf	otoa@d+6,w
  7697  19A4  00CE               	movwf	otoa@n+6
  7698  19A5  0839               	movf	otoa@d+7,w
  7699  19A6  00CF               	movwf	otoa@n+7
  7700                           
  7701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  7702  19A7  304F               	movlw	79
  7703  19A8  00D0               	movwf	otoa@i
  7704  19A9  3000               	movlw	0
  7705  19AA  00D1               	movwf	otoa@i+1
  7706                           
  7707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  7708  19AB  0024               	movlb	4	; select bank4
  7709  19AC  01EF               	clrf	(_dbuf^(0+512)+79)
  7710                           
  7711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  7712  19AD  0020               	movlb	0	; select bank0
  7713  19AE  01C4               	clrf	otoa@t
  7714  19AF  01C5               	clrf	otoa@t+1
  7715                           
  7716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7717  19B0  2A24               	goto	l638
  7718  19B1                     l7263:	
  7719  19B1  0020               	movlb	0	; select bank0
  7720  19B2  0848               	movf	otoa@n,w
  7721  19B3  0449               	iorwf	otoa@n+1,w
  7722  19B4  044A               	iorwf	otoa@n+2,w
  7723  19B5  044B               	iorwf	otoa@n+3,w
  7724  19B6  044C               	iorwf	otoa@n+4,w
  7725  19B7  044D               	iorwf	otoa@n+5,w
  7726  19B8  044E               	iorwf	otoa@n+6,w
  7727  19B9  044F               	iorwf	otoa@n+7,w
  7728  19BA  1D03               	skipz
  7729  19BB  29D6               	goto	l7253
  7730  19BC  0843               	movf	otoa@p+1,w
  7731  19BD  3A80               	xorlw	128
  7732  19BE  00BA               	movwf	??_otoa
  7733  19BF  3080               	movlw	128
  7734  19C0  023A               	subwf	??_otoa,w
  7735  19C1  1D03               	skipz
  7736  19C2  29C5               	goto	u10675
  7737  19C3  3001               	movlw	1
  7738  19C4  0242               	subwf	otoa@p,w
  7739  19C5                     u10675:	
  7740  19C5  1803               	skipnc
  7741  19C6  29D6               	goto	l7253
  7742  19C7  0020               	movlb	0	; select bank0
  7743  19C8  0847               	movf	otoa@w+1,w
  7744  19C9  3A80               	xorlw	128
  7745  19CA  00BA               	movwf	??_otoa
  7746  19CB  3080               	movlw	128
  7747  19CC  023A               	subwf	??_otoa,w
  7748  19CD  1D03               	skipz
  7749  19CE  29D1               	goto	u10685
  7750  19CF  3001               	movlw	1
  7751  19D0  0246               	subwf	otoa@w,w
  7752  19D1                     u10685:	
  7753  19D1  1C03               	skipc
  7754  19D2  2A2F               	goto	l644
  7755  19D3  0023               	movlb	3	; select bank3
  7756  19D4  1CC2               	btfss	_flags^(0+384),1
  7757  19D5  2A2F               	goto	l644
  7758  19D6                     l7253:	
  7759                           
  7760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  7761  19D6  30FF               	movlw	255
  7762  19D7  0020               	movlb	0	; select bank0
  7763  19D8  07D0               	addwf	otoa@i,f
  7764  19D9  30FF               	movlw	255
  7765  19DA  3DD1               	addwfc	otoa@i+1,f
  7766                           
  7767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  7768  19DB  3007               	movlw	7
  7769  19DC  0548               	andwf	otoa@n,w
  7770  19DD  00C4               	movwf	otoa@t
  7771  19DE  3000               	movlw	0
  7772  19DF  0549               	andwf	otoa@n+1,w
  7773  19E0  00C5               	movwf	otoa@t+1
  7774                           
  7775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  7776  19E1  0844               	movf	otoa@t,w
  7777  19E2  3E30               	addlw	48
  7778  19E3  00BA               	movwf	??_otoa
  7779  19E4  0850               	movf	otoa@i,w
  7780  19E5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7781  19E6  0086               	movwf	6
  7782  19E7  3002               	movlw	2	; select bank4/5
  7783  19E8  0087               	movwf	7
  7784  19E9  083A               	movf	??_otoa,w
  7785  19EA  0081               	movwf	1
  7786                           
  7787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  7788  19EB  30FF               	movlw	255
  7789  19EC  07C2               	addwf	otoa@p,f
  7790  19ED  30FF               	movlw	255
  7791  19EE  3DC3               	addwfc	otoa@p+1,f
  7792                           
  7793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  7794  19EF  30FF               	movlw	255
  7795  19F0  07C6               	addwf	otoa@w,f
  7796  19F1  30FF               	movlw	255
  7797  19F2  3DC7               	addwfc	otoa@w+1,f
  7798                           
  7799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  7800  19F3  3048               	movlw	low otoa@n
  7801  19F4  0086               	movwf	6
  7802  19F5  3000               	movlw	high otoa@n
  7803  19F6  0087               	movwf	7
  7804  19F7  3F40               	moviw [0]fsr1
  7805  19F8  00BA               	movwf	??_otoa
  7806  19F9  3F41               	moviw [1]fsr1
  7807  19FA  00BB               	movwf	??_otoa+1
  7808  19FB  3F42               	moviw [2]fsr1
  7809  19FC  00BC               	movwf	??_otoa+2
  7810  19FD  3F43               	moviw [3]fsr1
  7811  19FE  00BD               	movwf	??_otoa+3
  7812  19FF  3F44               	moviw [4]fsr1
  7813  1A00  00BE               	movwf	??_otoa+4
  7814  1A01  3F45               	moviw [5]fsr1
  7815  1A02  00BF               	movwf	??_otoa+5
  7816  1A03  3F46               	moviw [6]fsr1
  7817  1A04  00C0               	movwf	??_otoa+6
  7818  1A05  3F47               	moviw [7]fsr1
  7819  1A06  00C1               	movwf	??_otoa+7
  7820  1A07  3003               	movlw	3
  7821  1A08                     u10645:	
  7822  1A08  0020               	movlb	0	; select bank0
  7823  1A09  36C1               	lsrf	??_otoa+7,f
  7824  1A0A  0CC0               	rrf	??_otoa+6,f
  7825  1A0B  0CBF               	rrf	??_otoa+5,f
  7826  1A0C  0CBE               	rrf	??_otoa+4,f
  7827  1A0D  0CBD               	rrf	??_otoa+3,f
  7828  1A0E  0CBC               	rrf	??_otoa+2,f
  7829  1A0F  0CBB               	rrf	??_otoa+1,f
  7830  1A10  0CBA               	rrf	??_otoa,f
  7831  1A11  0B89               	decfsz	9,f
  7832  1A12  2A08               	goto	u10645
  7833  1A13  0020               	movlb	0	; select bank0
  7834  1A14  0841               	movf	??_otoa+7,w
  7835  1A15  00CF               	movwf	otoa@n+7
  7836  1A16  0840               	movf	??_otoa+6,w
  7837  1A17  00CE               	movwf	otoa@n+6
  7838  1A18  083F               	movf	??_otoa+5,w
  7839  1A19  00CD               	movwf	otoa@n+5
  7840  1A1A  083E               	movf	??_otoa+4,w
  7841  1A1B  00CC               	movwf	otoa@n+4
  7842  1A1C  083D               	movf	??_otoa+3,w
  7843  1A1D  00CB               	movwf	otoa@n+3
  7844  1A1E  083C               	movf	??_otoa+2,w
  7845  1A1F  00CA               	movwf	otoa@n+2
  7846  1A20  083B               	movf	??_otoa+1,w
  7847  1A21  00C9               	movwf	otoa@n+1
  7848  1A22  083A               	movf	??_otoa,w
  7849  1A23  00C8               	movwf	otoa@n
  7850  1A24                     l638:	
  7851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  7852                           
  7853                           
  7854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7855  1A24  0851               	movf	otoa@i+1,w
  7856  1A25  3A80               	xorlw	128
  7857  1A26  00BA               	movwf	??_otoa
  7858  1A27  3080               	movlw	128
  7859  1A28  023A               	subwf	??_otoa,w
  7860  1A29  1D03               	skipz
  7861  1A2A  2A2D               	goto	u10655
  7862  1A2B  3001               	movlw	1
  7863  1A2C  0250               	subwf	otoa@i,w
  7864  1A2D                     u10655:	
  7865  1A2D  1803               	btfsc	3,0
  7866  1A2E  29B1               	goto	l7263
  7867  1A2F                     l644:	
  7868                           
  7869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  7870  1A2F  0023               	movlb	3	; select bank3
  7871  1A30  1E42               	btfss	_flags^(0+384),4
  7872  1A31  2A48               	goto	l7279
  7873  1A32  0020               	movlb	0	; select bank0
  7874  1A33  0844               	movf	otoa@t,w
  7875  1A34  0445               	iorwf	otoa@t+1,w
  7876  1A35  1903               	btfsc	3,2
  7877  1A36  2A48               	goto	l7279
  7878                           
  7879                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  7880  1A37  30FF               	movlw	255
  7881  1A38  07D0               	addwf	otoa@i,f
  7882  1A39  30FF               	movlw	255
  7883  1A3A  3DD1               	addwfc	otoa@i+1,f
  7884                           
  7885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  7886  1A3B  3030               	movlw	48
  7887  1A3C  00BA               	movwf	??_otoa
  7888  1A3D  0850               	movf	otoa@i,w
  7889  1A3E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7890  1A3F  0086               	movwf	6
  7891  1A40  3002               	movlw	2	; select bank4/5
  7892  1A41  0087               	movwf	7
  7893  1A42  083A               	movf	??_otoa,w
  7894  1A43  0081               	movwf	1
  7895                           
  7896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  7897  1A44  30FF               	movlw	255
  7898  1A45  07C6               	addwf	otoa@w,f
  7899  1A46  30FF               	movlw	255
  7900  1A47  3DC7               	addwfc	otoa@w+1,f
  7901  1A48                     l7279:	
  7902                           
  7903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  7904  1A48  0020               	movlb	0	; select bank0
  7905  1A49  0831               	movf	otoa@fp+1,w
  7906  1A4A  00A7               	movwf	pad@fp+1
  7907  1A4B  0830               	movf	otoa@fp,w
  7908  1A4C  00A6               	movwf	pad@fp
  7909  1A4D  0850               	movf	otoa@i,w
  7910  1A4E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7911  1A4F  00BA               	movwf	??_otoa
  7912  1A50  083A               	movf	??_otoa,w
  7913  1A51  00A8               	movwf	pad@buf
  7914  1A52  0847               	movf	otoa@w+1,w
  7915  1A53  00AA               	movwf	pad@p+1
  7916  1A54  0846               	movf	otoa@w,w
  7917  1A55  00A9               	movwf	pad@p
  7918  1A56  31AB  2302         	fcall	_pad
  7919  1A58  0020               	movlb	0	; select bank0
  7920  1A59  0827               	movf	?_pad+1,w
  7921  1A5A  00B1               	movwf	?_otoa+1
  7922  1A5B  0826               	movf	?_pad,w
  7923  1A5C  00B0               	movwf	?_otoa
  7924  1A5D  0008               	return
  7925  1A5E                     __end_of_otoa:	
  7926                           
  7927                           	psect	text16
  7928  0058                     __ptext16:	
  7929 ;; *************** function _efgtoa *****************
  7930 ;; Defined at:
  7931 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  fp              2    0[BANK1 ] PTR struct _IO_FILE
  7934 ;;		 -> vsnprintf@f(6), 
  7935 ;;  f               4    2[BANK1 ] PTR struct _IO_FILE
  7936 ;;  c               1    6[BANK1 ] unsigned char 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  u               4   63[BANK1 ] unsigned char 
  7939 ;;  g               4   55[BANK1 ] unsigned char 
  7940 ;;  l               4   49[BANK1 ] unsigned char 
  7941 ;;  h               4   45[BANK1 ] unsigned char 
  7942 ;;  ou              4   11[BANK1 ] unsigned char 
  7943 ;;  n               2   61[BANK1 ] int 
  7944 ;;  e               2   59[BANK1 ] int 
  7945 ;;  i               2   53[BANK1 ] int 
  7946 ;;  w               2   42[BANK1 ] int 
  7947 ;;  p               2   39[BANK1 ] int 
  7948 ;;  sign            2   37[BANK1 ] int 
  7949 ;;  d               2   35[BANK1 ] int 
  7950 ;;  ne              2   33[BANK1 ] int 
  7951 ;;  m               2   31[BANK1 ] int 
  7952 ;;  pp              2   29[BANK1 ] int 
  7953 ;;  t               2   27[BANK1 ] int 
  7954 ;;  mode            1   44[BANK1 ] unsigned char 
  7955 ;;  nmode           1   41[BANK1 ] unsigned char 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  2    0[BANK1 ] int 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7965 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7966 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7967 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7968 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7969 ;;Total ram usage:       67 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    5
  7972 ;; This function calls:
  7973 ;;		___awdiv
  7974 ;;		___awmod
  7975 ;;		___fladd
  7976 ;;		___fldiv
  7977 ;;		___fleq
  7978 ;;		___flge
  7979 ;;		___flmul
  7980 ;;		___flneg
  7981 ;;		___flsub
  7982 ;;		___fltol
  7983 ;;		___fpclassifyf
  7984 ;;		_floorf
  7985 ;;		_isupper
  7986 ;;		_pad
  7987 ;;		_strcpy
  7988 ;;		_tolower
  7989 ;; This function is called by:
  7990 ;;		_vfpfcnvrt
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           
  7995                           ;psect for function _efgtoa
  7996  0058                     _efgtoa:	
  7997                           
  7998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  7999                           
  8000                           ;incstack = 0
  8001                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8002  0058  0021               	movlb	1	; select bank1
  8003  0059  01C5               	clrf	efgtoa@sign^(0+128)
  8004  005A  01C6               	clrf	(efgtoa@sign+1)^(0+128)
  8005                           
  8006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  8007  005B  0825               	movf	(efgtoa@f+3)^(0+128),w
  8008  005C  00DA               	movwf	(efgtoa@g+3)^(0+128)
  8009  005D  0824               	movf	(efgtoa@f+2)^(0+128),w
  8010  005E  00D9               	movwf	(efgtoa@g+2)^(0+128)
  8011  005F  0823               	movf	(efgtoa@f+1)^(0+128),w
  8012  0060  00D8               	movwf	(efgtoa@g+1)^(0+128)
  8013  0061  0822               	movf	efgtoa@f^(0+128),w
  8014  0062  00D7               	movwf	efgtoa@g^(0+128)
  8015                           
  8016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  8017  0063  085A               	movf	(efgtoa@g+3)^(0+128),w
  8018  0064  0020               	movlb	0	; select bank0
  8019  0065  00DD               	movwf	___flge@ff1+3
  8020  0066  0021               	movlb	1	; select bank1
  8021  0067  0859               	movf	(efgtoa@g+2)^(0+128),w
  8022  0068  0020               	movlb	0	; select bank0
  8023  0069  00DC               	movwf	___flge@ff1+2
  8024  006A  0021               	movlb	1	; select bank1
  8025  006B  0858               	movf	(efgtoa@g+1)^(0+128),w
  8026  006C  0020               	movlb	0	; select bank0
  8027  006D  00DB               	movwf	___flge@ff1+1
  8028  006E  0021               	movlb	1	; select bank1
  8029  006F  0857               	movf	efgtoa@g^(0+128),w
  8030  0070  0020               	movlb	0	; select bank0
  8031  0071  00DA               	movwf	___flge@ff1
  8032  0072  3000               	movlw	0
  8033  0073  00E1               	movwf	___flge@ff2+3
  8034  0074  3000               	movlw	0
  8035  0075  00E0               	movwf	___flge@ff2+2
  8036  0076  3000               	movlw	0
  8037  0077  00DF               	movwf	___flge@ff2+1
  8038  0078  3000               	movlw	0
  8039  0079  00DE               	movwf	___flge@ff2
  8040  007A  31AC  24EB  3180   	fcall	___flge
  8041  007D  1803               	btfsc	3,0
  8042  007E  2898               	goto	l6957
  8043                           
  8044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  8045  007F  3001               	movlw	1
  8046  0080  0021               	movlb	1	; select bank1
  8047  0081  00C5               	movwf	efgtoa@sign^(0+128)
  8048  0082  3000               	movlw	0
  8049  0083  00C6               	movwf	(efgtoa@sign^(0+128)+1)
  8050                           
  8051                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  8052  0084  085A               	movf	(efgtoa@g+3)^(0+128),w
  8053  0085  00F4               	movwf	___flneg@f1+3
  8054  0086  0859               	movf	(efgtoa@g+2)^(0+128),w
  8055  0087  00F3               	movwf	___flneg@f1+2
  8056  0088  0858               	movf	(efgtoa@g+1)^(0+128),w
  8057  0089  00F2               	movwf	___flneg@f1+1
  8058  008A  0857               	movf	efgtoa@g^(0+128),w
  8059  008B  00F1               	movwf	___flneg@f1
  8060  008C  31B6  269A  3180   	fcall	___flneg
  8061  008F  0874               	movf	?___flneg+3,w
  8062  0090  0021               	movlb	1	; select bank1
  8063  0091  00DA               	movwf	(efgtoa@g+3)^(0+128)
  8064  0092  0873               	movf	?___flneg+2,w
  8065  0093  00D9               	movwf	(efgtoa@g+2)^(0+128)
  8066  0094  0872               	movf	?___flneg+1,w
  8067  0095  00D8               	movwf	(efgtoa@g+1)^(0+128)
  8068  0096  0871               	movf	?___flneg,w
  8069  0097  00D7               	movwf	efgtoa@g^(0+128)
  8070  0098                     l6957:	
  8071                           
  8072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  8073  0098  0021               	movlb	1	; select bank1
  8074  0099  01DD               	clrf	efgtoa@n^(0+128)
  8075  009A  01DE               	clrf	(efgtoa@n+1)^(0+128)
  8076                           
  8077                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  8078  009B  0023               	movlb	3	; select bank3
  8079  009C  083F               	movf	(_width+1)^(0+384),w
  8080  009D  0021               	movlb	1	; select bank1
  8081  009E  00CB               	movwf	(efgtoa@w+1)^(0+128)
  8082  009F  0023               	movlb	3	; select bank3
  8083  00A0  083E               	movf	_width^(0+384),w
  8084  00A1  0021               	movlb	1	; select bank1
  8085  00A2  00CA               	movwf	efgtoa@w^(0+128)
  8086                           
  8087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  8088  00A3  0845               	movf	efgtoa@sign^(0+128),w
  8089  00A4  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  8090  00A5  1D03               	btfss	3,2
  8091  00A6  28AA               	goto	l6965
  8092  00A7  0023               	movlb	3	; select bank3
  8093  00A8  1D42               	btfss	_flags^(0+384),2
  8094  00A9  28C3               	goto	l6977
  8095  00AA                     l6965:	
  8096                           
  8097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  8098  00AA  0021               	movlb	1	; select bank1
  8099  00AB  0845               	movf	efgtoa@sign^(0+128),w
  8100  00AC  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  8101  00AD  1D03               	btfss	3,2
  8102  00AE  28B1               	goto	l6969
  8103  00AF  302B               	movlw	43
  8104  00B0  28B2               	goto	L3
  8105  00B1                     l6969:	
  8106  00B1  302D               	movlw	45
  8107  00B2                     L3:	
  8108  00B2  00AF               	movwf	_efgtoa$954^(0+128)
  8109  00B3  3000               	movlw	0
  8110  00B4  00B0               	movwf	(_efgtoa$954^(0+128)+1)
  8111  00B5  082F               	movf	_efgtoa$954^(0+128),w
  8112  00B6  00A7               	movwf	??_efgtoa^(0+128)
  8113  00B7  0827               	movf	??_efgtoa^(0+128),w
  8114  00B8  0024               	movlb	4	; select bank4
  8115  00B9  00A0               	movwf	_dbuf^(0+512)
  8116                           
  8117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  8118  00BA  3001               	movlw	1
  8119  00BB  0021               	movlb	1	; select bank1
  8120  00BC  07DD               	addwf	efgtoa@n^(0+128),f
  8121  00BD  3000               	movlw	0
  8122  00BE  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  8123                           
  8124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  8125  00BF  30FF               	movlw	255
  8126  00C0  07CA               	addwf	efgtoa@w^(0+128),f
  8127  00C1  30FF               	movlw	255
  8128  00C2  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  8129  00C3                     l6977:	
  8130                           
  8131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8132  00C3  0021               	movlb	1	; select bank1
  8133  00C4  085A               	movf	(efgtoa@g+3)^(0+128),w
  8134  00C5  00F4               	movwf	___fpclassifyf@x+3
  8135  00C6  0859               	movf	(efgtoa@g+2)^(0+128),w
  8136  00C7  00F3               	movwf	___fpclassifyf@x+2
  8137  00C8  0858               	movf	(efgtoa@g+1)^(0+128),w
  8138  00C9  00F2               	movwf	___fpclassifyf@x+1
  8139  00CA  0857               	movf	efgtoa@g^(0+128),w
  8140  00CB  00F1               	movwf	___fpclassifyf@x
  8141  00CC  31AC  2473  3180   	fcall	___fpclassifyf
  8142  00CF  0371               	decf	?___fpclassifyf,w
  8143  00D0  0472               	iorwf	?___fpclassifyf+1,w
  8144  00D1  1D03               	btfss	3,2
  8145  00D2  2921               	goto	l6995
  8146  00D3  0021               	movlb	1	; select bank1
  8147  00D4  0826               	movf	efgtoa@c^(0+128),w
  8148  00D5  3EBF               	addlw	191
  8149  00D6  00A7               	movwf	??_efgtoa^(0+128)
  8150  00D7  30FF               	movlw	255
  8151  00D8  1803               	skipnc
  8152  00D9  3000               	movlw	0
  8153  00DA  00A8               	movwf	(??_efgtoa^(0+128)+1)
  8154  00DB  3000               	movlw	0
  8155  00DC  0228               	subwf	(??_efgtoa+1)^(0+128),w
  8156  00DD  301A               	movlw	26
  8157  00DE  1903               	skipnz
  8158  00DF  0227               	subwf	??_efgtoa^(0+128),w
  8159  00E0  1803               	btfsc	3,0
  8160  00E1  28E4               	goto	u10150
  8161  00E2  3001               	movlw	1
  8162  00E3  28E5               	goto	u10160
  8163  00E4                     u10150:	
  8164  00E4  3000               	movlw	0
  8165  00E5                     u10160:	
  8166  00E5  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8167  00E6  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  8168  00E7  0829               	movf	(??_efgtoa+2)^(0+128),w
  8169  00E8  00B1               	movwf	_efgtoa$955^(0+128)
  8170  00E9  082A               	movf	(??_efgtoa+3)^(0+128),w
  8171  00EA  00B2               	movwf	(_efgtoa$955+1)^(0+128)
  8172  00EB  0831               	movf	_efgtoa$955^(0+128),w
  8173  00EC  0432               	iorwf	(_efgtoa$955+1)^(0+128),w
  8174  00ED  1903               	btfsc	3,2
  8175  00EE  28F3               	goto	l6987
  8176                           
  8177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  8178  00EF  3038               	movlw	low (STR_10| (0+32768))
  8179  00F0  00F1               	movwf	strcpy@src
  8180  00F1  30B8               	movlw	high (STR_10| (0+32768))
  8181  00F2  28F6               	goto	L4
  8182  00F3                     l6987:	
  8183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  8184                           
  8185                           
  8186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  8187  00F3  3048               	movlw	low (STR_11| (0+32768))
  8188  00F4  00F1               	movwf	strcpy@src
  8189  00F5  30B8               	movlw	high (STR_11| (0+32768))
  8190  00F6                     L4:	
  8191  00F6  00F2               	movwf	strcpy@src+1
  8192  00F7  085D               	movf	efgtoa@n^(0+128),w
  8193  00F8  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8194  00F9  31A8  2022  3180   	fcall	_strcpy
  8195                           
  8196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8197  00FC  30FD               	movlw	253
  8198  00FD  0021               	movlb	1	; select bank1
  8199  00FE  07CA               	addwf	efgtoa@w^(0+128),f
  8200  00FF  30FF               	movlw	255
  8201  0100  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  8202                           
  8203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  8204  0101  0821               	movf	(efgtoa@fp+1)^(0+128),w
  8205  0102  0020               	movlb	0	; select bank0
  8206  0103  00A7               	movwf	pad@fp+1
  8207  0104  0021               	movlb	1	; select bank1
  8208  0105  0820               	movf	efgtoa@fp^(0+128),w
  8209  0106  0020               	movlb	0	; select bank0
  8210  0107  00A6               	movwf	pad@fp
  8211  0108  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  8212  0109  0021               	movlb	1	; select bank1
  8213  010A  00A7               	movwf	??_efgtoa^(0+128)
  8214  010B  0827               	movf	??_efgtoa^(0+128),w
  8215  010C  0020               	movlb	0	; select bank0
  8216  010D  00A8               	movwf	pad@buf
  8217  010E  0021               	movlb	1	; select bank1
  8218  010F  084B               	movf	(efgtoa@w+1)^(0+128),w
  8219  0110  0020               	movlb	0	; select bank0
  8220  0111  00AA               	movwf	pad@p+1
  8221  0112  0021               	movlb	1	; select bank1
  8222  0113  084A               	movf	efgtoa@w^(0+128),w
  8223  0114  0020               	movlb	0	; select bank0
  8224  0115  00A9               	movwf	pad@p
  8225  0116  31AB  2302         	fcall	_pad
  8226  0118  0020               	movlb	0	; select bank0
  8227  0119  0827               	movf	?_pad+1,w
  8228  011A  0021               	movlb	1	; select bank1
  8229  011B  00A1               	movwf	(?_efgtoa+1)^(0+128)
  8230  011C  0020               	movlb	0	; select bank0
  8231  011D  0826               	movf	?_pad,w
  8232  011E  0021               	movlb	1	; select bank1
  8233  011F  00A0               	movwf	?_efgtoa^(0+128)
  8234  0120  0008               	return
  8235  0121                     l6995:	
  8236                           
  8237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8238  0121  0021               	movlb	1	; select bank1
  8239  0122  085A               	movf	(efgtoa@g+3)^(0+128),w
  8240  0123  00F4               	movwf	___fpclassifyf@x+3
  8241  0124  0859               	movf	(efgtoa@g+2)^(0+128),w
  8242  0125  00F3               	movwf	___fpclassifyf@x+2
  8243  0126  0858               	movf	(efgtoa@g+1)^(0+128),w
  8244  0127  00F2               	movwf	___fpclassifyf@x+1
  8245  0128  0857               	movf	efgtoa@g^(0+128),w
  8246  0129  00F1               	movwf	___fpclassifyf@x
  8247  012A  31AC  2473  3180   	fcall	___fpclassifyf
  8248  012D  0871               	movf	?___fpclassifyf,w
  8249  012E  0472               	iorwf	?___fpclassifyf+1,w
  8250  012F  1D03               	btfss	3,2
  8251  0130  297F               	goto	l7013
  8252  0131  0021               	movlb	1	; select bank1
  8253  0132  0826               	movf	efgtoa@c^(0+128),w
  8254  0133  3EBF               	addlw	191
  8255  0134  00A7               	movwf	??_efgtoa^(0+128)
  8256  0135  30FF               	movlw	255
  8257  0136  1803               	skipnc
  8258  0137  3000               	movlw	0
  8259  0138  00A8               	movwf	(??_efgtoa^(0+128)+1)
  8260  0139  3000               	movlw	0
  8261  013A  0228               	subwf	(??_efgtoa+1)^(0+128),w
  8262  013B  301A               	movlw	26
  8263  013C  1903               	skipnz
  8264  013D  0227               	subwf	??_efgtoa^(0+128),w
  8265  013E  1803               	btfsc	3,0
  8266  013F  2942               	goto	u10190
  8267  0140  3001               	movlw	1
  8268  0141  2943               	goto	u10200
  8269  0142                     u10190:	
  8270  0142  3000               	movlw	0
  8271  0143                     u10200:	
  8272  0143  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8273  0144  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  8274  0145  0829               	movf	(??_efgtoa+2)^(0+128),w
  8275  0146  00B3               	movwf	_efgtoa$959^(0+128)
  8276  0147  082A               	movf	(??_efgtoa+3)^(0+128),w
  8277  0148  00B4               	movwf	(_efgtoa$959+1)^(0+128)
  8278  0149  0833               	movf	_efgtoa$959^(0+128),w
  8279  014A  0434               	iorwf	(_efgtoa$959+1)^(0+128),w
  8280  014B  1903               	btfsc	3,2
  8281  014C  2951               	goto	l7005
  8282                           
  8283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  8284  014D  303C               	movlw	low (STR_14| (0+32768))
  8285  014E  00F1               	movwf	strcpy@src
  8286  014F  30B8               	movlw	high (STR_14| (0+32768))
  8287  0150  2954               	goto	L5
  8288  0151                     l7005:	
  8289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  8290                           
  8291                           
  8292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  8293  0151  3050               	movlw	low (STR_15| (0+32768))
  8294  0152  00F1               	movwf	strcpy@src
  8295  0153  30B8               	movlw	high (STR_15| (0+32768))
  8296  0154                     L5:	
  8297  0154  00F2               	movwf	strcpy@src+1
  8298  0155  085D               	movf	efgtoa@n^(0+128),w
  8299  0156  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8300  0157  31A8  2022  3180   	fcall	_strcpy
  8301                           
  8302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  8303  015A  30FD               	movlw	253
  8304  015B  0021               	movlb	1	; select bank1
  8305  015C  07CA               	addwf	efgtoa@w^(0+128),f
  8306  015D  30FF               	movlw	255
  8307  015E  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  8308                           
  8309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  8310  015F  0821               	movf	(efgtoa@fp+1)^(0+128),w
  8311  0160  0020               	movlb	0	; select bank0
  8312  0161  00A7               	movwf	pad@fp+1
  8313  0162  0021               	movlb	1	; select bank1
  8314  0163  0820               	movf	efgtoa@fp^(0+128),w
  8315  0164  0020               	movlb	0	; select bank0
  8316  0165  00A6               	movwf	pad@fp
  8317  0166  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  8318  0167  0021               	movlb	1	; select bank1
  8319  0168  00A7               	movwf	??_efgtoa^(0+128)
  8320  0169  0827               	movf	??_efgtoa^(0+128),w
  8321  016A  0020               	movlb	0	; select bank0
  8322  016B  00A8               	movwf	pad@buf
  8323  016C  0021               	movlb	1	; select bank1
  8324  016D  084B               	movf	(efgtoa@w+1)^(0+128),w
  8325  016E  0020               	movlb	0	; select bank0
  8326  016F  00AA               	movwf	pad@p+1
  8327  0170  0021               	movlb	1	; select bank1
  8328  0171  084A               	movf	efgtoa@w^(0+128),w
  8329  0172  0020               	movlb	0	; select bank0
  8330  0173  00A9               	movwf	pad@p
  8331  0174  31AB  2302         	fcall	_pad
  8332  0176  0020               	movlb	0	; select bank0
  8333  0177  0827               	movf	?_pad+1,w
  8334  0178  0021               	movlb	1	; select bank1
  8335  0179  00A1               	movwf	(?_efgtoa+1)^(0+128)
  8336  017A  0020               	movlb	0	; select bank0
  8337  017B  0826               	movf	?_pad,w
  8338  017C  0021               	movlb	1	; select bank1
  8339  017D  00A0               	movwf	?_efgtoa^(0+128)
  8340  017E  0008               	return
  8341  017F                     l7013:	
  8342                           
  8343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  8344  017F  303F               	movlw	63
  8345  0180  0021               	movlb	1	; select bank1
  8346  0181  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8347  0182  3080               	movlw	128
  8348  0183  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8349  0184  3000               	movlw	0
  8350  0185  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8351  0186  3000               	movlw	0
  8352  0187  00DF               	movwf	efgtoa@u^(0+128)
  8353                           
  8354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  8355  0188  01DB               	clrf	efgtoa@e^(0+128)
  8356  0189  01DC               	clrf	(efgtoa@e+1)^(0+128)
  8357                           
  8358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  8359  018A  085A               	movf	(efgtoa@g+3)^(0+128),w
  8360  018B  00F4               	movwf	___fleq@ff1+3
  8361  018C  0859               	movf	(efgtoa@g+2)^(0+128),w
  8362  018D  00F3               	movwf	___fleq@ff1+2
  8363  018E  0858               	movf	(efgtoa@g+1)^(0+128),w
  8364  018F  00F2               	movwf	___fleq@ff1+1
  8365  0190  0857               	movf	efgtoa@g^(0+128),w
  8366  0191  00F1               	movwf	___fleq@ff1
  8367  0192  3000               	movlw	0
  8368  0193  00F8               	movwf	___fleq@ff2+3
  8369  0194  3000               	movlw	0
  8370  0195  00F7               	movwf	___fleq@ff2+2
  8371  0196  3000               	movlw	0
  8372  0197  00F6               	movwf	___fleq@ff2+1
  8373  0198  3000               	movlw	0
  8374  0199  00F5               	movwf	___fleq@ff2
  8375  019A  31AA  2269  3180   	fcall	___fleq
  8376  019D  1C03               	btfss	3,0
  8377  019E  29D0               	goto	l7025
  8378  019F  2A5F               	goto	l7033
  8379  01A0                     l7021:	
  8380                           
  8381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  8382  01A0  3041               	movlw	65
  8383  01A1  0020               	movlb	0	; select bank0
  8384  01A2  00A9               	movwf	___flmul@b+3
  8385  01A3  3020               	movlw	32
  8386  01A4  00A8               	movwf	___flmul@b+2
  8387  01A5  3000               	movlw	0
  8388  01A6  00A7               	movwf	___flmul@b+1
  8389  01A7  3000               	movlw	0
  8390  01A8  00A6               	movwf	___flmul@b
  8391  01A9  0021               	movlb	1	; select bank1
  8392  01AA  0862               	movf	(efgtoa@u+3)^(0+128),w
  8393  01AB  0020               	movlb	0	; select bank0
  8394  01AC  00AD               	movwf	___flmul@a+3
  8395  01AD  0021               	movlb	1	; select bank1
  8396  01AE  0861               	movf	(efgtoa@u+2)^(0+128),w
  8397  01AF  0020               	movlb	0	; select bank0
  8398  01B0  00AC               	movwf	___flmul@a+2
  8399  01B1  0021               	movlb	1	; select bank1
  8400  01B2  0860               	movf	(efgtoa@u+1)^(0+128),w
  8401  01B3  0020               	movlb	0	; select bank0
  8402  01B4  00AB               	movwf	___flmul@a+1
  8403  01B5  0021               	movlb	1	; select bank1
  8404  01B6  085F               	movf	efgtoa@u^(0+128),w
  8405  01B7  0020               	movlb	0	; select bank0
  8406  01B8  00AA               	movwf	___flmul@a
  8407  01B9  3195  25D4  3180   	fcall	___flmul
  8408  01BC  0020               	movlb	0	; select bank0
  8409  01BD  0829               	movf	?___flmul+3,w
  8410  01BE  0021               	movlb	1	; select bank1
  8411  01BF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8412  01C0  0020               	movlb	0	; select bank0
  8413  01C1  0828               	movf	?___flmul+2,w
  8414  01C2  0021               	movlb	1	; select bank1
  8415  01C3  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8416  01C4  0020               	movlb	0	; select bank0
  8417  01C5  0827               	movf	?___flmul+1,w
  8418  01C6  0021               	movlb	1	; select bank1
  8419  01C7  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8420  01C8  0020               	movlb	0	; select bank0
  8421  01C9  0826               	movf	?___flmul,w
  8422  01CA  0021               	movlb	1	; select bank1
  8423  01CB  00DF               	movwf	efgtoa@u^(0+128)
  8424                           
  8425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  8426  01CC  3001               	movlw	1
  8427  01CD  07DB               	addwf	efgtoa@e^(0+128),f
  8428  01CE  3000               	movlw	0
  8429  01CF  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  8430  01D0                     l7025:	
  8431                           
  8432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  8433  01D0  0021               	movlb	1	; select bank1
  8434  01D1  085A               	movf	(efgtoa@g+3)^(0+128),w
  8435  01D2  0020               	movlb	0	; select bank0
  8436  01D3  00DD               	movwf	___flge@ff1+3
  8437  01D4  0021               	movlb	1	; select bank1
  8438  01D5  0859               	movf	(efgtoa@g+2)^(0+128),w
  8439  01D6  0020               	movlb	0	; select bank0
  8440  01D7  00DC               	movwf	___flge@ff1+2
  8441  01D8  0021               	movlb	1	; select bank1
  8442  01D9  0858               	movf	(efgtoa@g+1)^(0+128),w
  8443  01DA  0020               	movlb	0	; select bank0
  8444  01DB  00DB               	movwf	___flge@ff1+1
  8445  01DC  0021               	movlb	1	; select bank1
  8446  01DD  0857               	movf	efgtoa@g^(0+128),w
  8447  01DE  0020               	movlb	0	; select bank0
  8448  01DF  00DA               	movwf	___flge@ff1
  8449  01E0  3041               	movlw	65
  8450  01E1  00A9               	movwf	___flmul@b+3
  8451  01E2  3020               	movlw	32
  8452  01E3  00A8               	movwf	___flmul@b+2
  8453  01E4  3000               	movlw	0
  8454  01E5  00A7               	movwf	___flmul@b+1
  8455  01E6  3000               	movlw	0
  8456  01E7  00A6               	movwf	___flmul@b
  8457  01E8  0021               	movlb	1	; select bank1
  8458  01E9  0862               	movf	(efgtoa@u+3)^(0+128),w
  8459  01EA  0020               	movlb	0	; select bank0
  8460  01EB  00AD               	movwf	___flmul@a+3
  8461  01EC  0021               	movlb	1	; select bank1
  8462  01ED  0861               	movf	(efgtoa@u+2)^(0+128),w
  8463  01EE  0020               	movlb	0	; select bank0
  8464  01EF  00AC               	movwf	___flmul@a+2
  8465  01F0  0021               	movlb	1	; select bank1
  8466  01F1  0860               	movf	(efgtoa@u+1)^(0+128),w
  8467  01F2  0020               	movlb	0	; select bank0
  8468  01F3  00AB               	movwf	___flmul@a+1
  8469  01F4  0021               	movlb	1	; select bank1
  8470  01F5  085F               	movf	efgtoa@u^(0+128),w
  8471  01F6  0020               	movlb	0	; select bank0
  8472  01F7  00AA               	movwf	___flmul@a
  8473  01F8  3195  25D4  3180   	fcall	___flmul
  8474  01FB  0020               	movlb	0	; select bank0
  8475  01FC  0829               	movf	?___flmul+3,w
  8476  01FD  00E1               	movwf	___flge@ff2+3
  8477  01FE  0828               	movf	?___flmul+2,w
  8478  01FF  00E0               	movwf	___flge@ff2+2
  8479  0200  0827               	movf	?___flmul+1,w
  8480  0201  00DF               	movwf	___flge@ff2+1
  8481  0202  0826               	movf	?___flmul,w
  8482  0203  00DE               	movwf	___flge@ff2
  8483  0204  31AC  24EB  3180   	fcall	___flge
  8484  0207  1C03               	btfss	3,0
  8485  0208  2A3A               	goto	l7031
  8486  0209  29A0               	goto	l7021
  8487  020A                     l7027:	
  8488                           
  8489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  8490  020A  3041               	movlw	65
  8491  020B  0020               	movlb	0	; select bank0
  8492  020C  00C3               	movwf	___fldiv@a+3
  8493  020D  3020               	movlw	32
  8494  020E  00C2               	movwf	___fldiv@a+2
  8495  020F  3000               	movlw	0
  8496  0210  00C1               	movwf	___fldiv@a+1
  8497  0211  3000               	movlw	0
  8498  0212  00C0               	movwf	___fldiv@a
  8499  0213  0021               	movlb	1	; select bank1
  8500  0214  0862               	movf	(efgtoa@u+3)^(0+128),w
  8501  0215  0020               	movlb	0	; select bank0
  8502  0216  00C7               	movwf	___fldiv@b+3
  8503  0217  0021               	movlb	1	; select bank1
  8504  0218  0861               	movf	(efgtoa@u+2)^(0+128),w
  8505  0219  0020               	movlb	0	; select bank0
  8506  021A  00C6               	movwf	___fldiv@b+2
  8507  021B  0021               	movlb	1	; select bank1
  8508  021C  0860               	movf	(efgtoa@u+1)^(0+128),w
  8509  021D  0020               	movlb	0	; select bank0
  8510  021E  00C5               	movwf	___fldiv@b+1
  8511  021F  0021               	movlb	1	; select bank1
  8512  0220  085F               	movf	efgtoa@u^(0+128),w
  8513  0221  0020               	movlb	0	; select bank0
  8514  0222  00C4               	movwf	___fldiv@b
  8515  0223  3190  2061  3180   	fcall	___fldiv
  8516  0226  0020               	movlb	0	; select bank0
  8517  0227  0843               	movf	?___fldiv+3,w
  8518  0228  0021               	movlb	1	; select bank1
  8519  0229  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8520  022A  0020               	movlb	0	; select bank0
  8521  022B  0842               	movf	?___fldiv+2,w
  8522  022C  0021               	movlb	1	; select bank1
  8523  022D  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8524  022E  0020               	movlb	0	; select bank0
  8525  022F  0841               	movf	?___fldiv+1,w
  8526  0230  0021               	movlb	1	; select bank1
  8527  0231  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8528  0232  0020               	movlb	0	; select bank0
  8529  0233  0840               	movf	?___fldiv,w
  8530  0234  0021               	movlb	1	; select bank1
  8531  0235  00DF               	movwf	efgtoa@u^(0+128)
  8532                           
  8533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  8534  0236  30FF               	movlw	255
  8535  0237  07DB               	addwf	efgtoa@e^(0+128),f
  8536  0238  30FF               	movlw	255
  8537  0239  3DDC               	addwfc	(efgtoa@e+1)^(0+128),f
  8538  023A                     l7031:	
  8539                           
  8540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  8541  023A  0021               	movlb	1	; select bank1
  8542  023B  085A               	movf	(efgtoa@g+3)^(0+128),w
  8543  023C  0020               	movlb	0	; select bank0
  8544  023D  00DD               	movwf	___flge@ff1+3
  8545  023E  0021               	movlb	1	; select bank1
  8546  023F  0859               	movf	(efgtoa@g+2)^(0+128),w
  8547  0240  0020               	movlb	0	; select bank0
  8548  0241  00DC               	movwf	___flge@ff1+2
  8549  0242  0021               	movlb	1	; select bank1
  8550  0243  0858               	movf	(efgtoa@g+1)^(0+128),w
  8551  0244  0020               	movlb	0	; select bank0
  8552  0245  00DB               	movwf	___flge@ff1+1
  8553  0246  0021               	movlb	1	; select bank1
  8554  0247  0857               	movf	efgtoa@g^(0+128),w
  8555  0248  0020               	movlb	0	; select bank0
  8556  0249  00DA               	movwf	___flge@ff1
  8557  024A  0021               	movlb	1	; select bank1
  8558  024B  0862               	movf	(efgtoa@u+3)^(0+128),w
  8559  024C  0020               	movlb	0	; select bank0
  8560  024D  00E1               	movwf	___flge@ff2+3
  8561  024E  0021               	movlb	1	; select bank1
  8562  024F  0861               	movf	(efgtoa@u+2)^(0+128),w
  8563  0250  0020               	movlb	0	; select bank0
  8564  0251  00E0               	movwf	___flge@ff2+2
  8565  0252  0021               	movlb	1	; select bank1
  8566  0253  0860               	movf	(efgtoa@u+1)^(0+128),w
  8567  0254  0020               	movlb	0	; select bank0
  8568  0255  00DF               	movwf	___flge@ff2+1
  8569  0256  0021               	movlb	1	; select bank1
  8570  0257  085F               	movf	efgtoa@u^(0+128),w
  8571  0258  0020               	movlb	0	; select bank0
  8572  0259  00DE               	movwf	___flge@ff2
  8573  025A  31AC  24EB  3180   	fcall	___flge
  8574  025D  1C03               	btfss	3,0
  8575  025E  2A0A               	goto	l7027
  8576  025F                     l7033:	
  8577                           
  8578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  8579  025F  0021               	movlb	1	; select bank1
  8580  0260  0826               	movf	efgtoa@c^(0+128),w
  8581  0261  00A7               	movwf	??_efgtoa^(0+128)
  8582  0262  01A8               	clrf	(??_efgtoa^(0+128)+1)
  8583  0263  0827               	movf	??_efgtoa^(0+128),w
  8584  0264  00F7               	movwf	tolower@c
  8585  0265  0828               	movf	(??_efgtoa+1)^(0+128),w
  8586  0266  00F8               	movwf	tolower@c+1
  8587  0267  31A8  2084  3180   	fcall	_tolower
  8588  026A  0877               	movf	?_tolower,w
  8589  026B  0021               	movlb	1	; select bank1
  8590  026C  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8591  026D  0829               	movf	(??_efgtoa+2)^(0+128),w
  8592  026E  00CC               	movwf	efgtoa@mode^(0+128)
  8593                           
  8594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  8595  026F  084C               	movf	efgtoa@mode^(0+128),w
  8596  0270  00A7               	movwf	??_efgtoa^(0+128)
  8597  0271  0827               	movf	??_efgtoa^(0+128),w
  8598  0272  00C9               	movwf	efgtoa@nmode^(0+128)
  8599                           
  8600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  8601  0273  3067               	movlw	103
  8602  0274  064C               	xorwf	efgtoa@mode^(0+128),w
  8603  0275  1D03               	btfss	3,2
  8604  0276  2A93               	goto	l572
  8605                           
  8606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  8607  0277  0023               	movlb	3	; select bank3
  8608  0278  0840               	movf	_prec^(0+384),w
  8609  0279  0441               	iorwf	(_prec+1)^(0+384),w
  8610  027A  1D03               	btfss	3,2
  8611  027B  2A80               	goto	l573
  8612                           
  8613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  8614  027C  3001               	movlw	1
  8615  027D  00C0               	movwf	_prec^(0+384)
  8616  027E  3000               	movlw	0
  8617  027F  00C1               	movwf	(_prec^(0+384)+1)
  8618  0280                     l573:	
  8619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
  8620                           
  8621                           
  8622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  8623  0280  0841               	movf	(_prec+1)^(0+384),w
  8624  0281  3A80               	xorlw	128
  8625  0282  0021               	movlb	1	; select bank1
  8626  0283  00A7               	movwf	??_efgtoa^(0+128)
  8627  0284  3080               	movlw	128
  8628  0285  0227               	subwf	??_efgtoa^(0+128),w
  8629  0286  1D03               	skipz
  8630  0287  2A8B               	goto	u10275
  8631  0288  3001               	movlw	1
  8632  0289  0023               	movlb	3	; select bank3
  8633  028A  0240               	subwf	_prec^(0+384),w
  8634  028B                     u10275:	
  8635  028B  1803               	skipnc
  8636  028C  2A96               	goto	l7045
  8637  028D                     l7043:	
  8638  028D  3006               	movlw	6
  8639  028E  0021               	movlb	1	; select bank1
  8640  028F  00C7               	movwf	efgtoa@p^(0+128)
  8641  0290  3000               	movlw	0
  8642  0291  00C8               	movwf	(efgtoa@p^(0+128)+1)
  8643  0292  2A9E               	goto	l7051
  8644  0293                     l572:	
  8645                           
  8646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  8647  0293  0023               	movlb	3	; select bank3
  8648  0294  1BC1               	btfsc	(_prec+1)^(0+384),7
  8649  0295  2A8D               	goto	l7043
  8650  0296                     l7045:	
  8651  0296  0023               	movlb	3	; select bank3
  8652  0297  0841               	movf	(_prec+1)^(0+384),w
  8653  0298  0021               	movlb	1	; select bank1
  8654  0299  00C8               	movwf	(efgtoa@p+1)^(0+128)
  8655  029A  0023               	movlb	3	; select bank3
  8656  029B  0840               	movf	_prec^(0+384),w
  8657  029C  0021               	movlb	1	; select bank1
  8658  029D  00C7               	movwf	efgtoa@p^(0+128)
  8659  029E                     l7051:	
  8660                           
  8661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  8662  029E  3067               	movlw	103
  8663  029F  064C               	xorwf	efgtoa@mode^(0+128),w
  8664  02A0  1D03               	btfss	3,2
  8665  02A1  2AC7               	goto	l583
  8666                           
  8667                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  8668  02A2  085C               	movf	(efgtoa@e+1)^(0+128),w
  8669  02A3  3A80               	xorlw	128
  8670  02A4  00A7               	movwf	??_efgtoa^(0+128)
  8671  02A5  307F               	movlw	127
  8672  02A6  0227               	subwf	??_efgtoa^(0+128),w
  8673  02A7  1D03               	skipz
  8674  02A8  2AAB               	goto	u10305
  8675  02A9  30FC               	movlw	252
  8676  02AA  025B               	subwf	efgtoa@e^(0+128),w
  8677  02AB                     u10305:	
  8678  02AB  1C03               	skipc
  8679  02AC  2AC2               	goto	l7059
  8680  02AD  0021               	movlb	1	; select bank1
  8681  02AE  0847               	movf	efgtoa@p^(0+128),w
  8682  02AF  3EFF               	addlw	255
  8683  02B0  00A7               	movwf	??_efgtoa^(0+128)
  8684  02B1  30FF               	movlw	255
  8685  02B2  3D48               	addwfc	(efgtoa@p+1)^(0+128),w
  8686  02B3  00A8               	movwf	(??_efgtoa+1)^(0+128)
  8687  02B4  0828               	movf	(??_efgtoa+1)^(0+128),w
  8688  02B5  3A80               	xorlw	128
  8689  02B6  00A9               	movwf	(??_efgtoa+2)^(0+128)
  8690  02B7  085C               	movf	(efgtoa@e+1)^(0+128),w
  8691  02B8  3A80               	xorlw	128
  8692  02B9  0229               	subwf	(??_efgtoa+2)^(0+128),w
  8693  02BA  1D03               	skipz
  8694  02BB  2ABE               	goto	u10315
  8695  02BC  085B               	movf	efgtoa@e^(0+128),w
  8696  02BD  0227               	subwf	??_efgtoa^(0+128),w
  8697  02BE                     u10315:	
  8698  02BE  1C03               	skipc
  8699  02BF  2AC2               	goto	l7059
  8700                           
  8701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  8702  02C0  3066               	movlw	102
  8703  02C1  2AC3               	goto	L6
  8704  02C2                     l7059:	
  8705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  8706                           
  8707                           
  8708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  8709  02C2  3065               	movlw	101
  8710  02C3                     L6:	
  8711  02C3  0021               	movlb	1	; select bank1
  8712  02C4  00A7               	movwf	??_efgtoa^(0+128)
  8713  02C5  0827               	movf	??_efgtoa^(0+128),w
  8714  02C6  00C9               	movwf	efgtoa@nmode^(0+128)
  8715  02C7                     l583:	
  8716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
  8717                           
  8718                           
  8719                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  8720  02C7  0848               	movf	(efgtoa@p+1)^(0+128),w
  8721  02C8  00C0               	movwf	(efgtoa@m+1)^(0+128)
  8722  02C9  0847               	movf	efgtoa@p^(0+128),w
  8723  02CA  00BF               	movwf	efgtoa@m^(0+128)
  8724                           
  8725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  8726  02CB  3067               	movlw	103
  8727  02CC  064C               	xorwf	efgtoa@mode^(0+128),w
  8728  02CD  1D03               	btfss	3,2
  8729  02CE  2AD4               	goto	l7067
  8730  02CF  3066               	movlw	102
  8731  02D0  0649               	xorwf	efgtoa@nmode^(0+128),w
  8732  02D1  1903               	btfsc	3,2
  8733  02D2  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  8734  02D3  2AD8               	goto	l7069
  8735  02D4                     l7067:	
  8736                           
  8737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  8738  02D4  3001               	movlw	1
  8739  02D5  07BF               	addwf	efgtoa@m^(0+128),f
  8740  02D6  3000               	movlw	0
  8741  02D7  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  8742  02D8                     l7069:	
  8743                           
  8744                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  8745  02D8  3066               	movlw	102
  8746  02D9  0649               	xorwf	efgtoa@nmode^(0+128),w
  8747  02DA  1D03               	btfss	3,2
  8748  02DB  2AF0               	goto	l7081
  8749                           
  8750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  8751  02DC  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  8752  02DD  2AE8               	goto	l7077
  8753                           
  8754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  8755  02DE  303F               	movlw	63
  8756  02DF  00E2               	movwf	(efgtoa@u+3)^(0+128)
  8757  02E0  3080               	movlw	128
  8758  02E1  00E1               	movwf	(efgtoa@u+2)^(0+128)
  8759  02E2  3000               	movlw	0
  8760  02E3  00E0               	movwf	(efgtoa@u+1)^(0+128)
  8761  02E4  3000               	movlw	0
  8762  02E5  00DF               	movwf	efgtoa@u^(0+128)
  8763                           
  8764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  8765  02E6  01DB               	clrf	efgtoa@e^(0+128)
  8766  02E7  01DC               	clrf	(efgtoa@e+1)^(0+128)
  8767  02E8                     l7077:	
  8768                           
  8769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  8770  02E8  3067               	movlw	103
  8771  02E9  064C               	xorwf	efgtoa@mode^(0+128),w
  8772  02EA  1903               	btfsc	3,2
  8773  02EB  2AF0               	goto	l7081
  8774                           
  8775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  8776  02EC  085B               	movf	efgtoa@e^(0+128),w
  8777  02ED  07BF               	addwf	efgtoa@m^(0+128),f
  8778  02EE  085C               	movf	(efgtoa@e+1)^(0+128),w
  8779  02EF  3DC0               	addwfc	(efgtoa@m+1)^(0+128),f
  8780  02F0                     l7081:	
  8781                           
  8782                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  8783  02F0  01D5               	clrf	efgtoa@i^(0+128)
  8784  02F1  01D6               	clrf	(efgtoa@i+1)^(0+128)
  8785                           
  8786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  8787  02F2  085A               	movf	(efgtoa@g+3)^(0+128),w
  8788  02F3  00D0               	movwf	(efgtoa@h+3)^(0+128)
  8789  02F4  0859               	movf	(efgtoa@g+2)^(0+128),w
  8790  02F5  00CF               	movwf	(efgtoa@h+2)^(0+128)
  8791  02F6  0858               	movf	(efgtoa@g+1)^(0+128),w
  8792  02F7  00CE               	movwf	(efgtoa@h+1)^(0+128)
  8793  02F8  0857               	movf	efgtoa@g^(0+128),w
  8794  02F9  00CD               	movwf	efgtoa@h^(0+128)
  8795                           
  8796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  8797  02FA  0862               	movf	(efgtoa@u+3)^(0+128),w
  8798  02FB  00AE               	movwf	(efgtoa@ou+3)^(0+128)
  8799  02FC  0861               	movf	(efgtoa@u+2)^(0+128),w
  8800  02FD  00AD               	movwf	(efgtoa@ou+2)^(0+128)
  8801  02FE  0860               	movf	(efgtoa@u+1)^(0+128),w
  8802  02FF  00AC               	movwf	(efgtoa@ou+1)^(0+128)
  8803  0300  085F               	movf	efgtoa@u^(0+128),w
  8804  0301  00AB               	movwf	efgtoa@ou^(0+128)
  8805  0302                     l7091:	
  8806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  8807                           
  8808                           
  8809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  8810  0302  0856               	movf	(efgtoa@i+1)^(0+128),w
  8811  0303  3A80               	xorlw	128
  8812  0304  00A7               	movwf	??_efgtoa^(0+128)
  8813  0305  0840               	movf	(efgtoa@m+1)^(0+128),w
  8814  0306  3A80               	xorlw	128
  8815  0307  0227               	subwf	??_efgtoa^(0+128),w
  8816  0308  1D03               	skipz
  8817  0309  2B0C               	goto	u10385
  8818  030A  083F               	movf	efgtoa@m^(0+128),w
  8819  030B  0255               	subwf	efgtoa@i^(0+128),w
  8820  030C                     u10385:	
  8821  030C  1803               	btfsc	3,0
  8822  030D  2BE6               	goto	l7093
  8823                           
  8824                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  8825  030E  0021               	movlb	1	; select bank1
  8826  030F  0862               	movf	(efgtoa@u+3)^(0+128),w
  8827  0310  0020               	movlb	0	; select bank0
  8828  0311  00C3               	movwf	___fldiv@a+3
  8829  0312  0021               	movlb	1	; select bank1
  8830  0313  0861               	movf	(efgtoa@u+2)^(0+128),w
  8831  0314  0020               	movlb	0	; select bank0
  8832  0315  00C2               	movwf	___fldiv@a+2
  8833  0316  0021               	movlb	1	; select bank1
  8834  0317  0860               	movf	(efgtoa@u+1)^(0+128),w
  8835  0318  0020               	movlb	0	; select bank0
  8836  0319  00C1               	movwf	___fldiv@a+1
  8837  031A  0021               	movlb	1	; select bank1
  8838  031B  085F               	movf	efgtoa@u^(0+128),w
  8839  031C  0020               	movlb	0	; select bank0
  8840  031D  00C0               	movwf	___fldiv@a
  8841  031E  0021               	movlb	1	; select bank1
  8842  031F  0850               	movf	(efgtoa@h+3)^(0+128),w
  8843  0320  0020               	movlb	0	; select bank0
  8844  0321  00C7               	movwf	___fldiv@b+3
  8845  0322  0021               	movlb	1	; select bank1
  8846  0323  084F               	movf	(efgtoa@h+2)^(0+128),w
  8847  0324  0020               	movlb	0	; select bank0
  8848  0325  00C6               	movwf	___fldiv@b+2
  8849  0326  0021               	movlb	1	; select bank1
  8850  0327  084E               	movf	(efgtoa@h+1)^(0+128),w
  8851  0328  0020               	movlb	0	; select bank0
  8852  0329  00C5               	movwf	___fldiv@b+1
  8853  032A  0021               	movlb	1	; select bank1
  8854  032B  084D               	movf	efgtoa@h^(0+128),w
  8855  032C  0020               	movlb	0	; select bank0
  8856  032D  00C4               	movwf	___fldiv@b
  8857  032E  3190  2061  3180   	fcall	___fldiv
  8858  0331  0020               	movlb	0	; select bank0
  8859  0332  0843               	movf	?___fldiv+3,w
  8860  0333  00DD               	movwf	floorf@x+3
  8861  0334  0842               	movf	?___fldiv+2,w
  8862  0335  00DC               	movwf	floorf@x+2
  8863  0336  0841               	movf	?___fldiv+1,w
  8864  0337  00DB               	movwf	floorf@x+1
  8865  0338  0840               	movf	?___fldiv,w
  8866  0339  00DA               	movwf	floorf@x
  8867  033A  31A5  256B  3180   	fcall	_floorf
  8868  033D  0020               	movlb	0	; select bank0
  8869  033E  085D               	movf	?_floorf+3,w
  8870  033F  0021               	movlb	1	; select bank1
  8871  0340  00D4               	movwf	(efgtoa@l+3)^(0+128)
  8872  0341  0020               	movlb	0	; select bank0
  8873  0342  085C               	movf	?_floorf+2,w
  8874  0343  0021               	movlb	1	; select bank1
  8875  0344  00D3               	movwf	(efgtoa@l+2)^(0+128)
  8876  0345  0020               	movlb	0	; select bank0
  8877  0346  085B               	movf	?_floorf+1,w
  8878  0347  0021               	movlb	1	; select bank1
  8879  0348  00D2               	movwf	(efgtoa@l+1)^(0+128)
  8880  0349  0020               	movlb	0	; select bank0
  8881  034A  085A               	movf	?_floorf,w
  8882  034B  0021               	movlb	1	; select bank1
  8883  034C  00D1               	movwf	efgtoa@l^(0+128)
  8884                           
  8885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  8886  034D  0854               	movf	(efgtoa@l+3)^(0+128),w
  8887  034E  0020               	movlb	0	; select bank0
  8888  034F  00DD               	movwf	___fltol@f1+3
  8889  0350  0021               	movlb	1	; select bank1
  8890  0351  0853               	movf	(efgtoa@l+2)^(0+128),w
  8891  0352  0020               	movlb	0	; select bank0
  8892  0353  00DC               	movwf	___fltol@f1+2
  8893  0354  0021               	movlb	1	; select bank1
  8894  0355  0852               	movf	(efgtoa@l+1)^(0+128),w
  8895  0356  0020               	movlb	0	; select bank0
  8896  0357  00DB               	movwf	___fltol@f1+1
  8897  0358  0021               	movlb	1	; select bank1
  8898  0359  0851               	movf	efgtoa@l^(0+128),w
  8899  035A  0020               	movlb	0	; select bank0
  8900  035B  00DA               	movwf	___fltol@f1
  8901  035C  31AB  23A4  3180   	fcall	___fltol
  8902  035F  0020               	movlb	0	; select bank0
  8903  0360  085B               	movf	?___fltol+1,w
  8904  0361  0021               	movlb	1	; select bank1
  8905  0362  00C4               	movwf	(efgtoa@d+1)^(0+128)
  8906  0363  0020               	movlb	0	; select bank0
  8907  0364  085A               	movf	?___fltol,w
  8908  0365  0021               	movlb	1	; select bank1
  8909  0366  00C3               	movwf	efgtoa@d^(0+128)
  8910                           
  8911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  8912  0367  0854               	movf	(efgtoa@l+3)^(0+128),w
  8913  0368  0020               	movlb	0	; select bank0
  8914  0369  00AD               	movwf	___flmul@a+3
  8915  036A  0021               	movlb	1	; select bank1
  8916  036B  0853               	movf	(efgtoa@l+2)^(0+128),w
  8917  036C  0020               	movlb	0	; select bank0
  8918  036D  00AC               	movwf	___flmul@a+2
  8919  036E  0021               	movlb	1	; select bank1
  8920  036F  0852               	movf	(efgtoa@l+1)^(0+128),w
  8921  0370  0020               	movlb	0	; select bank0
  8922  0371  00AB               	movwf	___flmul@a+1
  8923  0372  0021               	movlb	1	; select bank1
  8924  0373  0851               	movf	efgtoa@l^(0+128),w
  8925  0374  0020               	movlb	0	; select bank0
  8926  0375  00AA               	movwf	___flmul@a
  8927  0376  0021               	movlb	1	; select bank1
  8928  0377  0862               	movf	(efgtoa@u+3)^(0+128),w
  8929  0378  0020               	movlb	0	; select bank0
  8930  0379  00A9               	movwf	___flmul@b+3
  8931  037A  0021               	movlb	1	; select bank1
  8932  037B  0861               	movf	(efgtoa@u+2)^(0+128),w
  8933  037C  0020               	movlb	0	; select bank0
  8934  037D  00A8               	movwf	___flmul@b+2
  8935  037E  0021               	movlb	1	; select bank1
  8936  037F  0860               	movf	(efgtoa@u+1)^(0+128),w
  8937  0380  0020               	movlb	0	; select bank0
  8938  0381  00A7               	movwf	___flmul@b+1
  8939  0382  0021               	movlb	1	; select bank1
  8940  0383  085F               	movf	efgtoa@u^(0+128),w
  8941  0384  0020               	movlb	0	; select bank0
  8942  0385  00A6               	movwf	___flmul@b
  8943  0386  3195  25D4  3180   	fcall	___flmul
  8944  0389  0020               	movlb	0	; select bank0
  8945  038A  0829               	movf	?___flmul+3,w
  8946  038B  00C3               	movwf	___flsub@a+3
  8947  038C  0828               	movf	?___flmul+2,w
  8948  038D  00C2               	movwf	___flsub@a+2
  8949  038E  0827               	movf	?___flmul+1,w
  8950  038F  00C1               	movwf	___flsub@a+1
  8951  0390  0826               	movf	?___flmul,w
  8952  0391  00C0               	movwf	___flsub@a
  8953  0392  0021               	movlb	1	; select bank1
  8954  0393  0850               	movf	(efgtoa@h+3)^(0+128),w
  8955  0394  0020               	movlb	0	; select bank0
  8956  0395  00C7               	movwf	___flsub@b+3
  8957  0396  0021               	movlb	1	; select bank1
  8958  0397  084F               	movf	(efgtoa@h+2)^(0+128),w
  8959  0398  0020               	movlb	0	; select bank0
  8960  0399  00C6               	movwf	___flsub@b+2
  8961  039A  0021               	movlb	1	; select bank1
  8962  039B  084E               	movf	(efgtoa@h+1)^(0+128),w
  8963  039C  0020               	movlb	0	; select bank0
  8964  039D  00C5               	movwf	___flsub@b+1
  8965  039E  0021               	movlb	1	; select bank1
  8966  039F  084D               	movf	efgtoa@h^(0+128),w
  8967  03A0  0020               	movlb	0	; select bank0
  8968  03A1  00C4               	movwf	___flsub@b
  8969  03A2  31A8  2003  3180   	fcall	___flsub
  8970  03A5  0020               	movlb	0	; select bank0
  8971  03A6  0843               	movf	?___flsub+3,w
  8972  03A7  0021               	movlb	1	; select bank1
  8973  03A8  00D0               	movwf	(efgtoa@h+3)^(0+128)
  8974  03A9  0020               	movlb	0	; select bank0
  8975  03AA  0842               	movf	?___flsub+2,w
  8976  03AB  0021               	movlb	1	; select bank1
  8977  03AC  00CF               	movwf	(efgtoa@h+2)^(0+128)
  8978  03AD  0020               	movlb	0	; select bank0
  8979  03AE  0841               	movf	?___flsub+1,w
  8980  03AF  0021               	movlb	1	; select bank1
  8981  03B0  00CE               	movwf	(efgtoa@h+1)^(0+128)
  8982  03B1  0020               	movlb	0	; select bank0
  8983  03B2  0840               	movf	?___flsub,w
  8984  03B3  0021               	movlb	1	; select bank1
  8985  03B4  00CD               	movwf	efgtoa@h^(0+128)
  8986                           
  8987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  8988  03B5  3041               	movlw	65
  8989  03B6  0020               	movlb	0	; select bank0
  8990  03B7  00C3               	movwf	___fldiv@a+3
  8991  03B8  3020               	movlw	32
  8992  03B9  00C2               	movwf	___fldiv@a+2
  8993  03BA  3000               	movlw	0
  8994  03BB  00C1               	movwf	___fldiv@a+1
  8995  03BC  3000               	movlw	0
  8996  03BD  00C0               	movwf	___fldiv@a
  8997  03BE  0021               	movlb	1	; select bank1
  8998  03BF  0862               	movf	(efgtoa@u+3)^(0+128),w
  8999  03C0  0020               	movlb	0	; select bank0
  9000  03C1  00C7               	movwf	___fldiv@b+3
  9001  03C2  0021               	movlb	1	; select bank1
  9002  03C3  0861               	movf	(efgtoa@u+2)^(0+128),w
  9003  03C4  0020               	movlb	0	; select bank0
  9004  03C5  00C6               	movwf	___fldiv@b+2
  9005  03C6  0021               	movlb	1	; select bank1
  9006  03C7  0860               	movf	(efgtoa@u+1)^(0+128),w
  9007  03C8  0020               	movlb	0	; select bank0
  9008  03C9  00C5               	movwf	___fldiv@b+1
  9009  03CA  0021               	movlb	1	; select bank1
  9010  03CB  085F               	movf	efgtoa@u^(0+128),w
  9011  03CC  0020               	movlb	0	; select bank0
  9012  03CD  00C4               	movwf	___fldiv@b
  9013  03CE  3190  2061  3180   	fcall	___fldiv
  9014  03D1  0020               	movlb	0	; select bank0
  9015  03D2  0843               	movf	?___fldiv+3,w
  9016  03D3  0021               	movlb	1	; select bank1
  9017  03D4  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9018  03D5  0020               	movlb	0	; select bank0
  9019  03D6  0842               	movf	?___fldiv+2,w
  9020  03D7  0021               	movlb	1	; select bank1
  9021  03D8  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9022  03D9  0020               	movlb	0	; select bank0
  9023  03DA  0841               	movf	?___fldiv+1,w
  9024  03DB  0021               	movlb	1	; select bank1
  9025  03DC  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9026  03DD  0020               	movlb	0	; select bank0
  9027  03DE  0840               	movf	?___fldiv,w
  9028  03DF  0021               	movlb	1	; select bank1
  9029  03E0  00DF               	movwf	efgtoa@u^(0+128)
  9030                           
  9031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  9032  03E1  3001               	movlw	1
  9033  03E2  07D5               	addwf	efgtoa@i^(0+128),f
  9034  03E3  3000               	movlw	0
  9035  03E4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9036  03E5  2B02               	goto	l7091
  9037  03E6                     l7093:	
  9038                           
  9039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  9040  03E6  3040               	movlw	64
  9041  03E7  0020               	movlb	0	; select bank0
  9042  03E8  00A9               	movwf	___flmul@b+3
  9043  03E9  30A0               	movlw	160
  9044  03EA  00A8               	movwf	___flmul@b+2
  9045  03EB  3000               	movlw	0
  9046  03EC  00A7               	movwf	___flmul@b+1
  9047  03ED  3000               	movlw	0
  9048  03EE  00A6               	movwf	___flmul@b
  9049  03EF  0021               	movlb	1	; select bank1
  9050  03F0  0862               	movf	(efgtoa@u+3)^(0+128),w
  9051  03F1  0020               	movlb	0	; select bank0
  9052  03F2  00AD               	movwf	___flmul@a+3
  9053  03F3  0021               	movlb	1	; select bank1
  9054  03F4  0861               	movf	(efgtoa@u+2)^(0+128),w
  9055  03F5  0020               	movlb	0	; select bank0
  9056  03F6  00AC               	movwf	___flmul@a+2
  9057  03F7  0021               	movlb	1	; select bank1
  9058  03F8  0860               	movf	(efgtoa@u+1)^(0+128),w
  9059  03F9  0020               	movlb	0	; select bank0
  9060  03FA  00AB               	movwf	___flmul@a+1
  9061  03FB  0021               	movlb	1	; select bank1
  9062  03FC  085F               	movf	efgtoa@u^(0+128),w
  9063  03FD  0020               	movlb	0	; select bank0
  9064  03FE  00AA               	movwf	___flmul@a
  9065  03FF  3195  25D4  3180   	fcall	___flmul
  9066  0402  0020               	movlb	0	; select bank0
  9067  0403  0829               	movf	?___flmul+3,w
  9068  0404  0021               	movlb	1	; select bank1
  9069  0405  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9070  0406  0020               	movlb	0	; select bank0
  9071  0407  0828               	movf	?___flmul+2,w
  9072  0408  0021               	movlb	1	; select bank1
  9073  0409  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9074  040A  0020               	movlb	0	; select bank0
  9075  040B  0827               	movf	?___flmul+1,w
  9076  040C  0021               	movlb	1	; select bank1
  9077  040D  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9078  040E  0020               	movlb	0	; select bank0
  9079  040F  0826               	movf	?___flmul,w
  9080  0410  0021               	movlb	1	; select bank1
  9081  0411  00D1               	movwf	efgtoa@l^(0+128)
  9082                           
  9083                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  9084  0412  0850               	movf	(efgtoa@h+3)^(0+128),w
  9085  0413  0020               	movlb	0	; select bank0
  9086  0414  00DD               	movwf	___flge@ff1+3
  9087  0415  0021               	movlb	1	; select bank1
  9088  0416  084F               	movf	(efgtoa@h+2)^(0+128),w
  9089  0417  0020               	movlb	0	; select bank0
  9090  0418  00DC               	movwf	___flge@ff1+2
  9091  0419  0021               	movlb	1	; select bank1
  9092  041A  084E               	movf	(efgtoa@h+1)^(0+128),w
  9093  041B  0020               	movlb	0	; select bank0
  9094  041C  00DB               	movwf	___flge@ff1+1
  9095  041D  0021               	movlb	1	; select bank1
  9096  041E  084D               	movf	efgtoa@h^(0+128),w
  9097  041F  0020               	movlb	0	; select bank0
  9098  0420  00DA               	movwf	___flge@ff1
  9099  0421  0021               	movlb	1	; select bank1
  9100  0422  0854               	movf	(efgtoa@l+3)^(0+128),w
  9101  0423  0020               	movlb	0	; select bank0
  9102  0424  00E1               	movwf	___flge@ff2+3
  9103  0425  0021               	movlb	1	; select bank1
  9104  0426  0853               	movf	(efgtoa@l+2)^(0+128),w
  9105  0427  0020               	movlb	0	; select bank0
  9106  0428  00E0               	movwf	___flge@ff2+2
  9107  0429  0021               	movlb	1	; select bank1
  9108  042A  0852               	movf	(efgtoa@l+1)^(0+128),w
  9109  042B  0020               	movlb	0	; select bank0
  9110  042C  00DF               	movwf	___flge@ff2+1
  9111  042D  0021               	movlb	1	; select bank1
  9112  042E  0851               	movf	efgtoa@l^(0+128),w
  9113  042F  0020               	movlb	0	; select bank0
  9114  0430  00DE               	movwf	___flge@ff2
  9115  0431  31AC  24EB  3180   	fcall	___flge
  9116  0434  1803               	btfsc	3,0
  9117  0435  2C39               	goto	l7097
  9118                           
  9119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  9120  0436  3000               	movlw	0
  9121  0437  0021               	movlb	1	; select bank1
  9122  0438  2C53               	goto	L7
  9123  0439                     l7097:	
  9124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  9125                           
  9126                           
  9127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  9128  0439  0021               	movlb	1	; select bank1
  9129  043A  0850               	movf	(efgtoa@h+3)^(0+128),w
  9130  043B  00F4               	movwf	___fleq@ff1+3
  9131  043C  084F               	movf	(efgtoa@h+2)^(0+128),w
  9132  043D  00F3               	movwf	___fleq@ff1+2
  9133  043E  084E               	movf	(efgtoa@h+1)^(0+128),w
  9134  043F  00F2               	movwf	___fleq@ff1+1
  9135  0440  084D               	movf	efgtoa@h^(0+128),w
  9136  0441  00F1               	movwf	___fleq@ff1
  9137  0442  0854               	movf	(efgtoa@l+3)^(0+128),w
  9138  0443  00F8               	movwf	___fleq@ff2+3
  9139  0444  0853               	movf	(efgtoa@l+2)^(0+128),w
  9140  0445  00F7               	movwf	___fleq@ff2+2
  9141  0446  0852               	movf	(efgtoa@l+1)^(0+128),w
  9142  0447  00F6               	movwf	___fleq@ff2+1
  9143  0448  0851               	movf	efgtoa@l^(0+128),w
  9144  0449  00F5               	movwf	___fleq@ff2
  9145  044A  31AA  2269  3180   	fcall	___fleq
  9146  044D  1C03               	btfss	3,0
  9147  044E  2C5A               	goto	l7103
  9148  044F  0021               	movlb	1	; select bank1
  9149  0450  1843               	btfsc	efgtoa@d^(0+128),0
  9150  0451  2C5A               	goto	l7103
  9151                           
  9152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  9153  0452  3000               	movlw	0
  9154  0453                     L7:	
  9155  0453  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9156  0454  3000               	movlw	0
  9157  0455  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9158  0456  3000               	movlw	0
  9159  0457  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9160  0458  3000               	movlw	0
  9161  0459  00D1               	movwf	efgtoa@l^(0+128)
  9162  045A                     l7103:	
  9163                           
  9164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  9165  045A  0021               	movlb	1	; select bank1
  9166  045B  0854               	movf	(efgtoa@l+3)^(0+128),w
  9167  045C  00F4               	movwf	___fladd@b+3
  9168  045D  0853               	movf	(efgtoa@l+2)^(0+128),w
  9169  045E  00F3               	movwf	___fladd@b+2
  9170  045F  0852               	movf	(efgtoa@l+1)^(0+128),w
  9171  0460  00F2               	movwf	___fladd@b+1
  9172  0461  0851               	movf	efgtoa@l^(0+128),w
  9173  0462  00F1               	movwf	___fladd@b
  9174  0463  085A               	movf	(efgtoa@g+3)^(0+128),w
  9175  0464  00F8               	movwf	___fladd@a+3
  9176  0465  0859               	movf	(efgtoa@g+2)^(0+128),w
  9177  0466  00F7               	movwf	___fladd@a+2
  9178  0467  0858               	movf	(efgtoa@g+1)^(0+128),w
  9179  0468  00F6               	movwf	___fladd@a+1
  9180  0469  0857               	movf	efgtoa@g^(0+128),w
  9181  046A  00F5               	movwf	___fladd@a
  9182  046B  3191  21DB  3180   	fcall	___fladd
  9183  046E  0874               	movf	?___fladd+3,w
  9184  046F  0021               	movlb	1	; select bank1
  9185  0470  00D0               	movwf	(efgtoa@h+3)^(0+128)
  9186  0471  0873               	movf	?___fladd+2,w
  9187  0472  00CF               	movwf	(efgtoa@h+2)^(0+128)
  9188  0473  0872               	movf	?___fladd+1,w
  9189  0474  00CE               	movwf	(efgtoa@h+1)^(0+128)
  9190  0475  0871               	movf	?___fladd,w
  9191  0476  00CD               	movwf	efgtoa@h^(0+128)
  9192                           
  9193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  9194  0477  082E               	movf	(efgtoa@ou+3)^(0+128),w
  9195  0478  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9196  0479  082D               	movf	(efgtoa@ou+2)^(0+128),w
  9197  047A  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9198  047B  082C               	movf	(efgtoa@ou+1)^(0+128),w
  9199  047C  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9200  047D  082B               	movf	efgtoa@ou^(0+128),w
  9201  047E  00DF               	movwf	efgtoa@u^(0+128)
  9202                           
  9203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  9204  047F  3065               	movlw	101
  9205  0480  0649               	xorwf	efgtoa@nmode^(0+128),w
  9206  0481  1903               	btfsc	3,2
  9207  0482  2C88               	goto	l7111
  9208  0483  085C               	movf	(efgtoa@e+1)^(0+128),w
  9209  0484  00C2               	movwf	(efgtoa@ne+1)^(0+128)
  9210  0485  085B               	movf	efgtoa@e^(0+128),w
  9211  0486  00C1               	movwf	efgtoa@ne^(0+128)
  9212  0487  2C8A               	goto	l601
  9213  0488                     l7111:	
  9214  0488  01C1               	clrf	efgtoa@ne^(0+128)
  9215  0489  01C2               	clrf	(efgtoa@ne+1)^(0+128)
  9216  048A                     l601:	
  9217                           
  9218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  9219  048A  01BD               	clrf	efgtoa@pp^(0+128)
  9220  048B  01BE               	clrf	(efgtoa@pp+1)^(0+128)
  9221                           
  9222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  9223  048C  01BB               	clrf	efgtoa@t^(0+128)
  9224  048D  01BC               	clrf	(efgtoa@t+1)^(0+128)
  9225                           
  9226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  9227  048E  01D5               	clrf	efgtoa@i^(0+128)
  9228  048F  01D6               	clrf	(efgtoa@i+1)^(0+128)
  9229                           
  9230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9231  0490  2DC5               	goto	l7161
  9232  0491                     l7113:	
  9233                           
  9234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  9235  0491  0021               	movlb	1	; select bank1
  9236  0492  0862               	movf	(efgtoa@u+3)^(0+128),w
  9237  0493  0020               	movlb	0	; select bank0
  9238  0494  00C3               	movwf	___fldiv@a+3
  9239  0495  0021               	movlb	1	; select bank1
  9240  0496  0861               	movf	(efgtoa@u+2)^(0+128),w
  9241  0497  0020               	movlb	0	; select bank0
  9242  0498  00C2               	movwf	___fldiv@a+2
  9243  0499  0021               	movlb	1	; select bank1
  9244  049A  0860               	movf	(efgtoa@u+1)^(0+128),w
  9245  049B  0020               	movlb	0	; select bank0
  9246  049C  00C1               	movwf	___fldiv@a+1
  9247  049D  0021               	movlb	1	; select bank1
  9248  049E  085F               	movf	efgtoa@u^(0+128),w
  9249  049F  0020               	movlb	0	; select bank0
  9250  04A0  00C0               	movwf	___fldiv@a
  9251  04A1  0021               	movlb	1	; select bank1
  9252  04A2  0850               	movf	(efgtoa@h+3)^(0+128),w
  9253  04A3  0020               	movlb	0	; select bank0
  9254  04A4  00C7               	movwf	___fldiv@b+3
  9255  04A5  0021               	movlb	1	; select bank1
  9256  04A6  084F               	movf	(efgtoa@h+2)^(0+128),w
  9257  04A7  0020               	movlb	0	; select bank0
  9258  04A8  00C6               	movwf	___fldiv@b+2
  9259  04A9  0021               	movlb	1	; select bank1
  9260  04AA  084E               	movf	(efgtoa@h+1)^(0+128),w
  9261  04AB  0020               	movlb	0	; select bank0
  9262  04AC  00C5               	movwf	___fldiv@b+1
  9263  04AD  0021               	movlb	1	; select bank1
  9264  04AE  084D               	movf	efgtoa@h^(0+128),w
  9265  04AF  0020               	movlb	0	; select bank0
  9266  04B0  00C4               	movwf	___fldiv@b
  9267  04B1  3190  2061  3180   	fcall	___fldiv
  9268  04B4  0020               	movlb	0	; select bank0
  9269  04B5  0843               	movf	?___fldiv+3,w
  9270  04B6  00DD               	movwf	floorf@x+3
  9271  04B7  0842               	movf	?___fldiv+2,w
  9272  04B8  00DC               	movwf	floorf@x+2
  9273  04B9  0841               	movf	?___fldiv+1,w
  9274  04BA  00DB               	movwf	floorf@x+1
  9275  04BB  0840               	movf	?___fldiv,w
  9276  04BC  00DA               	movwf	floorf@x
  9277  04BD  31A5  256B  3180   	fcall	_floorf
  9278  04C0  0020               	movlb	0	; select bank0
  9279  04C1  085D               	movf	?_floorf+3,w
  9280  04C2  0021               	movlb	1	; select bank1
  9281  04C3  00D4               	movwf	(efgtoa@l+3)^(0+128)
  9282  04C4  0020               	movlb	0	; select bank0
  9283  04C5  085C               	movf	?_floorf+2,w
  9284  04C6  0021               	movlb	1	; select bank1
  9285  04C7  00D3               	movwf	(efgtoa@l+2)^(0+128)
  9286  04C8  0020               	movlb	0	; select bank0
  9287  04C9  085B               	movf	?_floorf+1,w
  9288  04CA  0021               	movlb	1	; select bank1
  9289  04CB  00D2               	movwf	(efgtoa@l+1)^(0+128)
  9290  04CC  0020               	movlb	0	; select bank0
  9291  04CD  085A               	movf	?_floorf,w
  9292  04CE  0021               	movlb	1	; select bank1
  9293  04CF  00D1               	movwf	efgtoa@l^(0+128)
  9294                           
  9295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  9296  04D0  0854               	movf	(efgtoa@l+3)^(0+128),w
  9297  04D1  0020               	movlb	0	; select bank0
  9298  04D2  00DD               	movwf	___fltol@f1+3
  9299  04D3  0021               	movlb	1	; select bank1
  9300  04D4  0853               	movf	(efgtoa@l+2)^(0+128),w
  9301  04D5  0020               	movlb	0	; select bank0
  9302  04D6  00DC               	movwf	___fltol@f1+2
  9303  04D7  0021               	movlb	1	; select bank1
  9304  04D8  0852               	movf	(efgtoa@l+1)^(0+128),w
  9305  04D9  0020               	movlb	0	; select bank0
  9306  04DA  00DB               	movwf	___fltol@f1+1
  9307  04DB  0021               	movlb	1	; select bank1
  9308  04DC  0851               	movf	efgtoa@l^(0+128),w
  9309  04DD  0020               	movlb	0	; select bank0
  9310  04DE  00DA               	movwf	___fltol@f1
  9311  04DF  31AB  23A4  3180   	fcall	___fltol
  9312  04E2  0020               	movlb	0	; select bank0
  9313  04E3  085B               	movf	?___fltol+1,w
  9314  04E4  0021               	movlb	1	; select bank1
  9315  04E5  00C4               	movwf	(efgtoa@d+1)^(0+128)
  9316  04E6  0020               	movlb	0	; select bank0
  9317  04E7  085A               	movf	?___fltol,w
  9318  04E8  0021               	movlb	1	; select bank1
  9319  04E9  00C3               	movwf	efgtoa@d^(0+128)
  9320                           
  9321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9322  04EA  0023               	movlb	3	; select bank3
  9323  04EB  1A42               	btfsc	_flags^(0+384),4
  9324  04EC  2CFC               	goto	l7125
  9325  04ED  0021               	movlb	1	; select bank1
  9326  04EE  0843               	movf	efgtoa@d^(0+128),w
  9327  04EF  0444               	iorwf	(efgtoa@d+1)^(0+128),w
  9328  04F0  1D03               	btfss	3,2
  9329  04F1  2CFC               	goto	l7125
  9330  04F2  3067               	movlw	103
  9331  04F3  064C               	xorwf	efgtoa@mode^(0+128),w
  9332  04F4  1903               	btfsc	3,2
  9333  04F5  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
  9334  04F6  2CFC               	goto	l7125
  9335                           
  9336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  9337  04F7  3001               	movlw	1
  9338  04F8  07BB               	addwf	efgtoa@t^(0+128),f
  9339  04F9  3000               	movlw	0
  9340  04FA  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
  9341                           
  9342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  9343  04FB  2D43               	goto	l7153
  9344  04FC                     l7125:	
  9345                           
  9346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  9347  04FC  0021               	movlb	1	; select bank1
  9348  04FD  083D               	movf	efgtoa@pp^(0+128),w
  9349  04FE  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
  9350  04FF  1903               	btfsc	3,2
  9351  0500  1FC2               	btfss	(efgtoa@ne+1)^(0+128),7
  9352  0501  2D17               	goto	l7145
  9353                           
  9354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  9355  0502  302E               	movlw	46
  9356  0503  00A7               	movwf	??_efgtoa^(0+128)
  9357  0504  085D               	movf	efgtoa@n^(0+128),w
  9358  0505  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9359  0506  0086               	movwf	6
  9360  0507  3002               	movlw	2	; select bank4/5
  9361  0508  0087               	movwf	7
  9362  0509  0827               	movf	??_efgtoa^(0+128),w
  9363  050A  0081               	movwf	1
  9364  050B  3001               	movlw	1
  9365  050C  07DD               	addwf	efgtoa@n^(0+128),f
  9366  050D  3000               	movlw	0
  9367  050E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9368                           
  9369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  9370  050F  30FF               	movlw	255
  9371  0510  07CA               	addwf	efgtoa@w^(0+128),f
  9372  0511  30FF               	movlw	255
  9373  0512  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9374                           
  9375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  9376  0513  3001               	movlw	1
  9377  0514  00BD               	movwf	efgtoa@pp^(0+128)
  9378  0515  3000               	movlw	0
  9379  0516  00BE               	movwf	(efgtoa@pp^(0+128)+1)
  9380  0517                     l7145:	
  9381                           
  9382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  9383  0517  083B               	movf	efgtoa@t^(0+128),w
  9384  0518  043C               	iorwf	(efgtoa@t+1)^(0+128),w
  9385  0519  1903               	btfsc	3,2
  9386  051A  2D31               	goto	l7147
  9387                           
  9388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  9389  051B  3030               	movlw	48
  9390  051C  00A7               	movwf	??_efgtoa^(0+128)
  9391  051D  085D               	movf	efgtoa@n^(0+128),w
  9392  051E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9393  051F  0086               	movwf	6
  9394  0520  3002               	movlw	2	; select bank4/5
  9395  0521  0087               	movwf	7
  9396  0522  0827               	movf	??_efgtoa^(0+128),w
  9397  0523  0081               	movwf	1
  9398  0524  3001               	movlw	1
  9399  0525  07DD               	addwf	efgtoa@n^(0+128),f
  9400  0526  3000               	movlw	0
  9401  0527  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9402                           
  9403                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  9404  0528  30FF               	movlw	255
  9405  0529  07CA               	addwf	efgtoa@w^(0+128),f
  9406  052A  30FF               	movlw	255
  9407  052B  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9408                           
  9409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  9410  052C  30FF               	movlw	255
  9411  052D  07BB               	addwf	efgtoa@t^(0+128),f
  9412  052E  30FF               	movlw	255
  9413  052F  3DBC               	addwfc	(efgtoa@t+1)^(0+128),f
  9414  0530  2D17               	goto	l7145
  9415  0531                     l7147:	
  9416                           
  9417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  9418  0531  0843               	movf	efgtoa@d^(0+128),w
  9419  0532  3E30               	addlw	48
  9420  0533  00A7               	movwf	??_efgtoa^(0+128)
  9421  0534  085D               	movf	efgtoa@n^(0+128),w
  9422  0535  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9423  0536  0086               	movwf	6
  9424  0537  3002               	movlw	2	; select bank4/5
  9425  0538  0087               	movwf	7
  9426  0539  0827               	movf	??_efgtoa^(0+128),w
  9427  053A  0081               	movwf	1
  9428  053B  3001               	movlw	1
  9429  053C  07DD               	addwf	efgtoa@n^(0+128),f
  9430  053D  3000               	movlw	0
  9431  053E  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9432                           
  9433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  9434  053F  30FF               	movlw	255
  9435  0540  07CA               	addwf	efgtoa@w^(0+128),f
  9436  0541  30FF               	movlw	255
  9437  0542  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9438  0543                     l7153:	
  9439                           
  9440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  9441  0543  0854               	movf	(efgtoa@l+3)^(0+128),w
  9442  0544  0020               	movlb	0	; select bank0
  9443  0545  00AD               	movwf	___flmul@a+3
  9444  0546  0021               	movlb	1	; select bank1
  9445  0547  0853               	movf	(efgtoa@l+2)^(0+128),w
  9446  0548  0020               	movlb	0	; select bank0
  9447  0549  00AC               	movwf	___flmul@a+2
  9448  054A  0021               	movlb	1	; select bank1
  9449  054B  0852               	movf	(efgtoa@l+1)^(0+128),w
  9450  054C  0020               	movlb	0	; select bank0
  9451  054D  00AB               	movwf	___flmul@a+1
  9452  054E  0021               	movlb	1	; select bank1
  9453  054F  0851               	movf	efgtoa@l^(0+128),w
  9454  0550  0020               	movlb	0	; select bank0
  9455  0551  00AA               	movwf	___flmul@a
  9456  0552  0021               	movlb	1	; select bank1
  9457  0553  0862               	movf	(efgtoa@u+3)^(0+128),w
  9458  0554  0020               	movlb	0	; select bank0
  9459  0555  00A9               	movwf	___flmul@b+3
  9460  0556  0021               	movlb	1	; select bank1
  9461  0557  0861               	movf	(efgtoa@u+2)^(0+128),w
  9462  0558  0020               	movlb	0	; select bank0
  9463  0559  00A8               	movwf	___flmul@b+2
  9464  055A  0021               	movlb	1	; select bank1
  9465  055B  0860               	movf	(efgtoa@u+1)^(0+128),w
  9466  055C  0020               	movlb	0	; select bank0
  9467  055D  00A7               	movwf	___flmul@b+1
  9468  055E  0021               	movlb	1	; select bank1
  9469  055F  085F               	movf	efgtoa@u^(0+128),w
  9470  0560  0020               	movlb	0	; select bank0
  9471  0561  00A6               	movwf	___flmul@b
  9472  0562  3195  25D4  3180   	fcall	___flmul
  9473  0565  0020               	movlb	0	; select bank0
  9474  0566  0829               	movf	?___flmul+3,w
  9475  0567  00C3               	movwf	___flsub@a+3
  9476  0568  0828               	movf	?___flmul+2,w
  9477  0569  00C2               	movwf	___flsub@a+2
  9478  056A  0827               	movf	?___flmul+1,w
  9479  056B  00C1               	movwf	___flsub@a+1
  9480  056C  0826               	movf	?___flmul,w
  9481  056D  00C0               	movwf	___flsub@a
  9482  056E  0021               	movlb	1	; select bank1
  9483  056F  0850               	movf	(efgtoa@h+3)^(0+128),w
  9484  0570  0020               	movlb	0	; select bank0
  9485  0571  00C7               	movwf	___flsub@b+3
  9486  0572  0021               	movlb	1	; select bank1
  9487  0573  084F               	movf	(efgtoa@h+2)^(0+128),w
  9488  0574  0020               	movlb	0	; select bank0
  9489  0575  00C6               	movwf	___flsub@b+2
  9490  0576  0021               	movlb	1	; select bank1
  9491  0577  084E               	movf	(efgtoa@h+1)^(0+128),w
  9492  0578  0020               	movlb	0	; select bank0
  9493  0579  00C5               	movwf	___flsub@b+1
  9494  057A  0021               	movlb	1	; select bank1
  9495  057B  084D               	movf	efgtoa@h^(0+128),w
  9496  057C  0020               	movlb	0	; select bank0
  9497  057D  00C4               	movwf	___flsub@b
  9498  057E  31A8  2003  3180   	fcall	___flsub
  9499  0581  0020               	movlb	0	; select bank0
  9500  0582  0843               	movf	?___flsub+3,w
  9501  0583  0021               	movlb	1	; select bank1
  9502  0584  00D0               	movwf	(efgtoa@h+3)^(0+128)
  9503  0585  0020               	movlb	0	; select bank0
  9504  0586  0842               	movf	?___flsub+2,w
  9505  0587  0021               	movlb	1	; select bank1
  9506  0588  00CF               	movwf	(efgtoa@h+2)^(0+128)
  9507  0589  0020               	movlb	0	; select bank0
  9508  058A  0841               	movf	?___flsub+1,w
  9509  058B  0021               	movlb	1	; select bank1
  9510  058C  00CE               	movwf	(efgtoa@h+1)^(0+128)
  9511  058D  0020               	movlb	0	; select bank0
  9512  058E  0840               	movf	?___flsub,w
  9513  058F  0021               	movlb	1	; select bank1
  9514  0590  00CD               	movwf	efgtoa@h^(0+128)
  9515                           
  9516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  9517  0591  3041               	movlw	65
  9518  0592  0020               	movlb	0	; select bank0
  9519  0593  00C3               	movwf	___fldiv@a+3
  9520  0594  3020               	movlw	32
  9521  0595  00C2               	movwf	___fldiv@a+2
  9522  0596  3000               	movlw	0
  9523  0597  00C1               	movwf	___fldiv@a+1
  9524  0598  3000               	movlw	0
  9525  0599  00C0               	movwf	___fldiv@a
  9526  059A  0021               	movlb	1	; select bank1
  9527  059B  0862               	movf	(efgtoa@u+3)^(0+128),w
  9528  059C  0020               	movlb	0	; select bank0
  9529  059D  00C7               	movwf	___fldiv@b+3
  9530  059E  0021               	movlb	1	; select bank1
  9531  059F  0861               	movf	(efgtoa@u+2)^(0+128),w
  9532  05A0  0020               	movlb	0	; select bank0
  9533  05A1  00C6               	movwf	___fldiv@b+2
  9534  05A2  0021               	movlb	1	; select bank1
  9535  05A3  0860               	movf	(efgtoa@u+1)^(0+128),w
  9536  05A4  0020               	movlb	0	; select bank0
  9537  05A5  00C5               	movwf	___fldiv@b+1
  9538  05A6  0021               	movlb	1	; select bank1
  9539  05A7  085F               	movf	efgtoa@u^(0+128),w
  9540  05A8  0020               	movlb	0	; select bank0
  9541  05A9  00C4               	movwf	___fldiv@b
  9542  05AA  3190  2061  3180   	fcall	___fldiv
  9543  05AD  0020               	movlb	0	; select bank0
  9544  05AE  0843               	movf	?___fldiv+3,w
  9545  05AF  0021               	movlb	1	; select bank1
  9546  05B0  00E2               	movwf	(efgtoa@u+3)^(0+128)
  9547  05B1  0020               	movlb	0	; select bank0
  9548  05B2  0842               	movf	?___fldiv+2,w
  9549  05B3  0021               	movlb	1	; select bank1
  9550  05B4  00E1               	movwf	(efgtoa@u+2)^(0+128)
  9551  05B5  0020               	movlb	0	; select bank0
  9552  05B6  0841               	movf	?___fldiv+1,w
  9553  05B7  0021               	movlb	1	; select bank1
  9554  05B8  00E0               	movwf	(efgtoa@u+1)^(0+128)
  9555  05B9  0020               	movlb	0	; select bank0
  9556  05BA  0840               	movf	?___fldiv,w
  9557  05BB  0021               	movlb	1	; select bank1
  9558  05BC  00DF               	movwf	efgtoa@u^(0+128)
  9559                           
  9560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  9561  05BD  30FF               	movlw	255
  9562  05BE  07C1               	addwf	efgtoa@ne^(0+128),f
  9563  05BF  30FF               	movlw	255
  9564  05C0  3DC2               	addwfc	(efgtoa@ne+1)^(0+128),f
  9565                           
  9566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  9567  05C1  3001               	movlw	1
  9568  05C2  07D5               	addwf	efgtoa@i^(0+128),f
  9569  05C3  3000               	movlw	0
  9570  05C4  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9571  05C5                     l7161:	
  9572                           
  9573                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  9574  05C5  0856               	movf	(efgtoa@i+1)^(0+128),w
  9575  05C6  3A80               	xorlw	128
  9576  05C7  00A7               	movwf	??_efgtoa^(0+128)
  9577  05C8  0840               	movf	(efgtoa@m+1)^(0+128),w
  9578  05C9  3A80               	xorlw	128
  9579  05CA  0227               	subwf	??_efgtoa^(0+128),w
  9580  05CB  1D03               	skipz
  9581  05CC  2DCF               	goto	u10505
  9582  05CD  083F               	movf	efgtoa@m^(0+128),w
  9583  05CE  0255               	subwf	efgtoa@i^(0+128),w
  9584  05CF                     u10505:	
  9585  05CF  1803               	skipnc
  9586  05D0  2DDD               	goto	l7165
  9587  05D1  0021               	movlb	1	; select bank1
  9588  05D2  085E               	movf	(efgtoa@n+1)^(0+128),w
  9589  05D3  3A80               	xorlw	128
  9590  05D4  00A7               	movwf	??_efgtoa^(0+128)
  9591  05D5  3080               	movlw	128
  9592  05D6  0227               	subwf	??_efgtoa^(0+128),w
  9593  05D7  1D03               	skipz
  9594  05D8  2DDB               	goto	u10515
  9595  05D9  304B               	movlw	75
  9596  05DA  025D               	subwf	efgtoa@n^(0+128),w
  9597  05DB                     u10515:	
  9598  05DB  1C03               	skipc
  9599  05DC  2C91               	goto	l7113
  9600  05DD                     l7165:	
  9601                           
  9602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  9603  05DD  0021               	movlb	1	; select bank1
  9604  05DE  083D               	movf	efgtoa@pp^(0+128),w
  9605  05DF  043E               	iorwf	(efgtoa@pp+1)^(0+128),w
  9606  05E0  1D03               	btfss	3,2
  9607  05E1  2DF3               	goto	l7173
  9608  05E2  0023               	movlb	3	; select bank3
  9609  05E3  1E42               	btfss	_flags^(0+384),4
  9610  05E4  2DF3               	goto	l7173
  9611                           
  9612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  9613  05E5  302E               	movlw	46
  9614  05E6  0021               	movlb	1	; select bank1
  9615  05E7  00A7               	movwf	??_efgtoa^(0+128)
  9616  05E8  085D               	movf	efgtoa@n^(0+128),w
  9617  05E9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9618  05EA  0086               	movwf	6
  9619  05EB  3002               	movlw	2	; select bank4/5
  9620  05EC  0087               	movwf	7
  9621  05ED  0827               	movf	??_efgtoa^(0+128),w
  9622  05EE  0081               	movwf	1
  9623  05EF  3001               	movlw	1
  9624  05F0  07DD               	addwf	efgtoa@n^(0+128),f
  9625  05F1  3000               	movlw	0
  9626  05F2  3DDE               	addwfc	(efgtoa@n+1)^(0+128),f
  9627  05F3                     l7173:	
  9628                           
  9629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  9630  05F3  0021               	movlb	1	; select bank1
  9631  05F4  085D               	movf	efgtoa@n^(0+128),w
  9632  05F5  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9633  05F6  0086               	movwf	6
  9634  05F7  3002               	movlw	2	; select bank4/5
  9635  05F8  0087               	movwf	7
  9636  05F9  0181               	clrf	1
  9637                           
  9638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  9639  05FA  3065               	movlw	101
  9640  05FB  0649               	xorwf	efgtoa@nmode^(0+128),w
  9641  05FC  1D03               	btfss	3,2
  9642  05FD  2EB4               	goto	l7235
  9643                           
  9644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  9645  05FE  304F               	movlw	79
  9646  05FF  00D5               	movwf	efgtoa@i^(0+128)
  9647  0600  3000               	movlw	0
  9648  0601  00D6               	movwf	(efgtoa@i^(0+128)+1)
  9649                           
  9650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  9651  0602  0855               	movf	efgtoa@i^(0+128),w
  9652  0603  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9653  0604  0086               	movwf	6
  9654  0605  3002               	movlw	2	; select bank4/5
  9655  0606  0087               	movwf	7
  9656  0607  0181               	clrf	1
  9657                           
  9658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  9659  0608  01C5               	clrf	efgtoa@sign^(0+128)
  9660  0609  01C6               	clrf	(efgtoa@sign+1)^(0+128)
  9661                           
  9662                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  9663  060A  1FDC               	btfss	(efgtoa@e+1)^(0+128),7
  9664  060B  2E15               	goto	l7189
  9665                           
  9666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  9667  060C  3001               	movlw	1
  9668  060D  00C5               	movwf	efgtoa@sign^(0+128)
  9669  060E  3000               	movlw	0
  9670  060F  00C6               	movwf	(efgtoa@sign^(0+128)+1)
  9671                           
  9672                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  9673  0610  09DB               	comf	efgtoa@e^(0+128),f
  9674  0611  09DC               	comf	(efgtoa@e+1)^(0+128),f
  9675  0612  0ADB               	incf	efgtoa@e^(0+128),f
  9676  0613  1903               	skipnz
  9677  0614  0ADC               	incf	(efgtoa@e+1)^(0+128),f
  9678  0615                     l7189:	
  9679                           
  9680                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  9681  0615  3002               	movlw	2
  9682  0616  00C7               	movwf	efgtoa@p^(0+128)
  9683  0617  3000               	movlw	0
  9684  0618  00C8               	movwf	(efgtoa@p^(0+128)+1)
  9685  0619                     l7201:	
  9686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9687                           
  9688                           
  9689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  9690  0619  085B               	movf	efgtoa@e^(0+128),w
  9691  061A  045C               	iorwf	(efgtoa@e+1)^(0+128),w
  9692  061B  1903               	btfsc	3,2
  9693  061C  2E51               	goto	l7203
  9694  061D                     l7191:	
  9695                           
  9696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  9697  061D  30FF               	movlw	255
  9698  061E  0021               	movlb	1	; select bank1
  9699  061F  07D5               	addwf	efgtoa@i^(0+128),f
  9700  0620  30FF               	movlw	255
  9701  0621  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9702                           
  9703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  9704  0622  300A               	movlw	10
  9705  0623  00F1               	movwf	___awmod@divisor
  9706  0624  3000               	movlw	0
  9707  0625  00F2               	movwf	___awmod@divisor+1
  9708  0626  085C               	movf	(efgtoa@e+1)^(0+128),w
  9709  0627  00F4               	movwf	___awmod@dividend+1
  9710  0628  085B               	movf	efgtoa@e^(0+128),w
  9711  0629  00F3               	movwf	___awmod@dividend
  9712  062A  31AA  2224  3180   	fcall	___awmod
  9713  062D  0871               	movf	?___awmod,w
  9714  062E  3E30               	addlw	48
  9715  062F  0021               	movlb	1	; select bank1
  9716  0630  00A7               	movwf	??_efgtoa^(0+128)
  9717  0631  0855               	movf	efgtoa@i^(0+128),w
  9718  0632  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9719  0633  0086               	movwf	6
  9720  0634  3002               	movlw	2	; select bank4/5
  9721  0635  0087               	movwf	7
  9722  0636  0827               	movf	??_efgtoa^(0+128),w
  9723  0637  0081               	movwf	1
  9724                           
  9725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  9726  0638  300A               	movlw	10
  9727  0639  00F1               	movwf	___awdiv@divisor
  9728  063A  3000               	movlw	0
  9729  063B  00F2               	movwf	___awdiv@divisor+1
  9730  063C  085C               	movf	(efgtoa@e+1)^(0+128),w
  9731  063D  00F4               	movwf	___awdiv@dividend+1
  9732  063E  085B               	movf	efgtoa@e^(0+128),w
  9733  063F  00F3               	movwf	___awdiv@dividend
  9734  0640  31AB  2353  3180   	fcall	___awdiv
  9735  0643  0872               	movf	?___awdiv+1,w
  9736  0644  0021               	movlb	1	; select bank1
  9737  0645  00DC               	movwf	(efgtoa@e+1)^(0+128)
  9738  0646  0871               	movf	?___awdiv,w
  9739  0647  00DB               	movwf	efgtoa@e^(0+128)
  9740                           
  9741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  9742  0648  30FF               	movlw	255
  9743  0649  07C7               	addwf	efgtoa@p^(0+128),f
  9744  064A  30FF               	movlw	255
  9745  064B  3DC8               	addwfc	(efgtoa@p+1)^(0+128),f
  9746                           
  9747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  9748  064C  30FF               	movlw	255
  9749  064D  07CA               	addwf	efgtoa@w^(0+128),f
  9750  064E  30FF               	movlw	255
  9751  064F  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9752  0650  2E19               	goto	l7201
  9753  0651                     l7203:	
  9754  0651  0848               	movf	(efgtoa@p+1)^(0+128),w
  9755  0652  3A80               	xorlw	128
  9756  0653  00A7               	movwf	??_efgtoa^(0+128)
  9757  0654  3080               	movlw	128
  9758  0655  0227               	subwf	??_efgtoa^(0+128),w
  9759  0656  1D03               	skipz
  9760  0657  2E5A               	goto	u10575
  9761  0658  3001               	movlw	1
  9762  0659  0247               	subwf	efgtoa@p^(0+128),w
  9763  065A                     u10575:	
  9764  065A  1803               	skipnc
  9765  065B  2E1D               	goto	l7191
  9766                           
  9767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  9768  065C  30FF               	movlw	255
  9769  065D  0021               	movlb	1	; select bank1
  9770  065E  07D5               	addwf	efgtoa@i^(0+128),f
  9771  065F  30FF               	movlw	255
  9772  0660  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9773                           
  9774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  9775  0661  0845               	movf	efgtoa@sign^(0+128),w
  9776  0662  0446               	iorwf	(efgtoa@sign+1)^(0+128),w
  9777  0663  1D03               	btfss	3,2
  9778  0664  2E67               	goto	l7211
  9779  0665  302B               	movlw	43
  9780  0666  2E68               	goto	L8
  9781  0667                     l7211:	
  9782  0667  302D               	movlw	45
  9783  0668                     L8:	
  9784  0668  00B5               	movwf	_efgtoa$963^(0+128)
  9785  0669  3000               	movlw	0
  9786  066A  00B6               	movwf	(_efgtoa$963^(0+128)+1)
  9787  066B  0835               	movf	_efgtoa$963^(0+128),w
  9788  066C  00A7               	movwf	??_efgtoa^(0+128)
  9789  066D  0855               	movf	efgtoa@i^(0+128),w
  9790  066E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9791  066F  0086               	movwf	6
  9792  0670  3002               	movlw	2	; select bank4/5
  9793  0671  0087               	movwf	7
  9794  0672  0827               	movf	??_efgtoa^(0+128),w
  9795  0673  0081               	movwf	1
  9796                           
  9797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  9798  0674  30FF               	movlw	255
  9799  0675  07CA               	addwf	efgtoa@w^(0+128),f
  9800  0676  30FF               	movlw	255
  9801  0677  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9802                           
  9803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9804  0678  30FF               	movlw	255
  9805  0679  07D5               	addwf	efgtoa@i^(0+128),f
  9806  067A  30FF               	movlw	255
  9807  067B  3DD6               	addwfc	(efgtoa@i+1)^(0+128),f
  9808  067C  0826               	movf	efgtoa@c^(0+128),w
  9809  067D  3EBF               	addlw	191
  9810  067E  00A7               	movwf	??_efgtoa^(0+128)
  9811  067F  30FF               	movlw	255
  9812  0680  1803               	skipnc
  9813  0681  3000               	movlw	0
  9814  0682  00A8               	movwf	(??_efgtoa^(0+128)+1)
  9815  0683  3000               	movlw	0
  9816  0684  0228               	subwf	(??_efgtoa+1)^(0+128),w
  9817  0685  301A               	movlw	26
  9818  0686  1903               	skipnz
  9819  0687  0227               	subwf	??_efgtoa^(0+128),w
  9820  0688  1803               	btfsc	3,0
  9821  0689  2E8C               	goto	u10590
  9822  068A  3001               	movlw	1
  9823  068B  2E8D               	goto	u10600
  9824  068C                     u10590:	
  9825  068C  3000               	movlw	0
  9826  068D                     u10600:	
  9827  068D  00A9               	movwf	(??_efgtoa+2)^(0+128)
  9828  068E  01AA               	clrf	((??_efgtoa+2)^(0+128)+1)
  9829  068F  0829               	movf	(??_efgtoa+2)^(0+128),w
  9830  0690  00B9               	movwf	_efgtoa$965^(0+128)
  9831  0691  082A               	movf	(??_efgtoa+3)^(0+128),w
  9832  0692  00BA               	movwf	(_efgtoa$965+1)^(0+128)
  9833  0693  0839               	movf	_efgtoa$965^(0+128),w
  9834  0694  043A               	iorwf	(_efgtoa$965+1)^(0+128),w
  9835  0695  1D03               	btfss	3,2
  9836  0696  2E99               	goto	l7227
  9837  0697  3065               	movlw	101
  9838  0698  2E9A               	goto	L9
  9839  0699                     l7227:	
  9840  0699  3045               	movlw	69
  9841  069A                     L9:	
  9842  069A  00B7               	movwf	_efgtoa$964^(0+128)
  9843  069B  3000               	movlw	0
  9844  069C  00B8               	movwf	(_efgtoa$964^(0+128)+1)
  9845  069D  0837               	movf	_efgtoa$964^(0+128),w
  9846  069E  00A7               	movwf	??_efgtoa^(0+128)
  9847  069F  0855               	movf	efgtoa@i^(0+128),w
  9848  06A0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9849  06A1  0086               	movwf	6
  9850  06A2  3002               	movlw	2	; select bank4/5
  9851  06A3  0087               	movwf	7
  9852  06A4  0827               	movf	??_efgtoa^(0+128),w
  9853  06A5  0081               	movwf	1
  9854                           
  9855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  9856  06A6  30FF               	movlw	255
  9857  06A7  07CA               	addwf	efgtoa@w^(0+128),f
  9858  06A8  30FF               	movlw	255
  9859  06A9  3DCB               	addwfc	(efgtoa@w+1)^(0+128),f
  9860                           
  9861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  9862  06AA  0855               	movf	efgtoa@i^(0+128),w
  9863  06AB  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9864  06AC  00F1               	movwf	strcpy@src
  9865  06AD  3002               	movlw	2
  9866  06AE  00F2               	movwf	strcpy@src+1
  9867  06AF  085D               	movf	efgtoa@n^(0+128),w
  9868  06B0  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9869  06B1  31A8  2022  3180   	fcall	_strcpy
  9870  06B4                     l7235:	
  9871                           
  9872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  9873  06B4  0021               	movlb	1	; select bank1
  9874  06B5  0821               	movf	(efgtoa@fp+1)^(0+128),w
  9875  06B6  0020               	movlb	0	; select bank0
  9876  06B7  00A7               	movwf	pad@fp+1
  9877  06B8  0021               	movlb	1	; select bank1
  9878  06B9  0820               	movf	efgtoa@fp^(0+128),w
  9879  06BA  0020               	movlb	0	; select bank0
  9880  06BB  00A6               	movwf	pad@fp
  9881  06BC  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9882  06BD  0021               	movlb	1	; select bank1
  9883  06BE  00A7               	movwf	??_efgtoa^(0+128)
  9884  06BF  0827               	movf	??_efgtoa^(0+128),w
  9885  06C0  0020               	movlb	0	; select bank0
  9886  06C1  00A8               	movwf	pad@buf
  9887  06C2  0021               	movlb	1	; select bank1
  9888  06C3  084B               	movf	(efgtoa@w+1)^(0+128),w
  9889  06C4  0020               	movlb	0	; select bank0
  9890  06C5  00AA               	movwf	pad@p+1
  9891  06C6  0021               	movlb	1	; select bank1
  9892  06C7  084A               	movf	efgtoa@w^(0+128),w
  9893  06C8  0020               	movlb	0	; select bank0
  9894  06C9  00A9               	movwf	pad@p
  9895  06CA  31AB  2302         	fcall	_pad
  9896  06CC  0020               	movlb	0	; select bank0
  9897  06CD  0827               	movf	?_pad+1,w
  9898  06CE  0021               	movlb	1	; select bank1
  9899  06CF  00A1               	movwf	(?_efgtoa+1)^(0+128)
  9900  06D0  0020               	movlb	0	; select bank0
  9901  06D1  0826               	movf	?_pad,w
  9902  06D2  0021               	movlb	1	; select bank1
  9903  06D3  00A0               	movwf	?_efgtoa^(0+128)
  9904  06D4  0008               	return
  9905  06D5                     __end_of_efgtoa:	
  9906                           
  9907                           	psect	text17
  9908  2884                     __ptext17:	
  9909 ;; *************** function _tolower *****************
  9910 ;; Defined at:
  9911 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  c               2    7[COMMON] int 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;		None
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  2    7[COMMON] int 
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9927 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9928 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9929 ;;Total ram usage:        8 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:    2
  9932 ;; This function calls:
  9933 ;;		_isupper
  9934 ;; This function is called by:
  9935 ;;		_efgtoa
  9936 ;;		_vfpfcnvrt
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           
  9941                           ;psect for function _tolower
  9942  2884                     _tolower:	
  9943                           
  9944                           ;incstack = 0
  9945                           ; Regs used in _tolower: [wreg+status,2+status,0]
  9946  2884  0877               	movf	tolower@c,w
  9947  2885  3EBF               	addlw	191
  9948  2886  0020               	movlb	0	; select bank0
  9949  2887  00A0               	movwf	??_tolower
  9950  2888  30FF               	movlw	255
  9951  2889  3D78               	addwfc	tolower@c+1,w
  9952  288A  00A1               	movwf	??_tolower+1
  9953  288B  3000               	movlw	0
  9954  288C  0221               	subwf	??_tolower+1,w
  9955  288D  301A               	movlw	26
  9956  288E  1903               	skipnz
  9957  288F  0220               	subwf	??_tolower,w
  9958  2890  1803               	btfsc	3,0
  9959  2891  2894               	goto	u9840
  9960  2892  3001               	movlw	1
  9961  2893  2895               	goto	u9850
  9962  2894                     u9840:	
  9963  2894  3000               	movlw	0
  9964  2895                     u9850:	
  9965  2895  00A2               	movwf	??_tolower+2
  9966  2896  01A3               	clrf	??_tolower+3
  9967  2897  0822               	movf	??_tolower+2,w
  9968  2898  00F9               	movwf	_tolower$1593
  9969  2899  0823               	movf	??_tolower+3,w
  9970  289A  00FA               	movwf	_tolower$1593+1
  9971  289B  0879               	movf	_tolower$1593,w
  9972  289C  047A               	iorwf	_tolower$1593+1,w
  9973  289D  1903               	btfsc	3,2
  9974  289E  0008               	return
  9975  289F  3020               	movlw	32
  9976  28A0  0477               	iorwf	tolower@c,w
  9977  28A1  00F7               	movwf	?_tolower
  9978  28A2  3000               	movlw	0
  9979  28A3  0478               	iorwf	tolower@c+1,w
  9980  28A4  00F8               	movwf	?_tolower+1
  9981  28A5  0008               	return
  9982  28A6                     __end_of_tolower:	
  9983                           
  9984                           	psect	text18
  9985  3726                     __ptext18:	
  9986 ;; *************** function _isupper *****************
  9987 ;; Defined at:
  9988 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  c               2    1[COMMON] int 
  9991 ;; Auto vars:     Size  Location     Type
  9992 ;;		None
  9993 ;; Return value:  Size  Location     Type
  9994 ;;                  2    1[COMMON] int 
  9995 ;; Registers used:
  9996 ;;		wreg, status,2, status,0
  9997 ;; Tracked objects:
  9998 ;;		On entry : 0/0
  9999 ;;		On exit  : 0/0
 10000 ;;		Unchanged: 0/0
 10001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10004 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10005 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10006 ;;Total ram usage:        6 bytes
 10007 ;; Hardware stack levels used:    1
 10008 ;; Hardware stack levels required when called:    1
 10009 ;; This function calls:
 10010 ;;		Nothing
 10011 ;; This function is called by:
 10012 ;;		_efgtoa
 10013 ;;		_xtoa
 10014 ;;		_vfpfcnvrt
 10015 ;;		_tolower
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           
 10020                           ;psect for function _isupper
 10021  3726                     _isupper:	
 10022                           
 10023                           ;incstack = 0
 10024                           ; Regs used in _isupper: [wreg+status,2+status,0]
 10025  3726  0871               	movf	isupper@c,w
 10026  3727  3EBF               	addlw	191
 10027  3728  00F3               	movwf	??_isupper
 10028  3729  30FF               	movlw	255
 10029  372A  3D72               	addwfc	isupper@c+1,w
 10030  372B  00F4               	movwf	??_isupper+1
 10031  372C  3000               	movlw	0
 10032  372D  0274               	subwf	??_isupper+1,w
 10033  372E  301A               	movlw	26
 10034  372F  1903               	skipnz
 10035  3730  0273               	subwf	??_isupper,w
 10036  3731  1803               	btfsc	3,0
 10037  3732  2F35               	goto	u9330
 10038  3733  3001               	movlw	1
 10039  3734  2F36               	goto	u9340
 10040  3735                     u9330:	
 10041  3735  3000               	movlw	0
 10042  3736                     u9340:	
 10043  3736  00F5               	movwf	??_isupper+2
 10044  3737  01F6               	clrf	??_isupper+3
 10045  3738  0875               	movf	??_isupper+2,w
 10046  3739  00F1               	movwf	?_isupper
 10047  373A  0876               	movf	??_isupper+3,w
 10048  373B  00F2               	movwf	?_isupper+1
 10049  373C  0008               	return
 10050  373D                     __end_of_isupper:	
 10051                           
 10052                           	psect	text19
 10053  2822                     __ptext19:	
 10054 ;; *************** function _strcpy *****************
 10055 ;; Defined at:
 10056 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 10057 ;; Parameters:    Size  Location     Type
 10058 ;;  dest            1    wreg     PTR unsigned char 
 10059 ;;		 -> dbuf(80), 
 10060 ;;  src             2    1[COMMON] PTR const unsigned char 
 10061 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
 10062 ;;		 -> dbuf(80), 
 10063 ;; Auto vars:     Size  Location     Type
 10064 ;;  dest            1    8[COMMON] PTR unsigned char 
 10065 ;;		 -> dbuf(80), 
 10066 ;;  s               2    5[COMMON] PTR const unsigned char 
 10067 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
 10068 ;;		 -> dbuf(80), 
 10069 ;;  d               1    7[COMMON] PTR unsigned char 
 10070 ;;		 -> dbuf(80), 
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  1    wreg      PTR unsigned char 
 10073 ;; Registers used:
 10074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10081 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10083 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10084 ;;Total ram usage:        8 bytes
 10085 ;; Hardware stack levels used:    1
 10086 ;; Hardware stack levels required when called:    1
 10087 ;; This function calls:
 10088 ;;		Nothing
 10089 ;; This function is called by:
 10090 ;;		_efgtoa
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           
 10095                           ;psect for function _strcpy
 10096  2822                     _strcpy:	
 10097                           
 10098                           ;incstack = 0
 10099                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 10100                           ;strcpy@dest stored from wreg
 10101  2822  00F8               	movwf	strcpy@dest
 10102  2823  0872               	movf	strcpy@src+1,w
 10103  2824  00F6               	movwf	strcpy@s+1
 10104  2825  0871               	movf	strcpy@src,w
 10105  2826  00F5               	movwf	strcpy@s
 10106  2827  0878               	movf	strcpy@dest,w
 10107  2828  00F3               	movwf	??_strcpy
 10108  2829  0873               	movf	??_strcpy,w
 10109  282A  00F7               	movwf	strcpy@d
 10110  282B                     l4377:	
 10111  282B  0877               	movf	strcpy@d,w
 10112  282C  0086               	movwf	6
 10113  282D  3002               	movlw	2	; select bank4/5
 10114  282E  0087               	movwf	7
 10115  282F  0AF7               	incf	strcpy@d,f
 10116  2830  0876               	movf	strcpy@s+1,w
 10117  2831  00F4               	movwf	??_strcpy+1
 10118  2832  0875               	movf	strcpy@s,w
 10119  2833  00F3               	movwf	??_strcpy
 10120  2834  0AF5               	incf	strcpy@s,f
 10121  2835  1903               	skipnz
 10122  2836  0AF6               	incf	strcpy@s+1,f
 10123  2837  0873               	movf	??_strcpy,w
 10124  2838  0084               	movwf	4
 10125  2839  0874               	movf	??_strcpy+1,w
 10126  283A  0085               	movwf	5
 10127  283B  0800               	movf	0,w	;code access
 10128  283C  3FC0               	movwi [0]fsr1
 10129  283D  0889               	movf	9,f
 10130  283E  1903               	btfsc	3,2
 10131  283F  0008               	return
 10132  2840  282B               	goto	l4377
 10133  2841                     __end_of_strcpy:	
 10134                           
 10135                           	psect	text20
 10136  256B                     __ptext20:	
 10137 ;; *************** function _floorf *****************
 10138 ;; Defined at:
 10139 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 10140 ;; Parameters:    Size  Location     Type
 10141 ;;  x               4   58[BANK0 ] float 
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;  u               4   74[BANK0 ] struct .
 10144 ;;  m               4   68[BANK0 ] unsigned long 
 10145 ;;  e               2   72[BANK0 ] int 
 10146 ;; Return value:  Size  Location     Type
 10147 ;;                  4   58[BANK0 ] float 
 10148 ;; Registers used:
 10149 ;;		wreg, status,2, status,0
 10150 ;; Tracked objects:
 10151 ;;		On entry : 0/0
 10152 ;;		On exit  : 0/0
 10153 ;;		Unchanged: 0/0
 10154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10155 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10156 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10157 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10158 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10159 ;;Total ram usage:       20 bytes
 10160 ;; Hardware stack levels used:    1
 10161 ;; Hardware stack levels required when called:    1
 10162 ;; This function calls:
 10163 ;;		Nothing
 10164 ;; This function is called by:
 10165 ;;		_efgtoa
 10166 ;; This function uses a non-reentrant model
 10167 ;;
 10168                           
 10169                           
 10170                           ;psect for function _floorf
 10171  256B                     _floorf:	
 10172                           
 10173                           ;incstack = 0
 10174                           ; Regs used in _floorf: [wreg+status,2+status,0]
 10175  256B  0023               	movlb	3	; select bank3
 10176  256C  082D               	movf	(floorf@F524+3)^(0+384),w
 10177  256D  0020               	movlb	0	; select bank0
 10178  256E  00ED               	movwf	floorf@u+3
 10179  256F  0023               	movlb	3	; select bank3
 10180  2570  082C               	movf	(floorf@F524+2)^(0+384),w
 10181  2571  0020               	movlb	0	; select bank0
 10182  2572  00EC               	movwf	floorf@u+2
 10183  2573  0023               	movlb	3	; select bank3
 10184  2574  082B               	movf	(floorf@F524+1)^(0+384),w
 10185  2575  0020               	movlb	0	; select bank0
 10186  2576  00EB               	movwf	floorf@u+1
 10187  2577  0023               	movlb	3	; select bank3
 10188  2578  082A               	movf	floorf@F524^(0+384),w
 10189  2579  0020               	movlb	0	; select bank0
 10190  257A  00EA               	movwf	floorf@u
 10191  257B  085D               	movf	floorf@x+3,w
 10192  257C  00ED               	movwf	floorf@u+3
 10193  257D  085C               	movf	floorf@x+2,w
 10194  257E  00EC               	movwf	floorf@u+2
 10195  257F  085B               	movf	floorf@x+1,w
 10196  2580  00EB               	movwf	floorf@u+1
 10197  2581  085A               	movf	floorf@x,w
 10198  2582  00EA               	movwf	floorf@u
 10199  2583  086A               	movf	floorf@u,w
 10200  2584  00DE               	movwf	??_floorf
 10201  2585  086B               	movf	floorf@u+1,w
 10202  2586  00DF               	movwf	??_floorf+1
 10203  2587  086C               	movf	floorf@u+2,w
 10204  2588  00E0               	movwf	??_floorf+2
 10205  2589  086D               	movf	floorf@u+3,w
 10206  258A  00E1               	movwf	??_floorf+3
 10207  258B  3017               	movlw	23
 10208  258C                     u5425:	
 10209  258C  36E1               	lsrf	??_floorf+3,f
 10210  258D  0CE0               	rrf	??_floorf+2,f
 10211  258E  0CDF               	rrf	??_floorf+1,f
 10212  258F  0CDE               	rrf	??_floorf,f
 10213  2590  0B89               	decfsz	9,f
 10214  2591  2D8C               	goto	u5425
 10215  2592  30FF               	movlw	255
 10216  2593  055E               	andwf	??_floorf,w
 10217  2594  00E2               	movwf	??_floorf+4
 10218  2595  3000               	movlw	0
 10219  2596  055F               	andwf	??_floorf+1,w
 10220  2597  00E3               	movwf	??_floorf+5
 10221  2598  0862               	movf	??_floorf+4,w
 10222  2599  3E81               	addlw	129
 10223  259A  00E8               	movwf	floorf@e
 10224  259B  30FF               	movlw	255
 10225  259C  3D63               	addwfc	??_floorf+5,w
 10226  259D  00E9               	movwf	floorf@e+1
 10227  259E  0869               	movf	floorf@e+1,w
 10228  259F  3A80               	xorlw	128
 10229  25A0  00DE               	movwf	??_floorf
 10230  25A1  3080               	movlw	128
 10231  25A2  025E               	subwf	??_floorf,w
 10232  25A3  1D03               	skipz
 10233  25A4  2DA7               	goto	u5435
 10234  25A5  3017               	movlw	23
 10235  25A6  0268               	subwf	floorf@e,w
 10236  25A7                     u5435:	
 10237  25A7  1803               	btfsc	3,0
 10238  25A8  0008               	return
 10239  25A9  0020               	movlb	0	; select bank0
 10240  25AA  1BE9               	btfsc	floorf@e+1,7
 10241  25AB  2E04               	goto	l4409
 10242  25AC  30FF               	movlw	255
 10243  25AD  00DE               	movwf	??_floorf
 10244  25AE  30FF               	movlw	255
 10245  25AF  00DF               	movwf	??_floorf+1
 10246  25B0  307F               	movlw	127
 10247  25B1  00E0               	movwf	??_floorf+2
 10248  25B2  3000               	movlw	0
 10249  25B3  00E1               	movwf	??_floorf+3
 10250  25B4  0A68               	incf	floorf@e,w
 10251  25B5  2DBA               	goto	u5450
 10252  25B6                     u5455:	
 10253  25B6  37E1               	asrf	??_floorf+3,f
 10254  25B7  0CE0               	rrf	??_floorf+2,f
 10255  25B8  0CDF               	rrf	??_floorf+1,f
 10256  25B9  0CDE               	rrf	??_floorf,f
 10257  25BA                     u5450:	
 10258  25BA  0B89               	decfsz	9,f
 10259  25BB  2DB6               	goto	u5455
 10260  25BC  0861               	movf	??_floorf+3,w
 10261  25BD  00E7               	movwf	floorf@m+3
 10262  25BE  0860               	movf	??_floorf+2,w
 10263  25BF  00E6               	movwf	floorf@m+2
 10264  25C0  085F               	movf	??_floorf+1,w
 10265  25C1  00E5               	movwf	floorf@m+1
 10266  25C2  085E               	movf	??_floorf,w
 10267  25C3  00E4               	movwf	floorf@m
 10268  25C4  086A               	movf	floorf@u,w
 10269  25C5  0564               	andwf	floorf@m,w
 10270  25C6  00DE               	movwf	??_floorf
 10271  25C7  086B               	movf	floorf@u+1,w
 10272  25C8  0565               	andwf	floorf@m+1,w
 10273  25C9  00DF               	movwf	??_floorf+1
 10274  25CA  086C               	movf	floorf@u+2,w
 10275  25CB  0566               	andwf	floorf@m+2,w
 10276  25CC  00E0               	movwf	??_floorf+2
 10277  25CD  086D               	movf	floorf@u+3,w
 10278  25CE  0567               	andwf	floorf@m+3,w
 10279  25CF  00E1               	movwf	??_floorf+3
 10280  25D0  0861               	movf	??_floorf+3,w
 10281  25D1  0460               	iorwf	??_floorf+2,w
 10282  25D2  045F               	iorwf	??_floorf+1,w
 10283  25D3  045E               	iorwf	??_floorf,w
 10284  25D4  1903               	btfsc	3,2
 10285  25D5  0008               	return
 10286  25D6  086A               	movf	floorf@u,w
 10287  25D7  00DE               	movwf	??_floorf
 10288  25D8  086B               	movf	floorf@u+1,w
 10289  25D9  00DF               	movwf	??_floorf+1
 10290  25DA  086C               	movf	floorf@u+2,w
 10291  25DB  00E0               	movwf	??_floorf+2
 10292  25DC  086D               	movf	floorf@u+3,w
 10293  25DD  00E1               	movwf	??_floorf+3
 10294  25DE  301F               	movlw	31
 10295  25DF                     u5475:	
 10296  25DF  36E1               	lsrf	??_floorf+3,f
 10297  25E0  0CE0               	rrf	??_floorf+2,f
 10298  25E1  0CDF               	rrf	??_floorf+1,f
 10299  25E2  0CDE               	rrf	??_floorf,f
 10300  25E3  0B89               	decfsz	9,f
 10301  25E4  2DDF               	goto	u5475
 10302  25E5  0861               	movf	??_floorf+3,w
 10303  25E6  0460               	iorwf	??_floorf+2,w
 10304  25E7  045F               	iorwf	??_floorf+1,w
 10305  25E8  045E               	iorwf	??_floorf,w
 10306  25E9  1903               	skipnz
 10307  25EA  2DF3               	goto	l4407
 10308  25EB  0864               	movf	floorf@m,w
 10309  25EC  07EA               	addwf	floorf@u,f
 10310  25ED  0865               	movf	floorf@m+1,w
 10311  25EE  3DEB               	addwfc	floorf@u+1,f
 10312  25EF  0866               	movf	floorf@m+2,w
 10313  25F0  3DEC               	addwfc	floorf@u+2,f
 10314  25F1  0867               	movf	floorf@m+3,w
 10315  25F2  3DED               	addwfc	floorf@u+3,f
 10316  25F3                     l4407:	
 10317  25F3  0964               	comf	floorf@m,w
 10318  25F4  00DE               	movwf	??_floorf
 10319  25F5  0965               	comf	floorf@m+1,w
 10320  25F6  00DF               	movwf	??_floorf+1
 10321  25F7  0966               	comf	floorf@m+2,w
 10322  25F8  00E0               	movwf	??_floorf+2
 10323  25F9  0967               	comf	floorf@m+3,w
 10324  25FA  00E1               	movwf	??_floorf+3
 10325  25FB  085E               	movf	??_floorf,w
 10326  25FC  05EA               	andwf	floorf@u,f
 10327  25FD  085F               	movf	??_floorf+1,w
 10328  25FE  05EB               	andwf	floorf@u+1,f
 10329  25FF  0860               	movf	??_floorf+2,w
 10330  2600  05EC               	andwf	floorf@u+2,f
 10331  2601  0861               	movf	??_floorf+3,w
 10332  2602  05ED               	andwf	floorf@u+3,f
 10333  2603  2E3A               	goto	l1328
 10334  2604                     l4409:	
 10335  2604  086A               	movf	floorf@u,w
 10336  2605  00DE               	movwf	??_floorf
 10337  2606  086B               	movf	floorf@u+1,w
 10338  2607  00DF               	movwf	??_floorf+1
 10339  2608  086C               	movf	floorf@u+2,w
 10340  2609  00E0               	movwf	??_floorf+2
 10341  260A  086D               	movf	floorf@u+3,w
 10342  260B  00E1               	movwf	??_floorf+3
 10343  260C  301F               	movlw	31
 10344  260D                     u5495:	
 10345  260D  36E1               	lsrf	??_floorf+3,f
 10346  260E  0CE0               	rrf	??_floorf+2,f
 10347  260F  0CDF               	rrf	??_floorf+1,f
 10348  2610  0CDE               	rrf	??_floorf,f
 10349  2611  0B89               	decfsz	9,f
 10350  2612  2E0D               	goto	u5495
 10351  2613  0861               	movf	??_floorf+3,w
 10352  2614  0460               	iorwf	??_floorf+2,w
 10353  2615  045F               	iorwf	??_floorf+1,w
 10354  2616  045E               	iorwf	??_floorf,w
 10355  2617  1D03               	skipz
 10356  2618  2E1D               	goto	l4413
 10357  2619  3000               	movlw	0
 10358  261A  00ED               	movwf	floorf@u+3
 10359  261B  3000               	movlw	0
 10360  261C  2E35               	goto	L10
 10361  261D                     l4413:	
 10362  261D  086A               	movf	floorf@u,w
 10363  261E  00DE               	movwf	??_floorf
 10364  261F  086B               	movf	floorf@u+1,w
 10365  2620  00DF               	movwf	??_floorf+1
 10366  2621  086C               	movf	floorf@u+2,w
 10367  2622  00E0               	movwf	??_floorf+2
 10368  2623  086D               	movf	floorf@u+3,w
 10369  2624  00E1               	movwf	??_floorf+3
 10370  2625  3001               	movlw	1
 10371  2626                     u5515:	
 10372  2626  35DE               	lslf	??_floorf,f
 10373  2627  0DDF               	rlf	??_floorf+1,f
 10374  2628  0DE0               	rlf	??_floorf+2,f
 10375  2629  0DE1               	rlf	??_floorf+3,f
 10376  262A  0B89               	decfsz	9,f
 10377  262B  2E26               	goto	u5515
 10378  262C  0861               	movf	??_floorf+3,w
 10379  262D  0460               	iorwf	??_floorf+2,w
 10380  262E  045F               	iorwf	??_floorf+1,w
 10381  262F  045E               	iorwf	??_floorf,w
 10382  2630  1903               	skipnz
 10383  2631  2E3A               	goto	l1328
 10384  2632  30BF               	movlw	191
 10385  2633  00ED               	movwf	floorf@u+3
 10386  2634  3080               	movlw	128
 10387  2635                     L10:	
 10388  2635  00EC               	movwf	floorf@u+2
 10389  2636  3000               	movlw	0
 10390  2637  00EB               	movwf	floorf@u+1
 10391  2638  3000               	movlw	0
 10392  2639  00EA               	movwf	floorf@u
 10393  263A                     l1328:	
 10394  263A  086D               	movf	floorf@u+3,w
 10395  263B  00DD               	movwf	?_floorf+3
 10396  263C  086C               	movf	floorf@u+2,w
 10397  263D  00DC               	movwf	?_floorf+2
 10398  263E  086B               	movf	floorf@u+1,w
 10399  263F  00DB               	movwf	?_floorf+1
 10400  2640  086A               	movf	floorf@u,w
 10401  2641  00DA               	movwf	?_floorf
 10402  2642  0008               	return
 10403  2643                     __end_of_floorf:	
 10404                           
 10405                           	psect	text21
 10406  2C73                     __ptext21:	
 10407 ;; *************** function ___fpclassifyf *****************
 10408 ;; Defined at:
 10409 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;  x               4    1[COMMON] float 
 10412 ;; Auto vars:     Size  Location     Type
 10413 ;;  u               4    2[BANK0 ] struct .
 10414 ;;  e               2    0[BANK0 ] int 
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  2    1[COMMON] int 
 10417 ;; Registers used:
 10418 ;;		wreg, status,2, status,0
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10425 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10426 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10427 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10428 ;;Total ram usage:       16 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:    1
 10431 ;; This function calls:
 10432 ;;		Nothing
 10433 ;; This function is called by:
 10434 ;;		_efgtoa
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           
 10439                           ;psect for function ___fpclassifyf
 10440  2C73                     ___fpclassifyf:	
 10441                           
 10442                           ;incstack = 0
 10443                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 10444  2C73  0023               	movlb	3	; select bank3
 10445  2C74  0831               	movf	(___fpclassifyf@F463+3)^(0+384),w
 10446  2C75  0020               	movlb	0	; select bank0
 10447  2C76  00A5               	movwf	___fpclassifyf@u+3
 10448  2C77  0023               	movlb	3	; select bank3
 10449  2C78  0830               	movf	(___fpclassifyf@F463+2)^(0+384),w
 10450  2C79  0020               	movlb	0	; select bank0
 10451  2C7A  00A4               	movwf	___fpclassifyf@u+2
 10452  2C7B  0023               	movlb	3	; select bank3
 10453  2C7C  082F               	movf	(___fpclassifyf@F463+1)^(0+384),w
 10454  2C7D  0020               	movlb	0	; select bank0
 10455  2C7E  00A3               	movwf	___fpclassifyf@u+1
 10456  2C7F  0023               	movlb	3	; select bank3
 10457  2C80  082E               	movf	___fpclassifyf@F463^(0+384),w
 10458  2C81  0020               	movlb	0	; select bank0
 10459  2C82  00A2               	movwf	___fpclassifyf@u
 10460  2C83  0874               	movf	___fpclassifyf@x+3,w
 10461  2C84  00A5               	movwf	___fpclassifyf@u+3
 10462  2C85  0873               	movf	___fpclassifyf@x+2,w
 10463  2C86  00A4               	movwf	___fpclassifyf@u+2
 10464  2C87  0872               	movf	___fpclassifyf@x+1,w
 10465  2C88  00A3               	movwf	___fpclassifyf@u+1
 10466  2C89  0871               	movf	___fpclassifyf@x,w
 10467  2C8A  00A2               	movwf	___fpclassifyf@u
 10468  2C8B  0822               	movf	___fpclassifyf@u,w
 10469  2C8C  00F5               	movwf	??___fpclassifyf
 10470  2C8D  0823               	movf	___fpclassifyf@u+1,w
 10471  2C8E  00F6               	movwf	??___fpclassifyf+1
 10472  2C8F  0824               	movf	___fpclassifyf@u+2,w
 10473  2C90  00F7               	movwf	??___fpclassifyf+2
 10474  2C91  0825               	movf	___fpclassifyf@u+3,w
 10475  2C92  00F8               	movwf	??___fpclassifyf+3
 10476  2C93  3017               	movlw	23
 10477  2C94                     u5305:	
 10478  2C94  36F8               	lsrf	??___fpclassifyf+3,f
 10479  2C95  0CF7               	rrf	??___fpclassifyf+2,f
 10480  2C96  0CF6               	rrf	??___fpclassifyf+1,f
 10481  2C97  0CF5               	rrf	??___fpclassifyf,f
 10482  2C98  0B89               	decfsz	9,f
 10483  2C99  2C94               	goto	u5305
 10484  2C9A  30FF               	movlw	255
 10485  2C9B  0575               	andwf	??___fpclassifyf,w
 10486  2C9C  00A0               	movwf	___fpclassifyf@e
 10487  2C9D  3000               	movlw	0
 10488  2C9E  0576               	andwf	??___fpclassifyf+1,w
 10489  2C9F  00A1               	movwf	___fpclassifyf@e+1
 10490  2CA0  0820               	movf	___fpclassifyf@e,w
 10491  2CA1  0421               	iorwf	___fpclassifyf@e+1,w
 10492  2CA2  1D03               	btfss	3,2
 10493  2CA3  2CC3               	goto	l4365
 10494  2CA4  0822               	movf	___fpclassifyf@u,w
 10495  2CA5  00F5               	movwf	??___fpclassifyf
 10496  2CA6  0823               	movf	___fpclassifyf@u+1,w
 10497  2CA7  00F6               	movwf	??___fpclassifyf+1
 10498  2CA8  0824               	movf	___fpclassifyf@u+2,w
 10499  2CA9  00F7               	movwf	??___fpclassifyf+2
 10500  2CAA  0825               	movf	___fpclassifyf@u+3,w
 10501  2CAB  00F8               	movwf	??___fpclassifyf+3
 10502  2CAC  3001               	movlw	1
 10503  2CAD                     u5325:	
 10504  2CAD  35F5               	lslf	??___fpclassifyf,f
 10505  2CAE  0DF6               	rlf	??___fpclassifyf+1,f
 10506  2CAF  0DF7               	rlf	??___fpclassifyf+2,f
 10507  2CB0  0DF8               	rlf	??___fpclassifyf+3,f
 10508  2CB1  0B89               	decfsz	9,f
 10509  2CB2  2CAD               	goto	u5325
 10510  2CB3  0878               	movf	??___fpclassifyf+3,w
 10511  2CB4  0477               	iorwf	??___fpclassifyf+2,w
 10512  2CB5  0476               	iorwf	??___fpclassifyf+1,w
 10513  2CB6  0475               	iorwf	??___fpclassifyf,w
 10514  2CB7  1D03               	skipz
 10515  2CB8  2CBE               	goto	l4361
 10516  2CB9  3002               	movlw	2
 10517  2CBA  00F1               	movwf	?___fpclassifyf
 10518  2CBB  3000               	movlw	0
 10519  2CBC  00F2               	movwf	?___fpclassifyf+1
 10520  2CBD  0008               	return
 10521  2CBE                     l4361:	
 10522  2CBE  3003               	movlw	3
 10523  2CBF  00F1               	movwf	?___fpclassifyf
 10524  2CC0  3000               	movlw	0
 10525  2CC1  00F2               	movwf	?___fpclassifyf+1
 10526  2CC2  0008               	return
 10527  2CC3                     l4365:	
 10528  2CC3  0A20               	incf	___fpclassifyf@e,w
 10529  2CC4  0421               	iorwf	___fpclassifyf@e+1,w
 10530  2CC5  1D03               	btfss	3,2
 10531  2CC6  2CE6               	goto	l4371
 10532  2CC7  0822               	movf	___fpclassifyf@u,w
 10533  2CC8  00F5               	movwf	??___fpclassifyf
 10534  2CC9  0823               	movf	___fpclassifyf@u+1,w
 10535  2CCA  00F6               	movwf	??___fpclassifyf+1
 10536  2CCB  0824               	movf	___fpclassifyf@u+2,w
 10537  2CCC  00F7               	movwf	??___fpclassifyf+2
 10538  2CCD  0825               	movf	___fpclassifyf@u+3,w
 10539  2CCE  00F8               	movwf	??___fpclassifyf+3
 10540  2CCF  3009               	movlw	9
 10541  2CD0                     u5355:	
 10542  2CD0  35F5               	lslf	??___fpclassifyf,f
 10543  2CD1  0DF6               	rlf	??___fpclassifyf+1,f
 10544  2CD2  0DF7               	rlf	??___fpclassifyf+2,f
 10545  2CD3  0DF8               	rlf	??___fpclassifyf+3,f
 10546  2CD4  0B89               	decfsz	9,f
 10547  2CD5  2CD0               	goto	u5355
 10548  2CD6  0878               	movf	??___fpclassifyf+3,w
 10549  2CD7  0477               	iorwf	??___fpclassifyf+2,w
 10550  2CD8  0476               	iorwf	??___fpclassifyf+1,w
 10551  2CD9  0475               	iorwf	??___fpclassifyf,w
 10552  2CDA  1D03               	btfss	3,2
 10553  2CDB  2CDE               	goto	u5360
 10554  2CDC  3001               	movlw	1
 10555  2CDD  2CDF               	goto	u5370
 10556  2CDE                     u5360:	
 10557  2CDE  3000               	movlw	0
 10558  2CDF                     u5370:	
 10559  2CDF  00F9               	movwf	??___fpclassifyf+4
 10560  2CE0  01FA               	clrf	??___fpclassifyf+5
 10561  2CE1  0879               	movf	??___fpclassifyf+4,w
 10562  2CE2  00F1               	movwf	?___fpclassifyf
 10563  2CE3  087A               	movf	??___fpclassifyf+5,w
 10564  2CE4  00F2               	movwf	?___fpclassifyf+1
 10565  2CE5  0008               	return
 10566  2CE6                     l4371:	
 10567  2CE6  3004               	movlw	4
 10568  2CE7  00F1               	movwf	?___fpclassifyf
 10569  2CE8  3000               	movlw	0
 10570  2CE9  00F2               	movwf	?___fpclassifyf+1
 10571  2CEA  0008               	return
 10572  2CEB                     __end_of___fpclassifyf:	
 10573                           
 10574                           	psect	text22
 10575  2803                     __ptext22:	
 10576 ;; *************** function ___flsub *****************
 10577 ;; Defined at:
 10578 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;  a               4   32[BANK0 ] int 
 10581 ;;  b               4   36[BANK0 ] int 
 10582 ;; Auto vars:     Size  Location     Type
 10583 ;;		None
 10584 ;; Return value:  Size  Location     Type
 10585 ;;                  4   32[BANK0 ] int 
 10586 ;; Registers used:
 10587 ;;		wreg, status,2, status,0, pclath, cstack
 10588 ;; Tracked objects:
 10589 ;;		On entry : 0/0
 10590 ;;		On exit  : 0/0
 10591 ;;		Unchanged: 0/0
 10592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10593 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10596 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10597 ;;Total ram usage:        8 bytes
 10598 ;; Hardware stack levels used:    1
 10599 ;; Hardware stack levels required when called:    2
 10600 ;; This function calls:
 10601 ;;		___fladd
 10602 ;; This function is called by:
 10603 ;;		_efgtoa
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606                           
 10607                           
 10608                           ;psect for function ___flsub
 10609  2803                     ___flsub:	
 10610                           
 10611                           ;incstack = 0
 10612                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10613  2803  3080               	movlw	128
 10614  2804  0020               	movlb	0	; select bank0
 10615  2805  06C3               	xorwf	___flsub@a+3,f
 10616  2806  0847               	movf	___flsub@b+3,w
 10617  2807  00F4               	movwf	___fladd@b+3
 10618  2808  0846               	movf	___flsub@b+2,w
 10619  2809  00F3               	movwf	___fladd@b+2
 10620  280A  0845               	movf	___flsub@b+1,w
 10621  280B  00F2               	movwf	___fladd@b+1
 10622  280C  0844               	movf	___flsub@b,w
 10623  280D  00F1               	movwf	___fladd@b
 10624  280E  0843               	movf	___flsub@a+3,w
 10625  280F  00F8               	movwf	___fladd@a+3
 10626  2810  0842               	movf	___flsub@a+2,w
 10627  2811  00F7               	movwf	___fladd@a+2
 10628  2812  0841               	movf	___flsub@a+1,w
 10629  2813  00F6               	movwf	___fladd@a+1
 10630  2814  0840               	movf	___flsub@a,w
 10631  2815  00F5               	movwf	___fladd@a
 10632  2816  3191  21DB         	fcall	___fladd
 10633  2818  0874               	movf	?___fladd+3,w
 10634  2819  0020               	movlb	0	; select bank0
 10635  281A  00C3               	movwf	?___flsub+3
 10636  281B  0873               	movf	?___fladd+2,w
 10637  281C  00C2               	movwf	?___flsub+2
 10638  281D  0872               	movf	?___fladd+1,w
 10639  281E  00C1               	movwf	?___flsub+1
 10640  281F  0871               	movf	?___fladd,w
 10641  2820  00C0               	movwf	?___flsub
 10642  2821  0008               	return
 10643  2822                     __end_of___flsub:	
 10644                           
 10645                           	psect	text23
 10646  11DB                     __ptext23:	
 10647 ;; *************** function ___fladd *****************
 10648 ;; Defined at:
 10649 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;  b               4    1[COMMON] int 
 10652 ;;  a               4    5[COMMON] int 
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;  grs             1   11[BANK0 ] unsigned char 
 10655 ;;  bexp            1   10[BANK0 ] unsigned char 
 10656 ;;  aexp            1    9[BANK0 ] unsigned char 
 10657 ;;  signs           1    8[BANK0 ] unsigned char 
 10658 ;; Return value:  Size  Location     Type
 10659 ;;                  4    1[COMMON] unsigned char 
 10660 ;; Registers used:
 10661 ;;		wreg, status,2, status,0
 10662 ;; Tracked objects:
 10663 ;;		On entry : 0/0
 10664 ;;		On exit  : 0/0
 10665 ;;		Unchanged: 0/0
 10666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10667 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10668 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10669 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10670 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10671 ;;Total ram usage:       20 bytes
 10672 ;; Hardware stack levels used:    1
 10673 ;; Hardware stack levels required when called:    1
 10674 ;; This function calls:
 10675 ;;		Nothing
 10676 ;; This function is called by:
 10677 ;;		_efgtoa
 10678 ;;		___flsub
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           
 10683                           ;psect for function ___fladd
 10684  11DB                     ___fladd:	
 10685                           
 10686                           ;incstack = 0
 10687                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 10688  11DB  0874               	movf	___fladd@b+3,w
 10689  11DC  3980               	andlw	128
 10690  11DD  0020               	movlb	0	; select bank0
 10691  11DE  00A0               	movwf	??___fladd
 10692  11DF  0820               	movf	??___fladd,w
 10693  11E0  00A8               	movwf	___fladd@signs
 10694  11E1  3574               	lslf	___fladd@b+3,w
 10695  11E2  00A0               	movwf	??___fladd
 10696  11E3  0820               	movf	??___fladd,w
 10697  11E4  00AA               	movwf	___fladd@bexp
 10698  11E5  1BF3               	btfsc	___fladd@b+2,7
 10699  11E6  142A               	bsf	___fladd@bexp,0
 10700  11E7  082A               	movf	___fladd@bexp,w
 10701  11E8  1903               	btfsc	3,2
 10702  11E9  29F8               	goto	l6635
 10703  11EA  0A2A               	incf	___fladd@bexp,w
 10704  11EB  1D03               	btfss	3,2
 10705  11EC  29F5               	goto	l6631
 10706  11ED  3000               	movlw	0
 10707  11EE  00F4               	movwf	___fladd@b+3
 10708  11EF  3000               	movlw	0
 10709  11F0  00F3               	movwf	___fladd@b+2
 10710  11F1  3000               	movlw	0
 10711  11F2  00F2               	movwf	___fladd@b+1
 10712  11F3  3000               	movlw	0
 10713  11F4  00F1               	movwf	___fladd@b
 10714  11F5                     l6631:	
 10715  11F5  17F3               	bsf	___fladd@b+2,7
 10716  11F6  01F4               	clrf	___fladd@b+3
 10717  11F7  2A00               	goto	l6637
 10718  11F8                     l6635:	
 10719  11F8  3000               	movlw	0
 10720  11F9  00F4               	movwf	___fladd@b+3
 10721  11FA  3000               	movlw	0
 10722  11FB  00F3               	movwf	___fladd@b+2
 10723  11FC  3000               	movlw	0
 10724  11FD  00F2               	movwf	___fladd@b+1
 10725  11FE  3000               	movlw	0
 10726  11FF  00F1               	movwf	___fladd@b
 10727  1200                     l6637:	
 10728  1200  0878               	movf	___fladd@a+3,w
 10729  1201  3980               	andlw	128
 10730  1202  00A0               	movwf	??___fladd
 10731  1203  0820               	movf	??___fladd,w
 10732  1204  00A9               	movwf	___fladd@aexp
 10733  1205  0829               	movf	___fladd@aexp,w
 10734  1206  0628               	xorwf	___fladd@signs,w
 10735  1207  1D03               	btfss	3,2
 10736  1208  1728               	bsf	___fladd@signs,6
 10737  1209  3578               	lslf	___fladd@a+3,w
 10738  120A  00A0               	movwf	??___fladd
 10739  120B  0820               	movf	??___fladd,w
 10740  120C  00A9               	movwf	___fladd@aexp
 10741  120D  1BF7               	btfsc	___fladd@a+2,7
 10742  120E  1429               	bsf	___fladd@aexp,0
 10743  120F  0829               	movf	___fladd@aexp,w
 10744  1210  1903               	btfsc	3,2
 10745  1211  2A20               	goto	l6659
 10746  1212  0A29               	incf	___fladd@aexp,w
 10747  1213  1D03               	btfss	3,2
 10748  1214  2A1D               	goto	l6655
 10749  1215  3000               	movlw	0
 10750  1216  00F8               	movwf	___fladd@a+3
 10751  1217  3000               	movlw	0
 10752  1218  00F7               	movwf	___fladd@a+2
 10753  1219  3000               	movlw	0
 10754  121A  00F6               	movwf	___fladd@a+1
 10755  121B  3000               	movlw	0
 10756  121C  00F5               	movwf	___fladd@a
 10757  121D                     l6655:	
 10758  121D  17F7               	bsf	___fladd@a+2,7
 10759  121E  01F8               	clrf	___fladd@a+3
 10760  121F  2A28               	goto	l1120
 10761  1220                     l6659:	
 10762  1220  3000               	movlw	0
 10763  1221  00F8               	movwf	___fladd@a+3
 10764  1222  3000               	movlw	0
 10765  1223  00F7               	movwf	___fladd@a+2
 10766  1224  3000               	movlw	0
 10767  1225  00F6               	movwf	___fladd@a+1
 10768  1226  3000               	movlw	0
 10769  1227  00F5               	movwf	___fladd@a
 10770  1228                     l1120:	
 10771  1228  082A               	movf	___fladd@bexp,w
 10772  1229  0229               	subwf	___fladd@aexp,w
 10773  122A  1803               	skipnc
 10774  122B  2A6E               	goto	l6695
 10775  122C  1F28               	btfss	___fladd@signs,6
 10776  122D  2A32               	goto	l6665
 10777  122E  3080               	movlw	128
 10778  122F  00A0               	movwf	??___fladd
 10779  1230  0820               	movf	??___fladd,w
 10780  1231  06A8               	xorwf	___fladd@signs,f
 10781  1232                     l6665:	
 10782  1232  082A               	movf	___fladd@bexp,w
 10783  1233  00A0               	movwf	??___fladd
 10784  1234  0820               	movf	??___fladd,w
 10785  1235  00AB               	movwf	___fladd@grs
 10786  1236  0829               	movf	___fladd@aexp,w
 10787  1237  00A0               	movwf	??___fladd
 10788  1238  0820               	movf	??___fladd,w
 10789  1239  00AA               	movwf	___fladd@bexp
 10790  123A  082B               	movf	___fladd@grs,w
 10791  123B  00A0               	movwf	??___fladd
 10792  123C  0820               	movf	??___fladd,w
 10793  123D  00A9               	movwf	___fladd@aexp
 10794  123E  0871               	movf	___fladd@b,w
 10795  123F  00A0               	movwf	??___fladd
 10796  1240  0820               	movf	??___fladd,w
 10797  1241  00AB               	movwf	___fladd@grs
 10798  1242  0875               	movf	___fladd@a,w
 10799  1243  00A0               	movwf	??___fladd
 10800  1244  0820               	movf	??___fladd,w
 10801  1245  00F1               	movwf	___fladd@b
 10802  1246  082B               	movf	___fladd@grs,w
 10803  1247  00A0               	movwf	??___fladd
 10804  1248  0820               	movf	??___fladd,w
 10805  1249  00F5               	movwf	___fladd@a
 10806  124A  0872               	movf	___fladd@b+1,w
 10807  124B  00A0               	movwf	??___fladd
 10808  124C  0820               	movf	??___fladd,w
 10809  124D  00AB               	movwf	___fladd@grs
 10810  124E  0876               	movf	___fladd@a+1,w
 10811  124F  00A0               	movwf	??___fladd
 10812  1250  0820               	movf	??___fladd,w
 10813  1251  00F2               	movwf	___fladd@b+1
 10814  1252  082B               	movf	___fladd@grs,w
 10815  1253  00A0               	movwf	??___fladd
 10816  1254  0820               	movf	??___fladd,w
 10817  1255  00F6               	movwf	___fladd@a+1
 10818  1256  0873               	movf	___fladd@b+2,w
 10819  1257  00A0               	movwf	??___fladd
 10820  1258  0820               	movf	??___fladd,w
 10821  1259  00AB               	movwf	___fladd@grs
 10822  125A  0877               	movf	___fladd@a+2,w
 10823  125B  00A0               	movwf	??___fladd
 10824  125C  0820               	movf	??___fladd,w
 10825  125D  00F3               	movwf	___fladd@b+2
 10826  125E  082B               	movf	___fladd@grs,w
 10827  125F  00A0               	movwf	??___fladd
 10828  1260  0820               	movf	??___fladd,w
 10829  1261  00F7               	movwf	___fladd@a+2
 10830  1262  0874               	movf	___fladd@b+3,w
 10831  1263  00A0               	movwf	??___fladd
 10832  1264  0820               	movf	??___fladd,w
 10833  1265  00AB               	movwf	___fladd@grs
 10834  1266  0878               	movf	___fladd@a+3,w
 10835  1267  00A0               	movwf	??___fladd
 10836  1268  0820               	movf	??___fladd,w
 10837  1269  00F4               	movwf	___fladd@b+3
 10838  126A  082B               	movf	___fladd@grs,w
 10839  126B  00A0               	movwf	??___fladd
 10840  126C  0820               	movf	??___fladd,w
 10841  126D  00F8               	movwf	___fladd@a+3
 10842  126E                     l6695:	
 10843  126E  01AB               	clrf	___fladd@grs
 10844  126F  0829               	movf	___fladd@aexp,w
 10845  1270  00A0               	movwf	??___fladd
 10846  1271  01A1               	clrf	??___fladd+1
 10847  1272  0821               	movf	??___fladd+1,w
 10848  1273  00A3               	movwf	??___fladd+3
 10849  1274  082A               	movf	___fladd@bexp,w
 10850  1275  0220               	subwf	??___fladd,w
 10851  1276  00A2               	movwf	??___fladd+2
 10852  1277  1C03               	skipc
 10853  1278  03A3               	decf	??___fladd+3,f
 10854  1279  0823               	movf	??___fladd+3,w
 10855  127A  3A80               	xorlw	128
 10856  127B  00A4               	movwf	??___fladd+4
 10857  127C  3080               	movlw	128
 10858  127D  0224               	subwf	??___fladd+4,w
 10859  127E  1D03               	skipz
 10860  127F  2A82               	goto	u9445
 10861  1280  301A               	movlw	26
 10862  1281  0222               	subwf	??___fladd+2,w
 10863  1282                     u9445:	
 10864  1282  1C03               	skipc
 10865  1283  2AB6               	goto	l6713
 10866  1284  0874               	movf	___fladd@b+3,w
 10867  1285  0473               	iorwf	___fladd@b+2,w
 10868  1286  0472               	iorwf	___fladd@b+1,w
 10869  1287  0471               	iorwf	___fladd@b,w
 10870  1288  1903               	btfsc	3,2
 10871  1289  2A8C               	goto	u9450
 10872  128A  3001               	movlw	1
 10873  128B  2A8D               	goto	u9460
 10874  128C                     u9450:	
 10875  128C  3000               	movlw	0
 10876  128D                     u9460:	
 10877  128D  0020               	movlb	0	; select bank0
 10878  128E  00A0               	movwf	??___fladd
 10879  128F  0820               	movf	??___fladd,w
 10880  1290  00AB               	movwf	___fladd@grs
 10881  1291  3000               	movlw	0
 10882  1292  00F4               	movwf	___fladd@b+3
 10883  1293  3000               	movlw	0
 10884  1294  00F3               	movwf	___fladd@b+2
 10885  1295  3000               	movlw	0
 10886  1296  00F2               	movwf	___fladd@b+1
 10887  1297  3000               	movlw	0
 10888  1298  00F1               	movwf	___fladd@b
 10889  1299  0829               	movf	___fladd@aexp,w
 10890  129A  00A0               	movwf	??___fladd
 10891  129B  0820               	movf	??___fladd,w
 10892  129C  00AA               	movwf	___fladd@bexp
 10893  129D  2ABB               	goto	l1124
 10894  129E                     l1126:	
 10895  129E  1C2B               	btfss	___fladd@grs,0
 10896  129F  2AA6               	goto	l6703
 10897  12A0  362B               	lsrf	___fladd@grs,w
 10898  12A1  3801               	iorlw	1
 10899  12A2  00A0               	movwf	??___fladd
 10900  12A3  0820               	movf	??___fladd,w
 10901  12A4  00AB               	movwf	___fladd@grs
 10902  12A5  2AA8               	goto	l6705
 10903  12A6                     l6703:	
 10904  12A6  1003               	clrc
 10905  12A7  0CAB               	rrf	___fladd@grs,f
 10906  12A8                     l6705:	
 10907  12A8  1871               	btfsc	___fladd@b,0
 10908  12A9  17AB               	bsf	___fladd@grs,7
 10909  12AA  3001               	movlw	1
 10910  12AB  00A0               	movwf	??___fladd
 10911  12AC                     u9495:	
 10912  12AC  37F4               	asrf	___fladd@b+3,f
 10913  12AD  0CF3               	rrf	___fladd@b+2,f
 10914  12AE  0CF2               	rrf	___fladd@b+1,f
 10915  12AF  0CF1               	rrf	___fladd@b,f
 10916  12B0  0BA0               	decfsz	??___fladd& (0+127),f
 10917  12B1  2AAC               	goto	u9495
 10918  12B2  3001               	movlw	1
 10919  12B3  00A0               	movwf	??___fladd
 10920  12B4  0820               	movf	??___fladd,w
 10921  12B5  07AA               	addwf	___fladd@bexp,f
 10922  12B6                     l6713:	
 10923  12B6  0020               	movlb	0	; select bank0
 10924  12B7  0829               	movf	___fladd@aexp,w
 10925  12B8  022A               	subwf	___fladd@bexp,w
 10926  12B9  1C03               	skipc
 10927  12BA  2A9E               	goto	l1126
 10928  12BB                     l1124:	
 10929  12BB  1B28               	btfsc	___fladd@signs,6
 10930  12BC  2AEC               	goto	l6739
 10931  12BD  082A               	movf	___fladd@bexp,w
 10932  12BE  1D03               	btfss	3,2
 10933  12BF  2AC9               	goto	l6721
 10934  12C0  3000               	movlw	0
 10935  12C1  00F4               	movwf	?___fladd+3
 10936  12C2  3000               	movlw	0
 10937  12C3  00F3               	movwf	?___fladd+2
 10938  12C4  3000               	movlw	0
 10939  12C5  00F2               	movwf	?___fladd+1
 10940  12C6  3000               	movlw	0
 10941  12C7  00F1               	movwf	?___fladd
 10942  12C8  0008               	return
 10943  12C9                     l6721:	
 10944  12C9  0875               	movf	___fladd@a,w
 10945  12CA  07F1               	addwf	___fladd@b,f
 10946  12CB  0876               	movf	___fladd@a+1,w
 10947  12CC  3DF2               	addwfc	___fladd@b+1,f
 10948  12CD  0877               	movf	___fladd@a+2,w
 10949  12CE  3DF3               	addwfc	___fladd@b+2,f
 10950  12CF  0878               	movf	___fladd@a+3,w
 10951  12D0  3DF4               	addwfc	___fladd@b+3,f
 10952  12D1  1C74               	btfss	___fladd@b+3,0
 10953  12D2  2B66               	goto	l6773
 10954  12D3  1C2B               	btfss	___fladd@grs,0
 10955  12D4  2ADB               	goto	l6729
 10956  12D5  362B               	lsrf	___fladd@grs,w
 10957  12D6  3801               	iorlw	1
 10958  12D7  00A0               	movwf	??___fladd
 10959  12D8  0820               	movf	??___fladd,w
 10960  12D9  00AB               	movwf	___fladd@grs
 10961  12DA  2ADD               	goto	l6731
 10962  12DB                     l6729:	
 10963  12DB  1003               	clrc
 10964  12DC  0CAB               	rrf	___fladd@grs,f
 10965  12DD                     l6731:	
 10966  12DD  1871               	btfsc	___fladd@b,0
 10967  12DE  17AB               	bsf	___fladd@grs,7
 10968  12DF  3001               	movlw	1
 10969  12E0  00A0               	movwf	??___fladd
 10970  12E1                     u9565:	
 10971  12E1  37F4               	asrf	___fladd@b+3,f
 10972  12E2  0CF3               	rrf	___fladd@b+2,f
 10973  12E3  0CF2               	rrf	___fladd@b+1,f
 10974  12E4  0CF1               	rrf	___fladd@b,f
 10975  12E5  0BA0               	decfsz	??___fladd& (0+127),f
 10976  12E6  2AE1               	goto	u9565
 10977  12E7  3001               	movlw	1
 10978  12E8  00A0               	movwf	??___fladd
 10979  12E9  0820               	movf	??___fladd,w
 10980  12EA  07AA               	addwf	___fladd@bexp,f
 10981  12EB  2B66               	goto	l6773
 10982  12EC                     l6739:	
 10983  12EC  0874               	movf	___fladd@b+3,w
 10984  12ED  3A80               	xorlw	128
 10985  12EE  00A0               	movwf	??___fladd
 10986  12EF  0878               	movf	___fladd@a+3,w
 10987  12F0  3A80               	xorlw	128
 10988  12F1  0220               	subwf	??___fladd,w
 10989  12F2  1D03               	skipz
 10990  12F3  2AFE               	goto	u9573
 10991  12F4  0877               	movf	___fladd@a+2,w
 10992  12F5  0273               	subwf	___fladd@b+2,w
 10993  12F6  1D03               	skipz
 10994  12F7  2AFE               	goto	u9573
 10995  12F8  0876               	movf	___fladd@a+1,w
 10996  12F9  0272               	subwf	___fladd@b+1,w
 10997  12FA  1D03               	skipz
 10998  12FB  2AFE               	goto	u9573
 10999  12FC  0875               	movf	___fladd@a,w
 11000  12FD  0271               	subwf	___fladd@b,w
 11001  12FE                     u9573:	
 11002  12FE  1803               	skipnc
 11003  12FF  2B36               	goto	l6749
 11004  1300  30FF               	movlw	255
 11005  1301  00A0               	movwf	??___fladd
 11006  1302  30FF               	movlw	255
 11007  1303  00A1               	movwf	??___fladd+1
 11008  1304  30FF               	movlw	255
 11009  1305  00A2               	movwf	??___fladd+2
 11010  1306  30FF               	movlw	255
 11011  1307  00A3               	movwf	??___fladd+3
 11012  1308  0871               	movf	___fladd@b,w
 11013  1309  0275               	subwf	___fladd@a,w
 11014  130A  00A4               	movwf	??___fladd+4
 11015  130B  0872               	movf	___fladd@b+1,w
 11016  130C  3B76               	subwfb	___fladd@a+1,w
 11017  130D  00A5               	movwf	??___fladd+5
 11018  130E  0873               	movf	___fladd@b+2,w
 11019  130F  3B77               	subwfb	___fladd@a+2,w
 11020  1310  00A6               	movwf	??___fladd+6
 11021  1311  0874               	movf	___fladd@b+3,w
 11022  1312  3B78               	subwfb	___fladd@a+3,w
 11023  1313  00A7               	movwf	??___fladd+7
 11024  1314  0824               	movf	??___fladd+4,w
 11025  1315  07A0               	addwf	??___fladd,f
 11026  1316  0825               	movf	??___fladd+5,w
 11027  1317  3DA1               	addwfc	??___fladd+1,f
 11028  1318  0826               	movf	??___fladd+6,w
 11029  1319  3DA2               	addwfc	??___fladd+2,f
 11030  131A  0827               	movf	??___fladd+7,w
 11031  131B  3DA3               	addwfc	??___fladd+3,f
 11032  131C  0823               	movf	??___fladd+3,w
 11033  131D  00F4               	movwf	___fladd@b+3
 11034  131E  0822               	movf	??___fladd+2,w
 11035  131F  00F3               	movwf	___fladd@b+2
 11036  1320  0821               	movf	??___fladd+1,w
 11037  1321  00F2               	movwf	___fladd@b+1
 11038  1322  0820               	movf	??___fladd,w
 11039  1323  00F1               	movwf	___fladd@b
 11040  1324  3080               	movlw	128
 11041  1325  00A0               	movwf	??___fladd
 11042  1326  0820               	movf	??___fladd,w
 11043  1327  06A8               	xorwf	___fladd@signs,f
 11044  1328  09AB               	comf	___fladd@grs,f
 11045  1329  0AAB               	incf	___fladd@grs,f
 11046  132A  082B               	movf	___fladd@grs,w
 11047  132B  1D03               	btfss	3,2
 11048  132C  2B3E               	goto	l1141
 11049  132D  3001               	movlw	1
 11050  132E  07F1               	addwf	___fladd@b,f
 11051  132F  3000               	movlw	0
 11052  1330  3DF2               	addwfc	___fladd@b+1,f
 11053  1331  3000               	movlw	0
 11054  1332  3DF3               	addwfc	___fladd@b+2,f
 11055  1333  3000               	movlw	0
 11056  1334  3DF4               	addwfc	___fladd@b+3,f
 11057  1335  2B3E               	goto	l1141
 11058  1336                     l6749:	
 11059  1336  0875               	movf	___fladd@a,w
 11060  1337  02F1               	subwf	___fladd@b,f
 11061  1338  0876               	movf	___fladd@a+1,w
 11062  1339  3BF2               	subwfb	___fladd@b+1,f
 11063  133A  0877               	movf	___fladd@a+2,w
 11064  133B  3BF3               	subwfb	___fladd@b+2,f
 11065  133C  0878               	movf	___fladd@a+3,w
 11066  133D  3BF4               	subwfb	___fladd@b+3,f
 11067  133E                     l1141:	
 11068  133E  0874               	movf	___fladd@b+3,w
 11069  133F  0473               	iorwf	___fladd@b+2,w
 11070  1340  0472               	iorwf	___fladd@b+1,w
 11071  1341  0471               	iorwf	___fladd@b,w
 11072  1342  1D03               	skipz
 11073  1343  2B64               	goto	l6771
 11074  1344  082B               	movf	___fladd@grs,w
 11075  1345  1D03               	btfss	3,2
 11076  1346  2B64               	goto	l6771
 11077  1347  3000               	movlw	0
 11078  1348  00F4               	movwf	?___fladd+3
 11079  1349  3000               	movlw	0
 11080  134A  00F3               	movwf	?___fladd+2
 11081  134B  3000               	movlw	0
 11082  134C  00F2               	movwf	?___fladd+1
 11083  134D  3000               	movlw	0
 11084  134E  00F1               	movwf	?___fladd
 11085  134F  0008               	return
 11086  1350                     l6757:	
 11087  1350  3001               	movlw	1
 11088  1351                     u9615:	
 11089  1351  35F1               	lslf	___fladd@b,f
 11090  1352  0DF2               	rlf	___fladd@b+1,f
 11091  1353  0DF3               	rlf	___fladd@b+2,f
 11092  1354  0DF4               	rlf	___fladd@b+3,f
 11093  1355  0B89               	decfsz	9,f
 11094  1356  2B51               	goto	u9615
 11095  1357  1BAB               	btfsc	___fladd@grs,7
 11096  1358  1471               	bsf	___fladd@b,0
 11097  1359  1C2B               	btfss	___fladd@grs,0
 11098  135A  2B5D               	goto	l6765
 11099  135B  1403               	setc
 11100  135C  2B5E               	goto	L11
 11101  135D                     l6765:	
 11102  135D  1003               	clrc
 11103  135E                     L11:	
 11104  135E  0DAB               	rlf	___fladd@grs,f
 11105  135F  082A               	movf	___fladd@bexp,w
 11106  1360  1903               	btfsc	3,2
 11107  1361  2B64               	goto	l6771
 11108  1362  3001               	movlw	1
 11109  1363  02AA               	subwf	___fladd@bexp,f
 11110  1364                     l6771:	
 11111  1364  1FF3               	btfss	___fladd@b+2,7
 11112  1365  2B50               	goto	l6757
 11113  1366                     l6773:	
 11114  1366  01A9               	clrf	___fladd@aexp
 11115  1367  1FAB               	btfss	___fladd@grs,7
 11116  1368  2B71               	goto	l6783
 11117  1369  082B               	movf	___fladd@grs,w
 11118  136A  397F               	andlw	127
 11119  136B  1903               	btfsc	3,2
 11120  136C  1871               	btfsc	___fladd@b,0
 11121  136D  2B6F               	goto	l6779
 11122  136E  2B71               	goto	l6783
 11123  136F                     l6779:	
 11124  136F  01A9               	clrf	___fladd@aexp
 11125  1370  0AA9               	incf	___fladd@aexp,f
 11126  1371                     l6783:	
 11127  1371  0829               	movf	___fladd@aexp,w
 11128  1372  1903               	btfsc	3,2
 11129  1373  2B9D               	goto	l1154
 11130  1374  3001               	movlw	1
 11131  1375  07F1               	addwf	___fladd@b,f
 11132  1376  3000               	movlw	0
 11133  1377  3DF2               	addwfc	___fladd@b+1,f
 11134  1378  3000               	movlw	0
 11135  1379  3DF3               	addwfc	___fladd@b+2,f
 11136  137A  3000               	movlw	0
 11137  137B  3DF4               	addwfc	___fladd@b+3,f
 11138  137C  1C74               	btfss	___fladd@b+3,0
 11139  137D  2B9D               	goto	l1154
 11140  137E  0871               	movf	___fladd@b,w
 11141  137F  00A0               	movwf	??___fladd
 11142  1380  0872               	movf	___fladd@b+1,w
 11143  1381  00A1               	movwf	??___fladd+1
 11144  1382  0873               	movf	___fladd@b+2,w
 11145  1383  00A2               	movwf	??___fladd+2
 11146  1384  0874               	movf	___fladd@b+3,w
 11147  1385  00A3               	movwf	??___fladd+3
 11148  1386  3001               	movlw	1
 11149  1387  00A4               	movwf	??___fladd+4
 11150  1388                     u9715:	
 11151  1388  37A3               	asrf	??___fladd+3,f
 11152  1389  0CA2               	rrf	??___fladd+2,f
 11153  138A  0CA1               	rrf	??___fladd+1,f
 11154  138B  0CA0               	rrf	??___fladd,f
 11155  138C  0BA4               	decfsz	??___fladd+4,f
 11156  138D  2B88               	goto	u9715
 11157  138E  0823               	movf	??___fladd+3,w
 11158  138F  00F4               	movwf	___fladd@b+3
 11159  1390  0822               	movf	??___fladd+2,w
 11160  1391  00F3               	movwf	___fladd@b+2
 11161  1392  0821               	movf	??___fladd+1,w
 11162  1393  00F2               	movwf	___fladd@b+1
 11163  1394  0820               	movf	??___fladd,w
 11164  1395  00F1               	movwf	___fladd@b
 11165  1396  0A2A               	incf	___fladd@bexp,w
 11166  1397  1903               	btfsc	3,2
 11167  1398  2B9D               	goto	l1154
 11168  1399  3001               	movlw	1
 11169  139A  00A0               	movwf	??___fladd
 11170  139B  0820               	movf	??___fladd,w
 11171  139C  07AA               	addwf	___fladd@bexp,f
 11172  139D                     l1154:	
 11173  139D  0A2A               	incf	___fladd@bexp,w
 11174  139E  1D03               	btfss	3,2
 11175  139F  082A               	movf	___fladd@bexp,w
 11176  13A0  1D03               	btfss	3,2
 11177  13A1  2BAD               	goto	l6801
 11178  13A2  3000               	movlw	0
 11179  13A3  00F4               	movwf	___fladd@b+3
 11180  13A4  3000               	movlw	0
 11181  13A5  00F3               	movwf	___fladd@b+2
 11182  13A6  3000               	movlw	0
 11183  13A7  00F2               	movwf	___fladd@b+1
 11184  13A8  3000               	movlw	0
 11185  13A9  00F1               	movwf	___fladd@b
 11186  13AA  082A               	movf	___fladd@bexp,w
 11187  13AB  1903               	btfsc	3,2
 11188  13AC  01A8               	clrf	___fladd@signs
 11189  13AD                     l6801:	
 11190  13AD  1C2A               	btfss	___fladd@bexp,0
 11191  13AE  2BB1               	goto	l6805
 11192  13AF  17F3               	bsf	___fladd@b+2,7
 11193  13B0  2BB5               	goto	l1162
 11194  13B1                     l6805:	
 11195  13B1  307F               	movlw	127
 11196  13B2  00A0               	movwf	??___fladd
 11197  13B3  0820               	movf	??___fladd,w
 11198  13B4  05F3               	andwf	___fladd@b+2,f
 11199  13B5                     l1162:	
 11200  13B5  362A               	lsrf	___fladd@bexp,w
 11201  13B6  00A0               	movwf	??___fladd
 11202  13B7  0820               	movf	??___fladd,w
 11203  13B8  00F4               	movwf	___fladd@b+3
 11204  13B9  1FA8               	btfss	___fladd@signs,7
 11205  13BA  0008               	return
 11206  13BB  17F4               	bsf	___fladd@b+3,7
 11207  13BC  0008               	return
 11208  13BD                     __end_of___fladd:	
 11209                           
 11210                           	psect	text24
 11211  369A                     __ptext24:	
 11212 ;; *************** function ___flneg *****************
 11213 ;; Defined at:
 11214 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 11215 ;; Parameters:    Size  Location     Type
 11216 ;;  f1              4    1[COMMON] unsigned char 
 11217 ;; Auto vars:     Size  Location     Type
 11218 ;;		None
 11219 ;; Return value:  Size  Location     Type
 11220 ;;                  4    1[COMMON] unsigned char 
 11221 ;; Registers used:
 11222 ;;		wreg
 11223 ;; Tracked objects:
 11224 ;;		On entry : 0/0
 11225 ;;		On exit  : 0/0
 11226 ;;		Unchanged: 0/0
 11227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11228 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11231 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11232 ;;Total ram usage:        4 bytes
 11233 ;; Hardware stack levels used:    1
 11234 ;; Hardware stack levels required when called:    1
 11235 ;; This function calls:
 11236 ;;		Nothing
 11237 ;; This function is called by:
 11238 ;;		_efgtoa
 11239 ;; This function uses a non-reentrant model
 11240 ;;
 11241                           
 11242                           
 11243                           ;psect for function ___flneg
 11244  369A                     ___flneg:	
 11245                           
 11246                           ;incstack = 0
 11247                           ; Regs used in ___flneg: [wreg]
 11248  369A  0874               	movf	___flneg@f1+3,w
 11249  369B  0473               	iorwf	___flneg@f1+2,w
 11250  369C  0472               	iorwf	___flneg@f1+1,w
 11251  369D  0471               	iorwf	___flneg@f1,w
 11252  369E  1903               	skipnz
 11253  369F  0008               	return
 11254  36A0  3080               	movlw	128
 11255  36A1  06F4               	xorwf	___flneg@f1+3,f
 11256  36A2  0008               	return
 11257  36A3                     __end_of___flneg:	
 11258                           
 11259                           	psect	text25
 11260  2A69                     __ptext25:	
 11261 ;; *************** function ___fleq *****************
 11262 ;; Defined at:
 11263 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 11264 ;; Parameters:    Size  Location     Type
 11265 ;;  ff1             4    1[COMMON] unsigned char 
 11266 ;;  ff2             4    5[COMMON] unsigned char 
 11267 ;; Auto vars:     Size  Location     Type
 11268 ;;		None
 11269 ;; Return value:  Size  Location     Type
 11270 ;;		None               void
 11271 ;; Registers used:
 11272 ;;		wreg, status,2, status,0
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11278 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11280 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11281 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11282 ;;Total ram usage:       12 bytes
 11283 ;; Hardware stack levels used:    1
 11284 ;; Hardware stack levels required when called:    1
 11285 ;; This function calls:
 11286 ;;		Nothing
 11287 ;; This function is called by:
 11288 ;;		_efgtoa
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           
 11293                           ;psect for function ___fleq
 11294  2A69                     ___fleq:	
 11295                           
 11296                           ;incstack = 0
 11297                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 11298  2A69  3000               	movlw	0
 11299  2A6A  0571               	andwf	___fleq@ff1,w
 11300  2A6B  0020               	movlb	0	; select bank0
 11301  2A6C  00A0               	movwf	??___fleq
 11302  2A6D  3000               	movlw	0
 11303  2A6E  0572               	andwf	___fleq@ff1+1,w
 11304  2A6F  00A1               	movwf	??___fleq+1
 11305  2A70  3080               	movlw	128
 11306  2A71  0573               	andwf	___fleq@ff1+2,w
 11307  2A72  00A2               	movwf	??___fleq+2
 11308  2A73  307F               	movlw	127
 11309  2A74  0574               	andwf	___fleq@ff1+3,w
 11310  2A75  00A3               	movwf	??___fleq+3
 11311  2A76  0823               	movf	??___fleq+3,w
 11312  2A77  0422               	iorwf	??___fleq+2,w
 11313  2A78  0421               	iorwf	??___fleq+1,w
 11314  2A79  0420               	iorwf	??___fleq,w
 11315  2A7A  1D03               	skipz
 11316  2A7B  2A84               	goto	l988
 11317  2A7C  3000               	movlw	0
 11318  2A7D  00F4               	movwf	___fleq@ff1+3
 11319  2A7E  3000               	movlw	0
 11320  2A7F  00F3               	movwf	___fleq@ff1+2
 11321  2A80  3000               	movlw	0
 11322  2A81  00F2               	movwf	___fleq@ff1+1
 11323  2A82  3000               	movlw	0
 11324  2A83  00F1               	movwf	___fleq@ff1
 11325  2A84                     l988:	
 11326  2A84  3000               	movlw	0
 11327  2A85  0575               	andwf	___fleq@ff2,w
 11328  2A86  00A0               	movwf	??___fleq
 11329  2A87  3000               	movlw	0
 11330  2A88  0576               	andwf	___fleq@ff2+1,w
 11331  2A89  00A1               	movwf	??___fleq+1
 11332  2A8A  3080               	movlw	128
 11333  2A8B  0577               	andwf	___fleq@ff2+2,w
 11334  2A8C  00A2               	movwf	??___fleq+2
 11335  2A8D  307F               	movlw	127
 11336  2A8E  0578               	andwf	___fleq@ff2+3,w
 11337  2A8F  00A3               	movwf	??___fleq+3
 11338  2A90  0823               	movf	??___fleq+3,w
 11339  2A91  0422               	iorwf	??___fleq+2,w
 11340  2A92  0421               	iorwf	??___fleq+1,w
 11341  2A93  0420               	iorwf	??___fleq,w
 11342  2A94  1D03               	skipz
 11343  2A95  2A9E               	goto	l989
 11344  2A96  3000               	movlw	0
 11345  2A97  00F8               	movwf	___fleq@ff2+3
 11346  2A98  3000               	movlw	0
 11347  2A99  00F7               	movwf	___fleq@ff2+2
 11348  2A9A  3000               	movlw	0
 11349  2A9B  00F6               	movwf	___fleq@ff2+1
 11350  2A9C  3000               	movlw	0
 11351  2A9D  00F5               	movwf	___fleq@ff2
 11352  2A9E                     l989:	
 11353  2A9E  0878               	movf	___fleq@ff2+3,w
 11354  2A9F  0674               	xorwf	___fleq@ff1+3,w
 11355  2AA0  1D03               	skipz
 11356  2AA1  2AAC               	goto	u9925
 11357  2AA2  0877               	movf	___fleq@ff2+2,w
 11358  2AA3  0673               	xorwf	___fleq@ff1+2,w
 11359  2AA4  1D03               	skipz
 11360  2AA5  2AAC               	goto	u9925
 11361  2AA6  0876               	movf	___fleq@ff2+1,w
 11362  2AA7  0672               	xorwf	___fleq@ff1+1,w
 11363  2AA8  1D03               	skipz
 11364  2AA9  2AAC               	goto	u9925
 11365  2AAA  0875               	movf	___fleq@ff2,w
 11366  2AAB  0671               	xorwf	___fleq@ff1,w
 11367  2AAC                     u9925:	
 11368  2AAC  1903               	skipnz
 11369  2AAD  2AB0               	goto	l6865
 11370  2AAE  1003               	clrc
 11371  2AAF  0008               	return
 11372  2AB0                     l6865:	
 11373  2AB0  1403               	setc
 11374  2AB1  0008               	return
 11375  2AB2                     __end_of___fleq:	
 11376                           
 11377                           	psect	text26
 11378  2A24                     __ptext26:	
 11379 ;; *************** function ___awmod *****************
 11380 ;; Defined at:
 11381 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 11382 ;; Parameters:    Size  Location     Type
 11383 ;;  divisor         2    1[COMMON] int 
 11384 ;;  dividend        2    3[COMMON] int 
 11385 ;; Auto vars:     Size  Location     Type
 11386 ;;  sign            1    7[COMMON] unsigned char 
 11387 ;;  counter         1    6[COMMON] unsigned char 
 11388 ;; Return value:  Size  Location     Type
 11389 ;;                  2    1[COMMON] int 
 11390 ;; Registers used:
 11391 ;;		wreg, status,2, status,0
 11392 ;; Tracked objects:
 11393 ;;		On entry : 0/0
 11394 ;;		On exit  : 0/0
 11395 ;;		Unchanged: 0/0
 11396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11397 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11398 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11399 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11400 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11401 ;;Total ram usage:        7 bytes
 11402 ;; Hardware stack levels used:    1
 11403 ;; Hardware stack levels required when called:    1
 11404 ;; This function calls:
 11405 ;;		Nothing
 11406 ;; This function is called by:
 11407 ;;		_efgtoa
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           
 11412                           ;psect for function ___awmod
 11413  2A24                     ___awmod:	
 11414                           
 11415                           ;incstack = 0
 11416                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11417  2A24  01F7               	clrf	___awmod@sign
 11418  2A25  1FF4               	btfss	___awmod@dividend+1,7
 11419  2A26  2A2E               	goto	l4571
 11420  2A27  09F3               	comf	___awmod@dividend,f
 11421  2A28  09F4               	comf	___awmod@dividend+1,f
 11422  2A29  0AF3               	incf	___awmod@dividend,f
 11423  2A2A  1903               	skipnz
 11424  2A2B  0AF4               	incf	___awmod@dividend+1,f
 11425  2A2C  01F7               	clrf	___awmod@sign
 11426  2A2D  0AF7               	incf	___awmod@sign,f
 11427  2A2E                     l4571:	
 11428  2A2E  1FF2               	btfss	___awmod@divisor+1,7
 11429  2A2F  2A35               	goto	l4575
 11430  2A30  09F1               	comf	___awmod@divisor,f
 11431  2A31  09F2               	comf	___awmod@divisor+1,f
 11432  2A32  0AF1               	incf	___awmod@divisor,f
 11433  2A33  1903               	skipnz
 11434  2A34  0AF2               	incf	___awmod@divisor+1,f
 11435  2A35                     l4575:	
 11436  2A35  0871               	movf	___awmod@divisor,w
 11437  2A36  0472               	iorwf	___awmod@divisor+1,w
 11438  2A37  1903               	btfsc	3,2
 11439  2A38  2A5C               	goto	l4593
 11440  2A39  01F6               	clrf	___awmod@counter
 11441  2A3A  0AF6               	incf	___awmod@counter,f
 11442  2A3B                     l4583:	
 11443  2A3B  1BF2               	btfsc	___awmod@divisor+1,7
 11444  2A3C  2A47               	goto	l4585
 11445  2A3D  3001               	movlw	1
 11446  2A3E                     u5985:	
 11447  2A3E  35F1               	lslf	___awmod@divisor,f
 11448  2A3F  0DF2               	rlf	___awmod@divisor+1,f
 11449  2A40  0B89               	decfsz	9,f
 11450  2A41  2A3E               	goto	u5985
 11451  2A42  3001               	movlw	1
 11452  2A43  00F5               	movwf	??___awmod
 11453  2A44  0875               	movf	??___awmod,w
 11454  2A45  07F6               	addwf	___awmod@counter,f
 11455  2A46  2A3B               	goto	l4583
 11456  2A47                     l4585:	
 11457  2A47  0872               	movf	___awmod@divisor+1,w
 11458  2A48  0274               	subwf	___awmod@dividend+1,w
 11459  2A49  1D03               	skipz
 11460  2A4A  2A4D               	goto	u6005
 11461  2A4B  0871               	movf	___awmod@divisor,w
 11462  2A4C  0273               	subwf	___awmod@dividend,w
 11463  2A4D                     u6005:	
 11464  2A4D  1C03               	skipc
 11465  2A4E  2A53               	goto	l4589
 11466  2A4F  0871               	movf	___awmod@divisor,w
 11467  2A50  02F3               	subwf	___awmod@dividend,f
 11468  2A51  0872               	movf	___awmod@divisor+1,w
 11469  2A52  3BF4               	subwfb	___awmod@dividend+1,f
 11470  2A53                     l4589:	
 11471  2A53  3001               	movlw	1
 11472  2A54                     u6015:	
 11473  2A54  36F2               	lsrf	___awmod@divisor+1,f
 11474  2A55  0CF1               	rrf	___awmod@divisor,f
 11475  2A56  0B89               	decfsz	9,f
 11476  2A57  2A54               	goto	u6015
 11477  2A58  3001               	movlw	1
 11478  2A59  02F6               	subwf	___awmod@counter,f
 11479  2A5A  1D03               	btfss	3,2
 11480  2A5B  2A47               	goto	l4585
 11481  2A5C                     l4593:	
 11482  2A5C  0877               	movf	___awmod@sign,w
 11483  2A5D  1903               	btfsc	3,2
 11484  2A5E  2A64               	goto	l4597
 11485  2A5F  09F3               	comf	___awmod@dividend,f
 11486  2A60  09F4               	comf	___awmod@dividend+1,f
 11487  2A61  0AF3               	incf	___awmod@dividend,f
 11488  2A62  1903               	skipnz
 11489  2A63  0AF4               	incf	___awmod@dividend+1,f
 11490  2A64                     l4597:	
 11491  2A64  0874               	movf	___awmod@dividend+1,w
 11492  2A65  00F2               	movwf	?___awmod+1
 11493  2A66  0873               	movf	___awmod@dividend,w
 11494  2A67  00F1               	movwf	?___awmod
 11495  2A68  0008               	return
 11496  2A69                     __end_of___awmod:	
 11497                           
 11498                           	psect	text27
 11499  2B53                     __ptext27:	
 11500 ;; *************** function ___awdiv *****************
 11501 ;; Defined at:
 11502 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 11503 ;; Parameters:    Size  Location     Type
 11504 ;;  divisor         2    1[COMMON] int 
 11505 ;;  dividend        2    3[COMMON] int 
 11506 ;; Auto vars:     Size  Location     Type
 11507 ;;  quotient        2    8[COMMON] int 
 11508 ;;  sign            1    7[COMMON] unsigned char 
 11509 ;;  counter         1    6[COMMON] unsigned char 
 11510 ;; Return value:  Size  Location     Type
 11511 ;;                  2    1[COMMON] int 
 11512 ;; Registers used:
 11513 ;;		wreg, status,2, status,0
 11514 ;; Tracked objects:
 11515 ;;		On entry : 0/0
 11516 ;;		On exit  : 0/0
 11517 ;;		Unchanged: 0/0
 11518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11520 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11522 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11523 ;;Total ram usage:        9 bytes
 11524 ;; Hardware stack levels used:    1
 11525 ;; Hardware stack levels required when called:    1
 11526 ;; This function calls:
 11527 ;;		Nothing
 11528 ;; This function is called by:
 11529 ;;		_efgtoa
 11530 ;; This function uses a non-reentrant model
 11531 ;;
 11532                           
 11533                           
 11534                           ;psect for function ___awdiv
 11535  2B53                     ___awdiv:	
 11536                           
 11537                           ;incstack = 0
 11538                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11539  2B53  01F7               	clrf	___awdiv@sign
 11540  2B54  1FF2               	btfss	___awdiv@divisor+1,7
 11541  2B55  2B5D               	goto	l4527
 11542  2B56  09F1               	comf	___awdiv@divisor,f
 11543  2B57  09F2               	comf	___awdiv@divisor+1,f
 11544  2B58  0AF1               	incf	___awdiv@divisor,f
 11545  2B59  1903               	skipnz
 11546  2B5A  0AF2               	incf	___awdiv@divisor+1,f
 11547  2B5B  01F7               	clrf	___awdiv@sign
 11548  2B5C  0AF7               	incf	___awdiv@sign,f
 11549  2B5D                     l4527:	
 11550  2B5D  1FF4               	btfss	___awdiv@dividend+1,7
 11551  2B5E  2B68               	goto	l4533
 11552  2B5F  09F3               	comf	___awdiv@dividend,f
 11553  2B60  09F4               	comf	___awdiv@dividend+1,f
 11554  2B61  0AF3               	incf	___awdiv@dividend,f
 11555  2B62  1903               	skipnz
 11556  2B63  0AF4               	incf	___awdiv@dividend+1,f
 11557  2B64  3001               	movlw	1
 11558  2B65  00F5               	movwf	??___awdiv
 11559  2B66  0875               	movf	??___awdiv,w
 11560  2B67  06F7               	xorwf	___awdiv@sign,f
 11561  2B68                     l4533:	
 11562  2B68  01F8               	clrf	___awdiv@quotient
 11563  2B69  01F9               	clrf	___awdiv@quotient+1
 11564  2B6A  0871               	movf	___awdiv@divisor,w
 11565  2B6B  0472               	iorwf	___awdiv@divisor+1,w
 11566  2B6C  1903               	btfsc	3,2
 11567  2B6D  2B97               	goto	l4555
 11568  2B6E  01F6               	clrf	___awdiv@counter
 11569  2B6F  0AF6               	incf	___awdiv@counter,f
 11570  2B70                     l4543:	
 11571  2B70  1BF2               	btfsc	___awdiv@divisor+1,7
 11572  2B71  2B7C               	goto	l4545
 11573  2B72  3001               	movlw	1
 11574  2B73                     u5885:	
 11575  2B73  35F1               	lslf	___awdiv@divisor,f
 11576  2B74  0DF2               	rlf	___awdiv@divisor+1,f
 11577  2B75  0B89               	decfsz	9,f
 11578  2B76  2B73               	goto	u5885
 11579  2B77  3001               	movlw	1
 11580  2B78  00F5               	movwf	??___awdiv
 11581  2B79  0875               	movf	??___awdiv,w
 11582  2B7A  07F6               	addwf	___awdiv@counter,f
 11583  2B7B  2B70               	goto	l4543
 11584  2B7C                     l4545:	
 11585  2B7C  3001               	movlw	1
 11586  2B7D                     u5905:	
 11587  2B7D  35F8               	lslf	___awdiv@quotient,f
 11588  2B7E  0DF9               	rlf	___awdiv@quotient+1,f
 11589  2B7F  0B89               	decfsz	9,f
 11590  2B80  2B7D               	goto	u5905
 11591  2B81  0872               	movf	___awdiv@divisor+1,w
 11592  2B82  0274               	subwf	___awdiv@dividend+1,w
 11593  2B83  1D03               	skipz
 11594  2B84  2B87               	goto	u5915
 11595  2B85  0871               	movf	___awdiv@divisor,w
 11596  2B86  0273               	subwf	___awdiv@dividend,w
 11597  2B87                     u5915:	
 11598  2B87  1C03               	skipc
 11599  2B88  2B8E               	goto	l4551
 11600  2B89  0871               	movf	___awdiv@divisor,w
 11601  2B8A  02F3               	subwf	___awdiv@dividend,f
 11602  2B8B  0872               	movf	___awdiv@divisor+1,w
 11603  2B8C  3BF4               	subwfb	___awdiv@dividend+1,f
 11604  2B8D  1478               	bsf	___awdiv@quotient,0
 11605  2B8E                     l4551:	
 11606  2B8E  3001               	movlw	1
 11607  2B8F                     u5925:	
 11608  2B8F  36F2               	lsrf	___awdiv@divisor+1,f
 11609  2B90  0CF1               	rrf	___awdiv@divisor,f
 11610  2B91  0B89               	decfsz	9,f
 11611  2B92  2B8F               	goto	u5925
 11612  2B93  3001               	movlw	1
 11613  2B94  02F6               	subwf	___awdiv@counter,f
 11614  2B95  1D03               	btfss	3,2
 11615  2B96  2B7C               	goto	l4545
 11616  2B97                     l4555:	
 11617  2B97  0877               	movf	___awdiv@sign,w
 11618  2B98  1903               	btfsc	3,2
 11619  2B99  2B9F               	goto	l4559
 11620  2B9A  09F8               	comf	___awdiv@quotient,f
 11621  2B9B  09F9               	comf	___awdiv@quotient+1,f
 11622  2B9C  0AF8               	incf	___awdiv@quotient,f
 11623  2B9D  1903               	skipnz
 11624  2B9E  0AF9               	incf	___awdiv@quotient+1,f
 11625  2B9F                     l4559:	
 11626  2B9F  0879               	movf	___awdiv@quotient+1,w
 11627  2BA0  00F2               	movwf	?___awdiv+1
 11628  2BA1  0878               	movf	___awdiv@quotient,w
 11629  2BA2  00F1               	movwf	?___awdiv
 11630  2BA3  0008               	return
 11631  2BA4                     __end_of___awdiv:	
 11632                           
 11633                           	psect	text28
 11634  1D54                     __ptext28:	
 11635 ;; *************** function _dtoa *****************
 11636 ;; Defined at:
 11637 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 11638 ;; Parameters:    Size  Location     Type
 11639 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 11640 ;;		 -> vsnprintf@f(6), 
 11641 ;;  d               8   18[BANK0 ] long long 
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;  n               8   37[BANK0 ] long long 
 11644 ;;  i               2   45[BANK0 ] int 
 11645 ;;  s               2   35[BANK0 ] int 
 11646 ;;  w               2   33[BANK0 ] int 
 11647 ;;  p               2   31[BANK0 ] int 
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  2   16[BANK0 ] int 
 11650 ;; Registers used:
 11651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/0
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11657 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11658 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11659 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11660 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11661 ;;Total ram usage:       31 bytes
 11662 ;; Hardware stack levels used:    1
 11663 ;; Hardware stack levels required when called:    5
 11664 ;; This function calls:
 11665 ;;		___aodiv
 11666 ;;		___aomod
 11667 ;;		_abs
 11668 ;;		_pad
 11669 ;; This function is called by:
 11670 ;;		_vfpfcnvrt
 11671 ;; This function uses a non-reentrant model
 11672 ;;
 11673                           
 11674                           
 11675                           ;psect for function _dtoa
 11676  1D54                     _dtoa:	
 11677                           
 11678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 11679                           
 11680                           ;incstack = 0
 11681                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11682  1D54  0020               	movlb	0	; select bank0
 11683  1D55  0832               	movf	dtoa@d,w
 11684  1D56  00C5               	movwf	dtoa@n
 11685  1D57  0833               	movf	dtoa@d+1,w
 11686  1D58  00C6               	movwf	dtoa@n+1
 11687  1D59  0834               	movf	dtoa@d+2,w
 11688  1D5A  00C7               	movwf	dtoa@n+2
 11689  1D5B  0835               	movf	dtoa@d+3,w
 11690  1D5C  00C8               	movwf	dtoa@n+3
 11691  1D5D  0836               	movf	dtoa@d+4,w
 11692  1D5E  00C9               	movwf	dtoa@n+4
 11693  1D5F  0837               	movf	dtoa@d+5,w
 11694  1D60  00CA               	movwf	dtoa@n+5
 11695  1D61  0838               	movf	dtoa@d+6,w
 11696  1D62  00CB               	movwf	dtoa@n+6
 11697  1D63  0839               	movf	dtoa@d+7,w
 11698  1D64  00CC               	movwf	dtoa@n+7
 11699                           
 11700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 11701  1D65  3045               	movlw	low dtoa@n
 11702  1D66  0086               	movwf	6
 11703  1D67  3000               	movlw	high dtoa@n
 11704  1D68  0087               	movwf	7
 11705  1D69  3F47               	moviw [7]fsr1
 11706  1D6A  00BA               	movwf	??_dtoa
 11707  1D6B  1FBA               	btfss	??_dtoa,7
 11708  1D6C  2D6F               	goto	u9940
 11709  1D6D  3001               	movlw	1
 11710  1D6E  2D70               	goto	u9950
 11711  1D6F                     u9940:	
 11712  1D6F  3000               	movlw	0
 11713  1D70                     u9950:	
 11714  1D70  0020               	movlb	0	; select bank0
 11715  1D71  00BB               	movwf	??_dtoa+1
 11716  1D72  01BC               	clrf	??_dtoa+2
 11717  1D73  083B               	movf	??_dtoa+1,w
 11718  1D74  00C3               	movwf	dtoa@s
 11719  1D75  083C               	movf	??_dtoa+2,w
 11720  1D76  00C4               	movwf	dtoa@s+1
 11721                           
 11722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 11723  1D77  0843               	movf	dtoa@s,w
 11724  1D78  0444               	iorwf	dtoa@s+1,w
 11725  1D79  1903               	btfsc	3,2
 11726  1D7A  2D99               	goto	l516
 11727                           
 11728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 11729  1D7B  09C5               	comf	dtoa@n,f
 11730  1D7C  09C6               	comf	dtoa@n+1,f
 11731  1D7D  09C7               	comf	dtoa@n+2,f
 11732  1D7E  09C8               	comf	dtoa@n+3,f
 11733  1D7F  09C9               	comf	dtoa@n+4,f
 11734  1D80  09CA               	comf	dtoa@n+5,f
 11735  1D81  09CB               	comf	dtoa@n+6,f
 11736  1D82  09CC               	comf	dtoa@n+7,f
 11737  1D83  0AC5               	incf	dtoa@n,f
 11738  1D84  1D03               	skipz
 11739  1D85  2D99               	goto	l516
 11740  1D86  0AC6               	incf	dtoa@n+1,f
 11741  1D87  1D03               	skipz
 11742  1D88  2D99               	goto	l516
 11743  1D89  0AC7               	incf	dtoa@n+2,f
 11744  1D8A  1D03               	skipz
 11745  1D8B  2D99               	goto	l516
 11746  1D8C  0AC8               	incf	dtoa@n+3,f
 11747  1D8D  1D03               	skipz
 11748  1D8E  2D99               	goto	l516
 11749  1D8F  0AC9               	incf	dtoa@n+4,f
 11750  1D90  1D03               	skipz
 11751  1D91  2D99               	goto	l516
 11752  1D92  0ACA               	incf	dtoa@n+5,f
 11753  1D93  1D03               	skipz
 11754  1D94  2D99               	goto	l516
 11755  1D95  0ACB               	incf	dtoa@n+6,f
 11756  1D96  1D03               	skipz
 11757  1D97  2D99               	goto	l516
 11758  1D98  0ACC               	incf	dtoa@n+7,f
 11759  1D99                     l516:	
 11760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 11761                           
 11762                           
 11763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 11764  1D99  0023               	movlb	3	; select bank3
 11765  1D9A  1BC1               	btfsc	(_prec+1)^(0+384),7
 11766  1D9B  2DA0               	goto	l517
 11767                           
 11768                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 11769  1D9C  30FD               	movlw	253
 11770  1D9D  05C2               	andwf	_flags^(0+384),f
 11771  1D9E  30FF               	movlw	255
 11772  1D9F  05C3               	andwf	(_flags+1)^(0+384),f
 11773  1DA0                     l517:	
 11774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 11775                           
 11776                           
 11777                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 11778  1DA0  0841               	movf	(_prec+1)^(0+384),w
 11779  1DA1  3A80               	xorlw	128
 11780  1DA2  0020               	movlb	0	; select bank0
 11781  1DA3  00BA               	movwf	??_dtoa
 11782  1DA4  3080               	movlw	128
 11783  1DA5  023A               	subwf	??_dtoa,w
 11784  1DA6  1D03               	skipz
 11785  1DA7  2DAB               	goto	u9995
 11786  1DA8  3001               	movlw	1
 11787  1DA9  0023               	movlb	3	; select bank3
 11788  1DAA  0240               	subwf	_prec^(0+384),w
 11789  1DAB                     u9995:	
 11790  1DAB  1803               	skipnc
 11791  1DAC  2DB3               	goto	l6901
 11792  1DAD  3001               	movlw	1
 11793  1DAE  0020               	movlb	0	; select bank0
 11794  1DAF  00BF               	movwf	dtoa@p
 11795  1DB0  3000               	movlw	0
 11796  1DB1  00C0               	movwf	dtoa@p+1
 11797  1DB2  2DBB               	goto	l521
 11798  1DB3                     l6901:	
 11799  1DB3  0023               	movlb	3	; select bank3
 11800  1DB4  0841               	movf	(_prec+1)^(0+384),w
 11801  1DB5  0020               	movlb	0	; select bank0
 11802  1DB6  00C0               	movwf	dtoa@p+1
 11803  1DB7  0023               	movlb	3	; select bank3
 11804  1DB8  0840               	movf	_prec^(0+384),w
 11805  1DB9  0020               	movlb	0	; select bank0
 11806  1DBA  00BF               	movwf	dtoa@p
 11807  1DBB                     l521:	
 11808                           
 11809                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 11810  1DBB  0023               	movlb	3	; select bank3
 11811  1DBC  083F               	movf	(_width+1)^(0+384),w
 11812  1DBD  0020               	movlb	0	; select bank0
 11813  1DBE  00C2               	movwf	dtoa@w+1
 11814  1DBF  0023               	movlb	3	; select bank3
 11815  1DC0  083E               	movf	_width^(0+384),w
 11816  1DC1  0020               	movlb	0	; select bank0
 11817  1DC2  00C1               	movwf	dtoa@w
 11818                           
 11819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 11820  1DC3  0843               	movf	dtoa@s,w
 11821  1DC4  0444               	iorwf	dtoa@s+1,w
 11822  1DC5  1D03               	btfss	3,2
 11823  1DC6  2DCA               	goto	l6907
 11824  1DC7  0023               	movlb	3	; select bank3
 11825  1DC8  1D42               	btfss	_flags^(0+384),2
 11826  1DC9  2DCF               	goto	l522
 11827  1DCA                     l6907:	
 11828                           
 11829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 11830  1DCA  30FF               	movlw	255
 11831  1DCB  0020               	movlb	0	; select bank0
 11832  1DCC  07C1               	addwf	dtoa@w,f
 11833  1DCD  30FF               	movlw	255
 11834  1DCE  3DC2               	addwfc	dtoa@w+1,f
 11835  1DCF                     l522:	
 11836                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 11837                           
 11838                           
 11839                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 11840  1DCF  304F               	movlw	79
 11841  1DD0  0020               	movlb	0	; select bank0
 11842  1DD1  00CD               	movwf	dtoa@i
 11843  1DD2  3000               	movlw	0
 11844  1DD3  00CE               	movwf	dtoa@i+1
 11845                           
 11846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 11847  1DD4  0024               	movlb	4	; select bank4
 11848  1DD5  01EF               	clrf	(_dbuf^(0+512)+79)
 11849                           
 11850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11851  1DD6  2E65               	goto	l525
 11852  1DD7                     l6921:	
 11853  1DD7  0020               	movlb	0	; select bank0
 11854  1DD8  0845               	movf	dtoa@n,w
 11855  1DD9  0446               	iorwf	dtoa@n+1,w
 11856  1DDA  0447               	iorwf	dtoa@n+2,w
 11857  1DDB  0448               	iorwf	dtoa@n+3,w
 11858  1DDC  0449               	iorwf	dtoa@n+4,w
 11859  1DDD  044A               	iorwf	dtoa@n+5,w
 11860  1DDE  044B               	iorwf	dtoa@n+6,w
 11861  1DDF  044C               	iorwf	dtoa@n+7,w
 11862  1DE0  1D03               	skipz
 11863  1DE1  2DFC               	goto	l6911
 11864  1DE2  0840               	movf	dtoa@p+1,w
 11865  1DE3  3A80               	xorlw	128
 11866  1DE4  00BA               	movwf	??_dtoa
 11867  1DE5  3080               	movlw	128
 11868  1DE6  023A               	subwf	??_dtoa,w
 11869  1DE7  1D03               	skipz
 11870  1DE8  2DEB               	goto	u10045
 11871  1DE9  3001               	movlw	1
 11872  1DEA  023F               	subwf	dtoa@p,w
 11873  1DEB                     u10045:	
 11874  1DEB  1803               	skipnc
 11875  1DEC  2DFC               	goto	l6911
 11876  1DED  0020               	movlb	0	; select bank0
 11877  1DEE  0842               	movf	dtoa@w+1,w
 11878  1DEF  3A80               	xorlw	128
 11879  1DF0  00BA               	movwf	??_dtoa
 11880  1DF1  3080               	movlw	128
 11881  1DF2  023A               	subwf	??_dtoa,w
 11882  1DF3  1D03               	skipz
 11883  1DF4  2DF7               	goto	u10055
 11884  1DF5  3001               	movlw	1
 11885  1DF6  0241               	subwf	dtoa@w,w
 11886  1DF7                     u10055:	
 11887  1DF7  1C03               	skipc
 11888  1DF8  2E71               	goto	l6929
 11889  1DF9  0023               	movlb	3	; select bank3
 11890  1DFA  1CC2               	btfss	_flags^(0+384),1
 11891  1DFB  2E71               	goto	l6929
 11892  1DFC                     l6911:	
 11893                           
 11894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 11895  1DFC  30FF               	movlw	255
 11896  1DFD  0020               	movlb	0	; select bank0
 11897  1DFE  07CD               	addwf	dtoa@i,f
 11898  1DFF  30FF               	movlw	255
 11899  1E00  3DCE               	addwfc	dtoa@i+1,f
 11900                           
 11901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 11902  1E01  300A               	movlw	10
 11903  1E02  00A0               	movwf	___aomod@divisor
 11904  1E03  01A1               	clrf	___aomod@divisor+1
 11905  1E04  01A2               	clrf	___aomod@divisor+2
 11906  1E05  01A3               	clrf	___aomod@divisor+3
 11907  1E06  01A4               	clrf	___aomod@divisor+4
 11908  1E07  01A5               	clrf	___aomod@divisor+5
 11909  1E08  01A6               	clrf	___aomod@divisor+6
 11910  1E09  01A7               	clrf	___aomod@divisor+7
 11911  1E0A  0845               	movf	dtoa@n,w
 11912  1E0B  00A8               	movwf	___aomod@dividend
 11913  1E0C  0846               	movf	dtoa@n+1,w
 11914  1E0D  00A9               	movwf	___aomod@dividend+1
 11915  1E0E  0847               	movf	dtoa@n+2,w
 11916  1E0F  00AA               	movwf	___aomod@dividend+2
 11917  1E10  0848               	movf	dtoa@n+3,w
 11918  1E11  00AB               	movwf	___aomod@dividend+3
 11919  1E12  0849               	movf	dtoa@n+4,w
 11920  1E13  00AC               	movwf	___aomod@dividend+4
 11921  1E14  084A               	movf	dtoa@n+5,w
 11922  1E15  00AD               	movwf	___aomod@dividend+5
 11923  1E16  084B               	movf	dtoa@n+6,w
 11924  1E17  00AE               	movwf	___aomod@dividend+6
 11925  1E18  084C               	movf	dtoa@n+7,w
 11926  1E19  00AF               	movwf	___aomod@dividend+7
 11927  1E1A  31A6  2643  319D   	fcall	___aomod
 11928  1E1D  0020               	movlb	0	; select bank0
 11929  1E1E  0821               	movf	?___aomod+1,w
 11930  1E1F  00F5               	movwf	abs@a+1
 11931  1E20  0820               	movf	?___aomod,w
 11932  1E21  00F4               	movwf	abs@a
 11933  1E22  31B7  270F  319D   	fcall	_abs
 11934  1E25  0874               	movf	?_abs,w
 11935  1E26  3E30               	addlw	48
 11936  1E27  0020               	movlb	0	; select bank0
 11937  1E28  00BA               	movwf	??_dtoa
 11938  1E29  084D               	movf	dtoa@i,w
 11939  1E2A  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11940  1E2B  0086               	movwf	6
 11941  1E2C  3002               	movlw	2	; select bank4/5
 11942  1E2D  0087               	movwf	7
 11943  1E2E  083A               	movf	??_dtoa,w
 11944  1E2F  0081               	movwf	1
 11945                           
 11946                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 11947  1E30  30FF               	movlw	255
 11948  1E31  07BF               	addwf	dtoa@p,f
 11949  1E32  30FF               	movlw	255
 11950  1E33  3DC0               	addwfc	dtoa@p+1,f
 11951                           
 11952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 11953  1E34  30FF               	movlw	255
 11954  1E35  07C1               	addwf	dtoa@w,f
 11955  1E36  30FF               	movlw	255
 11956  1E37  3DC2               	addwfc	dtoa@w+1,f
 11957                           
 11958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 11959  1E38  300A               	movlw	10
 11960  1E39  00A0               	movwf	___aodiv@divisor
 11961  1E3A  01A1               	clrf	___aodiv@divisor+1
 11962  1E3B  01A2               	clrf	___aodiv@divisor+2
 11963  1E3C  01A3               	clrf	___aodiv@divisor+3
 11964  1E3D  01A4               	clrf	___aodiv@divisor+4
 11965  1E3E  01A5               	clrf	___aodiv@divisor+5
 11966  1E3F  01A6               	clrf	___aodiv@divisor+6
 11967  1E40  01A7               	clrf	___aodiv@divisor+7
 11968  1E41  0845               	movf	dtoa@n,w
 11969  1E42  00A8               	movwf	___aodiv@dividend
 11970  1E43  0846               	movf	dtoa@n+1,w
 11971  1E44  00A9               	movwf	___aodiv@dividend+1
 11972  1E45  0847               	movf	dtoa@n+2,w
 11973  1E46  00AA               	movwf	___aodiv@dividend+2
 11974  1E47  0848               	movf	dtoa@n+3,w
 11975  1E48  00AB               	movwf	___aodiv@dividend+3
 11976  1E49  0849               	movf	dtoa@n+4,w
 11977  1E4A  00AC               	movwf	___aodiv@dividend+4
 11978  1E4B  084A               	movf	dtoa@n+5,w
 11979  1E4C  00AD               	movwf	___aodiv@dividend+5
 11980  1E4D  084B               	movf	dtoa@n+6,w
 11981  1E4E  00AE               	movwf	___aodiv@dividend+6
 11982  1E4F  084C               	movf	dtoa@n+7,w
 11983  1E50  00AF               	movwf	___aodiv@dividend+7
 11984  1E51  319A  225E  319D   	fcall	___aodiv
 11985  1E54  0020               	movlb	0	; select bank0
 11986  1E55  0820               	movf	?___aodiv,w
 11987  1E56  00C5               	movwf	dtoa@n
 11988  1E57  0821               	movf	?___aodiv+1,w
 11989  1E58  00C6               	movwf	dtoa@n+1
 11990  1E59  0822               	movf	?___aodiv+2,w
 11991  1E5A  00C7               	movwf	dtoa@n+2
 11992  1E5B  0823               	movf	?___aodiv+3,w
 11993  1E5C  00C8               	movwf	dtoa@n+3
 11994  1E5D  0824               	movf	?___aodiv+4,w
 11995  1E5E  00C9               	movwf	dtoa@n+4
 11996  1E5F  0825               	movf	?___aodiv+5,w
 11997  1E60  00CA               	movwf	dtoa@n+5
 11998  1E61  0826               	movf	?___aodiv+6,w
 11999  1E62  00CB               	movwf	dtoa@n+6
 12000  1E63  0827               	movf	?___aodiv+7,w
 12001  1E64  00CC               	movwf	dtoa@n+7
 12002  1E65                     l525:	
 12003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 12004                           
 12005                           
 12006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12007  1E65  0020               	movlb	0	; select bank0
 12008  1E66  084E               	movf	dtoa@i+1,w
 12009  1E67  3A80               	xorlw	128
 12010  1E68  00BA               	movwf	??_dtoa
 12011  1E69  3080               	movlw	128
 12012  1E6A  023A               	subwf	??_dtoa,w
 12013  1E6B  1D03               	skipz
 12014  1E6C  2E6F               	goto	u10025
 12015  1E6D  3001               	movlw	1
 12016  1E6E  024D               	subwf	dtoa@i,w
 12017  1E6F                     u10025:	
 12018  1E6F  1803               	btfsc	3,0
 12019  1E70  2DD7               	goto	l6921
 12020  1E71                     l6929:	
 12021                           
 12022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 12023  1E71  0020               	movlb	0	; select bank0
 12024  1E72  0843               	movf	dtoa@s,w
 12025  1E73  0444               	iorwf	dtoa@s+1,w
 12026  1E74  1D03               	btfss	3,2
 12027  1E75  2E79               	goto	l6933
 12028  1E76  0023               	movlb	3	; select bank3
 12029  1E77  1D42               	btfss	_flags^(0+384),2
 12030  1E78  2E91               	goto	l6943
 12031  1E79                     l6933:	
 12032                           
 12033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 12034  1E79  30FF               	movlw	255
 12035  1E7A  0020               	movlb	0	; select bank0
 12036  1E7B  07CD               	addwf	dtoa@i,f
 12037  1E7C  30FF               	movlw	255
 12038  1E7D  3DCE               	addwfc	dtoa@i+1,f
 12039                           
 12040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 12041  1E7E  0843               	movf	dtoa@s,w
 12042  1E7F  0444               	iorwf	dtoa@s+1,w
 12043  1E80  1D03               	btfss	3,2
 12044  1E81  2E84               	goto	l6939
 12045  1E82  302B               	movlw	43
 12046  1E83  2E85               	goto	L12
 12047  1E84                     l6939:	
 12048  1E84  302D               	movlw	45
 12049  1E85                     L12:	
 12050  1E85  00BD               	movwf	_dtoa$931
 12051  1E86  3000               	movlw	0
 12052  1E87  00BE               	movwf	_dtoa$931+1
 12053  1E88  083D               	movf	_dtoa$931,w
 12054  1E89  00BA               	movwf	??_dtoa
 12055  1E8A  084D               	movf	dtoa@i,w
 12056  1E8B  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12057  1E8C  0086               	movwf	6
 12058  1E8D  3002               	movlw	2	; select bank4/5
 12059  1E8E  0087               	movwf	7
 12060  1E8F  083A               	movf	??_dtoa,w
 12061  1E90  0081               	movwf	1
 12062  1E91                     l6943:	
 12063                           
 12064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 12065  1E91  0020               	movlb	0	; select bank0
 12066  1E92  0831               	movf	dtoa@fp+1,w
 12067  1E93  00A7               	movwf	pad@fp+1
 12068  1E94  0830               	movf	dtoa@fp,w
 12069  1E95  00A6               	movwf	pad@fp
 12070  1E96  084D               	movf	dtoa@i,w
 12071  1E97  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12072  1E98  00BA               	movwf	??_dtoa
 12073  1E99  083A               	movf	??_dtoa,w
 12074  1E9A  00A8               	movwf	pad@buf
 12075  1E9B  0842               	movf	dtoa@w+1,w
 12076  1E9C  00AA               	movwf	pad@p+1
 12077  1E9D  0841               	movf	dtoa@w,w
 12078  1E9E  00A9               	movwf	pad@p
 12079  1E9F  31AB  2302         	fcall	_pad
 12080  1EA1  0020               	movlb	0	; select bank0
 12081  1EA2  0827               	movf	?_pad+1,w
 12082  1EA3  00B1               	movwf	?_dtoa+1
 12083  1EA4  0826               	movf	?_pad,w
 12084  1EA5  00B0               	movwf	?_dtoa
 12085  1EA6  0008               	return
 12086  1EA7                     __end_of_dtoa:	
 12087                           
 12088                           	psect	text29
 12089  370F                     __ptext29:	
 12090 ;; *************** function _abs *****************
 12091 ;; Defined at:
 12092 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 12093 ;; Parameters:    Size  Location     Type
 12094 ;;  a               2    4[COMMON] int 
 12095 ;; Auto vars:     Size  Location     Type
 12096 ;;		None
 12097 ;; Return value:  Size  Location     Type
 12098 ;;                  2    4[COMMON] int 
 12099 ;; Registers used:
 12100 ;;		wreg, status,2, status,0
 12101 ;; Tracked objects:
 12102 ;;		On entry : 0/0
 12103 ;;		On exit  : 0/0
 12104 ;;		Unchanged: 0/0
 12105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12108 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12109 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12110 ;;Total ram usage:        4 bytes
 12111 ;; Hardware stack levels used:    1
 12112 ;; Hardware stack levels required when called:    1
 12113 ;; This function calls:
 12114 ;;		Nothing
 12115 ;; This function is called by:
 12116 ;;		_dtoa
 12117 ;; This function uses a non-reentrant model
 12118 ;;
 12119                           
 12120                           
 12121                           ;psect for function _abs
 12122  370F                     _abs:	
 12123                           
 12124                           ;incstack = 0
 12125                           ; Regs used in _abs: [wreg+status,2+status,0]
 12126  370F  0875               	movf	abs@a+1,w
 12127  3710  3A80               	xorlw	128
 12128  3711  00F6               	movwf	??_abs
 12129  3712  3080               	movlw	128
 12130  3713  0276               	subwf	??_abs,w
 12131  3714  1D03               	skipz
 12132  3715  2F18               	goto	u5295
 12133  3716  3001               	movlw	1
 12134  3717  0274               	subwf	abs@a,w
 12135  3718                     u5295:	
 12136  3718  1803               	skipnc
 12137  3719  0008               	return
 12138  371A  0974               	comf	abs@a,w
 12139  371B  00F6               	movwf	??_abs
 12140  371C  0975               	comf	abs@a+1,w
 12141  371D  00F7               	movwf	??_abs+1
 12142  371E  0AF6               	incf	??_abs,f
 12143  371F  1903               	skipnz
 12144  3720  0AF7               	incf	??_abs+1,f
 12145  3721  0876               	movf	??_abs,w
 12146  3722  00F4               	movwf	?_abs
 12147  3723  0877               	movf	??_abs+1,w
 12148  3724  00F5               	movwf	?_abs+1
 12149  3725  0008               	return
 12150  3726                     __end_of_abs:	
 12151                           
 12152                           	psect	text30
 12153  2643                     __ptext30:	
 12154 ;; *************** function ___aomod *****************
 12155 ;; Defined at:
 12156 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 12157 ;; Parameters:    Size  Location     Type
 12158 ;;  divisor         8    0[BANK0 ] long long 
 12159 ;;  dividend        8    8[BANK0 ] long long 
 12160 ;; Auto vars:     Size  Location     Type
 12161 ;;  sign            1    3[COMMON] unsigned char 
 12162 ;;  counter         1    2[COMMON] unsigned char 
 12163 ;; Return value:  Size  Location     Type
 12164 ;;                  8    0[BANK0 ] long long 
 12165 ;; Registers used:
 12166 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12167 ;; Tracked objects:
 12168 ;;		On entry : 0/0
 12169 ;;		On exit  : 0/0
 12170 ;;		Unchanged: 0/0
 12171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12172 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12175 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12176 ;;Total ram usage:       19 bytes
 12177 ;; Hardware stack levels used:    1
 12178 ;; Hardware stack levels required when called:    1
 12179 ;; This function calls:
 12180 ;;		Nothing
 12181 ;; This function is called by:
 12182 ;;		_dtoa
 12183 ;; This function uses a non-reentrant model
 12184 ;;
 12185                           
 12186                           
 12187                           ;psect for function ___aomod
 12188  2643                     ___aomod:	
 12189                           
 12190                           ;incstack = 0
 12191                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 12192  2643  01F3               	clrf	___aomod@sign
 12193  2644  3028               	movlw	low ___aomod@dividend
 12194  2645  0086               	movwf	6
 12195  2646  3000               	movlw	high ___aomod@dividend
 12196  2647  0087               	movwf	7
 12197  2648  3F47               	moviw [7]fsr1
 12198  2649  00F1               	movwf	??___aomod
 12199  264A  1FF1               	btfss	??___aomod,7
 12200  264B  2E6D               	goto	l4495
 12201  264C  0020               	movlb	0	; select bank0
 12202  264D  09A8               	comf	___aomod@dividend,f
 12203  264E  09A9               	comf	___aomod@dividend+1,f
 12204  264F  09AA               	comf	___aomod@dividend+2,f
 12205  2650  09AB               	comf	___aomod@dividend+3,f
 12206  2651  09AC               	comf	___aomod@dividend+4,f
 12207  2652  09AD               	comf	___aomod@dividend+5,f
 12208  2653  09AE               	comf	___aomod@dividend+6,f
 12209  2654  09AF               	comf	___aomod@dividend+7,f
 12210  2655  0AA8               	incf	___aomod@dividend,f
 12211  2656  1D03               	skipz
 12212  2657  2E6B               	goto	u576lld
 12213  2658  0AA9               	incf	___aomod@dividend+1,f
 12214  2659  1D03               	skipz
 12215  265A  2E6B               	goto	u576lld
 12216  265B  0AAA               	incf	___aomod@dividend+2,f
 12217  265C  1D03               	skipz
 12218  265D  2E6B               	goto	u576lld
 12219  265E  0AAB               	incf	___aomod@dividend+3,f
 12220  265F  1D03               	skipz
 12221  2660  2E6B               	goto	u576lld
 12222  2661  0AAC               	incf	___aomod@dividend+4,f
 12223  2662  1D03               	skipz
 12224  2663  2E6B               	goto	u576lld
 12225  2664  0AAD               	incf	___aomod@dividend+5,f
 12226  2665  1D03               	skipz
 12227  2666  2E6B               	goto	u576lld
 12228  2667  0AAE               	incf	___aomod@dividend+6,f
 12229  2668  1D03               	skipz
 12230  2669  2E6B               	goto	u576lld
 12231  266A  0AAF               	incf	___aomod@dividend+7,f
 12232  266B                     u576lld:	
 12233  266B  01F3               	clrf	___aomod@sign
 12234  266C  0AF3               	incf	___aomod@sign,f
 12235  266D                     l4495:	
 12236  266D  3020               	movlw	low ___aomod@divisor
 12237  266E  0086               	movwf	6
 12238  266F  3000               	movlw	high ___aomod@divisor
 12239  2670  0087               	movwf	7
 12240  2671  3F47               	moviw [7]fsr1
 12241  2672  00F1               	movwf	??___aomod
 12242  2673  1FF1               	btfss	??___aomod,7
 12243  2674  2E94               	goto	l4499
 12244  2675  0020               	movlb	0	; select bank0
 12245  2676  09A0               	comf	___aomod@divisor,f
 12246  2677  09A1               	comf	___aomod@divisor+1,f
 12247  2678  09A2               	comf	___aomod@divisor+2,f
 12248  2679  09A3               	comf	___aomod@divisor+3,f
 12249  267A  09A4               	comf	___aomod@divisor+4,f
 12250  267B  09A5               	comf	___aomod@divisor+5,f
 12251  267C  09A6               	comf	___aomod@divisor+6,f
 12252  267D  09A7               	comf	___aomod@divisor+7,f
 12253  267E  0AA0               	incf	___aomod@divisor,f
 12254  267F  1D03               	skipz
 12255  2680  2E94               	goto	l4499
 12256  2681  0AA1               	incf	___aomod@divisor+1,f
 12257  2682  1D03               	skipz
 12258  2683  2E94               	goto	l4499
 12259  2684  0AA2               	incf	___aomod@divisor+2,f
 12260  2685  1D03               	skipz
 12261  2686  2E94               	goto	l4499
 12262  2687  0AA3               	incf	___aomod@divisor+3,f
 12263  2688  1D03               	skipz
 12264  2689  2E94               	goto	l4499
 12265  268A  0AA4               	incf	___aomod@divisor+4,f
 12266  268B  1D03               	skipz
 12267  268C  2E94               	goto	l4499
 12268  268D  0AA5               	incf	___aomod@divisor+5,f
 12269  268E  1D03               	skipz
 12270  268F  2E94               	goto	l4499
 12271  2690  0AA6               	incf	___aomod@divisor+6,f
 12272  2691  1D03               	skipz
 12273  2692  2E94               	goto	l4499
 12274  2693  0AA7               	incf	___aomod@divisor+7,f
 12275  2694                     l4499:	
 12276  2694  0020               	movlb	0	; select bank0
 12277  2695  0820               	movf	___aomod@divisor,w
 12278  2696  0421               	iorwf	___aomod@divisor+1,w
 12279  2697  0422               	iorwf	___aomod@divisor+2,w
 12280  2698  0423               	iorwf	___aomod@divisor+3,w
 12281  2699  0424               	iorwf	___aomod@divisor+4,w
 12282  269A  0425               	iorwf	___aomod@divisor+5,w
 12283  269B  0426               	iorwf	___aomod@divisor+6,w
 12284  269C  0427               	iorwf	___aomod@divisor+7,w
 12285  269D  1903               	skipnz
 12286  269E  2EEC               	goto	l4515
 12287  269F  01F2               	clrf	___aomod@counter
 12288  26A0  0AF2               	incf	___aomod@counter,f
 12289  26A1                     l4507:	
 12290  26A1  1BA7               	btfsc	___aomod@divisor+7,7
 12291  26A2  2EB0               	goto	l4509
 12292  26A3  35A0               	lslf	___aomod@divisor,f
 12293  26A4  0DA1               	rlf	___aomod@divisor+1,f
 12294  26A5  0DA2               	rlf	___aomod@divisor+2,f
 12295  26A6  0DA3               	rlf	___aomod@divisor+3,f
 12296  26A7  0DA4               	rlf	___aomod@divisor+4,f
 12297  26A8  0DA5               	rlf	___aomod@divisor+5,f
 12298  26A9  0DA6               	rlf	___aomod@divisor+6,f
 12299  26AA  0DA7               	rlf	___aomod@divisor+7,f
 12300  26AB  3001               	movlw	1
 12301  26AC  00F1               	movwf	??___aomod
 12302  26AD  0871               	movf	??___aomod,w
 12303  26AE  07F2               	addwf	___aomod@counter,f
 12304  26AF  2EA1               	goto	l4507
 12305  26B0                     l4509:	
 12306  26B0  0827               	movf	___aomod@divisor+7,w
 12307  26B1  022F               	subwf	___aomod@dividend+7,w
 12308  26B2  1D03               	skipz
 12309  26B3  2ECE               	goto	u5815
 12310  26B4  0826               	movf	___aomod@divisor+6,w
 12311  26B5  022E               	subwf	___aomod@dividend+6,w
 12312  26B6  1D03               	skipz
 12313  26B7  2ECE               	goto	u5815
 12314  26B8  0825               	movf	___aomod@divisor+5,w
 12315  26B9  022D               	subwf	___aomod@dividend+5,w
 12316  26BA  1D03               	skipz
 12317  26BB  2ECE               	goto	u5815
 12318  26BC  0824               	movf	___aomod@divisor+4,w
 12319  26BD  022C               	subwf	___aomod@dividend+4,w
 12320  26BE  1D03               	skipz
 12321  26BF  2ECE               	goto	u5815
 12322  26C0  0823               	movf	___aomod@divisor+3,w
 12323  26C1  022B               	subwf	___aomod@dividend+3,w
 12324  26C2  1D03               	skipz
 12325  26C3  2ECE               	goto	u5815
 12326  26C4  0822               	movf	___aomod@divisor+2,w
 12327  26C5  022A               	subwf	___aomod@dividend+2,w
 12328  26C6  1D03               	skipz
 12329  26C7  2ECE               	goto	u5815
 12330  26C8  0821               	movf	___aomod@divisor+1,w
 12331  26C9  0229               	subwf	___aomod@dividend+1,w
 12332  26CA  1D03               	skipz
 12333  26CB  2ECE               	goto	u5815
 12334  26CC  0820               	movf	___aomod@divisor,w
 12335  26CD  0228               	subwf	___aomod@dividend,w
 12336  26CE                     u5815:	
 12337  26CE  1C03               	skipc
 12338  26CF  2EE0               	goto	l4513
 12339  26D0  0820               	movf	___aomod@divisor,w
 12340  26D1  02A8               	subwf	___aomod@dividend,f
 12341  26D2  0821               	movf	___aomod@divisor+1,w
 12342  26D3  3BA9               	subwfb	___aomod@dividend+1,f
 12343  26D4  0822               	movf	___aomod@divisor+2,w
 12344  26D5  3BAA               	subwfb	___aomod@dividend+2,f
 12345  26D6  0823               	movf	___aomod@divisor+3,w
 12346  26D7  3BAB               	subwfb	___aomod@dividend+3,f
 12347  26D8  0824               	movf	___aomod@divisor+4,w
 12348  26D9  3BAC               	subwfb	___aomod@dividend+4,f
 12349  26DA  0825               	movf	___aomod@divisor+5,w
 12350  26DB  3BAD               	subwfb	___aomod@dividend+5,f
 12351  26DC  0826               	movf	___aomod@divisor+6,w
 12352  26DD  3BAE               	subwfb	___aomod@dividend+6,f
 12353  26DE  0827               	movf	___aomod@divisor+7,w
 12354  26DF  3BAF               	subwfb	___aomod@dividend+7,f
 12355  26E0                     l4513:	
 12356  26E0  36A7               	lsrf	___aomod@divisor+7,f
 12357  26E1  0CA6               	rrf	___aomod@divisor+6,f
 12358  26E2  0CA5               	rrf	___aomod@divisor+5,f
 12359  26E3  0CA4               	rrf	___aomod@divisor+4,f
 12360  26E4  0CA3               	rrf	___aomod@divisor+3,f
 12361  26E5  0CA2               	rrf	___aomod@divisor+2,f
 12362  26E6  0CA1               	rrf	___aomod@divisor+1,f
 12363  26E7  0CA0               	rrf	___aomod@divisor,f
 12364  26E8  3001               	movlw	1
 12365  26E9  02F2               	subwf	___aomod@counter,f
 12366  26EA  1D03               	btfss	3,2
 12367  26EB  2EB0               	goto	l4509
 12368  26EC                     l4515:	
 12369  26EC  0873               	movf	___aomod@sign,w
 12370  26ED  1903               	btfsc	3,2
 12371  26EE  2F0D               	goto	l932
 12372  26EF  09A8               	comf	___aomod@dividend,f
 12373  26F0  09A9               	comf	___aomod@dividend+1,f
 12374  26F1  09AA               	comf	___aomod@dividend+2,f
 12375  26F2  09AB               	comf	___aomod@dividend+3,f
 12376  26F3  09AC               	comf	___aomod@dividend+4,f
 12377  26F4  09AD               	comf	___aomod@dividend+5,f
 12378  26F5  09AE               	comf	___aomod@dividend+6,f
 12379  26F6  09AF               	comf	___aomod@dividend+7,f
 12380  26F7  0AA8               	incf	___aomod@dividend,f
 12381  26F8  1D03               	skipz
 12382  26F9  2F0D               	goto	l932
 12383  26FA  0AA9               	incf	___aomod@dividend+1,f
 12384  26FB  1D03               	skipz
 12385  26FC  2F0D               	goto	l932
 12386  26FD  0AAA               	incf	___aomod@dividend+2,f
 12387  26FE  1D03               	skipz
 12388  26FF  2F0D               	goto	l932
 12389  2700  0AAB               	incf	___aomod@dividend+3,f
 12390  2701  1D03               	skipz
 12391  2702  2F0D               	goto	l932
 12392  2703  0AAC               	incf	___aomod@dividend+4,f
 12393  2704  1D03               	skipz
 12394  2705  2F0D               	goto	l932
 12395  2706  0AAD               	incf	___aomod@dividend+5,f
 12396  2707  1D03               	skipz
 12397  2708  2F0D               	goto	l932
 12398  2709  0AAE               	incf	___aomod@dividend+6,f
 12399  270A  1D03               	skipz
 12400  270B  2F0D               	goto	l932
 12401  270C  0AAF               	incf	___aomod@dividend+7,f
 12402  270D                     l932:	
 12403  270D  0020               	movlb	0	; select bank0
 12404  270E  0828               	movf	___aomod@dividend,w
 12405  270F  00A0               	movwf	?___aomod
 12406  2710  0829               	movf	___aomod@dividend+1,w
 12407  2711  00A1               	movwf	?___aomod+1
 12408  2712  082A               	movf	___aomod@dividend+2,w
 12409  2713  00A2               	movwf	?___aomod+2
 12410  2714  082B               	movf	___aomod@dividend+3,w
 12411  2715  00A3               	movwf	?___aomod+3
 12412  2716  082C               	movf	___aomod@dividend+4,w
 12413  2717  00A4               	movwf	?___aomod+4
 12414  2718  082D               	movf	___aomod@dividend+5,w
 12415  2719  00A5               	movwf	?___aomod+5
 12416  271A  082E               	movf	___aomod@dividend+6,w
 12417  271B  00A6               	movwf	?___aomod+6
 12418  271C  082F               	movf	___aomod@dividend+7,w
 12419  271D  00A7               	movwf	?___aomod+7
 12420  271E  0008               	return
 12421  271F                     __end_of___aomod:	
 12422                           
 12423                           	psect	text31
 12424  1A5E                     __ptext31:	
 12425 ;; *************** function ___aodiv *****************
 12426 ;; Defined at:
 12427 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 12428 ;; Parameters:    Size  Location     Type
 12429 ;;  divisor         8    0[BANK0 ] long long 
 12430 ;;  dividend        8    8[BANK0 ] long long 
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;  quotient        8    4[COMMON] long long 
 12433 ;;  sign            1    3[COMMON] unsigned char 
 12434 ;;  counter         1    2[COMMON] unsigned char 
 12435 ;; Return value:  Size  Location     Type
 12436 ;;                  8    0[BANK0 ] long long 
 12437 ;; Registers used:
 12438 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12439 ;; Tracked objects:
 12440 ;;		On entry : 0/0
 12441 ;;		On exit  : 0/0
 12442 ;;		Unchanged: 0/0
 12443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12444 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12445 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12447 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12448 ;;Total ram usage:       27 bytes
 12449 ;; Hardware stack levels used:    1
 12450 ;; Hardware stack levels required when called:    1
 12451 ;; This function calls:
 12452 ;;		Nothing
 12453 ;; This function is called by:
 12454 ;;		_dtoa
 12455 ;; This function uses a non-reentrant model
 12456 ;;
 12457                           
 12458                           
 12459                           ;psect for function ___aodiv
 12460  1A5E                     ___aodiv:	
 12461                           
 12462                           ;incstack = 0
 12463                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 12464  1A5E  01F3               	clrf	___aodiv@sign
 12465  1A5F  3020               	movlw	low ___aodiv@divisor
 12466  1A60  0086               	movwf	6
 12467  1A61  3000               	movlw	high ___aodiv@divisor
 12468  1A62  0087               	movwf	7
 12469  1A63  3F47               	moviw [7]fsr1
 12470  1A64  00F1               	movwf	??___aodiv
 12471  1A65  1FF1               	btfss	??___aodiv,7
 12472  1A66  2A88               	goto	l4457
 12473  1A67  0020               	movlb	0	; select bank0
 12474  1A68  09A0               	comf	___aodiv@divisor,f
 12475  1A69  09A1               	comf	___aodiv@divisor+1,f
 12476  1A6A  09A2               	comf	___aodiv@divisor+2,f
 12477  1A6B  09A3               	comf	___aodiv@divisor+3,f
 12478  1A6C  09A4               	comf	___aodiv@divisor+4,f
 12479  1A6D  09A5               	comf	___aodiv@divisor+5,f
 12480  1A6E  09A6               	comf	___aodiv@divisor+6,f
 12481  1A6F  09A7               	comf	___aodiv@divisor+7,f
 12482  1A70  0AA0               	incf	___aodiv@divisor,f
 12483  1A71  1D03               	skipz
 12484  1A72  2A86               	goto	u565lld
 12485  1A73  0AA1               	incf	___aodiv@divisor+1,f
 12486  1A74  1D03               	skipz
 12487  1A75  2A86               	goto	u565lld
 12488  1A76  0AA2               	incf	___aodiv@divisor+2,f
 12489  1A77  1D03               	skipz
 12490  1A78  2A86               	goto	u565lld
 12491  1A79  0AA3               	incf	___aodiv@divisor+3,f
 12492  1A7A  1D03               	skipz
 12493  1A7B  2A86               	goto	u565lld
 12494  1A7C  0AA4               	incf	___aodiv@divisor+4,f
 12495  1A7D  1D03               	skipz
 12496  1A7E  2A86               	goto	u565lld
 12497  1A7F  0AA5               	incf	___aodiv@divisor+5,f
 12498  1A80  1D03               	skipz
 12499  1A81  2A86               	goto	u565lld
 12500  1A82  0AA6               	incf	___aodiv@divisor+6,f
 12501  1A83  1D03               	skipz
 12502  1A84  2A86               	goto	u565lld
 12503  1A85  0AA7               	incf	___aodiv@divisor+7,f
 12504  1A86                     u565lld:	
 12505  1A86  01F3               	clrf	___aodiv@sign
 12506  1A87  0AF3               	incf	___aodiv@sign,f
 12507  1A88                     l4457:	
 12508  1A88  3028               	movlw	low ___aodiv@dividend
 12509  1A89  0086               	movwf	6
 12510  1A8A  3000               	movlw	high ___aodiv@dividend
 12511  1A8B  0087               	movwf	7
 12512  1A8C  3F47               	moviw [7]fsr1
 12513  1A8D  00F1               	movwf	??___aodiv
 12514  1A8E  1FF1               	btfss	??___aodiv,7
 12515  1A8F  2AB3               	goto	l4463
 12516  1A90  0020               	movlb	0	; select bank0
 12517  1A91  09A8               	comf	___aodiv@dividend,f
 12518  1A92  09A9               	comf	___aodiv@dividend+1,f
 12519  1A93  09AA               	comf	___aodiv@dividend+2,f
 12520  1A94  09AB               	comf	___aodiv@dividend+3,f
 12521  1A95  09AC               	comf	___aodiv@dividend+4,f
 12522  1A96  09AD               	comf	___aodiv@dividend+5,f
 12523  1A97  09AE               	comf	___aodiv@dividend+6,f
 12524  1A98  09AF               	comf	___aodiv@dividend+7,f
 12525  1A99  0AA8               	incf	___aodiv@dividend,f
 12526  1A9A  1D03               	skipz
 12527  1A9B  2AAF               	goto	l4461
 12528  1A9C  0AA9               	incf	___aodiv@dividend+1,f
 12529  1A9D  1D03               	skipz
 12530  1A9E  2AAF               	goto	l4461
 12531  1A9F  0AAA               	incf	___aodiv@dividend+2,f
 12532  1AA0  1D03               	skipz
 12533  1AA1  2AAF               	goto	l4461
 12534  1AA2  0AAB               	incf	___aodiv@dividend+3,f
 12535  1AA3  1D03               	skipz
 12536  1AA4  2AAF               	goto	l4461
 12537  1AA5  0AAC               	incf	___aodiv@dividend+4,f
 12538  1AA6  1D03               	skipz
 12539  1AA7  2AAF               	goto	l4461
 12540  1AA8  0AAD               	incf	___aodiv@dividend+5,f
 12541  1AA9  1D03               	skipz
 12542  1AAA  2AAF               	goto	l4461
 12543  1AAB  0AAE               	incf	___aodiv@dividend+6,f
 12544  1AAC  1D03               	skipz
 12545  1AAD  2AAF               	goto	l4461
 12546  1AAE  0AAF               	incf	___aodiv@dividend+7,f
 12547  1AAF                     l4461:	
 12548  1AAF  3001               	movlw	1
 12549  1AB0  00F1               	movwf	??___aodiv
 12550  1AB1  0871               	movf	??___aodiv,w
 12551  1AB2  06F3               	xorwf	___aodiv@sign,f
 12552  1AB3                     l4463:	
 12553  1AB3  3074               	movlw	low ___aodiv@quotient
 12554  1AB4  0086               	movwf	6
 12555  1AB5  3000               	movlw	high ___aodiv@quotient
 12556  1AB6  0087               	movwf	7
 12557  1AB7  3008               	movlw	8
 12558  1AB8  00F1               	movwf	??___aodiv
 12559  1AB9  3000               	movlw	0
 12560  1ABA                     u5680:	
 12561  1ABA  001E               	movwi fsr1++
 12562  1ABB  0BF1               	decfsz	??___aodiv,f
 12563  1ABC  2ABA               	goto	u5680
 12564  1ABD  0020               	movlb	0	; select bank0
 12565  1ABE  0820               	movf	___aodiv@divisor,w
 12566  1ABF  0421               	iorwf	___aodiv@divisor+1,w
 12567  1AC0  0422               	iorwf	___aodiv@divisor+2,w
 12568  1AC1  0423               	iorwf	___aodiv@divisor+3,w
 12569  1AC2  0424               	iorwf	___aodiv@divisor+4,w
 12570  1AC3  0425               	iorwf	___aodiv@divisor+5,w
 12571  1AC4  0426               	iorwf	___aodiv@divisor+6,w
 12572  1AC5  0427               	iorwf	___aodiv@divisor+7,w
 12573  1AC6  1903               	skipnz
 12574  1AC7  2B1E               	goto	l4485
 12575  1AC8  01F2               	clrf	___aodiv@counter
 12576  1AC9  0AF2               	incf	___aodiv@counter,f
 12577  1ACA                     l4473:	
 12578  1ACA  1BA7               	btfsc	___aodiv@divisor+7,7
 12579  1ACB  2AD9               	goto	l4475
 12580  1ACC  35A0               	lslf	___aodiv@divisor,f
 12581  1ACD  0DA1               	rlf	___aodiv@divisor+1,f
 12582  1ACE  0DA2               	rlf	___aodiv@divisor+2,f
 12583  1ACF  0DA3               	rlf	___aodiv@divisor+3,f
 12584  1AD0  0DA4               	rlf	___aodiv@divisor+4,f
 12585  1AD1  0DA5               	rlf	___aodiv@divisor+5,f
 12586  1AD2  0DA6               	rlf	___aodiv@divisor+6,f
 12587  1AD3  0DA7               	rlf	___aodiv@divisor+7,f
 12588  1AD4  3001               	movlw	1
 12589  1AD5  00F1               	movwf	??___aodiv
 12590  1AD6  0871               	movf	??___aodiv,w
 12591  1AD7  07F2               	addwf	___aodiv@counter,f
 12592  1AD8  2ACA               	goto	l4473
 12593  1AD9                     l4475:	
 12594  1AD9  35F4               	lslf	___aodiv@quotient,f
 12595  1ADA  0DF5               	rlf	___aodiv@quotient+1,f
 12596  1ADB  0DF6               	rlf	___aodiv@quotient+2,f
 12597  1ADC  0DF7               	rlf	___aodiv@quotient+3,f
 12598  1ADD  0DF8               	rlf	___aodiv@quotient+4,f
 12599  1ADE  0DF9               	rlf	___aodiv@quotient+5,f
 12600  1ADF  0DFA               	rlf	___aodiv@quotient+6,f
 12601  1AE0  0DFB               	rlf	___aodiv@quotient+7,f
 12602  1AE1  0827               	movf	___aodiv@divisor+7,w
 12603  1AE2  022F               	subwf	___aodiv@dividend+7,w
 12604  1AE3  1D03               	skipz
 12605  1AE4  2AFF               	goto	u5715
 12606  1AE5  0826               	movf	___aodiv@divisor+6,w
 12607  1AE6  022E               	subwf	___aodiv@dividend+6,w
 12608  1AE7  1D03               	skipz
 12609  1AE8  2AFF               	goto	u5715
 12610  1AE9  0825               	movf	___aodiv@divisor+5,w
 12611  1AEA  022D               	subwf	___aodiv@dividend+5,w
 12612  1AEB  1D03               	skipz
 12613  1AEC  2AFF               	goto	u5715
 12614  1AED  0824               	movf	___aodiv@divisor+4,w
 12615  1AEE  022C               	subwf	___aodiv@dividend+4,w
 12616  1AEF  1D03               	skipz
 12617  1AF0  2AFF               	goto	u5715
 12618  1AF1  0823               	movf	___aodiv@divisor+3,w
 12619  1AF2  022B               	subwf	___aodiv@dividend+3,w
 12620  1AF3  1D03               	skipz
 12621  1AF4  2AFF               	goto	u5715
 12622  1AF5  0822               	movf	___aodiv@divisor+2,w
 12623  1AF6  022A               	subwf	___aodiv@dividend+2,w
 12624  1AF7  1D03               	skipz
 12625  1AF8  2AFF               	goto	u5715
 12626  1AF9  0821               	movf	___aodiv@divisor+1,w
 12627  1AFA  0229               	subwf	___aodiv@dividend+1,w
 12628  1AFB  1D03               	skipz
 12629  1AFC  2AFF               	goto	u5715
 12630  1AFD  0820               	movf	___aodiv@divisor,w
 12631  1AFE  0228               	subwf	___aodiv@dividend,w
 12632  1AFF                     u5715:	
 12633  1AFF  1C03               	skipc
 12634  1B00  2B12               	goto	l4483
 12635  1B01  0820               	movf	___aodiv@divisor,w
 12636  1B02  02A8               	subwf	___aodiv@dividend,f
 12637  1B03  0821               	movf	___aodiv@divisor+1,w
 12638  1B04  3BA9               	subwfb	___aodiv@dividend+1,f
 12639  1B05  0822               	movf	___aodiv@divisor+2,w
 12640  1B06  3BAA               	subwfb	___aodiv@dividend+2,f
 12641  1B07  0823               	movf	___aodiv@divisor+3,w
 12642  1B08  3BAB               	subwfb	___aodiv@dividend+3,f
 12643  1B09  0824               	movf	___aodiv@divisor+4,w
 12644  1B0A  3BAC               	subwfb	___aodiv@dividend+4,f
 12645  1B0B  0825               	movf	___aodiv@divisor+5,w
 12646  1B0C  3BAD               	subwfb	___aodiv@dividend+5,f
 12647  1B0D  0826               	movf	___aodiv@divisor+6,w
 12648  1B0E  3BAE               	subwfb	___aodiv@dividend+6,f
 12649  1B0F  0827               	movf	___aodiv@divisor+7,w
 12650  1B10  3BAF               	subwfb	___aodiv@dividend+7,f
 12651  1B11  1474               	bsf	___aodiv@quotient,0
 12652  1B12                     l4483:	
 12653  1B12  36A7               	lsrf	___aodiv@divisor+7,f
 12654  1B13  0CA6               	rrf	___aodiv@divisor+6,f
 12655  1B14  0CA5               	rrf	___aodiv@divisor+5,f
 12656  1B15  0CA4               	rrf	___aodiv@divisor+4,f
 12657  1B16  0CA3               	rrf	___aodiv@divisor+3,f
 12658  1B17  0CA2               	rrf	___aodiv@divisor+2,f
 12659  1B18  0CA1               	rrf	___aodiv@divisor+1,f
 12660  1B19  0CA0               	rrf	___aodiv@divisor,f
 12661  1B1A  3001               	movlw	1
 12662  1B1B  02F2               	subwf	___aodiv@counter,f
 12663  1B1C  1D03               	btfss	3,2
 12664  1B1D  2AD9               	goto	l4475
 12665  1B1E                     l4485:	
 12666  1B1E  0873               	movf	___aodiv@sign,w
 12667  1B1F  1903               	btfsc	3,2
 12668  1B20  2B3F               	goto	l919
 12669  1B21  09F4               	comf	___aodiv@quotient,f
 12670  1B22  09F5               	comf	___aodiv@quotient+1,f
 12671  1B23  09F6               	comf	___aodiv@quotient+2,f
 12672  1B24  09F7               	comf	___aodiv@quotient+3,f
 12673  1B25  09F8               	comf	___aodiv@quotient+4,f
 12674  1B26  09F9               	comf	___aodiv@quotient+5,f
 12675  1B27  09FA               	comf	___aodiv@quotient+6,f
 12676  1B28  09FB               	comf	___aodiv@quotient+7,f
 12677  1B29  0AF4               	incf	___aodiv@quotient,f
 12678  1B2A  1D03               	skipz
 12679  1B2B  2B3F               	goto	l919
 12680  1B2C  0AF5               	incf	___aodiv@quotient+1,f
 12681  1B2D  1D03               	skipz
 12682  1B2E  2B3F               	goto	l919
 12683  1B2F  0AF6               	incf	___aodiv@quotient+2,f
 12684  1B30  1D03               	skipz
 12685  1B31  2B3F               	goto	l919
 12686  1B32  0AF7               	incf	___aodiv@quotient+3,f
 12687  1B33  1D03               	skipz
 12688  1B34  2B3F               	goto	l919
 12689  1B35  0AF8               	incf	___aodiv@quotient+4,f
 12690  1B36  1D03               	skipz
 12691  1B37  2B3F               	goto	l919
 12692  1B38  0AF9               	incf	___aodiv@quotient+5,f
 12693  1B39  1D03               	skipz
 12694  1B3A  2B3F               	goto	l919
 12695  1B3B  0AFA               	incf	___aodiv@quotient+6,f
 12696  1B3C  1D03               	skipz
 12697  1B3D  2B3F               	goto	l919
 12698  1B3E  0AFB               	incf	___aodiv@quotient+7,f
 12699  1B3F                     l919:	
 12700  1B3F  0874               	movf	___aodiv@quotient,w
 12701  1B40  0020               	movlb	0	; select bank0
 12702  1B41  00A0               	movwf	?___aodiv
 12703  1B42  0875               	movf	___aodiv@quotient+1,w
 12704  1B43  00A1               	movwf	?___aodiv+1
 12705  1B44  0876               	movf	___aodiv@quotient+2,w
 12706  1B45  00A2               	movwf	?___aodiv+2
 12707  1B46  0877               	movf	___aodiv@quotient+3,w
 12708  1B47  00A3               	movwf	?___aodiv+3
 12709  1B48  0878               	movf	___aodiv@quotient+4,w
 12710  1B49  00A4               	movwf	?___aodiv+4
 12711  1B4A  0879               	movf	___aodiv@quotient+5,w
 12712  1B4B  00A5               	movwf	?___aodiv+5
 12713  1B4C  087A               	movf	___aodiv@quotient+6,w
 12714  1B4D  00A6               	movwf	?___aodiv+6
 12715  1B4E  087B               	movf	___aodiv@quotient+7,w
 12716  1B4F  00A7               	movwf	?___aodiv+7
 12717  1B50  0008               	return
 12718  1B51                     __end_of___aodiv:	
 12719                           
 12720                           	psect	text32
 12721  2944                     __ptext32:	
 12722 ;; *************** function _ctoa *****************
 12723 ;; Defined at:
 12724 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 12727 ;;		 -> vsnprintf@f(6), 
 12728 ;;  c               1   18[BANK0 ] unsigned char 
 12729 ;; Auto vars:     Size  Location     Type
 12730 ;;  w               2   20[BANK0 ] int 
 12731 ;;  l               2    0        int 
 12732 ;; Return value:  Size  Location     Type
 12733 ;;                  2   16[BANK0 ] int 
 12734 ;; Registers used:
 12735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12736 ;; Tracked objects:
 12737 ;;		On entry : 0/0
 12738 ;;		On exit  : 0/0
 12739 ;;		Unchanged: 0/0
 12740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12741 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12743 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12744 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12745 ;;Total ram usage:        6 bytes
 12746 ;; Hardware stack levels used:    1
 12747 ;; Hardware stack levels required when called:    5
 12748 ;; This function calls:
 12749 ;;		_pad
 12750 ;; This function is called by:
 12751 ;;		_vfpfcnvrt
 12752 ;; This function uses a non-reentrant model
 12753 ;;
 12754                           
 12755                           
 12756                           ;psect for function _ctoa
 12757  2944                     _ctoa:	
 12758                           
 12759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 12760                           
 12761                           ;incstack = 0
 12762                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12763  2944  0023               	movlb	3	; select bank3
 12764  2945  083E               	movf	_width^(0+384),w
 12765  2946  043F               	iorwf	(_width+1)^(0+384),w
 12766  2947  1D03               	btfss	3,2
 12767  2948  2951               	goto	l6879
 12768  2949  083F               	movf	(_width+1)^(0+384),w
 12769  294A  0020               	movlb	0	; select bank0
 12770  294B  00B5               	movwf	ctoa@w+1
 12771  294C  0023               	movlb	3	; select bank3
 12772  294D  083E               	movf	_width^(0+384),w
 12773  294E  0020               	movlb	0	; select bank0
 12774  294F  00B4               	movwf	ctoa@w
 12775  2950  295A               	goto	l6881
 12776  2951                     l6879:	
 12777  2951  083E               	movf	_width^(0+384),w
 12778  2952  3EFF               	addlw	255
 12779  2953  0020               	movlb	0	; select bank0
 12780  2954  00B4               	movwf	ctoa@w
 12781  2955  30FF               	movlw	255
 12782  2956  0023               	movlb	3	; select bank3
 12783  2957  3D3F               	addwfc	(_width+1)^(0+384),w
 12784  2958  0020               	movlb	0	; select bank0
 12785  2959  00B5               	movwf	ctoa@w+1
 12786  295A                     l6881:	
 12787                           
 12788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 12789  295A  0832               	movf	ctoa@c,w
 12790  295B  00B3               	movwf	??_ctoa
 12791  295C  0833               	movf	??_ctoa,w
 12792  295D  0024               	movlb	4	; select bank4
 12793  295E  00A0               	movwf	_dbuf^(0+512)
 12794                           
 12795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 12796  295F  01A1               	clrf	(_dbuf^(0+512)+1)
 12797                           
 12798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 12799  2960  0020               	movlb	0	; select bank0
 12800  2961  0831               	movf	ctoa@fp+1,w
 12801  2962  00A7               	movwf	pad@fp+1
 12802  2963  0830               	movf	ctoa@fp,w
 12803  2964  00A6               	movwf	pad@fp
 12804  2965  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
 12805  2966  00B3               	movwf	??_ctoa
 12806  2967  0833               	movf	??_ctoa,w
 12807  2968  00A8               	movwf	pad@buf
 12808  2969  0835               	movf	ctoa@w+1,w
 12809  296A  00AA               	movwf	pad@p+1
 12810  296B  0834               	movf	ctoa@w,w
 12811  296C  00A9               	movwf	pad@p
 12812  296D  31AB  2302         	fcall	_pad
 12813  296F  0020               	movlb	0	; select bank0
 12814  2970  0827               	movf	?_pad+1,w
 12815  2971  00B1               	movwf	?_ctoa+1
 12816  2972  0826               	movf	?_pad,w
 12817  2973  00B0               	movwf	?_ctoa
 12818  2974  0008               	return
 12819  2975                     __end_of_ctoa:	
 12820                           
 12821                           	psect	text33
 12822  2B02                     __ptext33:	
 12823 ;; *************** function _pad *****************
 12824 ;; Defined at:
 12825 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12826 ;; Parameters:    Size  Location     Type
 12827 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 12828 ;;		 -> vsnprintf@f(6), 
 12829 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 12830 ;;		 -> dbuf(80), 
 12831 ;;  p               2    9[BANK0 ] int 
 12832 ;; Auto vars:     Size  Location     Type
 12833 ;;  w               2   14[BANK0 ] int 
 12834 ;;  i               2   12[BANK0 ] int 
 12835 ;; Return value:  Size  Location     Type
 12836 ;;                  2    6[BANK0 ] int 
 12837 ;; Registers used:
 12838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12839 ;; Tracked objects:
 12840 ;;		On entry : 0/0
 12841 ;;		On exit  : 0/0
 12842 ;;		Unchanged: 0/0
 12843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12844 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12845 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12846 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12847 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12848 ;;Total ram usage:       10 bytes
 12849 ;; Hardware stack levels used:    1
 12850 ;; Hardware stack levels required when called:    4
 12851 ;; This function calls:
 12852 ;;		_fputc
 12853 ;;		_fputs
 12854 ;;		_strlen
 12855 ;; This function is called by:
 12856 ;;		_ctoa
 12857 ;;		_dtoa
 12858 ;;		_efgtoa
 12859 ;;		_otoa
 12860 ;;		_utoa
 12861 ;;		_xtoa
 12862 ;; This function uses a non-reentrant model
 12863 ;;
 12864                           
 12865                           
 12866                           ;psect for function _pad
 12867  2B02                     _pad:	
 12868                           
 12869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 12870                           
 12871                           ;incstack = 0
 12872                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12873  2B02  0023               	movlb	3	; select bank3
 12874  2B03  1C42               	btfss	_flags^(0+384),0
 12875  2B04  2B0E               	goto	l6819
 12876                           
 12877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 12878  2B05  0020               	movlb	0	; select bank0
 12879  2B06  0827               	movf	pad@fp+1,w
 12880  2B07  00FB               	movwf	fputs@fp+1
 12881  2B08  0826               	movf	pad@fp,w
 12882  2B09  00FA               	movwf	fputs@fp
 12883  2B0A  0828               	movf	pad@buf,w
 12884  2B0B  31A8  20C8  31AB   	fcall	_fputs
 12885  2B0E                     l6819:	
 12886                           
 12887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 12888  2B0E  0020               	movlb	0	; select bank0
 12889  2B0F  1BAA               	btfsc	pad@p+1,7
 12890  2B10  2B16               	goto	l6823
 12891  2B11  082A               	movf	pad@p+1,w
 12892  2B12  00AF               	movwf	pad@w+1
 12893  2B13  0829               	movf	pad@p,w
 12894  2B14  00AE               	movwf	pad@w
 12895  2B15  2B18               	goto	l501
 12896  2B16                     l6823:	
 12897  2B16  01AE               	clrf	pad@w
 12898  2B17  01AF               	clrf	pad@w+1
 12899  2B18                     l501:	
 12900                           
 12901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 12902  2B18  01AC               	clrf	pad@i
 12903  2B19  01AD               	clrf	pad@i+1
 12904  2B1A                     l6829:	
 12905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12906                           
 12907                           
 12908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 12909  2B1A  082D               	movf	pad@i+1,w
 12910  2B1B  3A80               	xorlw	128
 12911  2B1C  00AB               	movwf	??_pad
 12912  2B1D  082F               	movf	pad@w+1,w
 12913  2B1E  3A80               	xorlw	128
 12914  2B1F  022B               	subwf	??_pad,w
 12915  2B20  1D03               	skipz
 12916  2B21  2B24               	goto	u9825
 12917  2B22  082E               	movf	pad@w,w
 12918  2B23  022C               	subwf	pad@i,w
 12919  2B24                     u9825:	
 12920  2B24  1803               	btfsc	3,0
 12921  2B25  2B38               	goto	l504
 12922                           
 12923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 12924  2B26  3020               	movlw	32
 12925  2B27  00F1               	movwf	fputc@c
 12926  2B28  3000               	movlw	0
 12927  2B29  00F2               	movwf	fputc@c+1
 12928  2B2A  0020               	movlb	0	; select bank0
 12929  2B2B  0827               	movf	pad@fp+1,w
 12930  2B2C  00F4               	movwf	fputc@fp+1
 12931  2B2D  0826               	movf	pad@fp,w
 12932  2B2E  00F3               	movwf	fputc@fp
 12933  2B2F  3190  200D  31AB   	fcall	_fputc
 12934                           
 12935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 12936  2B32  3001               	movlw	1
 12937  2B33  0020               	movlb	0	; select bank0
 12938  2B34  07AC               	addwf	pad@i,f
 12939  2B35  3000               	movlw	0
 12940  2B36  3DAD               	addwfc	pad@i+1,f
 12941  2B37  2B1A               	goto	l6829
 12942  2B38                     l504:	
 12943                           
 12944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 12945  2B38  0023               	movlb	3	; select bank3
 12946  2B39  1842               	btfsc	_flags^(0+384),0
 12947  2B3A  2B44               	goto	l6833
 12948                           
 12949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 12950  2B3B  0020               	movlb	0	; select bank0
 12951  2B3C  0827               	movf	pad@fp+1,w
 12952  2B3D  00FB               	movwf	fputs@fp+1
 12953  2B3E  0826               	movf	pad@fp,w
 12954  2B3F  00FA               	movwf	fputs@fp
 12955  2B40  0828               	movf	pad@buf,w
 12956  2B41  31A8  20C8  31AB   	fcall	_fputs
 12957  2B44                     l6833:	
 12958                           
 12959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 12960  2B44  0020               	movlb	0	; select bank0
 12961  2B45  0828               	movf	pad@buf,w
 12962  2B46  00F1               	movwf	strlen@s
 12963  2B47  3002               	movlw	2
 12964  2B48  00F2               	movwf	strlen@s+1
 12965  2B49  31B6  26F8         	fcall	_strlen
 12966  2B4B  0020               	movlb	0	; select bank0
 12967  2B4C  082E               	movf	pad@w,w
 12968  2B4D  0771               	addwf	?_strlen,w
 12969  2B4E  00A6               	movwf	?_pad
 12970  2B4F  082F               	movf	pad@w+1,w
 12971  2B50  3D72               	addwfc	?_strlen+1,w
 12972  2B51  00A7               	movwf	?_pad+1
 12973  2B52  0008               	return
 12974  2B53                     __end_of_pad:	
 12975                           
 12976                           	psect	text34
 12977  36F8                     __ptext34:	
 12978 ;; *************** function _strlen *****************
 12979 ;; Defined at:
 12980 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 12981 ;; Parameters:    Size  Location     Type
 12982 ;;  s               2    1[COMMON] PTR const unsigned char 
 12983 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 12984 ;; Auto vars:     Size  Location     Type
 12985 ;;  a               2    3[COMMON] PTR const unsigned char 
 12986 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), 
 12987 ;; Return value:  Size  Location     Type
 12988 ;;                  2    1[COMMON] unsigned int 
 12989 ;; Registers used:
 12990 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12991 ;; Tracked objects:
 12992 ;;		On entry : 0/0
 12993 ;;		On exit  : 0/0
 12994 ;;		Unchanged: 0/0
 12995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13000 ;;Total ram usage:        4 bytes
 13001 ;; Hardware stack levels used:    1
 13002 ;; Hardware stack levels required when called:    1
 13003 ;; This function calls:
 13004 ;;		Nothing
 13005 ;; This function is called by:
 13006 ;;		_pad
 13007 ;;		_stoa
 13008 ;; This function uses a non-reentrant model
 13009 ;;
 13010                           
 13011                           
 13012                           ;psect for function _strlen
 13013  36F8                     _strlen:	
 13014                           
 13015                           ;incstack = 0
 13016                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 13017  36F8  0872               	movf	strlen@s+1,w
 13018  36F9  00F4               	movwf	strlen@a+1
 13019  36FA  0871               	movf	strlen@s,w
 13020  36FB  00F3               	movwf	strlen@a
 13021  36FC                     l4103:	
 13022  36FC  0871               	movf	strlen@s,w
 13023  36FD  0086               	movwf	6
 13024  36FE  0872               	movf	strlen@s+1,w
 13025  36FF  0087               	movwf	7
 13026  3700  0801               	movf	1,w
 13027  3701  1903               	btfsc	3,2
 13028  3702  2F08               	goto	l4105
 13029  3703  3001               	movlw	1
 13030  3704  07F1               	addwf	strlen@s,f
 13031  3705  3000               	movlw	0
 13032  3706  3DF2               	addwfc	strlen@s+1,f
 13033  3707  2EFC               	goto	l4103
 13034  3708                     l4105:	
 13035  3708  0873               	movf	strlen@a,w
 13036  3709  0271               	subwf	strlen@s,w
 13037  370A  00F1               	movwf	?_strlen
 13038  370B  0874               	movf	strlen@a+1,w
 13039  370C  3B72               	subwfb	strlen@s+1,w
 13040  370D  00F2               	movwf	?_strlen+1
 13041  370E  0008               	return
 13042  370F                     __end_of_strlen:	
 13043                           
 13044                           	psect	text35
 13045  28C8                     __ptext35:	
 13046 ;; *************** function _fputs *****************
 13047 ;; Defined at:
 13048 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 13049 ;; Parameters:    Size  Location     Type
 13050 ;;  s               1    wreg     PTR const unsigned char 
 13051 ;;		 -> dbuf(80), 
 13052 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 13053 ;;		 -> vsnprintf@f(6), 
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 13056 ;;		 -> dbuf(80), 
 13057 ;;  i               2    3[BANK0 ] int 
 13058 ;;  c               1    2[BANK0 ] unsigned char 
 13059 ;; Return value:  Size  Location     Type
 13060 ;;                  2   10[COMMON] int 
 13061 ;; Registers used:
 13062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13063 ;; Tracked objects:
 13064 ;;		On entry : 0/0
 13065 ;;		On exit  : 0/0
 13066 ;;		Unchanged: 0/0
 13067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13069 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13070 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13071 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13072 ;;Total ram usage:        8 bytes
 13073 ;; Hardware stack levels used:    1
 13074 ;; Hardware stack levels required when called:    3
 13075 ;; This function calls:
 13076 ;;		_fputc
 13077 ;; This function is called by:
 13078 ;;		_pad
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082                           
 13083                           ;psect for function _fputs
 13084  28C8                     _fputs:	
 13085                           
 13086                           ;incstack = 0
 13087                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13088                           ;fputs@s stored from wreg
 13089  28C8  0020               	movlb	0	; select bank0
 13090  28C9  00A5               	movwf	fputs@s
 13091  28CA  01A3               	clrf	fputs@i
 13092  28CB  01A4               	clrf	fputs@i+1
 13093  28CC                     l4097:	
 13094  28CC  0823               	movf	fputs@i,w
 13095  28CD  0725               	addwf	fputs@s,w
 13096  28CE  00A0               	movwf	??_fputs
 13097  28CF  0820               	movf	??_fputs,w
 13098  28D0  0086               	movwf	6
 13099  28D1  3002               	movlw	2	; select bank4/5
 13100  28D2  0087               	movwf	7
 13101  28D3  0801               	movf	1,w
 13102  28D4  00A1               	movwf	??_fputs+1
 13103  28D5  0821               	movf	??_fputs+1,w
 13104  28D6  00A2               	movwf	fputs@c
 13105  28D7  0822               	movf	fputs@c,w
 13106  28D8  1903               	btfsc	3,2
 13107  28D9  0008               	return
 13108  28DA  0822               	movf	fputs@c,w
 13109  28DB  00A0               	movwf	??_fputs
 13110  28DC  01A1               	clrf	??_fputs+1
 13111  28DD  0820               	movf	??_fputs,w
 13112  28DE  00F1               	movwf	fputc@c
 13113  28DF  0821               	movf	??_fputs+1,w
 13114  28E0  00F2               	movwf	fputc@c+1
 13115  28E1  087B               	movf	fputs@fp+1,w
 13116  28E2  00F4               	movwf	fputc@fp+1
 13117  28E3  087A               	movf	fputs@fp,w
 13118  28E4  00F3               	movwf	fputc@fp
 13119  28E5  3190  200D  31A8   	fcall	_fputc
 13120  28E8  3001               	movlw	1
 13121  28E9  0020               	movlb	0	; select bank0
 13122  28EA  07A3               	addwf	fputs@i,f
 13123  28EB  3000               	movlw	0
 13124  28EC  3DA4               	addwfc	fputs@i+1,f
 13125  28ED  28CC               	goto	l4097
 13126  28EE                     __end_of_fputs:	
 13127                           
 13128                           	psect	text36
 13129  100D                     __ptext36:	
 13130 ;; *************** function _fputc *****************
 13131 ;; Defined at:
 13132 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;  c               2    1[COMMON] int 
 13135 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 13136 ;;		 -> vsnprintf@f(6), 
 13137 ;; Auto vars:     Size  Location     Type
 13138 ;;		None
 13139 ;; Return value:  Size  Location     Type
 13140 ;;                  2    1[COMMON] int 
 13141 ;; Registers used:
 13142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13143 ;; Tracked objects:
 13144 ;;		On entry : 0/0
 13145 ;;		On exit  : 0/0
 13146 ;;		Unchanged: 0/0
 13147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13148 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13150 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13151 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13152 ;;Total ram usage:        9 bytes
 13153 ;; Hardware stack levels used:    1
 13154 ;; Hardware stack levels required when called:    2
 13155 ;; This function calls:
 13156 ;;		_putch
 13157 ;; This function is called by:
 13158 ;;		_pad
 13159 ;;		_stoa
 13160 ;;		_vfpfcnvrt
 13161 ;;		_fputs
 13162 ;; This function uses a non-reentrant model
 13163 ;;
 13164                           
 13165                           
 13166                           ;psect for function _fputc
 13167  100D                     _fputc:	
 13168                           
 13169                           ;incstack = 0
 13170                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13171  100D  0873               	movf	fputc@fp,w
 13172  100E  0474               	iorwf	fputc@fp+1,w
 13173  100F  1903               	btfsc	3,2
 13174  1010  2815               	goto	l4079
 13175  1011  0873               	movf	fputc@fp,w
 13176  1012  0474               	iorwf	fputc@fp+1,w
 13177  1013  1D03               	btfss	3,2
 13178  1014  2819               	goto	l4081
 13179  1015                     l4079:	
 13180  1015  0871               	movf	fputc@c,w
 13181  1016  3180  2003         	fcall	_putch
 13182  1018  0008               	return
 13183  1019                     l4081:	
 13184  1019  0873               	movf	fputc@fp,w
 13185  101A  0086               	movwf	6
 13186  101B  0874               	movf	fputc@fp+1,w
 13187  101C  0087               	movwf	7
 13188  101D  3144               	addfsr 1,4
 13189  101E  0016               	moviw fsr1++
 13190  101F  0401               	iorwf	1,w
 13191  1020  1903               	btfsc	3,2
 13192  1021  2840               	goto	l4085
 13193  1022  0873               	movf	fputc@fp,w
 13194  1023  0086               	movwf	6
 13195  1024  0874               	movf	fputc@fp+1,w
 13196  1025  0087               	movwf	7
 13197  1026  3144               	addfsr 1,4
 13198  1027  3F40               	moviw [0]fsr1
 13199  1028  00F5               	movwf	??_fputc
 13200  1029  3F41               	moviw [1]fsr1
 13201  102A  00F6               	movwf	??_fputc+1
 13202  102B  0873               	movf	fputc@fp,w
 13203  102C  0086               	movwf	6
 13204  102D  0874               	movf	fputc@fp+1,w
 13205  102E  0087               	movwf	7
 13206  102F  3142               	addfsr 1,2
 13207  1030  3F40               	moviw [0]fsr1
 13208  1031  00F7               	movwf	??_fputc+2
 13209  1032  3F41               	moviw [1]fsr1
 13210  1033  00F8               	movwf	??_fputc+3
 13211  1034  0878               	movf	??_fputc+3,w
 13212  1035  3A80               	xorlw	128
 13213  1036  00F9               	movwf	??_fputc+4
 13214  1037  0876               	movf	??_fputc+1,w
 13215  1038  3A80               	xorlw	128
 13216  1039  0279               	subwf	??_fputc+4,w
 13217  103A  1D03               	skipz
 13218  103B  283E               	goto	u4725
 13219  103C  0875               	movf	??_fputc,w
 13220  103D  0277               	subwf	??_fputc+2,w
 13221  103E                     u4725:	
 13222  103E  1803               	skipnc
 13223  103F  0008               	return
 13224  1040                     l4085:	
 13225  1040  0873               	movf	fputc@fp,w
 13226  1041  0086               	movwf	6
 13227  1042  0874               	movf	fputc@fp+1,w
 13228  1043  0087               	movwf	7
 13229  1044  3142               	addfsr 1,2
 13230  1045  0873               	movf	fputc@fp,w
 13231  1046  0084               	movwf	4
 13232  1047  0874               	movf	fputc@fp+1,w
 13233  1048  0085               	movwf	5
 13234  1049  3F40               	moviw [0]fsr1
 13235  104A  0700               	addwf	0,w
 13236  104B  00F5               	movwf	??_fputc
 13237  104C  3101               	addfsr 0,1
 13238  104D  3F41               	moviw [1]fsr1
 13239  104E  3D00               	addwfc	0,w
 13240  104F  00F6               	movwf	??_fputc+1
 13241  1050  0875               	movf	??_fputc,w
 13242  1051  0086               	movwf	6
 13243  1052  0876               	movf	??_fputc+1,w
 13244  1053  0087               	movwf	7
 13245  1054  0871               	movf	fputc@c,w
 13246  1055  0081               	movwf	1
 13247  1056  0873               	movf	fputc@fp,w
 13248  1057  0086               	movwf	6
 13249  1058  0874               	movf	fputc@fp+1,w
 13250  1059  0087               	movwf	7
 13251  105A  3142               	addfsr 1,2
 13252  105B  3001               	movlw	1
 13253  105C  0781               	addwf	1,f
 13254  105D  3141               	addfsr 1,1
 13255  105E  1803               	skipnc
 13256  105F  0A81               	incf	1,f
 13257  1060  0008               	return
 13258  1061                     __end_of_fputc:	
 13259                           
 13260                           	psect	text37
 13261  0003                     __ptext37:	
 13262 ;; *************** function _putch *****************
 13263 ;; Defined at:
 13264 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 13265 ;; Parameters:    Size  Location     Type
 13266 ;;  c               1    wreg     unsigned char 
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;  c               1    0[COMMON] unsigned char 
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  1    wreg      void 
 13271 ;; Registers used:
 13272 ;;		wreg
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13282 ;;Total ram usage:        0 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:    1
 13285 ;; This function calls:
 13286 ;;		Nothing
 13287 ;; This function is called by:
 13288 ;;		_fputc
 13289 ;; This function uses a non-reentrant model
 13290 ;;
 13291                           
 13292                           
 13293                           ;psect for function _putch
 13294  0003                     _putch:	
 13295                           
 13296                           ;incstack = 0
 13297                           ; Regs used in _putch: [wreg]
 13298  0003  0008               	return
 13299  0004                     __end_of_putch:	
 13300                           
 13301                           	psect	text38
 13302  205E                     __ptext38:	
 13303 ;; *************** function _atoi *****************
 13304 ;; Defined at:
 13305 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 13306 ;; Parameters:    Size  Location     Type
 13307 ;;  s               2    7[COMMON] PTR const unsigned char 
 13308 ;;		 -> STR_7(44), STR_6(42), STR_3(43), 
 13309 ;; Auto vars:     Size  Location     Type
 13310 ;;  n               2   11[BANK0 ] int 
 13311 ;;  neg             2    4[BANK0 ] int 
 13312 ;; Return value:  Size  Location     Type
 13313 ;;                  2    7[COMMON] int 
 13314 ;; Registers used:
 13315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13316 ;; Tracked objects:
 13317 ;;		On entry : 0/0
 13318 ;;		On exit  : 0/0
 13319 ;;		Unchanged: 0/0
 13320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13321 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13322 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13323 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13324 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13325 ;;Total ram usage:       15 bytes
 13326 ;; Hardware stack levels used:    1
 13327 ;; Hardware stack levels required when called:    2
 13328 ;; This function calls:
 13329 ;;		___wmul
 13330 ;;		_isdigit
 13331 ;;		_isspace
 13332 ;; This function is called by:
 13333 ;;		_vfpfcnvrt
 13334 ;; This function uses a non-reentrant model
 13335 ;;
 13336                           
 13337                           
 13338                           ;psect for function _atoi
 13339  205E                     _atoi:	
 13340                           
 13341                           ;incstack = 0
 13342                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13343  205E  0020               	movlb	0	; select bank0
 13344  205F  01AB               	clrf	atoi@n
 13345  2060  01AC               	clrf	atoi@n+1
 13346  2061  01A4               	clrf	atoi@neg
 13347  2062  01A5               	clrf	atoi@neg+1
 13348  2063                     l7437:	
 13349  2063  01AA               	clrf	_atoi$1471
 13350  2064  0AAA               	incf	_atoi$1471,f
 13351  2065  0877               	movf	atoi@s,w
 13352  2066  0084               	movwf	4
 13353  2067  0878               	movf	atoi@s+1,w
 13354  2068  0085               	movwf	5
 13355  2069  0012               	moviw fsr0++
 13356  206A  3A20               	xorlw	32
 13357  206B  1903               	btfsc	3,2
 13358  206C  287F               	goto	l7445
 13359  206D  0877               	movf	atoi@s,w
 13360  206E  0084               	movwf	4
 13361  206F  0878               	movf	atoi@s+1,w
 13362  2070  0085               	movwf	5
 13363  2071  0800               	movf	0,w	;code access
 13364  2072  3EF7               	addlw	247
 13365  2073  00A0               	movwf	??_atoi
 13366  2074  30FF               	movlw	255
 13367  2075  1803               	skipnc
 13368  2076  3000               	movlw	0
 13369  2077  00A1               	movwf	??_atoi+1
 13370  2078  3000               	movlw	0
 13371  2079  0221               	subwf	??_atoi+1,w
 13372  207A  3005               	movlw	5
 13373  207B  1903               	skipnz
 13374  207C  0220               	subwf	??_atoi,w
 13375  207D  1803               	btfsc	3,0
 13376  207E  01AA               	clrf	_atoi$1471
 13377  207F                     l7445:	
 13378  207F  082A               	movf	_atoi$1471,w
 13379  2080  00A0               	movwf	??_atoi
 13380  2081  01A1               	clrf	??_atoi+1
 13381  2082  0820               	movf	??_atoi,w
 13382  2083  00A6               	movwf	_atoi$1470
 13383  2084  0821               	movf	??_atoi+1,w
 13384  2085  00A7               	movwf	_atoi$1470+1
 13385  2086  0826               	movf	_atoi$1470,w
 13386  2087  0427               	iorwf	_atoi$1470+1,w
 13387  2088  1903               	btfsc	3,2
 13388  2089  2894               	goto	l7453
 13389  208A  3001               	movlw	1
 13390  208B  07F7               	addwf	atoi@s,f
 13391  208C  3000               	movlw	0
 13392  208D  3DF8               	addwfc	atoi@s+1,f
 13393  208E  2863               	goto	l7437
 13394  208F                     l7451:	
 13395  208F  3001               	movlw	1
 13396  2090  00A4               	movwf	atoi@neg
 13397  2091  3000               	movlw	0
 13398  2092  00A5               	movwf	atoi@neg+1
 13399  2093  28C7               	goto	l1305
 13400  2094                     l7453:	
 13401  2094  0877               	movf	atoi@s,w
 13402  2095  0084               	movwf	4
 13403  2096  0878               	movf	atoi@s+1,w
 13404  2097  0085               	movwf	5
 13405  2098  0800               	movf	0,w	;code access
 13406  2099  00A0               	movwf	??_atoi
 13407  209A  01A1               	clrf	??_atoi+1
 13408                           
 13409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13410                           ; Switch size 1, requested type "simple"
 13411                           ; Number of cases is 1, Range of values is 0 to 0
 13412                           ; switch strategies available:
 13413                           ; Name         Instructions Cycles
 13414                           ; simple_byte            4     3 (average)
 13415                           ; direct_byte            8     6 (fixed)
 13416                           ; jumptable            260     6 (fixed)
 13417                           ;	Chosen strategy is simple_byte
 13418  209B  0821               	movf	??_atoi+1,w
 13419  209C  3A00               	xorlw	0	; case 0
 13420  209D  1903               	skipnz
 13421  209E  28A0               	goto	l8237
 13422  209F  28CB               	goto	l7459
 13423  20A0                     l8237:	
 13424                           
 13425                           ; Switch size 1, requested type "simple"
 13426                           ; Number of cases is 2, Range of values is 43 to 45
 13427                           ; switch strategies available:
 13428                           ; Name         Instructions Cycles
 13429                           ; simple_byte            7     4 (average)
 13430                           ; direct_byte           15     9 (fixed)
 13431                           ; jumptable            263     9 (fixed)
 13432                           ;	Chosen strategy is simple_byte
 13433  20A0  0820               	movf	??_atoi,w
 13434  20A1  3A2B               	xorlw	43	; case 43
 13435  20A2  1903               	skipnz
 13436  20A3  28C7               	goto	l1305
 13437  20A4  3A06               	xorlw	6	; case 45
 13438  20A5  1903               	skipnz
 13439  20A6  288F               	goto	l7451
 13440  20A7  28CB               	goto	l7459
 13441  20A8                     l7455:	
 13442  20A8  0877               	movf	atoi@s,w
 13443  20A9  0084               	movwf	4
 13444  20AA  0878               	movf	atoi@s+1,w
 13445  20AB  0085               	movwf	5
 13446  20AC  0800               	movf	0,w	;code access
 13447  20AD  00A0               	movwf	??_atoi
 13448  20AE  082C               	movf	atoi@n+1,w
 13449  20AF  00F2               	movwf	___wmul@multiplier+1
 13450  20B0  082B               	movf	atoi@n,w
 13451  20B1  00F1               	movwf	___wmul@multiplier
 13452  20B2  300A               	movlw	10
 13453  20B3  00F3               	movwf	___wmul@multiplicand
 13454  20B4  3000               	movlw	0
 13455  20B5  00F4               	movwf	___wmul@multiplicand+1
 13456  20B6  31B7  276F  31A0   	fcall	___wmul
 13457  20B9  0872               	movf	?___wmul+1,w
 13458  20BA  0020               	movlb	0	; select bank0
 13459  20BB  00A2               	movwf	??_atoi+2
 13460  20BC  0820               	movf	??_atoi,w
 13461  20BD  0271               	subwf	?___wmul,w
 13462  20BE  00A1               	movwf	??_atoi+1
 13463  20BF  1C03               	skipc
 13464  20C0  03A2               	decf	??_atoi+2,f
 13465  20C1  0821               	movf	??_atoi+1,w
 13466  20C2  3E30               	addlw	48
 13467  20C3  00AB               	movwf	atoi@n
 13468  20C4  3000               	movlw	0
 13469  20C5  3D22               	addwfc	??_atoi+2,w
 13470  20C6  00AC               	movwf	atoi@n+1
 13471  20C7                     l1305:	
 13472  20C7  3001               	movlw	1
 13473  20C8  07F7               	addwf	atoi@s,f
 13474  20C9  3000               	movlw	0
 13475  20CA  3DF8               	addwfc	atoi@s+1,f
 13476  20CB                     l7459:	
 13477  20CB  0877               	movf	atoi@s,w
 13478  20CC  0084               	movwf	4
 13479  20CD  0878               	movf	atoi@s+1,w
 13480  20CE  0085               	movwf	5
 13481  20CF  0800               	movf	0,w	;code access
 13482  20D0  3ED0               	addlw	208
 13483  20D1  00A0               	movwf	??_atoi
 13484  20D2  30FF               	movlw	255
 13485  20D3  1803               	skipnc
 13486  20D4  3000               	movlw	0
 13487  20D5  00A1               	movwf	??_atoi+1
 13488  20D6  3000               	movlw	0
 13489  20D7  0221               	subwf	??_atoi+1,w
 13490  20D8  300A               	movlw	10
 13491  20D9  1903               	skipnz
 13492  20DA  0220               	subwf	??_atoi,w
 13493  20DB  1803               	btfsc	3,0
 13494  20DC  28DF               	goto	u11080
 13495  20DD  3001               	movlw	1
 13496  20DE  28E0               	goto	u11090
 13497  20DF                     u11080:	
 13498  20DF  3000               	movlw	0
 13499  20E0                     u11090:	
 13500  20E0  00A2               	movwf	??_atoi+2
 13501  20E1  01A3               	clrf	??_atoi+3
 13502  20E2  0822               	movf	??_atoi+2,w
 13503  20E3  00A8               	movwf	_atoi$1472
 13504  20E4  0823               	movf	??_atoi+3,w
 13505  20E5  00A9               	movwf	_atoi$1472+1
 13506  20E6  0828               	movf	_atoi$1472,w
 13507  20E7  0429               	iorwf	_atoi$1472+1,w
 13508  20E8  1D03               	btfss	3,2
 13509  20E9  28A8               	goto	l7455
 13510  20EA  0824               	movf	atoi@neg,w
 13511  20EB  0425               	iorwf	atoi@neg+1,w
 13512  20EC  1D03               	btfss	3,2
 13513  20ED  28FA               	goto	l7469
 13514  20EE  092B               	comf	atoi@n,w
 13515  20EF  00A0               	movwf	??_atoi
 13516  20F0  092C               	comf	atoi@n+1,w
 13517  20F1  00A1               	movwf	??_atoi+1
 13518  20F2  0AA0               	incf	??_atoi,f
 13519  20F3  1903               	skipnz
 13520  20F4  0AA1               	incf	??_atoi+1,f
 13521  20F5  0820               	movf	??_atoi,w
 13522  20F6  00F7               	movwf	?_atoi
 13523  20F7  0821               	movf	??_atoi+1,w
 13524  20F8  00F8               	movwf	?_atoi+1
 13525  20F9  0008               	return
 13526  20FA                     l7469:	
 13527  20FA  082C               	movf	atoi@n+1,w
 13528  20FB  00F8               	movwf	?_atoi+1
 13529  20FC  082B               	movf	atoi@n,w
 13530  20FD  00F7               	movwf	?_atoi
 13531  20FE  0008               	return
 13532  20FF                     __end_of_atoi:	
 13533                           
 13534                           	psect	text39
 13535  378A                     __ptext39:	
 13536 ;; *************** function _isspace *****************
 13537 ;; Defined at:
 13538 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 13539 ;; Parameters:    Size  Location     Type
 13540 ;;  c               2    1[COMMON] int 
 13541 ;; Auto vars:     Size  Location     Type
 13542 ;;		None
 13543 ;; Return value:  Size  Location     Type
 13544 ;;                  2    1[COMMON] int 
 13545 ;; Registers used:
 13546 ;;		wreg, status,2, status,0
 13547 ;; Tracked objects:
 13548 ;;		On entry : 0/0
 13549 ;;		On exit  : 0/0
 13550 ;;		Unchanged: 0/0
 13551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13555 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13556 ;;Total ram usage:        5 bytes
 13557 ;; Hardware stack levels used:    1
 13558 ;; Hardware stack levels required when called:    1
 13559 ;; This function calls:
 13560 ;;		Nothing
 13561 ;; This function is called by:
 13562 ;;		_atoi
 13563 ;; This function uses a non-reentrant model
 13564 ;;
 13565                           
 13566                           
 13567                           ;psect for function _isspace
 13568  378A                     _isspace:	
 13569                           
 13570                           ;incstack = 0
 13571                           ; Regs used in _isspace: [wreg+status,2+status,0]
 13572  378A  01F5               	clrf	_isspace$1510
 13573  378B  0AF5               	incf	_isspace$1510,f
 13574  378C  3020               	movlw	32
 13575  378D  0671               	xorwf	isspace@c,w
 13576  378E  0472               	iorwf	isspace@c+1,w
 13577  378F  1903               	btfsc	3,2
 13578  3790  2F9E               	goto	l5009
 13579  3791  0871               	movf	isspace@c,w
 13580  3792  3EF7               	addlw	247
 13581  3793  00F3               	movwf	??_isspace
 13582  3794  30FF               	movlw	255
 13583  3795  3D72               	addwfc	isspace@c+1,w
 13584  3796  00F4               	movwf	??_isspace+1
 13585  3797  3000               	movlw	0
 13586  3798  0274               	subwf	??_isspace+1,w
 13587  3799  3005               	movlw	5
 13588  379A  1903               	skipnz
 13589  379B  0273               	subwf	??_isspace,w
 13590  379C  1803               	btfsc	3,0
 13591  379D  01F5               	clrf	_isspace$1510
 13592  379E                     l5009:	
 13593  379E  0875               	movf	_isspace$1510,w
 13594  379F  00F3               	movwf	??_isspace
 13595  37A0  01F4               	clrf	??_isspace+1
 13596  37A1  0873               	movf	??_isspace,w
 13597  37A2  00F1               	movwf	?_isspace
 13598  37A3  0874               	movf	??_isspace+1,w
 13599  37A4  00F2               	movwf	?_isspace+1
 13600  37A5  0008               	return
 13601  37A6                     __end_of_isspace:	
 13602                           
 13603                           	psect	text40
 13604  36E1                     __ptext40:	
 13605 ;; *************** function _isdigit *****************
 13606 ;; Defined at:
 13607 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 13608 ;; Parameters:    Size  Location     Type
 13609 ;;  c               2    1[COMMON] int 
 13610 ;; Auto vars:     Size  Location     Type
 13611 ;;		None
 13612 ;; Return value:  Size  Location     Type
 13613 ;;                  2    1[COMMON] int 
 13614 ;; Registers used:
 13615 ;;		wreg, status,2, status,0
 13616 ;; Tracked objects:
 13617 ;;		On entry : 0/0
 13618 ;;		On exit  : 0/0
 13619 ;;		Unchanged: 0/0
 13620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13621 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13623 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13624 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13625 ;;Total ram usage:        6 bytes
 13626 ;; Hardware stack levels used:    1
 13627 ;; Hardware stack levels required when called:    1
 13628 ;; This function calls:
 13629 ;;		Nothing
 13630 ;; This function is called by:
 13631 ;;		_vfpfcnvrt
 13632 ;;		_atoi
 13633 ;; This function uses a non-reentrant model
 13634 ;;
 13635                           
 13636                           
 13637                           ;psect for function _isdigit
 13638  36E1                     _isdigit:	
 13639                           
 13640                           ;incstack = 0
 13641                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13642  36E1  0871               	movf	isdigit@c,w
 13643  36E2  3ED0               	addlw	208
 13644  36E3  00F3               	movwf	??_isdigit
 13645  36E4  30FF               	movlw	255
 13646  36E5  3D72               	addwfc	isdigit@c+1,w
 13647  36E6  00F4               	movwf	??_isdigit+1
 13648  36E7  3000               	movlw	0
 13649  36E8  0274               	subwf	??_isdigit+1,w
 13650  36E9  300A               	movlw	10
 13651  36EA  1903               	skipnz
 13652  36EB  0273               	subwf	??_isdigit,w
 13653  36EC  1803               	btfsc	3,0
 13654  36ED  2EF0               	goto	u5580
 13655  36EE  3001               	movlw	1
 13656  36EF  2EF1               	goto	u5590
 13657  36F0                     u5580:	
 13658  36F0  3000               	movlw	0
 13659  36F1                     u5590:	
 13660  36F1  00F5               	movwf	??_isdigit+2
 13661  36F2  01F6               	clrf	??_isdigit+3
 13662  36F3  0875               	movf	??_isdigit+2,w
 13663  36F4  00F1               	movwf	?_isdigit
 13664  36F5  0876               	movf	??_isdigit+3,w
 13665  36F6  00F2               	movwf	?_isdigit+1
 13666  36F7  0008               	return
 13667  36F8                     __end_of_isdigit:	
 13668                           
 13669                           	psect	text41
 13670  2916                     __ptext41:	
 13671 ;; *************** function _init_AFE *****************
 13672 ;; Defined at:
 13673 ;;		line 6 in file "BQ76920.c"
 13674 ;; Parameters:    Size  Location     Type
 13675 ;;		None
 13676 ;; Auto vars:     Size  Location     Type
 13677 ;;		None
 13678 ;; Return value:  Size  Location     Type
 13679 ;;                  1    wreg      void 
 13680 ;; Registers used:
 13681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13682 ;; Tracked objects:
 13683 ;;		On entry : 0/0
 13684 ;;		On exit  : 0/0
 13685 ;;		Unchanged: 0/0
 13686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13691 ;;Total ram usage:        0 bytes
 13692 ;; Hardware stack levels used:    1
 13693 ;; Hardware stack levels required when called:    4
 13694 ;; This function calls:
 13695 ;;		_setShortCircuitProtection
 13696 ;;		_setShuntResistorValue
 13697 ;;		_setTemperatureLimitsint
 13698 ;; This function is called by:
 13699 ;;		_statemachine
 13700 ;; This function uses a non-reentrant model
 13701 ;;
 13702                           
 13703                           
 13704                           ;psect for function _init_AFE
 13705  2916                     _init_AFE:	
 13706                           
 13707                           ;BQ76920.c: 8:     setTemperatureLimitsint(-20, 45, 0, 45);
 13708                           
 13709                           ;incstack = 0
 13710                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13711  2916  30EC               	movlw	236
 13712  2917  0020               	movlb	0	; select bank0
 13713  2918  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 13714  2919  30FF               	movlw	255
 13715  291A  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 13716  291B  302D               	movlw	45
 13717  291C  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 13718  291D  3000               	movlw	0
 13719  291E  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 13720  291F  3000               	movlw	0
 13721  2920  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 13722  2921  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 13723  2922  302D               	movlw	45
 13724  2923  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 13725  2924  3000               	movlw	0
 13726  2925  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 13727  2926  31A9  21E0  31A9   	fcall	_setTemperatureLimitsint
 13728                           
 13729                           ;BQ76920.c: 9:     setShuntResistorValue(0.02);
 13730  2929  303C               	movlw	60
 13731  292A  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 13732  292B  30A3               	movlw	163
 13733  292C  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 13734  292D  30D7               	movlw	215
 13735  292E  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 13736  292F  300A               	movlw	10
 13737  2930  00F1               	movwf	setShuntResistorValue@res_mOhm
 13738  2931  31B6  26B7  31A9   	fcall	_setShuntResistorValue
 13739                           
 13740                           ;BQ76920.c: 10:     setShortCircuitProtection(4000, 200);
 13741  2934  3000               	movlw	0
 13742  2935  0020               	movlb	0	; select bank0
 13743  2936  00E9               	movwf	setShortCircuitProtection@current_mA+3
 13744  2937  3000               	movlw	0
 13745  2938  00E8               	movwf	setShortCircuitProtection@current_mA+2
 13746  2939  300F               	movlw	15
 13747  293A  00E7               	movwf	setShortCircuitProtection@current_mA+1
 13748  293B  30A0               	movlw	160
 13749  293C  00E6               	movwf	setShortCircuitProtection@current_mA
 13750  293D  30C8               	movlw	200
 13751  293E  00EA               	movwf	setShortCircuitProtection@delay_us
 13752  293F  3000               	movlw	0
 13753  2940  00EB               	movwf	setShortCircuitProtection@delay_us+1
 13754  2941  3186  26D5         	fcall	_setShortCircuitProtection
 13755  2943  0008               	return
 13756  2944                     __end_of_init_AFE:	
 13757                           
 13758                           	psect	text42
 13759  29E0                     __ptext42:	
 13760 ;; *************** function _setTemperatureLimitsint *****************
 13761 ;; Defined at:
 13762 ;;		line 61 in file "BQ76920.c"
 13763 ;; Parameters:    Size  Location     Type
 13764 ;;  minDischarge    2    0[BANK0 ] int 
 13765 ;;  maxDischarge    2    2[BANK0 ] int 
 13766 ;;  minCharge_de    2    4[BANK0 ] int 
 13767 ;;  maxCharge_de    2    6[BANK0 ] int 
 13768 ;; Auto vars:     Size  Location     Type
 13769 ;;		None
 13770 ;; Return value:  Size  Location     Type
 13771 ;;                  1    wreg      void 
 13772 ;; Registers used:
 13773 ;;		wreg, status,2, status,0, pclath, cstack
 13774 ;; Tracked objects:
 13775 ;;		On entry : 0/0
 13776 ;;		On exit  : 0/0
 13777 ;;		Unchanged: 0/0
 13778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13779 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13782 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13783 ;;Total ram usage:        8 bytes
 13784 ;; Hardware stack levels used:    1
 13785 ;; Hardware stack levels required when called:    2
 13786 ;; This function calls:
 13787 ;;		___wmul
 13788 ;; This function is called by:
 13789 ;;		_init_AFE
 13790 ;; This function uses a non-reentrant model
 13791 ;;
 13792                           
 13793                           
 13794                           ;psect for function _setTemperatureLimitsint
 13795  29E0                     _setTemperatureLimitsint:	
 13796                           
 13797                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 13798                           
 13799                           ;incstack = 0
 13800                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 13801  29E0  0020               	movlb	0	; select bank0
 13802  29E1  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 13803  29E2  00F2               	movwf	___wmul@multiplier+1
 13804  29E3  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 13805  29E4  00F1               	movwf	___wmul@multiplier
 13806  29E5  300A               	movlw	10
 13807  29E6  00F3               	movwf	___wmul@multiplicand
 13808  29E7  3000               	movlw	0
 13809  29E8  00F4               	movwf	___wmul@multiplicand+1
 13810  29E9  31B7  276F  31A9   	fcall	___wmul
 13811  29EC  0872               	movf	?___wmul+1,w
 13812  29ED  0023               	movlb	3	; select bank3
 13813  29EE  00C9               	movwf	(_minCellTempDischarge+1)^(0+384)
 13814  29EF  0871               	movf	?___wmul,w
 13815  29F0  00C8               	movwf	_minCellTempDischarge^(0+384)
 13816                           
 13817                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 13818  29F1  0020               	movlb	0	; select bank0
 13819  29F2  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 13820  29F3  00F2               	movwf	___wmul@multiplier+1
 13821  29F4  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 13822  29F5  00F1               	movwf	___wmul@multiplier
 13823  29F6  300A               	movlw	10
 13824  29F7  00F3               	movwf	___wmul@multiplicand
 13825  29F8  3000               	movlw	0
 13826  29F9  00F4               	movwf	___wmul@multiplicand+1
 13827  29FA  31B7  276F  31A9   	fcall	___wmul
 13828  29FD  0872               	movf	?___wmul+1,w
 13829  29FE  0023               	movlb	3	; select bank3
 13830  29FF  00C5               	movwf	(_maxCellTempDischarge+1)^(0+384)
 13831  2A00  0871               	movf	?___wmul,w
 13832  2A01  00C4               	movwf	_maxCellTempDischarge^(0+384)
 13833                           
 13834                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 13835  2A02  0020               	movlb	0	; select bank0
 13836  2A03  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 13837  2A04  00F2               	movwf	___wmul@multiplier+1
 13838  2A05  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 13839  2A06  00F1               	movwf	___wmul@multiplier
 13840  2A07  300A               	movlw	10
 13841  2A08  00F3               	movwf	___wmul@multiplicand
 13842  2A09  3000               	movlw	0
 13843  2A0A  00F4               	movwf	___wmul@multiplicand+1
 13844  2A0B  31B7  276F  31A9   	fcall	___wmul
 13845  2A0E  0872               	movf	?___wmul+1,w
 13846  2A0F  0023               	movlb	3	; select bank3
 13847  2A10  00CB               	movwf	(_minCellTempCharge+1)^(0+384)
 13848  2A11  0871               	movf	?___wmul,w
 13849  2A12  00CA               	movwf	_minCellTempCharge^(0+384)
 13850                           
 13851                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 13852  2A13  0020               	movlb	0	; select bank0
 13853  2A14  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 13854  2A15  00F2               	movwf	___wmul@multiplier+1
 13855  2A16  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 13856  2A17  00F1               	movwf	___wmul@multiplier
 13857  2A18  300A               	movlw	10
 13858  2A19  00F3               	movwf	___wmul@multiplicand
 13859  2A1A  3000               	movlw	0
 13860  2A1B  00F4               	movwf	___wmul@multiplicand+1
 13861  2A1C  31B7  276F         	fcall	___wmul
 13862  2A1E  0872               	movf	?___wmul+1,w
 13863  2A1F  0023               	movlb	3	; select bank3
 13864  2A20  00C7               	movwf	(_maxCellTempCharge+1)^(0+384)
 13865  2A21  0871               	movf	?___wmul,w
 13866  2A22  00C6               	movwf	_maxCellTempCharge^(0+384)
 13867  2A23  0008               	return
 13868  2A24                     __end_of_setTemperatureLimitsint:	
 13869                           
 13870                           	psect	text43
 13871  376F                     __ptext43:	
 13872 ;; *************** function ___wmul *****************
 13873 ;; Defined at:
 13874 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 13875 ;; Parameters:    Size  Location     Type
 13876 ;;  multiplier      2    1[COMMON] unsigned int 
 13877 ;;  multiplicand    2    3[COMMON] unsigned int 
 13878 ;; Auto vars:     Size  Location     Type
 13879 ;;  product         2    5[COMMON] unsigned int 
 13880 ;; Return value:  Size  Location     Type
 13881 ;;                  2    1[COMMON] unsigned int 
 13882 ;; Registers used:
 13883 ;;		wreg, status,2, status,0
 13884 ;; Tracked objects:
 13885 ;;		On entry : 0/0
 13886 ;;		On exit  : 0/0
 13887 ;;		Unchanged: 0/0
 13888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13889 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13890 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13892 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13893 ;;Total ram usage:        6 bytes
 13894 ;; Hardware stack levels used:    1
 13895 ;; Hardware stack levels required when called:    1
 13896 ;; This function calls:
 13897 ;;		Nothing
 13898 ;; This function is called by:
 13899 ;;		_setTemperatureLimitsint
 13900 ;;		_atoi
 13901 ;; This function uses a non-reentrant model
 13902 ;;
 13903                           
 13904                           
 13905                           ;psect for function ___wmul
 13906  376F                     ___wmul:	
 13907                           
 13908                           ;incstack = 0
 13909                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13910  376F  01F5               	clrf	___wmul@product
 13911  3770  01F6               	clrf	___wmul@product+1
 13912  3771                     l4439:	
 13913  3771  1C71               	btfss	___wmul@multiplier,0
 13914  3772  2F77               	goto	l819
 13915  3773  0873               	movf	___wmul@multiplicand,w
 13916  3774  07F5               	addwf	___wmul@product,f
 13917  3775  0874               	movf	___wmul@multiplicand+1,w
 13918  3776  3DF6               	addwfc	___wmul@product+1,f
 13919  3777                     l819:	
 13920  3777  3001               	movlw	1
 13921  3778                     u5615:	
 13922  3778  35F3               	lslf	___wmul@multiplicand,f
 13923  3779  0DF4               	rlf	___wmul@multiplicand+1,f
 13924  377A  0B89               	decfsz	9,f
 13925  377B  2F78               	goto	u5615
 13926  377C  3001               	movlw	1
 13927  377D                     u5625:	
 13928  377D  36F2               	lsrf	___wmul@multiplier+1,f
 13929  377E  0CF1               	rrf	___wmul@multiplier,f
 13930  377F  0B89               	decfsz	9,f
 13931  3780  2F7D               	goto	u5625
 13932  3781  0871               	movf	___wmul@multiplier,w
 13933  3782  0472               	iorwf	___wmul@multiplier+1,w
 13934  3783  1D03               	btfss	3,2
 13935  3784  2F71               	goto	l4439
 13936  3785  0876               	movf	___wmul@product+1,w
 13937  3786  00F2               	movwf	?___wmul+1
 13938  3787  0875               	movf	___wmul@product,w
 13939  3788  00F1               	movwf	?___wmul
 13940  3789  0008               	return
 13941  378A                     __end_of___wmul:	
 13942                           
 13943                           	psect	text44
 13944  36B7                     __ptext44:	
 13945 ;; *************** function _setShuntResistorValue *****************
 13946 ;; Defined at:
 13947 ;;		line 73 in file "BQ76920.c"
 13948 ;; Parameters:    Size  Location     Type
 13949 ;;  res_mOhm        4    1[COMMON] float 
 13950 ;; Auto vars:     Size  Location     Type
 13951 ;;		None
 13952 ;; Return value:  Size  Location     Type
 13953 ;;                  1    wreg      void 
 13954 ;; Registers used:
 13955 ;;		wreg
 13956 ;; Tracked objects:
 13957 ;;		On entry : 0/0
 13958 ;;		On exit  : 0/0
 13959 ;;		Unchanged: 0/0
 13960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13961 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13964 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13965 ;;Total ram usage:        4 bytes
 13966 ;; Hardware stack levels used:    1
 13967 ;; Hardware stack levels required when called:    1
 13968 ;; This function calls:
 13969 ;;		Nothing
 13970 ;; This function is called by:
 13971 ;;		_init_AFE
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           
 13976                           ;psect for function _setShuntResistorValue
 13977  36B7                     _setShuntResistorValue:	
 13978                           
 13979                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 13980                           
 13981                           ;incstack = 0
 13982                           ; Regs used in _setShuntResistorValue: [wreg]
 13983  36B7  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 13984  36B8  0023               	movlb	3	; select bank3
 13985  36B9  00B5               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 13986  36BA  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 13987  36BB  00B4               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 13988  36BC  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 13989  36BD  00B3               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 13990  36BE  0871               	movf	setShuntResistorValue@res_mOhm,w
 13991  36BF  00B2               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 13992  36C0  0008               	return
 13993  36C1                     __end_of_setShuntResistorValue:	
 13994                           
 13995                           	psect	text45
 13996  06D5                     __ptext45:	
 13997 ;; *************** function _setShortCircuitProtection *****************
 13998 ;; Defined at:
 13999 ;;		line 81 in file "BQ76920.c"
 14000 ;; Parameters:    Size  Location     Type
 14001 ;;  current_mA      4   70[BANK0 ] long 
 14002 ;;  delay_us        2   74[BANK0 ] int 
 14003 ;; Auto vars:     Size  Location     Type
 14004 ;;  i               2   10[BANK1 ] int 
 14005 ;;  i               2    8[BANK1 ] int 
 14006 ;;  scaler          4    0[BANK1 ] float 
 14007 ;; Return value:  Size  Location     Type
 14008 ;;                  1    wreg      void 
 14009 ;; Registers used:
 14010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14011 ;; Tracked objects:
 14012 ;;		On entry : 0/0
 14013 ;;		On exit  : 0/0
 14014 ;;		Unchanged: 0/0
 14015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14016 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14017 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14018 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14019 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14020 ;;Total ram usage:       21 bytes
 14021 ;; Hardware stack levels used:    1
 14022 ;; Hardware stack levels required when called:    3
 14023 ;; This function calls:
 14024 ;;		___fldiv
 14025 ;;		___flge
 14026 ;;		___flmul
 14027 ;;		___xxtofl
 14028 ;; This function is called by:
 14029 ;;		_init_AFE
 14030 ;; This function uses a non-reentrant model
 14031 ;;
 14032                           
 14033                           
 14034                           ;psect for function _setShortCircuitProtection
 14035  06D5                     _setShortCircuitProtection:	
 14036                           
 14037                           ;BQ76920.c: 86:     float scaler = 1000.0;
 14038                           
 14039                           ;incstack = 0
 14040                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14041  06D5  3044               	movlw	68
 14042  06D6  0021               	movlb	1	; select bank1
 14043  06D7  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 14044  06D8  307A               	movlw	122
 14045  06D9  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 14046  06DA  3000               	movlw	0
 14047  06DB  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 14048  06DC  3000               	movlw	0
 14049  06DD  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 14050                           
 14051                           ;BQ76920.c: 87:     protect1.bits.SCD_THRESH = 0;
 14052  06DE  30F8               	movlw	-8
 14053  06DF  0023               	movlb	3	; select bank3
 14054  06E0  05D0               	andwf	_protect1^(0+384),f
 14055                           
 14056                           ;BQ76920.c: 88:         for (int i = 0; i < 8; i++) {
 14057  06E1  0021               	movlb	1	; select bank1
 14058  06E2  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 14059  06E3  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 14060  06E4                     l7963:	
 14061                           
 14062                           ;BQ76920.c: 89:             if ( ((current_mA * shuntResistorValue_mOhm * scaler) / 1000
      +                          .0) >= SCD_threshold_setting[i]) {
 14063  06E4  0023               	movlb	3	; select bank3
 14064  06E5  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 14065  06E6  0020               	movlb	0	; select bank0
 14066  06E7  00A9               	movwf	___flmul@b+3
 14067  06E8  0023               	movlb	3	; select bank3
 14068  06E9  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 14069  06EA  0020               	movlb	0	; select bank0
 14070  06EB  00A8               	movwf	___flmul@b+2
 14071  06EC  0023               	movlb	3	; select bank3
 14072  06ED  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 14073  06EE  0020               	movlb	0	; select bank0
 14074  06EF  00A7               	movwf	___flmul@b+1
 14075  06F0  0023               	movlb	3	; select bank3
 14076  06F1  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 14077  06F2  0020               	movlb	0	; select bank0
 14078  06F3  00A6               	movwf	___flmul@b
 14079  06F4  0869               	movf	setShortCircuitProtection@current_mA+3,w
 14080  06F5  00F4               	movwf	___xxtofl@val+3
 14081  06F6  0868               	movf	setShortCircuitProtection@current_mA+2,w
 14082  06F7  00F3               	movwf	___xxtofl@val+2
 14083  06F8  0867               	movf	setShortCircuitProtection@current_mA+1,w
 14084  06F9  00F2               	movwf	___xxtofl@val+1
 14085  06FA  0866               	movf	setShortCircuitProtection@current_mA,w
 14086  06FB  00F1               	movwf	___xxtofl@val
 14087  06FC  3001               	movlw	1
 14088  06FD  31AF  276A  3186   	fcall	___xxtofl
 14089  0700  0874               	movf	?___xxtofl+3,w
 14090  0701  0020               	movlb	0	; select bank0
 14091  0702  00AD               	movwf	___flmul@a+3
 14092  0703  0873               	movf	?___xxtofl+2,w
 14093  0704  00AC               	movwf	___flmul@a+2
 14094  0705  0872               	movf	?___xxtofl+1,w
 14095  0706  00AB               	movwf	___flmul@a+1
 14096  0707  0871               	movf	?___xxtofl,w
 14097  0708  00AA               	movwf	___flmul@a
 14098  0709  3195  25D4  3186   	fcall	___flmul
 14099  070C  0020               	movlb	0	; select bank0
 14100  070D  0829               	movf	?___flmul+3,w
 14101  070E  0021               	movlb	1	; select bank1
 14102  070F  00A7               	movwf	(_setShortCircuitProtection$1842+3)^(0+128)
 14103  0710  0020               	movlb	0	; select bank0
 14104  0711  0828               	movf	?___flmul+2,w
 14105  0712  0021               	movlb	1	; select bank1
 14106  0713  00A6               	movwf	(_setShortCircuitProtection$1842+2)^(0+128)
 14107  0714  0020               	movlb	0	; select bank0
 14108  0715  0827               	movf	?___flmul+1,w
 14109  0716  0021               	movlb	1	; select bank1
 14110  0717  00A5               	movwf	(_setShortCircuitProtection$1842+1)^(0+128)
 14111  0718  0020               	movlb	0	; select bank0
 14112  0719  0826               	movf	?___flmul,w
 14113  071A  0021               	movlb	1	; select bank1
 14114  071B  00A4               	movwf	_setShortCircuitProtection$1842^(0+128)
 14115                           
 14116                           ;BQ76920.c: 89:             if ( ((current_mA * shuntResistorValue_mOhm * scaler) / 1000
      +                          .0) >= SCD_threshold_setting[i]) {
 14117  071C  3044               	movlw	68
 14118  071D  0020               	movlb	0	; select bank0
 14119  071E  00C3               	movwf	___fldiv@a+3
 14120  071F  307A               	movlw	122
 14121  0720  00C2               	movwf	___fldiv@a+2
 14122  0721  3000               	movlw	0
 14123  0722  00C1               	movwf	___fldiv@a+1
 14124  0723  3000               	movlw	0
 14125  0724  00C0               	movwf	___fldiv@a
 14126  0725  0021               	movlb	1	; select bank1
 14127  0726  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 14128  0727  0020               	movlb	0	; select bank0
 14129  0728  00A9               	movwf	___flmul@b+3
 14130  0729  0021               	movlb	1	; select bank1
 14131  072A  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 14132  072B  0020               	movlb	0	; select bank0
 14133  072C  00A8               	movwf	___flmul@b+2
 14134  072D  0021               	movlb	1	; select bank1
 14135  072E  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 14136  072F  0020               	movlb	0	; select bank0
 14137  0730  00A7               	movwf	___flmul@b+1
 14138  0731  0021               	movlb	1	; select bank1
 14139  0732  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 14140  0733  0020               	movlb	0	; select bank0
 14141  0734  00A6               	movwf	___flmul@b
 14142  0735  0021               	movlb	1	; select bank1
 14143  0736  0827               	movf	(_setShortCircuitProtection$1842+3)^(0+128),w
 14144  0737  0020               	movlb	0	; select bank0
 14145  0738  00AD               	movwf	___flmul@a+3
 14146  0739  0021               	movlb	1	; select bank1
 14147  073A  0826               	movf	(_setShortCircuitProtection$1842+2)^(0+128),w
 14148  073B  0020               	movlb	0	; select bank0
 14149  073C  00AC               	movwf	___flmul@a+2
 14150  073D  0021               	movlb	1	; select bank1
 14151  073E  0825               	movf	(_setShortCircuitProtection$1842+1)^(0+128),w
 14152  073F  0020               	movlb	0	; select bank0
 14153  0740  00AB               	movwf	___flmul@a+1
 14154  0741  0021               	movlb	1	; select bank1
 14155  0742  0824               	movf	_setShortCircuitProtection$1842^(0+128),w
 14156  0743  0020               	movlb	0	; select bank0
 14157  0744  00AA               	movwf	___flmul@a
 14158  0745  3195  25D4  3186   	fcall	___flmul
 14159  0748  0020               	movlb	0	; select bank0
 14160  0749  0829               	movf	?___flmul+3,w
 14161  074A  00C7               	movwf	___fldiv@b+3
 14162  074B  0828               	movf	?___flmul+2,w
 14163  074C  00C6               	movwf	___fldiv@b+2
 14164  074D  0827               	movf	?___flmul+1,w
 14165  074E  00C5               	movwf	___fldiv@b+1
 14166  074F  0826               	movf	?___flmul,w
 14167  0750  00C4               	movwf	___fldiv@b
 14168  0751  3190  2061  3186   	fcall	___fldiv
 14169  0754  0020               	movlb	0	; select bank0
 14170  0755  0843               	movf	?___fldiv+3,w
 14171  0756  00DD               	movwf	___flge@ff1+3
 14172  0757  0842               	movf	?___fldiv+2,w
 14173  0758  00DC               	movwf	___flge@ff1+2
 14174  0759  0841               	movf	?___fldiv+1,w
 14175  075A  00DB               	movwf	___flge@ff1+1
 14176  075B  0840               	movf	?___fldiv,w
 14177  075C  00DA               	movwf	___flge@ff1
 14178  075D  0021               	movlb	1	; select bank1
 14179  075E  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 14180  075F  0085               	movwf	5
 14181  0760  0828               	movf	setShortCircuitProtection@i^(0+128),w
 14182  0761  0084               	movwf	4
 14183  0762  3584               	lslf	4,f
 14184  0763  0D85               	rlf	5,f
 14185  0764  3010               	movlw	low (_SCD_threshold_setting| (0+32768))
 14186  0765  0784               	addwf	4,f
 14187  0766  30B8               	movlw	high (_SCD_threshold_setting| (0+32768))
 14188  0767  3D85               	addwfc	5,f
 14189  0768  3F00               	moviw [0]fsr0
 14190  0769  0020               	movlb	0	; select bank0
 14191  076A  00EC               	movwf	??_setShortCircuitProtection
 14192  076B  3F01               	moviw [1]fsr0
 14193  076C  00ED               	movwf	??_setShortCircuitProtection+1
 14194  076D  086C               	movf	??_setShortCircuitProtection,w
 14195  076E  00F1               	movwf	___xxtofl@val
 14196  076F  086D               	movf	??_setShortCircuitProtection+1,w
 14197  0770  00F2               	movwf	___xxtofl@val+1
 14198  0771  0D89               	rlf	9,f
 14199  0772  3B89               	subwfb	9,f
 14200  0773  0989               	comf	9,f
 14201  0774  00F3               	movwf	___xxtofl@val+2
 14202  0775  00F4               	movwf	___xxtofl@val+3
 14203  0776  3001               	movlw	1
 14204  0777  31AF  276A  3186   	fcall	___xxtofl
 14205  077A  0874               	movf	?___xxtofl+3,w
 14206  077B  0020               	movlb	0	; select bank0
 14207  077C  00E1               	movwf	___flge@ff2+3
 14208  077D  0873               	movf	?___xxtofl+2,w
 14209  077E  00E0               	movwf	___flge@ff2+2
 14210  077F  0872               	movf	?___xxtofl+1,w
 14211  0780  00DF               	movwf	___flge@ff2+1
 14212  0781  0871               	movf	?___xxtofl,w
 14213  0782  00DE               	movwf	___flge@ff2
 14214  0783  31AC  24EB  3186   	fcall	___flge
 14215  0786  1C03               	btfss	3,0
 14216  0787  2F90               	goto	l7969
 14217                           
 14218                           ;BQ76920.c: 90:                 protect1.bits.SCD_THRESH = i;
 14219  0788  0023               	movlb	3	; select bank3
 14220  0789  0850               	movf	_protect1^(0+384),w
 14221  078A  0021               	movlb	1	; select bank1
 14222  078B  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 14223  078C  39F8               	andlw	-8
 14224  078D  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 14225  078E  0023               	movlb	3	; select bank3
 14226  078F  00D0               	movwf	_protect1^(0+384)
 14227  0790                     l7969:	
 14228                           
 14229                           ;BQ76920.c: 92:         }
 14230  0790  3001               	movlw	1
 14231  0791  0021               	movlb	1	; select bank1
 14232  0792  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 14233  0793  3000               	movlw	0
 14234  0794  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 14235  0795  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 14236  0796  3A80               	xorlw	128
 14237  0797  0020               	movlb	0	; select bank0
 14238  0798  00EC               	movwf	??_setShortCircuitProtection
 14239  0799  3080               	movlw	128
 14240  079A  026C               	subwf	??_setShortCircuitProtection,w
 14241  079B  1D03               	skipz
 14242  079C  2FA0               	goto	u11735
 14243  079D  3008               	movlw	8
 14244  079E  0021               	movlb	1	; select bank1
 14245  079F  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 14246  07A0                     u11735:	
 14247  07A0  1C03               	skipc
 14248  07A1  2EE4               	goto	l7963
 14249                           
 14250                           ;BQ76920.c: 94:         protect1.bits.SCD_DELAY = 0;
 14251  07A2  30E7               	movlw	-25
 14252  07A3  0023               	movlb	3	; select bank3
 14253  07A4  05D0               	andwf	_protect1^(0+384),f
 14254                           
 14255                           ;BQ76920.c: 95:         for (int i = sizeof (SCD_delay_setting) - 1; i > 0; i--) {
 14256  07A5  3007               	movlw	7
 14257  07A6  0021               	movlb	1	; select bank1
 14258  07A7  00AA               	movwf	setShortCircuitProtection@i_790^(0+128)
 14259  07A8  3000               	movlw	0
 14260  07A9  00AB               	movwf	(setShortCircuitProtection@i_790^(0+128)+1)
 14261  07AA                     l7981:	
 14262                           
 14263                           ;BQ76920.c: 96:             if (delay_us >= SCD_delay_setting[i]) {
 14264  07AA  0021               	movlb	1	; select bank1
 14265  07AB  082B               	movf	(setShortCircuitProtection@i_790+1)^(0+128),w
 14266  07AC  0085               	movwf	5
 14267  07AD  082A               	movf	setShortCircuitProtection@i_790^(0+128),w
 14268  07AE  0084               	movwf	4
 14269  07AF  3584               	lslf	4,f
 14270  07B0  0D85               	rlf	5,f
 14271  07B1  3030               	movlw	low (_SCD_delay_setting| (0+32768))
 14272  07B2  0784               	addwf	4,f
 14273  07B3  30B8               	movlw	high (_SCD_delay_setting| (0+32768))
 14274  07B4  3D85               	addwfc	5,f
 14275  07B5  3F00               	moviw [0]fsr0
 14276  07B6  0020               	movlb	0	; select bank0
 14277  07B7  00EC               	movwf	??_setShortCircuitProtection
 14278  07B8  3F01               	moviw [1]fsr0
 14279  07B9  00ED               	movwf	??_setShortCircuitProtection+1
 14280  07BA  086B               	movf	setShortCircuitProtection@delay_us+1,w
 14281  07BB  3A80               	xorlw	128
 14282  07BC  00EE               	movwf	??_setShortCircuitProtection+2
 14283  07BD  086D               	movf	??_setShortCircuitProtection+1,w
 14284  07BE  3A80               	xorlw	128
 14285  07BF  026E               	subwf	??_setShortCircuitProtection+2,w
 14286  07C0  1D03               	skipz
 14287  07C1  2FC4               	goto	u11745
 14288  07C2  086C               	movf	??_setShortCircuitProtection,w
 14289  07C3  026A               	subwf	setShortCircuitProtection@delay_us,w
 14290  07C4                     u11745:	
 14291  07C4  1C03               	skipc
 14292  07C5  2FD6               	goto	l7985
 14293                           
 14294                           ;BQ76920.c: 97:                 protect1.bits.SCD_DELAY = i;
 14295  07C6  0021               	movlb	1	; select bank1
 14296  07C7  082A               	movf	setShortCircuitProtection@i_790^(0+128),w
 14297  07C8  0020               	movlb	0	; select bank0
 14298  07C9  00EC               	movwf	??_setShortCircuitProtection
 14299  07CA  0DEC               	rlf	??_setShortCircuitProtection,f
 14300  07CB  0DEC               	rlf	??_setShortCircuitProtection,f
 14301  07CC  0DEC               	rlf	??_setShortCircuitProtection,f
 14302  07CD  0023               	movlb	3	; select bank3
 14303  07CE  0850               	movf	_protect1^(0+384),w
 14304  07CF  0020               	movlb	0	; select bank0
 14305  07D0  066C               	xorwf	??_setShortCircuitProtection,w
 14306  07D1  39E7               	andlw	-25
 14307  07D2  066C               	xorwf	??_setShortCircuitProtection,w
 14308  07D3  0023               	movlb	3	; select bank3
 14309  07D4  00D0               	movwf	_protect1^(0+384)
 14310                           
 14311                           ;BQ76920.c: 98:                 break;
 14312  07D5  0008               	return
 14313  07D6                     l7985:	
 14314                           
 14315                           ;BQ76920.c: 100:         }
 14316  07D6  30FF               	movlw	255
 14317  07D7  0021               	movlb	1	; select bank1
 14318  07D8  07AA               	addwf	setShortCircuitProtection@i_790^(0+128),f
 14319  07D9  30FF               	movlw	255
 14320  07DA  3DAB               	addwfc	(setShortCircuitProtection@i_790+1)^(0+128),f
 14321  07DB  082B               	movf	(setShortCircuitProtection@i_790+1)^(0+128),w
 14322  07DC  3A80               	xorlw	128
 14323  07DD  0020               	movlb	0	; select bank0
 14324  07DE  00EC               	movwf	??_setShortCircuitProtection
 14325  07DF  3080               	movlw	128
 14326  07E0  026C               	subwf	??_setShortCircuitProtection,w
 14327  07E1  1D03               	skipz
 14328  07E2  2FE6               	goto	u11755
 14329  07E3  3001               	movlw	1
 14330  07E4  0021               	movlb	1	; select bank1
 14331  07E5  022A               	subwf	setShortCircuitProtection@i_790^(0+128),w
 14332  07E6                     u11755:	
 14333  07E6  1C03               	btfss	3,0
 14334  07E7  0008               	return
 14335  07E8  2FAA               	goto	l7981
 14336  07E9                     __end_of_setShortCircuitProtection:	
 14337                           
 14338                           	psect	text46
 14339  15D4                     __ptext46:	
 14340 ;; *************** function ___flmul *****************
 14341 ;; Defined at:
 14342 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 14343 ;; Parameters:    Size  Location     Type
 14344 ;;  b               4    6[BANK0 ] void 
 14345 ;;  a               4   10[BANK0 ] void 
 14346 ;; Auto vars:     Size  Location     Type
 14347 ;;  prod            4   26[BANK0 ] struct .
 14348 ;;  grs             4   20[BANK0 ] unsigned long 
 14349 ;;  temp            2   30[BANK0 ] struct .
 14350 ;;  bexp            1   25[BANK0 ] unsigned char 
 14351 ;;  aexp            1   24[BANK0 ] unsigned char 
 14352 ;;  sign            1   19[BANK0 ] unsigned char 
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  4    6[BANK0 ] unsigned char 
 14355 ;; Registers used:
 14356 ;;		wreg, status,2, status,0, pclath, cstack
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14362 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14363 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14364 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14365 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14366 ;;Total ram usage:       26 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:    2
 14369 ;; This function calls:
 14370 ;;		__Umul8_16
 14371 ;; This function is called by:
 14372 ;;		_setShortCircuitProtection
 14373 ;;		_efgtoa
 14374 ;; This function uses a non-reentrant model
 14375 ;;
 14376                           
 14377                           
 14378                           ;psect for function ___flmul
 14379  15D4                     ___flmul:	
 14380                           
 14381                           ;incstack = 0
 14382                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 14383  15D4  0020               	movlb	0	; select bank0
 14384  15D5  0829               	movf	___flmul@b+3,w
 14385  15D6  3980               	andlw	128
 14386  15D7  00AE               	movwf	??___flmul
 14387  15D8  082E               	movf	??___flmul,w
 14388  15D9  00B3               	movwf	___flmul@sign
 14389  15DA  3529               	lslf	___flmul@b+3,w
 14390  15DB  00AE               	movwf	??___flmul
 14391  15DC  082E               	movf	??___flmul,w
 14392  15DD  00B9               	movwf	___flmul@bexp
 14393  15DE  1BA8               	btfsc	___flmul@b+2,7
 14394  15DF  1439               	bsf	___flmul@bexp,0
 14395  15E0  0839               	movf	___flmul@bexp,w
 14396  15E1  1903               	btfsc	3,2
 14397  15E2  2DF0               	goto	l4877
 14398  15E3  0A39               	incf	___flmul@bexp,w
 14399  15E4  1D03               	btfss	3,2
 14400  15E5  2DEE               	goto	l4875
 14401  15E6  3000               	movlw	0
 14402  15E7  00A9               	movwf	___flmul@b+3
 14403  15E8  3000               	movlw	0
 14404  15E9  00A8               	movwf	___flmul@b+2
 14405  15EA  3000               	movlw	0
 14406  15EB  00A7               	movwf	___flmul@b+1
 14407  15EC  3000               	movlw	0
 14408  15ED  00A6               	movwf	___flmul@b
 14409  15EE                     l4875:	
 14410  15EE  17A8               	bsf	___flmul@b+2,7
 14411  15EF  2DF8               	goto	l4879
 14412  15F0                     l4877:	
 14413  15F0  3000               	movlw	0
 14414  15F1  00A9               	movwf	___flmul@b+3
 14415  15F2  3000               	movlw	0
 14416  15F3  00A8               	movwf	___flmul@b+2
 14417  15F4  3000               	movlw	0
 14418  15F5  00A7               	movwf	___flmul@b+1
 14419  15F6  3000               	movlw	0
 14420  15F7  00A6               	movwf	___flmul@b
 14421  15F8                     l4879:	
 14422  15F8  082D               	movf	___flmul@a+3,w
 14423  15F9  3980               	andlw	128
 14424  15FA  00AE               	movwf	??___flmul
 14425  15FB  082E               	movf	??___flmul,w
 14426  15FC  06B3               	xorwf	___flmul@sign,f
 14427  15FD  352D               	lslf	___flmul@a+3,w
 14428  15FE  00AE               	movwf	??___flmul
 14429  15FF  082E               	movf	??___flmul,w
 14430  1600  00B8               	movwf	___flmul@aexp
 14431  1601  1BAC               	btfsc	___flmul@a+2,7
 14432  1602  1438               	bsf	___flmul@aexp,0
 14433  1603  0838               	movf	___flmul@aexp,w
 14434  1604  1903               	btfsc	3,2
 14435  1605  2E13               	goto	l4895
 14436  1606  0A38               	incf	___flmul@aexp,w
 14437  1607  1D03               	btfss	3,2
 14438  1608  2E11               	goto	l4893
 14439  1609  3000               	movlw	0
 14440  160A  00AD               	movwf	___flmul@a+3
 14441  160B  3000               	movlw	0
 14442  160C  00AC               	movwf	___flmul@a+2
 14443  160D  3000               	movlw	0
 14444  160E  00AB               	movwf	___flmul@a+1
 14445  160F  3000               	movlw	0
 14446  1610  00AA               	movwf	___flmul@a
 14447  1611                     l4893:	
 14448  1611  17AC               	bsf	___flmul@a+2,7
 14449  1612  2E1B               	goto	l4897
 14450  1613                     l4895:	
 14451  1613  3000               	movlw	0
 14452  1614  00AD               	movwf	___flmul@a+3
 14453  1615  3000               	movlw	0
 14454  1616  00AC               	movwf	___flmul@a+2
 14455  1617  3000               	movlw	0
 14456  1618  00AB               	movwf	___flmul@a+1
 14457  1619  3000               	movlw	0
 14458  161A  00AA               	movwf	___flmul@a
 14459  161B                     l4897:	
 14460  161B  0838               	movf	___flmul@aexp,w
 14461  161C  1D03               	btfss	3,2
 14462  161D  0839               	movf	___flmul@bexp,w
 14463  161E  1D03               	btfss	3,2
 14464  161F  2E29               	goto	l4905
 14465  1620  3000               	movlw	0
 14466  1621  00A9               	movwf	?___flmul+3
 14467  1622  3000               	movlw	0
 14468  1623  00A8               	movwf	?___flmul+2
 14469  1624  3000               	movlw	0
 14470  1625  00A7               	movwf	?___flmul+1
 14471  1626  3000               	movlw	0
 14472  1627  00A6               	movwf	?___flmul
 14473  1628  0008               	return
 14474  1629                     l4905:	
 14475  1629  0826               	movf	___flmul@b,w
 14476  162A  00AE               	movwf	??___flmul
 14477  162B  082E               	movf	??___flmul,w
 14478  162C  00F1               	movwf	__Umul8_16@multiplicand
 14479  162D  082C               	movf	___flmul@a+2,w
 14480  162E  31B7  27E1  3195   	fcall	__Umul8_16
 14481  1631  0872               	movf	?__Umul8_16+1,w
 14482  1632  0020               	movlb	0	; select bank0
 14483  1633  00BF               	movwf	___flmul@temp+1
 14484  1634  0871               	movf	?__Umul8_16,w
 14485  1635  00BE               	movwf	___flmul@temp
 14486  1636  083E               	movf	___flmul@temp,w
 14487  1637  00AE               	movwf	??___flmul
 14488  1638  01AF               	clrf	??___flmul+1
 14489  1639  01B0               	clrf	??___flmul+2
 14490  163A  01B1               	clrf	??___flmul+3
 14491  163B  0831               	movf	??___flmul+3,w
 14492  163C  00B7               	movwf	___flmul@grs+3
 14493  163D  0830               	movf	??___flmul+2,w
 14494  163E  00B6               	movwf	___flmul@grs+2
 14495  163F  082F               	movf	??___flmul+1,w
 14496  1640  00B5               	movwf	___flmul@grs+1
 14497  1641  082E               	movf	??___flmul,w
 14498  1642  00B4               	movwf	___flmul@grs
 14499  1643  083F               	movf	___flmul@temp+1,w
 14500  1644  00AE               	movwf	??___flmul
 14501  1645  01AF               	clrf	??___flmul+1
 14502  1646  01B0               	clrf	??___flmul+2
 14503  1647  01B1               	clrf	??___flmul+3
 14504  1648  0831               	movf	??___flmul+3,w
 14505  1649  00BD               	movwf	___flmul@prod+3
 14506  164A  0830               	movf	??___flmul+2,w
 14507  164B  00BC               	movwf	___flmul@prod+2
 14508  164C  082F               	movf	??___flmul+1,w
 14509  164D  00BB               	movwf	___flmul@prod+1
 14510  164E  082E               	movf	??___flmul,w
 14511  164F  00BA               	movwf	___flmul@prod
 14512  1650  0827               	movf	___flmul@b+1,w
 14513  1651  00AE               	movwf	??___flmul
 14514  1652  082E               	movf	??___flmul,w
 14515  1653  00F1               	movwf	__Umul8_16@multiplicand
 14516  1654  082B               	movf	___flmul@a+1,w
 14517  1655  31B7  27E1  3195   	fcall	__Umul8_16
 14518  1658  0872               	movf	?__Umul8_16+1,w
 14519  1659  0020               	movlb	0	; select bank0
 14520  165A  00BF               	movwf	___flmul@temp+1
 14521  165B  0871               	movf	?__Umul8_16,w
 14522  165C  00BE               	movwf	___flmul@temp
 14523  165D  083E               	movf	___flmul@temp,w
 14524  165E  00AE               	movwf	??___flmul
 14525  165F  01AF               	clrf	??___flmul+1
 14526  1660  01B0               	clrf	??___flmul+2
 14527  1661  01B1               	clrf	??___flmul+3
 14528  1662  082E               	movf	??___flmul,w
 14529  1663  07B4               	addwf	___flmul@grs,f
 14530  1664  082F               	movf	??___flmul+1,w
 14531  1665  3DB5               	addwfc	___flmul@grs+1,f
 14532  1666  0830               	movf	??___flmul+2,w
 14533  1667  3DB6               	addwfc	___flmul@grs+2,f
 14534  1668  0831               	movf	??___flmul+3,w
 14535  1669  3DB7               	addwfc	___flmul@grs+3,f
 14536  166A  083F               	movf	___flmul@temp+1,w
 14537  166B  00AE               	movwf	??___flmul
 14538  166C  01AF               	clrf	??___flmul+1
 14539  166D  01B0               	clrf	??___flmul+2
 14540  166E  01B1               	clrf	??___flmul+3
 14541  166F  082E               	movf	??___flmul,w
 14542  1670  07BA               	addwf	___flmul@prod,f
 14543  1671  082F               	movf	??___flmul+1,w
 14544  1672  3DBB               	addwfc	___flmul@prod+1,f
 14545  1673  0830               	movf	??___flmul+2,w
 14546  1674  3DBC               	addwfc	___flmul@prod+2,f
 14547  1675  0831               	movf	??___flmul+3,w
 14548  1676  3DBD               	addwfc	___flmul@prod+3,f
 14549  1677  0828               	movf	___flmul@b+2,w
 14550  1678  00AE               	movwf	??___flmul
 14551  1679  082E               	movf	??___flmul,w
 14552  167A  00F1               	movwf	__Umul8_16@multiplicand
 14553  167B  082A               	movf	___flmul@a,w
 14554  167C  31B7  27E1  3195   	fcall	__Umul8_16
 14555  167F  0872               	movf	?__Umul8_16+1,w
 14556  1680  0020               	movlb	0	; select bank0
 14557  1681  00BF               	movwf	___flmul@temp+1
 14558  1682  0871               	movf	?__Umul8_16,w
 14559  1683  00BE               	movwf	___flmul@temp
 14560  1684  083E               	movf	___flmul@temp,w
 14561  1685  00AE               	movwf	??___flmul
 14562  1686  01AF               	clrf	??___flmul+1
 14563  1687  01B0               	clrf	??___flmul+2
 14564  1688  01B1               	clrf	??___flmul+3
 14565  1689  082E               	movf	??___flmul,w
 14566  168A  07B4               	addwf	___flmul@grs,f
 14567  168B  082F               	movf	??___flmul+1,w
 14568  168C  3DB5               	addwfc	___flmul@grs+1,f
 14569  168D  0830               	movf	??___flmul+2,w
 14570  168E  3DB6               	addwfc	___flmul@grs+2,f
 14571  168F  0831               	movf	??___flmul+3,w
 14572  1690  3DB7               	addwfc	___flmul@grs+3,f
 14573  1691  083F               	movf	___flmul@temp+1,w
 14574  1692  00AE               	movwf	??___flmul
 14575  1693  01AF               	clrf	??___flmul+1
 14576  1694  01B0               	clrf	??___flmul+2
 14577  1695  01B1               	clrf	??___flmul+3
 14578  1696  082E               	movf	??___flmul,w
 14579  1697  07BA               	addwf	___flmul@prod,f
 14580  1698  082F               	movf	??___flmul+1,w
 14581  1699  3DBB               	addwfc	___flmul@prod+1,f
 14582  169A  0830               	movf	??___flmul+2,w
 14583  169B  3DBC               	addwfc	___flmul@prod+2,f
 14584  169C  0831               	movf	??___flmul+3,w
 14585  169D  3DBD               	addwfc	___flmul@prod+3,f
 14586  169E  3008               	movlw	8
 14587  169F                     u6695:	
 14588  169F  35B4               	lslf	___flmul@grs,f
 14589  16A0  0DB5               	rlf	___flmul@grs+1,f
 14590  16A1  0DB6               	rlf	___flmul@grs+2,f
 14591  16A2  0DB7               	rlf	___flmul@grs+3,f
 14592  16A3  0B89               	decfsz	9,f
 14593  16A4  2E9F               	goto	u6695
 14594  16A5  0827               	movf	___flmul@b+1,w
 14595  16A6  00AE               	movwf	??___flmul
 14596  16A7  082E               	movf	??___flmul,w
 14597  16A8  00F1               	movwf	__Umul8_16@multiplicand
 14598  16A9  082A               	movf	___flmul@a,w
 14599  16AA  31B7  27E1  3195   	fcall	__Umul8_16
 14600  16AD  0872               	movf	?__Umul8_16+1,w
 14601  16AE  0020               	movlb	0	; select bank0
 14602  16AF  00BF               	movwf	___flmul@temp+1
 14603  16B0  0871               	movf	?__Umul8_16,w
 14604  16B1  00BE               	movwf	___flmul@temp
 14605  16B2  083E               	movf	___flmul@temp,w
 14606  16B3  07B4               	addwf	___flmul@grs,f
 14607  16B4  083F               	movf	___flmul@temp+1,w
 14608  16B5  3DB5               	addwfc	___flmul@grs+1,f
 14609  16B6  3000               	movlw	0
 14610  16B7  3DB6               	addwfc	___flmul@grs+2,f
 14611  16B8  3DB7               	addwfc	___flmul@grs+3,f
 14612  16B9  0826               	movf	___flmul@b,w
 14613  16BA  00AE               	movwf	??___flmul
 14614  16BB  082E               	movf	??___flmul,w
 14615  16BC  00F1               	movwf	__Umul8_16@multiplicand
 14616  16BD  082B               	movf	___flmul@a+1,w
 14617  16BE  31B7  27E1  3195   	fcall	__Umul8_16
 14618  16C1  0872               	movf	?__Umul8_16+1,w
 14619  16C2  0020               	movlb	0	; select bank0
 14620  16C3  00BF               	movwf	___flmul@temp+1
 14621  16C4  0871               	movf	?__Umul8_16,w
 14622  16C5  00BE               	movwf	___flmul@temp
 14623  16C6  083E               	movf	___flmul@temp,w
 14624  16C7  07B4               	addwf	___flmul@grs,f
 14625  16C8  083F               	movf	___flmul@temp+1,w
 14626  16C9  3DB5               	addwfc	___flmul@grs+1,f
 14627  16CA  3000               	movlw	0
 14628  16CB  3DB6               	addwfc	___flmul@grs+2,f
 14629  16CC  3DB7               	addwfc	___flmul@grs+3,f
 14630  16CD  3008               	movlw	8
 14631  16CE                     u6705:	
 14632  16CE  35B4               	lslf	___flmul@grs,f
 14633  16CF  0DB5               	rlf	___flmul@grs+1,f
 14634  16D0  0DB6               	rlf	___flmul@grs+2,f
 14635  16D1  0DB7               	rlf	___flmul@grs+3,f
 14636  16D2  0B89               	decfsz	9,f
 14637  16D3  2ECE               	goto	u6705
 14638  16D4  0826               	movf	___flmul@b,w
 14639  16D5  00AE               	movwf	??___flmul
 14640  16D6  082E               	movf	??___flmul,w
 14641  16D7  00F1               	movwf	__Umul8_16@multiplicand
 14642  16D8  082A               	movf	___flmul@a,w
 14643  16D9  31B7  27E1  3195   	fcall	__Umul8_16
 14644  16DC  0872               	movf	?__Umul8_16+1,w
 14645  16DD  0020               	movlb	0	; select bank0
 14646  16DE  00BF               	movwf	___flmul@temp+1
 14647  16DF  0871               	movf	?__Umul8_16,w
 14648  16E0  00BE               	movwf	___flmul@temp
 14649  16E1  083E               	movf	___flmul@temp,w
 14650  16E2  07B4               	addwf	___flmul@grs,f
 14651  16E3  083F               	movf	___flmul@temp+1,w
 14652  16E4  3DB5               	addwfc	___flmul@grs+1,f
 14653  16E5  3000               	movlw	0
 14654  16E6  3DB6               	addwfc	___flmul@grs+2,f
 14655  16E7  3DB7               	addwfc	___flmul@grs+3,f
 14656  16E8  0827               	movf	___flmul@b+1,w
 14657  16E9  00AE               	movwf	??___flmul
 14658  16EA  082E               	movf	??___flmul,w
 14659  16EB  00F1               	movwf	__Umul8_16@multiplicand
 14660  16EC  082C               	movf	___flmul@a+2,w
 14661  16ED  31B7  27E1  3195   	fcall	__Umul8_16
 14662  16F0  0872               	movf	?__Umul8_16+1,w
 14663  16F1  0020               	movlb	0	; select bank0
 14664  16F2  00BF               	movwf	___flmul@temp+1
 14665  16F3  0871               	movf	?__Umul8_16,w
 14666  16F4  00BE               	movwf	___flmul@temp
 14667  16F5  083E               	movf	___flmul@temp,w
 14668  16F6  07BA               	addwf	___flmul@prod,f
 14669  16F7  083F               	movf	___flmul@temp+1,w
 14670  16F8  3DBB               	addwfc	___flmul@prod+1,f
 14671  16F9  3000               	movlw	0
 14672  16FA  3DBC               	addwfc	___flmul@prod+2,f
 14673  16FB  3DBD               	addwfc	___flmul@prod+3,f
 14674  16FC  0828               	movf	___flmul@b+2,w
 14675  16FD  00AE               	movwf	??___flmul
 14676  16FE  082E               	movf	??___flmul,w
 14677  16FF  00F1               	movwf	__Umul8_16@multiplicand
 14678  1700  082B               	movf	___flmul@a+1,w
 14679  1701  31B7  27E1  3195   	fcall	__Umul8_16
 14680  1704  0872               	movf	?__Umul8_16+1,w
 14681  1705  0020               	movlb	0	; select bank0
 14682  1706  00BF               	movwf	___flmul@temp+1
 14683  1707  0871               	movf	?__Umul8_16,w
 14684  1708  00BE               	movwf	___flmul@temp
 14685  1709  083E               	movf	___flmul@temp,w
 14686  170A  07BA               	addwf	___flmul@prod,f
 14687  170B  083F               	movf	___flmul@temp+1,w
 14688  170C  3DBB               	addwfc	___flmul@prod+1,f
 14689  170D  3000               	movlw	0
 14690  170E  3DBC               	addwfc	___flmul@prod+2,f
 14691  170F  3DBD               	addwfc	___flmul@prod+3,f
 14692  1710  0828               	movf	___flmul@b+2,w
 14693  1711  00AE               	movwf	??___flmul
 14694  1712  082E               	movf	??___flmul,w
 14695  1713  00F1               	movwf	__Umul8_16@multiplicand
 14696  1714  082C               	movf	___flmul@a+2,w
 14697  1715  31B7  27E1  3195   	fcall	__Umul8_16
 14698  1718  0872               	movf	?__Umul8_16+1,w
 14699  1719  0020               	movlb	0	; select bank0
 14700  171A  00BF               	movwf	___flmul@temp+1
 14701  171B  0871               	movf	?__Umul8_16,w
 14702  171C  00BE               	movwf	___flmul@temp
 14703  171D  083E               	movf	___flmul@temp,w
 14704  171E  00AE               	movwf	??___flmul
 14705  171F  083F               	movf	___flmul@temp+1,w
 14706  1720  00AF               	movwf	??___flmul+1
 14707  1721  01B0               	clrf	??___flmul+2
 14708  1722  01B1               	clrf	??___flmul+3
 14709  1723  3008               	movlw	8
 14710  1724                     u6715:	
 14711  1724  35AE               	lslf	??___flmul,f
 14712  1725  0DAF               	rlf	??___flmul+1,f
 14713  1726  0DB0               	rlf	??___flmul+2,f
 14714  1727  0DB1               	rlf	??___flmul+3,f
 14715  1728  0B89               	decfsz	9,f
 14716  1729  2F24               	goto	u6715
 14717  172A  082E               	movf	??___flmul,w
 14718  172B  07BA               	addwf	___flmul@prod,f
 14719  172C  082F               	movf	??___flmul+1,w
 14720  172D  3DBB               	addwfc	___flmul@prod+1,f
 14721  172E  0830               	movf	??___flmul+2,w
 14722  172F  3DBC               	addwfc	___flmul@prod+2,f
 14723  1730  0831               	movf	??___flmul+3,w
 14724  1731  3DBD               	addwfc	___flmul@prod+3,f
 14725  1732  0834               	movf	___flmul@grs,w
 14726  1733  00AE               	movwf	??___flmul
 14727  1734  0835               	movf	___flmul@grs+1,w
 14728  1735  00AF               	movwf	??___flmul+1
 14729  1736  0836               	movf	___flmul@grs+2,w
 14730  1737  00B0               	movwf	??___flmul+2
 14731  1738  0837               	movf	___flmul@grs+3,w
 14732  1739  00B1               	movwf	??___flmul+3
 14733  173A  3018               	movlw	24
 14734  173B                     u6725:	
 14735  173B  36B1               	lsrf	??___flmul+3,f
 14736  173C  0CB0               	rrf	??___flmul+2,f
 14737  173D  0CAF               	rrf	??___flmul+1,f
 14738  173E  0CAE               	rrf	??___flmul,f
 14739  173F  0B89               	decfsz	9,f
 14740  1740  2F3B               	goto	u6725
 14741  1741  082E               	movf	??___flmul,w
 14742  1742  07BA               	addwf	___flmul@prod,f
 14743  1743  082F               	movf	??___flmul+1,w
 14744  1744  3DBB               	addwfc	___flmul@prod+1,f
 14745  1745  0830               	movf	??___flmul+2,w
 14746  1746  3DBC               	addwfc	___flmul@prod+2,f
 14747  1747  0831               	movf	??___flmul+3,w
 14748  1748  3DBD               	addwfc	___flmul@prod+3,f
 14749  1749  3008               	movlw	8
 14750  174A                     u6735:	
 14751  174A  35B4               	lslf	___flmul@grs,f
 14752  174B  0DB5               	rlf	___flmul@grs+1,f
 14753  174C  0DB6               	rlf	___flmul@grs+2,f
 14754  174D  0DB7               	rlf	___flmul@grs+3,f
 14755  174E  0B89               	decfsz	9,f
 14756  174F  2F4A               	goto	u6735
 14757  1750  0839               	movf	___flmul@bexp,w
 14758  1751  0738               	addwf	___flmul@aexp,w
 14759  1752  00AE               	movwf	??___flmul
 14760  1753  01AF               	clrf	??___flmul+1
 14761  1754  0DAF               	rlf	??___flmul+1,f
 14762  1755  082E               	movf	??___flmul,w
 14763  1756  3E82               	addlw	130
 14764  1757  00BE               	movwf	___flmul@temp
 14765  1758  30FF               	movlw	255
 14766  1759  3D2F               	addwfc	??___flmul+1,w
 14767  175A  00BF               	movwf	___flmul@temp+1
 14768  175B                     l4957:	
 14769  175B  1BBC               	btfsc	___flmul@prod+2,7
 14770  175C  2F72               	goto	l4959
 14771  175D  3001               	movlw	1
 14772  175E                     u6745:	
 14773  175E  35BA               	lslf	___flmul@prod,f
 14774  175F  0DBB               	rlf	___flmul@prod+1,f
 14775  1760  0DBC               	rlf	___flmul@prod+2,f
 14776  1761  0DBD               	rlf	___flmul@prod+3,f
 14777  1762  0B89               	decfsz	9,f
 14778  1763  2F5E               	goto	u6745
 14779  1764  1BB7               	btfsc	___flmul@grs+3,7
 14780  1765  143A               	bsf	___flmul@prod,0
 14781  1766  3001               	movlw	1
 14782  1767                     u6765:	
 14783  1767  35B4               	lslf	___flmul@grs,f
 14784  1768  0DB5               	rlf	___flmul@grs+1,f
 14785  1769  0DB6               	rlf	___flmul@grs+2,f
 14786  176A  0DB7               	rlf	___flmul@grs+3,f
 14787  176B  0B89               	decfsz	9,f
 14788  176C  2F67               	goto	u6765
 14789  176D  30FF               	movlw	255
 14790  176E  07BE               	addwf	___flmul@temp,f
 14791  176F  30FF               	movlw	255
 14792  1770  3DBF               	addwfc	___flmul@temp+1,f
 14793  1771  2F5B               	goto	l4957
 14794  1772                     l4959:	
 14795  1772  01B8               	clrf	___flmul@aexp
 14796  1773  1FB7               	btfss	___flmul@grs+3,7
 14797  1774  2F8B               	goto	l4969
 14798  1775  30FF               	movlw	255
 14799  1776  0534               	andwf	___flmul@grs,w
 14800  1777  00AE               	movwf	??___flmul
 14801  1778  30FF               	movlw	255
 14802  1779  0535               	andwf	___flmul@grs+1,w
 14803  177A  00AF               	movwf	??___flmul+1
 14804  177B  30FF               	movlw	255
 14805  177C  0536               	andwf	___flmul@grs+2,w
 14806  177D  00B0               	movwf	??___flmul+2
 14807  177E  307F               	movlw	127
 14808  177F  0537               	andwf	___flmul@grs+3,w
 14809  1780  00B1               	movwf	??___flmul+3
 14810  1781  0831               	movf	??___flmul+3,w
 14811  1782  0430               	iorwf	??___flmul+2,w
 14812  1783  042F               	iorwf	??___flmul+1,w
 14813  1784  042E               	iorwf	??___flmul,w
 14814  1785  1903               	skipnz
 14815  1786  183A               	btfsc	___flmul@prod,0
 14816  1787  2F89               	goto	l4965
 14817  1788  2F8B               	goto	l4969
 14818  1789                     l4965:	
 14819  1789  01B8               	clrf	___flmul@aexp
 14820  178A  0AB8               	incf	___flmul@aexp,f
 14821  178B                     l4969:	
 14822  178B  0838               	movf	___flmul@aexp,w
 14823  178C  1903               	btfsc	3,2
 14824  178D  2FB4               	goto	l4979
 14825  178E  3001               	movlw	1
 14826  178F  07BA               	addwf	___flmul@prod,f
 14827  1790  3000               	movlw	0
 14828  1791  3DBB               	addwfc	___flmul@prod+1,f
 14829  1792  3000               	movlw	0
 14830  1793  3DBC               	addwfc	___flmul@prod+2,f
 14831  1794  3000               	movlw	0
 14832  1795  3DBD               	addwfc	___flmul@prod+3,f
 14833  1796  1C3D               	btfss	___flmul@prod+3,0
 14834  1797  2FB4               	goto	l4979
 14835  1798  083A               	movf	___flmul@prod,w
 14836  1799  00AE               	movwf	??___flmul
 14837  179A  083B               	movf	___flmul@prod+1,w
 14838  179B  00AF               	movwf	??___flmul+1
 14839  179C  083C               	movf	___flmul@prod+2,w
 14840  179D  00B0               	movwf	??___flmul+2
 14841  179E  083D               	movf	___flmul@prod+3,w
 14842  179F  00B1               	movwf	??___flmul+3
 14843  17A0  3001               	movlw	1
 14844  17A1  00B2               	movwf	??___flmul+4
 14845  17A2                     u6835:	
 14846  17A2  37B1               	asrf	??___flmul+3,f
 14847  17A3  0CB0               	rrf	??___flmul+2,f
 14848  17A4  0CAF               	rrf	??___flmul+1,f
 14849  17A5  0CAE               	rrf	??___flmul,f
 14850  17A6  0BB2               	decfsz	??___flmul+4,f
 14851  17A7  2FA2               	goto	u6835
 14852  17A8  0831               	movf	??___flmul+3,w
 14853  17A9  00BD               	movwf	___flmul@prod+3
 14854  17AA  0830               	movf	??___flmul+2,w
 14855  17AB  00BC               	movwf	___flmul@prod+2
 14856  17AC  082F               	movf	??___flmul+1,w
 14857  17AD  00BB               	movwf	___flmul@prod+1
 14858  17AE  082E               	movf	??___flmul,w
 14859  17AF  00BA               	movwf	___flmul@prod
 14860  17B0  3001               	movlw	1
 14861  17B1  07BE               	addwf	___flmul@temp,f
 14862  17B2  3000               	movlw	0
 14863  17B3  3DBF               	addwfc	___flmul@temp+1,f
 14864  17B4                     l4979:	
 14865  17B4  083F               	movf	___flmul@temp+1,w
 14866  17B5  3A80               	xorlw	128
 14867  17B6  00AE               	movwf	??___flmul
 14868  17B7  3080               	movlw	128
 14869  17B8  022E               	subwf	??___flmul,w
 14870  17B9  1D03               	skipz
 14871  17BA  2FBD               	goto	u6845
 14872  17BB  30FF               	movlw	255
 14873  17BC  023E               	subwf	___flmul@temp,w
 14874  17BD                     u6845:	
 14875  17BD  1C03               	skipc
 14876  17BE  2FC9               	goto	l4983
 14877  17BF  307F               	movlw	127
 14878  17C0  0020               	movlb	0	; select bank0
 14879  17C1  00BD               	movwf	___flmul@prod+3
 14880  17C2  3080               	movlw	128
 14881  17C3  00BC               	movwf	___flmul@prod+2
 14882  17C4  3000               	movlw	0
 14883  17C5  00BB               	movwf	___flmul@prod+1
 14884  17C6  3000               	movlw	0
 14885  17C7  00BA               	movwf	___flmul@prod
 14886  17C8  2FF3               	goto	l1228
 14887  17C9                     l4983:	
 14888  17C9  0020               	movlb	0	; select bank0
 14889  17CA  083F               	movf	___flmul@temp+1,w
 14890  17CB  3A80               	xorlw	128
 14891  17CC  00AE               	movwf	??___flmul
 14892  17CD  3080               	movlw	128
 14893  17CE  022E               	subwf	??___flmul,w
 14894  17CF  1D03               	skipz
 14895  17D0  2FD3               	goto	u6855
 14896  17D1  3001               	movlw	1
 14897  17D2  023E               	subwf	___flmul@temp,w
 14898  17D3                     u6855:	
 14899  17D3  1803               	skipnc
 14900  17D4  2FE0               	goto	l4989
 14901  17D5  3000               	movlw	0
 14902  17D6  0020               	movlb	0	; select bank0
 14903  17D7  00BD               	movwf	___flmul@prod+3
 14904  17D8  3000               	movlw	0
 14905  17D9  00BC               	movwf	___flmul@prod+2
 14906  17DA  3000               	movlw	0
 14907  17DB  00BB               	movwf	___flmul@prod+1
 14908  17DC  3000               	movlw	0
 14909  17DD  00BA               	movwf	___flmul@prod
 14910  17DE  01B3               	clrf	___flmul@sign
 14911  17DF  2FF3               	goto	l1228
 14912  17E0                     l4989:	
 14913  17E0  0020               	movlb	0	; select bank0
 14914  17E1  083E               	movf	___flmul@temp,w
 14915  17E2  00AE               	movwf	??___flmul
 14916  17E3  082E               	movf	??___flmul,w
 14917  17E4  00B9               	movwf	___flmul@bexp
 14918  17E5  30FF               	movlw	255
 14919  17E6  05BA               	andwf	___flmul@prod,f
 14920  17E7  30FF               	movlw	255
 14921  17E8  05BB               	andwf	___flmul@prod+1,f
 14922  17E9  307F               	movlw	127
 14923  17EA  05BC               	andwf	___flmul@prod+2,f
 14924  17EB  3000               	movlw	0
 14925  17EC  05BD               	andwf	___flmul@prod+3,f
 14926  17ED  1839               	btfsc	___flmul@bexp,0
 14927  17EE  17BC               	bsf	___flmul@prod+2,7
 14928  17EF  3639               	lsrf	___flmul@bexp,w
 14929  17F0  00AE               	movwf	??___flmul
 14930  17F1  082E               	movf	??___flmul,w
 14931  17F2  00BD               	movwf	___flmul@prod+3
 14932  17F3                     l1228:	
 14933  17F3  0833               	movf	___flmul@sign,w
 14934  17F4  00AE               	movwf	??___flmul
 14935  17F5  082E               	movf	??___flmul,w
 14936  17F6  04BD               	iorwf	___flmul@prod+3,f
 14937  17F7  083D               	movf	___flmul@prod+3,w
 14938  17F8  00A9               	movwf	?___flmul+3
 14939  17F9  083C               	movf	___flmul@prod+2,w
 14940  17FA  00A8               	movwf	?___flmul+2
 14941  17FB  083B               	movf	___flmul@prod+1,w
 14942  17FC  00A7               	movwf	?___flmul+1
 14943  17FD  083A               	movf	___flmul@prod,w
 14944  17FE  00A6               	movwf	?___flmul
 14945  17FF  0008               	return
 14946  1800                     __end_of___flmul:	
 14947                           
 14948                           	psect	text47
 14949  37E1                     __ptext47:	
 14950 ;; *************** function __Umul8_16 *****************
 14951 ;; Defined at:
 14952 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 14953 ;; Parameters:    Size  Location     Type
 14954 ;;  multiplier      1    wreg     unsigned char 
 14955 ;;  multiplicand    1    1[COMMON] unsigned char 
 14956 ;; Auto vars:     Size  Location     Type
 14957 ;;  multiplier      1    9[COMMON] unsigned char 
 14958 ;;  word_mpld       2    7[COMMON] unsigned int 
 14959 ;;  product         2    5[COMMON] unsigned int 
 14960 ;; Return value:  Size  Location     Type
 14961 ;;                  2    1[COMMON] unsigned int 
 14962 ;; Registers used:
 14963 ;;		wreg, status,2, status,0
 14964 ;; Tracked objects:
 14965 ;;		On entry : 0/0
 14966 ;;		On exit  : 0/0
 14967 ;;		Unchanged: 0/0
 14968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14970 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14972 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14973 ;;Total ram usage:        9 bytes
 14974 ;; Hardware stack levels used:    1
 14975 ;; Hardware stack levels required when called:    1
 14976 ;; This function calls:
 14977 ;;		Nothing
 14978 ;; This function is called by:
 14979 ;;		___flmul
 14980 ;; This function uses a non-reentrant model
 14981 ;;
 14982                           
 14983                           
 14984                           ;psect for function __Umul8_16
 14985  37E1                     __Umul8_16:	
 14986                           
 14987                           ;incstack = 0
 14988                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 14989                           ;__Umul8_16@multiplier stored from wreg
 14990  37E1  00F9               	movwf	__Umul8_16@multiplier
 14991  37E2  01F5               	clrf	__Umul8_16@product
 14992  37E3  01F6               	clrf	__Umul8_16@product+1
 14993  37E4  0871               	movf	__Umul8_16@multiplicand,w
 14994  37E5  00F3               	movwf	??__Umul8_16
 14995  37E6  01F4               	clrf	??__Umul8_16+1
 14996  37E7  0873               	movf	??__Umul8_16,w
 14997  37E8  00F7               	movwf	__Umul8_16@word_mpld
 14998  37E9  0874               	movf	??__Umul8_16+1,w
 14999  37EA  00F8               	movwf	__Umul8_16@word_mpld+1
 15000  37EB                     l4311:	
 15001  37EB  1C79               	btfss	__Umul8_16@multiplier,0
 15002  37EC  2FF1               	goto	l1438
 15003  37ED  0877               	movf	__Umul8_16@word_mpld,w
 15004  37EE  07F5               	addwf	__Umul8_16@product,f
 15005  37EF  0878               	movf	__Umul8_16@word_mpld+1,w
 15006  37F0  3DF6               	addwfc	__Umul8_16@product+1,f
 15007  37F1                     l1438:	
 15008  37F1  3001               	movlw	1
 15009  37F2                     u5215:	
 15010  37F2  35F7               	lslf	__Umul8_16@word_mpld,f
 15011  37F3  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 15012  37F4  0B89               	decfsz	9,f
 15013  37F5  2FF2               	goto	u5215
 15014  37F6  1003               	clrc
 15015  37F7  0CF9               	rrf	__Umul8_16@multiplier,f
 15016  37F8  0879               	movf	__Umul8_16@multiplier,w
 15017  37F9  1D03               	btfss	3,2
 15018  37FA  2FEB               	goto	l4311
 15019  37FB  0876               	movf	__Umul8_16@product+1,w
 15020  37FC  00F2               	movwf	?__Umul8_16+1
 15021  37FD  0875               	movf	__Umul8_16@product,w
 15022  37FE  00F1               	movwf	?__Umul8_16
 15023  37FF  0008               	return
 15024  3800                     __end_of__Umul8_16:	
 15025                           
 15026                           	psect	text48
 15027  2CEB                     __ptext48:	
 15028 ;; *************** function ___flge *****************
 15029 ;; Defined at:
 15030 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 15031 ;; Parameters:    Size  Location     Type
 15032 ;;  ff1             4   58[BANK0 ] unsigned int 
 15033 ;;  ff2             4   62[BANK0 ] unsigned int 
 15034 ;; Auto vars:     Size  Location     Type
 15035 ;;		None
 15036 ;; Return value:  Size  Location     Type
 15037 ;;		None               void
 15038 ;; Registers used:
 15039 ;;		wreg, status,2, status,0
 15040 ;; Tracked objects:
 15041 ;;		On entry : 0/0
 15042 ;;		On exit  : 0/0
 15043 ;;		Unchanged: 0/0
 15044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15045 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15047 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15048 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15049 ;;Total ram usage:       12 bytes
 15050 ;; Hardware stack levels used:    1
 15051 ;; Hardware stack levels required when called:    1
 15052 ;; This function calls:
 15053 ;;		Nothing
 15054 ;; This function is called by:
 15055 ;;		_setShortCircuitProtection
 15056 ;;		_efgtoa
 15057 ;; This function uses a non-reentrant model
 15058 ;;
 15059                           
 15060                           
 15061                           ;psect for function ___flge
 15062  2CEB                     ___flge:	
 15063                           
 15064                           ;incstack = 0
 15065                           ; Regs used in ___flge: [wreg+status,2+status,0]
 15066  2CEB  3000               	movlw	0
 15067  2CEC  0020               	movlb	0	; select bank0
 15068  2CED  055A               	andwf	___flge@ff1,w
 15069  2CEE  00E2               	movwf	??___flge
 15070  2CEF  3000               	movlw	0
 15071  2CF0  055B               	andwf	___flge@ff1+1,w
 15072  2CF1  00E3               	movwf	??___flge+1
 15073  2CF2  3080               	movlw	128
 15074  2CF3  055C               	andwf	___flge@ff1+2,w
 15075  2CF4  00E4               	movwf	??___flge+2
 15076  2CF5  307F               	movlw	127
 15077  2CF6  055D               	andwf	___flge@ff1+3,w
 15078  2CF7  00E5               	movwf	??___flge+3
 15079  2CF8  0865               	movf	??___flge+3,w
 15080  2CF9  0464               	iorwf	??___flge+2,w
 15081  2CFA  0463               	iorwf	??___flge+1,w
 15082  2CFB  0462               	iorwf	??___flge,w
 15083  2CFC  1D03               	skipz
 15084  2CFD  2D06               	goto	l997
 15085  2CFE  3000               	movlw	0
 15086  2CFF  00DD               	movwf	___flge@ff1+3
 15087  2D00  3000               	movlw	0
 15088  2D01  00DC               	movwf	___flge@ff1+2
 15089  2D02  3000               	movlw	0
 15090  2D03  00DB               	movwf	___flge@ff1+1
 15091  2D04  3000               	movlw	0
 15092  2D05  00DA               	movwf	___flge@ff1
 15093  2D06                     l997:	
 15094  2D06  3000               	movlw	0
 15095  2D07  055E               	andwf	___flge@ff2,w
 15096  2D08  00E2               	movwf	??___flge
 15097  2D09  3000               	movlw	0
 15098  2D0A  055F               	andwf	___flge@ff2+1,w
 15099  2D0B  00E3               	movwf	??___flge+1
 15100  2D0C  3080               	movlw	128
 15101  2D0D  0560               	andwf	___flge@ff2+2,w
 15102  2D0E  00E4               	movwf	??___flge+2
 15103  2D0F  307F               	movlw	127
 15104  2D10  0561               	andwf	___flge@ff2+3,w
 15105  2D11  00E5               	movwf	??___flge+3
 15106  2D12  0865               	movf	??___flge+3,w
 15107  2D13  0464               	iorwf	??___flge+2,w
 15108  2D14  0463               	iorwf	??___flge+1,w
 15109  2D15  0462               	iorwf	??___flge,w
 15110  2D16  1D03               	skipz
 15111  2D17  2D20               	goto	l4619
 15112  2D18  3000               	movlw	0
 15113  2D19  00E1               	movwf	___flge@ff2+3
 15114  2D1A  3000               	movlw	0
 15115  2D1B  00E0               	movwf	___flge@ff2+2
 15116  2D1C  3000               	movlw	0
 15117  2D1D  00DF               	movwf	___flge@ff2+1
 15118  2D1E  3000               	movlw	0
 15119  2D1F  00DE               	movwf	___flge@ff2
 15120  2D20                     l4619:	
 15121  2D20  1FDD               	btfss	___flge@ff1+3,7
 15122  2D21  2D3A               	goto	l4623
 15123  2D22  3000               	movlw	0
 15124  2D23  00E2               	movwf	??___flge
 15125  2D24  3000               	movlw	0
 15126  2D25  00E3               	movwf	??___flge+1
 15127  2D26  3000               	movlw	0
 15128  2D27  00E4               	movwf	??___flge+2
 15129  2D28  3080               	movlw	128
 15130  2D29  00E5               	movwf	??___flge+3
 15131  2D2A  085A               	movf	___flge@ff1,w
 15132  2D2B  02E2               	subwf	??___flge,f
 15133  2D2C  085B               	movf	___flge@ff1+1,w
 15134  2D2D  3BE3               	subwfb	??___flge+1,f
 15135  2D2E  085C               	movf	___flge@ff1+2,w
 15136  2D2F  3BE4               	subwfb	??___flge+2,f
 15137  2D30  085D               	movf	___flge@ff1+3,w
 15138  2D31  3BE5               	subwfb	??___flge+3,f
 15139  2D32  0865               	movf	??___flge+3,w
 15140  2D33  00DD               	movwf	___flge@ff1+3
 15141  2D34  0864               	movf	??___flge+2,w
 15142  2D35  00DC               	movwf	___flge@ff1+2
 15143  2D36  0863               	movf	??___flge+1,w
 15144  2D37  00DB               	movwf	___flge@ff1+1
 15145  2D38  0862               	movf	??___flge,w
 15146  2D39  00DA               	movwf	___flge@ff1
 15147  2D3A                     l4623:	
 15148  2D3A  1FE1               	btfss	___flge@ff2+3,7
 15149  2D3B  2D54               	goto	l1000
 15150  2D3C  3000               	movlw	0
 15151  2D3D  00E2               	movwf	??___flge
 15152  2D3E  3000               	movlw	0
 15153  2D3F  00E3               	movwf	??___flge+1
 15154  2D40  3000               	movlw	0
 15155  2D41  00E4               	movwf	??___flge+2
 15156  2D42  3080               	movlw	128
 15157  2D43  00E5               	movwf	??___flge+3
 15158  2D44  085E               	movf	___flge@ff2,w
 15159  2D45  02E2               	subwf	??___flge,f
 15160  2D46  085F               	movf	___flge@ff2+1,w
 15161  2D47  3BE3               	subwfb	??___flge+1,f
 15162  2D48  0860               	movf	___flge@ff2+2,w
 15163  2D49  3BE4               	subwfb	??___flge+2,f
 15164  2D4A  0861               	movf	___flge@ff2+3,w
 15165  2D4B  3BE5               	subwfb	??___flge+3,f
 15166  2D4C  0865               	movf	??___flge+3,w
 15167  2D4D  00E1               	movwf	___flge@ff2+3
 15168  2D4E  0864               	movf	??___flge+2,w
 15169  2D4F  00E0               	movwf	___flge@ff2+2
 15170  2D50  0863               	movf	??___flge+1,w
 15171  2D51  00DF               	movwf	___flge@ff2+1
 15172  2D52  0862               	movf	??___flge,w
 15173  2D53  00DE               	movwf	___flge@ff2
 15174  2D54                     l1000:	
 15175  2D54  3080               	movlw	128
 15176  2D55  06DD               	xorwf	___flge@ff1+3,f
 15177  2D56  3080               	movlw	128
 15178  2D57  06E1               	xorwf	___flge@ff2+3,f
 15179  2D58  0861               	movf	___flge@ff2+3,w
 15180  2D59  025D               	subwf	___flge@ff1+3,w
 15181  2D5A  1D03               	skipz
 15182  2D5B  0008               	return
 15183  2D5C  0860               	movf	___flge@ff2+2,w
 15184  2D5D  025C               	subwf	___flge@ff1+2,w
 15185  2D5E  1D03               	skipz
 15186  2D5F  0008               	return
 15187  2D60  085F               	movf	___flge@ff2+1,w
 15188  2D61  025B               	subwf	___flge@ff1+1,w
 15189  2D62  1D03               	skipz
 15190  2D63  0008               	return
 15191  2D64  085E               	movf	___flge@ff2,w
 15192  2D65  025A               	subwf	___flge@ff1,w
 15193  2D66  0008               	return
 15194  2D67                     __end_of___flge:	
 15195                           
 15196                           	psect	text49
 15197  224B                     __ptext49:	
 15198 ;; *************** function _beginAFEcommunication *****************
 15199 ;; Defined at:
 15200 ;;		line 25 in file "BQ76920.c"
 15201 ;; Parameters:    Size  Location     Type
 15202 ;;		None
 15203 ;; Auto vars:     Size  Location     Type
 15204 ;;  i               2   13[BANK0 ] int 
 15205 ;;  commSuccess     2   11[BANK0 ] int 
 15206 ;; Return value:  Size  Location     Type
 15207 ;;                  2    0[BANK0 ] int 
 15208 ;; Registers used:
 15209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15210 ;; Tracked objects:
 15211 ;;		On entry : 0/0
 15212 ;;		On exit  : 0/0
 15213 ;;		Unchanged: 0/0
 15214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15215 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15216 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15217 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15218 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15219 ;;Total ram usage:       15 bytes
 15220 ;; Hardware stack levels used:    1
 15221 ;; Hardware stack levels required when called:    3
 15222 ;; This function calls:
 15223 ;;		_I2C_writeRegister
 15224 ;;		_readRegister
 15225 ;; This function is called by:
 15226 ;;		_statemachine
 15227 ;; This function uses a non-reentrant model
 15228 ;;
 15229                           
 15230                           
 15231                           ;psect for function _beginAFEcommunication
 15232  224B                     _beginAFEcommunication:	
 15233                           
 15234                           ;BQ76920.c: 27:     int commSuccess = 0;
 15235                           
 15236                           ;incstack = 0
 15237                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15238  224B  0020               	movlb	0	; select bank0
 15239  224C  01AB               	clrf	beginAFEcommunication@commSuccess
 15240  224D  01AC               	clrf	beginAFEcommunication@commSuccess+1
 15241                           
 15242                           ;BQ76920.c: 30:     for (int i = 0; i < 4; i++) {
 15243  224E  01AD               	clrf	beginAFEcommunication@i
 15244  224F  01AE               	clrf	beginAFEcommunication@i+1
 15245  2250                     l8025:	
 15246                           
 15247                           ;BQ76920.c: 31:         cellVoltages[i] = 0;
 15248  2250  0020               	movlb	0	; select bank0
 15249  2251  352D               	lslf	beginAFEcommunication@i,w
 15250  2252  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 15251  2253  0086               	movwf	6
 15252  2254  3001               	movlw	1	; select bank3/4
 15253  2255  0087               	movwf	7
 15254  2256  3000               	movlw	0
 15255  2257  3FC0               	movwi [0]fsr1
 15256  2258  3FC1               	movwi [1]fsr1
 15257                           
 15258                           ;BQ76920.c: 32:     }
 15259  2259  3001               	movlw	1
 15260  225A  07AD               	addwf	beginAFEcommunication@i,f
 15261  225B  3000               	movlw	0
 15262  225C  3DAE               	addwfc	beginAFEcommunication@i+1,f
 15263  225D  082E               	movf	beginAFEcommunication@i+1,w
 15264  225E  3A80               	xorlw	128
 15265  225F  00A2               	movwf	??_beginAFEcommunication
 15266  2260  3080               	movlw	128
 15267  2261  0222               	subwf	??_beginAFEcommunication,w
 15268  2262  1D03               	skipz
 15269  2263  2A66               	goto	u11815
 15270  2264  3004               	movlw	4
 15271  2265  022D               	subwf	beginAFEcommunication@i,w
 15272  2266                     u11815:	
 15273  2266  1C03               	skipc
 15274  2267  2A50               	goto	l8025
 15275                           
 15276                           ;BQ76920.c: 35:     I2C_writeRegister(0x18, 0x0B, 0x19);
 15277  2268  3018               	movlw	24
 15278  2269  00F5               	movwf	I2C_writeRegister@slaveAddress
 15279  226A  3000               	movlw	0
 15280  226B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15281  226C  300B               	movlw	11
 15282  226D  00F7               	movwf	I2C_writeRegister@regAddress
 15283  226E  3000               	movlw	0
 15284  226F  00F8               	movwf	I2C_writeRegister@regAddress+1
 15285  2270  3019               	movlw	25
 15286  2271  00F9               	movwf	I2C_writeRegister@data
 15287  2272  3000               	movlw	0
 15288  2273  00FA               	movwf	I2C_writeRegister@data+1
 15289  2274  31B7  27C3  31A2   	fcall	_I2C_writeRegister
 15290                           
 15291                           ;BQ76920.c: 37:     if (readRegister(0x18, 0x0B) == 0x19) {
 15292  2277  3018               	movlw	24
 15293  2278  00F5               	movwf	readRegister@slaveAddress
 15294  2279  3000               	movlw	0
 15295  227A  00F6               	movwf	readRegister@slaveAddress+1
 15296  227B  300B               	movlw	11
 15297  227C  00F7               	movwf	readRegister@regAddress
 15298  227D  3000               	movlw	0
 15299  227E  00F8               	movwf	readRegister@regAddress+1
 15300  227F  31A9  21AA  31A2   	fcall	_readRegister
 15301  2282  3019               	movlw	25
 15302  2283  0675               	xorwf	?_readRegister,w
 15303  2284  0476               	iorwf	?_readRegister+1,w
 15304  2285  1D03               	btfss	3,2
 15305  2286  2AF9               	goto	l368
 15306                           
 15307                           ;BQ76920.c: 38:         commSuccess = 1;
 15308  2287  3001               	movlw	1
 15309  2288  0020               	movlb	0	; select bank0
 15310  2289  00AB               	movwf	beginAFEcommunication@commSuccess
 15311  228A  3000               	movlw	0
 15312  228B  00AC               	movwf	beginAFEcommunication@commSuccess+1
 15313                           
 15314                           ;BQ76920.c: 42:         I2C_writeRegister(0x18, 0x04, 0x18);
 15315  228C  3018               	movlw	24
 15316  228D  00F5               	movwf	I2C_writeRegister@slaveAddress
 15317  228E  3000               	movlw	0
 15318  228F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15319  2290  3004               	movlw	4
 15320  2291  00F7               	movwf	I2C_writeRegister@regAddress
 15321  2292  3000               	movlw	0
 15322  2293  00F8               	movwf	I2C_writeRegister@regAddress+1
 15323  2294  3018               	movlw	24
 15324  2295  00F9               	movwf	I2C_writeRegister@data
 15325  2296  3000               	movlw	0
 15326  2297  00FA               	movwf	I2C_writeRegister@data+1
 15327  2298  31B7  27C3  31A2   	fcall	_I2C_writeRegister
 15328                           
 15329                           ;BQ76920.c: 43:         I2C_writeRegister(0x18, 0x05, 0x40);
 15330  229B  3018               	movlw	24
 15331  229C  00F5               	movwf	I2C_writeRegister@slaveAddress
 15332  229D  3000               	movlw	0
 15333  229E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15334  229F  3005               	movlw	5
 15335  22A0  00F7               	movwf	I2C_writeRegister@regAddress
 15336  22A1  3000               	movlw	0
 15337  22A2  00F8               	movwf	I2C_writeRegister@regAddress+1
 15338  22A3  3040               	movlw	64
 15339  22A4  00F9               	movwf	I2C_writeRegister@data
 15340  22A5  3000               	movlw	0
 15341  22A6  00FA               	movwf	I2C_writeRegister@data+1
 15342  22A7  31B7  27C3  31A2   	fcall	_I2C_writeRegister
 15343                           
 15344                           ;BQ76920.c: 46:         adcOffset = (signed int) readRegister(0x18, 0x51);
 15345  22AA  3018               	movlw	24
 15346  22AB  00F5               	movwf	readRegister@slaveAddress
 15347  22AC  3000               	movlw	0
 15348  22AD  00F6               	movwf	readRegister@slaveAddress+1
 15349  22AE  3051               	movlw	81
 15350  22AF  00F7               	movwf	readRegister@regAddress
 15351  22B0  3000               	movlw	0
 15352  22B1  00F8               	movwf	readRegister@regAddress+1
 15353  22B2  31A9  21AA  31A2   	fcall	_readRegister
 15354  22B5  0876               	movf	?_readRegister+1,w
 15355  22B6  0023               	movlb	3	; select bank3
 15356  22B7  00CD               	movwf	(_adcOffset+1)^(0+384)
 15357  22B8  0875               	movf	?_readRegister,w
 15358  22B9  00CC               	movwf	_adcOffset^(0+384)
 15359                           
 15360                           ;BQ76920.c: 47:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 15361  22BA  3018               	movlw	24
 15362  22BB  00F5               	movwf	readRegister@slaveAddress
 15363  22BC  3000               	movlw	0
 15364  22BD  00F6               	movwf	readRegister@slaveAddress+1
 15365  22BE  3059               	movlw	89
 15366  22BF  00F7               	movwf	readRegister@regAddress
 15367  22C0  3000               	movlw	0
 15368  22C1  00F8               	movwf	readRegister@regAddress+1
 15369  22C2  31A9  21AA  31A2   	fcall	_readRegister
 15370  22C5  0875               	movf	?_readRegister,w
 15371  22C6  0020               	movlb	0	; select bank0
 15372  22C7  00A2               	movwf	??_beginAFEcommunication
 15373  22C8  0876               	movf	?_readRegister+1,w
 15374  22C9  00A3               	movwf	??_beginAFEcommunication+1
 15375  22CA  3005               	movlw	5
 15376  22CB  00A4               	movwf	??_beginAFEcommunication+2
 15377  22CC                     u11835:	
 15378  22CC  0D23               	rlf	??_beginAFEcommunication+1,w
 15379  22CD  0CA3               	rrf	??_beginAFEcommunication+1,f
 15380  22CE  0CA2               	rrf	??_beginAFEcommunication,f
 15381  22CF  0BA4               	decfsz	??_beginAFEcommunication+2,f
 15382  22D0  2ACC               	goto	u11835
 15383  22D1  3007               	movlw	7
 15384  22D2  0522               	andwf	??_beginAFEcommunication,w
 15385  22D3  00A5               	movwf	??_beginAFEcommunication+3
 15386  22D4  3000               	movlw	0
 15387  22D5  0523               	andwf	??_beginAFEcommunication+1,w
 15388  22D6  00A6               	movwf	??_beginAFEcommunication+4
 15389  22D7  3018               	movlw	24
 15390  22D8  00F5               	movwf	readRegister@slaveAddress
 15391  22D9  3000               	movlw	0
 15392  22DA  00F6               	movwf	readRegister@slaveAddress+1
 15393  22DB  3050               	movlw	80
 15394  22DC  00F7               	movwf	readRegister@regAddress
 15395  22DD  3000               	movlw	0
 15396  22DE  00F8               	movwf	readRegister@regAddress+1
 15397  22DF  31A9  21AA         	fcall	_readRegister
 15398  22E1  300C               	movlw	12
 15399  22E2  0575               	andwf	?_readRegister,w
 15400  22E3  0020               	movlb	0	; select bank0
 15401  22E4  00A7               	movwf	??_beginAFEcommunication+5
 15402  22E5  3000               	movlw	0
 15403  22E6  0576               	andwf	?_readRegister+1,w
 15404  22E7  00A8               	movwf	??_beginAFEcommunication+6
 15405  22E8  35A7               	lslf	??_beginAFEcommunication+5,f
 15406  22E9  0DA8               	rlf	??_beginAFEcommunication+6,f
 15407  22EA  0825               	movf	??_beginAFEcommunication+3,w
 15408  22EB  0427               	iorwf	??_beginAFEcommunication+5,w
 15409  22EC  00A9               	movwf	??_beginAFEcommunication+7
 15410  22ED  0826               	movf	??_beginAFEcommunication+4,w
 15411  22EE  0428               	iorwf	??_beginAFEcommunication+6,w
 15412  22EF  00AA               	movwf	??_beginAFEcommunication+8
 15413  22F0  0829               	movf	??_beginAFEcommunication+7,w
 15414  22F1  3E6D               	addlw	109
 15415  22F2  0023               	movlb	3	; select bank3
 15416  22F3  00CE               	movwf	_adcGain^(0+384)
 15417  22F4  3001               	movlw	1
 15418  22F5  0020               	movlb	0	; select bank0
 15419  22F6  3D2A               	addwfc	??_beginAFEcommunication+8,w
 15420  22F7  0023               	movlb	3	; select bank3
 15421  22F8  00CF               	movwf	(_adcGain+1)^(0+384)
 15422  22F9                     l368:	
 15423                           ;BQ76920.c: 50:     }
 15424                           
 15425                           
 15426                           ;BQ76920.c: 54:     return commSuccess;
 15427  22F9  0020               	movlb	0	; select bank0
 15428  22FA  082C               	movf	beginAFEcommunication@commSuccess+1,w
 15429  22FB  00A1               	movwf	?_beginAFEcommunication+1
 15430  22FC  082B               	movf	beginAFEcommunication@commSuccess,w
 15431  22FD  00A0               	movwf	?_beginAFEcommunication
 15432  22FE  0008               	return
 15433  22FF                     __end_of_beginAFEcommunication:	
 15434                           
 15435                           	psect	text50
 15436  29AA                     __ptext50:	
 15437 ;; *************** function _readRegister *****************
 15438 ;; Defined at:
 15439 ;;		line 129 in file "I2C.c"
 15440 ;; Parameters:    Size  Location     Type
 15441 ;;  slaveAddress    2    5[COMMON] int 
 15442 ;;  regAddress      2    7[COMMON] int 
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;  recievedData    2    9[COMMON] int 
 15445 ;; Return value:  Size  Location     Type
 15446 ;;                  2    5[COMMON] int 
 15447 ;; Registers used:
 15448 ;;		wreg, status,2, status,0, pclath, cstack
 15449 ;; Tracked objects:
 15450 ;;		On entry : 0/0
 15451 ;;		On exit  : 0/0
 15452 ;;		Unchanged: 0/0
 15453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15454 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15455 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15457 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15458 ;;Total ram usage:        6 bytes
 15459 ;; Hardware stack levels used:    1
 15460 ;; Hardware stack levels required when called:    2
 15461 ;; This function calls:
 15462 ;;		_read_I2C_data
 15463 ;;		_send_I2C_NACK
 15464 ;;		_send_I2C_controlByte
 15465 ;;		_send_I2C_data
 15466 ;;		_send_I2C_startBit
 15467 ;;		_send_I2C_stopBit
 15468 ;; This function is called by:
 15469 ;;		_beginAFEcommunication
 15470 ;; This function uses a non-reentrant model
 15471 ;;
 15472                           
 15473                           
 15474                           ;psect for function _readRegister
 15475  29AA                     _readRegister:	
 15476                           
 15477                           ;I2C.c: 130:     int recievedData;;I2C.c: 131:     send_I2C_startBit();
 15478                           
 15479                           ;incstack = 0
 15480                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 15481  29AA  31B6  266F  31A9   	fcall	_send_I2C_startBit
 15482                           
 15483                           ;I2C.c: 132:     send_I2C_controlByte(slaveAddress, 0);
 15484  29AD  0876               	movf	readRegister@slaveAddress+1,w
 15485  29AE  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 15486  29AF  0875               	movf	readRegister@slaveAddress,w
 15487  29B0  00F1               	movwf	send_I2C_controlByte@BlockAddress
 15488  29B1  3000               	movlw	0
 15489  29B2  00F3               	movwf	send_I2C_controlByte@RW_bit
 15490  29B3  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 15491  29B4  31B6  26AD  31A9   	fcall	_send_I2C_controlByte
 15492                           
 15493                           ;I2C.c: 133:     send_I2C_data(regAddress);
 15494  29B7  0878               	movf	readRegister@regAddress+1,w
 15495  29B8  00F2               	movwf	send_I2C_data@databyte+1
 15496  29B9  0877               	movf	readRegister@regAddress,w
 15497  29BA  00F1               	movwf	send_I2C_data@databyte
 15498  29BB  31B6  2688  31A9   	fcall	_send_I2C_data
 15499                           
 15500                           ;I2C.c: 134:     send_I2C_stopBit();
 15501  29BE  31B6  2677  31A9   	fcall	_send_I2C_stopBit
 15502                           
 15503                           ;I2C.c: 135:     send_I2C_startBit();
 15504  29C1  31B6  266F  31A9   	fcall	_send_I2C_startBit
 15505                           
 15506                           ;I2C.c: 136:     send_I2C_controlByte(slaveAddress, 1);
 15507  29C4  0876               	movf	readRegister@slaveAddress+1,w
 15508  29C5  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 15509  29C6  0875               	movf	readRegister@slaveAddress,w
 15510  29C7  00F1               	movwf	send_I2C_controlByte@BlockAddress
 15511  29C8  3001               	movlw	1
 15512  29C9  00F3               	movwf	send_I2C_controlByte@RW_bit
 15513  29CA  3000               	movlw	0
 15514  29CB  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 15515  29CC  31B6  26AD  31A9   	fcall	_send_I2C_controlByte
 15516                           
 15517                           ;I2C.c: 137:     recievedData = read_I2C_data();
 15518  29CF  31B6  26D1  31A9   	fcall	_read_I2C_data
 15519  29D2  0872               	movf	?_read_I2C_data+1,w
 15520  29D3  00FA               	movwf	readRegister@recievedData+1
 15521  29D4  0871               	movf	?_read_I2C_data,w
 15522  29D5  00F9               	movwf	readRegister@recievedData
 15523                           
 15524                           ;I2C.c: 138:     send_I2C_NACK();
 15525  29D6  31B6  2691  31A9   	fcall	_send_I2C_NACK
 15526                           
 15527                           ;I2C.c: 139:     send_I2C_stopBit();
 15528  29D9  31B6  2677         	fcall	_send_I2C_stopBit
 15529                           
 15530                           ;I2C.c: 140:     return recievedData;
 15531  29DB  087A               	movf	readRegister@recievedData+1,w
 15532  29DC  00F6               	movwf	?_readRegister+1
 15533  29DD  0879               	movf	readRegister@recievedData,w
 15534  29DE  00F5               	movwf	?_readRegister
 15535  29DF  0008               	return
 15536  29E0                     __end_of_readRegister:	
 15537                           
 15538                           	psect	text51
 15539  3691                     __ptext51:	
 15540 ;; *************** function _send_I2C_NACK *****************
 15541 ;; Defined at:
 15542 ;;		line 83 in file "I2C.c"
 15543 ;; Parameters:    Size  Location     Type
 15544 ;;		None
 15545 ;; Auto vars:     Size  Location     Type
 15546 ;;		None
 15547 ;; Return value:  Size  Location     Type
 15548 ;;                  1    wreg      void 
 15549 ;; Registers used:
 15550 ;;		None
 15551 ;; Tracked objects:
 15552 ;;		On entry : 0/0
 15553 ;;		On exit  : 0/0
 15554 ;;		Unchanged: 0/0
 15555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15560 ;;Total ram usage:        0 bytes
 15561 ;; Hardware stack levels used:    1
 15562 ;; Hardware stack levels required when called:    1
 15563 ;; This function calls:
 15564 ;;		Nothing
 15565 ;; This function is called by:
 15566 ;;		_readRegister
 15567 ;; This function uses a non-reentrant model
 15568 ;;
 15569                           
 15570                           
 15571                           ;psect for function _send_I2C_NACK
 15572  3691                     _send_I2C_NACK:	
 15573                           
 15574                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
 15575                           
 15576                           ;incstack = 0
 15577                           ; Regs used in _send_I2C_NACK: []
 15578  3691  0020               	movlb	0	; select bank0
 15579  3692  1191               	bcf	17,3	;volatile
 15580                           
 15581                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
 15582  3693  0024               	movlb	4	; select bank4
 15583  3694  1696               	bsf	22,5	;volatile
 15584                           
 15585                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
 15586  3695  1616               	bsf	22,4	;volatile
 15587  3696                     l284:	
 15588                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
 15589                           
 15590  3696  0020               	movlb	0	; select bank0
 15591  3697  1991               	btfsc	17,3	;volatile
 15592  3698  0008               	return
 15593  3699  2E96               	goto	l284
 15594  369A                     __end_of_send_I2C_NACK:	
 15595                           
 15596                           	psect	text52
 15597  36D1                     __ptext52:	
 15598 ;; *************** function _read_I2C_data *****************
 15599 ;; Defined at:
 15600 ;;		line 42 in file "I2C.c"
 15601 ;; Parameters:    Size  Location     Type
 15602 ;;		None
 15603 ;; Auto vars:     Size  Location     Type
 15604 ;;		None
 15605 ;; Return value:  Size  Location     Type
 15606 ;;                  2    1[COMMON] unsigned int 
 15607 ;; Registers used:
 15608 ;;		wreg
 15609 ;; Tracked objects:
 15610 ;;		On entry : 0/0
 15611 ;;		On exit  : 0/0
 15612 ;;		Unchanged: 0/0
 15613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15614 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15616 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15617 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15618 ;;Total ram usage:        4 bytes
 15619 ;; Hardware stack levels used:    1
 15620 ;; Hardware stack levels required when called:    1
 15621 ;; This function calls:
 15622 ;;		Nothing
 15623 ;; This function is called by:
 15624 ;;		_readRegister
 15625 ;; This function uses a non-reentrant model
 15626 ;;
 15627                           
 15628                           
 15629                           ;psect for function _read_I2C_data
 15630  36D1                     _read_I2C_data:	
 15631                           
 15632                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
 15633                           
 15634                           ;incstack = 0
 15635                           ; Regs used in _read_I2C_data: [wreg]
 15636  36D1  0020               	movlb	0	; select bank0
 15637  36D2  1191               	bcf	17,3	;volatile
 15638                           
 15639                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
 15640  36D3  0024               	movlb	4	; select bank4
 15641  36D4  1596               	bsf	22,3	;volatile
 15642  36D5                     l254:	
 15643                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
 15644                           
 15645  36D5  0020               	movlb	0	; select bank0
 15646  36D6  1D91               	btfss	17,3	;volatile
 15647  36D7  2ED5               	goto	l254
 15648                           
 15649                           ;I2C.c: 46:     return (SSPBUF);
 15650  36D8  0024               	movlb	4	; select bank4
 15651  36D9  0811               	movf	17,w	;volatile
 15652  36DA  00F3               	movwf	??_read_I2C_data
 15653  36DB  01F4               	clrf	??_read_I2C_data+1
 15654  36DC  0873               	movf	??_read_I2C_data,w
 15655  36DD  00F1               	movwf	?_read_I2C_data
 15656  36DE  0874               	movf	??_read_I2C_data+1,w
 15657  36DF  00F2               	movwf	?_read_I2C_data+1
 15658  36E0  0008               	return
 15659  36E1                     __end_of_read_I2C_data:	
 15660                           
 15661                           	psect	text53
 15662  37C3                     __ptext53:	
 15663 ;; *************** function _I2C_writeRegister *****************
 15664 ;; Defined at:
 15665 ;;		line 118 in file "I2C.c"
 15666 ;; Parameters:    Size  Location     Type
 15667 ;;  slaveAddress    2    5[COMMON] int 
 15668 ;;  regAddress      2    7[COMMON] int 
 15669 ;;  data            2    9[COMMON] int 
 15670 ;; Auto vars:     Size  Location     Type
 15671 ;;		None
 15672 ;; Return value:  Size  Location     Type
 15673 ;;                  1    wreg      void 
 15674 ;; Registers used:
 15675 ;;		wreg, status,2, status,0, pclath, cstack
 15676 ;; Tracked objects:
 15677 ;;		On entry : 0/0
 15678 ;;		On exit  : 0/0
 15679 ;;		Unchanged: 0/0
 15680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15681 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15685 ;;Total ram usage:        6 bytes
 15686 ;; Hardware stack levels used:    1
 15687 ;; Hardware stack levels required when called:    2
 15688 ;; This function calls:
 15689 ;;		_send_I2C_controlByte
 15690 ;;		_send_I2C_data
 15691 ;;		_send_I2C_startBit
 15692 ;;		_send_I2C_stopBit
 15693 ;; This function is called by:
 15694 ;;		_beginAFEcommunication
 15695 ;; This function uses a non-reentrant model
 15696 ;;
 15697                           
 15698                           
 15699                           ;psect for function _I2C_writeRegister
 15700  37C3                     _I2C_writeRegister:	
 15701                           
 15702                           ;I2C.c: 119:     send_I2C_startBit();
 15703                           
 15704                           ;incstack = 0
 15705                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 15706  37C3  31B6  266F  31B7   	fcall	_send_I2C_startBit
 15707                           
 15708                           ;I2C.c: 120:     send_I2C_controlByte(slaveAddress, 0);
 15709  37C6  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 15710  37C7  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 15711  37C8  0875               	movf	I2C_writeRegister@slaveAddress,w
 15712  37C9  00F1               	movwf	send_I2C_controlByte@BlockAddress
 15713  37CA  3000               	movlw	0
 15714  37CB  00F3               	movwf	send_I2C_controlByte@RW_bit
 15715  37CC  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 15716  37CD  31B6  26AD  31B7   	fcall	_send_I2C_controlByte
 15717                           
 15718                           ;I2C.c: 121:     send_I2C_data(regAddress);
 15719  37D0  0878               	movf	I2C_writeRegister@regAddress+1,w
 15720  37D1  00F2               	movwf	send_I2C_data@databyte+1
 15721  37D2  0877               	movf	I2C_writeRegister@regAddress,w
 15722  37D3  00F1               	movwf	send_I2C_data@databyte
 15723  37D4  31B6  2688  31B7   	fcall	_send_I2C_data
 15724                           
 15725                           ;I2C.c: 122:     send_I2C_data(data);
 15726  37D7  087A               	movf	I2C_writeRegister@data+1,w
 15727  37D8  00F2               	movwf	send_I2C_data@databyte+1
 15728  37D9  0879               	movf	I2C_writeRegister@data,w
 15729  37DA  00F1               	movwf	send_I2C_data@databyte
 15730  37DB  31B6  2688  31B7   	fcall	_send_I2C_data
 15731                           
 15732                           ;I2C.c: 123:     send_I2C_stopBit();
 15733  37DE  31B6  2677         	fcall	_send_I2C_stopBit
 15734  37E0  0008               	return
 15735  37E1                     __end_of_I2C_writeRegister:	
 15736                           
 15737                           	psect	text54
 15738  3677                     __ptext54:	
 15739 ;; *************** function _send_I2C_stopBit *****************
 15740 ;; Defined at:
 15741 ;;		line 70 in file "I2C.c"
 15742 ;; Parameters:    Size  Location     Type
 15743 ;;		None
 15744 ;; Auto vars:     Size  Location     Type
 15745 ;;		None
 15746 ;; Return value:  Size  Location     Type
 15747 ;;                  1    wreg      void 
 15748 ;; Registers used:
 15749 ;;		None
 15750 ;; Tracked objects:
 15751 ;;		On entry : 0/0
 15752 ;;		On exit  : 0/0
 15753 ;;		Unchanged: 0/0
 15754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15759 ;;Total ram usage:        0 bytes
 15760 ;; Hardware stack levels used:    1
 15761 ;; Hardware stack levels required when called:    1
 15762 ;; This function calls:
 15763 ;;		Nothing
 15764 ;; This function is called by:
 15765 ;;		_I2C_writeRegister
 15766 ;;		_readRegister
 15767 ;;		_retrieve_data_ATmega328
 15768 ;; This function uses a non-reentrant model
 15769 ;;
 15770                           
 15771                           
 15772                           ;psect for function _send_I2C_stopBit
 15773  3677                     _send_I2C_stopBit:	
 15774                           
 15775                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
 15776                           
 15777                           ;incstack = 0
 15778                           ; Regs used in _send_I2C_stopBit: []
 15779  3677  0020               	movlb	0	; select bank0
 15780  3678  1191               	bcf	17,3	;volatile
 15781                           
 15782                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
 15783  3679  0024               	movlb	4	; select bank4
 15784  367A  1516               	bsf	22,2	;volatile
 15785  367B                     l272:	
 15786                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
 15787                           
 15788  367B  0020               	movlb	0	; select bank0
 15789  367C  1991               	btfsc	17,3	;volatile
 15790  367D  0008               	return
 15791  367E  2E7B               	goto	l272
 15792  367F                     __end_of_send_I2C_stopBit:	
 15793                           
 15794                           	psect	text55
 15795  366F                     __ptext55:	
 15796 ;; *************** function _send_I2C_startBit *****************
 15797 ;; Defined at:
 15798 ;;		line 64 in file "I2C.c"
 15799 ;; Parameters:    Size  Location     Type
 15800 ;;		None
 15801 ;; Auto vars:     Size  Location     Type
 15802 ;;		None
 15803 ;; Return value:  Size  Location     Type
 15804 ;;                  1    wreg      void 
 15805 ;; Registers used:
 15806 ;;		None
 15807 ;; Tracked objects:
 15808 ;;		On entry : 0/0
 15809 ;;		On exit  : 0/0
 15810 ;;		Unchanged: 0/0
 15811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15816 ;;Total ram usage:        0 bytes
 15817 ;; Hardware stack levels used:    1
 15818 ;; Hardware stack levels required when called:    1
 15819 ;; This function calls:
 15820 ;;		Nothing
 15821 ;; This function is called by:
 15822 ;;		_I2C_writeRegister
 15823 ;;		_readRegister
 15824 ;;		_retrieve_data_ATmega328
 15825 ;; This function uses a non-reentrant model
 15826 ;;
 15827                           
 15828                           
 15829                           ;psect for function _send_I2C_startBit
 15830  366F                     _send_I2C_startBit:	
 15831                           
 15832                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
 15833                           
 15834                           ;incstack = 0
 15835                           ; Regs used in _send_I2C_startBit: []
 15836  366F  0020               	movlb	0	; select bank0
 15837  3670  1191               	bcf	17,3	;volatile
 15838                           
 15839                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
 15840  3671  0024               	movlb	4	; select bank4
 15841  3672  1416               	bsf	22,0	;volatile
 15842  3673                     l266:	
 15843                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
 15844                           
 15845  3673  0020               	movlb	0	; select bank0
 15846  3674  1991               	btfsc	17,3	;volatile
 15847  3675  0008               	return
 15848  3676  2E73               	goto	l266
 15849  3677                     __end_of_send_I2C_startBit:	
 15850                           
 15851                           	psect	text56
 15852  3688                     __ptext56:	
 15853 ;; *************** function _send_I2C_data *****************
 15854 ;; Defined at:
 15855 ;;		line 33 in file "I2C.c"
 15856 ;; Parameters:    Size  Location     Type
 15857 ;;  databyte        2    1[COMMON] unsigned int 
 15858 ;; Auto vars:     Size  Location     Type
 15859 ;;		None
 15860 ;; Return value:  Size  Location     Type
 15861 ;;                  1    wreg      void 
 15862 ;; Registers used:
 15863 ;;		wreg
 15864 ;; Tracked objects:
 15865 ;;		On entry : 0/0
 15866 ;;		On exit  : 0/0
 15867 ;;		Unchanged: 0/0
 15868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15872 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15873 ;;Total ram usage:        2 bytes
 15874 ;; Hardware stack levels used:    1
 15875 ;; Hardware stack levels required when called:    1
 15876 ;; This function calls:
 15877 ;;		Nothing
 15878 ;; This function is called by:
 15879 ;;		_I2C_writeRegister
 15880 ;;		_readRegister
 15881 ;; This function uses a non-reentrant model
 15882 ;;
 15883                           
 15884                           
 15885                           ;psect for function _send_I2C_data
 15886  3688                     _send_I2C_data:	
 15887                           
 15888                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 15889                           
 15890                           ;incstack = 0
 15891                           ; Regs used in _send_I2C_data: [wreg]
 15892  3688  0020               	movlb	0	; select bank0
 15893  3689  1191               	bcf	17,3	;volatile
 15894                           
 15895                           ;I2C.c: 35:     SSPBUF = databyte;
 15896  368A  0871               	movf	send_I2C_data@databyte,w
 15897  368B  0024               	movlb	4	; select bank4
 15898  368C  0091               	movwf	17	;volatile
 15899  368D                     l248:	
 15900                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
 15901                           
 15902  368D  0020               	movlb	0	; select bank0
 15903  368E  1991               	btfsc	17,3	;volatile
 15904  368F  0008               	return
 15905  3690  2E8D               	goto	l248
 15906  3691                     __end_of_send_I2C_data:	
 15907                           
 15908                           	psect	text57
 15909  36AD                     __ptext57:	
 15910 ;; *************** function _send_I2C_controlByte *****************
 15911 ;; Defined at:
 15912 ;;		line 52 in file "I2C.c"
 15913 ;; Parameters:    Size  Location     Type
 15914 ;;  BlockAddress    2    1[COMMON] unsigned int 
 15915 ;;  RW_bit          2    3[COMMON] unsigned int 
 15916 ;; Auto vars:     Size  Location     Type
 15917 ;;		None
 15918 ;; Return value:  Size  Location     Type
 15919 ;;                  1    wreg      void 
 15920 ;; Registers used:
 15921 ;;		wreg, status,2, status,0
 15922 ;; Tracked objects:
 15923 ;;		On entry : 0/0
 15924 ;;		On exit  : 0/0
 15925 ;;		Unchanged: 0/0
 15926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15927 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15930 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15931 ;;Total ram usage:        4 bytes
 15932 ;; Hardware stack levels used:    1
 15933 ;; Hardware stack levels required when called:    1
 15934 ;; This function calls:
 15935 ;;		Nothing
 15936 ;; This function is called by:
 15937 ;;		_I2C_writeRegister
 15938 ;;		_readRegister
 15939 ;;		_retrieve_data_ATmega328
 15940 ;; This function uses a non-reentrant model
 15941 ;;
 15942                           
 15943                           
 15944                           ;psect for function _send_I2C_controlByte
 15945  36AD                     _send_I2C_controlByte:	
 15946                           
 15947                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
 15948                           
 15949                           ;incstack = 0
 15950                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 15951  36AD  0020               	movlb	0	; select bank0
 15952  36AE  1191               	bcf	17,3	;volatile
 15953                           
 15954                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 15955  36AF  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 15956  36B0  0773               	addwf	send_I2C_controlByte@RW_bit,w
 15957  36B1  0024               	movlb	4	; select bank4
 15958  36B2  0091               	movwf	17	;volatile
 15959  36B3                     l260:	
 15960                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
 15961                           
 15962  36B3  0020               	movlb	0	; select bank0
 15963  36B4  1991               	btfsc	17,3	;volatile
 15964  36B5  0008               	return
 15965  36B6  2EB3               	goto	l260
 15966  36B7                     __end_of_send_I2C_controlByte:	
 15967                           
 15968                           	psect	text58
 15969  2862                     __ptext58:	
 15970 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 15971 ;; Defined at:
 15972 ;;		line 43 in file "RGB.c"
 15973 ;; Parameters:    Size  Location     Type
 15974 ;;		None
 15975 ;; Auto vars:     Size  Location     Type
 15976 ;;		None
 15977 ;; Return value:  Size  Location     Type
 15978 ;;                  1    wreg      void 
 15979 ;; Registers used:
 15980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15981 ;; Tracked objects:
 15982 ;;		On entry : 0/0
 15983 ;;		On exit  : 0/0
 15984 ;;		Unchanged: 0/0
 15985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15988 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15989 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15990 ;;Total ram usage:        1 bytes
 15991 ;; Hardware stack levels used:    1
 15992 ;; Hardware stack levels required when called:    2
 15993 ;; This function calls:
 15994 ;;		_RGB_color
 15995 ;; This function is called by:
 15996 ;;		_statemachine
 15997 ;; This function uses a non-reentrant model
 15998 ;;
 15999                           
 16000                           
 16001                           ;psect for function _RGB_AWAIT_AFE_CONN
 16002  2862                     _RGB_AWAIT_AFE_CONN:	
 16003                           
 16004                           ;RGB.c: 45:     if (toggleColor) {
 16005                           
 16006                           ;incstack = 0
 16007                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16008  2862  087C               	movf	_toggleColor,w
 16009  2863  1903               	btfsc	3,2
 16010  2864  2874               	goto	l6295
 16011                           
 16012                           ;RGB.c: 46:         toggleColor = !toggleColor;
 16013  2865  087C               	movf	_toggleColor,w
 16014  2866  1D03               	btfss	3,2
 16015  2867  286A               	goto	u9040
 16016  2868  3001               	movlw	1
 16017  2869  286B               	goto	u9050
 16018  286A                     u9040:	
 16019  286A  3000               	movlw	0
 16020  286B                     u9050:	
 16021  286B  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 16022  286C  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 16023  286D  00FC               	movwf	_toggleColor
 16024                           
 16025                           ;RGB.c: 47:         RGB_color(0);
 16026  286E  3000               	movlw	0
 16027  286F  00F1               	movwf	RGB_color@color
 16028  2870  00F2               	movwf	RGB_color@color+1
 16029  2871  31A8  2041         	fcall	_RGB_color
 16030                           
 16031                           ;RGB.c: 48:     } else {
 16032  2873  0008               	return
 16033  2874                     l6295:	
 16034                           
 16035                           ;RGB.c: 49:         toggleColor = !toggleColor;
 16036  2874  087C               	movf	_toggleColor,w
 16037  2875  1D03               	btfss	3,2
 16038  2876  2879               	goto	u9060
 16039  2877  3001               	movlw	1
 16040  2878  287A               	goto	u9070
 16041  2879                     u9060:	
 16042  2879  3000               	movlw	0
 16043  287A                     u9070:	
 16044  287A  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 16045  287B  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 16046  287C  00FC               	movwf	_toggleColor
 16047                           
 16048                           ;RGB.c: 50:         RGB_color(1);
 16049  287D  3001               	movlw	1
 16050  287E  00F1               	movwf	RGB_color@color
 16051  287F  3000               	movlw	0
 16052  2880  00F2               	movwf	RGB_color@color+1
 16053  2881  31A8  2041         	fcall	_RGB_color
 16054  2883  0008               	return
 16055  2884                     __end_of_RGB_AWAIT_AFE_CONN:	
 16056                           
 16057                           	psect	text59
 16058  2841                     __ptext59:	
 16059 ;; *************** function _RGB_color *****************
 16060 ;; Defined at:
 16061 ;;		line 17 in file "RGB.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;  color           2    1[COMMON] int 
 16064 ;; Auto vars:     Size  Location     Type
 16065 ;;		None
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  1    wreg      void 
 16068 ;; Registers used:
 16069 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16075 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16079 ;;Total ram usage:        2 bytes
 16080 ;; Hardware stack levels used:    1
 16081 ;; Hardware stack levels required when called:    1
 16082 ;; This function calls:
 16083 ;;		Nothing
 16084 ;; This function is called by:
 16085 ;;		_statemachine
 16086 ;;		_RGB_AWAIT_AFE_CONN
 16087 ;; This function uses a non-reentrant model
 16088 ;;
 16089                           
 16090                           
 16091                           ;psect for function _RGB_color
 16092  2841                     _RGB_color:	
 16093                           
 16094                           ;RGB.c: 19:     switch (color) {
 16095                           
 16096                           ;incstack = 0
 16097                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 16098  2841  2851               	goto	l6181
 16099  2842                     l309:	
 16100                           ;RGB.c: 20:         case 0:
 16101                           
 16102                           
 16103                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 16104  2842  0022               	movlb	2	; select bank2
 16105  2843  120C               	bcf	12,4	;volatile
 16106                           
 16107                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 16108  2844  168C               	bsf	12,5	;volatile
 16109                           
 16110                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 16111  2845  1410               	bsf	16,0	;volatile
 16112                           
 16113                           ;RGB.c: 24:             break;
 16114  2846  0008               	return
 16115  2847                     l311:	
 16116                           ;RGB.c: 25:         case 1:
 16117                           
 16118                           
 16119                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 16120  2847  0022               	movlb	2	; select bank2
 16121  2848  160C               	bsf	12,4	;volatile
 16122                           
 16123                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 16124  2849  128C               	bcf	12,5	;volatile
 16125                           
 16126                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 16127  284A  1410               	bsf	16,0	;volatile
 16128                           
 16129                           ;RGB.c: 29:             break;
 16130  284B  0008               	return
 16131  284C                     l312:	
 16132                           ;RGB.c: 30:         case 2:
 16133                           
 16134                           
 16135                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 16136  284C  0022               	movlb	2	; select bank2
 16137  284D  160C               	bsf	12,4	;volatile
 16138                           
 16139                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 16140  284E  168C               	bsf	12,5	;volatile
 16141                           
 16142                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 16143  284F  1010               	bcf	16,0	;volatile
 16144                           
 16145                           ;RGB.c: 34:             break;
 16146  2850  0008               	return
 16147  2851                     l6181:	
 16148                           
 16149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16150                           ; Switch size 1, requested type "simple"
 16151                           ; Number of cases is 1, Range of values is 0 to 0
 16152                           ; switch strategies available:
 16153                           ; Name         Instructions Cycles
 16154                           ; simple_byte            4     3 (average)
 16155                           ; direct_byte            8     6 (fixed)
 16156                           ; jumptable            260     6 (fixed)
 16157                           ;	Chosen strategy is simple_byte
 16158  2851  0872               	movf	RGB_color@color+1,w
 16159  2852  3A00               	xorlw	0	; case 0
 16160  2853  1903               	skipnz
 16161  2854  2856               	goto	l8239
 16162  2855  2861               	goto	l313
 16163  2856                     l8239:	
 16164                           
 16165                           ; Switch size 1, requested type "simple"
 16166                           ; Number of cases is 3, Range of values is 0 to 2
 16167                           ; switch strategies available:
 16168                           ; Name         Instructions Cycles
 16169                           ; simple_byte           10     6 (average)
 16170                           ; direct_byte           12     6 (fixed)
 16171                           ; jumptable            260     6 (fixed)
 16172                           ;	Chosen strategy is simple_byte
 16173  2856  0871               	movf	RGB_color@color,w
 16174  2857  3A00               	xorlw	0	; case 0
 16175  2858  1903               	skipnz
 16176  2859  2842               	goto	l309
 16177  285A  3A01               	xorlw	1	; case 1
 16178  285B  1903               	skipnz
 16179  285C  2847               	goto	l311
 16180  285D  3A03               	xorlw	3	; case 2
 16181  285E  1903               	skipnz
 16182  285F  284C               	goto	l312
 16183  2860  2861               	goto	l313
 16184  2861                     l313:	
 16185  2861  0008               	return
 16186  2862                     __end_of_RGB_color:	
 16187                           
 16188                           	psect	text60
 16189  3755                     __ptext60:	
 16190 ;; *************** function _EUSART_Write_Text *****************
 16191 ;; Defined at:
 16192 ;;		line 75 in file "EUSART.c"
 16193 ;; Parameters:    Size  Location     Type
 16194 ;;  text            2    2[COMMON] PTR unsigned char 
 16195 ;;		 -> STR_9(45), STR_8(42), STR_5(3), STR_4(53), 
 16196 ;;		 -> messageBuffer(127), STR_2(46), STR_1(40), 
 16197 ;; Auto vars:     Size  Location     Type
 16198 ;;  i               2    5[COMMON] int 
 16199 ;; Return value:  Size  Location     Type
 16200 ;;                  1    wreg      void 
 16201 ;; Registers used:
 16202 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16203 ;; Tracked objects:
 16204 ;;		On entry : 0/0
 16205 ;;		On exit  : 0/0
 16206 ;;		Unchanged: 0/0
 16207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16209 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16210 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16211 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16212 ;;Total ram usage:        5 bytes
 16213 ;; Hardware stack levels used:    1
 16214 ;; Hardware stack levels required when called:    2
 16215 ;; This function calls:
 16216 ;;		_EUSART_Write
 16217 ;; This function is called by:
 16218 ;;		_statemachine
 16219 ;; This function uses a non-reentrant model
 16220 ;;
 16221                           
 16222                           
 16223                           ;psect for function _EUSART_Write_Text
 16224  3755                     _EUSART_Write_Text:	
 16225                           
 16226                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 16227                           
 16228                           ;incstack = 0
 16229                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16230  3755  01F5               	clrf	EUSART_Write_Text@i
 16231  3756  01F6               	clrf	EUSART_Write_Text@i+1
 16232  3757                     l6331:	
 16233  3757  0872               	movf	EUSART_Write_Text@text,w
 16234  3758  0775               	addwf	EUSART_Write_Text@i,w
 16235  3759  0084               	movwf	4
 16236  375A  0873               	movf	EUSART_Write_Text@text+1,w
 16237  375B  3D76               	addwfc	EUSART_Write_Text@i+1,w
 16238  375C  0085               	movwf	5
 16239  375D  0012               	moviw fsr0++
 16240  375E  1903               	btfsc	3,2
 16241  375F  0008               	return
 16242                           
 16243                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 16244  3760  0872               	movf	EUSART_Write_Text@text,w
 16245  3761  0775               	addwf	EUSART_Write_Text@i,w
 16246  3762  0084               	movwf	4
 16247  3763  0873               	movf	EUSART_Write_Text@text+1,w
 16248  3764  3D76               	addwfc	EUSART_Write_Text@i+1,w
 16249  3765  0085               	movwf	5
 16250  3766  0800               	movf	0,w	;code access
 16251  3767  31B6  2667  31B7   	fcall	_EUSART_Write
 16252  376A  3001               	movlw	1
 16253  376B  07F5               	addwf	EUSART_Write_Text@i,f
 16254  376C  3000               	movlw	0
 16255  376D  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 16256  376E  2F57               	goto	l6331
 16257  376F                     __end_of_EUSART_Write_Text:	
 16258                           
 16259                           	psect	text61
 16260  3667                     __ptext61:	
 16261 ;; *************** function _EUSART_Write *****************
 16262 ;; Defined at:
 16263 ;;		line 56 in file "EUSART.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;  txData          1    wreg     unsigned char 
 16266 ;; Auto vars:     Size  Location     Type
 16267 ;;  txData          1    1[COMMON] unsigned char 
 16268 ;; Return value:  Size  Location     Type
 16269 ;;                  1    wreg      void 
 16270 ;; Registers used:
 16271 ;;		wreg
 16272 ;; Tracked objects:
 16273 ;;		On entry : 0/0
 16274 ;;		On exit  : 0/0
 16275 ;;		Unchanged: 0/0
 16276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16280 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16281 ;;Total ram usage:        1 bytes
 16282 ;; Hardware stack levels used:    1
 16283 ;; Hardware stack levels required when called:    1
 16284 ;; This function calls:
 16285 ;;		Nothing
 16286 ;; This function is called by:
 16287 ;;		_EUSART_Write_Text
 16288 ;; This function uses a non-reentrant model
 16289 ;;
 16290                           
 16291                           
 16292                           ;psect for function _EUSART_Write
 16293  3667                     _EUSART_Write:	
 16294                           
 16295                           ;incstack = 0
 16296                           ; Regs used in _EUSART_Write: [wreg]
 16297                           ;EUSART_Write@txData stored from wreg
 16298  3667  00F1               	movwf	EUSART_Write@txData
 16299  3668                     l213:	
 16300                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 16301                           
 16302                           
 16303                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 16304  3668  0020               	movlb	0	; select bank0
 16305  3669  1E11               	btfss	17,4	;volatile
 16306  366A  2E68               	goto	l213
 16307                           
 16308                           ;EUSART.c: 62:     TX1REG = txData;
 16309  366B  0871               	movf	EUSART_Write@txData,w
 16310  366C  0023               	movlb	3	; select bank3
 16311  366D  009A               	movwf	26	;volatile
 16312  366E  0008               	return
 16313  366F                     __end_of_EUSART_Write:	
 16314                           
 16315                           	psect	text62
 16316  2AB2                     __ptext62:	
 16317 ;; *************** function _AFE_getSetShortCircuitCurrent *****************
 16318 ;; Defined at:
 16319 ;;		line 119 in file "BQ76920.c"
 16320 ;; Parameters:    Size  Location     Type
 16321 ;;		None
 16322 ;; Auto vars:     Size  Location     Type
 16323 ;;		None
 16324 ;; Return value:  Size  Location     Type
 16325 ;;                  4   67[BANK0 ] long 
 16326 ;; Registers used:
 16327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16328 ;; Tracked objects:
 16329 ;;		On entry : 0/0
 16330 ;;		On exit  : 0/0
 16331 ;;		Unchanged: 0/0
 16332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16333 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16335 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16336 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16337 ;;Total ram usage:        8 bytes
 16338 ;; Hardware stack levels used:    1
 16339 ;; Hardware stack levels required when called:    2
 16340 ;; This function calls:
 16341 ;;		___fldiv
 16342 ;;		___fltol
 16343 ;;		___xxtofl
 16344 ;; This function is called by:
 16345 ;;		_statemachine
 16346 ;; This function uses a non-reentrant model
 16347 ;;
 16348                           
 16349                           
 16350                           ;psect for function _AFE_getSetShortCircuitCurrent
 16351  2AB2                     _AFE_getSetShortCircuitCurrent:	
 16352                           
 16353                           ;BQ76920.c: 120:         return (long) (SCD_threshold_setting[protect1.bits.SCD_THRESH])
      +                           / shuntResistorValue_mOhm;
 16354                           
 16355                           ;incstack = 0
 16356                           ; Regs used in _AFE_getSetShortCircuitCurrent: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 16357  2AB2  0023               	movlb	3	; select bank3
 16358  2AB3  0850               	movf	_protect1^(0+384),w
 16359  2AB4  3907               	andlw	7
 16360  2AB5  0020               	movlb	0	; select bank0
 16361  2AB6  00E7               	movwf	??_AFE_getSetShortCircuitCurrent
 16362  2AB7  01E8               	clrf	??_AFE_getSetShortCircuitCurrent+1
 16363  2AB8  35E7               	lslf	??_AFE_getSetShortCircuitCurrent,f
 16364  2AB9  0DE8               	rlf	??_AFE_getSetShortCircuitCurrent+1,f
 16365  2ABA  3010               	movlw	low (_SCD_threshold_setting| (0+32768))
 16366  2ABB  0767               	addwf	??_AFE_getSetShortCircuitCurrent,w
 16367  2ABC  0084               	movwf	4
 16368  2ABD  30B8               	movlw	high (_SCD_threshold_setting| (0+32768))
 16369  2ABE  3D68               	addwfc	??_AFE_getSetShortCircuitCurrent+1,w
 16370  2ABF  0085               	movwf	5
 16371  2AC0  3F00               	moviw [0]fsr0
 16372  2AC1  00E9               	movwf	??_AFE_getSetShortCircuitCurrent+2
 16373  2AC2  3F01               	moviw [1]fsr0
 16374  2AC3  00EA               	movwf	??_AFE_getSetShortCircuitCurrent+3
 16375  2AC4  0869               	movf	??_AFE_getSetShortCircuitCurrent+2,w
 16376  2AC5  00F1               	movwf	___xxtofl@val
 16377  2AC6  086A               	movf	??_AFE_getSetShortCircuitCurrent+3,w
 16378  2AC7  00F2               	movwf	___xxtofl@val+1
 16379  2AC8  0D89               	rlf	9,f
 16380  2AC9  3B89               	subwfb	9,f
 16381  2ACA  0989               	comf	9,f
 16382  2ACB  00F3               	movwf	___xxtofl@val+2
 16383  2ACC  00F4               	movwf	___xxtofl@val+3
 16384  2ACD  3001               	movlw	1
 16385  2ACE  31AF  276A  31AA   	fcall	___xxtofl
 16386  2AD1  0874               	movf	?___xxtofl+3,w
 16387  2AD2  0020               	movlb	0	; select bank0
 16388  2AD3  00C7               	movwf	___fldiv@b+3
 16389  2AD4  0873               	movf	?___xxtofl+2,w
 16390  2AD5  00C6               	movwf	___fldiv@b+2
 16391  2AD6  0872               	movf	?___xxtofl+1,w
 16392  2AD7  00C5               	movwf	___fldiv@b+1
 16393  2AD8  0871               	movf	?___xxtofl,w
 16394  2AD9  00C4               	movwf	___fldiv@b
 16395  2ADA  0023               	movlb	3	; select bank3
 16396  2ADB  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 16397  2ADC  0020               	movlb	0	; select bank0
 16398  2ADD  00C3               	movwf	___fldiv@a+3
 16399  2ADE  0023               	movlb	3	; select bank3
 16400  2ADF  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 16401  2AE0  0020               	movlb	0	; select bank0
 16402  2AE1  00C2               	movwf	___fldiv@a+2
 16403  2AE2  0023               	movlb	3	; select bank3
 16404  2AE3  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 16405  2AE4  0020               	movlb	0	; select bank0
 16406  2AE5  00C1               	movwf	___fldiv@a+1
 16407  2AE6  0023               	movlb	3	; select bank3
 16408  2AE7  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 16409  2AE8  0020               	movlb	0	; select bank0
 16410  2AE9  00C0               	movwf	___fldiv@a
 16411  2AEA  3190  2061  31AA   	fcall	___fldiv
 16412  2AED  0020               	movlb	0	; select bank0
 16413  2AEE  0843               	movf	?___fldiv+3,w
 16414  2AEF  00DD               	movwf	___fltol@f1+3
 16415  2AF0  0842               	movf	?___fldiv+2,w
 16416  2AF1  00DC               	movwf	___fltol@f1+2
 16417  2AF2  0841               	movf	?___fldiv+1,w
 16418  2AF3  00DB               	movwf	___fltol@f1+1
 16419  2AF4  0840               	movf	?___fldiv,w
 16420  2AF5  00DA               	movwf	___fltol@f1
 16421  2AF6  31AB  23A4         	fcall	___fltol
 16422  2AF8  0020               	movlb	0	; select bank0
 16423  2AF9  085D               	movf	?___fltol+3,w
 16424  2AFA  00E6               	movwf	?_AFE_getSetShortCircuitCurrent+3
 16425  2AFB  085C               	movf	?___fltol+2,w
 16426  2AFC  00E5               	movwf	?_AFE_getSetShortCircuitCurrent+2
 16427  2AFD  085B               	movf	?___fltol+1,w
 16428  2AFE  00E4               	movwf	?_AFE_getSetShortCircuitCurrent+1
 16429  2AFF  085A               	movf	?___fltol,w
 16430  2B00  00E3               	movwf	?_AFE_getSetShortCircuitCurrent
 16431  2B01  0008               	return
 16432  2B02                     __end_of_AFE_getSetShortCircuitCurrent:	
 16433                           
 16434                           	psect	text63
 16435  2F6A                     __ptext63:	
 16436 ;; *************** function ___xxtofl *****************
 16437 ;; Defined at:
 16438 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 16439 ;; Parameters:    Size  Location     Type
 16440 ;;  sign            1    wreg     unsigned char 
 16441 ;;  val             4    1[COMMON] long 
 16442 ;; Auto vars:     Size  Location     Type
 16443 ;;  sign            1    0[BANK0 ] unsigned char 
 16444 ;;  arg             4    2[BANK0 ] unsigned long 
 16445 ;;  exp             1    1[BANK0 ] unsigned char 
 16446 ;; Return value:  Size  Location     Type
 16447 ;;                  4    1[COMMON] unsigned char 
 16448 ;; Registers used:
 16449 ;;		wreg, status,2, status,0
 16450 ;; Tracked objects:
 16451 ;;		On entry : 0/0
 16452 ;;		On exit  : 0/0
 16453 ;;		Unchanged: 0/0
 16454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16456 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16457 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16458 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16459 ;;Total ram usage:       14 bytes
 16460 ;; Hardware stack levels used:    1
 16461 ;; Hardware stack levels required when called:    1
 16462 ;; This function calls:
 16463 ;;		Nothing
 16464 ;; This function is called by:
 16465 ;;		_setShortCircuitProtection
 16466 ;;		_AFE_getSetShortCircuitCurrent
 16467 ;; This function uses a non-reentrant model
 16468 ;;
 16469                           
 16470                           
 16471                           ;psect for function ___xxtofl
 16472  2F6A                     ___xxtofl:	
 16473                           
 16474                           ;incstack = 0
 16475                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 16476                           ;___xxtofl@sign stored from wreg
 16477  2F6A  0020               	movlb	0	; select bank0
 16478  2F6B  00A0               	movwf	___xxtofl@sign
 16479  2F6C  0820               	movf	___xxtofl@sign,w
 16480  2F6D  1D03               	btfss	3,2
 16481  2F6E  1FF4               	btfss	___xxtofl@val+3,7
 16482  2F6F  2F80               	goto	l6139
 16483  2F70  0971               	comf	___xxtofl@val,w
 16484  2F71  00A2               	movwf	___xxtofl@arg
 16485  2F72  0972               	comf	___xxtofl@val+1,w
 16486  2F73  00A3               	movwf	___xxtofl@arg+1
 16487  2F74  0973               	comf	___xxtofl@val+2,w
 16488  2F75  00A4               	movwf	___xxtofl@arg+2
 16489  2F76  0974               	comf	___xxtofl@val+3,w
 16490  2F77  00A5               	movwf	___xxtofl@arg+3
 16491  2F78  0AA2               	incf	___xxtofl@arg,f
 16492  2F79  1903               	skipnz
 16493  2F7A  0AA3               	incf	___xxtofl@arg+1,f
 16494  2F7B  1903               	skipnz
 16495  2F7C  0AA4               	incf	___xxtofl@arg+2,f
 16496  2F7D  1903               	skipnz
 16497  2F7E  0AA5               	incf	___xxtofl@arg+3,f
 16498  2F7F  2F88               	goto	l1254
 16499  2F80                     l6139:	
 16500  2F80  0874               	movf	___xxtofl@val+3,w
 16501  2F81  00A5               	movwf	___xxtofl@arg+3
 16502  2F82  0873               	movf	___xxtofl@val+2,w
 16503  2F83  00A4               	movwf	___xxtofl@arg+2
 16504  2F84  0872               	movf	___xxtofl@val+1,w
 16505  2F85  00A3               	movwf	___xxtofl@arg+1
 16506  2F86  0871               	movf	___xxtofl@val,w
 16507  2F87  00A2               	movwf	___xxtofl@arg
 16508  2F88                     l1254:	
 16509  2F88  0874               	movf	___xxtofl@val+3,w
 16510  2F89  0473               	iorwf	___xxtofl@val+2,w
 16511  2F8A  0472               	iorwf	___xxtofl@val+1,w
 16512  2F8B  0471               	iorwf	___xxtofl@val,w
 16513  2F8C  1D03               	skipz
 16514  2F8D  2F97               	goto	l6145
 16515  2F8E  3000               	movlw	0
 16516  2F8F  00F4               	movwf	?___xxtofl+3
 16517  2F90  3000               	movlw	0
 16518  2F91  00F3               	movwf	?___xxtofl+2
 16519  2F92  3000               	movlw	0
 16520  2F93  00F2               	movwf	?___xxtofl+1
 16521  2F94  3000               	movlw	0
 16522  2F95  00F1               	movwf	?___xxtofl
 16523  2F96  0008               	return
 16524  2F97                     l6145:	
 16525  2F97  3096               	movlw	150
 16526  2F98  00F5               	movwf	??___xxtofl
 16527  2F99  0875               	movf	??___xxtofl,w
 16528  2F9A  00A1               	movwf	___xxtofl@exp
 16529  2F9B                     l6149:	
 16530  2F9B  30FE               	movlw	254
 16531  2F9C  0525               	andwf	___xxtofl@arg+3,w
 16532  2F9D  1903               	btfsc	3,2
 16533  2F9E  2FBE               	goto	l1260
 16534  2F9F  3001               	movlw	1
 16535  2FA0  00F5               	movwf	??___xxtofl
 16536  2FA1  0875               	movf	??___xxtofl,w
 16537  2FA2  07A1               	addwf	___xxtofl@exp,f
 16538  2FA3  3001               	movlw	1
 16539  2FA4                     u8825:	
 16540  2FA4  36A5               	lsrf	___xxtofl@arg+3,f
 16541  2FA5  0CA4               	rrf	___xxtofl@arg+2,f
 16542  2FA6  0CA3               	rrf	___xxtofl@arg+1,f
 16543  2FA7  0CA2               	rrf	___xxtofl@arg,f
 16544  2FA8  0B89               	decfsz	9,f
 16545  2FA9  2FA4               	goto	u8825
 16546  2FAA  2F9B               	goto	l6149
 16547  2FAB                     l6151:	
 16548  2FAB  3001               	movlw	1
 16549  2FAC  00F5               	movwf	??___xxtofl
 16550  2FAD  0875               	movf	??___xxtofl,w
 16551  2FAE  07A1               	addwf	___xxtofl@exp,f
 16552  2FAF  3001               	movlw	1
 16553  2FB0  07A2               	addwf	___xxtofl@arg,f
 16554  2FB1  3000               	movlw	0
 16555  2FB2  3DA3               	addwfc	___xxtofl@arg+1,f
 16556  2FB3  3000               	movlw	0
 16557  2FB4  3DA4               	addwfc	___xxtofl@arg+2,f
 16558  2FB5  3000               	movlw	0
 16559  2FB6  3DA5               	addwfc	___xxtofl@arg+3,f
 16560  2FB7  3001               	movlw	1
 16561  2FB8                     u8845:	
 16562  2FB8  36A5               	lsrf	___xxtofl@arg+3,f
 16563  2FB9  0CA4               	rrf	___xxtofl@arg+2,f
 16564  2FBA  0CA3               	rrf	___xxtofl@arg+1,f
 16565  2FBB  0CA2               	rrf	___xxtofl@arg,f
 16566  2FBC  0B89               	decfsz	9,f
 16567  2FBD  2FB8               	goto	u8845
 16568  2FBE                     l1260:	
 16569  2FBE  30FF               	movlw	255
 16570  2FBF  0525               	andwf	___xxtofl@arg+3,w
 16571  2FC0  1903               	btfsc	3,2
 16572  2FC1  2FD0               	goto	l6159
 16573  2FC2  2FAB               	goto	l6151
 16574  2FC3                     l6161:	
 16575  2FC3  3002               	movlw	2
 16576  2FC4  0221               	subwf	___xxtofl@exp,w
 16577  2FC5  1C03               	btfss	3,0
 16578  2FC6  2FD2               	goto	l1267
 16579  2FC7  3001               	movlw	1
 16580  2FC8  02A1               	subwf	___xxtofl@exp,f
 16581  2FC9  3001               	movlw	1
 16582  2FCA                     u8865:	
 16583  2FCA  35A2               	lslf	___xxtofl@arg,f
 16584  2FCB  0DA3               	rlf	___xxtofl@arg+1,f
 16585  2FCC  0DA4               	rlf	___xxtofl@arg+2,f
 16586  2FCD  0DA5               	rlf	___xxtofl@arg+3,f
 16587  2FCE  0B89               	decfsz	9,f
 16588  2FCF  2FCA               	goto	u8865
 16589  2FD0                     l6159:	
 16590  2FD0  1FA4               	btfss	___xxtofl@arg+2,7
 16591  2FD1  2FC3               	goto	l6161
 16592  2FD2                     l1267:	
 16593  2FD2  1821               	btfsc	___xxtofl@exp,0
 16594  2FD3  2FDC               	goto	l1268
 16595  2FD4  30FF               	movlw	255
 16596  2FD5  05A2               	andwf	___xxtofl@arg,f
 16597  2FD6  30FF               	movlw	255
 16598  2FD7  05A3               	andwf	___xxtofl@arg+1,f
 16599  2FD8  307F               	movlw	127
 16600  2FD9  05A4               	andwf	___xxtofl@arg+2,f
 16601  2FDA  30FF               	movlw	255
 16602  2FDB  05A5               	andwf	___xxtofl@arg+3,f
 16603  2FDC                     l1268:	
 16604  2FDC  1003               	clrc
 16605  2FDD  0CA1               	rrf	___xxtofl@exp,f
 16606  2FDE  0821               	movf	___xxtofl@exp,w
 16607  2FDF  00F5               	movwf	??___xxtofl
 16608  2FE0  01F6               	clrf	??___xxtofl+1
 16609  2FE1  01F7               	clrf	??___xxtofl+2
 16610  2FE2  01F8               	clrf	??___xxtofl+3
 16611  2FE3  3018               	movlw	24
 16612  2FE4                     u8905:	
 16613  2FE4  35F5               	lslf	??___xxtofl,f
 16614  2FE5  0DF6               	rlf	??___xxtofl+1,f
 16615  2FE6  0DF7               	rlf	??___xxtofl+2,f
 16616  2FE7  0DF8               	rlf	??___xxtofl+3,f
 16617  2FE8  0B89               	decfsz	9,f
 16618  2FE9  2FE4               	goto	u8905
 16619  2FEA  0875               	movf	??___xxtofl,w
 16620  2FEB  04A2               	iorwf	___xxtofl@arg,f
 16621  2FEC  0876               	movf	??___xxtofl+1,w
 16622  2FED  04A3               	iorwf	___xxtofl@arg+1,f
 16623  2FEE  0877               	movf	??___xxtofl+2,w
 16624  2FEF  04A4               	iorwf	___xxtofl@arg+2,f
 16625  2FF0  0878               	movf	??___xxtofl+3,w
 16626  2FF1  04A5               	iorwf	___xxtofl@arg+3,f
 16627  2FF2  0820               	movf	___xxtofl@sign,w
 16628  2FF3  1D03               	btfss	3,2
 16629  2FF4  1FF4               	btfss	___xxtofl@val+3,7
 16630  2FF5  2FF7               	goto	l6173
 16631  2FF6  17A5               	bsf	___xxtofl@arg+3,7
 16632  2FF7                     l6173:	
 16633  2FF7  0825               	movf	___xxtofl@arg+3,w
 16634  2FF8  00F4               	movwf	?___xxtofl+3
 16635  2FF9  0824               	movf	___xxtofl@arg+2,w
 16636  2FFA  00F3               	movwf	?___xxtofl+2
 16637  2FFB  0823               	movf	___xxtofl@arg+1,w
 16638  2FFC  00F2               	movwf	?___xxtofl+1
 16639  2FFD  0822               	movf	___xxtofl@arg,w
 16640  2FFE  00F1               	movwf	?___xxtofl
 16641  2FFF  0008               	return
 16642  3000                     __end_of___xxtofl:	
 16643                           
 16644                           	psect	text64
 16645  2BA4                     __ptext64:	
 16646 ;; *************** function ___fltol *****************
 16647 ;; Defined at:
 16648 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 16649 ;; Parameters:    Size  Location     Type
 16650 ;;  f1              4   58[BANK0 ] unsigned char 
 16651 ;; Auto vars:     Size  Location     Type
 16652 ;;  exp1            1   11[COMMON] unsigned char 
 16653 ;;  sign1           1   10[COMMON] unsigned char 
 16654 ;; Return value:  Size  Location     Type
 16655 ;;                  4   58[BANK0 ] long 
 16656 ;; Registers used:
 16657 ;;		wreg, status,2, status,0
 16658 ;; Tracked objects:
 16659 ;;		On entry : 0/0
 16660 ;;		On exit  : 0/0
 16661 ;;		Unchanged: 0/0
 16662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16663 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16665 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16666 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16667 ;;Total ram usage:       11 bytes
 16668 ;; Hardware stack levels used:    1
 16669 ;; Hardware stack levels required when called:    1
 16670 ;; This function calls:
 16671 ;;		Nothing
 16672 ;; This function is called by:
 16673 ;;		_AFE_getSetShortCircuitCurrent
 16674 ;;		_efgtoa
 16675 ;; This function uses a non-reentrant model
 16676 ;;
 16677                           
 16678                           
 16679                           ;psect for function ___fltol
 16680  2BA4                     ___fltol:	
 16681                           
 16682                           ;incstack = 0
 16683                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 16684  2BA4  1003               	clrc
 16685  2BA5  0020               	movlb	0	; select bank0
 16686  2BA6  0D5C               	rlf	___fltol@f1+2,w
 16687  2BA7  0D5D               	rlf	___fltol@f1+3,w
 16688  2BA8  00DE               	movwf	??___fltol
 16689  2BA9  085E               	movf	??___fltol,w
 16690  2BAA  00FB               	movwf	___fltol@exp1
 16691  2BAB  087B               	movf	___fltol@exp1,w
 16692  2BAC  1D03               	btfss	3,2
 16693  2BAD  2BB7               	goto	l4647
 16694  2BAE                     l4643:	
 16695  2BAE  3000               	movlw	0
 16696  2BAF  00DD               	movwf	?___fltol+3
 16697  2BB0  3000               	movlw	0
 16698  2BB1  00DC               	movwf	?___fltol+2
 16699  2BB2  3000               	movlw	0
 16700  2BB3  00DB               	movwf	?___fltol+1
 16701  2BB4  3000               	movlw	0
 16702  2BB5  00DA               	movwf	?___fltol
 16703  2BB6  0008               	return
 16704  2BB7                     l4647:	
 16705  2BB7  085A               	movf	___fltol@f1,w
 16706  2BB8  00DE               	movwf	??___fltol
 16707  2BB9  085B               	movf	___fltol@f1+1,w
 16708  2BBA  00DF               	movwf	??___fltol+1
 16709  2BBB  085C               	movf	___fltol@f1+2,w
 16710  2BBC  00E0               	movwf	??___fltol+2
 16711  2BBD  085D               	movf	___fltol@f1+3,w
 16712  2BBE  00E1               	movwf	??___fltol+3
 16713  2BBF  301F               	movlw	31
 16714  2BC0                     u6145:	
 16715  2BC0  36E1               	lsrf	??___fltol+3,f
 16716  2BC1  0CE0               	rrf	??___fltol+2,f
 16717  2BC2  0CDF               	rrf	??___fltol+1,f
 16718  2BC3  0CDE               	rrf	??___fltol,f
 16719  2BC4  0B89               	decfsz	9,f
 16720  2BC5  2BC0               	goto	u6145
 16721  2BC6  085E               	movf	??___fltol,w
 16722  2BC7  00E2               	movwf	??___fltol+4
 16723  2BC8  0862               	movf	??___fltol+4,w
 16724  2BC9  00FA               	movwf	___fltol@sign1
 16725  2BCA  17DC               	bsf	___fltol@f1+2,7
 16726  2BCB  30FF               	movlw	255
 16727  2BCC  05DA               	andwf	___fltol@f1,f
 16728  2BCD  30FF               	movlw	255
 16729  2BCE  05DB               	andwf	___fltol@f1+1,f
 16730  2BCF  30FF               	movlw	255
 16731  2BD0  05DC               	andwf	___fltol@f1+2,f
 16732  2BD1  3000               	movlw	0
 16733  2BD2  05DD               	andwf	___fltol@f1+3,f
 16734  2BD3  3096               	movlw	150
 16735  2BD4  02FB               	subwf	___fltol@exp1,f
 16736  2BD5  1FFB               	btfss	___fltol@exp1,7
 16737  2BD6  2BEA               	goto	l4665
 16738  2BD7  087B               	movf	___fltol@exp1,w
 16739  2BD8  3A80               	xorlw	128
 16740  2BD9  3E97               	addlw	151
 16741  2BDA  1C03               	btfss	3,0
 16742  2BDB  2BAE               	goto	l4643
 16743  2BDC                     l4663:	
 16744  2BDC  3001               	movlw	1
 16745  2BDD                     u6175:	
 16746  2BDD  36DD               	lsrf	___fltol@f1+3,f
 16747  2BDE  0CDC               	rrf	___fltol@f1+2,f
 16748  2BDF  0CDB               	rrf	___fltol@f1+1,f
 16749  2BE0  0CDA               	rrf	___fltol@f1,f
 16750  2BE1  0B89               	decfsz	9,f
 16751  2BE2  2BDD               	goto	u6175
 16752  2BE3  3001               	movlw	1
 16753  2BE4  00DE               	movwf	??___fltol
 16754  2BE5  085E               	movf	??___fltol,w
 16755  2BE6  07FB               	addwf	___fltol@exp1,f
 16756  2BE7  1903               	btfsc	3,2
 16757  2BE8  2BFB               	goto	l4673
 16758  2BE9  2BDC               	goto	l4663
 16759  2BEA                     l4665:	
 16760  2BEA  3020               	movlw	32
 16761  2BEB  027B               	subwf	___fltol@exp1,w
 16762  2BEC  1803               	btfsc	3,0
 16763  2BED  2BAE               	goto	l4643
 16764  2BEE                     l1020:	
 16765  2BEE  087B               	movf	___fltol@exp1,w
 16766  2BEF  1903               	btfsc	3,2
 16767  2BF0  2BFB               	goto	l4673
 16768  2BF1  3001               	movlw	1
 16769  2BF2                     u6205:	
 16770  2BF2  35DA               	lslf	___fltol@f1,f
 16771  2BF3  0DDB               	rlf	___fltol@f1+1,f
 16772  2BF4  0DDC               	rlf	___fltol@f1+2,f
 16773  2BF5  0DDD               	rlf	___fltol@f1+3,f
 16774  2BF6  0B89               	decfsz	9,f
 16775  2BF7  2BF2               	goto	u6205
 16776  2BF8  3001               	movlw	1
 16777  2BF9  02FB               	subwf	___fltol@exp1,f
 16778  2BFA  2BEE               	goto	l1020
 16779  2BFB                     l4673:	
 16780  2BFB  087A               	movf	___fltol@sign1,w
 16781  2BFC  1903               	btfsc	3,2
 16782  2BFD  0008               	return
 16783  2BFE  09DA               	comf	___fltol@f1,f
 16784  2BFF  09DB               	comf	___fltol@f1+1,f
 16785  2C00  09DC               	comf	___fltol@f1+2,f
 16786  2C01  09DD               	comf	___fltol@f1+3,f
 16787  2C02  0ADA               	incf	___fltol@f1,f
 16788  2C03  1903               	skipnz
 16789  2C04  0ADB               	incf	___fltol@f1+1,f
 16790  2C05  1903               	skipnz
 16791  2C06  0ADC               	incf	___fltol@f1+2,f
 16792  2C07  1903               	skipnz
 16793  2C08  0ADD               	incf	___fltol@f1+3,f
 16794  2C09  0008               	return
 16795  2C0A                     __end_of___fltol:	
 16796                           
 16797                           	psect	text65
 16798  1061                     __ptext65:	
 16799 ;; *************** function ___fldiv *****************
 16800 ;; Defined at:
 16801 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 16802 ;; Parameters:    Size  Location     Type
 16803 ;;  a               4   32[BANK0 ] long 
 16804 ;;  b               4   36[BANK0 ] long 
 16805 ;; Auto vars:     Size  Location     Type
 16806 ;;  grs             4   52[BANK0 ] unsigned long 
 16807 ;;  rem             4   45[BANK0 ] unsigned long 
 16808 ;;  new_exp         2   50[BANK0 ] int 
 16809 ;;  aexp            1   57[BANK0 ] unsigned char 
 16810 ;;  bexp            1   56[BANK0 ] unsigned char 
 16811 ;;  sign            1   49[BANK0 ] unsigned char 
 16812 ;; Return value:  Size  Location     Type
 16813 ;;                  4   32[BANK0 ] unsigned char 
 16814 ;; Registers used:
 16815 ;;		wreg, status,2, status,0
 16816 ;; Tracked objects:
 16817 ;;		On entry : 0/0
 16818 ;;		On exit  : 0/0
 16819 ;;		Unchanged: 0/0
 16820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16821 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16822 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16823 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16824 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16825 ;;Total ram usage:       26 bytes
 16826 ;; Hardware stack levels used:    1
 16827 ;; Hardware stack levels required when called:    1
 16828 ;; This function calls:
 16829 ;;		Nothing
 16830 ;; This function is called by:
 16831 ;;		_setShortCircuitProtection
 16832 ;;		_AFE_getSetShortCircuitCurrent
 16833 ;;		_efgtoa
 16834 ;; This function uses a non-reentrant model
 16835 ;;
 16836                           
 16837                           
 16838                           ;psect for function ___fldiv
 16839  1061                     ___fldiv:	
 16840                           
 16841                           ;incstack = 0
 16842                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 16843  1061  0020               	movlb	0	; select bank0
 16844  1062  0847               	movf	___fldiv@b+3,w
 16845  1063  3980               	andlw	128
 16846  1064  00C8               	movwf	??___fldiv
 16847  1065  0848               	movf	??___fldiv,w
 16848  1066  00D1               	movwf	___fldiv@sign
 16849  1067  3547               	lslf	___fldiv@b+3,w
 16850  1068  00C8               	movwf	??___fldiv
 16851  1069  0848               	movf	??___fldiv,w
 16852  106A  00D8               	movwf	___fldiv@bexp
 16853  106B  1BC6               	btfsc	___fldiv@b+2,7
 16854  106C  1458               	bsf	___fldiv@bexp,0
 16855  106D  0858               	movf	___fldiv@bexp,w
 16856  106E  1903               	btfsc	3,2
 16857  106F  287E               	goto	l4739
 16858  1070  0A58               	incf	___fldiv@bexp,w
 16859  1071  1D03               	btfss	3,2
 16860  1072  287B               	goto	l4735
 16861  1073  3000               	movlw	0
 16862  1074  00C7               	movwf	___fldiv@b+3
 16863  1075  3000               	movlw	0
 16864  1076  00C6               	movwf	___fldiv@b+2
 16865  1077  3000               	movlw	0
 16866  1078  00C5               	movwf	___fldiv@b+1
 16867  1079  3000               	movlw	0
 16868  107A  00C4               	movwf	___fldiv@b
 16869  107B                     l4735:	
 16870  107B  17C6               	bsf	___fldiv@b+2,7
 16871  107C  01C7               	clrf	___fldiv@b+3
 16872  107D  2886               	goto	l4741
 16873  107E                     l4739:	
 16874  107E  3000               	movlw	0
 16875  107F  00C7               	movwf	___fldiv@b+3
 16876  1080  3000               	movlw	0
 16877  1081  00C6               	movwf	___fldiv@b+2
 16878  1082  3000               	movlw	0
 16879  1083  00C5               	movwf	___fldiv@b+1
 16880  1084  3000               	movlw	0
 16881  1085  00C4               	movwf	___fldiv@b
 16882  1086                     l4741:	
 16883  1086  0843               	movf	___fldiv@a+3,w
 16884  1087  3980               	andlw	128
 16885  1088  00C8               	movwf	??___fldiv
 16886  1089  0848               	movf	??___fldiv,w
 16887  108A  06D1               	xorwf	___fldiv@sign,f
 16888  108B  3543               	lslf	___fldiv@a+3,w
 16889  108C  00C8               	movwf	??___fldiv
 16890  108D  0848               	movf	??___fldiv,w
 16891  108E  00D9               	movwf	___fldiv@aexp
 16892  108F  1BC2               	btfsc	___fldiv@a+2,7
 16893  1090  1459               	bsf	___fldiv@aexp,0
 16894  1091  0859               	movf	___fldiv@aexp,w
 16895  1092  1903               	btfsc	3,2
 16896  1093  28A2               	goto	l4759
 16897  1094  0A59               	incf	___fldiv@aexp,w
 16898  1095  1D03               	btfss	3,2
 16899  1096  289F               	goto	l4755
 16900  1097  3000               	movlw	0
 16901  1098  00C3               	movwf	___fldiv@a+3
 16902  1099  3000               	movlw	0
 16903  109A  00C2               	movwf	___fldiv@a+2
 16904  109B  3000               	movlw	0
 16905  109C  00C1               	movwf	___fldiv@a+1
 16906  109D  3000               	movlw	0
 16907  109E  00C0               	movwf	___fldiv@a
 16908  109F                     l4755:	
 16909  109F  17C2               	bsf	___fldiv@a+2,7
 16910  10A0  01C3               	clrf	___fldiv@a+3
 16911  10A1  28AA               	goto	l1176
 16912  10A2                     l4759:	
 16913  10A2  3000               	movlw	0
 16914  10A3  00C3               	movwf	___fldiv@a+3
 16915  10A4  3000               	movlw	0
 16916  10A5  00C2               	movwf	___fldiv@a+2
 16917  10A6  3000               	movlw	0
 16918  10A7  00C1               	movwf	___fldiv@a+1
 16919  10A8  3000               	movlw	0
 16920  10A9  00C0               	movwf	___fldiv@a
 16921  10AA                     l1176:	
 16922  10AA  0843               	movf	___fldiv@a+3,w
 16923  10AB  0442               	iorwf	___fldiv@a+2,w
 16924  10AC  0441               	iorwf	___fldiv@a+1,w
 16925  10AD  0440               	iorwf	___fldiv@a,w
 16926  10AE  1D03               	skipz
 16927  10AF  28C9               	goto	l4769
 16928  10B0  3000               	movlw	0
 16929  10B1  00C7               	movwf	___fldiv@b+3
 16930  10B2  3000               	movlw	0
 16931  10B3  00C6               	movwf	___fldiv@b+2
 16932  10B4  3000               	movlw	0
 16933  10B5  00C5               	movwf	___fldiv@b+1
 16934  10B6  3000               	movlw	0
 16935  10B7  00C4               	movwf	___fldiv@b
 16936  10B8  3080               	movlw	128
 16937  10B9  04C6               	iorwf	___fldiv@b+2,f
 16938  10BA  307F               	movlw	127
 16939  10BB  04C7               	iorwf	___fldiv@b+3,f
 16940  10BC                     L14:	
 16941  10BC  0851               	movf	___fldiv@sign,w
 16942  10BD  00C8               	movwf	??___fldiv
 16943  10BE  0848               	movf	??___fldiv,w
 16944  10BF  04C7               	iorwf	___fldiv@b+3,f
 16945  10C0  0847               	movf	___fldiv@b+3,w
 16946  10C1  00C3               	movwf	?___fldiv+3
 16947  10C2  0846               	movf	___fldiv@b+2,w
 16948  10C3  00C2               	movwf	?___fldiv+2
 16949  10C4  0845               	movf	___fldiv@b+1,w
 16950  10C5  00C1               	movwf	?___fldiv+1
 16951  10C6  0844               	movf	___fldiv@b,w
 16952  10C7  00C0               	movwf	?___fldiv
 16953  10C8  0008               	return
 16954  10C9                     l4769:	
 16955  10C9  0858               	movf	___fldiv@bexp,w
 16956  10CA  1D03               	btfss	3,2
 16957  10CB  28D5               	goto	l4775
 16958  10CC  3000               	movlw	0
 16959  10CD  00C3               	movwf	?___fldiv+3
 16960  10CE  3000               	movlw	0
 16961  10CF  00C2               	movwf	?___fldiv+2
 16962  10D0  3000               	movlw	0
 16963  10D1  00C1               	movwf	?___fldiv+1
 16964  10D2  3000               	movlw	0
 16965  10D3  00C0               	movwf	?___fldiv
 16966  10D4  0008               	return
 16967  10D5                     l4775:	
 16968  10D5  0858               	movf	___fldiv@bexp,w
 16969  10D6  00C8               	movwf	??___fldiv
 16970  10D7  01C9               	clrf	??___fldiv+1
 16971  10D8  0849               	movf	??___fldiv+1,w
 16972  10D9  00CB               	movwf	??___fldiv+3
 16973  10DA  0859               	movf	___fldiv@aexp,w
 16974  10DB  0248               	subwf	??___fldiv,w
 16975  10DC  00CA               	movwf	??___fldiv+2
 16976  10DD  1C03               	skipc
 16977  10DE  03CB               	decf	??___fldiv+3,f
 16978  10DF  084A               	movf	??___fldiv+2,w
 16979  10E0  3E7F               	addlw	127
 16980  10E1  00D2               	movwf	___fldiv@new_exp
 16981  10E2  3000               	movlw	0
 16982  10E3  3D4B               	addwfc	??___fldiv+3,w
 16983  10E4  00D3               	movwf	___fldiv@new_exp+1
 16984  10E5  0847               	movf	___fldiv@b+3,w
 16985  10E6  00D0               	movwf	___fldiv@rem+3
 16986  10E7  0846               	movf	___fldiv@b+2,w
 16987  10E8  00CF               	movwf	___fldiv@rem+2
 16988  10E9  0845               	movf	___fldiv@b+1,w
 16989  10EA  00CE               	movwf	___fldiv@rem+1
 16990  10EB  0844               	movf	___fldiv@b,w
 16991  10EC  00CD               	movwf	___fldiv@rem
 16992  10ED  3000               	movlw	0
 16993  10EE  00C7               	movwf	___fldiv@b+3
 16994  10EF  3000               	movlw	0
 16995  10F0  00C6               	movwf	___fldiv@b+2
 16996  10F1  3000               	movlw	0
 16997  10F2  00C5               	movwf	___fldiv@b+1
 16998  10F3  3000               	movlw	0
 16999  10F4  00C4               	movwf	___fldiv@b
 17000  10F5  3000               	movlw	0
 17001  10F6  00D7               	movwf	___fldiv@grs+3
 17002  10F7  3000               	movlw	0
 17003  10F8  00D6               	movwf	___fldiv@grs+2
 17004  10F9  3000               	movlw	0
 17005  10FA  00D5               	movwf	___fldiv@grs+1
 17006  10FB  3000               	movlw	0
 17007  10FC  00D4               	movwf	___fldiv@grs
 17008  10FD  01D9               	clrf	___fldiv@aexp
 17009  10FE                     l4803:	
 17010  10FE  301A               	movlw	26
 17011  10FF  0259               	subwf	___fldiv@aexp,w
 17012  1100  1803               	btfsc	3,0
 17013  1101  293A               	goto	l4805
 17014  1102  0859               	movf	___fldiv@aexp,w
 17015  1103  1903               	btfsc	3,2
 17016  1104  291C               	goto	l4795
 17017  1105  3001               	movlw	1
 17018  1106                     u6415:	
 17019  1106  35CD               	lslf	___fldiv@rem,f
 17020  1107  0DCE               	rlf	___fldiv@rem+1,f
 17021  1108  0DCF               	rlf	___fldiv@rem+2,f
 17022  1109  0DD0               	rlf	___fldiv@rem+3,f
 17023  110A  0B89               	decfsz	9,f
 17024  110B  2906               	goto	u6415
 17025  110C  3001               	movlw	1
 17026  110D                     u6425:	
 17027  110D  35C4               	lslf	___fldiv@b,f
 17028  110E  0DC5               	rlf	___fldiv@b+1,f
 17029  110F  0DC6               	rlf	___fldiv@b+2,f
 17030  1110  0DC7               	rlf	___fldiv@b+3,f
 17031  1111  0B89               	decfsz	9,f
 17032  1112  290D               	goto	u6425
 17033  1113  1BD7               	btfsc	___fldiv@grs+3,7
 17034  1114  1444               	bsf	___fldiv@b,0
 17035  1115  3001               	movlw	1
 17036  1116                     u6445:	
 17037  1116  35D4               	lslf	___fldiv@grs,f
 17038  1117  0DD5               	rlf	___fldiv@grs+1,f
 17039  1118  0DD6               	rlf	___fldiv@grs+2,f
 17040  1119  0DD7               	rlf	___fldiv@grs+3,f
 17041  111A  0B89               	decfsz	9,f
 17042  111B  2916               	goto	u6445
 17043  111C                     l4795:	
 17044  111C  0843               	movf	___fldiv@a+3,w
 17045  111D  0250               	subwf	___fldiv@rem+3,w
 17046  111E  1D03               	skipz
 17047  111F  292A               	goto	u6455
 17048  1120  0842               	movf	___fldiv@a+2,w
 17049  1121  024F               	subwf	___fldiv@rem+2,w
 17050  1122  1D03               	skipz
 17051  1123  292A               	goto	u6455
 17052  1124  0841               	movf	___fldiv@a+1,w
 17053  1125  024E               	subwf	___fldiv@rem+1,w
 17054  1126  1D03               	skipz
 17055  1127  292A               	goto	u6455
 17056  1128  0840               	movf	___fldiv@a,w
 17057  1129  024D               	subwf	___fldiv@rem,w
 17058  112A                     u6455:	
 17059  112A  1C03               	skipc
 17060  112B  2935               	goto	l4801
 17061  112C  1757               	bsf	___fldiv@grs+3,6
 17062  112D  0840               	movf	___fldiv@a,w
 17063  112E  02CD               	subwf	___fldiv@rem,f
 17064  112F  0841               	movf	___fldiv@a+1,w
 17065  1130  3BCE               	subwfb	___fldiv@rem+1,f
 17066  1131  0842               	movf	___fldiv@a+2,w
 17067  1132  3BCF               	subwfb	___fldiv@rem+2,f
 17068  1133  0843               	movf	___fldiv@a+3,w
 17069  1134  3BD0               	subwfb	___fldiv@rem+3,f
 17070  1135                     l4801:	
 17071  1135  3001               	movlw	1
 17072  1136  00C8               	movwf	??___fldiv
 17073  1137  0848               	movf	??___fldiv,w
 17074  1138  07D9               	addwf	___fldiv@aexp,f
 17075  1139  28FE               	goto	l4803
 17076  113A                     l4805:	
 17077  113A  0850               	movf	___fldiv@rem+3,w
 17078  113B  044F               	iorwf	___fldiv@rem+2,w
 17079  113C  044E               	iorwf	___fldiv@rem+1,w
 17080  113D  044D               	iorwf	___fldiv@rem,w
 17081  113E  1D03               	btfss	3,2
 17082  113F  1454               	bsf	___fldiv@grs,0
 17083  1140                     l4819:	
 17084  1140  1BC6               	btfsc	___fldiv@b+2,7
 17085  1141  2957               	goto	l4821
 17086  1142  3001               	movlw	1
 17087  1143                     u6485:	
 17088  1143  35C4               	lslf	___fldiv@b,f
 17089  1144  0DC5               	rlf	___fldiv@b+1,f
 17090  1145  0DC6               	rlf	___fldiv@b+2,f
 17091  1146  0DC7               	rlf	___fldiv@b+3,f
 17092  1147  0B89               	decfsz	9,f
 17093  1148  2943               	goto	u6485
 17094  1149  1BD7               	btfsc	___fldiv@grs+3,7
 17095  114A  1444               	bsf	___fldiv@b,0
 17096  114B  3001               	movlw	1
 17097  114C                     u6505:	
 17098  114C  35D4               	lslf	___fldiv@grs,f
 17099  114D  0DD5               	rlf	___fldiv@grs+1,f
 17100  114E  0DD6               	rlf	___fldiv@grs+2,f
 17101  114F  0DD7               	rlf	___fldiv@grs+3,f
 17102  1150  0B89               	decfsz	9,f
 17103  1151  294C               	goto	u6505
 17104  1152  30FF               	movlw	255
 17105  1153  07D2               	addwf	___fldiv@new_exp,f
 17106  1154  30FF               	movlw	255
 17107  1155  3DD3               	addwfc	___fldiv@new_exp+1,f
 17108  1156  2940               	goto	l4819
 17109  1157                     l4821:	
 17110  1157  01D9               	clrf	___fldiv@aexp
 17111  1158  1FD7               	btfss	___fldiv@grs+3,7
 17112  1159  2970               	goto	l4831
 17113  115A  30FF               	movlw	255
 17114  115B  0554               	andwf	___fldiv@grs,w
 17115  115C  00C8               	movwf	??___fldiv
 17116  115D  30FF               	movlw	255
 17117  115E  0555               	andwf	___fldiv@grs+1,w
 17118  115F  00C9               	movwf	??___fldiv+1
 17119  1160  30FF               	movlw	255
 17120  1161  0556               	andwf	___fldiv@grs+2,w
 17121  1162  00CA               	movwf	??___fldiv+2
 17122  1163  307F               	movlw	127
 17123  1164  0557               	andwf	___fldiv@grs+3,w
 17124  1165  00CB               	movwf	??___fldiv+3
 17125  1166  084B               	movf	??___fldiv+3,w
 17126  1167  044A               	iorwf	??___fldiv+2,w
 17127  1168  0449               	iorwf	??___fldiv+1,w
 17128  1169  0448               	iorwf	??___fldiv,w
 17129  116A  1903               	skipnz
 17130  116B  1844               	btfsc	___fldiv@b,0
 17131  116C  296E               	goto	l4827
 17132  116D  2970               	goto	l4831
 17133  116E                     l4827:	
 17134  116E  01D9               	clrf	___fldiv@aexp
 17135  116F  0AD9               	incf	___fldiv@aexp,f
 17136  1170                     l4831:	
 17137  1170  0859               	movf	___fldiv@aexp,w
 17138  1171  1903               	btfsc	3,2
 17139  1172  2999               	goto	l4841
 17140  1173  3001               	movlw	1
 17141  1174  07C4               	addwf	___fldiv@b,f
 17142  1175  3000               	movlw	0
 17143  1176  3DC5               	addwfc	___fldiv@b+1,f
 17144  1177  3000               	movlw	0
 17145  1178  3DC6               	addwfc	___fldiv@b+2,f
 17146  1179  3000               	movlw	0
 17147  117A  3DC7               	addwfc	___fldiv@b+3,f
 17148  117B  1C47               	btfss	___fldiv@b+3,0
 17149  117C  2999               	goto	l4841
 17150  117D  0844               	movf	___fldiv@b,w
 17151  117E  00C8               	movwf	??___fldiv
 17152  117F  0845               	movf	___fldiv@b+1,w
 17153  1180  00C9               	movwf	??___fldiv+1
 17154  1181  0846               	movf	___fldiv@b+2,w
 17155  1182  00CA               	movwf	??___fldiv+2
 17156  1183  0847               	movf	___fldiv@b+3,w
 17157  1184  00CB               	movwf	??___fldiv+3
 17158  1185  3001               	movlw	1
 17159  1186  00CC               	movwf	??___fldiv+4
 17160  1187                     u6575:	
 17161  1187  37CB               	asrf	??___fldiv+3,f
 17162  1188  0CCA               	rrf	??___fldiv+2,f
 17163  1189  0CC9               	rrf	??___fldiv+1,f
 17164  118A  0CC8               	rrf	??___fldiv,f
 17165  118B  0BCC               	decfsz	??___fldiv+4,f
 17166  118C  2987               	goto	u6575
 17167  118D  084B               	movf	??___fldiv+3,w
 17168  118E  00C7               	movwf	___fldiv@b+3
 17169  118F  084A               	movf	??___fldiv+2,w
 17170  1190  00C6               	movwf	___fldiv@b+2
 17171  1191  0849               	movf	??___fldiv+1,w
 17172  1192  00C5               	movwf	___fldiv@b+1
 17173  1193  0848               	movf	??___fldiv,w
 17174  1194  00C4               	movwf	___fldiv@b
 17175  1195  3001               	movlw	1
 17176  1196  07D2               	addwf	___fldiv@new_exp,f
 17177  1197  3000               	movlw	0
 17178  1198  3DD3               	addwfc	___fldiv@new_exp+1,f
 17179  1199                     l4841:	
 17180  1199  0853               	movf	___fldiv@new_exp+1,w
 17181  119A  3A80               	xorlw	128
 17182  119B  00C8               	movwf	??___fldiv
 17183  119C  3080               	movlw	128
 17184  119D  0248               	subwf	??___fldiv,w
 17185  119E  1D03               	skipz
 17186  119F  29A2               	goto	u6585
 17187  11A0  30FF               	movlw	255
 17188  11A1  0252               	subwf	___fldiv@new_exp,w
 17189  11A2                     u6585:	
 17190  11A2  1C03               	skipc
 17191  11A3  29B1               	goto	l1197
 17192  11A4  30FF               	movlw	255
 17193  11A5  0020               	movlb	0	; select bank0
 17194  11A6  00D2               	movwf	___fldiv@new_exp
 17195  11A7  3000               	movlw	0
 17196  11A8  00D3               	movwf	___fldiv@new_exp+1
 17197  11A9  3000               	movlw	0
 17198  11AA  00C7               	movwf	___fldiv@b+3
 17199  11AB  3000               	movlw	0
 17200  11AC  00C6               	movwf	___fldiv@b+2
 17201  11AD  3000               	movlw	0
 17202  11AE  00C5               	movwf	___fldiv@b+1
 17203  11AF  3000               	movlw	0
 17204  11B0  00C4               	movwf	___fldiv@b
 17205  11B1                     l1197:	
 17206  11B1  0020               	movlb	0	; select bank0
 17207  11B2  0853               	movf	___fldiv@new_exp+1,w
 17208  11B3  3A80               	xorlw	128
 17209  11B4  00C8               	movwf	??___fldiv
 17210  11B5  3080               	movlw	128
 17211  11B6  0248               	subwf	??___fldiv,w
 17212  11B7  1D03               	skipz
 17213  11B8  29BB               	goto	u6595
 17214  11B9  3001               	movlw	1
 17215  11BA  0252               	subwf	___fldiv@new_exp,w
 17216  11BB                     u6595:	
 17217  11BB  1803               	skipnc
 17218  11BC  29C9               	goto	l1198
 17219  11BD  0020               	movlb	0	; select bank0
 17220  11BE  01D2               	clrf	___fldiv@new_exp
 17221  11BF  01D3               	clrf	___fldiv@new_exp+1
 17222  11C0  3000               	movlw	0
 17223  11C1  00C7               	movwf	___fldiv@b+3
 17224  11C2  3000               	movlw	0
 17225  11C3  00C6               	movwf	___fldiv@b+2
 17226  11C4  3000               	movlw	0
 17227  11C5  00C5               	movwf	___fldiv@b+1
 17228  11C6  3000               	movlw	0
 17229  11C7  00C4               	movwf	___fldiv@b
 17230  11C8  01D1               	clrf	___fldiv@sign
 17231  11C9                     l1198:	
 17232  11C9  0020               	movlb	0	; select bank0
 17233  11CA  0852               	movf	___fldiv@new_exp,w
 17234  11CB  00C8               	movwf	??___fldiv
 17235  11CC  0848               	movf	??___fldiv,w
 17236  11CD  00D8               	movwf	___fldiv@bexp
 17237  11CE  1C58               	btfss	___fldiv@bexp,0
 17238  11CF  29D2               	goto	l4855
 17239  11D0  17C6               	bsf	___fldiv@b+2,7
 17240  11D1  29D6               	goto	l1200
 17241  11D2                     l4855:	
 17242  11D2  307F               	movlw	127
 17243  11D3  00C8               	movwf	??___fldiv
 17244  11D4  0848               	movf	??___fldiv,w
 17245  11D5  05C6               	andwf	___fldiv@b+2,f
 17246  11D6                     l1200:	
 17247  11D6  3658               	lsrf	___fldiv@bexp,w
 17248  11D7  00C8               	movwf	??___fldiv
 17249  11D8  0848               	movf	??___fldiv,w
 17250  11D9  00C7               	movwf	___fldiv@b+3
 17251  11DA  28BC               	goto	L14
 17252  11DB                     __end_of___fldiv:	
 17253                           
 17254                           	psect	text66
 17255  36A3                     __ptext66:	
 17256 ;; *************** function _AFE_getSetCurrentSenseRes *****************
 17257 ;; Defined at:
 17258 ;;		line 109 in file "BQ76920.c"
 17259 ;; Parameters:    Size  Location     Type
 17260 ;;		None
 17261 ;; Auto vars:     Size  Location     Type
 17262 ;;		None
 17263 ;; Return value:  Size  Location     Type
 17264 ;;                  4    1[COMMON] float 
 17265 ;; Registers used:
 17266 ;;		wreg
 17267 ;; Tracked objects:
 17268 ;;		On entry : 0/0
 17269 ;;		On exit  : 0/0
 17270 ;;		Unchanged: 0/0
 17271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17272 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17275 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17276 ;;Total ram usage:        4 bytes
 17277 ;; Hardware stack levels used:    1
 17278 ;; Hardware stack levels required when called:    1
 17279 ;; This function calls:
 17280 ;;		Nothing
 17281 ;; This function is called by:
 17282 ;;		_statemachine
 17283 ;; This function uses a non-reentrant model
 17284 ;;
 17285                           
 17286                           
 17287                           ;psect for function _AFE_getSetCurrentSenseRes
 17288  36A3                     _AFE_getSetCurrentSenseRes:	
 17289                           
 17290                           ;BQ76920.c: 110:         return (float) shuntResistorValue_mOhm;
 17291                           
 17292                           ;incstack = 0
 17293                           ; Regs used in _AFE_getSetCurrentSenseRes: [wreg]
 17294  36A3  0023               	movlb	3	; select bank3
 17295  36A4  0835               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17296  36A5  00F4               	movwf	?_AFE_getSetCurrentSenseRes+3
 17297  36A6  0834               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17298  36A7  00F3               	movwf	?_AFE_getSetCurrentSenseRes+2
 17299  36A8  0833               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17300  36A9  00F2               	movwf	?_AFE_getSetCurrentSenseRes+1
 17301  36AA  0832               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17302  36AB  00F1               	movwf	?_AFE_getSetCurrentSenseRes
 17303  36AC  0008               	return
 17304  36AD                     __end_of_AFE_getSetCurrentSenseRes:	
 17305                           
 17306                           	psect	text67
 17307  2001                     __ptext67:	
 17308 ;; *************** function _init_TMR1 *****************
 17309 ;; Defined at:
 17310 ;;		line 165 in file "main.c"
 17311 ;; Parameters:    Size  Location     Type
 17312 ;;		None
 17313 ;; Auto vars:     Size  Location     Type
 17314 ;;		None
 17315 ;; Return value:  Size  Location     Type
 17316 ;;                  1    wreg      void 
 17317 ;; Registers used:
 17318 ;;		wreg, status,2, status,0
 17319 ;; Tracked objects:
 17320 ;;		On entry : 0/0
 17321 ;;		On exit  : 0/0
 17322 ;;		Unchanged: 0/0
 17323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17328 ;;Total ram usage:        0 bytes
 17329 ;; Hardware stack levels used:    1
 17330 ;; Hardware stack levels required when called:    1
 17331 ;; This function calls:
 17332 ;;		Nothing
 17333 ;; This function is called by:
 17334 ;;		_main
 17335 ;; This function uses a non-reentrant model
 17336 ;;
 17337                           
 17338                           
 17339                           ;psect for function _init_TMR1
 17340  2001                     _init_TMR1:	
 17341                           
 17342                           ;main.c: 168:     T1CONbits.T1CKPS = 0b00;
 17343                           
 17344                           ;incstack = 0
 17345                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 17346  2001  30CF               	movlw	-49
 17347  2002  0020               	movlb	0	; select bank0
 17348  2003  0598               	andwf	24,f	;volatile
 17349                           
 17350                           ;main.c: 170:     TMR1 = 0;
 17351  2004  0196               	clrf	22	;volatile
 17352  2005  0197               	clrf	23	;volatile
 17353                           
 17354                           ;main.c: 172:     T1CONbits.TMR1ON = 1;
 17355  2006  1418               	bsf	24,0	;volatile
 17356                           
 17357                           ;main.c: 174:     PIE1bits.TMR1IE = 1;
 17358  2007  0021               	movlb	1	; select bank1
 17359  2008  1411               	bsf	17,0	;volatile
 17360                           
 17361                           ;main.c: 176:     INTCONbits.PEIE = 1;
 17362  2009  170B               	bsf	11,6	;volatile
 17363                           
 17364                           ;main.c: 178:     (INTCONbits.GIE = 1);
 17365  200A  178B               	bsf	11,7	;volatile
 17366  200B  0008               	return
 17367  200C                     __end_of_init_TMR1:	
 17368                           
 17369                           	psect	text68
 17370  3662                     __ptext68:	
 17371 ;; *************** function _init_RGB *****************
 17372 ;; Defined at:
 17373 ;;		line 6 in file "RGB.c"
 17374 ;; Parameters:    Size  Location     Type
 17375 ;;		None
 17376 ;; Auto vars:     Size  Location     Type
 17377 ;;		None
 17378 ;; Return value:  Size  Location     Type
 17379 ;;                  1    wreg      void 
 17380 ;; Registers used:
 17381 ;;		None
 17382 ;; Tracked objects:
 17383 ;;		On entry : 0/0
 17384 ;;		On exit  : 0/0
 17385 ;;		Unchanged: 0/0
 17386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17391 ;;Total ram usage:        0 bytes
 17392 ;; Hardware stack levels used:    1
 17393 ;; Hardware stack levels required when called:    1
 17394 ;; This function calls:
 17395 ;;		Nothing
 17396 ;; This function is called by:
 17397 ;;		_main
 17398 ;; This function uses a non-reentrant model
 17399 ;;
 17400                           
 17401                           
 17402                           ;psect for function _init_RGB
 17403  3662                     _init_RGB:	
 17404                           
 17405                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 17406                           
 17407                           ;incstack = 0
 17408                           ; Regs used in _init_RGB: []
 17409  3662  0022               	movlb	2	; select bank2
 17410  3663  160C               	bsf	12,4	;volatile
 17411                           
 17412                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 17413  3664  168C               	bsf	12,5	;volatile
 17414                           
 17415                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 17416  3665  1410               	bsf	16,0	;volatile
 17417  3666  0008               	return
 17418  3667                     __end_of_init_RGB:	
 17419                           
 17420                           	psect	text69
 17421  36C1                     __ptext69:	
 17422 ;; *************** function _init_I2C *****************
 17423 ;; Defined at:
 17424 ;;		line 10 in file "I2C.c"
 17425 ;; Parameters:    Size  Location     Type
 17426 ;;		None
 17427 ;; Auto vars:     Size  Location     Type
 17428 ;;		None
 17429 ;; Return value:  Size  Location     Type
 17430 ;;                  1    wreg      void 
 17431 ;; Registers used:
 17432 ;;		wreg, status,2, status,0
 17433 ;; Tracked objects:
 17434 ;;		On entry : 0/0
 17435 ;;		On exit  : 0/0
 17436 ;;		Unchanged: 0/0
 17437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17442 ;;Total ram usage:        1 bytes
 17443 ;; Hardware stack levels used:    1
 17444 ;; Hardware stack levels required when called:    1
 17445 ;; This function calls:
 17446 ;;		Nothing
 17447 ;; This function is called by:
 17448 ;;		_main
 17449 ;; This function uses a non-reentrant model
 17450 ;;
 17451                           
 17452                           
 17453                           ;psect for function _init_I2C
 17454  36C1                     _init_I2C:	
 17455                           
 17456                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 17457                           
 17458                           ;incstack = 0
 17459                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 17460  36C1  0024               	movlb	4	; select bank4
 17461  36C2  0815               	movf	21,w	;volatile
 17462  36C3  39F0               	andlw	-16
 17463  36C4  3808               	iorlw	8
 17464  36C5  0095               	movwf	21	;volatile
 17465                           
 17466                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 17467  36C6  1695               	bsf	21,5	;volatile
 17468                           
 17469                           ;I2C.c: 24:     SSPADD = 39;
 17470  36C7  3027               	movlw	39
 17471  36C8  0092               	movwf	18	;volatile
 17472                           
 17473                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 17474  36C9  3034               	movlw	52
 17475  36CA  00F1               	movwf	??_init_I2C
 17476  36CB  30F2               	movlw	242
 17477  36CC                     u11897:	
 17478  36CC  0B89               	decfsz	9,f
 17479  36CD  2ECC               	goto	u11897
 17480  36CE  0BF1               	decfsz	??_init_I2C,f
 17481  36CF  2ECC               	goto	u11897
 17482  36D0  0008               	return
 17483  36D1                     __end_of_init_I2C:	
 17484                           
 17485                           	psect	text70
 17486  0807                     __ptext70:	
 17487 ;; *************** function _init_GPIO *****************
 17488 ;; Defined at:
 17489 ;;		line 182 in file "main.c"
 17490 ;; Parameters:    Size  Location     Type
 17491 ;;		None
 17492 ;; Auto vars:     Size  Location     Type
 17493 ;;		None
 17494 ;; Return value:  Size  Location     Type
 17495 ;;                  1    wreg      void 
 17496 ;; Registers used:
 17497 ;;		wreg, status,2, status,0
 17498 ;; Tracked objects:
 17499 ;;		On entry : 0/0
 17500 ;;		On exit  : 0/0
 17501 ;;		Unchanged: 0/0
 17502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17507 ;;Total ram usage:        0 bytes
 17508 ;; Hardware stack levels used:    1
 17509 ;; Hardware stack levels required when called:    1
 17510 ;; This function calls:
 17511 ;;		Nothing
 17512 ;; This function is called by:
 17513 ;;		_main
 17514 ;; This function uses a non-reentrant model
 17515 ;;
 17516                           
 17517                           
 17518                           ;psect for function _init_GPIO
 17519  0807                     _init_GPIO:	
 17520                           
 17521                           ;main.c: 188:     TRISBbits.TRISB2 = 0;
 17522                           
 17523                           ;incstack = 0
 17524                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 17525  0807  0021               	movlb	1	; select bank1
 17526  0808  110D               	bcf	13,2	;volatile
 17527                           
 17528                           ;main.c: 189:     ANSELBbits.ANSB2 = 0;
 17529  0809  0023               	movlb	3	; select bank3
 17530  080A  110D               	bcf	13,2	;volatile
 17531                           
 17532                           ;main.c: 190:     TRISBbits.TRISB3 = 1;
 17533  080B  0021               	movlb	1	; select bank1
 17534  080C  158D               	bsf	13,3	;volatile
 17535                           
 17536                           ;main.c: 191:     ANSELBbits.ANSB3 = 0;
 17537  080D  0023               	movlb	3	; select bank3
 17538  080E  118D               	bcf	13,3	;volatile
 17539                           
 17540                           ;main.c: 196:     ANSELCbits.ANSC4 = 0;
 17541  080F  120E               	bcf	14,4	;volatile
 17542                           
 17543                           ;main.c: 197:     ANSELCbits.ANSC5 = 0;
 17544  0810  128E               	bcf	14,5	;volatile
 17545                           
 17546                           ;main.c: 198:     TRISCbits.TRISC4 = 1;
 17547  0811  0021               	movlb	1	; select bank1
 17548  0812  160E               	bsf	14,4	;volatile
 17549                           
 17550                           ;main.c: 199:     TRISCbits.TRISC5 = 1;
 17551  0813  168E               	bsf	14,5	;volatile
 17552                           
 17553                           ;main.c: 208:     TRISAbits.TRISA4 = 0;
 17554  0814  120C               	bcf	12,4	;volatile
 17555                           
 17556                           ;main.c: 209:     TRISAbits.TRISA5 = 0;
 17557  0815  128C               	bcf	12,5	;volatile
 17558                           
 17559                           ;main.c: 210:     TRISEbits.TRISE0 = 0;
 17560  0816  1010               	bcf	16,0	;volatile
 17561                           
 17562                           ;main.c: 216:     PPSLOCK = 0x55;
 17563  0817  3055               	movlw	85
 17564  0818  003C               	movlb	28	; select bank28
 17565  0819  008F               	movwf	15	;volsfr
 17566                           
 17567                           ;main.c: 217:     PPSLOCK = 0xAA;
 17568  081A  30AA               	movlw	170
 17569  081B  008F               	movwf	15	;volsfr
 17570                           
 17571                           ;main.c: 218:     PPSLOCKbits.PPSLOCKED = 0x00;
 17572  081C  100F               	bcf	15,0	;volsfr
 17573                           
 17574                           ;main.c: 222:     RC4PPSbits.RC4PPS = 0x0011;
 17575  081D  003D               	movlb	29	; select bank29
 17576  081E  0824               	movf	36,w	;volatile
 17577  081F  39E0               	andlw	-32
 17578  0820  3811               	iorlw	17
 17579  0821  00A4               	movwf	36	;volatile
 17580                           
 17581                           ;main.c: 223:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 17582  0822  003C               	movlb	28	; select bank28
 17583  0823  0821               	movf	33,w	;volatile
 17584  0824  39E0               	andlw	-32
 17585  0825  3814               	iorlw	20
 17586  0826  00A1               	movwf	33	;volatile
 17587                           
 17588                           ;main.c: 224:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 17589  0827  0820               	movf	32,w	;volatile
 17590  0828  39E0               	andlw	-32
 17591  0829  3815               	iorlw	21
 17592  082A  00A0               	movwf	32	;volatile
 17593                           
 17594                           ;main.c: 225:     RC5PPSbits.RC5PPS = 0x0010;
 17595  082B  003D               	movlb	29	; select bank29
 17596  082C  0825               	movf	37,w	;volatile
 17597  082D  39E0               	andlw	-32
 17598  082E  3810               	iorlw	16
 17599  082F  00A5               	movwf	37	;volatile
 17600                           
 17601                           ;main.c: 228:     RB2PPSbits.RB2PPS = 0x14;
 17602  0830  081A               	movf	26,w	;volatile
 17603  0831  39E0               	andlw	-32
 17604  0832  3814               	iorlw	20
 17605  0833  009A               	movwf	26	;volatile
 17606                           
 17607                           ;main.c: 229:     RXPPSbits.RXPPS = 0x0B;
 17608  0834  003C               	movlb	28	; select bank28
 17609  0835  0824               	movf	36,w	;volatile
 17610  0836  39E0               	andlw	-32
 17611  0837  380B               	iorlw	11
 17612  0838  00A4               	movwf	36	;volatile
 17613                           
 17614                           ;main.c: 231:     PPSLOCK = 0x55;
 17615  0839  3055               	movlw	85
 17616  083A  008F               	movwf	15	;volsfr
 17617                           
 17618                           ;main.c: 232:     PPSLOCK = 0xAA;
 17619  083B  30AA               	movlw	170
 17620  083C  008F               	movwf	15	;volsfr
 17621                           
 17622                           ;main.c: 233:     PPSLOCKbits.PPSLOCKED = 0x01;
 17623  083D  140F               	bsf	15,0	;volsfr
 17624  083E  0008               	return
 17625  083F                     __end_of_init_GPIO:	
 17626                           
 17627                           	psect	text71
 17628  1801                     __ptext71:	
 17629 ;; *************** function _initClock *****************
 17630 ;; Defined at:
 17631 ;;		line 156 in file "main.c"
 17632 ;; Parameters:    Size  Location     Type
 17633 ;;		None
 17634 ;; Auto vars:     Size  Location     Type
 17635 ;;		None
 17636 ;; Return value:  Size  Location     Type
 17637 ;;                  1    wreg      void 
 17638 ;; Registers used:
 17639 ;;		status,2, status,0, pclath, cstack
 17640 ;; Tracked objects:
 17641 ;;		On entry : 0/0
 17642 ;;		On exit  : 0/0
 17643 ;;		Unchanged: 0/0
 17644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17649 ;;Total ram usage:        0 bytes
 17650 ;; Hardware stack levels used:    1
 17651 ;; Hardware stack levels required when called:    2
 17652 ;; This function calls:
 17653 ;;		_internal_16
 17654 ;; This function is called by:
 17655 ;;		_main
 17656 ;; This function uses a non-reentrant model
 17657 ;;
 17658                           
 17659                           
 17660                           ;psect for function _initClock
 17661  1801                     _initClock:	
 17662                           
 17663                           ;main.c: 158:     internal_16();
 17664                           
 17665                           ;incstack = 0
 17666                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 17667  1801  31B6  267F         	fcall	_internal_16
 17668  1803  0008               	return
 17669  1804                     __end_of_initClock:	
 17670                           
 17671                           	psect	text72
 17672  367F                     __ptext72:	
 17673 ;; *************** function _internal_16 *****************
 17674 ;; Defined at:
 17675 ;;		line 26 in file "pic16f1719_internals.c"
 17676 ;; Parameters:    Size  Location     Type
 17677 ;;		None
 17678 ;; Auto vars:     Size  Location     Type
 17679 ;;		None
 17680 ;; Return value:  Size  Location     Type
 17681 ;;                  1    wreg      void 
 17682 ;; Registers used:
 17683 ;;		None
 17684 ;; Tracked objects:
 17685 ;;		On entry : 0/0
 17686 ;;		On exit  : 0/0
 17687 ;;		Unchanged: 0/0
 17688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17693 ;;Total ram usage:        0 bytes
 17694 ;; Hardware stack levels used:    1
 17695 ;; Hardware stack levels required when called:    1
 17696 ;; This function calls:
 17697 ;;		Nothing
 17698 ;; This function is called by:
 17699 ;;		_initClock
 17700 ;; This function uses a non-reentrant model
 17701 ;;
 17702                           
 17703                           
 17704                           ;psect for function _internal_16
 17705  367F                     _internal_16:	
 17706                           
 17707                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 17708                           
 17709                           ;incstack = 0
 17710                           ; Regs used in _internal_16: []
 17711  367F  0021               	movlb	1	; select bank1
 17712  3680  1019               	bcf	25,0	;volatile
 17713                           
 17714                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 17715  3681  1099               	bcf	25,1	;volatile
 17716                           
 17717                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 17718  3682  1599               	bsf	25,3	;volatile
 17719                           
 17720                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 17721  3683  1619               	bsf	25,4	;volatile
 17722                           
 17723                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 17724  3684  1699               	bsf	25,5	;volatile
 17725                           
 17726                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 17727  3685  1719               	bsf	25,6	;volatile
 17728                           
 17729                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 17730  3686  1399               	bcf	25,7	;volatile
 17731  3687  0008               	return
 17732  3688                     __end_of_internal_16:	
 17733                           
 17734                           	psect	text73
 17735  21A3                     __ptext73:	
 17736 ;; *************** function _EUSART_Initialize *****************
 17737 ;; Defined at:
 17738 ;;		line 6 in file "EUSART.c"
 17739 ;; Parameters:    Size  Location     Type
 17740 ;;  baudrate        4    6[BANK0 ] const long 
 17741 ;; Auto vars:     Size  Location     Type
 17742 ;;  x               2   10[COMMON] unsigned int 
 17743 ;; Return value:  Size  Location     Type
 17744 ;;                  1    wreg      unsigned char 
 17745 ;; Registers used:
 17746 ;;		wreg, status,2, status,0, pclath, cstack
 17747 ;; Tracked objects:
 17748 ;;		On entry : 0/0
 17749 ;;		On exit  : 0/0
 17750 ;;		Unchanged: 0/0
 17751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17752 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17753 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17754 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17755 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17756 ;;Total ram usage:       18 bytes
 17757 ;; Hardware stack levels used:    1
 17758 ;; Hardware stack levels required when called:    2
 17759 ;; This function calls:
 17760 ;;		___aldiv
 17761 ;; This function is called by:
 17762 ;;		_main
 17763 ;; This function uses a non-reentrant model
 17764 ;;
 17765                           
 17766                           
 17767                           ;psect for function _EUSART_Initialize
 17768  21A3                     _EUSART_Initialize:	
 17769                           
 17770                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 17771                           
 17772                           ;incstack = 0
 17773                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17774  21A3  0020               	movlb	0	; select bank0
 17775  21A4  0826               	movf	EUSART_Initialize@baudrate,w
 17776  21A5  00AA               	movwf	??_EUSART_Initialize
 17777  21A6  0827               	movf	EUSART_Initialize@baudrate+1,w
 17778  21A7  00AB               	movwf	??_EUSART_Initialize+1
 17779  21A8  0828               	movf	EUSART_Initialize@baudrate+2,w
 17780  21A9  00AC               	movwf	??_EUSART_Initialize+2
 17781  21AA  0829               	movf	EUSART_Initialize@baudrate+3,w
 17782  21AB  00AD               	movwf	??_EUSART_Initialize+3
 17783  21AC  3006               	movlw	6
 17784  21AD                     u9225:	
 17785  21AD  35AA               	lslf	??_EUSART_Initialize,f
 17786  21AE  0DAB               	rlf	??_EUSART_Initialize+1,f
 17787  21AF  0DAC               	rlf	??_EUSART_Initialize+2,f
 17788  21B0  0DAD               	rlf	??_EUSART_Initialize+3,f
 17789  21B1  0B89               	decfsz	9,f
 17790  21B2  29AD               	goto	u9225
 17791  21B3  082D               	movf	??_EUSART_Initialize+3,w
 17792  21B4  00F4               	movwf	___aldiv@divisor+3
 17793  21B5  082C               	movf	??_EUSART_Initialize+2,w
 17794  21B6  00F3               	movwf	___aldiv@divisor+2
 17795  21B7  082B               	movf	??_EUSART_Initialize+1,w
 17796  21B8  00F2               	movwf	___aldiv@divisor+1
 17797  21B9  082A               	movf	??_EUSART_Initialize,w
 17798  21BA  00F1               	movwf	___aldiv@divisor
 17799  21BB  0826               	movf	EUSART_Initialize@baudrate,w
 17800  21BC  00AE               	movwf	??_EUSART_Initialize+4
 17801  21BD  0827               	movf	EUSART_Initialize@baudrate+1,w
 17802  21BE  00AF               	movwf	??_EUSART_Initialize+5
 17803  21BF  0828               	movf	EUSART_Initialize@baudrate+2,w
 17804  21C0  00B0               	movwf	??_EUSART_Initialize+6
 17805  21C1  0829               	movf	EUSART_Initialize@baudrate+3,w
 17806  21C2  00B1               	movwf	??_EUSART_Initialize+7
 17807  21C3  3006               	movlw	6
 17808  21C4                     u9235:	
 17809  21C4  35AE               	lslf	??_EUSART_Initialize+4,f
 17810  21C5  0DAF               	rlf	??_EUSART_Initialize+5,f
 17811  21C6  0DB0               	rlf	??_EUSART_Initialize+6,f
 17812  21C7  0DB1               	rlf	??_EUSART_Initialize+7,f
 17813  21C8  0B89               	decfsz	9,f
 17814  21C9  29C4               	goto	u9235
 17815  21CA  3000               	movlw	0
 17816  21CB  00B2               	movwf	??_EUSART_Initialize+8
 17817  21CC  3024               	movlw	36
 17818  21CD  00B3               	movwf	??_EUSART_Initialize+9
 17819  21CE  30F4               	movlw	244
 17820  21CF  00B4               	movwf	??_EUSART_Initialize+10
 17821  21D0  3000               	movlw	0
 17822  21D1  00B5               	movwf	??_EUSART_Initialize+11
 17823  21D2  082E               	movf	??_EUSART_Initialize+4,w
 17824  21D3  02B2               	subwf	??_EUSART_Initialize+8,f
 17825  21D4  082F               	movf	??_EUSART_Initialize+5,w
 17826  21D5  3BB3               	subwfb	??_EUSART_Initialize+9,f
 17827  21D6  0830               	movf	??_EUSART_Initialize+6,w
 17828  21D7  3BB4               	subwfb	??_EUSART_Initialize+10,f
 17829  21D8  0831               	movf	??_EUSART_Initialize+7,w
 17830  21D9  3BB5               	subwfb	??_EUSART_Initialize+11,f
 17831  21DA  0835               	movf	??_EUSART_Initialize+11,w
 17832  21DB  00F8               	movwf	___aldiv@dividend+3
 17833  21DC  0834               	movf	??_EUSART_Initialize+10,w
 17834  21DD  00F7               	movwf	___aldiv@dividend+2
 17835  21DE  0833               	movf	??_EUSART_Initialize+9,w
 17836  21DF  00F6               	movwf	___aldiv@dividend+1
 17837  21E0  0832               	movf	??_EUSART_Initialize+8,w
 17838  21E1  00F5               	movwf	___aldiv@dividend
 17839  21E2  31AE  2660  31A1   	fcall	___aldiv
 17840  21E5  0872               	movf	?___aldiv+1,w
 17841  21E6  00FB               	movwf	EUSART_Initialize@x+1
 17842  21E7  0871               	movf	?___aldiv,w
 17843  21E8  00FA               	movwf	EUSART_Initialize@x
 17844                           
 17845                           ;EUSART.c: 10:  if(x>255)
 17846  21E9  3001               	movlw	1
 17847  21EA  027B               	subwf	EUSART_Initialize@x+1,w
 17848  21EB  3000               	movlw	0
 17849  21EC  1903               	skipnz
 17850  21ED  027A               	subwf	EUSART_Initialize@x,w
 17851  21EE  1C03               	skipc
 17852  21EF  2A38               	goto	l6399
 17853                           
 17854                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 17855  21F0  0020               	movlb	0	; select bank0
 17856  21F1  0826               	movf	EUSART_Initialize@baudrate,w
 17857  21F2  00AA               	movwf	??_EUSART_Initialize
 17858  21F3  0827               	movf	EUSART_Initialize@baudrate+1,w
 17859  21F4  00AB               	movwf	??_EUSART_Initialize+1
 17860  21F5  0828               	movf	EUSART_Initialize@baudrate+2,w
 17861  21F6  00AC               	movwf	??_EUSART_Initialize+2
 17862  21F7  0829               	movf	EUSART_Initialize@baudrate+3,w
 17863  21F8  00AD               	movwf	??_EUSART_Initialize+3
 17864  21F9  3004               	movlw	4
 17865  21FA                     u9255:	
 17866  21FA  35AA               	lslf	??_EUSART_Initialize,f
 17867  21FB  0DAB               	rlf	??_EUSART_Initialize+1,f
 17868  21FC  0DAC               	rlf	??_EUSART_Initialize+2,f
 17869  21FD  0DAD               	rlf	??_EUSART_Initialize+3,f
 17870  21FE  0B89               	decfsz	9,f
 17871  21FF  29FA               	goto	u9255
 17872  2200  082D               	movf	??_EUSART_Initialize+3,w
 17873  2201  00F4               	movwf	___aldiv@divisor+3
 17874  2202  082C               	movf	??_EUSART_Initialize+2,w
 17875  2203  00F3               	movwf	___aldiv@divisor+2
 17876  2204  082B               	movf	??_EUSART_Initialize+1,w
 17877  2205  00F2               	movwf	___aldiv@divisor+1
 17878  2206  082A               	movf	??_EUSART_Initialize,w
 17879  2207  00F1               	movwf	___aldiv@divisor
 17880  2208  0826               	movf	EUSART_Initialize@baudrate,w
 17881  2209  00AE               	movwf	??_EUSART_Initialize+4
 17882  220A  0827               	movf	EUSART_Initialize@baudrate+1,w
 17883  220B  00AF               	movwf	??_EUSART_Initialize+5
 17884  220C  0828               	movf	EUSART_Initialize@baudrate+2,w
 17885  220D  00B0               	movwf	??_EUSART_Initialize+6
 17886  220E  0829               	movf	EUSART_Initialize@baudrate+3,w
 17887  220F  00B1               	movwf	??_EUSART_Initialize+7
 17888  2210  3004               	movlw	4
 17889  2211                     u9265:	
 17890  2211  35AE               	lslf	??_EUSART_Initialize+4,f
 17891  2212  0DAF               	rlf	??_EUSART_Initialize+5,f
 17892  2213  0DB0               	rlf	??_EUSART_Initialize+6,f
 17893  2214  0DB1               	rlf	??_EUSART_Initialize+7,f
 17894  2215  0B89               	decfsz	9,f
 17895  2216  2A11               	goto	u9265
 17896  2217  3000               	movlw	0
 17897  2218  00B2               	movwf	??_EUSART_Initialize+8
 17898  2219  3024               	movlw	36
 17899  221A  00B3               	movwf	??_EUSART_Initialize+9
 17900  221B  30F4               	movlw	244
 17901  221C  00B4               	movwf	??_EUSART_Initialize+10
 17902  221D  3000               	movlw	0
 17903  221E  00B5               	movwf	??_EUSART_Initialize+11
 17904  221F  082E               	movf	??_EUSART_Initialize+4,w
 17905  2220  02B2               	subwf	??_EUSART_Initialize+8,f
 17906  2221  082F               	movf	??_EUSART_Initialize+5,w
 17907  2222  3BB3               	subwfb	??_EUSART_Initialize+9,f
 17908  2223  0830               	movf	??_EUSART_Initialize+6,w
 17909  2224  3BB4               	subwfb	??_EUSART_Initialize+10,f
 17910  2225  0831               	movf	??_EUSART_Initialize+7,w
 17911  2226  3BB5               	subwfb	??_EUSART_Initialize+11,f
 17912  2227  0835               	movf	??_EUSART_Initialize+11,w
 17913  2228  00F8               	movwf	___aldiv@dividend+3
 17914  2229  0834               	movf	??_EUSART_Initialize+10,w
 17915  222A  00F7               	movwf	___aldiv@dividend+2
 17916  222B  0833               	movf	??_EUSART_Initialize+9,w
 17917  222C  00F6               	movwf	___aldiv@dividend+1
 17918  222D  0832               	movf	??_EUSART_Initialize+8,w
 17919  222E  00F5               	movwf	___aldiv@dividend
 17920  222F  31AE  2660  31A1   	fcall	___aldiv
 17921  2232  0872               	movf	?___aldiv+1,w
 17922  2233  00FB               	movwf	EUSART_Initialize@x+1
 17923  2234  0871               	movf	?___aldiv,w
 17924  2235  00FA               	movwf	EUSART_Initialize@x
 17925                           
 17926                           ;EUSART.c: 13:   BRGH = 1;
 17927  2236  0023               	movlb	3	; select bank3
 17928  2237  151E               	bsf	30,2	;volatile
 17929  2238                     l6399:	
 17930                           
 17931                           ;EUSART.c: 15:  if(x<256)
 17932  2238  3001               	movlw	1
 17933  2239  027B               	subwf	EUSART_Initialize@x+1,w
 17934  223A  3000               	movlw	0
 17935  223B  1903               	skipnz
 17936  223C  027A               	subwf	EUSART_Initialize@x,w
 17937  223D  1803               	skipnc
 17938  223E  0008               	return
 17939                           
 17940                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 17941  223F  087A               	movf	EUSART_Initialize@x,w
 17942  2240  0023               	movlb	3	; select bank3
 17943  2241  009B               	movwf	27	;volatile
 17944                           
 17945                           ;EUSART.c: 18:    SYNC = 0;
 17946  2242  121E               	bcf	30,4	;volatile
 17947                           
 17948                           ;EUSART.c: 19:    SPEN = 1;
 17949  2243  179D               	bsf	29,7	;volatile
 17950                           
 17951                           ;EUSART.c: 20:           TRISC7 = 1;
 17952  2244  0021               	movlb	1	; select bank1
 17953  2245  178E               	bsf	14,7	;volatile
 17954                           
 17955                           ;EUSART.c: 21:           TRISC6 = 1;
 17956  2246  170E               	bsf	14,6	;volatile
 17957                           
 17958                           ;EUSART.c: 22:           CREN = 1;
 17959  2247  0023               	movlb	3	; select bank3
 17960  2248  161D               	bsf	29,4	;volatile
 17961                           
 17962                           ;EUSART.c: 23:           TXEN = 1;
 17963  2249  169E               	bsf	30,5	;volatile
 17964  224A  0008               	return
 17965  224B                     __end_of_EUSART_Initialize:	
 17966                           
 17967                           	psect	text74
 17968  2E60                     __ptext74:	
 17969 ;; *************** function ___aldiv *****************
 17970 ;; Defined at:
 17971 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 17972 ;; Parameters:    Size  Location     Type
 17973 ;;  divisor         4    1[COMMON] long 
 17974 ;;  dividend        4    5[COMMON] long 
 17975 ;; Auto vars:     Size  Location     Type
 17976 ;;  quotient        4    2[BANK0 ] long 
 17977 ;;  sign            1    1[BANK0 ] unsigned char 
 17978 ;;  counter         1    0[BANK0 ] unsigned char 
 17979 ;; Return value:  Size  Location     Type
 17980 ;;                  4    1[COMMON] long 
 17981 ;; Registers used:
 17982 ;;		wreg, status,2, status,0
 17983 ;; Tracked objects:
 17984 ;;		On entry : 0/0
 17985 ;;		On exit  : 0/0
 17986 ;;		Unchanged: 0/0
 17987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17988 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17989 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17991 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17992 ;;Total ram usage:       15 bytes
 17993 ;; Hardware stack levels used:    1
 17994 ;; Hardware stack levels required when called:    1
 17995 ;; This function calls:
 17996 ;;		Nothing
 17997 ;; This function is called by:
 17998 ;;		_EUSART_Initialize
 17999 ;; This function uses a non-reentrant model
 18000 ;;
 18001                           
 18002                           
 18003                           ;psect for function ___aldiv
 18004  2E60                     ___aldiv:	
 18005                           
 18006                           ;incstack = 0
 18007                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 18008  2E60  0020               	movlb	0	; select bank0
 18009  2E61  01A1               	clrf	___aldiv@sign
 18010  2E62  1FF4               	btfss	___aldiv@divisor+3,7
 18011  2E63  2E71               	goto	l884
 18012  2E64  09F1               	comf	___aldiv@divisor,f
 18013  2E65  09F2               	comf	___aldiv@divisor+1,f
 18014  2E66  09F3               	comf	___aldiv@divisor+2,f
 18015  2E67  09F4               	comf	___aldiv@divisor+3,f
 18016  2E68  0AF1               	incf	___aldiv@divisor,f
 18017  2E69  1903               	skipnz
 18018  2E6A  0AF2               	incf	___aldiv@divisor+1,f
 18019  2E6B  1903               	skipnz
 18020  2E6C  0AF3               	incf	___aldiv@divisor+2,f
 18021  2E6D  1903               	skipnz
 18022  2E6E  0AF4               	incf	___aldiv@divisor+3,f
 18023  2E6F  01A1               	clrf	___aldiv@sign
 18024  2E70  0AA1               	incf	___aldiv@sign,f
 18025  2E71                     l884:	
 18026  2E71  1FF8               	btfss	___aldiv@dividend+3,7
 18027  2E72  2E82               	goto	l6361
 18028  2E73  09F5               	comf	___aldiv@dividend,f
 18029  2E74  09F6               	comf	___aldiv@dividend+1,f
 18030  2E75  09F7               	comf	___aldiv@dividend+2,f
 18031  2E76  09F8               	comf	___aldiv@dividend+3,f
 18032  2E77  0AF5               	incf	___aldiv@dividend,f
 18033  2E78  1903               	skipnz
 18034  2E79  0AF6               	incf	___aldiv@dividend+1,f
 18035  2E7A  1903               	skipnz
 18036  2E7B  0AF7               	incf	___aldiv@dividend+2,f
 18037  2E7C  1903               	skipnz
 18038  2E7D  0AF8               	incf	___aldiv@dividend+3,f
 18039  2E7E  3001               	movlw	1
 18040  2E7F  00F9               	movwf	??___aldiv
 18041  2E80  0879               	movf	??___aldiv,w
 18042  2E81  06A1               	xorwf	___aldiv@sign,f
 18043  2E82                     l6361:	
 18044  2E82  3000               	movlw	0
 18045  2E83  00A5               	movwf	___aldiv@quotient+3
 18046  2E84  3000               	movlw	0
 18047  2E85  00A4               	movwf	___aldiv@quotient+2
 18048  2E86  3000               	movlw	0
 18049  2E87  00A3               	movwf	___aldiv@quotient+1
 18050  2E88  3000               	movlw	0
 18051  2E89  00A2               	movwf	___aldiv@quotient
 18052  2E8A  0874               	movf	___aldiv@divisor+3,w
 18053  2E8B  0473               	iorwf	___aldiv@divisor+2,w
 18054  2E8C  0472               	iorwf	___aldiv@divisor+1,w
 18055  2E8D  0471               	iorwf	___aldiv@divisor,w
 18056  2E8E  1903               	skipnz
 18057  2E8F  2ECB               	goto	l6383
 18058  2E90  01A0               	clrf	___aldiv@counter
 18059  2E91  0AA0               	incf	___aldiv@counter,f
 18060  2E92                     l6369:	
 18061  2E92  1BF4               	btfsc	___aldiv@divisor+3,7
 18062  2E93  2EA0               	goto	l6371
 18063  2E94  3001               	movlw	1
 18064  2E95                     u9155:	
 18065  2E95  35F1               	lslf	___aldiv@divisor,f
 18066  2E96  0DF2               	rlf	___aldiv@divisor+1,f
 18067  2E97  0DF3               	rlf	___aldiv@divisor+2,f
 18068  2E98  0DF4               	rlf	___aldiv@divisor+3,f
 18069  2E99  0B89               	decfsz	9,f
 18070  2E9A  2E95               	goto	u9155
 18071  2E9B  3001               	movlw	1
 18072  2E9C  00F9               	movwf	??___aldiv
 18073  2E9D  0879               	movf	??___aldiv,w
 18074  2E9E  07A0               	addwf	___aldiv@counter,f
 18075  2E9F  2E92               	goto	l6369
 18076  2EA0                     l6371:	
 18077  2EA0  3001               	movlw	1
 18078  2EA1                     u9175:	
 18079  2EA1  35A2               	lslf	___aldiv@quotient,f
 18080  2EA2  0DA3               	rlf	___aldiv@quotient+1,f
 18081  2EA3  0DA4               	rlf	___aldiv@quotient+2,f
 18082  2EA4  0DA5               	rlf	___aldiv@quotient+3,f
 18083  2EA5  0B89               	decfsz	9,f
 18084  2EA6  2EA1               	goto	u9175
 18085  2EA7  0874               	movf	___aldiv@divisor+3,w
 18086  2EA8  0278               	subwf	___aldiv@dividend+3,w
 18087  2EA9  1D03               	skipz
 18088  2EAA  2EB5               	goto	u9185
 18089  2EAB  0873               	movf	___aldiv@divisor+2,w
 18090  2EAC  0277               	subwf	___aldiv@dividend+2,w
 18091  2EAD  1D03               	skipz
 18092  2EAE  2EB5               	goto	u9185
 18093  2EAF  0872               	movf	___aldiv@divisor+1,w
 18094  2EB0  0276               	subwf	___aldiv@dividend+1,w
 18095  2EB1  1D03               	skipz
 18096  2EB2  2EB5               	goto	u9185
 18097  2EB3  0871               	movf	___aldiv@divisor,w
 18098  2EB4  0275               	subwf	___aldiv@dividend,w
 18099  2EB5                     u9185:	
 18100  2EB5  1C03               	skipc
 18101  2EB6  2EC0               	goto	l6379
 18102  2EB7  0871               	movf	___aldiv@divisor,w
 18103  2EB8  02F5               	subwf	___aldiv@dividend,f
 18104  2EB9  0872               	movf	___aldiv@divisor+1,w
 18105  2EBA  3BF6               	subwfb	___aldiv@dividend+1,f
 18106  2EBB  0873               	movf	___aldiv@divisor+2,w
 18107  2EBC  3BF7               	subwfb	___aldiv@dividend+2,f
 18108  2EBD  0874               	movf	___aldiv@divisor+3,w
 18109  2EBE  3BF8               	subwfb	___aldiv@dividend+3,f
 18110  2EBF  1422               	bsf	___aldiv@quotient,0
 18111  2EC0                     l6379:	
 18112  2EC0  3001               	movlw	1
 18113  2EC1                     u9195:	
 18114  2EC1  36F4               	lsrf	___aldiv@divisor+3,f
 18115  2EC2  0CF3               	rrf	___aldiv@divisor+2,f
 18116  2EC3  0CF2               	rrf	___aldiv@divisor+1,f
 18117  2EC4  0CF1               	rrf	___aldiv@divisor,f
 18118  2EC5  0B89               	decfsz	9,f
 18119  2EC6  2EC1               	goto	u9195
 18120  2EC7  3001               	movlw	1
 18121  2EC8  02A0               	subwf	___aldiv@counter,f
 18122  2EC9  1D03               	btfss	3,2
 18123  2ECA  2EA0               	goto	l6371
 18124  2ECB                     l6383:	
 18125  2ECB  0821               	movf	___aldiv@sign,w
 18126  2ECC  1903               	btfsc	3,2
 18127  2ECD  2ED9               	goto	l6387
 18128  2ECE  09A2               	comf	___aldiv@quotient,f
 18129  2ECF  09A3               	comf	___aldiv@quotient+1,f
 18130  2ED0  09A4               	comf	___aldiv@quotient+2,f
 18131  2ED1  09A5               	comf	___aldiv@quotient+3,f
 18132  2ED2  0AA2               	incf	___aldiv@quotient,f
 18133  2ED3  1903               	skipnz
 18134  2ED4  0AA3               	incf	___aldiv@quotient+1,f
 18135  2ED5  1903               	skipnz
 18136  2ED6  0AA4               	incf	___aldiv@quotient+2,f
 18137  2ED7  1903               	skipnz
 18138  2ED8  0AA5               	incf	___aldiv@quotient+3,f
 18139  2ED9                     l6387:	
 18140  2ED9  0825               	movf	___aldiv@quotient+3,w
 18141  2EDA  00F4               	movwf	?___aldiv+3
 18142  2EDB  0824               	movf	___aldiv@quotient+2,w
 18143  2EDC  00F3               	movwf	?___aldiv+2
 18144  2EDD  0823               	movf	___aldiv@quotient+1,w
 18145  2EDE  00F2               	movwf	?___aldiv+1
 18146  2EDF  0822               	movf	___aldiv@quotient,w
 18147  2EE0  00F1               	movwf	?___aldiv
 18148  2EE1  0008               	return
 18149  2EE2                     __end_of___aldiv:	
 18150                           
 18151                           	psect	intentry
 18152  0004                     __pintentry:	
 18153 ;; *************** function _myIsr *****************
 18154 ;; Defined at:
 18155 ;;		line 57 in file "main.c"
 18156 ;; Parameters:    Size  Location     Type
 18157 ;;		None
 18158 ;; Auto vars:     Size  Location     Type
 18159 ;;		None
 18160 ;; Return value:  Size  Location     Type
 18161 ;;                  1    wreg      void 
 18162 ;; Registers used:
 18163 ;;		wreg, status,2, status,0
 18164 ;; Tracked objects:
 18165 ;;		On entry : 0/0
 18166 ;;		On exit  : 0/0
 18167 ;;		Unchanged: 0/0
 18168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18172 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18173 ;;Total ram usage:        1 bytes
 18174 ;; Hardware stack levels used:    1
 18175 ;; This function calls:
 18176 ;;		Nothing
 18177 ;; This function is called by:
 18178 ;;		Interrupt level 1
 18179 ;; This function uses a non-reentrant model
 18180 ;;
 18181                           
 18182  0004                     _myIsr:	
 18183                           
 18184                           ;incstack = 0
 18185  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 18186                           
 18187                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 18188  0005  3180               	pagesel	$
 18189                           
 18190                           ;main.c: 59:     static uint8_t count = 0;;main.c: 61:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 18191  0006  0020               	movlb	0	; select bank0
 18192  0007  1C11               	btfss	17,0	;volatile
 18193  0008  281C               	goto	i1l119
 18194  0009  0021               	movlb	1	; select bank1
 18195  000A  1C11               	btfss	17,0	;volatile
 18196  000B  281C               	goto	i1l119
 18197                           
 18198                           ;main.c: 62:         PIR1bits.TMR1IF = 0;
 18199  000C  0020               	movlb	0	; select bank0
 18200  000D  1011               	bcf	17,0	;volatile
 18201                           
 18202                           ;main.c: 63:         count++;
 18203  000E  3001               	movlw	1
 18204  000F  00F0               	movwf	??_myIsr
 18205  0010  0870               	movf	??_myIsr,w
 18206  0011  0023               	movlb	3	; select bank3
 18207  0012  07D1               	addwf	myIsr@count^(0+384),f
 18208                           
 18209                           ;main.c: 66:         if (count == 61) {
 18210  0013  303D               	movlw	61
 18211  0014  0651               	xorwf	myIsr@count^(0+384),w
 18212  0015  1D03               	btfss	3,2
 18213  0016  281C               	goto	i1l119
 18214                           
 18215                           ;main.c: 67:             tmr1_flag = 1;
 18216  0017  3001               	movlw	1
 18217  0018  00F0               	movwf	??_myIsr
 18218  0019  0870               	movf	??_myIsr,w
 18219  001A  00D2               	movwf	_tmr1_flag^(0+384)	;volatile
 18220                           
 18221                           ;main.c: 68:             count = 0;
 18222  001B  01D1               	clrf	myIsr@count^(0+384)
 18223  001C                     i1l119:	
 18224  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18225  001D  0009               	retfie
 18226  001E                     __end_of_myIsr:	
 18227  007E                     btemp	set	126	;btemp
 18228  007E                     int$flags	set	126
 18229  007E                     wtemp0	set	126
 18230  2771                     
 18231                           	psect	text5_split_1
 18232  1804                     l7573:	
 18233                           
 18234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 18235  1804  0021               	movlb	1	; select bank1
 18236  1805  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18237  1806  0086               	movwf	6
 18238  1807  0187               	clrf	7
 18239  1808  3F40               	moviw [0]fsr1
 18240  1809  00F1               	movwf	strncmp@_l
 18241  180A  3F41               	moviw [1]fsr1
 18242  180B  00F2               	movwf	strncmp@_l+1
 18243  180C  3044               	movlw	low (STR_18| (0+32768))
 18244  180D  00F3               	movwf	strncmp@_r
 18245  180E  30B8               	movlw	high (STR_18| (0+32768))
 18246  180F  00F4               	movwf	strncmp@_r+1
 18247  1810  3003               	movlw	3
 18248  1811  00F5               	movwf	strncmp@n
 18249  1812  3000               	movlw	0
 18250  1813  00F6               	movwf	strncmp@n+1
 18251  1814  31A0  200C  3198   	fcall	_strncmp
 18252  1817  0871               	movf	?_strncmp,w
 18253  1818  0472               	iorwf	?_strncmp+1,w
 18254  1819  1903               	btfsc	3,2
 18255  181A  2832               	goto	l7577
 18256  181B  0021               	movlb	1	; select bank1
 18257  181C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18258  181D  0086               	movwf	6
 18259  181E  0187               	clrf	7
 18260  181F  3F40               	moviw [0]fsr1
 18261  1820  00F1               	movwf	strncmp@_l
 18262  1821  3F41               	moviw [1]fsr1
 18263  1822  00F2               	movwf	strncmp@_l+1
 18264  1823  304C               	movlw	low (STR_22| (0+32768))
 18265  1824  00F3               	movwf	strncmp@_r
 18266  1825  30B8               	movlw	high (STR_22| (0+32768))
 18267  1826  00F4               	movwf	strncmp@_r+1
 18268  1827  3003               	movlw	3
 18269  1828  00F5               	movwf	strncmp@n
 18270  1829  3000               	movlw	0
 18271  182A  00F6               	movwf	strncmp@n+1
 18272  182B  31A0  200C  3198   	fcall	_strncmp
 18273  182E  0871               	movf	?_strncmp,w
 18274  182F  0472               	iorwf	?_strncmp+1,w
 18275  1830  1D03               	btfss	3,2
 18276  1831  2885               	goto	L18
 18277  1832                     l7577:	
 18278                           
 18279                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 18280  1832  0021               	movlb	1	; select bank1
 18281  1833  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18282  1834  0086               	movwf	6
 18283  1835  0187               	clrf	7
 18284  1836  3003               	movlw	3
 18285  1837  0781               	addwf	1,f
 18286  1838  3141               	addfsr 1,1
 18287  1839  1803               	skipnc
 18288  183A  0A81               	incf	1,f
 18289                           
 18290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 18291  183B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18292  183C  0086               	movwf	6
 18293  183D  3001               	movlw	1	; select bank2/3
 18294  183E  0087               	movwf	7
 18295  183F  0801               	movf	1,w
 18296  1840  0084               	movwf	4
 18297  1841  3001               	movlw	1	; select bank2/3
 18298  1842  0085               	movwf	5
 18299  1843  3002               	movlw	2
 18300  1844  0781               	addwf	1,f
 18301  1845  0800               	movf	0,w
 18302  1846  0022               	movlb	2	; select bank2
 18303  1847  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 18304  1848  3980               	andlw	128
 18305  1849  1D03               	skipz
 18306  184A  30FF               	movlw	255
 18307  184B  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 18308  184C  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 18309  184D  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 18310  184E  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 18311  184F  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 18312  1850  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 18313  1851  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 18314                           
 18315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 18316  1852  0021               	movlb	1	; select bank1
 18317  1853  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18318  1854  0020               	movlb	0	; select bank0
 18319  1855  00B1               	movwf	dtoa@fp+1
 18320  1856  0021               	movlb	1	; select bank1
 18321  1857  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18322  1858  0020               	movlb	0	; select bank0
 18323  1859  00B0               	movwf	dtoa@fp
 18324  185A  0022               	movlb	2	; select bank2
 18325  185B  083C               	movf	vfpfcnvrt@ll^(0+256),w
 18326  185C  0020               	movlb	0	; select bank0
 18327  185D  00B2               	movwf	dtoa@d
 18328  185E  0022               	movlb	2	; select bank2
 18329  185F  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 18330  1860  0020               	movlb	0	; select bank0
 18331  1861  00B3               	movwf	dtoa@d+1
 18332  1862  0022               	movlb	2	; select bank2
 18333  1863  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 18334  1864  0020               	movlb	0	; select bank0
 18335  1865  00B4               	movwf	dtoa@d+2
 18336  1866  0022               	movlb	2	; select bank2
 18337  1867  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 18338  1868  0020               	movlb	0	; select bank0
 18339  1869  00B5               	movwf	dtoa@d+3
 18340  186A  0022               	movlb	2	; select bank2
 18341  186B  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 18342  186C  0020               	movlb	0	; select bank0
 18343  186D  00B6               	movwf	dtoa@d+4
 18344  186E  0022               	movlb	2	; select bank2
 18345  186F  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 18346  1870  0020               	movlb	0	; select bank0
 18347  1871  00B7               	movwf	dtoa@d+5
 18348  1872  0022               	movlb	2	; select bank2
 18349  1873  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 18350  1874  0020               	movlb	0	; select bank0
 18351  1875  00B8               	movwf	dtoa@d+6
 18352  1876  0022               	movlb	2	; select bank2
 18353  1877  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 18354  1878  0020               	movlb	0	; select bank0
 18355  1879  00B9               	movwf	dtoa@d+7
 18356  187A  319D  2554         	fcall	_dtoa
 18357  187C  0020               	movlb	0	; select bank0
 18358  187D  0831               	movf	?_dtoa+1,w
 18359  187E  0021               	movlb	1	; select bank1
 18360  187F  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18361  1880  0020               	movlb	0	; select bank0
 18362  1881  0830               	movf	?_dtoa,w
 18363  1882  0021               	movlb	1	; select bank1
 18364  1883  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18365  1884  0008               	return
 18366  1885                     L18:	
 18367  1885                     L17:	
 18368  1885  31AE  2EE2         	ljmp	l7585
 18369                           
 18370                           	psect	text5_split_2
 18371  2EE2                     l7585:	
 18372                           
 18373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 18374  2EE2  0021               	movlb	1	; select bank1
 18375  2EE3  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18376  2EE4  0086               	movwf	6
 18377  2EE5  0187               	clrf	7
 18378  2EE6  3F40               	moviw [0]fsr1
 18379  2EE7  00F1               	movwf	strncmp@_l
 18380  2EE8  3F41               	moviw [1]fsr1
 18381  2EE9  00F2               	movwf	strncmp@_l+1
 18382  2EEA  3045               	movlw	low ((STR_18+1)| (0+32768))
 18383  2EEB  00F3               	movwf	strncmp@_r
 18384  2EEC  30B8               	movlw	high ((STR_18+1)| (0+32768))
 18385  2EED  00F4               	movwf	strncmp@_r+1
 18386  2EEE  3002               	movlw	2
 18387  2EEF  00F5               	movwf	strncmp@n
 18388  2EF0  3000               	movlw	0
 18389  2EF1  00F6               	movwf	strncmp@n+1
 18390  2EF2  31A0  200C  31AE   	fcall	_strncmp
 18391  2EF5  0871               	movf	?_strncmp,w
 18392  2EF6  0472               	iorwf	?_strncmp+1,w
 18393  2EF7  1903               	btfsc	3,2
 18394  2EF8  2F10               	goto	l7589
 18395  2EF9  0021               	movlb	1	; select bank1
 18396  2EFA  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18397  2EFB  0086               	movwf	6
 18398  2EFC  0187               	clrf	7
 18399  2EFD  3F40               	moviw [0]fsr1
 18400  2EFE  00F1               	movwf	strncmp@_l
 18401  2EFF  3F41               	moviw [1]fsr1
 18402  2F00  00F2               	movwf	strncmp@_l+1
 18403  2F01  304D               	movlw	low ((STR_22+1)| (0+32768))
 18404  2F02  00F3               	movwf	strncmp@_r
 18405  2F03  30B8               	movlw	high ((STR_22+1)| (0+32768))
 18406  2F04  00F4               	movwf	strncmp@_r+1
 18407  2F05  3002               	movlw	2
 18408  2F06  00F5               	movwf	strncmp@n
 18409  2F07  3000               	movlw	0
 18410  2F08  00F6               	movwf	strncmp@n+1
 18411  2F09  31A0  200C  31AE   	fcall	_strncmp
 18412  2F0C  0871               	movf	?_strncmp,w
 18413  2F0D  0472               	iorwf	?_strncmp+1,w
 18414  2F0E  1D03               	btfss	3,2
 18415  2F0F  2F68               	goto	L20
 18416  2F10                     l7589:	
 18417                           
 18418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 18419  2F10  0021               	movlb	1	; select bank1
 18420  2F11  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18421  2F12  0086               	movwf	6
 18422  2F13  0187               	clrf	7
 18423  2F14  3002               	movlw	2
 18424  2F15  0781               	addwf	1,f
 18425  2F16  3141               	addfsr 1,1
 18426  2F17  1803               	skipnc
 18427  2F18  0A81               	incf	1,f
 18428                           
 18429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 18430  2F19  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18431  2F1A  0086               	movwf	6
 18432  2F1B  3001               	movlw	1	; select bank2/3
 18433  2F1C  0087               	movwf	7
 18434  2F1D  0801               	movf	1,w
 18435  2F1E  0084               	movwf	4
 18436  2F1F  3001               	movlw	1	; select bank2/3
 18437  2F20  0085               	movwf	5
 18438  2F21  3002               	movlw	2
 18439  2F22  0781               	addwf	1,f
 18440  2F23  3F00               	moviw [0]fsr0
 18441  2F24  0022               	movlb	2	; select bank2
 18442  2F25  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18443  2F26  3F01               	moviw [1]fsr0
 18444  2F27  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18445  2F28  0820               	movf	??_vfpfcnvrt^(0+256),w
 18446  2F29  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 18447  2F2A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18448  2F2B  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 18449  2F2C  0D89               	rlf	9,f
 18450  2F2D  3B89               	subwfb	9,f
 18451  2F2E  0989               	comf	9,f
 18452  2F2F  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 18453  2F30  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 18454  2F31  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 18455  2F32  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 18456  2F33  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 18457  2F34  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 18458                           
 18459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 18460  2F35  0021               	movlb	1	; select bank1
 18461  2F36  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18462  2F37  0020               	movlb	0	; select bank0
 18463  2F38  00B1               	movwf	dtoa@fp+1
 18464  2F39  0021               	movlb	1	; select bank1
 18465  2F3A  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18466  2F3B  0020               	movlb	0	; select bank0
 18467  2F3C  00B0               	movwf	dtoa@fp
 18468  2F3D  0022               	movlb	2	; select bank2
 18469  2F3E  083C               	movf	vfpfcnvrt@ll^(0+256),w
 18470  2F3F  0020               	movlb	0	; select bank0
 18471  2F40  00B2               	movwf	dtoa@d
 18472  2F41  0022               	movlb	2	; select bank2
 18473  2F42  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 18474  2F43  0020               	movlb	0	; select bank0
 18475  2F44  00B3               	movwf	dtoa@d+1
 18476  2F45  0022               	movlb	2	; select bank2
 18477  2F46  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 18478  2F47  0020               	movlb	0	; select bank0
 18479  2F48  00B4               	movwf	dtoa@d+2
 18480  2F49  0022               	movlb	2	; select bank2
 18481  2F4A  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 18482  2F4B  0020               	movlb	0	; select bank0
 18483  2F4C  00B5               	movwf	dtoa@d+3
 18484  2F4D  0022               	movlb	2	; select bank2
 18485  2F4E  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 18486  2F4F  0020               	movlb	0	; select bank0
 18487  2F50  00B6               	movwf	dtoa@d+4
 18488  2F51  0022               	movlb	2	; select bank2
 18489  2F52  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 18490  2F53  0020               	movlb	0	; select bank0
 18491  2F54  00B7               	movwf	dtoa@d+5
 18492  2F55  0022               	movlb	2	; select bank2
 18493  2F56  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 18494  2F57  0020               	movlb	0	; select bank0
 18495  2F58  00B8               	movwf	dtoa@d+6
 18496  2F59  0022               	movlb	2	; select bank2
 18497  2F5A  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 18498  2F5B  0020               	movlb	0	; select bank0
 18499  2F5C  00B9               	movwf	dtoa@d+7
 18500  2F5D  319D  2554         	fcall	_dtoa
 18501  2F5F  0020               	movlb	0	; select bank0
 18502  2F60  0831               	movf	?_dtoa+1,w
 18503  2F61  0021               	movlb	1	; select bank1
 18504  2F62  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18505  2F63  0020               	movlb	0	; select bank0
 18506  2F64  0830               	movf	?_dtoa,w
 18507  2F65  0021               	movlb	1	; select bank1
 18508  2F66  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18509  2F67  0008               	return
 18510  2F68                     L20:	
 18511  2F68                     L19:	
 18512  2F68  319C  2C4C         	ljmp	l7597
 18513                           
 18514                           	psect	text5_split_3
 18515  1C4C                     l7597:	
 18516                           
 18517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 18518  1C4C  0021               	movlb	1	; select bank1
 18519  1C4D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18520  1C4E  0086               	movwf	6
 18521  1C4F  0187               	clrf	7
 18522  1C50  3F40               	moviw [0]fsr1
 18523  1C51  0022               	movlb	2	; select bank2
 18524  1C52  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18525  1C53  3F41               	moviw [1]fsr1
 18526  1C54  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18527  1C55  0820               	movf	??_vfpfcnvrt^(0+256),w
 18528  1C56  0084               	movwf	4
 18529  1C57  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18530  1C58  0085               	movwf	5
 18531  1C59  0012               	moviw fsr0++
 18532  1C5A  3A64               	xorlw	100
 18533  1C5B  1903               	btfsc	3,2
 18534  1C5C  2C6E               	goto	l7601
 18535  1C5D  0021               	movlb	1	; select bank1
 18536  1C5E  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18537  1C5F  0086               	movwf	6
 18538  1C60  0187               	clrf	7
 18539  1C61  3F40               	moviw [0]fsr1
 18540  1C62  0022               	movlb	2	; select bank2
 18541  1C63  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18542  1C64  3F41               	moviw [1]fsr1
 18543  1C65  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18544  1C66  0820               	movf	??_vfpfcnvrt^(0+256),w
 18545  1C67  0084               	movwf	4
 18546  1C68  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18547  1C69  0085               	movwf	5
 18548  1C6A  0012               	moviw fsr0++
 18549  1C6B  3A69               	xorlw	105
 18550  1C6C  1D03               	btfss	3,2
 18551  1C6D  2CC6               	goto	l7609
 18552  1C6E                     l7601:	
 18553                           
 18554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 18555  1C6E  0021               	movlb	1	; select bank1
 18556  1C6F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18557  1C70  0086               	movwf	6
 18558  1C71  0187               	clrf	7
 18559  1C72  3001               	movlw	1
 18560  1C73  0781               	addwf	1,f
 18561  1C74  3141               	addfsr 1,1
 18562  1C75  1803               	skipnc
 18563  1C76  0A81               	incf	1,f
 18564                           
 18565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 18566  1C77  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18567  1C78  0086               	movwf	6
 18568  1C79  3001               	movlw	1	; select bank2/3
 18569  1C7A  0087               	movwf	7
 18570  1C7B  0801               	movf	1,w
 18571  1C7C  0084               	movwf	4
 18572  1C7D  3001               	movlw	1	; select bank2/3
 18573  1C7E  0085               	movwf	5
 18574  1C7F  3002               	movlw	2
 18575  1C80  0781               	addwf	1,f
 18576  1C81  3F00               	moviw [0]fsr0
 18577  1C82  0022               	movlb	2	; select bank2
 18578  1C83  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18579  1C84  3F01               	moviw [1]fsr0
 18580  1C85  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18581  1C86  0820               	movf	??_vfpfcnvrt^(0+256),w
 18582  1C87  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 18583  1C88  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18584  1C89  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 18585  1C8A  0D89               	rlf	9,f
 18586  1C8B  3B89               	subwfb	9,f
 18587  1C8C  0989               	comf	9,f
 18588  1C8D  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 18589  1C8E  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 18590  1C8F  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 18591  1C90  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 18592  1C91  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 18593  1C92  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 18594                           
 18595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 18596  1C93  0021               	movlb	1	; select bank1
 18597  1C94  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18598  1C95  0020               	movlb	0	; select bank0
 18599  1C96  00B1               	movwf	dtoa@fp+1
 18600  1C97  0021               	movlb	1	; select bank1
 18601  1C98  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18602  1C99  0020               	movlb	0	; select bank0
 18603  1C9A  00B0               	movwf	dtoa@fp
 18604  1C9B  0022               	movlb	2	; select bank2
 18605  1C9C  083C               	movf	vfpfcnvrt@ll^(0+256),w
 18606  1C9D  0020               	movlb	0	; select bank0
 18607  1C9E  00B2               	movwf	dtoa@d
 18608  1C9F  0022               	movlb	2	; select bank2
 18609  1CA0  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 18610  1CA1  0020               	movlb	0	; select bank0
 18611  1CA2  00B3               	movwf	dtoa@d+1
 18612  1CA3  0022               	movlb	2	; select bank2
 18613  1CA4  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 18614  1CA5  0020               	movlb	0	; select bank0
 18615  1CA6  00B4               	movwf	dtoa@d+2
 18616  1CA7  0022               	movlb	2	; select bank2
 18617  1CA8  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 18618  1CA9  0020               	movlb	0	; select bank0
 18619  1CAA  00B5               	movwf	dtoa@d+3
 18620  1CAB  0022               	movlb	2	; select bank2
 18621  1CAC  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 18622  1CAD  0020               	movlb	0	; select bank0
 18623  1CAE  00B6               	movwf	dtoa@d+4
 18624  1CAF  0022               	movlb	2	; select bank2
 18625  1CB0  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 18626  1CB1  0020               	movlb	0	; select bank0
 18627  1CB2  00B7               	movwf	dtoa@d+5
 18628  1CB3  0022               	movlb	2	; select bank2
 18629  1CB4  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 18630  1CB5  0020               	movlb	0	; select bank0
 18631  1CB6  00B8               	movwf	dtoa@d+6
 18632  1CB7  0022               	movlb	2	; select bank2
 18633  1CB8  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 18634  1CB9  0020               	movlb	0	; select bank0
 18635  1CBA  00B9               	movwf	dtoa@d+7
 18636  1CBB  319D  2554         	fcall	_dtoa
 18637  1CBD  0020               	movlb	0	; select bank0
 18638  1CBE  0831               	movf	?_dtoa+1,w
 18639  1CBF  0021               	movlb	1	; select bank1
 18640  1CC0  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18641  1CC1  0020               	movlb	0	; select bank0
 18642  1CC2  0830               	movf	?_dtoa,w
 18643  1CC3  0021               	movlb	1	; select bank1
 18644  1CC4  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18645  1CC5  0008               	return
 18646  1CC6                     l7609:	
 18647                           
 18648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 18649  1CC6  0021               	movlb	1	; select bank1
 18650  1CC7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18651  1CC8  0086               	movwf	6
 18652  1CC9  0187               	clrf	7
 18653  1CCA  3F40               	moviw [0]fsr1
 18654  1CCB  00F1               	movwf	strncmp@_l
 18655  1CCC  3F41               	moviw [1]fsr1
 18656  1CCD  00F2               	movwf	strncmp@_l+1
 18657  1CCE  306A               	movlw	low (STR_36| (0+32768))
 18658  1CCF  00F3               	movwf	strncmp@_r
 18659  1CD0  30B8               	movlw	high (STR_36| (0+32768))
 18660  1CD1  00F4               	movwf	strncmp@_r+1
 18661  1CD2  3002               	movlw	2
 18662  1CD3  00F5               	movwf	strncmp@n
 18663  1CD4  3000               	movlw	0
 18664  1CD5  00F6               	movwf	strncmp@n+1
 18665  1CD6  31A0  200C  319C   	fcall	_strncmp
 18666  1CD9  0871               	movf	?_strncmp,w
 18667  1CDA  0472               	iorwf	?_strncmp+1,w
 18668  1CDB  1903               	btfsc	3,2
 18669  1CDC  2CF4               	goto	l7613
 18670  1CDD  0021               	movlb	1	; select bank1
 18671  1CDE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18672  1CDF  0086               	movwf	6
 18673  1CE0  0187               	clrf	7
 18674  1CE1  3F40               	moviw [0]fsr1
 18675  1CE2  00F1               	movwf	strncmp@_l
 18676  1CE3  3F41               	moviw [1]fsr1
 18677  1CE4  00F2               	movwf	strncmp@_l+1
 18678  1CE5  3073               	movlw	low (STR_40| (0+32768))
 18679  1CE6  00F3               	movwf	strncmp@_r
 18680  1CE7  30B8               	movlw	high (STR_40| (0+32768))
 18681  1CE8  00F4               	movwf	strncmp@_r+1
 18682  1CE9  3002               	movlw	2
 18683  1CEA  00F5               	movwf	strncmp@n
 18684  1CEB  3000               	movlw	0
 18685  1CEC  00F6               	movwf	strncmp@n+1
 18686  1CED  31A0  200C  319C   	fcall	_strncmp
 18687  1CF0  0871               	movf	?_strncmp,w
 18688  1CF1  0472               	iorwf	?_strncmp+1,w
 18689  1CF2  1D03               	btfss	3,2
 18690  1CF3  2D52               	goto	L22
 18691  1CF4                     l7613:	
 18692                           
 18693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 18694  1CF4  0021               	movlb	1	; select bank1
 18695  1CF5  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18696  1CF6  0086               	movwf	6
 18697  1CF7  0187               	clrf	7
 18698  1CF8  3002               	movlw	2
 18699  1CF9  0781               	addwf	1,f
 18700  1CFA  3141               	addfsr 1,1
 18701  1CFB  1803               	skipnc
 18702  1CFC  0A81               	incf	1,f
 18703                           
 18704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 18705  1CFD  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18706  1CFE  0086               	movwf	6
 18707  1CFF  3001               	movlw	1	; select bank2/3
 18708  1D00  0087               	movwf	7
 18709  1D01  0801               	movf	1,w
 18710  1D02  0084               	movwf	4
 18711  1D03  3001               	movlw	1	; select bank2/3
 18712  1D04  0085               	movwf	5
 18713  1D05  3004               	movlw	4
 18714  1D06  0781               	addwf	1,f
 18715  1D07  3F00               	moviw [0]fsr0
 18716  1D08  0022               	movlb	2	; select bank2
 18717  1D09  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18718  1D0A  3F01               	moviw [1]fsr0
 18719  1D0B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18720  1D0C  3F02               	moviw [2]fsr0
 18721  1D0D  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 18722  1D0E  3F03               	moviw [3]fsr0
 18723  1D0F  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 18724  1D10  0820               	movf	??_vfpfcnvrt^(0+256),w
 18725  1D11  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 18726  1D12  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18727  1D13  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 18728  1D14  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 18729  1D15  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 18730  1D16  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 18731  1D17  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 18732  1D18  3000               	movlw	0
 18733  1D19  1BBF               	btfsc	(vfpfcnvrt@ll+3)^(0+256),7
 18734  1D1A  30FF               	movlw	255
 18735  1D1B  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 18736  1D1C  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 18737  1D1D  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 18738  1D1E  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 18739                           
 18740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 18741  1D1F  0021               	movlb	1	; select bank1
 18742  1D20  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18743  1D21  0020               	movlb	0	; select bank0
 18744  1D22  00B1               	movwf	dtoa@fp+1
 18745  1D23  0021               	movlb	1	; select bank1
 18746  1D24  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18747  1D25  0020               	movlb	0	; select bank0
 18748  1D26  00B0               	movwf	dtoa@fp
 18749  1D27  0022               	movlb	2	; select bank2
 18750  1D28  083C               	movf	vfpfcnvrt@ll^(0+256),w
 18751  1D29  0020               	movlb	0	; select bank0
 18752  1D2A  00B2               	movwf	dtoa@d
 18753  1D2B  0022               	movlb	2	; select bank2
 18754  1D2C  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 18755  1D2D  0020               	movlb	0	; select bank0
 18756  1D2E  00B3               	movwf	dtoa@d+1
 18757  1D2F  0022               	movlb	2	; select bank2
 18758  1D30  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 18759  1D31  0020               	movlb	0	; select bank0
 18760  1D32  00B4               	movwf	dtoa@d+2
 18761  1D33  0022               	movlb	2	; select bank2
 18762  1D34  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 18763  1D35  0020               	movlb	0	; select bank0
 18764  1D36  00B5               	movwf	dtoa@d+3
 18765  1D37  0022               	movlb	2	; select bank2
 18766  1D38  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 18767  1D39  0020               	movlb	0	; select bank0
 18768  1D3A  00B6               	movwf	dtoa@d+4
 18769  1D3B  0022               	movlb	2	; select bank2
 18770  1D3C  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 18771  1D3D  0020               	movlb	0	; select bank0
 18772  1D3E  00B7               	movwf	dtoa@d+5
 18773  1D3F  0022               	movlb	2	; select bank2
 18774  1D40  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 18775  1D41  0020               	movlb	0	; select bank0
 18776  1D42  00B8               	movwf	dtoa@d+6
 18777  1D43  0022               	movlb	2	; select bank2
 18778  1D44  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 18779  1D45  0020               	movlb	0	; select bank0
 18780  1D46  00B9               	movwf	dtoa@d+7
 18781  1D47  319D  2554         	fcall	_dtoa
 18782  1D49  0020               	movlb	0	; select bank0
 18783  1D4A  0831               	movf	?_dtoa+1,w
 18784  1D4B  0021               	movlb	1	; select bank1
 18785  1D4C  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18786  1D4D  0020               	movlb	0	; select bank0
 18787  1D4E  0830               	movf	?_dtoa,w
 18788  1D4F  0021               	movlb	1	; select bank1
 18789  1D50  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18790  1D51  0008               	return
 18791  1D52                     L22:	
 18792  1D52                     L21:	
 18793  1D52  31A4  2C95         	ljmp	l7621
 18794                           
 18795                           	psect	text5_split_4
 18796  2495                     l7621:	
 18797                           
 18798                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 18799  2495  0021               	movlb	1	; select bank1
 18800  2496  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18801  2497  0086               	movwf	6
 18802  2498  0187               	clrf	7
 18803  2499  3F40               	moviw [0]fsr1
 18804  249A  00F1               	movwf	strncmp@_l
 18805  249B  3F41               	moviw [1]fsr1
 18806  249C  00F2               	movwf	strncmp@_l+1
 18807  249D  306D               	movlw	low (STR_45| (0+32768))
 18808  249E  00F3               	movwf	strncmp@_r
 18809  249F  30B8               	movlw	high (STR_45| (0+32768))
 18810  24A0  00F4               	movwf	strncmp@_r+1
 18811  24A1  3002               	movlw	2
 18812  24A2  00F5               	movwf	strncmp@n
 18813  24A3  3000               	movlw	0
 18814  24A4  00F6               	movwf	strncmp@n+1
 18815  24A5  31A0  200C  31A4   	fcall	_strncmp
 18816  24A8  0871               	movf	?_strncmp,w
 18817  24A9  0472               	iorwf	?_strncmp+1,w
 18818  24AA  1903               	btfsc	3,2
 18819  24AB  2CC3               	goto	l7625
 18820  24AC  0021               	movlb	1	; select bank1
 18821  24AD  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18822  24AE  0086               	movwf	6
 18823  24AF  0187               	clrf	7
 18824  24B0  3F40               	moviw [0]fsr1
 18825  24B1  00F1               	movwf	strncmp@_l
 18826  24B2  3F41               	moviw [1]fsr1
 18827  24B3  00F2               	movwf	strncmp@_l+1
 18828  24B4  3076               	movlw	low (STR_49| (0+32768))
 18829  24B5  00F3               	movwf	strncmp@_r
 18830  24B6  30B8               	movlw	high (STR_49| (0+32768))
 18831  24B7  00F4               	movwf	strncmp@_r+1
 18832  24B8  3002               	movlw	2
 18833  24B9  00F5               	movwf	strncmp@n
 18834  24BA  3000               	movlw	0
 18835  24BB  00F6               	movwf	strncmp@n+1
 18836  24BC  31A0  200C  31A4   	fcall	_strncmp
 18837  24BF  0871               	movf	?_strncmp,w
 18838  24C0  0472               	iorwf	?_strncmp+1,w
 18839  24C1  1D03               	btfss	3,2
 18840  24C2  2D14               	goto	l7633
 18841  24C3                     l7625:	
 18842                           
 18843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 18844  24C3  0021               	movlb	1	; select bank1
 18845  24C4  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18846  24C5  0086               	movwf	6
 18847  24C6  0187               	clrf	7
 18848  24C7  3002               	movlw	2
 18849  24C8  0781               	addwf	1,f
 18850  24C9  3141               	addfsr 1,1
 18851  24CA  1803               	skipnc
 18852  24CB  0A81               	incf	1,f
 18853                           
 18854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 18855  24CC  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18856  24CD  0086               	movwf	6
 18857  24CE  3001               	movlw	1	; select bank2/3
 18858  24CF  0087               	movwf	7
 18859  24D0  0801               	movf	1,w
 18860  24D1  0084               	movwf	4
 18861  24D2  3001               	movlw	1	; select bank2/3
 18862  24D3  0085               	movwf	5
 18863  24D4  3002               	movlw	2
 18864  24D5  0781               	addwf	1,f
 18865  24D6  3F00               	moviw [0]fsr0
 18866  24D7  0022               	movlb	2	; select bank2
 18867  24D8  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 18868  24D9  3F01               	moviw [1]fsr0
 18869  24DA  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 18870  24DB  01BE               	clrf	(vfpfcnvrt@ll+2)^(0+256)
 18871  24DC  01BF               	clrf	(vfpfcnvrt@ll+3)^(0+256)
 18872  24DD  01C0               	clrf	(vfpfcnvrt@ll+4)^(0+256)
 18873  24DE  01C1               	clrf	(vfpfcnvrt@ll+5)^(0+256)
 18874  24DF  01C2               	clrf	(vfpfcnvrt@ll+6)^(0+256)
 18875  24E0  01C3               	clrf	(vfpfcnvrt@ll+7)^(0+256)
 18876                           
 18877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 18878  24E1  0021               	movlb	1	; select bank1
 18879  24E2  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18880  24E3  0020               	movlb	0	; select bank0
 18881  24E4  00B1               	movwf	dtoa@fp+1
 18882  24E5  0021               	movlb	1	; select bank1
 18883  24E6  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18884  24E7  0020               	movlb	0	; select bank0
 18885  24E8  00B0               	movwf	dtoa@fp
 18886  24E9  0022               	movlb	2	; select bank2
 18887  24EA  083C               	movf	vfpfcnvrt@ll^(0+256),w
 18888  24EB  0020               	movlb	0	; select bank0
 18889  24EC  00B2               	movwf	dtoa@d
 18890  24ED  0022               	movlb	2	; select bank2
 18891  24EE  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 18892  24EF  0020               	movlb	0	; select bank0
 18893  24F0  00B3               	movwf	dtoa@d+1
 18894  24F1  0022               	movlb	2	; select bank2
 18895  24F2  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 18896  24F3  0020               	movlb	0	; select bank0
 18897  24F4  00B4               	movwf	dtoa@d+2
 18898  24F5  0022               	movlb	2	; select bank2
 18899  24F6  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 18900  24F7  0020               	movlb	0	; select bank0
 18901  24F8  00B5               	movwf	dtoa@d+3
 18902  24F9  0022               	movlb	2	; select bank2
 18903  24FA  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 18904  24FB  0020               	movlb	0	; select bank0
 18905  24FC  00B6               	movwf	dtoa@d+4
 18906  24FD  0022               	movlb	2	; select bank2
 18907  24FE  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 18908  24FF  0020               	movlb	0	; select bank0
 18909  2500  00B7               	movwf	dtoa@d+5
 18910  2501  0022               	movlb	2	; select bank2
 18911  2502  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 18912  2503  0020               	movlb	0	; select bank0
 18913  2504  00B8               	movwf	dtoa@d+6
 18914  2505  0022               	movlb	2	; select bank2
 18915  2506  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 18916  2507  0020               	movlb	0	; select bank0
 18917  2508  00B9               	movwf	dtoa@d+7
 18918  2509  319D  2554         	fcall	_dtoa
 18919  250B  0020               	movlb	0	; select bank0
 18920  250C  0831               	movf	?_dtoa+1,w
 18921  250D  0021               	movlb	1	; select bank1
 18922  250E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 18923  250F  0020               	movlb	0	; select bank0
 18924  2510  0830               	movf	?_dtoa,w
 18925  2511  0021               	movlb	1	; select bank1
 18926  2512  00E3               	movwf	?_vfpfcnvrt^(0+128)
 18927  2513  0008               	return
 18928  2514                     l7633:	
 18929                           
 18930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 18931  2514  3066               	movlw	102
 18932  2515  0022               	movlb	2	; select bank2
 18933  2516  0635               	xorwf	vfpfcnvrt@ct^(0+256),w
 18934  2517  1D03               	btfss	3,2
 18935  2518  2D69               	goto	L24
 18936                           
 18937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 18938  2519  0021               	movlb	1	; select bank1
 18939  251A  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18940  251B  0086               	movwf	6
 18941  251C  0187               	clrf	7
 18942  251D  3F40               	moviw [0]fsr1
 18943  251E  0022               	movlb	2	; select bank2
 18944  251F  00A0               	movwf	??_vfpfcnvrt^(0+256)
 18945  2520  3F41               	moviw [1]fsr1
 18946  2521  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 18947  2522  0820               	movf	??_vfpfcnvrt^(0+256),w
 18948  2523  0084               	movwf	4
 18949  2524  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 18950  2525  0085               	movwf	5
 18951  2526  0800               	movf	0,w	;code access
 18952  2527  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 18953  2528  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 18954  2529  00C5               	movwf	vfpfcnvrt@c^(0+256)
 18955                           
 18956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 18957  252A  0021               	movlb	1	; select bank1
 18958  252B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 18959  252C  0086               	movwf	6
 18960  252D  0187               	clrf	7
 18961  252E  3001               	movlw	1
 18962  252F  0781               	addwf	1,f
 18963  2530  3141               	addfsr 1,1
 18964  2531  1803               	skipnc
 18965  2532  0A81               	incf	1,f
 18966                           
 18967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 18968  2533  0866               	movf	vfpfcnvrt@ap^(0+128),w
 18969  2534  0086               	movwf	6
 18970  2535  3001               	movlw	1	; select bank2/3
 18971  2536  0087               	movwf	7
 18972  2537  0801               	movf	1,w
 18973  2538  0084               	movwf	4
 18974  2539  3001               	movlw	1	; select bank2/3
 18975  253A  0085               	movwf	5
 18976  253B  3004               	movlw	4
 18977  253C  0781               	addwf	1,f
 18978  253D  3F00               	moviw [0]fsr0
 18979  253E  0022               	movlb	2	; select bank2
 18980  253F  00B8               	movwf	vfpfcnvrt@f^(0+256)
 18981  2540  3F01               	moviw [1]fsr0
 18982  2541  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 18983  2542  3F02               	moviw [2]fsr0
 18984  2543  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 18985  2544  3F03               	moviw [3]fsr0
 18986  2545  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 18987                           
 18988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 18989  2546  0021               	movlb	1	; select bank1
 18990  2547  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 18991  2548  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 18992  2549  0863               	movf	vfpfcnvrt@fp^(0+128),w
 18993  254A  00A0               	movwf	efgtoa@fp^(0+128)
 18994  254B  0022               	movlb	2	; select bank2
 18995  254C  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 18996  254D  0021               	movlb	1	; select bank1
 18997  254E  00A5               	movwf	(efgtoa@f+3)^(0+128)
 18998  254F  0022               	movlb	2	; select bank2
 18999  2550  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 19000  2551  0021               	movlb	1	; select bank1
 19001  2552  00A4               	movwf	(efgtoa@f+2)^(0+128)
 19002  2553  0022               	movlb	2	; select bank2
 19003  2554  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 19004  2555  0021               	movlb	1	; select bank1
 19005  2556  00A3               	movwf	(efgtoa@f+1)^(0+128)
 19006  2557  0022               	movlb	2	; select bank2
 19007  2558  0838               	movf	vfpfcnvrt@f^(0+256),w
 19008  2559  0021               	movlb	1	; select bank1
 19009  255A  00A2               	movwf	efgtoa@f^(0+128)
 19010  255B  0022               	movlb	2	; select bank2
 19011  255C  0845               	movf	vfpfcnvrt@c^(0+256),w
 19012  255D  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19013  255E  0820               	movf	??_vfpfcnvrt^(0+256),w
 19014  255F  0021               	movlb	1	; select bank1
 19015  2560  00A6               	movwf	efgtoa@c^(0+128)
 19016  2561  3180  2058         	fcall	_efgtoa
 19017  2563  0021               	movlb	1	; select bank1
 19018  2564  0821               	movf	(?_efgtoa+1)^(0+128),w
 19019  2565  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19020  2566  0820               	movf	?_efgtoa^(0+128),w
 19021  2567  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19022  2568  0008               	return
 19023  2569                     L24:	
 19024  2569                     L23:	
 19025  2569  31A0  28FF         	ljmp	l7645
 19026                           
 19027                           	psect	text5_split_5
 19028  20FF                     l7645:	
 19029                           
 19030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 19031  20FF  3035               	movlw	low vfpfcnvrt@ct
 19032  2100  00F1               	movwf	strncmp@_l
 19033  2101  3001               	movlw	high vfpfcnvrt@ct
 19034  2102  00F2               	movwf	strncmp@_l+1
 19035  2103  3070               	movlw	low (STR_54| (0+32768))
 19036  2104  00F3               	movwf	strncmp@_r
 19037  2105  30B8               	movlw	high (STR_54| (0+32768))
 19038  2106  00F4               	movwf	strncmp@_r+1
 19039  2107  3002               	movlw	2
 19040  2108  00F5               	movwf	strncmp@n
 19041  2109  3000               	movlw	0
 19042  210A  00F6               	movwf	strncmp@n+1
 19043  210B  31A0  200C  31A0   	fcall	_strncmp
 19044  210E  0871               	movf	?_strncmp,w
 19045  210F  0472               	iorwf	?_strncmp+1,w
 19046  2110  1D03               	btfss	3,2
 19047  2111  29A1               	goto	L26
 19048                           
 19049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 19050  2112  0021               	movlb	1	; select bank1
 19051  2113  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19052  2114  0086               	movwf	6
 19053  2115  0187               	clrf	7
 19054  2116  3F40               	moviw [0]fsr1
 19055  2117  0022               	movlb	2	; select bank2
 19056  2118  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19057  2119  3F41               	moviw [1]fsr1
 19058  211A  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19059  211B  3001               	movlw	1
 19060  211C  0720               	addwf	??_vfpfcnvrt^(0+256),w
 19061  211D  0084               	movwf	4
 19062  211E  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 19063  211F  1803               	skipnc
 19064  2120  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 19065  2121  0085               	movwf	5
 19066  2122  0800               	movf	0,w	;code access
 19067  2123  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 19068  2124  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 19069  2125  00C5               	movwf	vfpfcnvrt@c^(0+256)
 19070  2126  0021               	movlb	1	; select bank1
 19071  2127  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19072  2128  0086               	movwf	6
 19073  2129  0187               	clrf	7
 19074  212A  3F40               	moviw [0]fsr1
 19075  212B  0022               	movlb	2	; select bank2
 19076  212C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19077  212D  3F41               	moviw [1]fsr1
 19078  212E  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19079  212F  0820               	movf	??_vfpfcnvrt^(0+256),w
 19080  2130  0084               	movwf	4
 19081  2131  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19082  2132  0085               	movwf	5
 19083  2133  0800               	movf	0,w	;code access
 19084  2134  3EBF               	addlw	191
 19085  2135  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 19086  2136  30FF               	movlw	255
 19087  2137  1803               	skipnc
 19088  2138  3000               	movlw	0
 19089  2139  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
 19090  213A  3000               	movlw	0
 19091  213B  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
 19092  213C  301A               	movlw	26
 19093  213D  1903               	skipnz
 19094  213E  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
 19095  213F  1803               	btfsc	3,0
 19096  2140  2943               	goto	u11400
 19097  2141  3001               	movlw	1
 19098  2142  2944               	goto	u11410
 19099  2143                     u11400:	
 19100  2143  3000               	movlw	0
 19101  2144                     u11410:	
 19102  2144  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 19103  2145  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
 19104  2146  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 19105  2147  00B3               	movwf	_vfpfcnvrt$1043^(0+256)
 19106  2148  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
 19107  2149  00B4               	movwf	(_vfpfcnvrt$1043+1)^(0+256)
 19108  214A  0833               	movf	_vfpfcnvrt$1043^(0+256),w
 19109  214B  0434               	iorwf	(_vfpfcnvrt$1043+1)^(0+256),w
 19110  214C  1903               	btfsc	3,2
 19111  214D  2962               	goto	l7655
 19112                           
 19113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 19114  214E  0021               	movlb	1	; select bank1
 19115  214F  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19116  2150  0086               	movwf	6
 19117  2151  3001               	movlw	1	; select bank2/3
 19118  2152  0087               	movwf	7
 19119  2153  0801               	movf	1,w
 19120  2154  0084               	movwf	4
 19121  2155  3001               	movlw	1	; select bank2/3
 19122  2156  0085               	movwf	5
 19123  2157  3004               	movlw	4
 19124  2158  0781               	addwf	1,f
 19125  2159  3F00               	moviw [0]fsr0
 19126  215A  0022               	movlb	2	; select bank2
 19127  215B  00B8               	movwf	vfpfcnvrt@f^(0+256)
 19128  215C  3F01               	moviw [1]fsr0
 19129  215D  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 19130  215E  3F02               	moviw [2]fsr0
 19131  215F  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 19132  2160  3F03               	moviw [3]fsr0
 19133  2161  2975               	goto	L1
 19134  2162                     l7655:	
 19135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 19136                           
 19137                           
 19138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 19139  2162  0021               	movlb	1	; select bank1
 19140  2163  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19141  2164  0086               	movwf	6
 19142  2165  3001               	movlw	1	; select bank2/3
 19143  2166  0087               	movwf	7
 19144  2167  0801               	movf	1,w
 19145  2168  0084               	movwf	4
 19146  2169  3001               	movlw	1	; select bank2/3
 19147  216A  0085               	movwf	5
 19148  216B  3004               	movlw	4
 19149  216C  0781               	addwf	1,f
 19150  216D  3F00               	moviw [0]fsr0
 19151  216E  0022               	movlb	2	; select bank2
 19152  216F  00B8               	movwf	vfpfcnvrt@f^(0+256)
 19153  2170  3F01               	moviw [1]fsr0
 19154  2171  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 19155  2172  3F02               	moviw [2]fsr0
 19156  2173  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 19157  2174  3F03               	moviw [3]fsr0
 19158  2175                     L1:	
 19159  2175  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 19160                           
 19161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 19162  2176  0021               	movlb	1	; select bank1
 19163  2177  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19164  2178  0086               	movwf	6
 19165  2179  0187               	clrf	7
 19166  217A  3002               	movlw	2
 19167  217B  0781               	addwf	1,f
 19168  217C  3141               	addfsr 1,1
 19169  217D  1803               	skipnc
 19170  217E  0A81               	incf	1,f
 19171                           
 19172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
 19173  217F  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19174  2180  00A1               	movwf	(efgtoa@fp+1)^(0+128)
 19175  2181  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19176  2182  00A0               	movwf	efgtoa@fp^(0+128)
 19177  2183  0022               	movlb	2	; select bank2
 19178  2184  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 19179  2185  0021               	movlb	1	; select bank1
 19180  2186  00A5               	movwf	(efgtoa@f+3)^(0+128)
 19181  2187  0022               	movlb	2	; select bank2
 19182  2188  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 19183  2189  0021               	movlb	1	; select bank1
 19184  218A  00A4               	movwf	(efgtoa@f+2)^(0+128)
 19185  218B  0022               	movlb	2	; select bank2
 19186  218C  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 19187  218D  0021               	movlb	1	; select bank1
 19188  218E  00A3               	movwf	(efgtoa@f+1)^(0+128)
 19189  218F  0022               	movlb	2	; select bank2
 19190  2190  0838               	movf	vfpfcnvrt@f^(0+256),w
 19191  2191  0021               	movlb	1	; select bank1
 19192  2192  00A2               	movwf	efgtoa@f^(0+128)
 19193  2193  0022               	movlb	2	; select bank2
 19194  2194  0845               	movf	vfpfcnvrt@c^(0+256),w
 19195  2195  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19196  2196  0820               	movf	??_vfpfcnvrt^(0+256),w
 19197  2197  0021               	movlb	1	; select bank1
 19198  2198  00A6               	movwf	efgtoa@c^(0+128)
 19199  2199  3180  2058         	fcall	_efgtoa
 19200  219B  0021               	movlb	1	; select bank1
 19201  219C  0821               	movf	(?_efgtoa+1)^(0+128),w
 19202  219D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19203  219E  0820               	movf	?_efgtoa^(0+128),w
 19204  219F  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19205  21A0  0008               	return
 19206  21A1                     L26:	
 19207  21A1                     L25:	
 19208  21A1  31A3  2BC4         	ljmp	l7663
 19209                           
 19210                           	psect	text5_split_6
 19211  23C4                     l7663:	
 19212                           
 19213                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 19214  23C4  0021               	movlb	1	; select bank1
 19215  23C5  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19216  23C6  0086               	movwf	6
 19217  23C7  0187               	clrf	7
 19218  23C8  3F40               	moviw [0]fsr1
 19219  23C9  00F1               	movwf	strncmp@_l
 19220  23CA  3F41               	moviw [1]fsr1
 19221  23CB  00F2               	movwf	strncmp@_l+1
 19222  23CC  3058               	movlw	low (STR_59| (0+32768))
 19223  23CD  00F3               	movwf	strncmp@_r
 19224  23CE  30B8               	movlw	high (STR_59| (0+32768))
 19225  23CF  00F4               	movwf	strncmp@_r+1
 19226  23D0  3003               	movlw	3
 19227  23D1  00F5               	movwf	strncmp@n
 19228  23D2  3000               	movlw	0
 19229  23D3  00F6               	movwf	strncmp@n+1
 19230  23D4  31A0  200C  31A3   	fcall	_strncmp
 19231  23D7  0871               	movf	?_strncmp,w
 19232  23D8  0472               	iorwf	?_strncmp+1,w
 19233  23D9  1D03               	btfss	3,2
 19234  23DA  2C2B               	goto	l7673
 19235                           
 19236                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 19237  23DB  0021               	movlb	1	; select bank1
 19238  23DC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19239  23DD  0086               	movwf	6
 19240  23DE  0187               	clrf	7
 19241  23DF  3003               	movlw	3
 19242  23E0  0781               	addwf	1,f
 19243  23E1  3141               	addfsr 1,1
 19244  23E2  1803               	skipnc
 19245  23E3  0A81               	incf	1,f
 19246                           
 19247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 19248  23E4  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19249  23E5  0086               	movwf	6
 19250  23E6  3001               	movlw	1	; select bank2/3
 19251  23E7  0087               	movwf	7
 19252  23E8  0801               	movf	1,w
 19253  23E9  0084               	movwf	4
 19254  23EA  3001               	movlw	1	; select bank2/3
 19255  23EB  0085               	movwf	5
 19256  23EC  3002               	movlw	2
 19257  23ED  0781               	addwf	1,f
 19258  23EE  0800               	movf	0,w
 19259  23EF  0022               	movlb	2	; select bank2
 19260  23F0  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 19261  23F1  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 19262  23F2  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 19263  23F3  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 19264  23F4  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 19265  23F5  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 19266  23F6  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 19267  23F7  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 19268                           
 19269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 19270  23F8  0021               	movlb	1	; select bank1
 19271  23F9  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19272  23FA  0020               	movlb	0	; select bank0
 19273  23FB  00B1               	movwf	otoa@fp+1
 19274  23FC  0021               	movlb	1	; select bank1
 19275  23FD  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19276  23FE  0020               	movlb	0	; select bank0
 19277  23FF  00B0               	movwf	otoa@fp
 19278  2400  0022               	movlb	2	; select bank2
 19279  2401  0846               	movf	vfpfcnvrt@llu^(0+256),w
 19280  2402  0020               	movlb	0	; select bank0
 19281  2403  00B2               	movwf	otoa@d
 19282  2404  0022               	movlb	2	; select bank2
 19283  2405  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 19284  2406  0020               	movlb	0	; select bank0
 19285  2407  00B3               	movwf	otoa@d+1
 19286  2408  0022               	movlb	2	; select bank2
 19287  2409  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 19288  240A  0020               	movlb	0	; select bank0
 19289  240B  00B4               	movwf	otoa@d+2
 19290  240C  0022               	movlb	2	; select bank2
 19291  240D  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 19292  240E  0020               	movlb	0	; select bank0
 19293  240F  00B5               	movwf	otoa@d+3
 19294  2410  0022               	movlb	2	; select bank2
 19295  2411  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 19296  2412  0020               	movlb	0	; select bank0
 19297  2413  00B6               	movwf	otoa@d+4
 19298  2414  0022               	movlb	2	; select bank2
 19299  2415  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 19300  2416  0020               	movlb	0	; select bank0
 19301  2417  00B7               	movwf	otoa@d+5
 19302  2418  0022               	movlb	2	; select bank2
 19303  2419  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 19304  241A  0020               	movlb	0	; select bank0
 19305  241B  00B8               	movwf	otoa@d+6
 19306  241C  0022               	movlb	2	; select bank2
 19307  241D  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 19308  241E  0020               	movlb	0	; select bank0
 19309  241F  00B9               	movwf	otoa@d+7
 19310  2420  3199  216D         	fcall	_otoa
 19311  2422  0020               	movlb	0	; select bank0
 19312  2423  0831               	movf	?_otoa+1,w
 19313  2424  0021               	movlb	1	; select bank1
 19314  2425  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19315  2426  0020               	movlb	0	; select bank0
 19316  2427  0830               	movf	?_otoa,w
 19317  2428  0021               	movlb	1	; select bank1
 19318  2429  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19319  242A  0008               	return
 19320  242B                     l7673:	
 19321                           
 19322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 19323  242B  0021               	movlb	1	; select bank1
 19324  242C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19325  242D  0086               	movwf	6
 19326  242E  0187               	clrf	7
 19327  242F  3F40               	moviw [0]fsr1
 19328  2430  00F1               	movwf	strncmp@_l
 19329  2431  3F41               	moviw [1]fsr1
 19330  2432  00F2               	movwf	strncmp@_l+1
 19331  2433  3059               	movlw	low ((STR_59+1)| (0+32768))
 19332  2434  00F3               	movwf	strncmp@_r
 19333  2435  30B8               	movlw	high ((STR_59+1)| (0+32768))
 19334  2436  00F4               	movwf	strncmp@_r+1
 19335  2437  3002               	movlw	2
 19336  2438  00F5               	movwf	strncmp@n
 19337  2439  3000               	movlw	0
 19338  243A  00F6               	movwf	strncmp@n+1
 19339  243B  31A0  200C  31A3   	fcall	_strncmp
 19340  243E  0871               	movf	?_strncmp,w
 19341  243F  0472               	iorwf	?_strncmp+1,w
 19342  2440  1D03               	btfss	3,2
 19343  2441  2C93               	goto	L28
 19344                           
 19345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 19346  2442  0021               	movlb	1	; select bank1
 19347  2443  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19348  2444  0086               	movwf	6
 19349  2445  0187               	clrf	7
 19350  2446  3002               	movlw	2
 19351  2447  0781               	addwf	1,f
 19352  2448  3141               	addfsr 1,1
 19353  2449  1803               	skipnc
 19354  244A  0A81               	incf	1,f
 19355                           
 19356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 19357  244B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19358  244C  0086               	movwf	6
 19359  244D  3001               	movlw	1	; select bank2/3
 19360  244E  0087               	movwf	7
 19361  244F  0801               	movf	1,w
 19362  2450  0084               	movwf	4
 19363  2451  3001               	movlw	1	; select bank2/3
 19364  2452  0085               	movwf	5
 19365  2453  3002               	movlw	2
 19366  2454  0781               	addwf	1,f
 19367  2455  3F00               	moviw [0]fsr0
 19368  2456  0022               	movlb	2	; select bank2
 19369  2457  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 19370  2458  3F01               	moviw [1]fsr0
 19371  2459  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 19372  245A  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 19373  245B  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 19374  245C  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 19375  245D  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 19376  245E  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 19377  245F  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 19378                           
 19379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 19380  2460  0021               	movlb	1	; select bank1
 19381  2461  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19382  2462  0020               	movlb	0	; select bank0
 19383  2463  00B1               	movwf	otoa@fp+1
 19384  2464  0021               	movlb	1	; select bank1
 19385  2465  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19386  2466  0020               	movlb	0	; select bank0
 19387  2467  00B0               	movwf	otoa@fp
 19388  2468  0022               	movlb	2	; select bank2
 19389  2469  0846               	movf	vfpfcnvrt@llu^(0+256),w
 19390  246A  0020               	movlb	0	; select bank0
 19391  246B  00B2               	movwf	otoa@d
 19392  246C  0022               	movlb	2	; select bank2
 19393  246D  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 19394  246E  0020               	movlb	0	; select bank0
 19395  246F  00B3               	movwf	otoa@d+1
 19396  2470  0022               	movlb	2	; select bank2
 19397  2471  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 19398  2472  0020               	movlb	0	; select bank0
 19399  2473  00B4               	movwf	otoa@d+2
 19400  2474  0022               	movlb	2	; select bank2
 19401  2475  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 19402  2476  0020               	movlb	0	; select bank0
 19403  2477  00B5               	movwf	otoa@d+3
 19404  2478  0022               	movlb	2	; select bank2
 19405  2479  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 19406  247A  0020               	movlb	0	; select bank0
 19407  247B  00B6               	movwf	otoa@d+4
 19408  247C  0022               	movlb	2	; select bank2
 19409  247D  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 19410  247E  0020               	movlb	0	; select bank0
 19411  247F  00B7               	movwf	otoa@d+5
 19412  2480  0022               	movlb	2	; select bank2
 19413  2481  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 19414  2482  0020               	movlb	0	; select bank0
 19415  2483  00B8               	movwf	otoa@d+6
 19416  2484  0022               	movlb	2	; select bank2
 19417  2485  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 19418  2486  0020               	movlb	0	; select bank0
 19419  2487  00B9               	movwf	otoa@d+7
 19420  2488  3199  216D         	fcall	_otoa
 19421  248A  0020               	movlb	0	; select bank0
 19422  248B  0831               	movf	?_otoa+1,w
 19423  248C  0021               	movlb	1	; select bank1
 19424  248D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19425  248E  0020               	movlb	0	; select bank0
 19426  248F  0830               	movf	?_otoa,w
 19427  2490  0021               	movlb	1	; select bank1
 19428  2491  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19429  2492  0008               	return
 19430  2493                     L28:	
 19431  2493                     L27:	
 19432  2493  3198  2887         	ljmp	l7683
 19433                           
 19434                           	psect	text5_split_7
 19435  1887                     l7683:	
 19436                           
 19437                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 19438  1887  0021               	movlb	1	; select bank1
 19439  1888  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19440  1889  0086               	movwf	6
 19441  188A  0187               	clrf	7
 19442  188B  3F40               	moviw [0]fsr1
 19443  188C  0022               	movlb	2	; select bank2
 19444  188D  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19445  188E  3F41               	moviw [1]fsr1
 19446  188F  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19447  1890  0820               	movf	??_vfpfcnvrt^(0+256),w
 19448  1891  0084               	movwf	4
 19449  1892  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19450  1893  0085               	movwf	5
 19451  1894  0012               	moviw fsr0++
 19452  1895  3A6F               	xorlw	111
 19453  1896  1D03               	btfss	3,2
 19454  1897  28E9               	goto	l7693
 19455                           
 19456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 19457  1898  0021               	movlb	1	; select bank1
 19458  1899  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19459  189A  0086               	movwf	6
 19460  189B  0187               	clrf	7
 19461  189C  3001               	movlw	1
 19462  189D  0781               	addwf	1,f
 19463  189E  3141               	addfsr 1,1
 19464  189F  1803               	skipnc
 19465  18A0  0A81               	incf	1,f
 19466                           
 19467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 19468  18A1  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19469  18A2  0086               	movwf	6
 19470  18A3  3001               	movlw	1	; select bank2/3
 19471  18A4  0087               	movwf	7
 19472  18A5  0801               	movf	1,w
 19473  18A6  0084               	movwf	4
 19474  18A7  3001               	movlw	1	; select bank2/3
 19475  18A8  0085               	movwf	5
 19476  18A9  3002               	movlw	2
 19477  18AA  0781               	addwf	1,f
 19478  18AB  3F00               	moviw [0]fsr0
 19479  18AC  0022               	movlb	2	; select bank2
 19480  18AD  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 19481  18AE  3F01               	moviw [1]fsr0
 19482  18AF  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 19483  18B0  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 19484  18B1  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 19485  18B2  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 19486  18B3  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 19487  18B4  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 19488  18B5  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 19489                           
 19490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 19491  18B6  0021               	movlb	1	; select bank1
 19492  18B7  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19493  18B8  0020               	movlb	0	; select bank0
 19494  18B9  00B1               	movwf	otoa@fp+1
 19495  18BA  0021               	movlb	1	; select bank1
 19496  18BB  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19497  18BC  0020               	movlb	0	; select bank0
 19498  18BD  00B0               	movwf	otoa@fp
 19499  18BE  0022               	movlb	2	; select bank2
 19500  18BF  0846               	movf	vfpfcnvrt@llu^(0+256),w
 19501  18C0  0020               	movlb	0	; select bank0
 19502  18C1  00B2               	movwf	otoa@d
 19503  18C2  0022               	movlb	2	; select bank2
 19504  18C3  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 19505  18C4  0020               	movlb	0	; select bank0
 19506  18C5  00B3               	movwf	otoa@d+1
 19507  18C6  0022               	movlb	2	; select bank2
 19508  18C7  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 19509  18C8  0020               	movlb	0	; select bank0
 19510  18C9  00B4               	movwf	otoa@d+2
 19511  18CA  0022               	movlb	2	; select bank2
 19512  18CB  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 19513  18CC  0020               	movlb	0	; select bank0
 19514  18CD  00B5               	movwf	otoa@d+3
 19515  18CE  0022               	movlb	2	; select bank2
 19516  18CF  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 19517  18D0  0020               	movlb	0	; select bank0
 19518  18D1  00B6               	movwf	otoa@d+4
 19519  18D2  0022               	movlb	2	; select bank2
 19520  18D3  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 19521  18D4  0020               	movlb	0	; select bank0
 19522  18D5  00B7               	movwf	otoa@d+5
 19523  18D6  0022               	movlb	2	; select bank2
 19524  18D7  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 19525  18D8  0020               	movlb	0	; select bank0
 19526  18D9  00B8               	movwf	otoa@d+6
 19527  18DA  0022               	movlb	2	; select bank2
 19528  18DB  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 19529  18DC  0020               	movlb	0	; select bank0
 19530  18DD  00B9               	movwf	otoa@d+7
 19531  18DE  3199  216D         	fcall	_otoa
 19532  18E0  0020               	movlb	0	; select bank0
 19533  18E1  0831               	movf	?_otoa+1,w
 19534  18E2  0021               	movlb	1	; select bank1
 19535  18E3  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19536  18E4  0020               	movlb	0	; select bank0
 19537  18E5  0830               	movf	?_otoa,w
 19538  18E6  0021               	movlb	1	; select bank1
 19539  18E7  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19540  18E8  0008               	return
 19541  18E9                     l7693:	
 19542                           
 19543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1000:      
      +                             if (!strncmp(*fmt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 19544  18E9  0021               	movlb	1	; select bank1
 19545  18EA  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19546  18EB  0086               	movwf	6
 19547  18EC  0187               	clrf	7
 19548  18ED  3F40               	moviw [0]fsr1
 19549  18EE  00F1               	movwf	strncmp@_l
 19550  18EF  3F41               	moviw [1]fsr1
 19551  18F0  00F2               	movwf	strncmp@_l+1
 19552  18F1  307F               	movlw	low (STR_69| (0+32768))
 19553  18F2  00F3               	movwf	strncmp@_r
 19554  18F3  30B8               	movlw	high (STR_69| (0+32768))
 19555  18F4  00F4               	movwf	strncmp@_r+1
 19556  18F5  3002               	movlw	2
 19557  18F6  00F5               	movwf	strncmp@n
 19558  18F7  3000               	movlw	0
 19559  18F8  00F6               	movwf	strncmp@n+1
 19560  18F9  31A0  200C  3198   	fcall	_strncmp
 19561  18FC  0871               	movf	?_strncmp,w
 19562  18FD  0472               	iorwf	?_strncmp+1,w
 19563  18FE  1D03               	btfss	3,2
 19564  18FF  296B               	goto	L30
 19565                           
 19566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1002:      
      +                                 *fmt += ((sizeof("lo")/sizeof("lo"[0]))-1);
 19567  1900  0021               	movlb	1	; select bank1
 19568  1901  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19569  1902  0086               	movwf	6
 19570  1903  0187               	clrf	7
 19571  1904  3002               	movlw	2
 19572  1905  0781               	addwf	1,f
 19573  1906  3141               	addfsr 1,1
 19574  1907  1803               	skipnc
 19575  1908  0A81               	incf	1,f
 19576                           
 19577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1003:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 19578  1909  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19579  190A  0086               	movwf	6
 19580  190B  3001               	movlw	1	; select bank2/3
 19581  190C  0087               	movwf	7
 19582  190D  0801               	movf	1,w
 19583  190E  0084               	movwf	4
 19584  190F  3001               	movlw	1	; select bank2/3
 19585  1910  0085               	movwf	5
 19586  1911  3004               	movlw	4
 19587  1912  0781               	addwf	1,f
 19588  1913  3F00               	moviw [0]fsr0
 19589  1914  0022               	movlb	2	; select bank2
 19590  1915  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19591  1916  3F01               	moviw [1]fsr0
 19592  1917  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19593  1918  3F02               	moviw [2]fsr0
 19594  1919  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 19595  191A  3F03               	moviw [3]fsr0
 19596  191B  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 19597  191C  0820               	movf	??_vfpfcnvrt^(0+256),w
 19598  191D  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 19599  191E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19600  191F  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 19601  1920  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 19602  1921  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 19603  1922  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 19604  1923  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 19605  1924  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 19606  1925  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 19607  1926  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 19608  1927  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 19609  1928  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 19610  1929  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 19611  192A  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 19612  192B  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 19613  192C  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 19614  192D  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 19615  192E  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 19616  192F  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 19617  1930  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 19618  1931  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 19619  1932  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 19620  1933  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 19621  1934  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 19622  1935  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 19623  1936  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 19624  1937  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 19625                           
 19626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1005:      
      +                                 return otoa(fp, llu);
 19627  1938  0021               	movlb	1	; select bank1
 19628  1939  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19629  193A  0020               	movlb	0	; select bank0
 19630  193B  00B1               	movwf	otoa@fp+1
 19631  193C  0021               	movlb	1	; select bank1
 19632  193D  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19633  193E  0020               	movlb	0	; select bank0
 19634  193F  00B0               	movwf	otoa@fp
 19635  1940  0022               	movlb	2	; select bank2
 19636  1941  0846               	movf	vfpfcnvrt@llu^(0+256),w
 19637  1942  0020               	movlb	0	; select bank0
 19638  1943  00B2               	movwf	otoa@d
 19639  1944  0022               	movlb	2	; select bank2
 19640  1945  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 19641  1946  0020               	movlb	0	; select bank0
 19642  1947  00B3               	movwf	otoa@d+1
 19643  1948  0022               	movlb	2	; select bank2
 19644  1949  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 19645  194A  0020               	movlb	0	; select bank0
 19646  194B  00B4               	movwf	otoa@d+2
 19647  194C  0022               	movlb	2	; select bank2
 19648  194D  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 19649  194E  0020               	movlb	0	; select bank0
 19650  194F  00B5               	movwf	otoa@d+3
 19651  1950  0022               	movlb	2	; select bank2
 19652  1951  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 19653  1952  0020               	movlb	0	; select bank0
 19654  1953  00B6               	movwf	otoa@d+4
 19655  1954  0022               	movlb	2	; select bank2
 19656  1955  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 19657  1956  0020               	movlb	0	; select bank0
 19658  1957  00B7               	movwf	otoa@d+5
 19659  1958  0022               	movlb	2	; select bank2
 19660  1959  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 19661  195A  0020               	movlb	0	; select bank0
 19662  195B  00B8               	movwf	otoa@d+6
 19663  195C  0022               	movlb	2	; select bank2
 19664  195D  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 19665  195E  0020               	movlb	0	; select bank0
 19666  195F  00B9               	movwf	otoa@d+7
 19667  1960  3199  216D         	fcall	_otoa
 19668  1962  0020               	movlb	0	; select bank0
 19669  1963  0831               	movf	?_otoa+1,w
 19670  1964  0021               	movlb	1	; select bank1
 19671  1965  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19672  1966  0020               	movlb	0	; select bank0
 19673  1967  0830               	movf	?_otoa,w
 19674  1968  0021               	movlb	1	; select bank1
 19675  1969  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19676  196A  0008               	return
 19677  196B                     L30:	
 19678  196B                     L29:	
 19679  196B  3188  283F         	ljmp	l7703
 19680                           
 19681                           	psect	text5_split_8
 19682  083F                     l7703:	
 19683                           
 19684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 19685  083F  0021               	movlb	1	; select bank1
 19686  0840  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19687  0841  0086               	movwf	6
 19688  0842  0187               	clrf	7
 19689  0843  3F40               	moviw [0]fsr1
 19690  0844  00F1               	movwf	strncmp@_l
 19691  0845  3F41               	moviw [1]fsr1
 19692  0846  00F2               	movwf	strncmp@_l+1
 19693  0847  3082               	movlw	low (STR_74| (0+32768))
 19694  0848  00F3               	movwf	strncmp@_r
 19695  0849  30B8               	movlw	high (STR_74| (0+32768))
 19696  084A  00F4               	movwf	strncmp@_r+1
 19697  084B  3002               	movlw	2
 19698  084C  00F5               	movwf	strncmp@n
 19699  084D  3000               	movlw	0
 19700  084E  00F6               	movwf	strncmp@n+1
 19701  084F  31A0  200C  3188   	fcall	_strncmp
 19702  0852  0871               	movf	?_strncmp,w
 19703  0853  0472               	iorwf	?_strncmp+1,w
 19704  0854  1D03               	btfss	3,2
 19705  0855  28A7               	goto	l7713
 19706                           
 19707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 19708  0856  0021               	movlb	1	; select bank1
 19709  0857  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19710  0858  0086               	movwf	6
 19711  0859  0187               	clrf	7
 19712  085A  3002               	movlw	2
 19713  085B  0781               	addwf	1,f
 19714  085C  3141               	addfsr 1,1
 19715  085D  1803               	skipnc
 19716  085E  0A81               	incf	1,f
 19717                           
 19718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 19719  085F  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19720  0860  0086               	movwf	6
 19721  0861  3001               	movlw	1	; select bank2/3
 19722  0862  0087               	movwf	7
 19723  0863  0801               	movf	1,w
 19724  0864  0084               	movwf	4
 19725  0865  3001               	movlw	1	; select bank2/3
 19726  0866  0085               	movwf	5
 19727  0867  3002               	movlw	2
 19728  0868  0781               	addwf	1,f
 19729  0869  3F00               	moviw [0]fsr0
 19730  086A  0022               	movlb	2	; select bank2
 19731  086B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 19732  086C  3F01               	moviw [1]fsr0
 19733  086D  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 19734  086E  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 19735  086F  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 19736  0870  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 19737  0871  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 19738  0872  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 19739  0873  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 19740                           
 19741                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 19742  0874  0021               	movlb	1	; select bank1
 19743  0875  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 19744  0876  0020               	movlb	0	; select bank0
 19745  0877  00B1               	movwf	otoa@fp+1
 19746  0878  0021               	movlb	1	; select bank1
 19747  0879  0863               	movf	vfpfcnvrt@fp^(0+128),w
 19748  087A  0020               	movlb	0	; select bank0
 19749  087B  00B0               	movwf	otoa@fp
 19750  087C  0022               	movlb	2	; select bank2
 19751  087D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 19752  087E  0020               	movlb	0	; select bank0
 19753  087F  00B2               	movwf	otoa@d
 19754  0880  0022               	movlb	2	; select bank2
 19755  0881  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 19756  0882  0020               	movlb	0	; select bank0
 19757  0883  00B3               	movwf	otoa@d+1
 19758  0884  0022               	movlb	2	; select bank2
 19759  0885  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 19760  0886  0020               	movlb	0	; select bank0
 19761  0887  00B4               	movwf	otoa@d+2
 19762  0888  0022               	movlb	2	; select bank2
 19763  0889  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 19764  088A  0020               	movlb	0	; select bank0
 19765  088B  00B5               	movwf	otoa@d+3
 19766  088C  0022               	movlb	2	; select bank2
 19767  088D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 19768  088E  0020               	movlb	0	; select bank0
 19769  088F  00B6               	movwf	otoa@d+4
 19770  0890  0022               	movlb	2	; select bank2
 19771  0891  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 19772  0892  0020               	movlb	0	; select bank0
 19773  0893  00B7               	movwf	otoa@d+5
 19774  0894  0022               	movlb	2	; select bank2
 19775  0895  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 19776  0896  0020               	movlb	0	; select bank0
 19777  0897  00B8               	movwf	otoa@d+6
 19778  0898  0022               	movlb	2	; select bank2
 19779  0899  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 19780  089A  0020               	movlb	0	; select bank0
 19781  089B  00B9               	movwf	otoa@d+7
 19782  089C  3199  216D         	fcall	_otoa
 19783  089E  0020               	movlb	0	; select bank0
 19784  089F  0831               	movf	?_otoa+1,w
 19785  08A0  0021               	movlb	1	; select bank1
 19786  08A1  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 19787  08A2  0020               	movlb	0	; select bank0
 19788  08A3  0830               	movf	?_otoa,w
 19789  08A4  0021               	movlb	1	; select bank1
 19790  08A5  00E3               	movwf	?_vfpfcnvrt^(0+128)
 19791  08A6  0008               	return
 19792  08A7                     l7713:	
 19793                           
 19794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 19795  08A7  0021               	movlb	1	; select bank1
 19796  08A8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19797  08A9  0086               	movwf	6
 19798  08AA  0187               	clrf	7
 19799  08AB  3F40               	moviw [0]fsr1
 19800  08AC  00F1               	movwf	strncmp@_l
 19801  08AD  3F41               	moviw [1]fsr1
 19802  08AE  00F2               	movwf	strncmp@_l+1
 19803  08AF  3054               	movlw	low (STR_79| (0+32768))
 19804  08B0  00F3               	movwf	strncmp@_r
 19805  08B1  30B8               	movlw	high (STR_79| (0+32768))
 19806  08B2  00F4               	movwf	strncmp@_r+1
 19807  08B3  3003               	movlw	3
 19808  08B4  00F5               	movwf	strncmp@n
 19809  08B5  3000               	movlw	0
 19810  08B6  00F6               	movwf	strncmp@n+1
 19811  08B7  31A0  200C  3188   	fcall	_strncmp
 19812  08BA  0871               	movf	?_strncmp,w
 19813  08BB  0472               	iorwf	?_strncmp+1,w
 19814  08BC  1D03               	btfss	3,2
 19815  08BD  2977               	goto	l7725
 19816                           
 19817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 19818  08BE  0021               	movlb	1	; select bank1
 19819  08BF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19820  08C0  0086               	movwf	6
 19821  08C1  0187               	clrf	7
 19822  08C2  3003               	movlw	3
 19823  08C3  0781               	addwf	1,f
 19824  08C4  3141               	addfsr 1,1
 19825  08C5  1803               	skipnc
 19826  08C6  0A81               	incf	1,f
 19827                           
 19828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 19829  08C7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19830  08C8  0086               	movwf	6
 19831  08C9  3001               	movlw	1	; select bank2/3
 19832  08CA  0087               	movwf	7
 19833  08CB  3F40               	moviw [0]fsr1
 19834  08CC  0084               	movwf	4
 19835  08CD  3001               	movlw	1	; select bank2/3
 19836  08CE  0085               	movwf	5
 19837  08CF  0A81               	incf	1,f
 19838  08D0  0800               	movf	0,w
 19839  08D1  0022               	movlb	2	; select bank2
 19840  08D2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19841  08D3  0820               	movf	??_vfpfcnvrt^(0+256),w
 19842  08D4  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 19843                           
 19844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 19845  08D5  0023               	movlb	3	; select bank3
 19846  08D6  083C               	movf	_nout^(0+384),w
 19847  08D7  0022               	movlb	2	; select bank2
 19848  08D8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19849  08D9  0844               	movf	vfpfcnvrt@vp^(0+256),w
 19850  08DA  0086               	movwf	6
 19851  08DB  3001               	movlw	1	; select bank2/3
 19852  08DC  0087               	movwf	7
 19853  08DD  0820               	movf	??_vfpfcnvrt^(0+256),w
 19854  08DE  0081               	movwf	1
 19855  08DF  2973               	goto	l7721
 19856  08E0                     l7727:	
 19857                           
 19858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 19859  08E0  0021               	movlb	1	; select bank1
 19860  08E1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19861  08E2  0086               	movwf	6
 19862  08E3  0187               	clrf	7
 19863  08E4  3002               	movlw	2
 19864  08E5  0781               	addwf	1,f
 19865  08E6  3141               	addfsr 1,1
 19866  08E7  1803               	skipnc
 19867  08E8  0A81               	incf	1,f
 19868                           
 19869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 19870  08E9  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19871  08EA  0086               	movwf	6
 19872  08EB  3001               	movlw	1	; select bank2/3
 19873  08EC  0087               	movwf	7
 19874  08ED  3F40               	moviw [0]fsr1
 19875  08EE  0084               	movwf	4
 19876  08EF  3001               	movlw	1	; select bank2/3
 19877  08F0  0085               	movwf	5
 19878  08F1  0A81               	incf	1,f
 19879  08F2  0800               	movf	0,w
 19880  08F3  0022               	movlb	2	; select bank2
 19881  08F4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19882  08F5  0820               	movf	??_vfpfcnvrt^(0+256),w
 19883  08F6  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 19884                           
 19885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 19886  08F7  0844               	movf	vfpfcnvrt@vp^(0+256),w
 19887  08F8  0086               	movwf	6
 19888  08F9  3001               	movlw	1	; select bank2/3
 19889  08FA  0087               	movwf	7
 19890  08FB  0023               	movlb	3	; select bank3
 19891  08FC  083C               	movf	_nout^(0+384),w
 19892  08FD  3FC0               	movwi [0]fsr1
 19893  08FE  083D               	movf	(_nout+1)^(0+384),w
 19894  08FF  3FC1               	movwi [1]fsr1
 19895  0900  2973               	goto	l7721
 19896  0901                     l7739:	
 19897                           
 19898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 19899  0901  0021               	movlb	1	; select bank1
 19900  0902  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19901  0903  0086               	movwf	6
 19902  0904  0187               	clrf	7
 19903  0905  3001               	movlw	1
 19904  0906  0781               	addwf	1,f
 19905  0907  3141               	addfsr 1,1
 19906  0908  1803               	skipnc
 19907  0909  0A81               	incf	1,f
 19908                           
 19909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 19910  090A  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19911  090B  0086               	movwf	6
 19912  090C  3001               	movlw	1	; select bank2/3
 19913  090D  0087               	movwf	7
 19914  090E  3F40               	moviw [0]fsr1
 19915  090F  0084               	movwf	4
 19916  0910  3001               	movlw	1	; select bank2/3
 19917  0911  0085               	movwf	5
 19918  0912  0A81               	incf	1,f
 19919  0913  0800               	movf	0,w
 19920  0914  0022               	movlb	2	; select bank2
 19921  0915  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19922  0916  0820               	movf	??_vfpfcnvrt^(0+256),w
 19923  0917  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 19924                           
 19925                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 19926  0918  0844               	movf	vfpfcnvrt@vp^(0+256),w
 19927  0919  0086               	movwf	6
 19928  091A  3001               	movlw	1	; select bank2/3
 19929  091B  0087               	movwf	7
 19930  091C  0023               	movlb	3	; select bank3
 19931  091D  083C               	movf	_nout^(0+384),w
 19932  091E  3FC0               	movwi [0]fsr1
 19933  091F  083D               	movf	(_nout+1)^(0+384),w
 19934  0920  3FC1               	movwi [1]fsr1
 19935  0921  2973               	goto	l7721
 19936  0922                     l7751:	
 19937                           
 19938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1087:      
      +                                 *fmt += ((sizeof("ln")/sizeof("ln"[0]))-1);
 19939  0922  0021               	movlb	1	; select bank1
 19940  0923  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19941  0924  0086               	movwf	6
 19942  0925  0187               	clrf	7
 19943  0926  3002               	movlw	2
 19944  0927  0781               	addwf	1,f
 19945  0928  3141               	addfsr 1,1
 19946  0929  1803               	skipnc
 19947  092A  0A81               	incf	1,f
 19948                           
 19949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1088:      
      +                                 vp = (void *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 19950  092B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 19951  092C  0086               	movwf	6
 19952  092D  3001               	movlw	1	; select bank2/3
 19953  092E  0087               	movwf	7
 19954  092F  3F40               	moviw [0]fsr1
 19955  0930  0084               	movwf	4
 19956  0931  3001               	movlw	1	; select bank2/3
 19957  0932  0085               	movwf	5
 19958  0933  0A81               	incf	1,f
 19959  0934  0800               	movf	0,w
 19960  0935  0022               	movlb	2	; select bank2
 19961  0936  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19962  0937  0820               	movf	??_vfpfcnvrt^(0+256),w
 19963  0938  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 19964                           
 19965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1089:      
      +                                 *(long *)vp = (long)nout;
 19966  0939  0023               	movlb	3	; select bank3
 19967  093A  083C               	movf	_nout^(0+384),w
 19968  093B  0022               	movlb	2	; select bank2
 19969  093C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 19970  093D  0023               	movlb	3	; select bank3
 19971  093E  083D               	movf	(_nout+1)^(0+384),w
 19972  093F  0022               	movlb	2	; select bank2
 19973  0940  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 19974  0941  3000               	movlw	0
 19975  0942  1BA1               	btfsc	(??_vfpfcnvrt^(0+256)+1),7
 19976  0943  30FF               	movlw	255
 19977  0944  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 19978  0945  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 19979  0946  0844               	movf	vfpfcnvrt@vp^(0+256),w
 19980  0947  0086               	movwf	6
 19981  0948  3001               	movlw	1	; select bank2/3
 19982  0949  0087               	movwf	7
 19983  094A  0820               	movf	??_vfpfcnvrt^(0+256),w
 19984  094B  3FC0               	movwi [0]fsr1
 19985  094C  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 19986  094D  3FC1               	movwi [1]fsr1
 19987  094E  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 19988  094F  3FC2               	movwi [2]fsr1
 19989  0950  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 19990  0951  3FC3               	movwi [3]fsr1
 19991  0952  2973               	goto	l7721
 19992  0953                     l7763:	
 19993                           
 19994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 19995  0953  0021               	movlb	1	; select bank1
 19996  0954  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 19997  0955  0086               	movwf	6
 19998  0956  0187               	clrf	7
 19999  0957  3002               	movlw	2
 20000  0958  0781               	addwf	1,f
 20001  0959  3141               	addfsr 1,1
 20002  095A  1803               	skipnc
 20003  095B  0A81               	incf	1,f
 20004                           
 20005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 20006  095C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20007  095D  0086               	movwf	6
 20008  095E  3001               	movlw	1	; select bank2/3
 20009  095F  0087               	movwf	7
 20010  0960  3F40               	moviw [0]fsr1
 20011  0961  0084               	movwf	4
 20012  0962  3001               	movlw	1	; select bank2/3
 20013  0963  0085               	movwf	5
 20014  0964  0A81               	incf	1,f
 20015  0965  0800               	movf	0,w
 20016  0966  0022               	movlb	2	; select bank2
 20017  0967  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20018  0968  0820               	movf	??_vfpfcnvrt^(0+256),w
 20019  0969  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 20020                           
 20021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 20022  096A  0844               	movf	vfpfcnvrt@vp^(0+256),w
 20023  096B  0086               	movwf	6
 20024  096C  3001               	movlw	1	; select bank2/3
 20025  096D  0087               	movwf	7
 20026  096E  0023               	movlb	3	; select bank3
 20027  096F  083C               	movf	_nout^(0+384),w
 20028  0970  3FC0               	movwi [0]fsr1
 20029  0971  083D               	movf	(_nout+1)^(0+384),w
 20030  0972  3FC1               	movwi [1]fsr1
 20031  0973                     l7721:	
 20032                           
 20033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 20034  0973  0021               	movlb	1	; select bank1
 20035  0974  01E3               	clrf	?_vfpfcnvrt^(0+128)
 20036  0975  01E4               	clrf	(?_vfpfcnvrt+1)^(0+128)
 20037  0976  0008               	return
 20038  0977                     l7725:	
 20039                           
 20040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 20041  0977  0021               	movlb	1	; select bank1
 20042  0978  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20043  0979  0086               	movwf	6
 20044  097A  0187               	clrf	7
 20045  097B  3F40               	moviw [0]fsr1
 20046  097C  00F1               	movwf	strncmp@_l
 20047  097D  3F41               	moviw [1]fsr1
 20048  097E  00F2               	movwf	strncmp@_l+1
 20049  097F  3055               	movlw	low ((STR_79+1)| (0+32768))
 20050  0980  00F3               	movwf	strncmp@_r
 20051  0981  30B8               	movlw	high ((STR_79+1)| (0+32768))
 20052  0982  00F4               	movwf	strncmp@_r+1
 20053  0983  3002               	movlw	2
 20054  0984  00F5               	movwf	strncmp@n
 20055  0985  3000               	movlw	0
 20056  0986  00F6               	movwf	strncmp@n+1
 20057  0987  31A0  200C  3188   	fcall	_strncmp
 20058  098A  0871               	movf	?_strncmp,w
 20059  098B  0472               	iorwf	?_strncmp+1,w
 20060  098C  1903               	btfsc	3,2
 20061  098D  28E0               	goto	l7727
 20062                           
 20063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 20064  098E  0021               	movlb	1	; select bank1
 20065  098F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20066  0990  0086               	movwf	6
 20067  0991  0187               	clrf	7
 20068  0992  3F40               	moviw [0]fsr1
 20069  0993  0022               	movlb	2	; select bank2
 20070  0994  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20071  0995  3F41               	moviw [1]fsr1
 20072  0996  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20073  0997  0820               	movf	??_vfpfcnvrt^(0+256),w
 20074  0998  0084               	movwf	4
 20075  0999  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20076  099A  0085               	movwf	5
 20077  099B  0012               	moviw fsr0++
 20078  099C  3A6E               	xorlw	110
 20079  099D  1903               	btfsc	3,2
 20080  099E  2901               	goto	l7739
 20081                           
 20082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1085:      
      +                             if (!strncmp(*fmt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 20083  099F  0021               	movlb	1	; select bank1
 20084  09A0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20085  09A1  0086               	movwf	6
 20086  09A2  0187               	clrf	7
 20087  09A3  3F40               	moviw [0]fsr1
 20088  09A4  00F1               	movwf	strncmp@_l
 20089  09A5  3F41               	moviw [1]fsr1
 20090  09A6  00F2               	movwf	strncmp@_l+1
 20091  09A7  3079               	movlw	low (STR_89| (0+32768))
 20092  09A8  00F3               	movwf	strncmp@_r
 20093  09A9  30B8               	movlw	high (STR_89| (0+32768))
 20094  09AA  00F4               	movwf	strncmp@_r+1
 20095  09AB  3002               	movlw	2
 20096  09AC  00F5               	movwf	strncmp@n
 20097  09AD  3000               	movlw	0
 20098  09AE  00F6               	movwf	strncmp@n+1
 20099  09AF  31A0  200C  3188   	fcall	_strncmp
 20100  09B2  0871               	movf	?_strncmp,w
 20101  09B3  0472               	iorwf	?_strncmp+1,w
 20102  09B4  1903               	btfsc	3,2
 20103  09B5  2922               	goto	l7751
 20104                           
 20105                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 20106  09B6  0021               	movlb	1	; select bank1
 20107  09B7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20108  09B8  0086               	movwf	6
 20109  09B9  0187               	clrf	7
 20110  09BA  3F40               	moviw [0]fsr1
 20111  09BB  00F1               	movwf	strncmp@_l
 20112  09BC  3F41               	moviw [1]fsr1
 20113  09BD  00F2               	movwf	strncmp@_l+1
 20114  09BE  307C               	movlw	low (STR_94| (0+32768))
 20115  09BF  00F3               	movwf	strncmp@_r
 20116  09C0  30B8               	movlw	high (STR_94| (0+32768))
 20117  09C1  00F4               	movwf	strncmp@_r+1
 20118  09C2  3002               	movlw	2
 20119  09C3  00F5               	movwf	strncmp@n
 20120  09C4  3000               	movlw	0
 20121  09C5  00F6               	movwf	strncmp@n+1
 20122  09C6  31A0  200C  3188   	fcall	_strncmp
 20123  09C9  0871               	movf	?_strncmp,w
 20124  09CA  0472               	iorwf	?_strncmp+1,w
 20125  09CB  1903               	btfsc	3,2
 20126  09CC  2953               	goto	l7763
 20127                           
 20128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 20129  09CD  0021               	movlb	1	; select bank1
 20130  09CE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20131  09CF  0086               	movwf	6
 20132  09D0  0187               	clrf	7
 20133  09D1  3F40               	moviw [0]fsr1
 20134  09D2  0022               	movlb	2	; select bank2
 20135  09D3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20136  09D4  3F41               	moviw [1]fsr1
 20137  09D5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20138  09D6  0820               	movf	??_vfpfcnvrt^(0+256),w
 20139  09D7  0084               	movwf	4
 20140  09D8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20141  09D9  0085               	movwf	5
 20142  09DA  0012               	moviw fsr0++
 20143  09DB  3A70               	xorlw	112
 20144  09DC  1D03               	btfss	3,2
 20145  09DD  2A43               	goto	l7783
 20146                           
 20147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 20148  09DE  0021               	movlb	1	; select bank1
 20149  09DF  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20150  09E0  0086               	movwf	6
 20151  09E1  0187               	clrf	7
 20152  09E2  3001               	movlw	1
 20153  09E3  0781               	addwf	1,f
 20154  09E4  3141               	addfsr 1,1
 20155  09E5  1803               	skipnc
 20156  09E6  0A81               	incf	1,f
 20157                           
 20158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 20159  09E7  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20160  09E8  0086               	movwf	6
 20161  09E9  3001               	movlw	1	; select bank2/3
 20162  09EA  0087               	movwf	7
 20163  09EB  3F40               	moviw [0]fsr1
 20164  09EC  0084               	movwf	4
 20165  09ED  3001               	movlw	1	; select bank2/3
 20166  09EE  0085               	movwf	5
 20167  09EF  0A81               	incf	1,f
 20168  09F0  0800               	movf	0,w
 20169  09F1  0022               	movlb	2	; select bank2
 20170  09F2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20171  09F3  01A1               	clrf	(??_vfpfcnvrt^(0+256)+1)
 20172  09F4  01A2               	clrf	(??_vfpfcnvrt^(0+256)+2)
 20173  09F5  01A3               	clrf	(??_vfpfcnvrt^(0+256)+3)
 20174  09F6  01A4               	clrf	(??_vfpfcnvrt^(0+256)+4)
 20175  09F7  01A5               	clrf	(??_vfpfcnvrt^(0+256)+5)
 20176  09F8  01A6               	clrf	(??_vfpfcnvrt^(0+256)+6)
 20177  09F9  01A7               	clrf	(??_vfpfcnvrt^(0+256)+7)
 20178  09FA  0827               	movf	(??_vfpfcnvrt^(0+256)+7),w
 20179  09FB  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 20180  09FC  0826               	movf	(??_vfpfcnvrt^(0+256)+6),w
 20181  09FD  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 20182  09FE  0825               	movf	(??_vfpfcnvrt^(0+256)+5),w
 20183  09FF  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 20184  0A00  0824               	movf	(??_vfpfcnvrt^(0+256)+4),w
 20185  0A01  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 20186  0A02  0823               	movf	(??_vfpfcnvrt^(0+256)+3),w
 20187  0A03  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 20188  0A04  0822               	movf	(??_vfpfcnvrt^(0+256)+2),w
 20189  0A05  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 20190  0A06  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 20191  0A07  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20192  0A08  0820               	movf	??_vfpfcnvrt^(0+256),w
 20193  0A09  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20194                           
 20195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 20196  0A0A  0021               	movlb	1	; select bank1
 20197  0A0B  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20198  0A0C  0020               	movlb	0	; select bank0
 20199  0A0D  00B1               	movwf	xtoa@fp+1
 20200  0A0E  0021               	movlb	1	; select bank1
 20201  0A0F  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20202  0A10  0020               	movlb	0	; select bank0
 20203  0A11  00B0               	movwf	xtoa@fp
 20204  0A12  0022               	movlb	2	; select bank2
 20205  0A13  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20206  0A14  0020               	movlb	0	; select bank0
 20207  0A15  00B2               	movwf	xtoa@d
 20208  0A16  0022               	movlb	2	; select bank2
 20209  0A17  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20210  0A18  0020               	movlb	0	; select bank0
 20211  0A19  00B3               	movwf	xtoa@d+1
 20212  0A1A  0022               	movlb	2	; select bank2
 20213  0A1B  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20214  0A1C  0020               	movlb	0	; select bank0
 20215  0A1D  00B4               	movwf	xtoa@d+2
 20216  0A1E  0022               	movlb	2	; select bank2
 20217  0A1F  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20218  0A20  0020               	movlb	0	; select bank0
 20219  0A21  00B5               	movwf	xtoa@d+3
 20220  0A22  0022               	movlb	2	; select bank2
 20221  0A23  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20222  0A24  0020               	movlb	0	; select bank0
 20223  0A25  00B6               	movwf	xtoa@d+4
 20224  0A26  0022               	movlb	2	; select bank2
 20225  0A27  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20226  0A28  0020               	movlb	0	; select bank0
 20227  0A29  00B7               	movwf	xtoa@d+5
 20228  0A2A  0022               	movlb	2	; select bank2
 20229  0A2B  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20230  0A2C  0020               	movlb	0	; select bank0
 20231  0A2D  00B8               	movwf	xtoa@d+6
 20232  0A2E  0022               	movlb	2	; select bank2
 20233  0A2F  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20234  0A30  0020               	movlb	0	; select bank0
 20235  0A31  00B9               	movwf	xtoa@d+7
 20236  0A32  3078               	movlw	120
 20237  0A33  0022               	movlb	2	; select bank2
 20238  0A34  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20239  0A35  0820               	movf	??_vfpfcnvrt^(0+256),w
 20240  0A36  0020               	movlb	0	; select bank0
 20241  0A37  00BA               	movwf	xtoa@x
 20242  0A38  319E  26A7         	fcall	_xtoa
 20243  0A3A  0020               	movlb	0	; select bank0
 20244  0A3B  0831               	movf	?_xtoa+1,w
 20245  0A3C  0021               	movlb	1	; select bank1
 20246  0A3D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20247  0A3E  0020               	movlb	0	; select bank0
 20248  0A3F  0830               	movf	?_xtoa,w
 20249  0A40  0021               	movlb	1	; select bank1
 20250  0A41  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20251  0A42  0008               	return
 20252  0A43                     l7783:	
 20253                           
 20254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 20255  0A43  0021               	movlb	1	; select bank1
 20256  0A44  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20257  0A45  0086               	movwf	6
 20258  0A46  0187               	clrf	7
 20259  0A47  3F40               	moviw [0]fsr1
 20260  0A48  0022               	movlb	2	; select bank2
 20261  0A49  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20262  0A4A  3F41               	moviw [1]fsr1
 20263  0A4B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20264  0A4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 20265  0A4D  0084               	movwf	4
 20266  0A4E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20267  0A4F  0085               	movwf	5
 20268  0A50  0012               	moviw fsr0++
 20269  0A51  3A73               	xorlw	115
 20270  0A52  1D03               	btfss	3,2
 20271  0A53  2A84               	goto	l7793
 20272                           
 20273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 20274  0A54  0021               	movlb	1	; select bank1
 20275  0A55  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20276  0A56  0086               	movwf	6
 20277  0A57  0187               	clrf	7
 20278  0A58  3001               	movlw	1
 20279  0A59  0781               	addwf	1,f
 20280  0A5A  3141               	addfsr 1,1
 20281  0A5B  1803               	skipnc
 20282  0A5C  0A81               	incf	1,f
 20283                           
 20284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 20285  0A5D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20286  0A5E  0086               	movwf	6
 20287  0A5F  3001               	movlw	1	; select bank2/3
 20288  0A60  0087               	movwf	7
 20289  0A61  3F40               	moviw [0]fsr1
 20290  0A62  0084               	movwf	4
 20291  0A63  3001               	movlw	1	; select bank2/3
 20292  0A64  0085               	movwf	5
 20293  0A65  0A81               	incf	1,f
 20294  0A66  0800               	movf	0,w
 20295  0A67  0022               	movlb	2	; select bank2
 20296  0A68  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20297  0A69  0820               	movf	??_vfpfcnvrt^(0+256),w
 20298  0A6A  00AC               	movwf	vfpfcnvrt@cp^(0+256)
 20299                           
 20300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 20301  0A6B  0021               	movlb	1	; select bank1
 20302  0A6C  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20303  0A6D  0020               	movlb	0	; select bank0
 20304  0A6E  00A1               	movwf	stoa@fp+1
 20305  0A6F  0021               	movlb	1	; select bank1
 20306  0A70  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20307  0A71  0020               	movlb	0	; select bank0
 20308  0A72  00A0               	movwf	stoa@fp
 20309  0A73  0022               	movlb	2	; select bank2
 20310  0A74  082C               	movf	vfpfcnvrt@cp^(0+256),w
 20311  0A75  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20312  0A76  0820               	movf	??_vfpfcnvrt^(0+256),w
 20313  0A77  0020               	movlb	0	; select bank0
 20314  0A78  00A2               	movwf	stoa@s
 20315  0A79  31A2  22FF         	fcall	_stoa
 20316  0A7B  0020               	movlb	0	; select bank0
 20317  0A7C  0821               	movf	?_stoa+1,w
 20318  0A7D  0021               	movlb	1	; select bank1
 20319  0A7E  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20320  0A7F  0020               	movlb	0	; select bank0
 20321  0A80  0820               	movf	?_stoa,w
 20322  0A81  0021               	movlb	1	; select bank1
 20323  0A82  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20324  0A83  0008               	return
 20325  0A84                     l7793:	
 20326                           
 20327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 20328  0A84  0021               	movlb	1	; select bank1
 20329  0A85  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20330  0A86  0086               	movwf	6
 20331  0A87  0187               	clrf	7
 20332  0A88  3F40               	moviw [0]fsr1
 20333  0A89  00F1               	movwf	strncmp@_l
 20334  0A8A  3F41               	moviw [1]fsr1
 20335  0A8B  00F2               	movwf	strncmp@_l+1
 20336  0A8C  305C               	movlw	low (STR_99| (0+32768))
 20337  0A8D  00F3               	movwf	strncmp@_r
 20338  0A8E  30B8               	movlw	high (STR_99| (0+32768))
 20339  0A8F  00F4               	movwf	strncmp@_r+1
 20340  0A90  3003               	movlw	3
 20341  0A91  00F5               	movwf	strncmp@n
 20342  0A92  3000               	movlw	0
 20343  0A93  00F6               	movwf	strncmp@n+1
 20344  0A94  31A0  200C  3188   	fcall	_strncmp
 20345  0A97  0871               	movf	?_strncmp,w
 20346  0A98  0472               	iorwf	?_strncmp+1,w
 20347  0A99  1D03               	btfss	3,2
 20348  0A9A  2AEB               	goto	l7803
 20349                           
 20350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 20351  0A9B  0021               	movlb	1	; select bank1
 20352  0A9C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20353  0A9D  0086               	movwf	6
 20354  0A9E  0187               	clrf	7
 20355  0A9F  3003               	movlw	3
 20356  0AA0  0781               	addwf	1,f
 20357  0AA1  3141               	addfsr 1,1
 20358  0AA2  1803               	skipnc
 20359  0AA3  0A81               	incf	1,f
 20360                           
 20361                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20362  0AA4  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20363  0AA5  0086               	movwf	6
 20364  0AA6  3001               	movlw	1	; select bank2/3
 20365  0AA7  0087               	movwf	7
 20366  0AA8  0801               	movf	1,w
 20367  0AA9  0084               	movwf	4
 20368  0AAA  3001               	movlw	1	; select bank2/3
 20369  0AAB  0085               	movwf	5
 20370  0AAC  3002               	movlw	2
 20371  0AAD  0781               	addwf	1,f
 20372  0AAE  0800               	movf	0,w
 20373  0AAF  0022               	movlb	2	; select bank2
 20374  0AB0  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20375  0AB1  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 20376  0AB2  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20377  0AB3  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20378  0AB4  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20379  0AB5  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20380  0AB6  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20381  0AB7  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20382                           
 20383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 20384  0AB8  0021               	movlb	1	; select bank1
 20385  0AB9  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20386  0ABA  0020               	movlb	0	; select bank0
 20387  0ABB  00B1               	movwf	utoa@fp+1
 20388  0ABC  0021               	movlb	1	; select bank1
 20389  0ABD  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20390  0ABE  0020               	movlb	0	; select bank0
 20391  0ABF  00B0               	movwf	utoa@fp
 20392  0AC0  0022               	movlb	2	; select bank2
 20393  0AC1  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20394  0AC2  0020               	movlb	0	; select bank0
 20395  0AC3  00B2               	movwf	utoa@d
 20396  0AC4  0022               	movlb	2	; select bank2
 20397  0AC5  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20398  0AC6  0020               	movlb	0	; select bank0
 20399  0AC7  00B3               	movwf	utoa@d+1
 20400  0AC8  0022               	movlb	2	; select bank2
 20401  0AC9  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20402  0ACA  0020               	movlb	0	; select bank0
 20403  0ACB  00B4               	movwf	utoa@d+2
 20404  0ACC  0022               	movlb	2	; select bank2
 20405  0ACD  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20406  0ACE  0020               	movlb	0	; select bank0
 20407  0ACF  00B5               	movwf	utoa@d+3
 20408  0AD0  0022               	movlb	2	; select bank2
 20409  0AD1  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20410  0AD2  0020               	movlb	0	; select bank0
 20411  0AD3  00B6               	movwf	utoa@d+4
 20412  0AD4  0022               	movlb	2	; select bank2
 20413  0AD5  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20414  0AD6  0020               	movlb	0	; select bank0
 20415  0AD7  00B7               	movwf	utoa@d+5
 20416  0AD8  0022               	movlb	2	; select bank2
 20417  0AD9  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20418  0ADA  0020               	movlb	0	; select bank0
 20419  0ADB  00B8               	movwf	utoa@d+6
 20420  0ADC  0022               	movlb	2	; select bank2
 20421  0ADD  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20422  0ADE  0020               	movlb	0	; select bank0
 20423  0ADF  00B9               	movwf	utoa@d+7
 20424  0AE0  31A7  271F         	fcall	_utoa
 20425  0AE2  0020               	movlb	0	; select bank0
 20426  0AE3  0831               	movf	?_utoa+1,w
 20427  0AE4  0021               	movlb	1	; select bank1
 20428  0AE5  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20429  0AE6  0020               	movlb	0	; select bank0
 20430  0AE7  0830               	movf	?_utoa,w
 20431  0AE8  0021               	movlb	1	; select bank1
 20432  0AE9  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20433  0AEA  0008               	return
 20434  0AEB                     l7803:	
 20435                           
 20436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 20437  0AEB  0021               	movlb	1	; select bank1
 20438  0AEC  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20439  0AED  0086               	movwf	6
 20440  0AEE  0187               	clrf	7
 20441  0AEF  3F40               	moviw [0]fsr1
 20442  0AF0  00F1               	movwf	strncmp@_l
 20443  0AF1  3F41               	moviw [1]fsr1
 20444  0AF2  00F2               	movwf	strncmp@_l+1
 20445  0AF3  305D               	movlw	low ((STR_99+1)| (0+32768))
 20446  0AF4  00F3               	movwf	strncmp@_r
 20447  0AF5  30B8               	movlw	high ((STR_99+1)| (0+32768))
 20448  0AF6  00F4               	movwf	strncmp@_r+1
 20449  0AF7  3002               	movlw	2
 20450  0AF8  00F5               	movwf	strncmp@n
 20451  0AF9  3000               	movlw	0
 20452  0AFA  00F6               	movwf	strncmp@n+1
 20453  0AFB  31A0  200C  3188   	fcall	_strncmp
 20454  0AFE  0871               	movf	?_strncmp,w
 20455  0AFF  0472               	iorwf	?_strncmp+1,w
 20456  0B00  1D03               	btfss	3,2
 20457  0B01  2B53               	goto	l7813
 20458                           
 20459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 20460  0B02  0021               	movlb	1	; select bank1
 20461  0B03  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20462  0B04  0086               	movwf	6
 20463  0B05  0187               	clrf	7
 20464  0B06  3002               	movlw	2
 20465  0B07  0781               	addwf	1,f
 20466  0B08  3141               	addfsr 1,1
 20467  0B09  1803               	skipnc
 20468  0B0A  0A81               	incf	1,f
 20469                           
 20470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 20471  0B0B  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20472  0B0C  0086               	movwf	6
 20473  0B0D  3001               	movlw	1	; select bank2/3
 20474  0B0E  0087               	movwf	7
 20475  0B0F  0801               	movf	1,w
 20476  0B10  0084               	movwf	4
 20477  0B11  3001               	movlw	1	; select bank2/3
 20478  0B12  0085               	movwf	5
 20479  0B13  3002               	movlw	2
 20480  0B14  0781               	addwf	1,f
 20481  0B15  3F00               	moviw [0]fsr0
 20482  0B16  0022               	movlb	2	; select bank2
 20483  0B17  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20484  0B18  3F01               	moviw [1]fsr0
 20485  0B19  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20486  0B1A  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20487  0B1B  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20488  0B1C  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20489  0B1D  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20490  0B1E  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20491  0B1F  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20492                           
 20493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 20494  0B20  0021               	movlb	1	; select bank1
 20495  0B21  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20496  0B22  0020               	movlb	0	; select bank0
 20497  0B23  00B1               	movwf	utoa@fp+1
 20498  0B24  0021               	movlb	1	; select bank1
 20499  0B25  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20500  0B26  0020               	movlb	0	; select bank0
 20501  0B27  00B0               	movwf	utoa@fp
 20502  0B28  0022               	movlb	2	; select bank2
 20503  0B29  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20504  0B2A  0020               	movlb	0	; select bank0
 20505  0B2B  00B2               	movwf	utoa@d
 20506  0B2C  0022               	movlb	2	; select bank2
 20507  0B2D  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20508  0B2E  0020               	movlb	0	; select bank0
 20509  0B2F  00B3               	movwf	utoa@d+1
 20510  0B30  0022               	movlb	2	; select bank2
 20511  0B31  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20512  0B32  0020               	movlb	0	; select bank0
 20513  0B33  00B4               	movwf	utoa@d+2
 20514  0B34  0022               	movlb	2	; select bank2
 20515  0B35  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20516  0B36  0020               	movlb	0	; select bank0
 20517  0B37  00B5               	movwf	utoa@d+3
 20518  0B38  0022               	movlb	2	; select bank2
 20519  0B39  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20520  0B3A  0020               	movlb	0	; select bank0
 20521  0B3B  00B6               	movwf	utoa@d+4
 20522  0B3C  0022               	movlb	2	; select bank2
 20523  0B3D  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20524  0B3E  0020               	movlb	0	; select bank0
 20525  0B3F  00B7               	movwf	utoa@d+5
 20526  0B40  0022               	movlb	2	; select bank2
 20527  0B41  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20528  0B42  0020               	movlb	0	; select bank0
 20529  0B43  00B8               	movwf	utoa@d+6
 20530  0B44  0022               	movlb	2	; select bank2
 20531  0B45  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20532  0B46  0020               	movlb	0	; select bank0
 20533  0B47  00B9               	movwf	utoa@d+7
 20534  0B48  31A7  271F         	fcall	_utoa
 20535  0B4A  0020               	movlb	0	; select bank0
 20536  0B4B  0831               	movf	?_utoa+1,w
 20537  0B4C  0021               	movlb	1	; select bank1
 20538  0B4D  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20539  0B4E  0020               	movlb	0	; select bank0
 20540  0B4F  0830               	movf	?_utoa,w
 20541  0B50  0021               	movlb	1	; select bank1
 20542  0B51  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20543  0B52  0008               	return
 20544  0B53                     l7813:	
 20545                           
 20546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 20547  0B53  0021               	movlb	1	; select bank1
 20548  0B54  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20549  0B55  0086               	movwf	6
 20550  0B56  0187               	clrf	7
 20551  0B57  3F40               	moviw [0]fsr1
 20552  0B58  0022               	movlb	2	; select bank2
 20553  0B59  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20554  0B5A  3F41               	moviw [1]fsr1
 20555  0B5B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20556  0B5C  0820               	movf	??_vfpfcnvrt^(0+256),w
 20557  0B5D  0084               	movwf	4
 20558  0B5E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20559  0B5F  0085               	movwf	5
 20560  0B60  0012               	moviw fsr0++
 20561  0B61  3A75               	xorlw	117
 20562  0B62  1D03               	btfss	3,2
 20563  0B63  2BB5               	goto	l7823
 20564                           
 20565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 20566  0B64  0021               	movlb	1	; select bank1
 20567  0B65  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20568  0B66  0086               	movwf	6
 20569  0B67  0187               	clrf	7
 20570  0B68  3001               	movlw	1
 20571  0B69  0781               	addwf	1,f
 20572  0B6A  3141               	addfsr 1,1
 20573  0B6B  1803               	skipnc
 20574  0B6C  0A81               	incf	1,f
 20575                           
 20576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 20577  0B6D  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20578  0B6E  0086               	movwf	6
 20579  0B6F  3001               	movlw	1	; select bank2/3
 20580  0B70  0087               	movwf	7
 20581  0B71  0801               	movf	1,w
 20582  0B72  0084               	movwf	4
 20583  0B73  3001               	movlw	1	; select bank2/3
 20584  0B74  0085               	movwf	5
 20585  0B75  3002               	movlw	2
 20586  0B76  0781               	addwf	1,f
 20587  0B77  3F00               	moviw [0]fsr0
 20588  0B78  0022               	movlb	2	; select bank2
 20589  0B79  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20590  0B7A  3F01               	moviw [1]fsr0
 20591  0B7B  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20592  0B7C  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20593  0B7D  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20594  0B7E  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20595  0B7F  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20596  0B80  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20597  0B81  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20598                           
 20599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 20600  0B82  0021               	movlb	1	; select bank1
 20601  0B83  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20602  0B84  0020               	movlb	0	; select bank0
 20603  0B85  00B1               	movwf	utoa@fp+1
 20604  0B86  0021               	movlb	1	; select bank1
 20605  0B87  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20606  0B88  0020               	movlb	0	; select bank0
 20607  0B89  00B0               	movwf	utoa@fp
 20608  0B8A  0022               	movlb	2	; select bank2
 20609  0B8B  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20610  0B8C  0020               	movlb	0	; select bank0
 20611  0B8D  00B2               	movwf	utoa@d
 20612  0B8E  0022               	movlb	2	; select bank2
 20613  0B8F  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20614  0B90  0020               	movlb	0	; select bank0
 20615  0B91  00B3               	movwf	utoa@d+1
 20616  0B92  0022               	movlb	2	; select bank2
 20617  0B93  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20618  0B94  0020               	movlb	0	; select bank0
 20619  0B95  00B4               	movwf	utoa@d+2
 20620  0B96  0022               	movlb	2	; select bank2
 20621  0B97  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20622  0B98  0020               	movlb	0	; select bank0
 20623  0B99  00B5               	movwf	utoa@d+3
 20624  0B9A  0022               	movlb	2	; select bank2
 20625  0B9B  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20626  0B9C  0020               	movlb	0	; select bank0
 20627  0B9D  00B6               	movwf	utoa@d+4
 20628  0B9E  0022               	movlb	2	; select bank2
 20629  0B9F  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20630  0BA0  0020               	movlb	0	; select bank0
 20631  0BA1  00B7               	movwf	utoa@d+5
 20632  0BA2  0022               	movlb	2	; select bank2
 20633  0BA3  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20634  0BA4  0020               	movlb	0	; select bank0
 20635  0BA5  00B8               	movwf	utoa@d+6
 20636  0BA6  0022               	movlb	2	; select bank2
 20637  0BA7  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20638  0BA8  0020               	movlb	0	; select bank0
 20639  0BA9  00B9               	movwf	utoa@d+7
 20640  0BAA  31A7  271F         	fcall	_utoa
 20641  0BAC  0020               	movlb	0	; select bank0
 20642  0BAD  0831               	movf	?_utoa+1,w
 20643  0BAE  0021               	movlb	1	; select bank1
 20644  0BAF  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20645  0BB0  0020               	movlb	0	; select bank0
 20646  0BB1  0830               	movf	?_utoa,w
 20647  0BB2  0021               	movlb	1	; select bank1
 20648  0BB3  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20649  0BB4  0008               	return
 20650  0BB5                     l7823:	
 20651                           
 20652                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 20653  0BB5  0021               	movlb	1	; select bank1
 20654  0BB6  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20655  0BB7  0086               	movwf	6
 20656  0BB8  0187               	clrf	7
 20657  0BB9  3F40               	moviw [0]fsr1
 20658  0BBA  00F1               	movwf	strncmp@_l
 20659  0BBB  3F41               	moviw [1]fsr1
 20660  0BBC  00F2               	movwf	strncmp@_l+1
 20661  0BBD  3085               	movlw	low (STR_109| (0+32768))
 20662  0BBE  00F3               	movwf	strncmp@_r
 20663  0BBF  30B8               	movlw	high (STR_109| (0+32768))
 20664  0BC0  00F4               	movwf	strncmp@_r+1
 20665  0BC1  3002               	movlw	2
 20666  0BC2  00F5               	movwf	strncmp@n
 20667  0BC3  3000               	movlw	0
 20668  0BC4  00F6               	movwf	strncmp@n+1
 20669  0BC5  31A0  200C  3188   	fcall	_strncmp
 20670  0BC8  0871               	movf	?_strncmp,w
 20671  0BC9  0472               	iorwf	?_strncmp+1,w
 20672  0BCA  1D03               	btfss	3,2
 20673  0BCB  2C37               	goto	l7833
 20674                           
 20675                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 20676  0BCC  0021               	movlb	1	; select bank1
 20677  0BCD  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20678  0BCE  0086               	movwf	6
 20679  0BCF  0187               	clrf	7
 20680  0BD0  3002               	movlw	2
 20681  0BD1  0781               	addwf	1,f
 20682  0BD2  3141               	addfsr 1,1
 20683  0BD3  1803               	skipnc
 20684  0BD4  0A81               	incf	1,f
 20685                           
 20686                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 20687  0BD5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20688  0BD6  0086               	movwf	6
 20689  0BD7  3001               	movlw	1	; select bank2/3
 20690  0BD8  0087               	movwf	7
 20691  0BD9  0801               	movf	1,w
 20692  0BDA  0084               	movwf	4
 20693  0BDB  3001               	movlw	1	; select bank2/3
 20694  0BDC  0085               	movwf	5
 20695  0BDD  3004               	movlw	4
 20696  0BDE  0781               	addwf	1,f
 20697  0BDF  3F00               	moviw [0]fsr0
 20698  0BE0  0022               	movlb	2	; select bank2
 20699  0BE1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20700  0BE2  3F01               	moviw [1]fsr0
 20701  0BE3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20702  0BE4  3F02               	moviw [2]fsr0
 20703  0BE5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 20704  0BE6  3F03               	moviw [3]fsr0
 20705  0BE7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 20706  0BE8  0820               	movf	??_vfpfcnvrt^(0+256),w
 20707  0BE9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 20708  0BEA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 20709  0BEB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 20710  0BEC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20711  0BED  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 20712  0BEE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 20713  0BEF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 20714  0BF0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 20715  0BF1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 20716  0BF2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 20717  0BF3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 20718  0BF4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 20719  0BF5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 20720  0BF6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 20721  0BF7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 20722  0BF8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 20723  0BF9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 20724  0BFA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 20725  0BFB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 20726  0BFC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 20727  0BFD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 20728  0BFE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 20729  0BFF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 20730  0C00  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 20731  0C01  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20732  0C02  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 20733  0C03  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20734                           
 20735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 20736  0C04  0021               	movlb	1	; select bank1
 20737  0C05  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20738  0C06  0020               	movlb	0	; select bank0
 20739  0C07  00B1               	movwf	utoa@fp+1
 20740  0C08  0021               	movlb	1	; select bank1
 20741  0C09  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20742  0C0A  0020               	movlb	0	; select bank0
 20743  0C0B  00B0               	movwf	utoa@fp
 20744  0C0C  0022               	movlb	2	; select bank2
 20745  0C0D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20746  0C0E  0020               	movlb	0	; select bank0
 20747  0C0F  00B2               	movwf	utoa@d
 20748  0C10  0022               	movlb	2	; select bank2
 20749  0C11  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20750  0C12  0020               	movlb	0	; select bank0
 20751  0C13  00B3               	movwf	utoa@d+1
 20752  0C14  0022               	movlb	2	; select bank2
 20753  0C15  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20754  0C16  0020               	movlb	0	; select bank0
 20755  0C17  00B4               	movwf	utoa@d+2
 20756  0C18  0022               	movlb	2	; select bank2
 20757  0C19  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20758  0C1A  0020               	movlb	0	; select bank0
 20759  0C1B  00B5               	movwf	utoa@d+3
 20760  0C1C  0022               	movlb	2	; select bank2
 20761  0C1D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20762  0C1E  0020               	movlb	0	; select bank0
 20763  0C1F  00B6               	movwf	utoa@d+4
 20764  0C20  0022               	movlb	2	; select bank2
 20765  0C21  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20766  0C22  0020               	movlb	0	; select bank0
 20767  0C23  00B7               	movwf	utoa@d+5
 20768  0C24  0022               	movlb	2	; select bank2
 20769  0C25  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20770  0C26  0020               	movlb	0	; select bank0
 20771  0C27  00B8               	movwf	utoa@d+6
 20772  0C28  0022               	movlb	2	; select bank2
 20773  0C29  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20774  0C2A  0020               	movlb	0	; select bank0
 20775  0C2B  00B9               	movwf	utoa@d+7
 20776  0C2C  31A7  271F         	fcall	_utoa
 20777  0C2E  0020               	movlb	0	; select bank0
 20778  0C2F  0831               	movf	?_utoa+1,w
 20779  0C30  0021               	movlb	1	; select bank1
 20780  0C31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20781  0C32  0020               	movlb	0	; select bank0
 20782  0C33  0830               	movf	?_utoa,w
 20783  0C34  0021               	movlb	1	; select bank1
 20784  0C35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20785  0C36  0008               	return
 20786  0C37                     l7833:	
 20787                           
 20788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 20789  0C37  0021               	movlb	1	; select bank1
 20790  0C38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20791  0C39  0086               	movwf	6
 20792  0C3A  0187               	clrf	7
 20793  0C3B  3F40               	moviw [0]fsr1
 20794  0C3C  00F1               	movwf	strncmp@_l
 20795  0C3D  3F41               	moviw [1]fsr1
 20796  0C3E  00F2               	movwf	strncmp@_l+1
 20797  0C3F  3088               	movlw	low (STR_114| (0+32768))
 20798  0C40  00F3               	movwf	strncmp@_r
 20799  0C41  30B8               	movlw	high (STR_114| (0+32768))
 20800  0C42  00F4               	movwf	strncmp@_r+1
 20801  0C43  3002               	movlw	2
 20802  0C44  00F5               	movwf	strncmp@n
 20803  0C45  3000               	movlw	0
 20804  0C46  00F6               	movwf	strncmp@n+1
 20805  0C47  31A0  200C  3188   	fcall	_strncmp
 20806  0C4A  0871               	movf	?_strncmp,w
 20807  0C4B  0472               	iorwf	?_strncmp+1,w
 20808  0C4C  1D03               	btfss	3,2
 20809  0C4D  2C9F               	goto	l7843
 20810                           
 20811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 20812  0C4E  0021               	movlb	1	; select bank1
 20813  0C4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20814  0C50  0086               	movwf	6
 20815  0C51  0187               	clrf	7
 20816  0C52  3002               	movlw	2
 20817  0C53  0781               	addwf	1,f
 20818  0C54  3141               	addfsr 1,1
 20819  0C55  1803               	skipnc
 20820  0C56  0A81               	incf	1,f
 20821                           
 20822                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20823  0C57  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20824  0C58  0086               	movwf	6
 20825  0C59  3001               	movlw	1	; select bank2/3
 20826  0C5A  0087               	movwf	7
 20827  0C5B  0801               	movf	1,w
 20828  0C5C  0084               	movwf	4
 20829  0C5D  3001               	movlw	1	; select bank2/3
 20830  0C5E  0085               	movwf	5
 20831  0C5F  3002               	movlw	2
 20832  0C60  0781               	addwf	1,f
 20833  0C61  3F00               	moviw [0]fsr0
 20834  0C62  0022               	movlb	2	; select bank2
 20835  0C63  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20836  0C64  3F01               	moviw [1]fsr0
 20837  0C65  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 20838  0C66  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20839  0C67  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20840  0C68  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20841  0C69  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20842  0C6A  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20843  0C6B  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20844                           
 20845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 20846  0C6C  0021               	movlb	1	; select bank1
 20847  0C6D  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 20848  0C6E  0020               	movlb	0	; select bank0
 20849  0C6F  00B1               	movwf	utoa@fp+1
 20850  0C70  0021               	movlb	1	; select bank1
 20851  0C71  0863               	movf	vfpfcnvrt@fp^(0+128),w
 20852  0C72  0020               	movlb	0	; select bank0
 20853  0C73  00B0               	movwf	utoa@fp
 20854  0C74  0022               	movlb	2	; select bank2
 20855  0C75  0846               	movf	vfpfcnvrt@llu^(0+256),w
 20856  0C76  0020               	movlb	0	; select bank0
 20857  0C77  00B2               	movwf	utoa@d
 20858  0C78  0022               	movlb	2	; select bank2
 20859  0C79  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 20860  0C7A  0020               	movlb	0	; select bank0
 20861  0C7B  00B3               	movwf	utoa@d+1
 20862  0C7C  0022               	movlb	2	; select bank2
 20863  0C7D  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 20864  0C7E  0020               	movlb	0	; select bank0
 20865  0C7F  00B4               	movwf	utoa@d+2
 20866  0C80  0022               	movlb	2	; select bank2
 20867  0C81  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 20868  0C82  0020               	movlb	0	; select bank0
 20869  0C83  00B5               	movwf	utoa@d+3
 20870  0C84  0022               	movlb	2	; select bank2
 20871  0C85  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 20872  0C86  0020               	movlb	0	; select bank0
 20873  0C87  00B6               	movwf	utoa@d+4
 20874  0C88  0022               	movlb	2	; select bank2
 20875  0C89  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 20876  0C8A  0020               	movlb	0	; select bank0
 20877  0C8B  00B7               	movwf	utoa@d+5
 20878  0C8C  0022               	movlb	2	; select bank2
 20879  0C8D  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 20880  0C8E  0020               	movlb	0	; select bank0
 20881  0C8F  00B8               	movwf	utoa@d+6
 20882  0C90  0022               	movlb	2	; select bank2
 20883  0C91  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 20884  0C92  0020               	movlb	0	; select bank0
 20885  0C93  00B9               	movwf	utoa@d+7
 20886  0C94  31A7  271F         	fcall	_utoa
 20887  0C96  0020               	movlb	0	; select bank0
 20888  0C97  0831               	movf	?_utoa+1,w
 20889  0C98  0021               	movlb	1	; select bank1
 20890  0C99  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 20891  0C9A  0020               	movlb	0	; select bank0
 20892  0C9B  0830               	movf	?_utoa,w
 20893  0C9C  0021               	movlb	1	; select bank1
 20894  0C9D  00E3               	movwf	?_vfpfcnvrt^(0+128)
 20895  0C9E  0008               	return
 20896  0C9F                     l7843:	
 20897                           
 20898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 20899  0C9F  0021               	movlb	1	; select bank1
 20900  0CA0  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20901  0CA1  0086               	movwf	6
 20902  0CA2  0187               	clrf	7
 20903  0CA3  3F40               	moviw [0]fsr1
 20904  0CA4  00F1               	movwf	strncmp@_l
 20905  0CA5  3F41               	moviw [1]fsr1
 20906  0CA6  00F2               	movwf	strncmp@_l+1
 20907  0CA7  3060               	movlw	low (STR_119| (0+32768))
 20908  0CA8  00F3               	movwf	strncmp@_r
 20909  0CA9  30B8               	movlw	high (STR_119| (0+32768))
 20910  0CAA  00F4               	movwf	strncmp@_r+1
 20911  0CAB  3003               	movlw	3
 20912  0CAC  00F5               	movwf	strncmp@n
 20913  0CAD  3000               	movlw	0
 20914  0CAE  00F6               	movwf	strncmp@n+1
 20915  0CAF  31A0  200C  3188   	fcall	_strncmp
 20916  0CB2  0871               	movf	?_strncmp,w
 20917  0CB3  0472               	iorwf	?_strncmp+1,w
 20918  0CB4  1903               	btfsc	3,2
 20919  0CB5  2CCD               	goto	l7847
 20920  0CB6  0021               	movlb	1	; select bank1
 20921  0CB7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20922  0CB8  0086               	movwf	6
 20923  0CB9  0187               	clrf	7
 20924  0CBA  3F40               	moviw [0]fsr1
 20925  0CBB  00F1               	movwf	strncmp@_l
 20926  0CBC  3F41               	moviw [1]fsr1
 20927  0CBD  00F2               	movwf	strncmp@_l+1
 20928  0CBE  3040               	movlw	low (STR_123| (0+32768))
 20929  0CBF  00F3               	movwf	strncmp@_r
 20930  0CC0  30B8               	movlw	high (STR_123| (0+32768))
 20931  0CC1  00F4               	movwf	strncmp@_r+1
 20932  0CC2  3003               	movlw	3
 20933  0CC3  00F5               	movwf	strncmp@n
 20934  0CC4  3000               	movlw	0
 20935  0CC5  00F6               	movwf	strncmp@n+1
 20936  0CC6  31A0  200C  3188   	fcall	_strncmp
 20937  0CC9  0871               	movf	?_strncmp,w
 20938  0CCA  0472               	iorwf	?_strncmp+1,w
 20939  0CCB  1D03               	btfss	3,2
 20940  0CCC  2D37               	goto	l7857
 20941  0CCD                     l7847:	
 20942                           
 20943                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 20944  0CCD  0021               	movlb	1	; select bank1
 20945  0CCE  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20946  0CCF  0086               	movwf	6
 20947  0CD0  0187               	clrf	7
 20948  0CD1  3F40               	moviw [0]fsr1
 20949  0CD2  0022               	movlb	2	; select bank2
 20950  0CD3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 20951  0CD4  3F41               	moviw [1]fsr1
 20952  0CD5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 20953  0CD6  3002               	movlw	2
 20954  0CD7  0720               	addwf	??_vfpfcnvrt^(0+256),w
 20955  0CD8  0084               	movwf	4
 20956  0CD9  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 20957  0CDA  1803               	skipnc
 20958  0CDB  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 20959  0CDC  0085               	movwf	5
 20960  0CDD  0800               	movf	0,w	;code access
 20961  0CDE  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 20962  0CDF  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 20963  0CE0  00C5               	movwf	vfpfcnvrt@c^(0+256)
 20964                           
 20965                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 20966  0CE1  0021               	movlb	1	; select bank1
 20967  0CE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 20968  0CE3  0086               	movwf	6
 20969  0CE4  0187               	clrf	7
 20970  0CE5  3003               	movlw	3
 20971  0CE6  0781               	addwf	1,f
 20972  0CE7  3141               	addfsr 1,1
 20973  0CE8  1803               	skipnc
 20974  0CE9  0A81               	incf	1,f
 20975                           
 20976                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20977  0CEA  0866               	movf	vfpfcnvrt@ap^(0+128),w
 20978  0CEB  0086               	movwf	6
 20979  0CEC  3001               	movlw	1	; select bank2/3
 20980  0CED  0087               	movwf	7
 20981  0CEE  0801               	movf	1,w
 20982  0CEF  0084               	movwf	4
 20983  0CF0  3001               	movlw	1	; select bank2/3
 20984  0CF1  0085               	movwf	5
 20985  0CF2  3002               	movlw	2
 20986  0CF3  0781               	addwf	1,f
 20987  0CF4  0800               	movf	0,w
 20988  0CF5  0022               	movlb	2	; select bank2
 20989  0CF6  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 20990  0CF7  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 20991  0CF8  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 20992  0CF9  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 20993  0CFA  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 20994  0CFB  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 20995  0CFC  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 20996  0CFD  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 20997                           
 20998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 20999  0CFE  0021               	movlb	1	; select bank1
 21000  0CFF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21001  0D00  0020               	movlb	0	; select bank0
 21002  0D01  00B1               	movwf	xtoa@fp+1
 21003  0D02  0021               	movlb	1	; select bank1
 21004  0D03  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21005  0D04  0020               	movlb	0	; select bank0
 21006  0D05  00B0               	movwf	xtoa@fp
 21007  0D06  0022               	movlb	2	; select bank2
 21008  0D07  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21009  0D08  0020               	movlb	0	; select bank0
 21010  0D09  00B2               	movwf	xtoa@d
 21011  0D0A  0022               	movlb	2	; select bank2
 21012  0D0B  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21013  0D0C  0020               	movlb	0	; select bank0
 21014  0D0D  00B3               	movwf	xtoa@d+1
 21015  0D0E  0022               	movlb	2	; select bank2
 21016  0D0F  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21017  0D10  0020               	movlb	0	; select bank0
 21018  0D11  00B4               	movwf	xtoa@d+2
 21019  0D12  0022               	movlb	2	; select bank2
 21020  0D13  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21021  0D14  0020               	movlb	0	; select bank0
 21022  0D15  00B5               	movwf	xtoa@d+3
 21023  0D16  0022               	movlb	2	; select bank2
 21024  0D17  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21025  0D18  0020               	movlb	0	; select bank0
 21026  0D19  00B6               	movwf	xtoa@d+4
 21027  0D1A  0022               	movlb	2	; select bank2
 21028  0D1B  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21029  0D1C  0020               	movlb	0	; select bank0
 21030  0D1D  00B7               	movwf	xtoa@d+5
 21031  0D1E  0022               	movlb	2	; select bank2
 21032  0D1F  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21033  0D20  0020               	movlb	0	; select bank0
 21034  0D21  00B8               	movwf	xtoa@d+6
 21035  0D22  0022               	movlb	2	; select bank2
 21036  0D23  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21037  0D24  0020               	movlb	0	; select bank0
 21038  0D25  00B9               	movwf	xtoa@d+7
 21039  0D26  0022               	movlb	2	; select bank2
 21040  0D27  0845               	movf	vfpfcnvrt@c^(0+256),w
 21041  0D28  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21042  0D29  0820               	movf	??_vfpfcnvrt^(0+256),w
 21043  0D2A  0020               	movlb	0	; select bank0
 21044  0D2B  00BA               	movwf	xtoa@x
 21045  0D2C  319E  26A7         	fcall	_xtoa
 21046  0D2E  0020               	movlb	0	; select bank0
 21047  0D2F  0831               	movf	?_xtoa+1,w
 21048  0D30  0021               	movlb	1	; select bank1
 21049  0D31  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21050  0D32  0020               	movlb	0	; select bank0
 21051  0D33  0830               	movf	?_xtoa,w
 21052  0D34  0021               	movlb	1	; select bank1
 21053  0D35  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21054  0D36  0008               	return
 21055  0D37                     l7857:	
 21056                           
 21057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 21058  0D37  0021               	movlb	1	; select bank1
 21059  0D38  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21060  0D39  0086               	movwf	6
 21061  0D3A  0187               	clrf	7
 21062  0D3B  3F40               	moviw [0]fsr1
 21063  0D3C  00F1               	movwf	strncmp@_l
 21064  0D3D  3F41               	moviw [1]fsr1
 21065  0D3E  00F2               	movwf	strncmp@_l+1
 21066  0D3F  3061               	movlw	low ((STR_119+1)| (0+32768))
 21067  0D40  00F3               	movwf	strncmp@_r
 21068  0D41  30B8               	movlw	high ((STR_119+1)| (0+32768))
 21069  0D42  00F4               	movwf	strncmp@_r+1
 21070  0D43  3002               	movlw	2
 21071  0D44  00F5               	movwf	strncmp@n
 21072  0D45  3000               	movlw	0
 21073  0D46  00F6               	movwf	strncmp@n+1
 21074  0D47  31A0  200C  3188   	fcall	_strncmp
 21075  0D4A  0871               	movf	?_strncmp,w
 21076  0D4B  0472               	iorwf	?_strncmp+1,w
 21077  0D4C  1903               	btfsc	3,2
 21078  0D4D  2D65               	goto	l7861
 21079  0D4E  0021               	movlb	1	; select bank1
 21080  0D4F  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21081  0D50  0086               	movwf	6
 21082  0D51  0187               	clrf	7
 21083  0D52  3F40               	moviw [0]fsr1
 21084  0D53  00F1               	movwf	strncmp@_l
 21085  0D54  3F41               	moviw [1]fsr1
 21086  0D55  00F2               	movwf	strncmp@_l+1
 21087  0D56  3041               	movlw	low ((STR_123+1)| (0+32768))
 21088  0D57  00F3               	movwf	strncmp@_r
 21089  0D58  30B8               	movlw	high ((STR_123+1)| (0+32768))
 21090  0D59  00F4               	movwf	strncmp@_r+1
 21091  0D5A  3002               	movlw	2
 21092  0D5B  00F5               	movwf	strncmp@n
 21093  0D5C  3000               	movlw	0
 21094  0D5D  00F6               	movwf	strncmp@n+1
 21095  0D5E  31A0  200C  3188   	fcall	_strncmp
 21096  0D61  0871               	movf	?_strncmp,w
 21097  0D62  0472               	iorwf	?_strncmp+1,w
 21098  0D63  1D03               	btfss	3,2
 21099  0D64  2DD0               	goto	l7871
 21100  0D65                     l7861:	
 21101                           
 21102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 21103  0D65  0021               	movlb	1	; select bank1
 21104  0D66  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21105  0D67  0086               	movwf	6
 21106  0D68  0187               	clrf	7
 21107  0D69  3F40               	moviw [0]fsr1
 21108  0D6A  0022               	movlb	2	; select bank2
 21109  0D6B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21110  0D6C  3F41               	moviw [1]fsr1
 21111  0D6D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21112  0D6E  3001               	movlw	1
 21113  0D6F  0720               	addwf	??_vfpfcnvrt^(0+256),w
 21114  0D70  0084               	movwf	4
 21115  0D71  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21116  0D72  1803               	skipnc
 21117  0D73  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 21118  0D74  0085               	movwf	5
 21119  0D75  0800               	movf	0,w	;code access
 21120  0D76  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21121  0D77  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21122  0D78  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21123                           
 21124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 21125  0D79  0021               	movlb	1	; select bank1
 21126  0D7A  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21127  0D7B  0086               	movwf	6
 21128  0D7C  0187               	clrf	7
 21129  0D7D  3002               	movlw	2
 21130  0D7E  0781               	addwf	1,f
 21131  0D7F  3141               	addfsr 1,1
 21132  0D80  1803               	skipnc
 21133  0D81  0A81               	incf	1,f
 21134                           
 21135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 21136  0D82  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21137  0D83  0086               	movwf	6
 21138  0D84  3001               	movlw	1	; select bank2/3
 21139  0D85  0087               	movwf	7
 21140  0D86  0801               	movf	1,w
 21141  0D87  0084               	movwf	4
 21142  0D88  3001               	movlw	1	; select bank2/3
 21143  0D89  0085               	movwf	5
 21144  0D8A  3002               	movlw	2
 21145  0D8B  0781               	addwf	1,f
 21146  0D8C  3F00               	moviw [0]fsr0
 21147  0D8D  0022               	movlb	2	; select bank2
 21148  0D8E  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21149  0D8F  3F01               	moviw [1]fsr0
 21150  0D90  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21151  0D91  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21152  0D92  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21153  0D93  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21154  0D94  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21155  0D95  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21156  0D96  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21157                           
 21158                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 21159  0D97  0021               	movlb	1	; select bank1
 21160  0D98  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21161  0D99  0020               	movlb	0	; select bank0
 21162  0D9A  00B1               	movwf	xtoa@fp+1
 21163  0D9B  0021               	movlb	1	; select bank1
 21164  0D9C  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21165  0D9D  0020               	movlb	0	; select bank0
 21166  0D9E  00B0               	movwf	xtoa@fp
 21167  0D9F  0022               	movlb	2	; select bank2
 21168  0DA0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21169  0DA1  0020               	movlb	0	; select bank0
 21170  0DA2  00B2               	movwf	xtoa@d
 21171  0DA3  0022               	movlb	2	; select bank2
 21172  0DA4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21173  0DA5  0020               	movlb	0	; select bank0
 21174  0DA6  00B3               	movwf	xtoa@d+1
 21175  0DA7  0022               	movlb	2	; select bank2
 21176  0DA8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21177  0DA9  0020               	movlb	0	; select bank0
 21178  0DAA  00B4               	movwf	xtoa@d+2
 21179  0DAB  0022               	movlb	2	; select bank2
 21180  0DAC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21181  0DAD  0020               	movlb	0	; select bank0
 21182  0DAE  00B5               	movwf	xtoa@d+3
 21183  0DAF  0022               	movlb	2	; select bank2
 21184  0DB0  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21185  0DB1  0020               	movlb	0	; select bank0
 21186  0DB2  00B6               	movwf	xtoa@d+4
 21187  0DB3  0022               	movlb	2	; select bank2
 21188  0DB4  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21189  0DB5  0020               	movlb	0	; select bank0
 21190  0DB6  00B7               	movwf	xtoa@d+5
 21191  0DB7  0022               	movlb	2	; select bank2
 21192  0DB8  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21193  0DB9  0020               	movlb	0	; select bank0
 21194  0DBA  00B8               	movwf	xtoa@d+6
 21195  0DBB  0022               	movlb	2	; select bank2
 21196  0DBC  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21197  0DBD  0020               	movlb	0	; select bank0
 21198  0DBE  00B9               	movwf	xtoa@d+7
 21199  0DBF  0022               	movlb	2	; select bank2
 21200  0DC0  0845               	movf	vfpfcnvrt@c^(0+256),w
 21201  0DC1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21202  0DC2  0820               	movf	??_vfpfcnvrt^(0+256),w
 21203  0DC3  0020               	movlb	0	; select bank0
 21204  0DC4  00BA               	movwf	xtoa@x
 21205  0DC5  319E  26A7         	fcall	_xtoa
 21206  0DC7  0020               	movlb	0	; select bank0
 21207  0DC8  0831               	movf	?_xtoa+1,w
 21208  0DC9  0021               	movlb	1	; select bank1
 21209  0DCA  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21210  0DCB  0020               	movlb	0	; select bank0
 21211  0DCC  0830               	movf	?_xtoa,w
 21212  0DCD  0021               	movlb	1	; select bank1
 21213  0DCE  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21214  0DCF  0008               	return
 21215  0DD0                     l7871:	
 21216                           
 21217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 21218  0DD0  0021               	movlb	1	; select bank1
 21219  0DD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21220  0DD2  0086               	movwf	6
 21221  0DD3  0187               	clrf	7
 21222  0DD4  3F40               	moviw [0]fsr1
 21223  0DD5  0022               	movlb	2	; select bank2
 21224  0DD6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21225  0DD7  3F41               	moviw [1]fsr1
 21226  0DD8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21227  0DD9  0820               	movf	??_vfpfcnvrt^(0+256),w
 21228  0DDA  0084               	movwf	4
 21229  0DDB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21230  0DDC  0085               	movwf	5
 21231  0DDD  0012               	moviw fsr0++
 21232  0DDE  3A78               	xorlw	120
 21233  0DDF  1903               	btfsc	3,2
 21234  0DE0  2DF2               	goto	l7875
 21235  0DE1  0021               	movlb	1	; select bank1
 21236  0DE2  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21237  0DE3  0086               	movwf	6
 21238  0DE4  0187               	clrf	7
 21239  0DE5  3F40               	moviw [0]fsr1
 21240  0DE6  0022               	movlb	2	; select bank2
 21241  0DE7  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21242  0DE8  3F41               	moviw [1]fsr1
 21243  0DE9  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21244  0DEA  0820               	movf	??_vfpfcnvrt^(0+256),w
 21245  0DEB  0084               	movwf	4
 21246  0DEC  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21247  0DED  0085               	movwf	5
 21248  0DEE  0012               	moviw fsr0++
 21249  0DEF  3A58               	xorlw	88
 21250  0DF0  1D03               	btfss	3,2
 21251  0DF1  2E5A               	goto	l7885
 21252  0DF2                     l7875:	
 21253                           
 21254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 21255  0DF2  0021               	movlb	1	; select bank1
 21256  0DF3  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21257  0DF4  0086               	movwf	6
 21258  0DF5  0187               	clrf	7
 21259  0DF6  3F40               	moviw [0]fsr1
 21260  0DF7  0022               	movlb	2	; select bank2
 21261  0DF8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21262  0DF9  3F41               	moviw [1]fsr1
 21263  0DFA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21264  0DFB  0820               	movf	??_vfpfcnvrt^(0+256),w
 21265  0DFC  0084               	movwf	4
 21266  0DFD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21267  0DFE  0085               	movwf	5
 21268  0DFF  0800               	movf	0,w	;code access
 21269  0E00  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21270  0E01  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21271  0E02  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21272                           
 21273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 21274  0E03  0021               	movlb	1	; select bank1
 21275  0E04  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21276  0E05  0086               	movwf	6
 21277  0E06  0187               	clrf	7
 21278  0E07  3001               	movlw	1
 21279  0E08  0781               	addwf	1,f
 21280  0E09  3141               	addfsr 1,1
 21281  0E0A  1803               	skipnc
 21282  0E0B  0A81               	incf	1,f
 21283                           
 21284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 21285  0E0C  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21286  0E0D  0086               	movwf	6
 21287  0E0E  3001               	movlw	1	; select bank2/3
 21288  0E0F  0087               	movwf	7
 21289  0E10  0801               	movf	1,w
 21290  0E11  0084               	movwf	4
 21291  0E12  3001               	movlw	1	; select bank2/3
 21292  0E13  0085               	movwf	5
 21293  0E14  3002               	movlw	2
 21294  0E15  0781               	addwf	1,f
 21295  0E16  3F00               	moviw [0]fsr0
 21296  0E17  0022               	movlb	2	; select bank2
 21297  0E18  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21298  0E19  3F01               	moviw [1]fsr0
 21299  0E1A  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21300  0E1B  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21301  0E1C  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21302  0E1D  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21303  0E1E  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21304  0E1F  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21305  0E20  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21306                           
 21307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 21308  0E21  0021               	movlb	1	; select bank1
 21309  0E22  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21310  0E23  0020               	movlb	0	; select bank0
 21311  0E24  00B1               	movwf	xtoa@fp+1
 21312  0E25  0021               	movlb	1	; select bank1
 21313  0E26  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21314  0E27  0020               	movlb	0	; select bank0
 21315  0E28  00B0               	movwf	xtoa@fp
 21316  0E29  0022               	movlb	2	; select bank2
 21317  0E2A  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21318  0E2B  0020               	movlb	0	; select bank0
 21319  0E2C  00B2               	movwf	xtoa@d
 21320  0E2D  0022               	movlb	2	; select bank2
 21321  0E2E  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21322  0E2F  0020               	movlb	0	; select bank0
 21323  0E30  00B3               	movwf	xtoa@d+1
 21324  0E31  0022               	movlb	2	; select bank2
 21325  0E32  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21326  0E33  0020               	movlb	0	; select bank0
 21327  0E34  00B4               	movwf	xtoa@d+2
 21328  0E35  0022               	movlb	2	; select bank2
 21329  0E36  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21330  0E37  0020               	movlb	0	; select bank0
 21331  0E38  00B5               	movwf	xtoa@d+3
 21332  0E39  0022               	movlb	2	; select bank2
 21333  0E3A  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21334  0E3B  0020               	movlb	0	; select bank0
 21335  0E3C  00B6               	movwf	xtoa@d+4
 21336  0E3D  0022               	movlb	2	; select bank2
 21337  0E3E  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21338  0E3F  0020               	movlb	0	; select bank0
 21339  0E40  00B7               	movwf	xtoa@d+5
 21340  0E41  0022               	movlb	2	; select bank2
 21341  0E42  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21342  0E43  0020               	movlb	0	; select bank0
 21343  0E44  00B8               	movwf	xtoa@d+6
 21344  0E45  0022               	movlb	2	; select bank2
 21345  0E46  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21346  0E47  0020               	movlb	0	; select bank0
 21347  0E48  00B9               	movwf	xtoa@d+7
 21348  0E49  0022               	movlb	2	; select bank2
 21349  0E4A  0845               	movf	vfpfcnvrt@c^(0+256),w
 21350  0E4B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21351  0E4C  0820               	movf	??_vfpfcnvrt^(0+256),w
 21352  0E4D  0020               	movlb	0	; select bank0
 21353  0E4E  00BA               	movwf	xtoa@x
 21354  0E4F  319E  26A7         	fcall	_xtoa
 21355  0E51  0020               	movlb	0	; select bank0
 21356  0E52  0831               	movf	?_xtoa+1,w
 21357  0E53  0021               	movlb	1	; select bank1
 21358  0E54  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21359  0E55  0020               	movlb	0	; select bank0
 21360  0E56  0830               	movf	?_xtoa,w
 21361  0E57  0021               	movlb	1	; select bank1
 21362  0E58  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21363  0E59  0008               	return
 21364  0E5A                     l7885:	
 21365                           
 21366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 21367  0E5A  0021               	movlb	1	; select bank1
 21368  0E5B  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21369  0E5C  0086               	movwf	6
 21370  0E5D  0187               	clrf	7
 21371  0E5E  3F40               	moviw [0]fsr1
 21372  0E5F  00F1               	movwf	strncmp@_l
 21373  0E60  3F41               	moviw [1]fsr1
 21374  0E61  00F2               	movwf	strncmp@_l+1
 21375  0E62  308B               	movlw	low (STR_137| (0+32768))
 21376  0E63  00F3               	movwf	strncmp@_r
 21377  0E64  30B8               	movlw	high (STR_137| (0+32768))
 21378  0E65  00F4               	movwf	strncmp@_r+1
 21379  0E66  3002               	movlw	2
 21380  0E67  00F5               	movwf	strncmp@n
 21381  0E68  3000               	movlw	0
 21382  0E69  00F6               	movwf	strncmp@n+1
 21383  0E6A  31A0  200C  3188   	fcall	_strncmp
 21384  0E6D  0871               	movf	?_strncmp,w
 21385  0E6E  0472               	iorwf	?_strncmp+1,w
 21386  0E6F  1903               	btfsc	3,2
 21387  0E70  2E88               	goto	l7889
 21388  0E71  0021               	movlb	1	; select bank1
 21389  0E72  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21390  0E73  0086               	movwf	6
 21391  0E74  0187               	clrf	7
 21392  0E75  3F40               	moviw [0]fsr1
 21393  0E76  00F1               	movwf	strncmp@_l
 21394  0E77  3F41               	moviw [1]fsr1
 21395  0E78  00F2               	movwf	strncmp@_l+1
 21396  0E79  3064               	movlw	low (STR_141| (0+32768))
 21397  0E7A  00F3               	movwf	strncmp@_r
 21398  0E7B  30B8               	movlw	high (STR_141| (0+32768))
 21399  0E7C  00F4               	movwf	strncmp@_r+1
 21400  0E7D  3002               	movlw	2
 21401  0E7E  00F5               	movwf	strncmp@n
 21402  0E7F  3000               	movlw	0
 21403  0E80  00F6               	movwf	strncmp@n+1
 21404  0E81  31A0  200C  3188   	fcall	_strncmp
 21405  0E84  0871               	movf	?_strncmp,w
 21406  0E85  0472               	iorwf	?_strncmp+1,w
 21407  0E86  1D03               	btfss	3,2
 21408  0E87  2F0D               	goto	l7899
 21409  0E88                     l7889:	
 21410                           
 21411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 21412  0E88  0021               	movlb	1	; select bank1
 21413  0E89  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21414  0E8A  0086               	movwf	6
 21415  0E8B  0187               	clrf	7
 21416  0E8C  3F40               	moviw [0]fsr1
 21417  0E8D  0022               	movlb	2	; select bank2
 21418  0E8E  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21419  0E8F  3F41               	moviw [1]fsr1
 21420  0E90  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21421  0E91  3001               	movlw	1
 21422  0E92  0720               	addwf	??_vfpfcnvrt^(0+256),w
 21423  0E93  0084               	movwf	4
 21424  0E94  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21425  0E95  1803               	skipnc
 21426  0E96  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 21427  0E97  0085               	movwf	5
 21428  0E98  0800               	movf	0,w	;code access
 21429  0E99  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21430  0E9A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21431  0E9B  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21432                           
 21433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 21434  0E9C  0021               	movlb	1	; select bank1
 21435  0E9D  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21436  0E9E  0086               	movwf	6
 21437  0E9F  0187               	clrf	7
 21438  0EA0  3002               	movlw	2
 21439  0EA1  0781               	addwf	1,f
 21440  0EA2  3141               	addfsr 1,1
 21441  0EA3  1803               	skipnc
 21442  0EA4  0A81               	incf	1,f
 21443                           
 21444                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 21445  0EA5  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21446  0EA6  0086               	movwf	6
 21447  0EA7  3001               	movlw	1	; select bank2/3
 21448  0EA8  0087               	movwf	7
 21449  0EA9  0801               	movf	1,w
 21450  0EAA  0084               	movwf	4
 21451  0EAB  3001               	movlw	1	; select bank2/3
 21452  0EAC  0085               	movwf	5
 21453  0EAD  3004               	movlw	4
 21454  0EAE  0781               	addwf	1,f
 21455  0EAF  3F00               	moviw [0]fsr0
 21456  0EB0  0022               	movlb	2	; select bank2
 21457  0EB1  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21458  0EB2  3F01               	moviw [1]fsr0
 21459  0EB3  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21460  0EB4  3F02               	moviw [2]fsr0
 21461  0EB5  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 21462  0EB6  3F03               	moviw [3]fsr0
 21463  0EB7  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 21464  0EB8  0820               	movf	??_vfpfcnvrt^(0+256),w
 21465  0EB9  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 21466  0EBA  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21467  0EBB  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 21468  0EBC  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21469  0EBD  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 21470  0EBE  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21471  0EBF  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 21472  0EC0  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 21473  0EC1  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 21474  0EC2  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 21475  0EC3  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 21476  0EC4  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 21477  0EC5  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 21478  0EC6  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 21479  0EC7  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 21480  0EC8  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 21481  0EC9  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 21482  0ECA  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 21483  0ECB  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 21484  0ECC  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 21485  0ECD  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 21486  0ECE  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 21487  0ECF  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 21488  0ED0  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 21489  0ED1  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21490  0ED2  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 21491  0ED3  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21492                           
 21493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 21494  0ED4  0021               	movlb	1	; select bank1
 21495  0ED5  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21496  0ED6  0020               	movlb	0	; select bank0
 21497  0ED7  00B1               	movwf	xtoa@fp+1
 21498  0ED8  0021               	movlb	1	; select bank1
 21499  0ED9  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21500  0EDA  0020               	movlb	0	; select bank0
 21501  0EDB  00B0               	movwf	xtoa@fp
 21502  0EDC  0022               	movlb	2	; select bank2
 21503  0EDD  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21504  0EDE  0020               	movlb	0	; select bank0
 21505  0EDF  00B2               	movwf	xtoa@d
 21506  0EE0  0022               	movlb	2	; select bank2
 21507  0EE1  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21508  0EE2  0020               	movlb	0	; select bank0
 21509  0EE3  00B3               	movwf	xtoa@d+1
 21510  0EE4  0022               	movlb	2	; select bank2
 21511  0EE5  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21512  0EE6  0020               	movlb	0	; select bank0
 21513  0EE7  00B4               	movwf	xtoa@d+2
 21514  0EE8  0022               	movlb	2	; select bank2
 21515  0EE9  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21516  0EEA  0020               	movlb	0	; select bank0
 21517  0EEB  00B5               	movwf	xtoa@d+3
 21518  0EEC  0022               	movlb	2	; select bank2
 21519  0EED  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21520  0EEE  0020               	movlb	0	; select bank0
 21521  0EEF  00B6               	movwf	xtoa@d+4
 21522  0EF0  0022               	movlb	2	; select bank2
 21523  0EF1  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21524  0EF2  0020               	movlb	0	; select bank0
 21525  0EF3  00B7               	movwf	xtoa@d+5
 21526  0EF4  0022               	movlb	2	; select bank2
 21527  0EF5  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21528  0EF6  0020               	movlb	0	; select bank0
 21529  0EF7  00B8               	movwf	xtoa@d+6
 21530  0EF8  0022               	movlb	2	; select bank2
 21531  0EF9  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21532  0EFA  0020               	movlb	0	; select bank0
 21533  0EFB  00B9               	movwf	xtoa@d+7
 21534  0EFC  0022               	movlb	2	; select bank2
 21535  0EFD  0845               	movf	vfpfcnvrt@c^(0+256),w
 21536  0EFE  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21537  0EFF  0820               	movf	??_vfpfcnvrt^(0+256),w
 21538  0F00  0020               	movlb	0	; select bank0
 21539  0F01  00BA               	movwf	xtoa@x
 21540  0F02  319E  26A7         	fcall	_xtoa
 21541  0F04  0020               	movlb	0	; select bank0
 21542  0F05  0831               	movf	?_xtoa+1,w
 21543  0F06  0021               	movlb	1	; select bank1
 21544  0F07  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21545  0F08  0020               	movlb	0	; select bank0
 21546  0F09  0830               	movf	?_xtoa,w
 21547  0F0A  0021               	movlb	1	; select bank1
 21548  0F0B  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21549  0F0C  0008               	return
 21550  0F0D                     l7899:	
 21551                           
 21552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 21553  0F0D  0021               	movlb	1	; select bank1
 21554  0F0E  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21555  0F0F  0086               	movwf	6
 21556  0F10  0187               	clrf	7
 21557  0F11  3F40               	moviw [0]fsr1
 21558  0F12  00F1               	movwf	strncmp@_l
 21559  0F13  3F41               	moviw [1]fsr1
 21560  0F14  00F2               	movwf	strncmp@_l+1
 21561  0F15  308E               	movlw	low (STR_146| (0+32768))
 21562  0F16  00F3               	movwf	strncmp@_r
 21563  0F17  30B8               	movlw	high (STR_146| (0+32768))
 21564  0F18  00F4               	movwf	strncmp@_r+1
 21565  0F19  3002               	movlw	2
 21566  0F1A  00F5               	movwf	strncmp@n
 21567  0F1B  3000               	movlw	0
 21568  0F1C  00F6               	movwf	strncmp@n+1
 21569  0F1D  31A0  200C  3188   	fcall	_strncmp
 21570  0F20  0871               	movf	?_strncmp,w
 21571  0F21  0472               	iorwf	?_strncmp+1,w
 21572  0F22  1903               	btfsc	3,2
 21573  0F23  2F3B               	goto	l7903
 21574  0F24  0021               	movlb	1	; select bank1
 21575  0F25  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21576  0F26  0086               	movwf	6
 21577  0F27  0187               	clrf	7
 21578  0F28  3F40               	moviw [0]fsr1
 21579  0F29  00F1               	movwf	strncmp@_l
 21580  0F2A  3F41               	moviw [1]fsr1
 21581  0F2B  00F2               	movwf	strncmp@_l+1
 21582  0F2C  3067               	movlw	low (STR_150| (0+32768))
 21583  0F2D  00F3               	movwf	strncmp@_r
 21584  0F2E  30B8               	movlw	high (STR_150| (0+32768))
 21585  0F2F  00F4               	movwf	strncmp@_r+1
 21586  0F30  3002               	movlw	2
 21587  0F31  00F5               	movwf	strncmp@n
 21588  0F32  3000               	movlw	0
 21589  0F33  00F6               	movwf	strncmp@n+1
 21590  0F34  31A0  200C  3188   	fcall	_strncmp
 21591  0F37  0871               	movf	?_strncmp,w
 21592  0F38  0472               	iorwf	?_strncmp+1,w
 21593  0F39  1D03               	btfss	3,2
 21594  0F3A  2FA6               	goto	l7913
 21595  0F3B                     l7903:	
 21596                           
 21597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 21598  0F3B  0021               	movlb	1	; select bank1
 21599  0F3C  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21600  0F3D  0086               	movwf	6
 21601  0F3E  0187               	clrf	7
 21602  0F3F  3F40               	moviw [0]fsr1
 21603  0F40  0022               	movlb	2	; select bank2
 21604  0F41  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21605  0F42  3F41               	moviw [1]fsr1
 21606  0F43  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21607  0F44  3001               	movlw	1
 21608  0F45  0720               	addwf	??_vfpfcnvrt^(0+256),w
 21609  0F46  0084               	movwf	4
 21610  0F47  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 21611  0F48  1803               	skipnc
 21612  0F49  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 21613  0F4A  0085               	movwf	5
 21614  0F4B  0800               	movf	0,w	;code access
 21615  0F4C  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21616  0F4D  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21617  0F4E  00C5               	movwf	vfpfcnvrt@c^(0+256)
 21618                           
 21619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 21620  0F4F  0021               	movlb	1	; select bank1
 21621  0F50  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21622  0F51  0086               	movwf	6
 21623  0F52  0187               	clrf	7
 21624  0F53  3002               	movlw	2
 21625  0F54  0781               	addwf	1,f
 21626  0F55  3141               	addfsr 1,1
 21627  0F56  1803               	skipnc
 21628  0F57  0A81               	incf	1,f
 21629                           
 21630                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21631  0F58  0866               	movf	vfpfcnvrt@ap^(0+128),w
 21632  0F59  0086               	movwf	6
 21633  0F5A  3001               	movlw	1	; select bank2/3
 21634  0F5B  0087               	movwf	7
 21635  0F5C  0801               	movf	1,w
 21636  0F5D  0084               	movwf	4
 21637  0F5E  3001               	movlw	1	; select bank2/3
 21638  0F5F  0085               	movwf	5
 21639  0F60  3002               	movlw	2
 21640  0F61  0781               	addwf	1,f
 21641  0F62  3F00               	moviw [0]fsr0
 21642  0F63  0022               	movlb	2	; select bank2
 21643  0F64  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 21644  0F65  3F01               	moviw [1]fsr0
 21645  0F66  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 21646  0F67  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 21647  0F68  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 21648  0F69  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 21649  0F6A  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 21650  0F6B  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 21651  0F6C  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 21652                           
 21653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 21654  0F6D  0021               	movlb	1	; select bank1
 21655  0F6E  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21656  0F6F  0020               	movlb	0	; select bank0
 21657  0F70  00B1               	movwf	xtoa@fp+1
 21658  0F71  0021               	movlb	1	; select bank1
 21659  0F72  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21660  0F73  0020               	movlb	0	; select bank0
 21661  0F74  00B0               	movwf	xtoa@fp
 21662  0F75  0022               	movlb	2	; select bank2
 21663  0F76  0846               	movf	vfpfcnvrt@llu^(0+256),w
 21664  0F77  0020               	movlb	0	; select bank0
 21665  0F78  00B2               	movwf	xtoa@d
 21666  0F79  0022               	movlb	2	; select bank2
 21667  0F7A  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 21668  0F7B  0020               	movlb	0	; select bank0
 21669  0F7C  00B3               	movwf	xtoa@d+1
 21670  0F7D  0022               	movlb	2	; select bank2
 21671  0F7E  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 21672  0F7F  0020               	movlb	0	; select bank0
 21673  0F80  00B4               	movwf	xtoa@d+2
 21674  0F81  0022               	movlb	2	; select bank2
 21675  0F82  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 21676  0F83  0020               	movlb	0	; select bank0
 21677  0F84  00B5               	movwf	xtoa@d+3
 21678  0F85  0022               	movlb	2	; select bank2
 21679  0F86  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 21680  0F87  0020               	movlb	0	; select bank0
 21681  0F88  00B6               	movwf	xtoa@d+4
 21682  0F89  0022               	movlb	2	; select bank2
 21683  0F8A  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 21684  0F8B  0020               	movlb	0	; select bank0
 21685  0F8C  00B7               	movwf	xtoa@d+5
 21686  0F8D  0022               	movlb	2	; select bank2
 21687  0F8E  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 21688  0F8F  0020               	movlb	0	; select bank0
 21689  0F90  00B8               	movwf	xtoa@d+6
 21690  0F91  0022               	movlb	2	; select bank2
 21691  0F92  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 21692  0F93  0020               	movlb	0	; select bank0
 21693  0F94  00B9               	movwf	xtoa@d+7
 21694  0F95  0022               	movlb	2	; select bank2
 21695  0F96  0845               	movf	vfpfcnvrt@c^(0+256),w
 21696  0F97  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21697  0F98  0820               	movf	??_vfpfcnvrt^(0+256),w
 21698  0F99  0020               	movlb	0	; select bank0
 21699  0F9A  00BA               	movwf	xtoa@x
 21700  0F9B  319E  26A7         	fcall	_xtoa
 21701  0F9D  0020               	movlb	0	; select bank0
 21702  0F9E  0831               	movf	?_xtoa+1,w
 21703  0F9F  0021               	movlb	1	; select bank1
 21704  0FA0  00E4               	movwf	(?_vfpfcnvrt+1)^(0+128)
 21705  0FA1  0020               	movlb	0	; select bank0
 21706  0FA2  0830               	movf	?_xtoa,w
 21707  0FA3  0021               	movlb	1	; select bank1
 21708  0FA4  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21709  0FA5  0008               	return
 21710  0FA6                     l7913:	
 21711                           
 21712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 21713  0FA6  0021               	movlb	1	; select bank1
 21714  0FA7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21715  0FA8  0086               	movwf	6
 21716  0FA9  0187               	clrf	7
 21717  0FAA  3F40               	moviw [0]fsr1
 21718  0FAB  0022               	movlb	2	; select bank2
 21719  0FAC  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21720  0FAD  3F41               	moviw [1]fsr1
 21721  0FAE  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21722  0FAF  0820               	movf	??_vfpfcnvrt^(0+256),w
 21723  0FB0  0084               	movwf	4
 21724  0FB1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21725  0FB2  0085               	movwf	5
 21726  0FB3  0012               	moviw fsr0++
 21727  0FB4  3A25               	xorlw	37
 21728  0FB5  1D03               	btfss	3,2
 21729  0FB6  2FD0               	goto	l7923
 21730                           
 21731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 21732  0FB7  0021               	movlb	1	; select bank1
 21733  0FB8  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21734  0FB9  0086               	movwf	6
 21735  0FBA  0187               	clrf	7
 21736  0FBB  3001               	movlw	1
 21737  0FBC  0781               	addwf	1,f
 21738  0FBD  3141               	addfsr 1,1
 21739  0FBE  1803               	skipnc
 21740  0FBF  0A81               	incf	1,f
 21741                           
 21742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 21743  0FC0  3025               	movlw	37
 21744  0FC1  00F1               	movwf	fputc@c
 21745  0FC2  3000               	movlw	0
 21746  0FC3  00F2               	movwf	fputc@c+1
 21747  0FC4  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21748  0FC5  00F4               	movwf	fputc@fp+1
 21749  0FC6  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21750  0FC7  00F3               	movwf	fputc@fp
 21751  0FC8  3190  200D         	fcall	_fputc
 21752  0FCA                     l7919:	
 21753                           
 21754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 21755  0FCA  3001               	movlw	1
 21756  0FCB  0021               	movlb	1	; select bank1
 21757  0FCC  00E3               	movwf	?_vfpfcnvrt^(0+128)
 21758  0FCD  3000               	movlw	0
 21759  0FCE  00E4               	movwf	(?_vfpfcnvrt^(0+128)+1)
 21760  0FCF  0008               	return
 21761  0FD0                     l7923:	
 21762                           
 21763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 21764  0FD0  0021               	movlb	1	; select bank1
 21765  0FD1  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21766  0FD2  0086               	movwf	6
 21767  0FD3  0187               	clrf	7
 21768  0FD4  3001               	movlw	1
 21769  0FD5  0781               	addwf	1,f
 21770  0FD6  3141               	addfsr 1,1
 21771  0FD7  1803               	skipnc
 21772  0FD8  0A81               	incf	1,f
 21773  0FD9  2973               	goto	l7721
 21774  0FDA                     l7929:	
 21775                           
 21776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 21777  0FDA  0021               	movlb	1	; select bank1
 21778  0FDB  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21779  0FDC  0086               	movwf	6
 21780  0FDD  0187               	clrf	7
 21781  0FDE  3F40               	moviw [0]fsr1
 21782  0FDF  0022               	movlb	2	; select bank2
 21783  0FE0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 21784  0FE1  3F41               	moviw [1]fsr1
 21785  0FE2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 21786  0FE3  0820               	movf	??_vfpfcnvrt^(0+256),w
 21787  0FE4  0084               	movwf	4
 21788  0FE5  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 21789  0FE6  0085               	movwf	5
 21790  0FE7  0800               	movf	0,w	;code access
 21791  0FE8  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 21792  0FE9  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
 21793  0FEA  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 21794  0FEB  00F1               	movwf	fputc@c
 21795  0FEC  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 21796  0FED  00F2               	movwf	fputc@c+1
 21797  0FEE  0021               	movlb	1	; select bank1
 21798  0FEF  0864               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 21799  0FF0  00F4               	movwf	fputc@fp+1
 21800  0FF1  0863               	movf	vfpfcnvrt@fp^(0+128),w
 21801  0FF2  00F3               	movwf	fputc@fp
 21802  0FF3  3190  200D  3188   	fcall	_fputc
 21803                           
 21804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 21805  0FF6  0021               	movlb	1	; select bank1
 21806  0FF7  0865               	movf	vfpfcnvrt@fmt^(0+128),w
 21807  0FF8  0086               	movwf	6
 21808  0FF9  0187               	clrf	7
 21809  0FFA  3001               	movlw	1
 21810  0FFB  0781               	addwf	1,f
 21811  0FFC  3141               	addfsr 1,1
 21812  0FFD  1803               	skipnc
 21813  0FFE  0A81               	incf	1,f
 21814  0FFF  2FCA               	goto	l7919
 21815  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     444
    Constant    90
    Data        7
    BSS         133
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     80      80
    BANK3            80      1      60
    BANK4            80      0      80
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_152(CODE[3]), STR_148(CODE[3]), STR_143(CODE[3]), STR_139(CODE[3]), 
		 -> STR_134(CODE[3]), STR_130(CODE[3]), STR_125(CODE[4]), STR_121(CODE[4]), 
		 -> STR_116(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_47(CODE[3]), STR_42(CODE[3]), 
		 -> STR_38(CODE[3]), STR_33(CODE[3]), STR_29(CODE[3]), STR_24(CODE[4]), 
		 -> STR_20(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_152(CODE[3]), STR_148(CODE[3]), STR_143(CODE[3]), STR_139(CODE[3]), 
		 -> STR_134(CODE[3]), STR_130(CODE[3]), STR_125(CODE[4]), STR_121(CODE[4]), 
		 -> STR_116(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_101(CODE[4]), 
		 -> STR_96(CODE[3]), STR_91(CODE[3]), STR_86(CODE[3]), STR_81(CODE[4]), 
		 -> STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[3]), STR_61(CODE[4]), 
		 -> STR_56(CODE[3]), STR_51(CODE[3]), STR_47(CODE[3]), STR_42(CODE[3]), 
		 -> STR_38(CODE[3]), STR_33(CODE[3]), STR_29(CODE[3]), STR_24(CODE[4]), 
		 -> STR_20(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 44
		 -> vfpfcnvrt@ct(BANK2[3]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 44
		 -> vfpfcnvrt@ct(BANK2[3]), STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    S1523_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 44
		 -> STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 44
		 -> STR_7(CODE[44]), STR_6(CODE[42]), STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK2[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK4[80]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_9(CODE[45]), STR_8(CODE[42]), STR_5(CODE[3]), STR_4(CODE[53]), 
		 -> messageBuffer(BIGRAM[127]), STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _setTemperatureLimitsint->___wmul
    ___flmul->__Umul8_16
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _EUSART_Write_Text->_EUSART_Write
    _AFE_getSetShortCircuitCurrent->___fltol
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _vsnprintf->_vfprintf
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___flmul
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    ___flmul->___xxtofl
    ___flge->___fldiv
    _AFE_getSetShortCircuitCurrent->___fltol
    ___fltol->___fldiv
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _init_AFE->_setShortCircuitProtection

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _statemachine->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  107594
                                              0 BANK3      1     1      0
                  _EUSART_Initialize
                          _initClock
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  106758
                                             77 BANK2      3     3      0
          _AFE_getSetCurrentSenseRes
      _AFE_getSetShortCircuitCurrent
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            14     4     10   89779
                                             63 BANK2     14     4     10
          _AFE_getSetCurrentSenseRes (ARG)
      _AFE_getSetShortCircuitCurrent (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   88634
                                             78 BANK1      2     2      0
                                             46 BANK2     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   87597
                                             78 BANK0      2     2      0
                                             71 BANK1      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           52    48      4   86735
                                             67 BANK1      4     0      4
                                              0 BANK2     46    46      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    9106
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7249
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6837
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    19      3    2280
                                             10 COMMON     2     2      0
                                              0 BANK0     20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6729
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              67    60      7   28371
                                              0 BANK1     67    60      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1232
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     641
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3727
                                             32 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    3302
                                              1 COMMON     8     0      8
                                              0 BANK0     12    12      0
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7932
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5680
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5420
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     164
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0    8918
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6    7576
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    3329
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    3387
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    1599
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C_writeRegister                                    6     0      6    1652
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     652
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     326
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     326
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    5     3      2     796
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetShortCircuitCurrent                        8     4      4    3192
                                             67 BANK0      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     457
                                             10 COMMON     2     2      0
                                             58 BANK0      9     5      4
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    2185
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetCurrentSenseRes                            4     0      4       0
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     836
                                             10 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _initClock
     _internal_16
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_getSetCurrentSenseRes
     _AFE_getSetShortCircuitCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setShortCircuitProtection
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _snprintf
       _AFE_getSetCurrentSenseRes (ARG)
       _AFE_getSetShortCircuitCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      1      3C      11       75.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     189      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     189      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Dec 25 01:42:55 2019

       __end_of_setShortCircuitProtection 07E9                     __end_of_send_I2C_data 3691  
                            ___fldiv@aexp 0059                              ___fldiv@bexp 0058  
                            ___fldiv@sign 0051                               __CFG_CP$OFF 0000  
                            ___awdiv@sign 0077                       ___wmul@multiplicand 0073  
                   _setShuntResistorValue 36B7                       __Umul8_16@word_mpld 0077  
                                     l213 3668                                       l311 2847  
                                     l312 284C                                       l313 2861  
                                     l137 1C4B                                       l260 36B3  
                                     l309 2842                                       l501 2B18  
                                     l254 36D5                                       l248 368D  
                                     l272 367B                                       l504 2B38  
                                     l521 1DBB                                       l601 048A  
                                     l266 3673                                       l522 1DCF  
                                     l284 3696                                       l516 1D99  
                                     l525 1E65                                       l517 1DA0  
                                     l368 22F9                                       l712 1FCC  
                                     l633 1974                                       l721 13E4  
                                     l723 13F0                                       l572 0293  
                                     l644 1A2F                                       l724 13F3  
                                     l573 0280                                       l637 198F  
                                     l725 13F6                                       l638 1A24  
                                     l726 13F9                                       l583 02C7  
                                     l655 2341                                       l664 239C  
                                     l672 2726                                       l728 142C  
                                     l819 3777                                       l691 1EC9  
                                     l932 270D                                       l676 2741  
                                     l919 1B3F                                       l687 1EAE  
                                     l884 2E71                                       l988 2A84  
                                     l997 2D06                                       l989 2A9E  
                                     _abs 370F                            RGB_color@color 0071  
                                     _pad 2B02                              ___awmod@sign 0077  
                            __CFG_BORV$LO 0000                                       wreg 0009  
                            __CFG_IESO$ON 0000                              ___flmul@aexp 0038  
                            ___flmul@bexp 0039                              ___flmul@sign 0033  
                            ___flmul@temp 003E                              ___flmul@prod 003A  
                            _statemachine 1B51                              __CFG_LVP$OFF 0000  
                            ___fltol@exp1 007B                                      l1000 2D54  
                                    l1020 2BEE                                      l1200 11D6  
                                    l1120 1228                                      ?_abs 0074  
                                    l1124 12BB                                      l1052 2DD2  
                                    l1141 133E                                      l1126 129E  
                                    l1062 2C62                                      l1305 20C7  
                                    l1162 13B5                                      l1154 139D  
                                    l1260 2FBE                                      l1228 17F3  
                                    l1254 2F88                                      l1176 10AA  
                                    l1328 263A                                      l1267 2FD2  
                                    l1268 2FDC                                      l1197 11B1  
                                    l1198 11C9                                      l1438 37F1  
                                    l4103 36FC                                      l4105 3708  
                                    l4311 37EB                                      l5009 379E  
                                    l4081 1019                                      l4085 1040  
                                    l4413 261D                                      l4079 1015  
                                    l4407 25F3                                      l4097 28CC  
                                    l4513 26E0                                      l4361 2CBE  
                                    l4409 2604                                      l4507 26A1  
                                    l4515 26EC                                      l4371 2CE6  
                                    l4461 1AAF                                      l4509 26B0  
                                    l4533 2B68                                      l4365 2CC3  
                                    l7021 01A0                                      l7005 0151  
                                    l7013 017F                                      ?_pad 0026  
                                    l6151 2FAB                                      l4623 2D3A  
                                    l4439 3771                                      l4463 1AB3  
                                    l4551 2B8E                                      l4543 2B70  
                                    l4527 2B5D                                      l7111 0488  
                                    l7103 045A                                      l7031 023A  
                                    l4801 1135                                      l6161 2FC3  
                                    l6145 2F97                                      l4473 1ACA  
                                    l4457 1A88                                      l4545 2B7C  
                                    l4377 282B                                      l7201 0619  
                                    l7113 0491                                      l7025 01D0  
                                    l7033 025F                                      l4713 2C56  
                                    l8001 2E12                                      l4803 10FE  
                                    l4643 2BAE                                      l6139 2F80  
                                    l6331 3757                                      l4619 2D20  
                                    l4483 1B12                                      l4475 1AD9  
                                    l4555 2B97                                      l4571 2A2E  
                                    l7211 0667                                      l7203 0651  
                                    l7051 029E                                      l7043 028D  
                                    l7027 020A                                      l4707 2C17  
                                    l8011 2E50                                      l4821 1157  
                                    l4805 113A                                      l4741 1086  
                                    l6173 2FF7                                      l6149 2F9B  
                                    l6181 2851                                      l4485 1B1E  
                                    l7125 04FC                                      l7045 0296  
                                    l4709 2C26                                      l8013 2E54  
                                    l4831 1170                                      l4735 107B  
                                    l4663 2BDC                                      l4647 2BB7  
                                    l6159 2FD0                                      l4495 266D  
                                    l4559 2B9F                                      l4583 2A3B  
                                    l4575 2A35                                      l7311 2370  
                                    l8015 2E5B                                      l8111 1C36  
                                    l6361 2E82                                      l4841 1199  
                                    l4673 2BFB                                      l4665 2BEA  
                                    l8025 2250                                      l4905 1629  
                                    l4585 2A47                                      l4593 2A5C  
                                    l7145 0517                                      l7153 0543  
                                    l7161 05C5                                      l7081 02F0  
                                    l7305 2352                                      l6371 2EA0  
                                    l4827 116E                                      l4819 1140  
                                    l4755 109F                                      l4739 107E  
                                    l4499 2694                                      l7227 0699  
                                    l7235 06B4                                      l7147 0531  
                                    l7091 0302                                      l7067 02D4  
                                    l7059 02C2                                      l7323 23A0  
                                    l5635 204D                                      l5627 2046  
                                    l4597 2A64                                      l4589 2A53  
                                    l7173 05F3                                      l7165 05DD  
                                    l7093 03E6                                      l7077 02E8  
                                    l7069 02D8                                      l7253 19D6  
                                    l7245 1987                                      l7309 2363  
                                    l5629 2021                                      l7405 1F59  
                                    l7413 1F9B                                      l6383 2ECB  
                                    l4855 11D2                                      l4775 10D5  
                                    l4759 10A2                                      l6295 2874  
                                    l6703 12A6                                      l6631 11F5  
                                    l7191 061D                                      l7263 19B1  
                                    l7327 23B1                                      l7319 2373  
                                    l4687 2D7E                                      l6369 2E92  
                                    l4769 10C9                                      l6801 13AD  
                                    l6721 12C9                                      l6705 12A8  
                                    l6713 12B6                                      l7097 0439  
                                    l7329 23BE                                      l4697 2DC6  
                                    l4689 2D8D                                      l7345 2784  
                                    l7601 1C6E                                      l7521 1465  
                                    l7505 1400                                      l8233 1C40  
                                    l8057 1B52                                      l8129 2909  
                                    l6387 2ED9                                      l6379 2EC0  
                                    l4795 111C                                      l4875 15EE  
                                    l7451 208F                                      l6731 12DD  
                                    l6635 11F8                                      l7291 231A  
                                    l7355 27E5                                      l7339 2739  
                                    l7523 1476                                      l7531 14A7  
                                    l8235 141A                                      l4965 1789  
                                    l4957 175B                                      l4893 1611  
                                    l4877 15F0                                      l8237 20A0  
                                    l7453 2094                                      l7445 207F  
                                    l7437 2063                                      l6901 1DB3  
                                    l6805 13B1                                      l6637 1200  
                                    l7189 0615                                      l7357 2760  
                                    l7365 27EA                                      l7429 1FEA  
                                    l7381 1ED9                                      l7621 2495  
                                    l7613 1CF4                                      l7525 147F  
                                    l7509 1433                                      l6399 2238  
                                    l8239 2856                                      l4983 17C9  
                                    l4959 1772                                      l4895 1613  
                                    l4879 15F8                                      l7455 20A8  
                                    l6823 2B16                                      l6911 1DFC  
                                    l6655 121D                                      l7279 1A48  
                                    l7375 1EC1                                      l7703 083F  
                                    l7543 14ED                                      l8087 1BBB  
                                    l4969 178B                                      l4897 161B  
                                    l6833 2B44                                      l6921 1DD7  
                                    l6729 12DB                                      l6665 1232  
                                    l7385 1EF1                                      l7721 0973  
                                    l7713 08A7                                      l7633 2514  
                                    l7625 24C3                                      l7609 1CC6  
                                    l7545 14FE                                      l7553 152F  
                                    l4979 17B4                                      l7459 20CB  
                                    l6819 2B0E                                      l6907 1DCA  
                                    l6771 1364                                      l6739 12EC  
                                    l6659 1220                                      l7803 0AEB  
                                    l7563 158F                                      l7547 1507  
                                    l4989 17E0                                      l7469 20FA  
                                    l6829 2B1A                                      l6933 1E79  
                                    l6765 135D                                      l6757 1350  
                                    l6749 1336                                      l6773 1366  
                                    l7389 1F0B                                      l7813 0B53  
                                    l7725 0977                                      l7645 20FF  
                                    l7573 1804                                      l6943 1E91  
                                    l6783 1371                                      l6695 126E  
                                    l7903 0F3B                                      l7823 0BB5  
                                    l7751 0922                                      l7727 08E0  
                                    l7655 2162                                      l7663 23C4  
                                    l6881 295A                                      l6929 1E71  
                                    l6865 2AB0                                      l7913 0FA6  
                                    l7833 0C37                                      l7673 242B  
                                    l7585 2EE2                                      l7577 1832  
                                    l7489 13E6                                      l6939 1E84  
                                    l6779 136F                                      l7923 0FD0  
                                    l7843 0C9F                                      l7763 0953  
                                    l7739 0901                                      l7683 1887  
                                    l7499 13FC                                      l6965 00AA  
                                    l6957 0098                                      l7861 0D65  
                                    l7693 18E9                                      l7597 1C4C  
                                    l7589 2F10                                      l6879 2951  
                                    l7919 0FCA                                      l7871 0DD0  
                                    l7847 0CCD                                      l7783 0A43  
                                    l6969 00B1                                      l6977 00C3  
                                    l7857 0D37                                      l7793 0A84  
                                    l7929 0FDA                                      l7963 06E4  
                                    l6987 00F3                                      l6995 0121  
                                    l7875 0DF2                                      l7947 297D  
                                    l7981 07AA                                      l7885 0E5A  
                                    l7949 29A1                                      l7985 07D6  
                                    l7969 0790                                      l7889 0E88  
                                    l7993 2DF6                                      l7899 0F0D  
                                    l7999 2E0A                                      STR_1 313D  
                                    STR_2 3037                                      STR_3 30BE  
                                    STR_4 3002                                      STR_5 3062  
                                    STR_6 3113                                      STR_7 3092  
                                    STR_8 30E9                                      STR_9 3065  
                                    _BRGH 0CF2                                      _CREN 0CEC  
                                    u6005 2A4D                                      u5215 37F2  
                                    u6015 2A54                                      u5305 2C94  
                                    u6205 2BF2                                      u5325 2CAD  
                                    u6230 2D6E                                      u5360 2CDE  
                                    u6145 2BC0                                      u5425 258C  
                                    u6305 2C44                                      u5370 2CDF  
                                    u5450 25BA                                      u5530 37BB  
                                    u5355 2CD0                                      u5515 2626  
                                    u5435 25A7                                      u5540 37BC  
                                    u4725 103E                                      u6415 1106  
                                    u6175 2BDD                                      u5615 3778  
                                    u5295 3718                                      u5455 25B6  
                                    u6505 114C                                      u6425 110D  
                                    u5625 377D                                      u6265 2DB3  
                                    _SCS0 04C8                                      u5715 1AFF  
                                    u5475 25DF                                      _SCS1 04C9  
                                    u5580 36F0                                      u6445 1116  
                                    u5590 36F1                                      u6455 112A  
                                    u5815 26CE                                      u5495 260D  
                                    u9040 286A                                      u5680 1ABA  
                                    u6705 16CE                                      u5905 2B7D  
                                    u9050 286B                                      u6715 1724  
                                    u5915 2B87                                      u9060 2879  
                                    u6485 1143                                      u6725 173B  
                                    u5925 2B8F                                      u9070 287A  
                                    u6575 1187                                      u6735 174A  
                                    u9225 21AD                                      u6585 11A2  
                                    u6745 175E                                      u9330 3735  
                                    u9155 2E95                                      u9235 21C4  
                                    u6595 11BB                                      u6835 17A2  
                                    u9340 3736                                      u6845 17BD  
                                    u6765 1767                                      u5885 2B73  
                                    u9175 2EA1                                      u9255 21FA  
                                    u6855 17D3                                      u6695 169F  
                                    u9185 2EB5                                      u9265 2211  
                                    u5985 2A3E                                      u9450 128C  
                                    u9195 2EC1                                      u9460 128D  
                                    u9445 1282                                      u9615 1351  
                                    u8905 2FE4                                      u8825 2FA4  
                                    u9715 1388                                      u8845 2FB8  
                                    u9573 12FE                                      u9565 12E1  
                                    u9495 12AC                                      u9840 2894  
                                    u8865 2FCA                                      u9825 2B24  
                                    u9850 2895                                      u9940 1D6F  
                                    u9780 07F8                                      u9925 2AAC  
                                    u9950 1D70                                      u9790 07F9  
                                    u9870 28B6                                      u9880 28B7  
                                    _TMR1 0016                                      _SPEN 0CEF  
                                    u9995 1DAB                                      _TXEN 0CF5  
                                    _SYNC 0CF4                              __CFG_WRT$OFF 0000  
                                    abs@a 0074                                      _dbuf 0220  
                                    _atoi 205E                                      _ctoa 2944  
                                    _main 28EE                                      _dtoa 1D54  
                                    _prec 01C0                                      _otoa 196D  
                                    _nout 01BC                                      pad@i 002C  
                                    pad@p 0029                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 002E  
                                    _stoa 22FF                                      btemp 007E  
                                    _utoa 271F                                      _xtoa 1EA7  
                           ___fpclassifyf 2C73                                      start 001E  
                         ___fldiv@new_exp 0052                              _tolower$1593 0079  
                __end_of_send_I2C_stopBit 367F                                     ??_abs 0076  
                                   ??_pad 002B                      _send_I2C_controlByte 36AD  
                           ?_EUSART_Write 0070                             ___fltol@sign1 007A  
                         __end_of___aldiv 2EE2                           __end_of___aodiv 1B51  
                                   ?_atoi 0077                                     ?_ctoa 0030  
                         __end_of___fladd 13BD                                     ?_main 0070  
                                   ?_dtoa 0030                           __end_of___aomod 271F  
           I2C_writeRegister@slaveAddress 0075                           __end_of___fldiv 11DB  
                         __end_of___awdiv 2BA4                           __end_of___flneg 36A3  
                                   STR_10 3838                                     STR_11 3848  
                                   STR_20 3844                                     STR_22 384C  
                                   STR_14 383C                                     STR_15 3850  
                                   STR_24 384C                                     STR_40 3873  
                                   STR_33 384D                             __CFG_WDTE$OFF 0000  
                                   STR_42 3873                                     STR_18 3844  
                                   STR_51 3876                                     STR_36 386A  
                         __end_of___awmod 2A69                                     STR_29 3845  
                                   STR_61 3858                                     STR_45 386D  
                                   STR_38 386A                                     STR_54 3870  
                                   STR_47 386D                                     STR_71 387F  
                                   STR_56 3870                                     STR_81 3854  
                                   STR_49 3876                                     STR_66 3859  
                                   STR_74 3882                                     STR_91 3879  
                                   STR_59 3858                                     STR_76 3882  
                                   STR_69 387F                                     STR_86 3855  
                                   STR_94 387C                                     STR_79 3854  
                                   STR_96 387C                           __end_of___flmul 1800  
                                   STR_89 3879                                     ?_otoa 0030  
                                   STR_99 385C                           __end_of___flsub 2822  
                         __end_of___fltol 2C0A                                     ?_stoa 0020  
                                   ?_utoa 0030                                     u10200 0143  
                                   u10025 1E6F                                     u10045 1DEB  
                                   u10150 00E4                                     u10055 1DF7  
                                   u11015 1FBB                                     u10160 00E5  
                                   u10305 02AB                                     u11025 1FC7  
                                   u10315 02BE                                     u11220 1524  
                                   u10190 0142                                     u11230 1525  
                                   u11080 20DF                                     u10600 068D  
                                   u11400 2143                                     u10505 05CF  
                                   u11090 20E0                                     u11410 2144  
                                   u11170 149C                                     u10515 05DB  
                                   u10275 028B                           __end_of___lodiv 2DE3  
                                   u11180 149D                           ___awdiv@divisor 0071  
                                   ?_xtoa 0030                                     u10720 2309  
                                   u10385 030C                                     u10635 197F  
                                   u10645 1A08                                     u10805 23BC  
                                   u10590 068C                                     u10575 065A  
                                   u10655 1A2D                                     u10920 1F22  
                                   u10825 2731                                     u10930 1F23  
                                   u10675 19C5                                     u10755 233A  
                                   u10915 1F05                                     u10685 19D1  
                                   u11805 2E47                                     u10950 1F42  
                                   u11815 2266                                     u11735 07A0  
                                   u10775 236E                                     u10855 2773  
                                   u10960 1F43                                     u11745 07C4  
                                   u10785 237D                                     u10865 277F  
                                   u11835 22CC                                     u11755 07E6  
                                   u10895 1EB9                           __end_of___lomod 2C73  
                                   u10985 1F7F                                     u10995 1FA5  
                                   u11867 2910                                     u11877 1B7E  
                                   u11887 1BC2                                     u11897 36CC  
                                   _IRCF0 04CB                                     _IRCF1 04CC  
                                   _IRCF2 04CD                                     _IRCF3 04CE  
                  __size_of_read_I2C_data 0010                                     i1l119 001C  
                         ___awdiv@counter 0076                              vfpfcnvrt@fmt 00E5  
                            vfpfcnvrt@llu 0146                                     _SPBRG 019B  
                      __size_of_RGB_color 0021                            __CFG_FCMEN$OFF 0000  
                                   _flags 01C2                                     _errno 01BA  
                                   _fputc 100D                           __end_of_isalpha 37C3  
                                   _fputs 28C8                                     _myIsr 0004  
                         __end_of_isdigit 36F8                                     atoi@n 002B  
                                   pad@fp 0026                                     atoi@s 0077  
                                   _width 01BE                                     ctoa@c 0032  
                                   _putch 0003                                     ctoa@w 0034  
                                   dtoa@d 0032                                     dtoa@i 004D  
                                   dtoa@n 0045                                     dtoa@p 003F  
                                   dtoa@s 0043                                     dtoa@w 0041  
                         __end_of_islower 0800                           __end_of_isspace 37A6  
                          __CFG_BOREN$OFF 0000                           __end_of_isupper 373D  
                                   otoa@d 0032                                     otoa@i 0050  
                                   otoa@n 0048                                     otoa@p 0042  
                                   otoa@t 0044                                     otoa@w 0046  
                                   stoa@i 002A                                     stoa@l 0032  
                                   stoa@p 0030                                     stoa@s 0022  
                                   stoa@w 002C                                     utoa@d 0032  
                                   utoa@i 0047                                     utoa@n 003F  
                                   utoa@p 003B                                     utoa@w 003D  
                                   status 0003                                     wtemp0 007E  
                          ?___fpclassifyf 0071                           __end_of_tolower 28A6  
                                   xtoa@c 0055                                     xtoa@d 0032  
                                   xtoa@i 0053                                     xtoa@n 004B  
                                   xtoa@p 0047                                     xtoa@w 0049  
                                   xtoa@x 003A                         _SCD_delay_setting 3830  
                         __end_of_strncmp 205E                           __end_of_toupper 28C8  
                        ___lodiv@dividend 0028                              ?_internal_16 0070  
                            _toupper$1608 0079                            __CFG_MCLRE$OFF 0000  
                         __initialization 0020     setTemperatureLimitsint@maxCharge_degC 0026  
                            __end_of_atoi 20FF                              __end_of_ctoa 2975  
                            __end_of_main 2916                              __end_of_dtoa 1EA7  
                            __end_of_otoa 1A5E                              __end_of_stoa 23C4  
                            __end_of_utoa 2800                              __end_of_xtoa 2000  
                __end_of_UV_delay_setting 3830                    ?_setShuntResistorValue 0071  
                  beginAFEcommunication@i 002D                     ?_send_I2C_controlByte 0071  
                          ??_EUSART_Write 0071                            __CFG_LPBOR$OFF 0000  
                       _ATmega328_address 3000                                    ??_atoi 0020  
                                  ??_ctoa 0033                                    ??_main 01DB  
                                  ??_dtoa 003A                                    ??_otoa 003A  
                                  ??_stoa 007A                                    ??_utoa 003A  
                                  ??_xtoa 003B                            __CFG_PLLEN$OFF 0000  
                        ___lodiv@quotient 0072                             ?_readRegister 0075  
                                  ?_fputc 0071                                    STR_101 385C  
                                  ?_fputs 007A                                    STR_111 3885  
                                  STR_121 3860                                    STR_106 385D  
                                  STR_130 3861                                    STR_114 3888  
                                  STR_123 3840                                    ?_myIsr 0070  
                                  STR_116 3888                                    STR_125 3840  
                                  STR_109 3885                                    STR_141 3864  
                                  STR_134 3841                                    STR_150 3867  
                                  STR_143 3864                                    STR_119 3860  
                                  STR_152 3867                                    STR_137 388B  
                                  STR_146 388E                                    STR_139 388B  
                                  STR_148 388E                          ___awdiv@dividend 0073  
                          __CFG_ZCDDIS$ON 0000                                    ?_putch 0070  
           __end_of_OCD_threshold_setting 3185                                    _RC1REG 0199  
               __end_of_SCD_delay_setting 3838                             vfpfcnvrt@done 012D  
                                  _TX1REG 019A                                    _SPLLEN 04CF  
                                  _SSPADD 0212                                    _TRISC6 0476  
                                  _TRISC7 0477                                    _SSPBUF 0211  
                                  u565lld 1A86                                    u576lld 266B  
                           _read_I2C_data 36D1                          __end_of___xxtofl 3000  
                          __CFG_PWRTE$OFF 0000                         __end_of_RGB_color 2862  
                            vfprintf@cfmt 00EC                                    ___flge 2CEB  
                                  ___fleq 2A69                                 ??___aldiv 0079  
                               ??___aodiv 0071                                 ??___fladd 0020  
                               ??___aomod 0071                                    ___wmul 376F  
                               ??___fldiv 0048                                 ??___awdiv 0075  
                               ??___flneg 0075                            __CFG_STVREN$ON 0000  
                               ??___awmod 0075                                 ??___flmul 002E  
                               ??___flsub 007A                                 ??___fltol 005E  
                               ??___lodiv 0071                          __end_of_init_I2C 36D1  
                               ??___lomod 0071                          __end_of_init_AFE 2944  
                                  _efgtoa 0058                          __end_of_init_RGB 3667  
               __end_of_ATmega328_address 3002                                    _floorf 256B  
                        ___awdiv@quotient 0078                     _beginAFEcommunication 224B  
                         ___awmod@divisor 0071                           ___awmod@counter 0076  
                                  pad@buf 0028                                    ctoa@fp 0030  
                                  dtoa@fp 0030                                    _strcpy 2822  
                                  _strlen 36F8                                    fputc@c 0071  
                                  fputs@c 0022                                    fputs@i 0023  
                                  fputs@s 0025                                 ??_isalpha 0073  
                               ??_isdigit 0073                        __size_of__Umul8_16 001F  
                         ___fpclassifyf@e 0020                           ___fpclassifyf@u 0022  
                         ___fpclassifyf@x 0071                                 ??_islower 0073  
                               ??_isspace 0073                                    otoa@fp 0030  
                          ??_readRegister 0079                                 ??_isupper 0073  
                                  stoa@cp 002E                                    stoa@fp 0020  
                                  putch@c 0070                          __end_of_vfprintf 29AA  
                                  utoa@fp 0030                          __end_of_snprintf 3755  
                               ??_tolower 0020                                    xtoa@fp 0030  
                               ??_strncmp 0077                                 ??_toupper 0020  
                              ___flge@ff1 005A                                ___flge@ff2 005E  
                         ??___fpclassifyf 0075                              ___xxtofl@arg 0022  
                            ___xxtofl@exp 0021                              ___xxtofl@val 0071  
                              ___fleq@ff1 0071                                ___fleq@ff2 0075  
                 __end_of__initialization 0054                            ?_read_I2C_data 0071  
                              ___flneg@f1 0071                                ___fltol@f1 005A  
                ?_setTemperatureLimitsint 0020  setTemperatureLimitsint@minDischarge_degC 0020  
                          __pcstackCOMMON 0070                    ??_send_I2C_controlByte 0075  
                            __pidataBANK3 0800                             __end_of_fputc 1061  
                           __end_of_fputs 28EE                             __end_of_myIsr 001E  
                            _cellVoltages 01A0                             __end_of_putch 0004  
                      _RGB_AWAIT_AFE_CONN 2862                       ?_RGB_AWAIT_AFE_CONN 0070  
                                 ??_fputc 0075                                   ??_fputs 0020  
                                 ??_myIsr 0070                                   ??_putch 0071  
       setShortCircuitProtection@delay_us 006A                                __pbssBANK3 01A0  
                              __pbssBANK4 0220                      __end_of_EUSART_Write 366F  
                      __size_of_init_GPIO 0038                        __size_of_initClock 0003  
                      __size_of_init_TMR1 000B                       statemachine@success 016F  
                       __end_of__Umul8_16 3800                                _efgtoa$954 00AF  
                              _efgtoa$963 00B5                                _efgtoa$955 00B1  
                              _efgtoa$964 00B7                                _efgtoa$965 00B9  
                              _efgtoa$959 00B3                                __pmaintext 28EE  
                    ??_RGB_AWAIT_AFE_CONN 0073                      __size_of_internal_16 0009  
         setShortCircuitProtection@scaler 00A0                                   ?___flge 005A  
                                 ?___fleq 0071                         ?_send_I2C_stopBit 0070  
                                 ?___wmul 0071     setTemperatureLimitsint@minCharge_degC 0024  
                         __CFG_PPS1WAY$ON 0000                ?_setShortCircuitProtection 0066  
                              __pintentry 0004                                   ?_efgtoa 00A0  
                  ?_beginAFEcommunication 0020                                   ?_floorf 005A  
                      ??_send_I2C_stopBit 0071                                   ?_strcpy 0071  
                                 ?_strlen 0071                   _shuntResistorValue_mOhm 01B6  
                               ?___xxtofl 0071            setShortCircuitProtection@i_790 00AA  
                      __size_of_vfpfcnvrt FC43                                   _PPSLOCK 0E0F  
                  __size_of_send_I2C_NACK 0009                          ___lomod@dividend 0028  
                         ??_read_I2C_data 0073                    __size_of_send_I2C_data 0009  
                               ?_init_I2C 0070                                 ?_init_AFE 0070  
                               ?_init_RGB 0070                  readRegister@recievedData 0079  
                 ??_setShuntResistorValue 0075                        __size_of_vsnprintf 007D  
                    __end_of_readRegister 29E0                                   ___aldiv 2E60  
                                 _adcGain 01CE                           __size_of___flge 007C  
                         __size_of___fleq 0049                                   ___aodiv 1A5E  
                                 ___fladd 11DB                                   ___aomod 2643  
                                 ___fldiv 1061                                   ___awdiv 2B53  
                                 ___flneg 369A                                   ___awmod 2A24  
                                 ___flmul 15D4                                   ___flsub 2803  
                                 ___fltol 2BA4                           __size_of___wmul 001B  
                                 ___lodiv 2D67                                   ___lomod 2C0A  
                               ?_vfprintf 00E7                           __size_of_efgtoa 067D  
                               ?_snprintf 015F                             _messageBuffer 2771  
         ??_AFE_getSetShortCircuitCurrent 0067                           __size_of_floorf 00D8  
                                 __ptext1 1B51                                   __ptext2 373D  
                                 __ptext3 2DE3                                   __ptext4 2975  
                                 __ptext5 13BD                                   __ptext6 1EA7  
                                 __ptext7 28A6                                   __ptext8 07E9  
                                 __ptext9 37A6                         __end_of_init_GPIO 083F  
                       __end_of_initClock 1804                         __end_of_init_TMR1 200C  
                         __size_of_strcpy 001F                           __size_of_strlen 0017  
                               _T1CONbits 0018                              __size_of_abs 0017  
      __size_of_AFE_getSetCurrentSenseRes 000A                              __size_of_pad 0051  
                                 _isalpha 37A6                                   _isdigit 36E1  
                              ??___xxtofl 0075                          ___awmod@dividend 0073  
              ?_AFE_getSetCurrentSenseRes 0071                          ___aldiv@dividend 0075  
                                 _islower 07E9                                   _isspace 378A  
                                 _isupper 3726                                   efgtoa@c 00A6  
                                 efgtoa@d 00C3                                   efgtoa@e 00DB  
                                 efgtoa@f 00A2                                   efgtoa@g 00D7  
                                 efgtoa@h 00CD                                   efgtoa@i 00D5  
                                 efgtoa@l 00D1                                   efgtoa@m 00BF  
                                 efgtoa@n 00DD                                   efgtoa@p 00C7  
                                 efgtoa@t 00BB                                   efgtoa@u 00DF  
                                 efgtoa@w 00CA                                   atoi@neg 0024  
                                 _tolower 2884                                   clrloop0 1002  
                                 _strncmp 200C                                   _toupper 28A6  
                    end_of_initialization 0054                                   floorf@e 0068  
                                 floorf@m 0064                                   floorf@u 006A  
                                 floorf@x 005A                                ??_init_I2C 0071  
                              ??_init_AFE 007A                                ??_init_RGB 0071  
                                 fputc@fp 0073                                   fputs@fp 007A  
                       _EUSART_Initialize 21A3                        ?_EUSART_Initialize 0026  
                       __end_of_vfpfcnvrt 1000                                efgtoa@mode 00CC  
                              efgtoa@sign 00C5                             _send_I2C_NACK 3691  
                        ___aldiv@quotient 0022                send_I2C_controlByte@RW_bit 0073  
                                 psplit$0 3C0083                                   psplit$1 830084  
                                 psplit$2 840085                                   psplit$3 850086  
                                 psplit$4 860087                                   psplit$5 870088  
                                 psplit$6 880089                                   psplit$7 89008A  
                           _send_I2C_data 3688                                 _RGB_color 2841  
                              ??_vfprintf 006E                        EUSART_Initialize@x 007A  
                              ??_snprintf 0169                                   strcpy@d 0077  
                                 strlen@a 0073                                   strcpy@s 0075  
                                 strlen@s 0071                       ??_EUSART_Initialize 002A  
                             ___fladd@grs 002B                          __CFG_FOSC$INTOSC 0000  
                           ___xxtofl@sign 0020                                 _TRISAbits 008C  
                               _TRISBbits 008D                                 _TRISCbits 008E  
                               _TRISEbits 0090                     __size_of_EUSART_Write 0008  
       __end_of_AFE_getSetCurrentSenseRes 36AD                         __end_of_vsnprintf 2E60  
                             ___fldiv@grs 0054                               ___fldiv@rem 004D  
           __end_of_SCD_threshold_setting 3820                                 _RXPPSbits 0E24  
                       _I2C_writeRegister 37C3                               ___flmul@grs 0034  
               __end_of_EUSART_Initialize 224B                     _OCD_threshold_setting 3165  
                      ?_I2C_writeRegister 0075          beginAFEcommunication@commSuccess 002B  
                          ?_send_I2C_NACK 0070                  readRegister@slaveAddress 0075  
                          ?_send_I2C_data 0071                       ??_I2C_writeRegister 007B  
                              ?_RGB_color 0071                            __end_of___flge 2D67  
                          __end_of___fleq 2AB2                               vfpfcnvrt@ap 00E6  
                             vfpfcnvrt@cp 012C                               vfpfcnvrt@ct 0135  
                             vfpfcnvrt@fp 00E3                               vfpfcnvrt@ll 013C  
                          __end_of___wmul 378A                               vfpfcnvrt@vp 0144  
                          __end_of_efgtoa 06D5                              _EUSART_Write 3667  
                          __end_of_floorf 2643               I2C_writeRegister@regAddress 0077  
                              floorf@F524 01AA             setShuntResistorValue@res_mOhm 0071  
        __size_of_setTemperatureLimitsint 0044                            __end_of_strcpy 2841  
                          __end_of_strlen 370F     __end_of_AFE_getSetShortCircuitCurrent 2B02  
  __size_of_AFE_getSetShortCircuitCurrent 0050             _AFE_getSetShortCircuitCurrent 2AB2  
                     start_initialization 0020                           ___lodiv@divisor 0020  
                         ___lodiv@counter 007A                         pnum$text5_split_1 0083  
                       pnum$text5_split_2 0084                         pnum$text5_split_3 0085  
                       pnum$text5_split_4 0086                         pnum$text5_split_5 0087  
                       pnum$text5_split_6 0088                         pnum$text5_split_7 0089  
                       pnum$text5_split_8 008A                             ?_statemachine 0070  
                             __end_of_abs 3726                               __end_of_pad 2B53  
                       _minCellTempCharge 01CA                      _maxCellTempDischarge 01C4  
                    _minCellTempDischarge 01C8                 __end_of_I2C_writeRegister 37E1  
                   __end_of___fpclassifyf 2CEB                         _EUSART_Write_Text 3755  
                   __size_of_readRegister 0036                        ?_EUSART_Write_Text 0072  
                 ??_beginAFEcommunication 0022                               vfprintf@fmt 00E9  
                                ??___flge 0062                                  ??___fleq 0020  
                                ??___wmul 0075                                  ??_efgtoa 00A7  
                               __Umul8_16 37E1               ??_setShortCircuitProtection 006C  
                             __pdataBANK3 01D4                                  ??_floorf 005E  
                     ??_EUSART_Write_Text 0074             __size_of_send_I2C_controlByte 000A  
                                ??_strcpy 0073                                  ??_strlen 0073  
                               ___fladd@a 0075                                 ___fladd@b 0071  
                            vsnprintf@cnt 0157                              vsnprintf@fmt 0152  
                               ___fldiv@a 0040                                 ___fldiv@b 0044  
                             __pbssBIGRAM 2771                                 _adcOffset 01CC  
                               ___flmul@a 002A                                 ___flmul@b 0026  
                             __pbssCOMMON 007C                                 ___flsub@a 0040  
                               ___flsub@b 0044                            ??_statemachine 016D  
                               ___latbits 0003          send_I2C_controlByte@BlockAddress 0071  
                              myIsr@count 01D1                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                             __pcstackBANK2 0120  
                           __pcstackBANK3 01DB                          ___aodiv@dividend 0028  
               __size_of_send_I2C_stopBit 0008                               snprintf@fmt 0163  
                       __size_of___xxtofl 0096                              _readRegister 29AA  
setTemperatureLimitsint@maxDischarge_degC 0022                 __end_of_EUSART_Write_Text 376F  
              __size_of_EUSART_Initialize 00A8                             ??_internal_16 0071  
                               _atoi$1470 0026                                 _atoi$1471 002A  
                               _atoi$1472 0028                          _OV_delay_setting 3820  
                       __size_of_init_I2C 0010                     I2C_writeRegister@data 0079  
                         ??_send_I2C_NACK 0071                         __size_of_init_AFE 002E  
                       __size_of_init_RGB 0005                         _send_I2C_startBit 366F  
                         ??_send_I2C_data 0073               __size_of_RGB_AWAIT_AFE_CONN 0022  
          __size_of_setShuntResistorValue 000A                                  ?___aldiv 0071  
                                ?___aodiv 0020                        ?_send_I2C_startBit 0070  
                                ?___fladd 0071             __end_of_setShuntResistorValue 36C1  
                                ?___aomod 0020                                  ?___fldiv 0040  
                                ?___awdiv 0071                          ___aodiv@quotient 0074  
                                ?___flneg 0071                                  ?___awmod 0071  
                                ?___flmul 0026                                  ?___flsub 0040  
                                ?___fltol 005A                                  ?___lodiv 0020  
                                ?___lomod 0020                               ??_RGB_color 0073  
                              ?__Umul8_16 0071                 EUSART_Initialize@baudrate 0026  
                       __size_of_vfprintf 0035                       ??_send_I2C_startBit 0071  
                       __size_of_snprintf 0018            BQ76920@shuntResistorValue_mOhm 01B2  
                         ___lomod@divisor 0020                           ___lomod@counter 0072  
                                ?_isalpha 0071                                  ?_isdigit 0071  
                                ?_islower 0071                                  ?_isspace 0071  
             ??_AFE_getSetCurrentSenseRes 0075                                 _init_GPIO 0807  
                                ?_isupper 0071                                 _initClock 1801  
                               _init_TMR1 2001                                 _currState 01D3  
                                ?_tolower 0077                 _setShortCircuitProtection 06D5  
              __size_of_I2C_writeRegister 001E                            __size_of_fputc 0054  
                          __size_of_fputs 0026                            __size_of_myIsr 001A  
                                ?_strncmp 0071            ?_AFE_getSetShortCircuitCurrent 0063  
                                ?_toupper 0077                            __size_of_putch 0001  
                         ___aldiv@divisor 0071                     __end_of_read_I2C_data 36E1  
                         ___aldiv@counter 0020                            ___wmul@product 0075  
                                _LATAbits 010C                                  _LATEbits 0110  
               __end_of_send_I2C_startBit 3677                                 clear_ram0 1001  
                               _tmr1_flag 01D2                                  _PIE1bits 0091  
                                _PIR1bits 0011                setShortCircuitProtection@i 00A8  
                     __end_of_internal_16 3688                                 _vfpfcnvrt 13BD  
                               _xtoa$1001 0043                                 _xtoa$1002 0045  
                       ___wmul@multiplier 0071                   _setTemperatureLimitsint 29E0  
                              ?_init_GPIO 0070                                ?_initClock 0070  
                              ?_init_TMR1 0070                              _isspace$1510 0075  
                   send_I2C_data@databyte 0071                                vfpfcnvrt@c 0145  
                              vfpfcnvrt@f 0138                __size_of_EUSART_Write_Text 001A  
                               _vsnprintf 2DE3                         _OCD_delay_setting 3800  
               _AFE_getSetCurrentSenseRes 36A3                      __end_of_statemachine 1C4C  
                              vfprintf@ap 00EB                                vfprintf@fp 00E7  
                             ??__Umul8_16 0073                          __size_of___aldiv 0082  
                        __size_of___aodiv 00F3                          __size_of___fladd 01E2  
                        __size_of___aomod 00DC                          __size_of___fldiv 017A  
                        __size_of___awdiv 0051                          __size_of___flneg 0009  
          _setShortCircuitProtection$1842 00A4                          __size_of___awmod 0045  
                             vsnprintf@ap 0154                          __size_of___flmul 022C  
                        __size_of___flsub 001F                          __size_of___fltol 0066  
                  readRegister@regAddress 0077                          __size_of___lodiv 007C  
                        __size_of___lomod 0069                                ?_vfpfcnvrt 00E3  
                              snprintf@ap 016C                           ___aodiv@divisor 0020  
                         ___aodiv@counter 0072                                _ANSELBbits 018D  
                              _ANSELCbits 018E                        ___fpclassifyf@F463 01AE  
                                ___xxtofl 2F6A                          __size_of_isalpha 001D  
                        __size_of_isdigit 0017                                  _dtoa$931 003D  
                        _send_I2C_stopBit 3677                          __size_of_islower 0017  
                        __size_of_isspace 001C                                  __ptext10 271F  
                                __ptext11 2C0A                                  __ptext20 256B  
                                __ptext12 2D67                                  __ptext21 2C73  
                                __ptext13 200C                                  __ptext30 2643  
                                __ptext22 2803                                  __ptext14 22FF  
                                __ptext31 1A5E                                  __ptext23 11DB  
                                __ptext15 196D                                  __ptext40 36E1  
                                __ptext32 2944                                  __ptext24 369A  
                                __ptext16 0058                                  __ptext41 2916  
                                __ptext33 2B02                                  __ptext25 2A69  
                                __ptext17 2884                                  __ptext50 29AA  
                                __ptext42 29E0                                  __ptext34 36F8  
                                __ptext26 2A24                                  __ptext18 3726  
                                __ptext51 3691                                  __ptext43 376F  
                                __ptext35 28C8                                  __ptext27 2B53  
                                __ptext19 2822                                  __ptext60 3755  
                                __ptext52 36D1                                  __ptext44 36B7  
                                __ptext36 100D                                  __ptext28 1D54  
                                __ptext61 3667                                  __ptext53 37C3  
                                __ptext45 06D5                                  __ptext37 0003  
                                __ptext29 370F                                  __ptext70 0807  
                                __ptext62 2AB2                                  __ptext54 3677  
                                __ptext46 15D4                                  __ptext38 205E  
                                __ptext71 1801                                  __ptext63 2F6A  
                                __ptext55 366F                                  __ptext47 37E1  
                                __ptext39 378A                                  __ptext72 367F  
                                __ptext64 2BA4                                  __ptext56 3688  
                                __ptext48 2CEB                                  __ptext73 21A3  
                                __ptext65 1061                                  __ptext57 36AD  
                                __ptext49 224B                                  __ptext74 2E60  
                                __ptext66 36A3                                  __ptext58 2862  
                                __ptext67 2001                                  __ptext59 2841  
                                __ptext68 3662                                  __ptext69 36C1  
                        __size_of_isupper 0017                          __size_of_tolower 0022  
               __end_of_OCD_delay_setting 3810                                strcpy@dest 0078  
                        __size_of_strncmp 0052                          __size_of_toupper 0022  
                              ?_vsnprintf 014E                                  _init_I2C 36C1  
                                _init_AFE 2916                                  _init_RGB 3662  
                           __size_of_atoi 00A1                             __size_of_ctoa 0031  
                           __size_of_main 0028                             __size_of_dtoa 0153  
                           _SSPDATPPSbits 0E21                                 pnum$text5 003C  
                           __size_of_otoa 00F1                     _SCD_threshold_setting 3810  
                           __size_of_stoa 00C5                             __size_of_utoa 00E1  
              __size_of_send_I2C_startBit 0008                             __size_of_xtoa 0159  
                             _internal_16 367F                                _RB2PPSbits 0E9A  
                              _RC1STAbits 019D                                  efgtoa@fp 00A0  
                                efgtoa@ne 00C1                                  efgtoa@pp 00BD  
                                efgtoa@ou 00AB                                 stoa@F1174 01D4  
                              _RC4PPSbits 0EA4            __size_of_beginAFEcommunication 00B4  
                           _SSPCLKPPSbits 0E20             __end_of_beginAFEcommunication 22FF  
                                int$flags 007E                                _RC5PPSbits 0EA5  
                                _protect1 01D0                 ??_setTemperatureLimitsint 0077  
                                _vfprintf 2975                                  _snprintf 373D  
                        ___aomod@dividend 0028                  __end_of_OV_delay_setting 3828  
                          _vfpfcnvrt$1016 012F                            _vfpfcnvrt$1017 0131  
                          _vfpfcnvrt$1043 0133                                _INTCONbits 000B  
                             ??_init_GPIO 0071                               ??_initClock 0071  
                             ??_init_TMR1 0071                            __pstringtext10 3092  
                          __pstringtext11 30BE                            __pstringtext20 384C  
                          __pstringtext12 30E9                            __pstringtext21 3850  
                          __pstringtext13 3113                            __pstringtext30 3870  
                          __pstringtext22 3854                            __pstringtext14 313D  
                          __pstringtext31 3873                            __pstringtext23 3858  
                          __pstringtext15 3838                            __pstringtext40 388E  
                          __pstringtext32 3876                            __pstringtext24 385C  
                          __pstringtext16 383C                            __pstringtext41 0000  
                          __pstringtext33 3879                            __pstringtext25 3860  
                          __pstringtext17 3840                            __pstringtext34 387C  
                          __pstringtext26 3864                            __pstringtext18 3844  
                          __pstringtext35 387F                            __pstringtext27 3867  
                          __pstringtext19 3848                            __pstringtext36 3882  
                          __pstringtext28 386A                            __pstringtext37 3885  
                          __pstringtext29 386D                            __pstringtext38 3888  
                          __pstringtext39 388B                                  isalpha@c 0071  
                                isdigit@c 0071                                vsnprintf@f 0159  
                              vsnprintf@n 0150                                vsnprintf@s 014E  
                        _UV_delay_setting 3828                                 snprintf@n 0161  
                               snprintf@s 015F              __end_of_send_I2C_controlByte 36B7  
                                intlevel1 0000       setShortCircuitProtection@current_mA 0066  
                                islower@c 0071                                  isspace@c 0071  
                       __CFG_CLKOUTEN$OFF 0000                                 strcpy@src 0071  
                             _PPSLOCKbits 0E0F                                  isupper@c 0071  
      __size_of_setShortCircuitProtection 0114                                 strncmp@_l 0071  
                               strncmp@_r 0073                               efgtoa@nmode 00C9  
                       _maxCellTempCharge 01C6                           ___aomod@divisor 0020  
                             ??_vfpfcnvrt 0120                                  stoa@nuls 0023  
                         ___aomod@counter 0072                             __pstringtext1 3165  
                           __pstringtext2 3800                             __pstringtext3 3810  
                           __pstringtext4 3820                             __pstringtext5 3828  
                           __pstringtext6 3830                             __pstringtext7 3000  
                           __pstringtext8 3037                             __pstringtext9 3065  
                  __Umul8_16@multiplicand 0071                                  tolower@c 0077  
                          _vsnprintf$1645 0155                    __size_of___fpclassifyf 0078  
                                strncmp@l 0078                                  strncmp@n 0075  
                                strncmp@r 007A                                  toupper@c 0077  
                   EUSART_Write_Text@text 0072                              ___aldiv@sign 0021  
                             _SSPCON2bits 0216                             ___fladd@signs 0028  
         __end_of_setTemperatureLimitsint 2A24                        EUSART_Write@txData 0071  
                            ___aodiv@sign 0073                               ??_vsnprintf 00EE  
                            ___fladd@aexp 0029                              ___fladd@bexp 002A  
                   __size_of_statemachine 00FB                               _toggleColor 007C  
                    __Umul8_16@multiplier 0079                                _SSPCONbits 0215  
              __end_of_RGB_AWAIT_AFE_CONN 2884                              ___aomod@sign 0073  
                      EUSART_Write_Text@i 0075                     __end_of_send_I2C_NACK 369A  
                       __Umul8_16@product 0075  
