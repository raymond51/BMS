

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar 07 23:31:57 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	cinit,global,class=CODE,merge=1,delta=2
    50                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    51                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    52                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    53                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    54                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    55                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    56                           	psect	clrtext,global,class=CODE,delta=2
    57                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    58                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    59                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    60                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    61                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    62                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    63                           	psect	text1,local,class=CODE,merge=1,delta=2
    64                           	psect	text2,local,class=CODE,merge=1,delta=2
    65                           	psect	text3,local,class=CODE,merge=1,delta=2
    66                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text6,local,class=CODE,merge=1,delta=2
    69                           	psect	text7,local,class=CODE,merge=1,delta=2
    70                           	psect	text8,local,class=CODE,merge=1,delta=2
    71                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text13,local,class=CODE,merge=1,delta=2
    76                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    77                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text17,local,class=CODE,merge=1,delta=2
    80                           	psect	text18,local,class=CODE,merge=1,delta=2
    81                           	psect	text19,local,class=CODE,merge=1,delta=2
    82                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text23,local,class=CODE,merge=1,delta=2
    86                           	psect	text24,local,class=CODE,merge=1,delta=2
    87                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text32,local,class=CODE,merge=1,delta=2
    95                           	psect	text33,local,class=CODE,merge=1,delta=2
    96                           	psect	text34,local,class=CODE,merge=1,delta=2
    97                           	psect	text35,local,class=CODE,merge=1,delta=2
    98                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    99                           	psect	text37,local,class=CODE,merge=1,delta=2
   100                           	psect	text38,local,class=CODE,merge=1,delta=2
   101                           	psect	text39,local,class=CODE,merge=1,delta=2
   102                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text41,local,class=CODE,merge=1,delta=2
   104                           	psect	text42,local,class=CODE,merge=1,delta=2
   105                           	psect	text43,local,class=CODE,merge=1,delta=2
   106                           	psect	text44,local,class=CODE,merge=1,delta=2
   107                           	psect	text45,local,class=CODE,merge=1,delta=2
   108                           	psect	text46,local,class=CODE,merge=1,delta=2
   109                           	psect	text47,local,class=CODE,merge=1,delta=2
   110                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   111                           	psect	text49,local,class=CODE,merge=1,delta=2
   112                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text51,local,class=CODE,merge=1,delta=2,group=1
   114                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   115                           	psect	text53,local,class=CODE,merge=1,delta=2
   116                           	psect	text54,local,class=CODE,merge=1,delta=2,group=1
   117                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
   118                           	psect	text56,local,class=CODE,merge=1,delta=2,group=1
   119                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
   120                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text59,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text60,local,class=CODE,merge=1,delta=2
   123                           	psect	text61,local,class=CODE,merge=1,delta=2
   124                           	psect	text62,local,class=CODE,merge=1,delta=2
   125                           	psect	text63,local,class=CODE,merge=1,delta=2
   126                           	psect	text64,local,class=CODE,merge=1,delta=2
   127                           	psect	text65,local,class=CODE,merge=1,delta=2
   128                           	psect	text66,local,class=CODE,merge=1,delta=2
   129                           	psect	text67,local,class=CODE,merge=1,delta=2
   130                           	psect	text68,local,class=CODE,merge=1,delta=2
   131                           	psect	text69,local,class=CODE,merge=1,delta=2
   132                           	psect	text70,local,class=CODE,merge=1,delta=2
   133                           	psect	text71,local,class=CODE,merge=1,delta=2
   134                           	psect	text72,local,class=CODE,merge=1,delta=2
   135                           	psect	text73,local,class=CODE,merge=1,delta=2
   136                           	psect	text74,local,class=CODE,merge=1,delta=2
   137                           	psect	text75,local,class=CODE,merge=1,delta=2
   138                           	psect	text76,local,class=CODE,merge=1,delta=2
   139                           	psect	text77,local,class=CODE,merge=1,delta=2
   140                           	psect	text78,local,class=CODE,merge=1,delta=2,group=1
   141                           	psect	intentry,global,class=CODE,delta=2
   142                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   143                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   144                           	dabs	1,0xCA0,32
   145                           	dabs	1,0xC20,80
   146                           	dabs	1,0xBE1,15
   147                           	dabs	1,0x2771,0,_messageBuffer
   148                           	dabs	1,0x7E,2
   149  0000                     
   150                           ; Version 2.05
   151                           ; Generated 20/12/2018 GMT
   152                           ; 
   153                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   154                           ; All rights reserved.
   155                           ; 
   156                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   157                           ; 
   158                           ; Redistribution and use in source and binary forms, with or without modification, are
   159                           ; permitted provided that the following conditions are met:
   160                           ; 
   161                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   162                           ;        conditions and the following disclaimer.
   163                           ; 
   164                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   165                           ;        of conditions and the following disclaimer in the documentation and/or other
   166                           ;        materials provided with the distribution.
   167                           ; 
   168                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   169                           ;        software without specific prior written permission.
   170                           ; 
   171                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   172                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   173                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   174                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   175                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   176                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   177                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   178                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   179                           ; 
   180                           ; 
   181                           ; Code-generator required, PIC16F1719 Definitions
   182                           ; 
   183                           ; SFR Addresses
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  008F                     	;# 
   217  0090                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0110                     	;# 
   238  0111                     	;# 
   239  0112                     	;# 
   240  0113                     	;# 
   241  0114                     	;# 
   242  0115                     	;# 
   243  0116                     	;# 
   244  0117                     	;# 
   245  0118                     	;# 
   246  0119                     	;# 
   247  011A                     	;# 
   248  011B                     	;# 
   249  011B                     	;# 
   250  011C                     	;# 
   251  018C                     	;# 
   252  018D                     	;# 
   253  018E                     	;# 
   254  018F                     	;# 
   255  0190                     	;# 
   256  0191                     	;# 
   257  0191                     	;# 
   258  0192                     	;# 
   259  0193                     	;# 
   260  0193                     	;# 
   261  0194                     	;# 
   262  0195                     	;# 
   263  0196                     	;# 
   264  0197                     	;# 
   265  0199                     	;# 
   266  0199                     	;# 
   267  0199                     	;# 
   268  019A                     	;# 
   269  019A                     	;# 
   270  019A                     	;# 
   271  019B                     	;# 
   272  019B                     	;# 
   273  019B                     	;# 
   274  019B                     	;# 
   275  019B                     	;# 
   276  019C                     	;# 
   277  019C                     	;# 
   278  019C                     	;# 
   279  019D                     	;# 
   280  019D                     	;# 
   281  019D                     	;# 
   282  019E                     	;# 
   283  019E                     	;# 
   284  019E                     	;# 
   285  019F                     	;# 
   286  019F                     	;# 
   287  019F                     	;# 
   288  019F                     	;# 
   289  019F                     	;# 
   290  020C                     	;# 
   291  020D                     	;# 
   292  020E                     	;# 
   293  020F                     	;# 
   294  0210                     	;# 
   295  0211                     	;# 
   296  0211                     	;# 
   297  0212                     	;# 
   298  0212                     	;# 
   299  0213                     	;# 
   300  0213                     	;# 
   301  0214                     	;# 
   302  0214                     	;# 
   303  0215                     	;# 
   304  0215                     	;# 
   305  0215                     	;# 
   306  0215                     	;# 
   307  0216                     	;# 
   308  0216                     	;# 
   309  0217                     	;# 
   310  0217                     	;# 
   311  028C                     	;# 
   312  028D                     	;# 
   313  028E                     	;# 
   314  028F                     	;# 
   315  0290                     	;# 
   316  0291                     	;# 
   317  0291                     	;# 
   318  0292                     	;# 
   319  0293                     	;# 
   320  0293                     	;# 
   321  0298                     	;# 
   322  0298                     	;# 
   323  0299                     	;# 
   324  029A                     	;# 
   325  029A                     	;# 
   326  029E                     	;# 
   327  030C                     	;# 
   328  030D                     	;# 
   329  030E                     	;# 
   330  030F                     	;# 
   331  0310                     	;# 
   332  038C                     	;# 
   333  038D                     	;# 
   334  038E                     	;# 
   335  038F                     	;# 
   336  0390                     	;# 
   337  0391                     	;# 
   338  0392                     	;# 
   339  0393                     	;# 
   340  0394                     	;# 
   341  0395                     	;# 
   342  0396                     	;# 
   343  0397                     	;# 
   344  0398                     	;# 
   345  0399                     	;# 
   346  039D                     	;# 
   347  039E                     	;# 
   348  039F                     	;# 
   349  0415                     	;# 
   350  0416                     	;# 
   351  0417                     	;# 
   352  041C                     	;# 
   353  041D                     	;# 
   354  041E                     	;# 
   355  0498                     	;# 
   356  0498                     	;# 
   357  0499                     	;# 
   358  049A                     	;# 
   359  049B                     	;# 
   360  049B                     	;# 
   361  049C                     	;# 
   362  049D                     	;# 
   363  049E                     	;# 
   364  049F                     	;# 
   365  0511                     	;# 
   366  0515                     	;# 
   367  0617                     	;# 
   368  0618                     	;# 
   369  0619                     	;# 
   370  0619                     	;# 
   371  061A                     	;# 
   372  061B                     	;# 
   373  061C                     	;# 
   374  061C                     	;# 
   375  0691                     	;# 
   376  0692                     	;# 
   377  0693                     	;# 
   378  0694                     	;# 
   379  0695                     	;# 
   380  0696                     	;# 
   381  0697                     	;# 
   382  0698                     	;# 
   383  0699                     	;# 
   384  069A                     	;# 
   385  069B                     	;# 
   386  069C                     	;# 
   387  069D                     	;# 
   388  069E                     	;# 
   389  069F                     	;# 
   390  0E0F                     	;# 
   391  0E10                     	;# 
   392  0E11                     	;# 
   393  0E12                     	;# 
   394  0E13                     	;# 
   395  0E14                     	;# 
   396  0E15                     	;# 
   397  0E17                     	;# 
   398  0E20                     	;# 
   399  0E21                     	;# 
   400  0E22                     	;# 
   401  0E24                     	;# 
   402  0E25                     	;# 
   403  0E28                     	;# 
   404  0E29                     	;# 
   405  0E2A                     	;# 
   406  0E2B                     	;# 
   407  0E90                     	;# 
   408  0E91                     	;# 
   409  0E92                     	;# 
   410  0E93                     	;# 
   411  0E94                     	;# 
   412  0E95                     	;# 
   413  0E96                     	;# 
   414  0E97                     	;# 
   415  0E98                     	;# 
   416  0E99                     	;# 
   417  0E9A                     	;# 
   418  0E9B                     	;# 
   419  0E9C                     	;# 
   420  0E9D                     	;# 
   421  0E9E                     	;# 
   422  0E9F                     	;# 
   423  0EA0                     	;# 
   424  0EA1                     	;# 
   425  0EA2                     	;# 
   426  0EA3                     	;# 
   427  0EA4                     	;# 
   428  0EA5                     	;# 
   429  0EA6                     	;# 
   430  0EA7                     	;# 
   431  0EA8                     	;# 
   432  0EA9                     	;# 
   433  0EAA                     	;# 
   434  0EAB                     	;# 
   435  0EAC                     	;# 
   436  0EAD                     	;# 
   437  0EAE                     	;# 
   438  0EAF                     	;# 
   439  0EB0                     	;# 
   440  0EB1                     	;# 
   441  0EB2                     	;# 
   442  0F0F                     	;# 
   443  0F10                     	;# 
   444  0F11                     	;# 
   445  0F12                     	;# 
   446  0F13                     	;# 
   447  0F14                     	;# 
   448  0F15                     	;# 
   449  0F16                     	;# 
   450  0F17                     	;# 
   451  0F18                     	;# 
   452  0F19                     	;# 
   453  0F1A                     	;# 
   454  0F1B                     	;# 
   455  0F1C                     	;# 
   456  0F1D                     	;# 
   457  0F1E                     	;# 
   458  0F1F                     	;# 
   459  0F20                     	;# 
   460  0F21                     	;# 
   461  0F22                     	;# 
   462  0F23                     	;# 
   463  0F24                     	;# 
   464  0F25                     	;# 
   465  0F26                     	;# 
   466  0F27                     	;# 
   467  0F28                     	;# 
   468  0F29                     	;# 
   469  0F2A                     	;# 
   470  0F2B                     	;# 
   471  0F2C                     	;# 
   472  0F2D                     	;# 
   473  0F2E                     	;# 
   474  0F2F                     	;# 
   475  0F30                     	;# 
   476  0F31                     	;# 
   477  0F32                     	;# 
   478  0F33                     	;# 
   479  0F34                     	;# 
   480  0F35                     	;# 
   481  0F36                     	;# 
   482  0F37                     	;# 
   483  0FE4                     	;# 
   484  0FE5                     	;# 
   485  0FE6                     	;# 
   486  0FE7                     	;# 
   487  0FE8                     	;# 
   488  0FE9                     	;# 
   489  0FEA                     	;# 
   490  0FEB                     	;# 
   491  0FED                     	;# 
   492  0FEE                     	;# 
   493  0FEF                     	;# 
   494  0000                     	;# 
   495  0001                     	;# 
   496  0002                     	;# 
   497  0003                     	;# 
   498  0004                     	;# 
   499  0005                     	;# 
   500  0006                     	;# 
   501  0007                     	;# 
   502  0008                     	;# 
   503  0009                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000F                     	;# 
   510  0010                     	;# 
   511  0011                     	;# 
   512  0012                     	;# 
   513  0013                     	;# 
   514  0015                     	;# 
   515  0016                     	;# 
   516  0016                     	;# 
   517  0017                     	;# 
   518  0018                     	;# 
   519  0019                     	;# 
   520  001A                     	;# 
   521  001B                     	;# 
   522  001C                     	;# 
   523  008C                     	;# 
   524  008D                     	;# 
   525  008E                     	;# 
   526  008F                     	;# 
   527  0090                     	;# 
   528  0091                     	;# 
   529  0092                     	;# 
   530  0093                     	;# 
   531  0095                     	;# 
   532  0096                     	;# 
   533  0097                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009A                     	;# 
   537  009B                     	;# 
   538  009B                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  0110                     	;# 
   548  0111                     	;# 
   549  0112                     	;# 
   550  0113                     	;# 
   551  0114                     	;# 
   552  0115                     	;# 
   553  0116                     	;# 
   554  0117                     	;# 
   555  0118                     	;# 
   556  0119                     	;# 
   557  011A                     	;# 
   558  011B                     	;# 
   559  011B                     	;# 
   560  011C                     	;# 
   561  018C                     	;# 
   562  018D                     	;# 
   563  018E                     	;# 
   564  018F                     	;# 
   565  0190                     	;# 
   566  0191                     	;# 
   567  0191                     	;# 
   568  0192                     	;# 
   569  0193                     	;# 
   570  0193                     	;# 
   571  0194                     	;# 
   572  0195                     	;# 
   573  0196                     	;# 
   574  0197                     	;# 
   575  0199                     	;# 
   576  0199                     	;# 
   577  0199                     	;# 
   578  019A                     	;# 
   579  019A                     	;# 
   580  019A                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019B                     	;# 
   585  019B                     	;# 
   586  019C                     	;# 
   587  019C                     	;# 
   588  019C                     	;# 
   589  019D                     	;# 
   590  019D                     	;# 
   591  019D                     	;# 
   592  019E                     	;# 
   593  019E                     	;# 
   594  019E                     	;# 
   595  019F                     	;# 
   596  019F                     	;# 
   597  019F                     	;# 
   598  019F                     	;# 
   599  019F                     	;# 
   600  020C                     	;# 
   601  020D                     	;# 
   602  020E                     	;# 
   603  020F                     	;# 
   604  0210                     	;# 
   605  0211                     	;# 
   606  0211                     	;# 
   607  0212                     	;# 
   608  0212                     	;# 
   609  0213                     	;# 
   610  0213                     	;# 
   611  0214                     	;# 
   612  0214                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0215                     	;# 
   617  0216                     	;# 
   618  0216                     	;# 
   619  0217                     	;# 
   620  0217                     	;# 
   621  028C                     	;# 
   622  028D                     	;# 
   623  028E                     	;# 
   624  028F                     	;# 
   625  0290                     	;# 
   626  0291                     	;# 
   627  0291                     	;# 
   628  0292                     	;# 
   629  0293                     	;# 
   630  0293                     	;# 
   631  0298                     	;# 
   632  0298                     	;# 
   633  0299                     	;# 
   634  029A                     	;# 
   635  029A                     	;# 
   636  029E                     	;# 
   637  030C                     	;# 
   638  030D                     	;# 
   639  030E                     	;# 
   640  030F                     	;# 
   641  0310                     	;# 
   642  038C                     	;# 
   643  038D                     	;# 
   644  038E                     	;# 
   645  038F                     	;# 
   646  0390                     	;# 
   647  0391                     	;# 
   648  0392                     	;# 
   649  0393                     	;# 
   650  0394                     	;# 
   651  0395                     	;# 
   652  0396                     	;# 
   653  0397                     	;# 
   654  0398                     	;# 
   655  0399                     	;# 
   656  039D                     	;# 
   657  039E                     	;# 
   658  039F                     	;# 
   659  0415                     	;# 
   660  0416                     	;# 
   661  0417                     	;# 
   662  041C                     	;# 
   663  041D                     	;# 
   664  041E                     	;# 
   665  0498                     	;# 
   666  0498                     	;# 
   667  0499                     	;# 
   668  049A                     	;# 
   669  049B                     	;# 
   670  049B                     	;# 
   671  049C                     	;# 
   672  049D                     	;# 
   673  049E                     	;# 
   674  049F                     	;# 
   675  0511                     	;# 
   676  0515                     	;# 
   677  0617                     	;# 
   678  0618                     	;# 
   679  0619                     	;# 
   680  0619                     	;# 
   681  061A                     	;# 
   682  061B                     	;# 
   683  061C                     	;# 
   684  061C                     	;# 
   685  0691                     	;# 
   686  0692                     	;# 
   687  0693                     	;# 
   688  0694                     	;# 
   689  0695                     	;# 
   690  0696                     	;# 
   691  0697                     	;# 
   692  0698                     	;# 
   693  0699                     	;# 
   694  069A                     	;# 
   695  069B                     	;# 
   696  069C                     	;# 
   697  069D                     	;# 
   698  069E                     	;# 
   699  069F                     	;# 
   700  0E0F                     	;# 
   701  0E10                     	;# 
   702  0E11                     	;# 
   703  0E12                     	;# 
   704  0E13                     	;# 
   705  0E14                     	;# 
   706  0E15                     	;# 
   707  0E17                     	;# 
   708  0E20                     	;# 
   709  0E21                     	;# 
   710  0E22                     	;# 
   711  0E24                     	;# 
   712  0E25                     	;# 
   713  0E28                     	;# 
   714  0E29                     	;# 
   715  0E2A                     	;# 
   716  0E2B                     	;# 
   717  0E90                     	;# 
   718  0E91                     	;# 
   719  0E92                     	;# 
   720  0E93                     	;# 
   721  0E94                     	;# 
   722  0E95                     	;# 
   723  0E96                     	;# 
   724  0E97                     	;# 
   725  0E98                     	;# 
   726  0E99                     	;# 
   727  0E9A                     	;# 
   728  0E9B                     	;# 
   729  0E9C                     	;# 
   730  0E9D                     	;# 
   731  0E9E                     	;# 
   732  0E9F                     	;# 
   733  0EA0                     	;# 
   734  0EA1                     	;# 
   735  0EA2                     	;# 
   736  0EA3                     	;# 
   737  0EA4                     	;# 
   738  0EA5                     	;# 
   739  0EA6                     	;# 
   740  0EA7                     	;# 
   741  0EA8                     	;# 
   742  0EA9                     	;# 
   743  0EAA                     	;# 
   744  0EAB                     	;# 
   745  0EAC                     	;# 
   746  0EAD                     	;# 
   747  0EAE                     	;# 
   748  0EAF                     	;# 
   749  0EB0                     	;# 
   750  0EB1                     	;# 
   751  0EB2                     	;# 
   752  0F0F                     	;# 
   753  0F10                     	;# 
   754  0F11                     	;# 
   755  0F12                     	;# 
   756  0F13                     	;# 
   757  0F14                     	;# 
   758  0F15                     	;# 
   759  0F16                     	;# 
   760  0F17                     	;# 
   761  0F18                     	;# 
   762  0F19                     	;# 
   763  0F1A                     	;# 
   764  0F1B                     	;# 
   765  0F1C                     	;# 
   766  0F1D                     	;# 
   767  0F1E                     	;# 
   768  0F1F                     	;# 
   769  0F20                     	;# 
   770  0F21                     	;# 
   771  0F22                     	;# 
   772  0F23                     	;# 
   773  0F24                     	;# 
   774  0F25                     	;# 
   775  0F26                     	;# 
   776  0F27                     	;# 
   777  0F28                     	;# 
   778  0F29                     	;# 
   779  0F2A                     	;# 
   780  0F2B                     	;# 
   781  0F2C                     	;# 
   782  0F2D                     	;# 
   783  0F2E                     	;# 
   784  0F2F                     	;# 
   785  0F30                     	;# 
   786  0F31                     	;# 
   787  0F32                     	;# 
   788  0F33                     	;# 
   789  0F34                     	;# 
   790  0F35                     	;# 
   791  0F36                     	;# 
   792  0F37                     	;# 
   793  0FE4                     	;# 
   794  0FE5                     	;# 
   795  0FE6                     	;# 
   796  0FE7                     	;# 
   797  0FE8                     	;# 
   798  0FE9                     	;# 
   799  0FEA                     	;# 
   800  0FEB                     	;# 
   801  0FED                     	;# 
   802  0FEE                     	;# 
   803  0FEF                     	;# 
   804  0000                     	;# 
   805  0001                     	;# 
   806  0002                     	;# 
   807  0003                     	;# 
   808  0004                     	;# 
   809  0005                     	;# 
   810  0006                     	;# 
   811  0007                     	;# 
   812  0008                     	;# 
   813  0009                     	;# 
   814  000A                     	;# 
   815  000B                     	;# 
   816  000C                     	;# 
   817  000D                     	;# 
   818  000E                     	;# 
   819  000F                     	;# 
   820  0010                     	;# 
   821  0011                     	;# 
   822  0012                     	;# 
   823  0013                     	;# 
   824  0015                     	;# 
   825  0016                     	;# 
   826  0016                     	;# 
   827  0017                     	;# 
   828  0018                     	;# 
   829  0019                     	;# 
   830  001A                     	;# 
   831  001B                     	;# 
   832  001C                     	;# 
   833  008C                     	;# 
   834  008D                     	;# 
   835  008E                     	;# 
   836  008F                     	;# 
   837  0090                     	;# 
   838  0091                     	;# 
   839  0092                     	;# 
   840  0093                     	;# 
   841  0095                     	;# 
   842  0096                     	;# 
   843  0097                     	;# 
   844  0098                     	;# 
   845  0099                     	;# 
   846  009A                     	;# 
   847  009B                     	;# 
   848  009B                     	;# 
   849  009C                     	;# 
   850  009D                     	;# 
   851  009E                     	;# 
   852  009F                     	;# 
   853  010C                     	;# 
   854  010D                     	;# 
   855  010E                     	;# 
   856  010F                     	;# 
   857  0110                     	;# 
   858  0111                     	;# 
   859  0112                     	;# 
   860  0113                     	;# 
   861  0114                     	;# 
   862  0115                     	;# 
   863  0116                     	;# 
   864  0117                     	;# 
   865  0118                     	;# 
   866  0119                     	;# 
   867  011A                     	;# 
   868  011B                     	;# 
   869  011B                     	;# 
   870  011C                     	;# 
   871  018C                     	;# 
   872  018D                     	;# 
   873  018E                     	;# 
   874  018F                     	;# 
   875  0190                     	;# 
   876  0191                     	;# 
   877  0191                     	;# 
   878  0192                     	;# 
   879  0193                     	;# 
   880  0193                     	;# 
   881  0194                     	;# 
   882  0195                     	;# 
   883  0196                     	;# 
   884  0197                     	;# 
   885  0199                     	;# 
   886  0199                     	;# 
   887  0199                     	;# 
   888  019A                     	;# 
   889  019A                     	;# 
   890  019A                     	;# 
   891  019B                     	;# 
   892  019B                     	;# 
   893  019B                     	;# 
   894  019B                     	;# 
   895  019B                     	;# 
   896  019C                     	;# 
   897  019C                     	;# 
   898  019C                     	;# 
   899  019D                     	;# 
   900  019D                     	;# 
   901  019D                     	;# 
   902  019E                     	;# 
   903  019E                     	;# 
   904  019E                     	;# 
   905  019F                     	;# 
   906  019F                     	;# 
   907  019F                     	;# 
   908  019F                     	;# 
   909  019F                     	;# 
   910  020C                     	;# 
   911  020D                     	;# 
   912  020E                     	;# 
   913  020F                     	;# 
   914  0210                     	;# 
   915  0211                     	;# 
   916  0211                     	;# 
   917  0212                     	;# 
   918  0212                     	;# 
   919  0213                     	;# 
   920  0213                     	;# 
   921  0214                     	;# 
   922  0214                     	;# 
   923  0215                     	;# 
   924  0215                     	;# 
   925  0215                     	;# 
   926  0215                     	;# 
   927  0216                     	;# 
   928  0216                     	;# 
   929  0217                     	;# 
   930  0217                     	;# 
   931  028C                     	;# 
   932  028D                     	;# 
   933  028E                     	;# 
   934  028F                     	;# 
   935  0290                     	;# 
   936  0291                     	;# 
   937  0291                     	;# 
   938  0292                     	;# 
   939  0293                     	;# 
   940  0293                     	;# 
   941  0298                     	;# 
   942  0298                     	;# 
   943  0299                     	;# 
   944  029A                     	;# 
   945  029A                     	;# 
   946  029E                     	;# 
   947  030C                     	;# 
   948  030D                     	;# 
   949  030E                     	;# 
   950  030F                     	;# 
   951  0310                     	;# 
   952  038C                     	;# 
   953  038D                     	;# 
   954  038E                     	;# 
   955  038F                     	;# 
   956  0390                     	;# 
   957  0391                     	;# 
   958  0392                     	;# 
   959  0393                     	;# 
   960  0394                     	;# 
   961  0395                     	;# 
   962  0396                     	;# 
   963  0397                     	;# 
   964  0398                     	;# 
   965  0399                     	;# 
   966  039D                     	;# 
   967  039E                     	;# 
   968  039F                     	;# 
   969  0415                     	;# 
   970  0416                     	;# 
   971  0417                     	;# 
   972  041C                     	;# 
   973  041D                     	;# 
   974  041E                     	;# 
   975  0498                     	;# 
   976  0498                     	;# 
   977  0499                     	;# 
   978  049A                     	;# 
   979  049B                     	;# 
   980  049B                     	;# 
   981  049C                     	;# 
   982  049D                     	;# 
   983  049E                     	;# 
   984  049F                     	;# 
   985  0511                     	;# 
   986  0515                     	;# 
   987  0617                     	;# 
   988  0618                     	;# 
   989  0619                     	;# 
   990  0619                     	;# 
   991  061A                     	;# 
   992  061B                     	;# 
   993  061C                     	;# 
   994  061C                     	;# 
   995  0691                     	;# 
   996  0692                     	;# 
   997  0693                     	;# 
   998  0694                     	;# 
   999  0695                     	;# 
  1000  0696                     	;# 
  1001  0697                     	;# 
  1002  0698                     	;# 
  1003  0699                     	;# 
  1004  069A                     	;# 
  1005  069B                     	;# 
  1006  069C                     	;# 
  1007  069D                     	;# 
  1008  069E                     	;# 
  1009  069F                     	;# 
  1010  0E0F                     	;# 
  1011  0E10                     	;# 
  1012  0E11                     	;# 
  1013  0E12                     	;# 
  1014  0E13                     	;# 
  1015  0E14                     	;# 
  1016  0E15                     	;# 
  1017  0E17                     	;# 
  1018  0E20                     	;# 
  1019  0E21                     	;# 
  1020  0E22                     	;# 
  1021  0E24                     	;# 
  1022  0E25                     	;# 
  1023  0E28                     	;# 
  1024  0E29                     	;# 
  1025  0E2A                     	;# 
  1026  0E2B                     	;# 
  1027  0E90                     	;# 
  1028  0E91                     	;# 
  1029  0E92                     	;# 
  1030  0E93                     	;# 
  1031  0E94                     	;# 
  1032  0E95                     	;# 
  1033  0E96                     	;# 
  1034  0E97                     	;# 
  1035  0E98                     	;# 
  1036  0E99                     	;# 
  1037  0E9A                     	;# 
  1038  0E9B                     	;# 
  1039  0E9C                     	;# 
  1040  0E9D                     	;# 
  1041  0E9E                     	;# 
  1042  0E9F                     	;# 
  1043  0EA0                     	;# 
  1044  0EA1                     	;# 
  1045  0EA2                     	;# 
  1046  0EA3                     	;# 
  1047  0EA4                     	;# 
  1048  0EA5                     	;# 
  1049  0EA6                     	;# 
  1050  0EA7                     	;# 
  1051  0EA8                     	;# 
  1052  0EA9                     	;# 
  1053  0EAA                     	;# 
  1054  0EAB                     	;# 
  1055  0EAC                     	;# 
  1056  0EAD                     	;# 
  1057  0EAE                     	;# 
  1058  0EAF                     	;# 
  1059  0EB0                     	;# 
  1060  0EB1                     	;# 
  1061  0EB2                     	;# 
  1062  0F0F                     	;# 
  1063  0F10                     	;# 
  1064  0F11                     	;# 
  1065  0F12                     	;# 
  1066  0F13                     	;# 
  1067  0F14                     	;# 
  1068  0F15                     	;# 
  1069  0F16                     	;# 
  1070  0F17                     	;# 
  1071  0F18                     	;# 
  1072  0F19                     	;# 
  1073  0F1A                     	;# 
  1074  0F1B                     	;# 
  1075  0F1C                     	;# 
  1076  0F1D                     	;# 
  1077  0F1E                     	;# 
  1078  0F1F                     	;# 
  1079  0F20                     	;# 
  1080  0F21                     	;# 
  1081  0F22                     	;# 
  1082  0F23                     	;# 
  1083  0F24                     	;# 
  1084  0F25                     	;# 
  1085  0F26                     	;# 
  1086  0F27                     	;# 
  1087  0F28                     	;# 
  1088  0F29                     	;# 
  1089  0F2A                     	;# 
  1090  0F2B                     	;# 
  1091  0F2C                     	;# 
  1092  0F2D                     	;# 
  1093  0F2E                     	;# 
  1094  0F2F                     	;# 
  1095  0F30                     	;# 
  1096  0F31                     	;# 
  1097  0F32                     	;# 
  1098  0F33                     	;# 
  1099  0F34                     	;# 
  1100  0F35                     	;# 
  1101  0F36                     	;# 
  1102  0F37                     	;# 
  1103  0FE4                     	;# 
  1104  0FE5                     	;# 
  1105  0FE6                     	;# 
  1106  0FE7                     	;# 
  1107  0FE8                     	;# 
  1108  0FE9                     	;# 
  1109  0FEA                     	;# 
  1110  0FEB                     	;# 
  1111  0FED                     	;# 
  1112  0FEE                     	;# 
  1113  0FEF                     	;# 
  1114  0000                     	;# 
  1115  0001                     	;# 
  1116  0002                     	;# 
  1117  0003                     	;# 
  1118  0004                     	;# 
  1119  0005                     	;# 
  1120  0006                     	;# 
  1121  0007                     	;# 
  1122  0008                     	;# 
  1123  0009                     	;# 
  1124  000A                     	;# 
  1125  000B                     	;# 
  1126  000C                     	;# 
  1127  000D                     	;# 
  1128  000E                     	;# 
  1129  000F                     	;# 
  1130  0010                     	;# 
  1131  0011                     	;# 
  1132  0012                     	;# 
  1133  0013                     	;# 
  1134  0015                     	;# 
  1135  0016                     	;# 
  1136  0016                     	;# 
  1137  0017                     	;# 
  1138  0018                     	;# 
  1139  0019                     	;# 
  1140  001A                     	;# 
  1141  001B                     	;# 
  1142  001C                     	;# 
  1143  008C                     	;# 
  1144  008D                     	;# 
  1145  008E                     	;# 
  1146  008F                     	;# 
  1147  0090                     	;# 
  1148  0091                     	;# 
  1149  0092                     	;# 
  1150  0093                     	;# 
  1151  0095                     	;# 
  1152  0096                     	;# 
  1153  0097                     	;# 
  1154  0098                     	;# 
  1155  0099                     	;# 
  1156  009A                     	;# 
  1157  009B                     	;# 
  1158  009B                     	;# 
  1159  009C                     	;# 
  1160  009D                     	;# 
  1161  009E                     	;# 
  1162  009F                     	;# 
  1163  010C                     	;# 
  1164  010D                     	;# 
  1165  010E                     	;# 
  1166  010F                     	;# 
  1167  0110                     	;# 
  1168  0111                     	;# 
  1169  0112                     	;# 
  1170  0113                     	;# 
  1171  0114                     	;# 
  1172  0115                     	;# 
  1173  0116                     	;# 
  1174  0117                     	;# 
  1175  0118                     	;# 
  1176  0119                     	;# 
  1177  011A                     	;# 
  1178  011B                     	;# 
  1179  011B                     	;# 
  1180  011C                     	;# 
  1181  018C                     	;# 
  1182  018D                     	;# 
  1183  018E                     	;# 
  1184  018F                     	;# 
  1185  0190                     	;# 
  1186  0191                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0193                     	;# 
  1190  0193                     	;# 
  1191  0194                     	;# 
  1192  0195                     	;# 
  1193  0196                     	;# 
  1194  0197                     	;# 
  1195  0199                     	;# 
  1196  0199                     	;# 
  1197  0199                     	;# 
  1198  019A                     	;# 
  1199  019A                     	;# 
  1200  019A                     	;# 
  1201  019B                     	;# 
  1202  019B                     	;# 
  1203  019B                     	;# 
  1204  019B                     	;# 
  1205  019B                     	;# 
  1206  019C                     	;# 
  1207  019C                     	;# 
  1208  019C                     	;# 
  1209  019D                     	;# 
  1210  019D                     	;# 
  1211  019D                     	;# 
  1212  019E                     	;# 
  1213  019E                     	;# 
  1214  019E                     	;# 
  1215  019F                     	;# 
  1216  019F                     	;# 
  1217  019F                     	;# 
  1218  019F                     	;# 
  1219  019F                     	;# 
  1220  020C                     	;# 
  1221  020D                     	;# 
  1222  020E                     	;# 
  1223  020F                     	;# 
  1224  0210                     	;# 
  1225  0211                     	;# 
  1226  0211                     	;# 
  1227  0212                     	;# 
  1228  0212                     	;# 
  1229  0213                     	;# 
  1230  0213                     	;# 
  1231  0214                     	;# 
  1232  0214                     	;# 
  1233  0215                     	;# 
  1234  0215                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0216                     	;# 
  1238  0216                     	;# 
  1239  0217                     	;# 
  1240  0217                     	;# 
  1241  028C                     	;# 
  1242  028D                     	;# 
  1243  028E                     	;# 
  1244  028F                     	;# 
  1245  0290                     	;# 
  1246  0291                     	;# 
  1247  0291                     	;# 
  1248  0292                     	;# 
  1249  0293                     	;# 
  1250  0293                     	;# 
  1251  0298                     	;# 
  1252  0298                     	;# 
  1253  0299                     	;# 
  1254  029A                     	;# 
  1255  029A                     	;# 
  1256  029E                     	;# 
  1257  030C                     	;# 
  1258  030D                     	;# 
  1259  030E                     	;# 
  1260  030F                     	;# 
  1261  0310                     	;# 
  1262  038C                     	;# 
  1263  038D                     	;# 
  1264  038E                     	;# 
  1265  038F                     	;# 
  1266  0390                     	;# 
  1267  0391                     	;# 
  1268  0392                     	;# 
  1269  0393                     	;# 
  1270  0394                     	;# 
  1271  0395                     	;# 
  1272  0396                     	;# 
  1273  0397                     	;# 
  1274  0398                     	;# 
  1275  0399                     	;# 
  1276  039D                     	;# 
  1277  039E                     	;# 
  1278  039F                     	;# 
  1279  0415                     	;# 
  1280  0416                     	;# 
  1281  0417                     	;# 
  1282  041C                     	;# 
  1283  041D                     	;# 
  1284  041E                     	;# 
  1285  0498                     	;# 
  1286  0498                     	;# 
  1287  0499                     	;# 
  1288  049A                     	;# 
  1289  049B                     	;# 
  1290  049B                     	;# 
  1291  049C                     	;# 
  1292  049D                     	;# 
  1293  049E                     	;# 
  1294  049F                     	;# 
  1295  0511                     	;# 
  1296  0515                     	;# 
  1297  0617                     	;# 
  1298  0618                     	;# 
  1299  0619                     	;# 
  1300  0619                     	;# 
  1301  061A                     	;# 
  1302  061B                     	;# 
  1303  061C                     	;# 
  1304  061C                     	;# 
  1305  0691                     	;# 
  1306  0692                     	;# 
  1307  0693                     	;# 
  1308  0694                     	;# 
  1309  0695                     	;# 
  1310  0696                     	;# 
  1311  0697                     	;# 
  1312  0698                     	;# 
  1313  0699                     	;# 
  1314  069A                     	;# 
  1315  069B                     	;# 
  1316  069C                     	;# 
  1317  069D                     	;# 
  1318  069E                     	;# 
  1319  069F                     	;# 
  1320  0E0F                     	;# 
  1321  0E10                     	;# 
  1322  0E11                     	;# 
  1323  0E12                     	;# 
  1324  0E13                     	;# 
  1325  0E14                     	;# 
  1326  0E15                     	;# 
  1327  0E17                     	;# 
  1328  0E20                     	;# 
  1329  0E21                     	;# 
  1330  0E22                     	;# 
  1331  0E24                     	;# 
  1332  0E25                     	;# 
  1333  0E28                     	;# 
  1334  0E29                     	;# 
  1335  0E2A                     	;# 
  1336  0E2B                     	;# 
  1337  0E90                     	;# 
  1338  0E91                     	;# 
  1339  0E92                     	;# 
  1340  0E93                     	;# 
  1341  0E94                     	;# 
  1342  0E95                     	;# 
  1343  0E96                     	;# 
  1344  0E97                     	;# 
  1345  0E98                     	;# 
  1346  0E99                     	;# 
  1347  0E9A                     	;# 
  1348  0E9B                     	;# 
  1349  0E9C                     	;# 
  1350  0E9D                     	;# 
  1351  0E9E                     	;# 
  1352  0E9F                     	;# 
  1353  0EA0                     	;# 
  1354  0EA1                     	;# 
  1355  0EA2                     	;# 
  1356  0EA3                     	;# 
  1357  0EA4                     	;# 
  1358  0EA5                     	;# 
  1359  0EA6                     	;# 
  1360  0EA7                     	;# 
  1361  0EA8                     	;# 
  1362  0EA9                     	;# 
  1363  0EAA                     	;# 
  1364  0EAB                     	;# 
  1365  0EAC                     	;# 
  1366  0EAD                     	;# 
  1367  0EAE                     	;# 
  1368  0EAF                     	;# 
  1369  0EB0                     	;# 
  1370  0EB1                     	;# 
  1371  0EB2                     	;# 
  1372  0F0F                     	;# 
  1373  0F10                     	;# 
  1374  0F11                     	;# 
  1375  0F12                     	;# 
  1376  0F13                     	;# 
  1377  0F14                     	;# 
  1378  0F15                     	;# 
  1379  0F16                     	;# 
  1380  0F17                     	;# 
  1381  0F18                     	;# 
  1382  0F19                     	;# 
  1383  0F1A                     	;# 
  1384  0F1B                     	;# 
  1385  0F1C                     	;# 
  1386  0F1D                     	;# 
  1387  0F1E                     	;# 
  1388  0F1F                     	;# 
  1389  0F20                     	;# 
  1390  0F21                     	;# 
  1391  0F22                     	;# 
  1392  0F23                     	;# 
  1393  0F24                     	;# 
  1394  0F25                     	;# 
  1395  0F26                     	;# 
  1396  0F27                     	;# 
  1397  0F28                     	;# 
  1398  0F29                     	;# 
  1399  0F2A                     	;# 
  1400  0F2B                     	;# 
  1401  0F2C                     	;# 
  1402  0F2D                     	;# 
  1403  0F2E                     	;# 
  1404  0F2F                     	;# 
  1405  0F30                     	;# 
  1406  0F31                     	;# 
  1407  0F32                     	;# 
  1408  0F33                     	;# 
  1409  0F34                     	;# 
  1410  0F35                     	;# 
  1411  0F36                     	;# 
  1412  0F37                     	;# 
  1413  0FE4                     	;# 
  1414  0FE5                     	;# 
  1415  0FE6                     	;# 
  1416  0FE7                     	;# 
  1417  0FE8                     	;# 
  1418  0FE9                     	;# 
  1419  0FEA                     	;# 
  1420  0FEB                     	;# 
  1421  0FED                     	;# 
  1422  0FEE                     	;# 
  1423  0FEF                     	;# 
  1424  0000                     	;# 
  1425  0001                     	;# 
  1426  0002                     	;# 
  1427  0003                     	;# 
  1428  0004                     	;# 
  1429  0005                     	;# 
  1430  0006                     	;# 
  1431  0007                     	;# 
  1432  0008                     	;# 
  1433  0009                     	;# 
  1434  000A                     	;# 
  1435  000B                     	;# 
  1436  000C                     	;# 
  1437  000D                     	;# 
  1438  000E                     	;# 
  1439  000F                     	;# 
  1440  0010                     	;# 
  1441  0011                     	;# 
  1442  0012                     	;# 
  1443  0013                     	;# 
  1444  0015                     	;# 
  1445  0016                     	;# 
  1446  0016                     	;# 
  1447  0017                     	;# 
  1448  0018                     	;# 
  1449  0019                     	;# 
  1450  001A                     	;# 
  1451  001B                     	;# 
  1452  001C                     	;# 
  1453  008C                     	;# 
  1454  008D                     	;# 
  1455  008E                     	;# 
  1456  008F                     	;# 
  1457  0090                     	;# 
  1458  0091                     	;# 
  1459  0092                     	;# 
  1460  0093                     	;# 
  1461  0095                     	;# 
  1462  0096                     	;# 
  1463  0097                     	;# 
  1464  0098                     	;# 
  1465  0099                     	;# 
  1466  009A                     	;# 
  1467  009B                     	;# 
  1468  009B                     	;# 
  1469  009C                     	;# 
  1470  009D                     	;# 
  1471  009E                     	;# 
  1472  009F                     	;# 
  1473  010C                     	;# 
  1474  010D                     	;# 
  1475  010E                     	;# 
  1476  010F                     	;# 
  1477  0110                     	;# 
  1478  0111                     	;# 
  1479  0112                     	;# 
  1480  0113                     	;# 
  1481  0114                     	;# 
  1482  0115                     	;# 
  1483  0116                     	;# 
  1484  0117                     	;# 
  1485  0118                     	;# 
  1486  0119                     	;# 
  1487  011A                     	;# 
  1488  011B                     	;# 
  1489  011B                     	;# 
  1490  011C                     	;# 
  1491  018C                     	;# 
  1492  018D                     	;# 
  1493  018E                     	;# 
  1494  018F                     	;# 
  1495  0190                     	;# 
  1496  0191                     	;# 
  1497  0191                     	;# 
  1498  0192                     	;# 
  1499  0193                     	;# 
  1500  0193                     	;# 
  1501  0194                     	;# 
  1502  0195                     	;# 
  1503  0196                     	;# 
  1504  0197                     	;# 
  1505  0199                     	;# 
  1506  0199                     	;# 
  1507  0199                     	;# 
  1508  019A                     	;# 
  1509  019A                     	;# 
  1510  019A                     	;# 
  1511  019B                     	;# 
  1512  019B                     	;# 
  1513  019B                     	;# 
  1514  019B                     	;# 
  1515  019B                     	;# 
  1516  019C                     	;# 
  1517  019C                     	;# 
  1518  019C                     	;# 
  1519  019D                     	;# 
  1520  019D                     	;# 
  1521  019D                     	;# 
  1522  019E                     	;# 
  1523  019E                     	;# 
  1524  019E                     	;# 
  1525  019F                     	;# 
  1526  019F                     	;# 
  1527  019F                     	;# 
  1528  019F                     	;# 
  1529  019F                     	;# 
  1530  020C                     	;# 
  1531  020D                     	;# 
  1532  020E                     	;# 
  1533  020F                     	;# 
  1534  0210                     	;# 
  1535  0211                     	;# 
  1536  0211                     	;# 
  1537  0212                     	;# 
  1538  0212                     	;# 
  1539  0213                     	;# 
  1540  0213                     	;# 
  1541  0214                     	;# 
  1542  0214                     	;# 
  1543  0215                     	;# 
  1544  0215                     	;# 
  1545  0215                     	;# 
  1546  0215                     	;# 
  1547  0216                     	;# 
  1548  0216                     	;# 
  1549  0217                     	;# 
  1550  0217                     	;# 
  1551  028C                     	;# 
  1552  028D                     	;# 
  1553  028E                     	;# 
  1554  028F                     	;# 
  1555  0290                     	;# 
  1556  0291                     	;# 
  1557  0291                     	;# 
  1558  0292                     	;# 
  1559  0293                     	;# 
  1560  0293                     	;# 
  1561  0298                     	;# 
  1562  0298                     	;# 
  1563  0299                     	;# 
  1564  029A                     	;# 
  1565  029A                     	;# 
  1566  029E                     	;# 
  1567  030C                     	;# 
  1568  030D                     	;# 
  1569  030E                     	;# 
  1570  030F                     	;# 
  1571  0310                     	;# 
  1572  038C                     	;# 
  1573  038D                     	;# 
  1574  038E                     	;# 
  1575  038F                     	;# 
  1576  0390                     	;# 
  1577  0391                     	;# 
  1578  0392                     	;# 
  1579  0393                     	;# 
  1580  0394                     	;# 
  1581  0395                     	;# 
  1582  0396                     	;# 
  1583  0397                     	;# 
  1584  0398                     	;# 
  1585  0399                     	;# 
  1586  039D                     	;# 
  1587  039E                     	;# 
  1588  039F                     	;# 
  1589  0415                     	;# 
  1590  0416                     	;# 
  1591  0417                     	;# 
  1592  041C                     	;# 
  1593  041D                     	;# 
  1594  041E                     	;# 
  1595  0498                     	;# 
  1596  0498                     	;# 
  1597  0499                     	;# 
  1598  049A                     	;# 
  1599  049B                     	;# 
  1600  049B                     	;# 
  1601  049C                     	;# 
  1602  049D                     	;# 
  1603  049E                     	;# 
  1604  049F                     	;# 
  1605  0511                     	;# 
  1606  0515                     	;# 
  1607  0617                     	;# 
  1608  0618                     	;# 
  1609  0619                     	;# 
  1610  0619                     	;# 
  1611  061A                     	;# 
  1612  061B                     	;# 
  1613  061C                     	;# 
  1614  061C                     	;# 
  1615  0691                     	;# 
  1616  0692                     	;# 
  1617  0693                     	;# 
  1618  0694                     	;# 
  1619  0695                     	;# 
  1620  0696                     	;# 
  1621  0697                     	;# 
  1622  0698                     	;# 
  1623  0699                     	;# 
  1624  069A                     	;# 
  1625  069B                     	;# 
  1626  069C                     	;# 
  1627  069D                     	;# 
  1628  069E                     	;# 
  1629  069F                     	;# 
  1630  0E0F                     	;# 
  1631  0E10                     	;# 
  1632  0E11                     	;# 
  1633  0E12                     	;# 
  1634  0E13                     	;# 
  1635  0E14                     	;# 
  1636  0E15                     	;# 
  1637  0E17                     	;# 
  1638  0E20                     	;# 
  1639  0E21                     	;# 
  1640  0E22                     	;# 
  1641  0E24                     	;# 
  1642  0E25                     	;# 
  1643  0E28                     	;# 
  1644  0E29                     	;# 
  1645  0E2A                     	;# 
  1646  0E2B                     	;# 
  1647  0E90                     	;# 
  1648  0E91                     	;# 
  1649  0E92                     	;# 
  1650  0E93                     	;# 
  1651  0E94                     	;# 
  1652  0E95                     	;# 
  1653  0E96                     	;# 
  1654  0E97                     	;# 
  1655  0E98                     	;# 
  1656  0E99                     	;# 
  1657  0E9A                     	;# 
  1658  0E9B                     	;# 
  1659  0E9C                     	;# 
  1660  0E9D                     	;# 
  1661  0E9E                     	;# 
  1662  0E9F                     	;# 
  1663  0EA0                     	;# 
  1664  0EA1                     	;# 
  1665  0EA2                     	;# 
  1666  0EA3                     	;# 
  1667  0EA4                     	;# 
  1668  0EA5                     	;# 
  1669  0EA6                     	;# 
  1670  0EA7                     	;# 
  1671  0EA8                     	;# 
  1672  0EA9                     	;# 
  1673  0EAA                     	;# 
  1674  0EAB                     	;# 
  1675  0EAC                     	;# 
  1676  0EAD                     	;# 
  1677  0EAE                     	;# 
  1678  0EAF                     	;# 
  1679  0EB0                     	;# 
  1680  0EB1                     	;# 
  1681  0EB2                     	;# 
  1682  0F0F                     	;# 
  1683  0F10                     	;# 
  1684  0F11                     	;# 
  1685  0F12                     	;# 
  1686  0F13                     	;# 
  1687  0F14                     	;# 
  1688  0F15                     	;# 
  1689  0F16                     	;# 
  1690  0F17                     	;# 
  1691  0F18                     	;# 
  1692  0F19                     	;# 
  1693  0F1A                     	;# 
  1694  0F1B                     	;# 
  1695  0F1C                     	;# 
  1696  0F1D                     	;# 
  1697  0F1E                     	;# 
  1698  0F1F                     	;# 
  1699  0F20                     	;# 
  1700  0F21                     	;# 
  1701  0F22                     	;# 
  1702  0F23                     	;# 
  1703  0F24                     	;# 
  1704  0F25                     	;# 
  1705  0F26                     	;# 
  1706  0F27                     	;# 
  1707  0F28                     	;# 
  1708  0F29                     	;# 
  1709  0F2A                     	;# 
  1710  0F2B                     	;# 
  1711  0F2C                     	;# 
  1712  0F2D                     	;# 
  1713  0F2E                     	;# 
  1714  0F2F                     	;# 
  1715  0F30                     	;# 
  1716  0F31                     	;# 
  1717  0F32                     	;# 
  1718  0F33                     	;# 
  1719  0F34                     	;# 
  1720  0F35                     	;# 
  1721  0F36                     	;# 
  1722  0F37                     	;# 
  1723  0FE4                     	;# 
  1724  0FE5                     	;# 
  1725  0FE6                     	;# 
  1726  0FE7                     	;# 
  1727  0FE8                     	;# 
  1728  0FE9                     	;# 
  1729  0FEA                     	;# 
  1730  0FEB                     	;# 
  1731  0FED                     	;# 
  1732  0FEE                     	;# 
  1733  0FEF                     	;# 
  1734  0000                     	;# 
  1735  0001                     	;# 
  1736  0002                     	;# 
  1737  0003                     	;# 
  1738  0004                     	;# 
  1739  0005                     	;# 
  1740  0006                     	;# 
  1741  0007                     	;# 
  1742  0008                     	;# 
  1743  0009                     	;# 
  1744  000A                     	;# 
  1745  000B                     	;# 
  1746  000C                     	;# 
  1747  000D                     	;# 
  1748  000E                     	;# 
  1749  000F                     	;# 
  1750  0010                     	;# 
  1751  0011                     	;# 
  1752  0012                     	;# 
  1753  0013                     	;# 
  1754  0015                     	;# 
  1755  0016                     	;# 
  1756  0016                     	;# 
  1757  0017                     	;# 
  1758  0018                     	;# 
  1759  0019                     	;# 
  1760  001A                     	;# 
  1761  001B                     	;# 
  1762  001C                     	;# 
  1763  008C                     	;# 
  1764  008D                     	;# 
  1765  008E                     	;# 
  1766  008F                     	;# 
  1767  0090                     	;# 
  1768  0091                     	;# 
  1769  0092                     	;# 
  1770  0093                     	;# 
  1771  0095                     	;# 
  1772  0096                     	;# 
  1773  0097                     	;# 
  1774  0098                     	;# 
  1775  0099                     	;# 
  1776  009A                     	;# 
  1777  009B                     	;# 
  1778  009B                     	;# 
  1779  009C                     	;# 
  1780  009D                     	;# 
  1781  009E                     	;# 
  1782  009F                     	;# 
  1783  010C                     	;# 
  1784  010D                     	;# 
  1785  010E                     	;# 
  1786  010F                     	;# 
  1787  0110                     	;# 
  1788  0111                     	;# 
  1789  0112                     	;# 
  1790  0113                     	;# 
  1791  0114                     	;# 
  1792  0115                     	;# 
  1793  0116                     	;# 
  1794  0117                     	;# 
  1795  0118                     	;# 
  1796  0119                     	;# 
  1797  011A                     	;# 
  1798  011B                     	;# 
  1799  011B                     	;# 
  1800  011C                     	;# 
  1801  018C                     	;# 
  1802  018D                     	;# 
  1803  018E                     	;# 
  1804  018F                     	;# 
  1805  0190                     	;# 
  1806  0191                     	;# 
  1807  0191                     	;# 
  1808  0192                     	;# 
  1809  0193                     	;# 
  1810  0193                     	;# 
  1811  0194                     	;# 
  1812  0195                     	;# 
  1813  0196                     	;# 
  1814  0197                     	;# 
  1815  0199                     	;# 
  1816  0199                     	;# 
  1817  0199                     	;# 
  1818  019A                     	;# 
  1819  019A                     	;# 
  1820  019A                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019B                     	;# 
  1825  019B                     	;# 
  1826  019C                     	;# 
  1827  019C                     	;# 
  1828  019C                     	;# 
  1829  019D                     	;# 
  1830  019D                     	;# 
  1831  019D                     	;# 
  1832  019E                     	;# 
  1833  019E                     	;# 
  1834  019E                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  019F                     	;# 
  1838  019F                     	;# 
  1839  019F                     	;# 
  1840  020C                     	;# 
  1841  020D                     	;# 
  1842  020E                     	;# 
  1843  020F                     	;# 
  1844  0210                     	;# 
  1845  0211                     	;# 
  1846  0211                     	;# 
  1847  0212                     	;# 
  1848  0212                     	;# 
  1849  0213                     	;# 
  1850  0213                     	;# 
  1851  0214                     	;# 
  1852  0214                     	;# 
  1853  0215                     	;# 
  1854  0215                     	;# 
  1855  0215                     	;# 
  1856  0215                     	;# 
  1857  0216                     	;# 
  1858  0216                     	;# 
  1859  0217                     	;# 
  1860  0217                     	;# 
  1861  028C                     	;# 
  1862  028D                     	;# 
  1863  028E                     	;# 
  1864  028F                     	;# 
  1865  0290                     	;# 
  1866  0291                     	;# 
  1867  0291                     	;# 
  1868  0292                     	;# 
  1869  0293                     	;# 
  1870  0293                     	;# 
  1871  0298                     	;# 
  1872  0298                     	;# 
  1873  0299                     	;# 
  1874  029A                     	;# 
  1875  029A                     	;# 
  1876  029E                     	;# 
  1877  030C                     	;# 
  1878  030D                     	;# 
  1879  030E                     	;# 
  1880  030F                     	;# 
  1881  0310                     	;# 
  1882  038C                     	;# 
  1883  038D                     	;# 
  1884  038E                     	;# 
  1885  038F                     	;# 
  1886  0390                     	;# 
  1887  0391                     	;# 
  1888  0392                     	;# 
  1889  0393                     	;# 
  1890  0394                     	;# 
  1891  0395                     	;# 
  1892  0396                     	;# 
  1893  0397                     	;# 
  1894  0398                     	;# 
  1895  0399                     	;# 
  1896  039D                     	;# 
  1897  039E                     	;# 
  1898  039F                     	;# 
  1899  0415                     	;# 
  1900  0416                     	;# 
  1901  0417                     	;# 
  1902  041C                     	;# 
  1903  041D                     	;# 
  1904  041E                     	;# 
  1905  0498                     	;# 
  1906  0498                     	;# 
  1907  0499                     	;# 
  1908  049A                     	;# 
  1909  049B                     	;# 
  1910  049B                     	;# 
  1911  049C                     	;# 
  1912  049D                     	;# 
  1913  049E                     	;# 
  1914  049F                     	;# 
  1915  0511                     	;# 
  1916  0515                     	;# 
  1917  0617                     	;# 
  1918  0618                     	;# 
  1919  0619                     	;# 
  1920  0619                     	;# 
  1921  061A                     	;# 
  1922  061B                     	;# 
  1923  061C                     	;# 
  1924  061C                     	;# 
  1925  0691                     	;# 
  1926  0692                     	;# 
  1927  0693                     	;# 
  1928  0694                     	;# 
  1929  0695                     	;# 
  1930  0696                     	;# 
  1931  0697                     	;# 
  1932  0698                     	;# 
  1933  0699                     	;# 
  1934  069A                     	;# 
  1935  069B                     	;# 
  1936  069C                     	;# 
  1937  069D                     	;# 
  1938  069E                     	;# 
  1939  069F                     	;# 
  1940  0E0F                     	;# 
  1941  0E10                     	;# 
  1942  0E11                     	;# 
  1943  0E12                     	;# 
  1944  0E13                     	;# 
  1945  0E14                     	;# 
  1946  0E15                     	;# 
  1947  0E17                     	;# 
  1948  0E20                     	;# 
  1949  0E21                     	;# 
  1950  0E22                     	;# 
  1951  0E24                     	;# 
  1952  0E25                     	;# 
  1953  0E28                     	;# 
  1954  0E29                     	;# 
  1955  0E2A                     	;# 
  1956  0E2B                     	;# 
  1957  0E90                     	;# 
  1958  0E91                     	;# 
  1959  0E92                     	;# 
  1960  0E93                     	;# 
  1961  0E94                     	;# 
  1962  0E95                     	;# 
  1963  0E96                     	;# 
  1964  0E97                     	;# 
  1965  0E98                     	;# 
  1966  0E99                     	;# 
  1967  0E9A                     	;# 
  1968  0E9B                     	;# 
  1969  0E9C                     	;# 
  1970  0E9D                     	;# 
  1971  0E9E                     	;# 
  1972  0E9F                     	;# 
  1973  0EA0                     	;# 
  1974  0EA1                     	;# 
  1975  0EA2                     	;# 
  1976  0EA3                     	;# 
  1977  0EA4                     	;# 
  1978  0EA5                     	;# 
  1979  0EA6                     	;# 
  1980  0EA7                     	;# 
  1981  0EA8                     	;# 
  1982  0EA9                     	;# 
  1983  0EAA                     	;# 
  1984  0EAB                     	;# 
  1985  0EAC                     	;# 
  1986  0EAD                     	;# 
  1987  0EAE                     	;# 
  1988  0EAF                     	;# 
  1989  0EB0                     	;# 
  1990  0EB1                     	;# 
  1991  0EB2                     	;# 
  1992  0F0F                     	;# 
  1993  0F10                     	;# 
  1994  0F11                     	;# 
  1995  0F12                     	;# 
  1996  0F13                     	;# 
  1997  0F14                     	;# 
  1998  0F15                     	;# 
  1999  0F16                     	;# 
  2000  0F17                     	;# 
  2001  0F18                     	;# 
  2002  0F19                     	;# 
  2003  0F1A                     	;# 
  2004  0F1B                     	;# 
  2005  0F1C                     	;# 
  2006  0F1D                     	;# 
  2007  0F1E                     	;# 
  2008  0F1F                     	;# 
  2009  0F20                     	;# 
  2010  0F21                     	;# 
  2011  0F22                     	;# 
  2012  0F23                     	;# 
  2013  0F24                     	;# 
  2014  0F25                     	;# 
  2015  0F26                     	;# 
  2016  0F27                     	;# 
  2017  0F28                     	;# 
  2018  0F29                     	;# 
  2019  0F2A                     	;# 
  2020  0F2B                     	;# 
  2021  0F2C                     	;# 
  2022  0F2D                     	;# 
  2023  0F2E                     	;# 
  2024  0F2F                     	;# 
  2025  0F30                     	;# 
  2026  0F31                     	;# 
  2027  0F32                     	;# 
  2028  0F33                     	;# 
  2029  0F34                     	;# 
  2030  0F35                     	;# 
  2031  0F36                     	;# 
  2032  0F37                     	;# 
  2033  0FE4                     	;# 
  2034  0FE5                     	;# 
  2035  0FE6                     	;# 
  2036  0FE7                     	;# 
  2037  0FE8                     	;# 
  2038  0FE9                     	;# 
  2039  0FEA                     	;# 
  2040  0FEB                     	;# 
  2041  0FED                     	;# 
  2042  0FEE                     	;# 
  2043  0FEF                     	;# 
  2044  0000                     	;# 
  2045  0001                     	;# 
  2046  0002                     	;# 
  2047  0003                     	;# 
  2048  0004                     	;# 
  2049  0005                     	;# 
  2050  0006                     	;# 
  2051  0007                     	;# 
  2052  0008                     	;# 
  2053  0009                     	;# 
  2054  000A                     	;# 
  2055  000B                     	;# 
  2056  000C                     	;# 
  2057  000D                     	;# 
  2058  000E                     	;# 
  2059  000F                     	;# 
  2060  0010                     	;# 
  2061  0011                     	;# 
  2062  0012                     	;# 
  2063  0013                     	;# 
  2064  0015                     	;# 
  2065  0016                     	;# 
  2066  0016                     	;# 
  2067  0017                     	;# 
  2068  0018                     	;# 
  2069  0019                     	;# 
  2070  001A                     	;# 
  2071  001B                     	;# 
  2072  001C                     	;# 
  2073  008C                     	;# 
  2074  008D                     	;# 
  2075  008E                     	;# 
  2076  008F                     	;# 
  2077  0090                     	;# 
  2078  0091                     	;# 
  2079  0092                     	;# 
  2080  0093                     	;# 
  2081  0095                     	;# 
  2082  0096                     	;# 
  2083  0097                     	;# 
  2084  0098                     	;# 
  2085  0099                     	;# 
  2086  009A                     	;# 
  2087  009B                     	;# 
  2088  009B                     	;# 
  2089  009C                     	;# 
  2090  009D                     	;# 
  2091  009E                     	;# 
  2092  009F                     	;# 
  2093  010C                     	;# 
  2094  010D                     	;# 
  2095  010E                     	;# 
  2096  010F                     	;# 
  2097  0110                     	;# 
  2098  0111                     	;# 
  2099  0112                     	;# 
  2100  0113                     	;# 
  2101  0114                     	;# 
  2102  0115                     	;# 
  2103  0116                     	;# 
  2104  0117                     	;# 
  2105  0118                     	;# 
  2106  0119                     	;# 
  2107  011A                     	;# 
  2108  011B                     	;# 
  2109  011B                     	;# 
  2110  011C                     	;# 
  2111  018C                     	;# 
  2112  018D                     	;# 
  2113  018E                     	;# 
  2114  018F                     	;# 
  2115  0190                     	;# 
  2116  0191                     	;# 
  2117  0191                     	;# 
  2118  0192                     	;# 
  2119  0193                     	;# 
  2120  0193                     	;# 
  2121  0194                     	;# 
  2122  0195                     	;# 
  2123  0196                     	;# 
  2124  0197                     	;# 
  2125  0199                     	;# 
  2126  0199                     	;# 
  2127  0199                     	;# 
  2128  019A                     	;# 
  2129  019A                     	;# 
  2130  019A                     	;# 
  2131  019B                     	;# 
  2132  019B                     	;# 
  2133  019B                     	;# 
  2134  019B                     	;# 
  2135  019B                     	;# 
  2136  019C                     	;# 
  2137  019C                     	;# 
  2138  019C                     	;# 
  2139  019D                     	;# 
  2140  019D                     	;# 
  2141  019D                     	;# 
  2142  019E                     	;# 
  2143  019E                     	;# 
  2144  019E                     	;# 
  2145  019F                     	;# 
  2146  019F                     	;# 
  2147  019F                     	;# 
  2148  019F                     	;# 
  2149  019F                     	;# 
  2150  020C                     	;# 
  2151  020D                     	;# 
  2152  020E                     	;# 
  2153  020F                     	;# 
  2154  0210                     	;# 
  2155  0211                     	;# 
  2156  0211                     	;# 
  2157  0212                     	;# 
  2158  0212                     	;# 
  2159  0213                     	;# 
  2160  0213                     	;# 
  2161  0214                     	;# 
  2162  0214                     	;# 
  2163  0215                     	;# 
  2164  0215                     	;# 
  2165  0215                     	;# 
  2166  0215                     	;# 
  2167  0216                     	;# 
  2168  0216                     	;# 
  2169  0217                     	;# 
  2170  0217                     	;# 
  2171  028C                     	;# 
  2172  028D                     	;# 
  2173  028E                     	;# 
  2174  028F                     	;# 
  2175  0290                     	;# 
  2176  0291                     	;# 
  2177  0291                     	;# 
  2178  0292                     	;# 
  2179  0293                     	;# 
  2180  0293                     	;# 
  2181  0298                     	;# 
  2182  0298                     	;# 
  2183  0299                     	;# 
  2184  029A                     	;# 
  2185  029A                     	;# 
  2186  029E                     	;# 
  2187  030C                     	;# 
  2188  030D                     	;# 
  2189  030E                     	;# 
  2190  030F                     	;# 
  2191  0310                     	;# 
  2192  038C                     	;# 
  2193  038D                     	;# 
  2194  038E                     	;# 
  2195  038F                     	;# 
  2196  0390                     	;# 
  2197  0391                     	;# 
  2198  0392                     	;# 
  2199  0393                     	;# 
  2200  0394                     	;# 
  2201  0395                     	;# 
  2202  0396                     	;# 
  2203  0397                     	;# 
  2204  0398                     	;# 
  2205  0399                     	;# 
  2206  039D                     	;# 
  2207  039E                     	;# 
  2208  039F                     	;# 
  2209  0415                     	;# 
  2210  0416                     	;# 
  2211  0417                     	;# 
  2212  041C                     	;# 
  2213  041D                     	;# 
  2214  041E                     	;# 
  2215  0498                     	;# 
  2216  0498                     	;# 
  2217  0499                     	;# 
  2218  049A                     	;# 
  2219  049B                     	;# 
  2220  049B                     	;# 
  2221  049C                     	;# 
  2222  049D                     	;# 
  2223  049E                     	;# 
  2224  049F                     	;# 
  2225  0511                     	;# 
  2226  0515                     	;# 
  2227  0617                     	;# 
  2228  0618                     	;# 
  2229  0619                     	;# 
  2230  0619                     	;# 
  2231  061A                     	;# 
  2232  061B                     	;# 
  2233  061C                     	;# 
  2234  061C                     	;# 
  2235  0691                     	;# 
  2236  0692                     	;# 
  2237  0693                     	;# 
  2238  0694                     	;# 
  2239  0695                     	;# 
  2240  0696                     	;# 
  2241  0697                     	;# 
  2242  0698                     	;# 
  2243  0699                     	;# 
  2244  069A                     	;# 
  2245  069B                     	;# 
  2246  069C                     	;# 
  2247  069D                     	;# 
  2248  069E                     	;# 
  2249  069F                     	;# 
  2250  0E0F                     	;# 
  2251  0E10                     	;# 
  2252  0E11                     	;# 
  2253  0E12                     	;# 
  2254  0E13                     	;# 
  2255  0E14                     	;# 
  2256  0E15                     	;# 
  2257  0E17                     	;# 
  2258  0E20                     	;# 
  2259  0E21                     	;# 
  2260  0E22                     	;# 
  2261  0E24                     	;# 
  2262  0E25                     	;# 
  2263  0E28                     	;# 
  2264  0E29                     	;# 
  2265  0E2A                     	;# 
  2266  0E2B                     	;# 
  2267  0E90                     	;# 
  2268  0E91                     	;# 
  2269  0E92                     	;# 
  2270  0E93                     	;# 
  2271  0E94                     	;# 
  2272  0E95                     	;# 
  2273  0E96                     	;# 
  2274  0E97                     	;# 
  2275  0E98                     	;# 
  2276  0E99                     	;# 
  2277  0E9A                     	;# 
  2278  0E9B                     	;# 
  2279  0E9C                     	;# 
  2280  0E9D                     	;# 
  2281  0E9E                     	;# 
  2282  0E9F                     	;# 
  2283  0EA0                     	;# 
  2284  0EA1                     	;# 
  2285  0EA2                     	;# 
  2286  0EA3                     	;# 
  2287  0EA4                     	;# 
  2288  0EA5                     	;# 
  2289  0EA6                     	;# 
  2290  0EA7                     	;# 
  2291  0EA8                     	;# 
  2292  0EA9                     	;# 
  2293  0EAA                     	;# 
  2294  0EAB                     	;# 
  2295  0EAC                     	;# 
  2296  0EAD                     	;# 
  2297  0EAE                     	;# 
  2298  0EAF                     	;# 
  2299  0EB0                     	;# 
  2300  0EB1                     	;# 
  2301  0EB2                     	;# 
  2302  0F0F                     	;# 
  2303  0F10                     	;# 
  2304  0F11                     	;# 
  2305  0F12                     	;# 
  2306  0F13                     	;# 
  2307  0F14                     	;# 
  2308  0F15                     	;# 
  2309  0F16                     	;# 
  2310  0F17                     	;# 
  2311  0F18                     	;# 
  2312  0F19                     	;# 
  2313  0F1A                     	;# 
  2314  0F1B                     	;# 
  2315  0F1C                     	;# 
  2316  0F1D                     	;# 
  2317  0F1E                     	;# 
  2318  0F1F                     	;# 
  2319  0F20                     	;# 
  2320  0F21                     	;# 
  2321  0F22                     	;# 
  2322  0F23                     	;# 
  2323  0F24                     	;# 
  2324  0F25                     	;# 
  2325  0F26                     	;# 
  2326  0F27                     	;# 
  2327  0F28                     	;# 
  2328  0F29                     	;# 
  2329  0F2A                     	;# 
  2330  0F2B                     	;# 
  2331  0F2C                     	;# 
  2332  0F2D                     	;# 
  2333  0F2E                     	;# 
  2334  0F2F                     	;# 
  2335  0F30                     	;# 
  2336  0F31                     	;# 
  2337  0F32                     	;# 
  2338  0F33                     	;# 
  2339  0F34                     	;# 
  2340  0F35                     	;# 
  2341  0F36                     	;# 
  2342  0F37                     	;# 
  2343  0FE4                     	;# 
  2344  0FE5                     	;# 
  2345  0FE6                     	;# 
  2346  0FE7                     	;# 
  2347  0FE8                     	;# 
  2348  0FE9                     	;# 
  2349  0FEA                     	;# 
  2350  0FEB                     	;# 
  2351  0FED                     	;# 
  2352  0FEE                     	;# 
  2353  0FEF                     	;_messageBuffer
  2354                           
  2355                           	psect	idataBANK3
  2356  2000                     __pidataBANK3:	
  2357                           
  2358                           ;initializer for stoa@F1152
  2359  2000  3428               	retlw	40
  2360  2001  346E               	retlw	110
  2361  2002  3475               	retlw	117
  2362  2003  346C               	retlw	108
  2363  2004  346C               	retlw	108
  2364  2005  3429               	retlw	41
  2365  2006  3400               	retlw	0
  2366                           
  2367                           ;initializer for _thermistorBetaValue
  2368  2007  346B               	retlw	107
  2369  2008  340D               	retlw	13
  2370                           
  2371                           	psect	stringtext1
  2372  3897                     __pstringtext1:	
  2373  3897                     _OCD_threshold_setting:	
  2374  3897  3411               	retlw	17
  2375  3898  3400               	retlw	0
  2376  3899  3416               	retlw	22
  2377  389A  3400               	retlw	0
  2378  389B  341C               	retlw	28
  2379  389C  3400               	retlw	0
  2380  389D  3421               	retlw	33
  2381  389E  3400               	retlw	0
  2382  389F  3427               	retlw	39
  2383  38A0  3400               	retlw	0
  2384  38A1  342C               	retlw	44
  2385  38A2  3400               	retlw	0
  2386  38A3  3432               	retlw	50
  2387  38A4  3400               	retlw	0
  2388  38A5  3438               	retlw	56
  2389  38A6  3400               	retlw	0
  2390  38A7  343D               	retlw	61
  2391  38A8  3400               	retlw	0
  2392  38A9  3443               	retlw	67
  2393  38AA  3400               	retlw	0
  2394  38AB  3448               	retlw	72
  2395  38AC  3400               	retlw	0
  2396  38AD  344E               	retlw	78
  2397  38AE  3400               	retlw	0
  2398  38AF  3453               	retlw	83
  2399  38B0  3400               	retlw	0
  2400  38B1  3459               	retlw	89
  2401  38B2  3400               	retlw	0
  2402  38B3  345E               	retlw	94
  2403  38B4  3400               	retlw	0
  2404  38B5  3464               	retlw	100
  2405  38B6  3400               	retlw	0
  2406  38B7                     __end_of_OCD_threshold_setting:	
  2407                           
  2408                           	psect	stringtext2
  2409  39AB                     __pstringtext2:	
  2410  39AB                     _OCD_delay_setting:	
  2411  39AB  3408               	retlw	8
  2412  39AC  3400               	retlw	0
  2413  39AD  3414               	retlw	20
  2414  39AE  3400               	retlw	0
  2415  39AF  3428               	retlw	40
  2416  39B0  3400               	retlw	0
  2417  39B1  3450               	retlw	80
  2418  39B2  3400               	retlw	0
  2419  39B3  34A0               	retlw	160
  2420  39B4  3400               	retlw	0
  2421  39B5  3440               	retlw	64
  2422  39B6  3401               	retlw	1
  2423  39B7  3480               	retlw	128
  2424  39B8  3402               	retlw	2
  2425  39B9  3400               	retlw	0
  2426  39BA  3405               	retlw	5
  2427  39BB                     __end_of_OCD_delay_setting:	
  2428                           
  2429                           	psect	stringtext3
  2430  39BB                     __pstringtext3:	
  2431  39BB                     _SCD_threshold_setting:	
  2432  39BB  342C               	retlw	44
  2433  39BC  3400               	retlw	0
  2434  39BD  3443               	retlw	67
  2435  39BE  3400               	retlw	0
  2436  39BF  3459               	retlw	89
  2437  39C0  3400               	retlw	0
  2438  39C1  346F               	retlw	111
  2439  39C2  3400               	retlw	0
  2440  39C3  3485               	retlw	133
  2441  39C4  3400               	retlw	0
  2442  39C5  349B               	retlw	155
  2443  39C6  3400               	retlw	0
  2444  39C7  34B2               	retlw	178
  2445  39C8  3400               	retlw	0
  2446  39C9  34C8               	retlw	200
  2447  39CA  3400               	retlw	0
  2448  39CB                     __end_of_SCD_threshold_setting:	
  2449                           
  2450                           	psect	stringtext4
  2451  39E9                     __pstringtext4:	
  2452  39E9                     _OV_delay_setting:	
  2453  39E9  3401               	retlw	1
  2454  39EA  3400               	retlw	0
  2455  39EB  3402               	retlw	2
  2456  39EC  3400               	retlw	0
  2457  39ED  3404               	retlw	4
  2458  39EE  3400               	retlw	0
  2459  39EF  3408               	retlw	8
  2460  39F0  3400               	retlw	0
  2461  39F1                     __end_of_OV_delay_setting:	
  2462                           
  2463                           	psect	stringtext5
  2464  39F1                     __pstringtext5:	
  2465  39F1                     _UV_delay_setting:	
  2466  39F1  3401               	retlw	1
  2467  39F2  3400               	retlw	0
  2468  39F3  3404               	retlw	4
  2469  39F4  3400               	retlw	0
  2470  39F5  3408               	retlw	8
  2471  39F6  3400               	retlw	0
  2472  39F7  3410               	retlw	16
  2473  39F8  3400               	retlw	0
  2474  39F9                     __end_of_UV_delay_setting:	
  2475                           
  2476                           	psect	stringtext6
  2477  39F9                     __pstringtext6:	
  2478  39F9                     _SCD_delay_setting:	
  2479  39F9  3446               	retlw	70
  2480  39FA  3400               	retlw	0
  2481  39FB  3464               	retlw	100
  2482  39FC  3400               	retlw	0
  2483  39FD  34C8               	retlw	200
  2484  39FE  3400               	retlw	0
  2485  39FF  3490               	retlw	144
  2486  3A00  3401               	retlw	1
  2487  3A01                     __end_of_SCD_delay_setting:	
  2488                           
  2489                           	psect	stringtext7
  2490  3A01                     __pstringtext7:	
  2491  3A01                     _Lg4:	
  2492  3A01  3426               	retlw	38
  2493  3A02  349E               	retlw	158
  2494  3A03  3478               	retlw	120
  2495  3A04  343E               	retlw	62
  2496  3A05                     __end_of_Lg4:	
  2497                           
  2498                           	psect	stringtext8
  2499  3A05                     __pstringtext8:	
  2500  3A05                     _Lg3:	
  2501  3A05  34EE               	retlw	238
  2502  3A06  34E9               	retlw	233
  2503  3A07  3491               	retlw	145
  2504  3A08  343E               	retlw	62
  2505  3A09                     __end_of_Lg3:	
  2506                           
  2507                           	psect	stringtext9
  2508  3A09                     __pstringtext9:	
  2509  3A09                     _Lg2:	
  2510  3A09  3413               	retlw	19
  2511  3A0A  34CE               	retlw	206
  2512  3A0B  34CC               	retlw	204
  2513  3A0C  343E               	retlw	62
  2514  3A0D                     __end_of_Lg2:	
  2515                           
  2516                           	psect	stringtext10
  2517  3A0D                     __pstringtext10:	
  2518  3A0D                     _Lg1:	
  2519  3A0D  34AA               	retlw	170
  2520  3A0E  34AA               	retlw	170
  2521  3A0F  342A               	retlw	42
  2522  3A10  343F               	retlw	63
  2523  3A11                     __end_of_Lg1:	
  2524                           
  2525                           	psect	stringtext11
  2526  3A11                     __pstringtext11:	
  2527  3A11                     _ln2_lo:	
  2528  3A11  34D1               	retlw	209
  2529  3A12  34F7               	retlw	247
  2530  3A13  3417               	retlw	23
  2531  3A14  3437               	retlw	55
  2532  3A15                     __end_of_ln2_lo:	
  2533                           
  2534                           	psect	stringtext12
  2535  3A15                     __pstringtext12:	
  2536  3A15                     _ln2_hi:	
  2537  3A15  3480               	retlw	128
  2538  3A16  3471               	retlw	113
  2539  3A17  3431               	retlw	49
  2540  3A18  343F               	retlw	63
  2541  3A19                     __end_of_ln2_hi:	
  2542                           
  2543                           	psect	stringtext13
  2544  3800                     __pstringtext13:	
  2545  3800                     _ATmega328_address:	
  2546  3800  3402               	retlw	2
  2547  3801  3400               	retlw	0
  2548  3802                     __end_of_ATmega328_address:	
  2549  0016                     _TMR1	set	22
  2550  0003                     _STATUSbits	set	3
  2551  000B                     _INTCONbits	set	11
  2552  0018                     _T1CONbits	set	24
  2553  0011                     _PIR1bits	set	17
  2554  0097                     _WDTCONbits	set	151
  2555  0090                     _TRISEbits	set	144
  2556  008C                     _TRISAbits	set	140
  2557  008E                     _TRISCbits	set	142
  2558  008D                     _TRISBbits	set	141
  2559  0091                     _PIE1bits	set	145
  2560  0476                     _TRISC6	set	1142
  2561  0477                     _TRISC7	set	1143
  2562  04CF                     _SPLLEN	set	1231
  2563  04CE                     _IRCF3	set	1230
  2564  04CD                     _IRCF2	set	1229
  2565  04CC                     _IRCF1	set	1228
  2566  04CB                     _IRCF0	set	1227
  2567  04C9                     _SCS1	set	1225
  2568  04C8                     _SCS0	set	1224
  2569  0110                     _LATEbits	set	272
  2570  010C                     _LATAbits	set	268
  2571  019A                     _TX1REG	set	410
  2572  0199                     _RC1REG	set	409
  2573  019D                     _RC1STAbits	set	413
  2574  019B                     _SPBRG	set	411
  2575  018E                     _ANSELCbits	set	398
  2576  018D                     _ANSELBbits	set	397
  2577  0CF5                     _TXEN	set	3317
  2578  0CEC                     _CREN	set	3308
  2579  0CEF                     _SPEN	set	3311
  2580  0CF4                     _SYNC	set	3316
  2581  0CF2                     _BRGH	set	3314
  2582  0216                     _SSPCON2bits	set	534
  2583  0211                     _SSPBUF	set	529
  2584  0212                     _SSPADD	set	530
  2585  0215                     _SSPCONbits	set	533
  2586  0E24                     _RXPPSbits	set	3620
  2587  0E20                     _SSPCLKPPSbits	set	3616
  2588  0E21                     _SSPDATPPSbits	set	3617
  2589  0E0F                     _PPSLOCKbits	set	3599
  2590  0E0F                     _PPSLOCK	set	3599
  2591  0E9A                     _RB2PPSbits	set	3738
  2592  0EA5                     _RC5PPSbits	set	3749
  2593  0EA4                     _RC4PPSbits	set	3748
  2594  3802                     STR_2:	
  2595  3802  3443               	retlw	67	;'C'
  2596  3803  3465               	retlw	101	;'e'
  2597  3804  346C               	retlw	108	;'l'
  2598  3805  346C               	retlw	108	;'l'
  2599  3806  3420               	retlw	32	;' '
  2600  3807  3462               	retlw	98	;'b'
  2601  3808  3461               	retlw	97	;'a'
  2602  3809  3474               	retlw	116	;'t'
  2603  380A  3474               	retlw	116	;'t'
  2604  380B  343A               	retlw	58	;':'
  2605  380C  3420               	retlw	32	;' '
  2606  380D  3425               	retlw	37	;'%'
  2607  380E  3469               	retlw	105	;'i'
  2608  380F  3420               	retlw	32	;' '
  2609  3810  342C               	retlw	44	;','
  2610  3811  3425               	retlw	37	;'%'
  2611  3812  3464               	retlw	100	;'d'
  2612  3813  342C               	retlw	44	;','
  2613  3814  3420               	retlw	32	;' '
  2614  3815  3425               	retlw	37	;'%'
  2615  3816  3464               	retlw	100	;'d'
  2616  3817  3420               	retlw	32	;' '
  2617  3818  342C               	retlw	44	;','
  2618  3819  3420               	retlw	32	;' '
  2619  381A  3425               	retlw	37	;'%'
  2620  381B  3464               	retlw	100	;'d'
  2621  381C  342C               	retlw	44	;','
  2622  381D  3420               	retlw	32	;' '
  2623  381E  3425               	retlw	37	;'%'
  2624  381F  3464               	retlw	100	;'d'
  2625  3820  342C               	retlw	44	;','
  2626  3821  3420               	retlw	32	;' '
  2627  3822  3425               	retlw	37	;'%'
  2628  3823  3464               	retlw	100	;'d'
  2629  3824  3420               	retlw	32	;' '
  2630  3825  3442               	retlw	66	;'B'
  2631  3826  3461               	retlw	97	;'a'
  2632  3827  3474               	retlw	116	;'t'
  2633  3828  3474               	retlw	116	;'t'
  2634  3829  3420               	retlw	32	;' '
  2635  382A  3443               	retlw	67	;'C'
  2636  382B  3475               	retlw	117	;'u'
  2637  382C  3472               	retlw	114	;'r'
  2638  382D  3472               	retlw	114	;'r'
  2639  382E  343A               	retlw	58	;':'
  2640  382F  3420               	retlw	32	;' '
  2641  3830  3425               	retlw	37	;'%'
  2642  3831  3469               	retlw	105	;'i'
  2643  3832  3420               	retlw	32	;' '
  2644  3833  3454               	retlw	84	;'T'
  2645  3834  3465               	retlw	101	;'e'
  2646  3835  346D               	retlw	109	;'m'
  2647  3836  3470               	retlw	112	;'p'
  2648  3837  343A               	retlw	58	;':'
  2649  3838  3420               	retlw	32	;' '
  2650  3839  3425               	retlw	37	;'%'
  2651  383A  3469               	retlw	105	;'i'
  2652  383B  3420               	retlw	32	;' '
  2653  383C  3443               	retlw	67	;'C'
  2654  383D  3454               	retlw	84	;'T'
  2655  383E  3452               	retlw	82	;'R'
  2656  383F  344C               	retlw	76	;'L'
  2657  3840  3432               	retlw	50	;'2'
  2658  3841  343A               	retlw	58	;':'
  2659  3842  3420               	retlw	32	;' '
  2660  3843  3425               	retlw	37	;'%'
  2661  3844  3469               	retlw	105	;'i'
  2662  3845  3420               	retlw	32	;' '
  2663  3846  340A               	retlw	10
  2664  3847  340D               	retlw	13
  2665  3848  3400               	retlw	0
  2666                           
  2667                           	psect	stringtext14
  2668  3849                     __pstringtext14:	
  2669  3849                     STR_1:	
  2670  3849  3457               	retlw	87	;'W'
  2671  384A  3441               	retlw	65	;'A'
  2672  384B  3454               	retlw	84	;'T'
  2673  384C  3443               	retlw	67	;'C'
  2674  384D  3448               	retlw	72	;'H'
  2675  384E  3444               	retlw	68	;'D'
  2676  384F  344F               	retlw	79	;'O'
  2677  3850  3447               	retlw	71	;'G'
  2678  3851  3420               	retlw	32	;' '
  2679  3852  344E               	retlw	78	;'N'
  2680  3853  344F               	retlw	79	;'O'
  2681  3854  3454               	retlw	84	;'T'
  2682  3855  3420               	retlw	32	;' '
  2683  3856  344B               	retlw	75	;'K'
  2684  3857  3449               	retlw	73	;'I'
  2685  3858  3443               	retlw	67	;'C'
  2686  3859  344B               	retlw	75	;'K'
  2687  385A  3445               	retlw	69	;'E'
  2688  385B  3444               	retlw	68	;'D'
  2689  385C  343A               	retlw	58	;':'
  2690  385D  3420               	retlw	32	;' '
  2691  385E  3441               	retlw	65	;'A'
  2692  385F  3446               	retlw	70	;'F'
  2693  3860  3445               	retlw	69	;'E'
  2694  3861  3420               	retlw	32	;' '
  2695  3862  3463               	retlw	99	;'c'
  2696  3863  346F               	retlw	111	;'o'
  2697  3864  346D               	retlw	109	;'m'
  2698  3865  346D               	retlw	109	;'m'
  2699  3866  3473               	retlw	115	;'s'
  2700  3867  3420               	retlw	32	;' '
  2701  3868  3465               	retlw	101	;'e'
  2702  3869  3472               	retlw	114	;'r'
  2703  386A  3472               	retlw	114	;'r'
  2704  386B  346F               	retlw	111	;'o'
  2705  386C  3472               	retlw	114	;'r'
  2706  386D  3420               	retlw	32	;' '
  2707  386E  340A               	retlw	10
  2708  386F  340D               	retlw	13
  2709  3870  3400               	retlw	0
  2710                           
  2711                           	psect	stringtext15
  2712  3871                     __pstringtext15:	
  2713  3871                     STR_7:	
  2714  3871  3450               	retlw	80	;'P'
  2715  3872  3472               	retlw	114	;'r'
  2716  3873  3469               	retlw	105	;'i'
  2717  3874  346E               	retlw	110	;'n'
  2718  3875  3474               	retlw	116	;'t'
  2719  3876  3469               	retlw	105	;'i'
  2720  3877  346E               	retlw	110	;'n'
  2721  3878  3467               	retlw	103	;'g'
  2722  3879  3420               	retlw	32	;' '
  2723  387A  346F               	retlw	111	;'o'
  2724  387B  3475               	retlw	117	;'u'
  2725  387C  3474               	retlw	116	;'t'
  2726  387D  3420               	retlw	32	;' '
  2727  387E  3441               	retlw	65	;'A'
  2728  387F  3446               	retlw	70	;'F'
  2729  3880  3445               	retlw	69	;'E'
  2730  3881  3420               	retlw	32	;' '
  2731  3882  3472               	retlw	114	;'r'
  2732  3883  3465               	retlw	101	;'e'
  2733  3884  3467               	retlw	103	;'g'
  2734  3885  3469               	retlw	105	;'i'
  2735  3886  3473               	retlw	115	;'s'
  2736  3887  3474               	retlw	116	;'t'
  2737  3888  3465               	retlw	101	;'e'
  2738  3889  3472               	retlw	114	;'r'
  2739  388A  3420               	retlw	32	;' '
  2740  388B  3476               	retlw	118	;'v'
  2741  388C  3461               	retlw	97	;'a'
  2742  388D  346C               	retlw	108	;'l'
  2743  388E  3475               	retlw	117	;'u'
  2744  388F  3465               	retlw	101	;'e'
  2745  3890  3473               	retlw	115	;'s'
  2746  3891  342E               	retlw	46	;'.'
  2747  3892  342E               	retlw	46	;'.'
  2748  3893  342E               	retlw	46	;'.'
  2749  3894  340A               	retlw	10
  2750  3895  340D               	retlw	13
  2751  3896  3400               	retlw	0
  2752                           
  2753                           	psect	stringtext16
  2754  38B7                     __pstringtext16:	
  2755  38B7                     STR_11:	
  2756  38B7  3430               	retlw	48	;'0'
  2757  38B8  3478               	retlw	120	;'x'
  2758  38B9  3430               	retlw	48	;'0'
  2759  38BA  3434               	retlw	52	;'4'
  2760  38BB  3420               	retlw	32	;' '
  2761  38BC  3453               	retlw	83	;'S'
  2762  38BD  3459               	retlw	89	;'Y'
  2763  38BE  3453               	retlw	83	;'S'
  2764  38BF  345F               	retlw	95	;'_'
  2765  38C0  3443               	retlw	67	;'C'
  2766  38C1  3454               	retlw	84	;'T'
  2767  38C2  3452               	retlw	82	;'R'
  2768  38C3  344C               	retlw	76	;'L'
  2769  38C4  3431               	retlw	49	;'1'
  2770  38C5  343A               	retlw	58	;':'
  2771  38C6  3420               	retlw	32	;' '
  2772  38C7  3425               	retlw	37	;'%'
  2773  38C8  3469               	retlw	105	;'i'
  2774  38C9  3420               	retlw	32	;' '
  2775  38CA  340A               	retlw	10
  2776  38CB  340D               	retlw	13
  2777  38CC  3400               	retlw	0
  2778                           
  2779                           	psect	stringtext17
  2780  38CD                     __pstringtext17:	
  2781  38CD                     STR_3:	
  2782  38CD  3430               	retlw	48	;'0'
  2783  38CE  3478               	retlw	120	;'x'
  2784  38CF  3430               	retlw	48	;'0'
  2785  38D0  3435               	retlw	53	;'5'
  2786  38D1  3420               	retlw	32	;' '
  2787  38D2  3453               	retlw	83	;'S'
  2788  38D3  3459               	retlw	89	;'Y'
  2789  38D4  3453               	retlw	83	;'S'
  2790  38D5  345F               	retlw	95	;'_'
  2791  38D6  3443               	retlw	67	;'C'
  2792  38D7  3454               	retlw	84	;'T'
  2793  38D8  3452               	retlw	82	;'R'
  2794  38D9  344C               	retlw	76	;'L'
  2795  38DA  3432               	retlw	50	;'2'
  2796  38DB  343A               	retlw	58	;':'
  2797  38DC  3420               	retlw	32	;' '
  2798  38DD  3425               	retlw	37	;'%'
  2799  38DE  3469               	retlw	105	;'i'
  2800  38DF  3420               	retlw	32	;' '
  2801  38E0  340A               	retlw	10
  2802  38E1  340D               	retlw	13
  2803  38E2  3400               	retlw	0
  2804                           
  2805                           	psect	stringtext18
  2806  38E3                     __pstringtext18:	
  2807  38E3                     STR_10:	
  2808  38E3  3430               	retlw	48	;'0'
  2809  38E4  3478               	retlw	120	;'x'
  2810  38E5  3430               	retlw	48	;'0'
  2811  38E6  3431               	retlw	49	;'1'
  2812  38E7  3420               	retlw	32	;' '
  2813  38E8  3443               	retlw	67	;'C'
  2814  38E9  3445               	retlw	69	;'E'
  2815  38EA  344C               	retlw	76	;'L'
  2816  38EB  344C               	retlw	76	;'L'
  2817  38EC  3442               	retlw	66	;'B'
  2818  38ED  3441               	retlw	65	;'A'
  2819  38EE  344C               	retlw	76	;'L'
  2820  38EF  3431               	retlw	49	;'1'
  2821  38F0  343A               	retlw	58	;':'
  2822  38F1  3420               	retlw	32	;' '
  2823  38F2  3425               	retlw	37	;'%'
  2824  38F3  3469               	retlw	105	;'i'
  2825  38F4  3420               	retlw	32	;' '
  2826  38F5  340A               	retlw	10
  2827  38F6  340D               	retlw	13
  2828  38F7  3400               	retlw	0
  2829                           
  2830                           	psect	stringtext19
  2831  38F8                     __pstringtext19:	
  2832  38F8                     STR_13:	
  2833  38F8  3430               	retlw	48	;'0'
  2834  38F9  3478               	retlw	120	;'x'
  2835  38FA  3430               	retlw	48	;'0'
  2836  38FB  3436               	retlw	54	;'6'
  2837  38FC  3420               	retlw	32	;' '
  2838  38FD  3450               	retlw	80	;'P'
  2839  38FE  3452               	retlw	82	;'R'
  2840  38FF  344F               	retlw	79	;'O'
  2841  3900  3454               	retlw	84	;'T'
  2842  3901  3445               	retlw	69	;'E'
  2843  3902  3443               	retlw	67	;'C'
  2844  3903  3454               	retlw	84	;'T'
  2845  3904  3431               	retlw	49	;'1'
  2846  3905  343A               	retlw	58	;':'
  2847  3906  3420               	retlw	32	;' '
  2848  3907  3425               	retlw	37	;'%'
  2849  3908  3469               	retlw	105	;'i'
  2850  3909  3420               	retlw	32	;' '
  2851  390A  340A               	retlw	10
  2852  390B  340D               	retlw	13
  2853  390C  3400               	retlw	0
  2854                           
  2855                           	psect	stringtext20
  2856  390D                     __pstringtext20:	
  2857  390D                     STR_14:	
  2858  390D  3430               	retlw	48	;'0'
  2859  390E  3478               	retlw	120	;'x'
  2860  390F  3430               	retlw	48	;'0'
  2861  3910  3437               	retlw	55	;'7'
  2862  3911  3420               	retlw	32	;' '
  2863  3912  3450               	retlw	80	;'P'
  2864  3913  3452               	retlw	82	;'R'
  2865  3914  344F               	retlw	79	;'O'
  2866  3915  3454               	retlw	84	;'T'
  2867  3916  3445               	retlw	69	;'E'
  2868  3917  3443               	retlw	67	;'C'
  2869  3918  3454               	retlw	84	;'T'
  2870  3919  3432               	retlw	50	;'2'
  2871  391A  343A               	retlw	58	;':'
  2872  391B  3420               	retlw	32	;' '
  2873  391C  3425               	retlw	37	;'%'
  2874  391D  3469               	retlw	105	;'i'
  2875  391E  3420               	retlw	32	;' '
  2876  391F  340A               	retlw	10
  2877  3920  340D               	retlw	13
  2878  3921  3400               	retlw	0
  2879                           
  2880                           	psect	stringtext21
  2881  3922                     __pstringtext21:	
  2882  3922                     STR_15:	
  2883  3922  3430               	retlw	48	;'0'
  2884  3923  3478               	retlw	120	;'x'
  2885  3924  3430               	retlw	48	;'0'
  2886  3925  3438               	retlw	56	;'8'
  2887  3926  3420               	retlw	32	;' '
  2888  3927  3450               	retlw	80	;'P'
  2889  3928  3452               	retlw	82	;'R'
  2890  3929  344F               	retlw	79	;'O'
  2891  392A  3454               	retlw	84	;'T'
  2892  392B  3445               	retlw	69	;'E'
  2893  392C  3443               	retlw	67	;'C'
  2894  392D  3454               	retlw	84	;'T'
  2895  392E  3433               	retlw	51	;'3'
  2896  392F  343A               	retlw	58	;':'
  2897  3930  3420               	retlw	32	;' '
  2898  3931  3425               	retlw	37	;'%'
  2899  3932  3469               	retlw	105	;'i'
  2900  3933  3420               	retlw	32	;' '
  2901  3934  340A               	retlw	10
  2902  3935  340D               	retlw	13
  2903  3936  3400               	retlw	0
  2904                           
  2905                           	psect	stringtext22
  2906  3937                     __pstringtext22:	
  2907  3937                     STR_4:	
  2908  3937  3430               	retlw	48	;'0'
  2909  3938  3478               	retlw	120	;'x'
  2910  3939  3430               	retlw	48	;'0'
  2911  393A  3430               	retlw	48	;'0'
  2912  393B  3420               	retlw	32	;' '
  2913  393C  3453               	retlw	83	;'S'
  2914  393D  3459               	retlw	89	;'Y'
  2915  393E  3453               	retlw	83	;'S'
  2916  393F  345F               	retlw	95	;'_'
  2917  3940  3453               	retlw	83	;'S'
  2918  3941  3454               	retlw	84	;'T'
  2919  3942  3441               	retlw	65	;'A'
  2920  3943  3454               	retlw	84	;'T'
  2921  3944  343A               	retlw	58	;':'
  2922  3945  3420               	retlw	32	;' '
  2923  3946  3425               	retlw	37	;'%'
  2924  3947  3469               	retlw	105	;'i'
  2925  3948  3420               	retlw	32	;' '
  2926  3949  340A               	retlw	10
  2927  394A  340D               	retlw	13
  2928  394B  3400               	retlw	0
  2929                           
  2930                           	psect	stringtext23
  2931  394C                     __pstringtext23:	
  2932  394C                     STR_16:	
  2933  394C  3430               	retlw	48	;'0'
  2934  394D  3478               	retlw	120	;'x'
  2935  394E  3430               	retlw	48	;'0'
  2936  394F  3439               	retlw	57	;'9'
  2937  3950  3420               	retlw	32	;' '
  2938  3951  344F               	retlw	79	;'O'
  2939  3952  3456               	retlw	86	;'V'
  2940  3953  345F               	retlw	95	;'_'
  2941  3954  3454               	retlw	84	;'T'
  2942  3955  3452               	retlw	82	;'R'
  2943  3956  3449               	retlw	73	;'I'
  2944  3957  3450               	retlw	80	;'P'
  2945  3958  343A               	retlw	58	;':'
  2946  3959  3420               	retlw	32	;' '
  2947  395A  3425               	retlw	37	;'%'
  2948  395B  3469               	retlw	105	;'i'
  2949  395C  3420               	retlw	32	;' '
  2950  395D  340A               	retlw	10
  2951  395E  340D               	retlw	13
  2952  395F  3400               	retlw	0
  2953                           
  2954                           	psect	stringtext24
  2955  3960                     __pstringtext24:	
  2956  3960                     STR_17:	
  2957  3960  3430               	retlw	48	;'0'
  2958  3961  3478               	retlw	120	;'x'
  2959  3962  3430               	retlw	48	;'0'
  2960  3963  3441               	retlw	65	;'A'
  2961  3964  3420               	retlw	32	;' '
  2962  3965  3455               	retlw	85	;'U'
  2963  3966  3456               	retlw	86	;'V'
  2964  3967  345F               	retlw	95	;'_'
  2965  3968  3454               	retlw	84	;'T'
  2966  3969  3452               	retlw	82	;'R'
  2967  396A  3449               	retlw	73	;'I'
  2968  396B  3450               	retlw	80	;'P'
  2969  396C  343A               	retlw	58	;':'
  2970  396D  3420               	retlw	32	;' '
  2971  396E  3425               	retlw	37	;'%'
  2972  396F  3469               	retlw	105	;'i'
  2973  3970  3420               	retlw	32	;' '
  2974  3971  340A               	retlw	10
  2975  3972  340D               	retlw	13
  2976  3973  3400               	retlw	0
  2977                           
  2978                           	psect	stringtext25
  2979  3974                     __pstringtext25:	
  2980  3974                     STR_18:	
  2981  3974  3430               	retlw	48	;'0'
  2982  3975  3478               	retlw	120	;'x'
  2983  3976  3430               	retlw	48	;'0'
  2984  3977  3442               	retlw	66	;'B'
  2985  3978  3420               	retlw	32	;' '
  2986  3979  3443               	retlw	67	;'C'
  2987  397A  3443               	retlw	67	;'C'
  2988  397B  345F               	retlw	95	;'_'
  2989  397C  3443               	retlw	67	;'C'
  2990  397D  3446               	retlw	70	;'F'
  2991  397E  3447               	retlw	71	;'G'
  2992  397F  343A               	retlw	58	;':'
  2993  3980  3420               	retlw	32	;' '
  2994  3981  3425               	retlw	37	;'%'
  2995  3982  3469               	retlw	105	;'i'
  2996  3983  3420               	retlw	32	;' '
  2997  3984  340A               	retlw	10
  2998  3985  340D               	retlw	13
  2999  3986  3400               	retlw	0
  3000                           
  3001                           	psect	stringtext26
  3002  3987                     __pstringtext26:	
  3003  3987                     STR_19:	
  3004  3987  3430               	retlw	48	;'0'
  3005  3988  3478               	retlw	120	;'x'
  3006  3989  3433               	retlw	51	;'3'
  3007  398A  3432               	retlw	50	;'2'
  3008  398B  3420               	retlw	32	;' '
  3009  398C  3443               	retlw	67	;'C'
  3010  398D  3443               	retlw	67	;'C'
  3011  398E  345F               	retlw	95	;'_'
  3012  398F  3448               	retlw	72	;'H'
  3013  3990  3449               	retlw	73	;'I'
  3014  3991  343A               	retlw	58	;':'
  3015  3992  3420               	retlw	32	;' '
  3016  3993  3425               	retlw	37	;'%'
  3017  3994  3469               	retlw	105	;'i'
  3018  3995  3420               	retlw	32	;' '
  3019  3996  340A               	retlw	10
  3020  3997  340D               	retlw	13
  3021  3998  3400               	retlw	0
  3022                           
  3023                           	psect	stringtext27
  3024  3999                     __pstringtext27:	
  3025  3999                     STR_20:	
  3026  3999  3430               	retlw	48	;'0'
  3027  399A  3478               	retlw	120	;'x'
  3028  399B  3433               	retlw	51	;'3'
  3029  399C  3433               	retlw	51	;'3'
  3030  399D  3420               	retlw	32	;' '
  3031  399E  3443               	retlw	67	;'C'
  3032  399F  3443               	retlw	67	;'C'
  3033  39A0  345F               	retlw	95	;'_'
  3034  39A1  344C               	retlw	76	;'L'
  3035  39A2  344F               	retlw	79	;'O'
  3036  39A3  343A               	retlw	58	;':'
  3037  39A4  3420               	retlw	32	;' '
  3038  39A5  3425               	retlw	37	;'%'
  3039  39A6  3469               	retlw	105	;'i'
  3040  39A7  3420               	retlw	32	;' '
  3041  39A8  340A               	retlw	10
  3042  39A9  340D               	retlw	13
  3043  39AA  3400               	retlw	0
  3044                           
  3045                           	psect	stringtext28
  3046  39CB                     __pstringtext28:	
  3047  39CB                     STR_5:	
  3048  39CB  3443               	retlw	67	;'C'
  3049  39CC  3475               	retlw	117	;'u'
  3050  39CD  3472               	retlw	114	;'r'
  3051  39CE  3472               	retlw	114	;'r'
  3052  39CF  3465               	retlw	101	;'e'
  3053  39D0  346E               	retlw	110	;'n'
  3054  39D1  3474               	retlw	116	;'t'
  3055  39D2  343A               	retlw	58	;':'
  3056  39D3  3420               	retlw	32	;' '
  3057  39D4  3425               	retlw	37	;'%'
  3058  39D5  3464               	retlw	100	;'d'
  3059  39D6  3420               	retlw	32	;' '
  3060  39D7  340A               	retlw	10
  3061  39D8  340D               	retlw	13
  3062  39D9  3400               	retlw	0
  3063                           
  3064                           	psect	stringtext29
  3065  39DA                     __pstringtext29:	
  3066  39DA                     STR_6:	
  3067  39DA  3454               	retlw	84	;'T'
  3068  39DB  3465               	retlw	101	;'e'
  3069  39DC  346D               	retlw	109	;'m'
  3070  39DD  3470               	retlw	112	;'p'
  3071  39DE  343A               	retlw	58	;':'
  3072  39DF  3420               	retlw	32	;' '
  3073  39E0  3425               	retlw	37	;'%'
  3074  39E1  3464               	retlw	100	;'d'
  3075  39E2  3420               	retlw	32	;' '
  3076  39E3  3465               	retlw	101	;'e'
  3077  39E4  342D               	retlw	45	;'-'
  3078  39E5  3432               	retlw	50	;'2'
  3079  39E6  340A               	retlw	10
  3080  39E7  340D               	retlw	13
  3081  39E8  3400               	retlw	0
  3082                           
  3083                           	psect	stringtext30
  3084  3A19                     __pstringtext30:	
  3085  3A19                     STR_98:	
  3086  3A19  3468               	retlw	104	;'h'
  3087  3A1A  3468               	retlw	104	;'h'
  3088  3A1B  3458               	retlw	88	;'X'
  3089  3A1C  3400               	retlw	0
  3090                           
  3091                           	psect	stringtext31
  3092  3A1D                     __pstringtext31:	
  3093  3A1D                     STR_22:	
  3094  3A1D  3468               	retlw	104	;'h'
  3095  3A1E  3468               	retlw	104	;'h'
  3096  3A1F  3464               	retlw	100	;'d'
  3097  3A20  3400               	retlw	0
  3098                           
  3099                           	psect	stringtext32
  3100  3A21                     __pstringtext32:	
  3101  3A21                     STR_26:	
  3102  3A21  3468               	retlw	104	;'h'
  3103  3A22  3468               	retlw	104	;'h'
  3104  3A23  3469               	retlw	105	;'i'
  3105  3A24  3400               	retlw	0
  3106                           
  3107                           	psect	stringtext33
  3108  3A25                     __pstringtext33:	
  3109  3A25                     STR_64:	
  3110  3A25  3468               	retlw	104	;'h'
  3111  3A26  3468               	retlw	104	;'h'
  3112  3A27  346E               	retlw	110	;'n'
  3113  3A28  3400               	retlw	0
  3114                           
  3115                           	psect	stringtext34
  3116  3A29                     __pstringtext34:	
  3117  3A29                     STR_49:	
  3118  3A29  3468               	retlw	104	;'h'
  3119  3A2A  3468               	retlw	104	;'h'
  3120  3A2B  346F               	retlw	111	;'o'
  3121  3A2C  3400               	retlw	0
  3122                           
  3123                           	psect	stringtext35
  3124  3A2D                     __pstringtext35:	
  3125  3A2D                     STR_79:	
  3126  3A2D  3468               	retlw	104	;'h'
  3127  3A2E  3468               	retlw	104	;'h'
  3128  3A2F  3475               	retlw	117	;'u'
  3129  3A30  3400               	retlw	0
  3130                           
  3131                           	psect	stringtext36
  3132  3A31                     __pstringtext36:	
  3133  3A31                     STR_94:	
  3134  3A31  3468               	retlw	104	;'h'
  3135  3A32  3468               	retlw	104	;'h'
  3136  3A33  3478               	retlw	120	;'x'
  3137  3A34  3400               	retlw	0
  3138                           
  3139                           	psect	stringtext37
  3140  3A35                     __pstringtext37:	
  3141  3A35                     STR_116:	
  3142  3A35  347A               	retlw	122	;'z'
  3143  3A36  3458               	retlw	88	;'X'
  3144  3A37  3400               	retlw	0
  3145                           
  3146                           	psect	stringtext38
  3147  3A38                     __pstringtext38:	
  3148  3A38                     STR_40:	
  3149  3A38  347A               	retlw	122	;'z'
  3150  3A39  3464               	retlw	100	;'d'
  3151  3A3A  3400               	retlw	0
  3152                           
  3153                           	psect	stringtext39
  3154  3A3B                     __pstringtext39:	
  3155  3A3B                     STR_44:	
  3156  3A3B  347A               	retlw	122	;'z'
  3157  3A3C  3469               	retlw	105	;'i'
  3158  3A3D  3400               	retlw	0
  3159                           
  3160                           	psect	stringtext40
  3161  3A3E                     __pstringtext40:	
  3162  3A3E                     STR_74:	
  3163  3A3E  347A               	retlw	122	;'z'
  3164  3A3F  346E               	retlw	110	;'n'
  3165  3A40  3400               	retlw	0
  3166                           
  3167                           	psect	stringtext41
  3168  3A41                     __pstringtext41:	
  3169  3A41                     STR_59:	
  3170  3A41  347A               	retlw	122	;'z'
  3171  3A42  346F               	retlw	111	;'o'
  3172  3A43  3400               	retlw	0
  3173                           
  3174                           	psect	stringtext42
  3175  3A44                     __pstringtext42:	
  3176  3A44                     STR_89:	
  3177  3A44  347A               	retlw	122	;'z'
  3178  3A45  3475               	retlw	117	;'u'
  3179  3A46  3400               	retlw	0
  3180                           
  3181                           	psect	stringtext43
  3182  3A47                     __pstringtext43:	
  3183  3A47                     STR_112:	
  3184  3A47  347A               	retlw	122	;'z'
  3185  3A48  3478               	retlw	120	;'x'
  3186  3A49  3400               	retlw	0
  3187                           
  3188                           	psect	stringtext44
  3189  0000                     __pstringtext44:	
  3190  39D7                     
  3191                           ; #config settings
  3192  0000                     
  3193                           	psect	cinit
  3194  0022                     start_initialization:	
  3195  0022                     __initialization:		;BIGRAM
  3196                           
  3197                           ; Initialize objects allocated to BANK3
  3198  0022  3000               	movlw	low __pidataBANK3
  3199  0023  0084               	movwf	4
  3200  0024  30A0               	movlw	(high __pidataBANK3)| (0+128)
  3201  0025  0085               	movwf	5
  3202  0026  0023               	movlb	3	; select bank3
  3203  0027  0012               	moviw fsr0++
  3204  0028  00DA               	movwf	__pdataBANK3& (0+127)
  3205  0029  0012               	moviw fsr0++
  3206  002A  00DB               	movwf	(__pdataBANK3+1)& (0+127)
  3207  002B  0012               	moviw fsr0++
  3208  002C  00DC               	movwf	(__pdataBANK3+2)& (0+127)
  3209  002D  0012               	moviw fsr0++
  3210  002E  00DD               	movwf	(__pdataBANK3+3)& (0+127)
  3211  002F  0012               	moviw fsr0++
  3212  0030  00DE               	movwf	(__pdataBANK3+4)& (0+127)
  3213  0031  0012               	moviw fsr0++
  3214  0032  00DF               	movwf	(__pdataBANK3+5)& (0+127)
  3215  0033  0012               	moviw fsr0++
  3216  0034  00E0               	movwf	(__pdataBANK3+6)& (0+127)
  3217  0035  0012               	moviw fsr0++
  3218  0036  00E1               	movwf	(__pdataBANK3+7)& (0+127)
  3219  0037  0012               	moviw fsr0++
  3220  0038  00E2               	movwf	(__pdataBANK3+8)& (0+127)
  3221                           
  3222                           ; Clear objects allocated to BIGRAM
  3223  0039  3071               	movlw	low (0+10097)
  3224  003A  0084               	movwf	4
  3225  003B  3027               	movlw	high (0+10097)
  3226  003C  0085               	movwf	5
  3227  003D  307F               	movlw	127
  3228  003E  00FE               	movwf	btemp
  3229  003F  3000               	movlw	0
  3230  0040  00FF               	movwf	btemp+1
  3231  0041  31B4  2427  3180   	fcall	clear_ram0
  3232                           
  3233                           ; Clear objects allocated to COMMON
  3234  0044  01FC               	clrf	__pbssCOMMON& (0+127)
  3235                           
  3236                           ; Clear objects allocated to BANK1
  3237  0045  0021               	movlb	1	; select bank1
  3238  0046  01EF               	clrf	__pbssBANK1& (0+127)
  3239                           
  3240                           ; Clear objects allocated to BANK2
  3241  0047  3065               	movlw	low __pbssBANK2
  3242  0048  0084               	movwf	4
  3243  0049  3001               	movlw	high __pbssBANK2
  3244  004A  0085               	movwf	5
  3245  004B  300A               	movlw	10
  3246  004C  00FE               	movwf	btemp
  3247  004D  3000               	movlw	0
  3248  004E  00FF               	movwf	btemp+1
  3249  004F  31B4  2427  3180   	fcall	clear_ram0
  3250                           
  3251                           ; Clear objects allocated to BANK3
  3252  0052  30A0               	movlw	low __pbssBANK3
  3253  0053  0084               	movwf	4
  3254  0054  3001               	movlw	high __pbssBANK3
  3255  0055  0085               	movwf	5
  3256  0056  303A               	movlw	58
  3257  0057  00FE               	movwf	btemp
  3258  0058  3000               	movlw	0
  3259  0059  00FF               	movwf	btemp+1
  3260  005A  31B4  2427  3180   	fcall	clear_ram0
  3261                           
  3262                           ; Clear objects allocated to BANK4
  3263  005D  3020               	movlw	low __pbssBANK4
  3264  005E  0084               	movwf	4
  3265  005F  3002               	movlw	high __pbssBANK4
  3266  0060  0085               	movwf	5
  3267  0061  3020               	movlw	32
  3268  0062  00FE               	movwf	btemp
  3269  0063  3000               	movlw	0
  3270  0064  00FF               	movwf	btemp+1
  3271  0065  31B4  2427         	fcall	clear_ram0
  3272  0067                     end_of_initialization:	
  3273                           ;End of C runtime variable initialization code
  3274                           
  3275  0067                     __end_of__initialization:	
  3276  0067  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3277  0068  0020               	movlb	0
  3278  0069  31B6  2E97         	ljmp	_main	;jump to C main() function
  3279                           
  3280                           	psect	bssCOMMON
  3281  007C                     __pbssCOMMON:	
  3282  007C                     _toggleColor:	
  3283  007C                     	ds	1
  3284                           
  3285                           	psect	bssBANK1
  3286  00EF                     __pbssBANK1:	
  3287  00EF                     _tmr1_flag:	
  3288  00EF                     	ds	1
  3289                           
  3290                           	psect	bssBANK2
  3291  0165                     __pbssBANK2:	
  3292  0165                     _width:	
  3293  0165                     	ds	2
  3294  0167                     _prec:	
  3295  0167                     	ds	2
  3296  0169                     _flags:	
  3297  0169                     	ds	2
  3298  016B                     _adcOffset:	
  3299  016B                     	ds	2
  3300  016D                     _adcGain:	
  3301  016D                     	ds	2
  3302                           
  3303                           	psect	bssBANK3
  3304  01A0                     __pbssBANK3:	
  3305  01A0                     _cellVoltages:	
  3306  01A0                     	ds	10
  3307  01AA                     logf@F469:	
  3308  01AA                     	ds	4
  3309  01AE                     BQ76920@shuntResistorValue_mOhm:	
  3310  01AE                     	ds	4
  3311  01B2                     _shuntResistorValue_mOhm:	
  3312  01B2                     	ds	4
  3313  01B6                     _temperatureThermistor:	
  3314  01B6                     	ds	4
  3315  01BA                     _batCurrent:	
  3316  01BA                     	ds	4
  3317  01BE                     _batVoltage:	
  3318  01BE                     	ds	4
  3319  01C2                     _errno:	
  3320  01C2                     	ds	2
  3321  01C4                     _nout:	
  3322  01C4                     	ds	2
  3323  01C6                     _minCellVoltage:	
  3324  01C6                     	ds	2
  3325  01C8                     _maxCellVoltage:	
  3326  01C8                     	ds	2
  3327  01CA                     _maxCellTempDischarge:	
  3328  01CA                     	ds	2
  3329  01CC                     _maxCellTempCharge:	
  3330  01CC                     	ds	2
  3331  01CE                     _minCellTempDischarge:	
  3332  01CE                     	ds	2
  3333  01D0                     _minCellTempCharge:	
  3334  01D0                     	ds	2
  3335  01D2                     BQ76920@protect3:	
  3336  01D2                     	ds	1
  3337  01D3                     BQ76920@protect2:	
  3338  01D3                     	ds	1
  3339  01D4                     BQ76920@protect1:	
  3340  01D4                     	ds	1
  3341  01D5                     myIsr@count:	
  3342  01D5                     	ds	1
  3343  01D6                     _protect3:	
  3344  01D6                     	ds	1
  3345  01D7                     _protect2:	
  3346  01D7                     	ds	1
  3347  01D8                     _protect1:	
  3348  01D8                     	ds	1
  3349  01D9                     _currState:	
  3350  01D9                     	ds	1
  3351                           
  3352                           	psect	dataBANK3
  3353  01DA                     __pdataBANK3:	
  3354  01DA                     stoa@F1152:	
  3355  01DA                     	ds	7
  3356  01E1                     _thermistorBetaValue:	
  3357  01E1                     	ds	2
  3358                           
  3359                           	psect	bssBANK4
  3360  0220                     __pbssBANK4:	
  3361  0220                     _dbuf:	
  3362  0220                     	ds	32
  3363                           
  3364                           	psect	clrtext
  3365  3427                     clear_ram0:	
  3366                           ;	Called with FSR0 containing the base address, and
  3367                           ;	btemp/btemp+1 has the size to clear
  3368                           
  3369  3427  0064               	clrwdt	;clear the watchdog before getting into this loop
  3370  3428                     clrloop0:	
  3371  3428  0180               	clrf	0	;clear RAM location pointed to by FSR
  3372  3429  3101               	addfsr 0,1
  3373  342A  3001               	movlw	1
  3374  342B  02FE               	subwf	126,f
  3375  342C  3000               	movlw	0
  3376  342D  3BFF               	subwfb	127,f
  3377  342E  087F               	movf	127,w
  3378  342F  047E               	iorwf	126,w
  3379  3430  1903               	btfsc	3,2
  3380  3431  3400               	retlw	0	;all done for this memory range, return
  3381  3432  2C28               	goto	clrloop0	;have we reached the end yet?
  3382                           
  3383                           	psect	cstackBANK3
  3384  01E3                     __pcstackBANK3:	
  3385  01E3                     ??_main:	
  3386                           
  3387                           ; 1 bytes @ 0x0
  3388  01E3                     	ds	2
  3389                           
  3390                           	psect	cstackBANK2
  3391  0120                     __pcstackBANK2:	
  3392  0120                     logf@R:	
  3393                           
  3394                           ; 4 bytes @ 0x0
  3395  0120                     	ds	4
  3396  0124                     logf@t1:	
  3397                           
  3398                           ; 4 bytes @ 0x4
  3399  0124                     	ds	4
  3400  0128                     logf@t2:	
  3401                           
  3402                           ; 4 bytes @ 0x8
  3403  0128                     	ds	4
  3404  012C                     _logf$2041:	
  3405                           
  3406                           ; 4 bytes @ 0xC
  3407  012C                     	ds	4
  3408  0130                     _logf$2042:	
  3409                           
  3410                           ; 4 bytes @ 0x10
  3411  0130                     	ds	4
  3412  0134                     _logf$2043:	
  3413                           
  3414                           ; 4 bytes @ 0x14
  3415  0134                     	ds	4
  3416  0138                     _logf$2044:	
  3417                           
  3418                           ; 4 bytes @ 0x18
  3419  0138                     	ds	4
  3420  013C                     logf@k:	
  3421                           
  3422                           ; 2 bytes @ 0x1C
  3423  013C                     	ds	2
  3424  013E                     logf@hfsq:	
  3425                           
  3426                           ; 4 bytes @ 0x1E
  3427  013E                     	ds	4
  3428  0142                     logf@dk:	
  3429                           
  3430                           ; 4 bytes @ 0x22
  3431  0142                     	ds	4
  3432  0146                     logf@s:	
  3433                           
  3434                           ; 4 bytes @ 0x26
  3435  0146                     	ds	4
  3436  014A                     logf@z:	
  3437                           
  3438                           ; 4 bytes @ 0x2A
  3439  014A                     	ds	4
  3440  014E                     logf@w:	
  3441                           
  3442                           ; 4 bytes @ 0x2E
  3443  014E                     	ds	4
  3444  0152                     _logf$2040:	
  3445                           
  3446                           ; 4 bytes @ 0x32
  3447  0152                     	ds	4
  3448  0156                     logf@u:	
  3449                           
  3450                           ; 4 bytes @ 0x36
  3451  0156                     	ds	4
  3452  015A                     logf@f:	
  3453                           
  3454                           ; 4 bytes @ 0x3A
  3455  015A                     	ds	4
  3456  015E                     logf@ix:	
  3457                           
  3458                           ; 4 bytes @ 0x3E
  3459  015E                     	ds	4
  3460  0162                     ??_statemachine:	
  3461                           
  3462                           ; 1 bytes @ 0x42
  3463  0162                     	ds	2
  3464  0164                     statemachine@success:	
  3465                           
  3466                           ; 1 bytes @ 0x44
  3467  0164                     	ds	1
  3468                           
  3469                           	psect	cstackBANK1
  3470  00A0                     __pcstackBANK1:	
  3471  00A0                     ?___flsub:	
  3472  00A0                     vfpfcnvrt@cp:	
  3473                           ; 4 bytes @ 0x0
  3474                           
  3475  00A0                     setShortCircuitProtection@scaler:	
  3476                           ; 2 bytes @ 0x0
  3477                           
  3478  00A0                     setOverCurrentDischargeProtection@scaler:	
  3479                           ; 4 bytes @ 0x0
  3480                           
  3481  00A0                     ___flsub@a:	
  3482                           ; 4 bytes @ 0x0
  3483                           
  3484                           
  3485                           ; 4 bytes @ 0x0
  3486  00A0                     	ds	2
  3487  00A2                     vfpfcnvrt@done:	
  3488                           
  3489                           ; 2 bytes @ 0x2
  3490  00A2                     	ds	2
  3491  00A4                     _vfpfcnvrt$1250:	
  3492  00A4                     ___flsub@b:	
  3493                           ; 2 bytes @ 0x4
  3494                           
  3495  00A4                     _setShortCircuitProtection$2026:	
  3496                           ; 4 bytes @ 0x4
  3497                           
  3498  00A4                     _setOverCurrentDischargeProtection$2027:	
  3499                           ; 4 bytes @ 0x4
  3500                           
  3501                           
  3502                           ; 4 bytes @ 0x4
  3503  00A4                     	ds	2
  3504  00A6                     _vfpfcnvrt$1251:	
  3505                           
  3506                           ; 2 bytes @ 0x6
  3507  00A6                     	ds	2
  3508  00A8                     ?_logf:	
  3509  00A8                     ?___fltol:	
  3510                           ; 4 bytes @ 0x8
  3511                           
  3512  00A8                     setShortCircuitProtection@i:	
  3513                           ; 4 bytes @ 0x8
  3514                           
  3515  00A8                     setOverCurrentDischargeProtection@i:	
  3516                           ; 2 bytes @ 0x8
  3517                           
  3518  00A8                     ___fltol@f1:	
  3519                           ; 2 bytes @ 0x8
  3520                           
  3521  00A8                     logf@x:	
  3522                           ; 4 bytes @ 0x8
  3523                           
  3524  00A8                     vfpfcnvrt@ll:	
  3525                           ; 4 bytes @ 0x8
  3526                           
  3527                           
  3528                           ; 8 bytes @ 0x8
  3529  00A8                     	ds	2
  3530  00AA                     setShortCircuitProtection@i_972:	
  3531  00AA                     setOverCurrentDischargeProtection@i_981:	
  3532                           ; 2 bytes @ 0xA
  3533                           
  3534                           
  3535                           ; 2 bytes @ 0xA
  3536  00AA                     	ds	2
  3537  00AC                     ??_logf:	
  3538  00AC                     ??___fltol:	
  3539                           ; 1 bytes @ 0xC
  3540                           
  3541                           
  3542                           ; 1 bytes @ 0xC
  3543  00AC                     	ds	4
  3544  00B0                     vfpfcnvrt@vp:	
  3545                           
  3546                           ; 2 bytes @ 0x10
  3547  00B0                     	ds	1
  3548  00B1                     ??_updateCurrent:	
  3549  00B1                     ??_updateVoltages:	
  3550                           ; 1 bytes @ 0x11
  3551                           
  3552                           
  3553                           ; 1 bytes @ 0x11
  3554  00B1                     	ds	1
  3555  00B2                     vfpfcnvrt@c:	
  3556                           
  3557                           ; 1 bytes @ 0x12
  3558  00B2                     	ds	1
  3559  00B3                     vfpfcnvrt@llu:	
  3560                           
  3561                           ; 8 bytes @ 0x13
  3562  00B3                     	ds	1
  3563  00B4                     ??_updateTemperatures:	
  3564  00B4                     _updateVoltages$2028:	
  3565                           ; 1 bytes @ 0x14
  3566                           
  3567                           
  3568                           ; 4 bytes @ 0x14
  3569  00B4                     	ds	1
  3570  00B5                     updateCurrent@adcVal:	
  3571                           
  3572                           ; 2 bytes @ 0x15
  3573  00B5                     	ds	2
  3574  00B7                     _updateTemperatures$2029:	
  3575                           
  3576                           ; 4 bytes @ 0x17
  3577  00B7                     	ds	1
  3578  00B8                     updateVoltages@adcVal:	
  3579                           
  3580                           ; 4 bytes @ 0x18
  3581  00B8                     	ds	3
  3582  00BB                     ?_vsnprintf:	
  3583  00BB                     vsnprintf@s:	
  3584                           ; 2 bytes @ 0x1B
  3585                           
  3586  00BB                     _updateTemperatures$2030:	
  3587                           ; 2 bytes @ 0x1B
  3588                           
  3589                           
  3590                           ; 4 bytes @ 0x1B
  3591  00BB                     	ds	2
  3592  00BD                     vsnprintf@n:	
  3593                           
  3594                           ; 2 bytes @ 0x1D
  3595  00BD                     	ds	2
  3596  00BF                     vsnprintf@fmt:	
  3597  00BF                     _updateTemperatures$2031:	
  3598                           ; 2 bytes @ 0x1F
  3599                           
  3600                           
  3601                           ; 4 bytes @ 0x1F
  3602  00BF                     	ds	2
  3603  00C1                     vsnprintf@ap:	
  3604                           
  3605                           ; 1 bytes @ 0x21
  3606  00C1                     	ds	1
  3607  00C2                     _vsnprintf$1822:	
  3608                           
  3609                           ; 2 bytes @ 0x22
  3610  00C2                     	ds	1
  3611  00C3                     _updateTemperatures$2032:	
  3612                           
  3613                           ; 4 bytes @ 0x23
  3614  00C3                     	ds	1
  3615  00C4                     vsnprintf@cnt:	
  3616                           
  3617                           ; 2 bytes @ 0x24
  3618  00C4                     	ds	2
  3619  00C6                     vsnprintf@f:	
  3620                           
  3621                           ; 6 bytes @ 0x26
  3622  00C6                     	ds	1
  3623  00C7                     _updateTemperatures$2033:	
  3624                           
  3625                           ; 4 bytes @ 0x27
  3626  00C7                     	ds	4
  3627  00CB                     _updateTemperatures$2034:	
  3628                           
  3629                           ; 4 bytes @ 0x2B
  3630  00CB                     	ds	1
  3631  00CC                     ?_snprintf:	
  3632  00CC                     snprintf@s:	
  3633                           ; 2 bytes @ 0x2C
  3634                           
  3635                           
  3636                           ; 2 bytes @ 0x2C
  3637  00CC                     	ds	2
  3638  00CE                     snprintf@n:	
  3639                           
  3640                           ; 2 bytes @ 0x2E
  3641  00CE                     	ds	1
  3642  00CF                     _updateTemperatures$2035:	
  3643                           
  3644                           ; 4 bytes @ 0x2F
  3645  00CF                     	ds	1
  3646  00D0                     snprintf@fmt:	
  3647                           
  3648                           ; 2 bytes @ 0x30
  3649  00D0                     	ds	3
  3650  00D3                     _updateTemperatures$2036:	
  3651                           
  3652                           ; 4 bytes @ 0x33
  3653  00D3                     	ds	4
  3654  00D7                     _updateTemperatures$2037:	
  3655                           
  3656                           ; 4 bytes @ 0x37
  3657  00D7                     	ds	4
  3658  00DB                     _updateTemperatures$2038:	
  3659                           
  3660                           ; 4 bytes @ 0x3B
  3661  00DB                     	ds	4
  3662  00DF                     _updateTemperatures$2039:	
  3663                           
  3664                           ; 4 bytes @ 0x3F
  3665  00DF                     	ds	4
  3666  00E3                     updateTemperatures@tmp:	
  3667                           
  3668                           ; 4 bytes @ 0x43
  3669  00E3                     	ds	4
  3670  00E7                     updateTemperatures@adcVal:	
  3671                           
  3672                           ; 2 bytes @ 0x47
  3673  00E7                     	ds	2
  3674  00E9                     updateTemperatures@vtsx:	
  3675                           
  3676                           ; 2 bytes @ 0x49
  3677  00E9                     	ds	2
  3678  00EB                     updateTemperatures@rts:	
  3679                           
  3680                           ; 4 bytes @ 0x4B
  3681  00EB                     	ds	4
  3682                           
  3683                           	psect	cstackCOMMON
  3684  0070                     __pcstackCOMMON:	
  3685  0070                     ?_initClock:	
  3686  0070                     ?_init_GPIO:	
  3687                           ; 1 bytes @ 0x0
  3688                           
  3689  0070                     ?_initWDT:	
  3690                           ; 1 bytes @ 0x0
  3691                           
  3692  0070                     ?_init_I2C:	
  3693                           ; 1 bytes @ 0x0
  3694                           
  3695  0070                     ?_init_TMR1:	
  3696                           ; 1 bytes @ 0x0
  3697                           
  3698  0070                     ?_init_RGB:	
  3699                           ; 1 bytes @ 0x0
  3700                           
  3701  0070                     ?_watchdog_timeout_shutdown:	
  3702                           ; 1 bytes @ 0x0
  3703                           
  3704  0070                     ?_statemachine:	
  3705                           ; 1 bytes @ 0x0
  3706                           
  3707  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3708                           ; 1 bytes @ 0x0
  3709                           
  3710  0070                     ?_init_AFE:	
  3711                           ; 1 bytes @ 0x0
  3712                           
  3713  0070                     ?_AFE_UPDATE:	
  3714                           ; 1 bytes @ 0x0
  3715                           
  3716  0070                     ?_printcellParameters:	
  3717                           ; 1 bytes @ 0x0
  3718                           
  3719  0070                     ?_internal_16:	
  3720                           ; 1 bytes @ 0x0
  3721                           
  3722  0070                     ?_updateCurrent:	
  3723                           ; 1 bytes @ 0x0
  3724                           
  3725  0070                     ?_updateVoltages:	
  3726                           ; 1 bytes @ 0x0
  3727                           
  3728  0070                     ?_updateTemperatures:	
  3729                           ; 1 bytes @ 0x0
  3730                           
  3731  0070                     ?_putch:	
  3732                           ; 1 bytes @ 0x0
  3733                           
  3734  0070                     ?_myIsr:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737  0070                     ??_myIsr:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740  0070                     ?_main:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743  0070                     ?_EUSART_Write:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746  0070                     ?_send_I2C_startBit:	
  3747                           ; 1 bytes @ 0x0
  3748                           
  3749  0070                     ?_send_I2C_stopBit:	
  3750                           ; 1 bytes @ 0x0
  3751                           
  3752  0070                     ?_send_I2C_NACK:	
  3753                           ; 1 bytes @ 0x0
  3754                           
  3755  0070                     putch@c:	
  3756                           ; 1 bytes @ 0x0
  3757                           
  3758                           
  3759                           ; 1 bytes @ 0x0
  3760  0070                     	ds	1
  3761  0071                     ??_initClock:	
  3762  0071                     ??_init_GPIO:	
  3763                           ; 1 bytes @ 0x1
  3764                           
  3765  0071                     ??_initWDT:	
  3766                           ; 1 bytes @ 0x1
  3767                           
  3768  0071                     ??_init_I2C:	
  3769                           ; 1 bytes @ 0x1
  3770                           
  3771  0071                     ??_init_TMR1:	
  3772                           ; 1 bytes @ 0x1
  3773                           
  3774  0071                     ??_init_RGB:	
  3775                           ; 1 bytes @ 0x1
  3776                           
  3777  0071                     ?_RGB_color:	
  3778                           ; 1 bytes @ 0x1
  3779                           
  3780  0071                     ??_internal_16:	
  3781                           ; 1 bytes @ 0x1
  3782                           
  3783  0071                     ?_setShuntResistorValue:	
  3784                           ; 1 bytes @ 0x1
  3785                           
  3786  0071                     ??_putch:	
  3787                           ; 1 bytes @ 0x1
  3788                           
  3789  0071                     ??_EUSART_Write:	
  3790                           ; 1 bytes @ 0x1
  3791                           
  3792  0071                     ?_send_I2C_data:	
  3793                           ; 1 bytes @ 0x1
  3794                           
  3795  0071                     ?_send_I2C_controlByte:	
  3796                           ; 1 bytes @ 0x1
  3797                           
  3798  0071                     ??_send_I2C_startBit:	
  3799                           ; 1 bytes @ 0x1
  3800                           
  3801  0071                     ??_send_I2C_stopBit:	
  3802                           ; 1 bytes @ 0x1
  3803                           
  3804  0071                     ??_send_I2C_NACK:	
  3805                           ; 1 bytes @ 0x1
  3806                           
  3807  0071                     ??___aodiv:	
  3808                           ; 1 bytes @ 0x1
  3809                           
  3810  0071                     ??___aomod:	
  3811                           ; 1 bytes @ 0x1
  3812                           
  3813  0071                     ??___lodiv:	
  3814                           ; 1 bytes @ 0x1
  3815                           
  3816  0071                     ??___lomod:	
  3817                           ; 1 bytes @ 0x1
  3818                           
  3819  0071                     ?_fputc:	
  3820                           ; 1 bytes @ 0x1
  3821                           
  3822  0071                     ?_strlen:	
  3823                           ; 2 bytes @ 0x1
  3824                           
  3825  0071                     ?_isupper:	
  3826                           ; 2 bytes @ 0x1
  3827                           
  3828  0071                     ?_isalpha:	
  3829                           ; 2 bytes @ 0x1
  3830                           
  3831  0071                     ?_isdigit:	
  3832                           ; 2 bytes @ 0x1
  3833                           
  3834  0071                     ?_strncmp:	
  3835                           ; 2 bytes @ 0x1
  3836                           
  3837  0071                     ?__Umul8_16:	
  3838                           ; 2 bytes @ 0x1
  3839                           
  3840  0071                     ?_isspace:	
  3841                           ; 2 bytes @ 0x1
  3842                           
  3843  0071                     ?_islower:	
  3844                           ; 2 bytes @ 0x1
  3845                           
  3846  0071                     ?_read_I2C_data:	
  3847                           ; 2 bytes @ 0x1
  3848                           
  3849  0071                     ?___wmul:	
  3850                           ; 2 bytes @ 0x1
  3851                           
  3852  0071                     ?___lmul:	
  3853                           ; 2 bytes @ 0x1
  3854                           
  3855  0071                     ?___xxtofl:	
  3856                           ; 4 bytes @ 0x1
  3857                           
  3858  0071                     EUSART_Write@txData:	
  3859                           ; 4 bytes @ 0x1
  3860                           
  3861  0071                     __Umul8_16@multiplicand:	
  3862                           ; 1 bytes @ 0x1
  3863                           
  3864  0071                     send_I2C_data@databyte:	
  3865                           ; 1 bytes @ 0x1
  3866                           
  3867  0071                     send_I2C_controlByte@BlockAddress:	
  3868                           ; 2 bytes @ 0x1
  3869                           
  3870  0071                     RGB_color@color:	
  3871                           ; 2 bytes @ 0x1
  3872                           
  3873  0071                     ___wmul@multiplier:	
  3874                           ; 2 bytes @ 0x1
  3875                           
  3876  0071                     isalpha@c:	
  3877                           ; 2 bytes @ 0x1
  3878                           
  3879  0071                     isdigit@c:	
  3880                           ; 2 bytes @ 0x1
  3881                           
  3882  0071                     isspace@c:	
  3883                           ; 2 bytes @ 0x1
  3884                           
  3885  0071                     isupper@c:	
  3886                           ; 2 bytes @ 0x1
  3887                           
  3888  0071                     fputc@c:	
  3889                           ; 2 bytes @ 0x1
  3890                           
  3891  0071                     strlen@s:	
  3892                           ; 2 bytes @ 0x1
  3893                           
  3894  0071                     strncmp@_l:	
  3895                           ; 2 bytes @ 0x1
  3896                           
  3897  0071                     islower@c:	
  3898                           ; 2 bytes @ 0x1
  3899                           
  3900  0071                     setShuntResistorValue@res_mOhm:	
  3901                           ; 2 bytes @ 0x1
  3902                           
  3903  0071                     ___lmul@multiplier:	
  3904                           ; 4 bytes @ 0x1
  3905                           
  3906  0071                     ___xxtofl@val:	
  3907                           ; 4 bytes @ 0x1
  3908                           
  3909                           
  3910                           ; 4 bytes @ 0x1
  3911  0071                     	ds	1
  3912  0072                     ?_EUSART_Write_Text:	
  3913  0072                     ___aodiv@counter:	
  3914                           ; 1 bytes @ 0x2
  3915                           
  3916  0072                     ___aomod@counter:	
  3917                           ; 1 bytes @ 0x2
  3918                           
  3919  0072                     ___lomod@counter:	
  3920                           ; 1 bytes @ 0x2
  3921                           
  3922  0072                     EUSART_Write_Text@text:	
  3923                           ; 1 bytes @ 0x2
  3924                           
  3925  0072                     ___lodiv@quotient:	
  3926                           ; 2 bytes @ 0x2
  3927                           
  3928                           
  3929                           ; 8 bytes @ 0x2
  3930  0072                     	ds	1
  3931  0073                     ??_watchdog_timeout_shutdown:	
  3932  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3933                           ; 1 bytes @ 0x3
  3934                           
  3935  0073                     ??_RGB_color:	
  3936                           ; 1 bytes @ 0x3
  3937                           
  3938  0073                     ??_strlen:	
  3939                           ; 1 bytes @ 0x3
  3940                           
  3941  0073                     ??_isupper:	
  3942                           ; 1 bytes @ 0x3
  3943                           
  3944  0073                     ??_isalpha:	
  3945                           ; 1 bytes @ 0x3
  3946                           
  3947  0073                     ??_isdigit:	
  3948                           ; 1 bytes @ 0x3
  3949                           
  3950  0073                     ??__Umul8_16:	
  3951                           ; 1 bytes @ 0x3
  3952                           
  3953  0073                     ??_isspace:	
  3954                           ; 1 bytes @ 0x3
  3955                           
  3956  0073                     ??_islower:	
  3957                           ; 1 bytes @ 0x3
  3958                           
  3959  0073                     ??_send_I2C_data:	
  3960                           ; 1 bytes @ 0x3
  3961                           
  3962  0073                     ??_read_I2C_data:	
  3963                           ; 1 bytes @ 0x3
  3964                           
  3965  0073                     ___aodiv@sign:	
  3966                           ; 1 bytes @ 0x3
  3967                           
  3968  0073                     ___aomod@sign:	
  3969                           ; 1 bytes @ 0x3
  3970                           
  3971  0073                     send_I2C_controlByte@RW_bit:	
  3972                           ; 1 bytes @ 0x3
  3973                           
  3974  0073                     ___wmul@multiplicand:	
  3975                           ; 2 bytes @ 0x3
  3976                           
  3977  0073                     fputc@fp:	
  3978                           ; 2 bytes @ 0x3
  3979                           
  3980  0073                     strlen@a:	
  3981                           ; 2 bytes @ 0x3
  3982                           
  3983  0073                     strncmp@_r:	
  3984                           ; 2 bytes @ 0x3
  3985                           
  3986                           
  3987                           ; 2 bytes @ 0x3
  3988  0073                     	ds	1
  3989  0074                     ??_EUSART_Write_Text:	
  3990  0074                     ?_abs:	
  3991                           ; 1 bytes @ 0x4
  3992                           
  3993  0074                     abs@a:	
  3994                           ; 2 bytes @ 0x4
  3995                           
  3996  0074                     ___aodiv@quotient:	
  3997                           ; 2 bytes @ 0x4
  3998                           
  3999                           
  4000                           ; 8 bytes @ 0x4
  4001  0074                     	ds	1
  4002  0075                     ??_setShuntResistorValue:	
  4003  0075                     ??_fputc:	
  4004                           ; 1 bytes @ 0x5
  4005                           
  4006  0075                     ??_send_I2C_controlByte:	
  4007                           ; 1 bytes @ 0x5
  4008                           
  4009  0075                     ?_I2C_writeRegister:	
  4010                           ; 1 bytes @ 0x5
  4011                           
  4012  0075                     ??___wmul:	
  4013                           ; 1 bytes @ 0x5
  4014                           
  4015  0075                     ??___xxtofl:	
  4016                           ; 1 bytes @ 0x5
  4017                           
  4018  0075                     ?_readRegister:	
  4019                           ; 1 bytes @ 0x5
  4020                           
  4021  0075                     _isspace$1677:	
  4022                           ; 2 bytes @ 0x5
  4023                           
  4024  0075                     EUSART_Write_Text@i:	
  4025                           ; 1 bytes @ 0x5
  4026                           
  4027  0075                     I2C_writeRegister@slaveAddress:	
  4028                           ; 2 bytes @ 0x5
  4029                           
  4030  0075                     readRegister@slaveAddress:	
  4031                           ; 2 bytes @ 0x5
  4032                           
  4033  0075                     ___wmul@product:	
  4034                           ; 2 bytes @ 0x5
  4035                           
  4036  0075                     strncmp@n:	
  4037                           ; 2 bytes @ 0x5
  4038                           
  4039  0075                     __Umul8_16@product:	
  4040                           ; 2 bytes @ 0x5
  4041                           
  4042  0075                     ___lmul@multiplicand:	
  4043                           ; 2 bytes @ 0x5
  4044                           
  4045                           
  4046                           ; 4 bytes @ 0x5
  4047  0075                     	ds	1
  4048  0076                     ??_abs:	
  4049                           
  4050                           ; 1 bytes @ 0x6
  4051  0076                     	ds	1
  4052  0077                     ??_setTemperatureLimitsint:	
  4053  0077                     ??_strncmp:	
  4054                           ; 1 bytes @ 0x7
  4055                           
  4056  0077                     ?_toupper:	
  4057                           ; 1 bytes @ 0x7
  4058                           
  4059  0077                     ?_atoi:	
  4060                           ; 2 bytes @ 0x7
  4061                           
  4062  0077                     I2C_writeRegister@regAddress:	
  4063                           ; 2 bytes @ 0x7
  4064                           
  4065  0077                     readRegister@regAddress:	
  4066                           ; 2 bytes @ 0x7
  4067                           
  4068  0077                     atoi@s:	
  4069                           ; 2 bytes @ 0x7
  4070                           
  4071  0077                     toupper@c:	
  4072                           ; 2 bytes @ 0x7
  4073                           
  4074  0077                     __Umul8_16@word_mpld:	
  4075                           ; 2 bytes @ 0x7
  4076                           
  4077                           
  4078                           ; 2 bytes @ 0x7
  4079  0077                     	ds	1
  4080  0078                     strncmp@l:	
  4081                           
  4082                           ; 2 bytes @ 0x8
  4083  0078                     	ds	1
  4084  0079                     ??_readRegister:	
  4085  0079                     ??___lmul:	
  4086                           ; 1 bytes @ 0x9
  4087                           
  4088  0079                     ??___aldiv:	
  4089                           ; 1 bytes @ 0x9
  4090                           
  4091  0079                     __Umul8_16@multiplier:	
  4092                           ; 1 bytes @ 0x9
  4093                           
  4094  0079                     I2C_writeRegister@data:	
  4095                           ; 1 bytes @ 0x9
  4096                           
  4097  0079                     readRegister@recievedData:	
  4098                           ; 2 bytes @ 0x9
  4099                           
  4100  0079                     _toupper$1785:	
  4101                           ; 2 bytes @ 0x9
  4102                           
  4103                           
  4104                           ; 2 bytes @ 0x9
  4105  0079                     	ds	1
  4106  007A                     ??_stoa:	
  4107  007A                     ??___flneg:	
  4108                           ; 1 bytes @ 0xA
  4109                           
  4110  007A                     ??___flsub:	
  4111                           ; 1 bytes @ 0xA
  4112                           
  4113  007A                     ?_fputs:	
  4114                           ; 1 bytes @ 0xA
  4115                           
  4116  007A                     ___fltol@sign1:	
  4117                           ; 2 bytes @ 0xA
  4118                           
  4119  007A                     ___lodiv@counter:	
  4120                           ; 1 bytes @ 0xA
  4121                           
  4122  007A                     EUSART_Initialize@x:	
  4123                           ; 1 bytes @ 0xA
  4124                           
  4125  007A                     fputs@fp:	
  4126                           ; 2 bytes @ 0xA
  4127                           
  4128  007A                     strncmp@r:	
  4129                           ; 2 bytes @ 0xA
  4130                           
  4131                           
  4132                           ; 2 bytes @ 0xA
  4133  007A                     	ds	1
  4134  007B                     ??_init_AFE:	
  4135  007B                     ??_I2C_writeRegister:	
  4136                           ; 1 bytes @ 0xB
  4137                           
  4138  007B                     enableDischarging@sys_ctrl2:	
  4139                           ; 1 bytes @ 0xB
  4140                           
  4141  007B                     enableCharging@sys_ctrl2:	
  4142                           ; 1 bytes @ 0xB
  4143                           
  4144  007B                     ___fltol@exp1:	
  4145                           ; 1 bytes @ 0xB
  4146                           
  4147                           
  4148                           ; 1 bytes @ 0xB
  4149  007B                     	ds	1
  4150  007C                     ??_AFE_UPDATE:	
  4151  007C                     ??_printcellParameters:	
  4152                           ; 1 bytes @ 0xC
  4153                           
  4154                           
  4155                           	psect	cstackBANK0
  4156  0020                     __pcstackBANK0:	
  4157                           ; 1 bytes @ 0xC
  4158                           
  4159  0020                     ?_setTemperatureLimitsint:	
  4160  0020                     ?_enableDischarging:	
  4161                           ; 1 bytes @ 0x0
  4162                           
  4163  0020                     ?_enableCharging:	
  4164                           ; 1 bytes @ 0x0
  4165                           
  4166  0020                     ??_fputs:	
  4167                           ; 1 bytes @ 0x0
  4168                           
  4169  0020                     ??_toupper:	
  4170                           ; 1 bytes @ 0x0
  4171                           
  4172  0020                     ??_atoi:	
  4173                           ; 1 bytes @ 0x0
  4174                           
  4175  0020                     ?_beginAFEcommunication:	
  4176                           ; 1 bytes @ 0x0
  4177                           
  4178  0020                     ?_stoa:	
  4179                           ; 2 bytes @ 0x0
  4180                           
  4181  0020                     ?___aodiv:	
  4182                           ; 2 bytes @ 0x0
  4183                           
  4184  0020                     ?___aomod:	
  4185                           ; 8 bytes @ 0x0
  4186                           
  4187  0020                     ?___lodiv:	
  4188                           ; 8 bytes @ 0x0
  4189                           
  4190  0020                     ?___lomod:	
  4191                           ; 8 bytes @ 0x0
  4192                           
  4193  0020                     ___xxtofl@sign:	
  4194                           ; 8 bytes @ 0x0
  4195                           
  4196  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4197                           ; 1 bytes @ 0x0
  4198                           
  4199  0020                     enableDischarging@enable:	
  4200                           ; 2 bytes @ 0x0
  4201                           
  4202  0020                     enableCharging@enable:	
  4203                           ; 2 bytes @ 0x0
  4204                           
  4205  0020                     stoa@fp:	
  4206                           ; 2 bytes @ 0x0
  4207                           
  4208  0020                     ___lmul@product:	
  4209                           ; 2 bytes @ 0x0
  4210                           
  4211  0020                     ___aodiv@divisor:	
  4212                           ; 4 bytes @ 0x0
  4213                           
  4214  0020                     ___aomod@divisor:	
  4215                           ; 8 bytes @ 0x0
  4216                           
  4217  0020                     ___lodiv@divisor:	
  4218                           ; 8 bytes @ 0x0
  4219                           
  4220  0020                     ___lomod@divisor:	
  4221                           ; 8 bytes @ 0x0
  4222                           
  4223                           
  4224                           ; 8 bytes @ 0x0
  4225  0020                     	ds	1
  4226  0021                     ___xxtofl@exp:	
  4227                           
  4228                           ; 1 bytes @ 0x1
  4229  0021                     	ds	1
  4230  0022                     ??_beginAFEcommunication:	
  4231  0022                     ??_enableDischarging:	
  4232                           ; 1 bytes @ 0x2
  4233                           
  4234  0022                     ??_enableCharging:	
  4235                           ; 1 bytes @ 0x2
  4236                           
  4237  0022                     fputs@c:	
  4238                           ; 1 bytes @ 0x2
  4239                           
  4240  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4241                           ; 1 bytes @ 0x2
  4242                           
  4243  0022                     stoa@s:	
  4244                           ; 2 bytes @ 0x2
  4245                           
  4246  0022                     ___xxtofl@arg:	
  4247                           ; 2 bytes @ 0x2
  4248                           
  4249                           
  4250                           ; 4 bytes @ 0x2
  4251  0022                     	ds	1
  4252  0023                     fputs@i:	
  4253                           
  4254                           ; 2 bytes @ 0x3
  4255  0023                     	ds	1
  4256  0024                     ?___aldiv:	
  4257  0024                     setTemperatureLimitsint@minCharge_degC:	
  4258                           ; 4 bytes @ 0x4
  4259                           
  4260  0024                     atoi@neg:	
  4261                           ; 2 bytes @ 0x4
  4262                           
  4263  0024                     ___aldiv@divisor:	
  4264                           ; 2 bytes @ 0x4
  4265                           
  4266  0024                     stoa@nuls:	
  4267                           ; 4 bytes @ 0x4
  4268                           
  4269                           
  4270                           ; 7 bytes @ 0x4
  4271  0024                     	ds	1
  4272  0025                     fputs@s:	
  4273                           
  4274                           ; 1 bytes @ 0x5
  4275  0025                     	ds	1
  4276  0026                     ?_pad:	
  4277  0026                     ?___flmul:	
  4278                           ; 2 bytes @ 0x6
  4279                           
  4280  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4281                           ; 4 bytes @ 0x6
  4282                           
  4283  0026                     pad@fp:	
  4284                           ; 2 bytes @ 0x6
  4285                           
  4286  0026                     _atoi$1650:	
  4287                           ; 2 bytes @ 0x6
  4288                           
  4289  0026                     ___flmul@b:	
  4290                           ; 2 bytes @ 0x6
  4291                           
  4292                           
  4293                           ; 4 bytes @ 0x6
  4294  0026                     	ds	2
  4295  0028                     pad@buf:	
  4296  0028                     _atoi$1652:	
  4297                           ; 1 bytes @ 0x8
  4298                           
  4299  0028                     ___aldiv@dividend:	
  4300                           ; 2 bytes @ 0x8
  4301                           
  4302  0028                     ___aodiv@dividend:	
  4303                           ; 4 bytes @ 0x8
  4304                           
  4305  0028                     ___aomod@dividend:	
  4306                           ; 8 bytes @ 0x8
  4307                           
  4308  0028                     ___lodiv@dividend:	
  4309                           ; 8 bytes @ 0x8
  4310                           
  4311  0028                     ___lomod@dividend:	
  4312                           ; 8 bytes @ 0x8
  4313                           
  4314                           
  4315                           ; 8 bytes @ 0x8
  4316  0028                     	ds	1
  4317  0029                     pad@p:	
  4318                           
  4319                           ; 2 bytes @ 0x9
  4320  0029                     	ds	1
  4321  002A                     _atoi$1651:	
  4322  002A                     ___flmul@a:	
  4323                           ; 1 bytes @ 0xA
  4324                           
  4325                           
  4326                           ; 4 bytes @ 0xA
  4327  002A                     	ds	1
  4328  002B                     ??_pad:	
  4329  002B                     beginAFEcommunication@commSuccess:	
  4330                           ; 1 bytes @ 0xB
  4331                           
  4332  002B                     stoa@i:	
  4333                           ; 2 bytes @ 0xB
  4334                           
  4335  002B                     atoi@n:	
  4336                           ; 2 bytes @ 0xB
  4337                           
  4338                           
  4339                           ; 2 bytes @ 0xB
  4340  002B                     	ds	1
  4341  002C                     ___aldiv@counter:	
  4342  002C                     pad@i:	
  4343                           ; 1 bytes @ 0xC
  4344                           
  4345                           
  4346                           ; 2 bytes @ 0xC
  4347  002C                     	ds	1
  4348  002D                     ___aldiv@sign:	
  4349  002D                     beginAFEcommunication@i:	
  4350                           ; 1 bytes @ 0xD
  4351                           
  4352  002D                     stoa@w:	
  4353                           ; 2 bytes @ 0xD
  4354                           
  4355                           
  4356                           ; 2 bytes @ 0xD
  4357  002D                     	ds	1
  4358  002E                     ??___flmul:	
  4359  002E                     pad@w:	
  4360                           ; 1 bytes @ 0xE
  4361                           
  4362  002E                     ___aldiv@quotient:	
  4363                           ; 2 bytes @ 0xE
  4364                           
  4365                           
  4366                           ; 4 bytes @ 0xE
  4367  002E                     	ds	1
  4368  002F                     stoa@cp:	
  4369                           
  4370                           ; 2 bytes @ 0xF
  4371  002F                     	ds	1
  4372  0030                     ?_ctoa:	
  4373  0030                     ?_dtoa:	
  4374                           ; 2 bytes @ 0x10
  4375                           
  4376  0030                     ?_otoa:	
  4377                           ; 2 bytes @ 0x10
  4378                           
  4379  0030                     ?_utoa:	
  4380                           ; 2 bytes @ 0x10
  4381                           
  4382  0030                     ?_xtoa:	
  4383                           ; 2 bytes @ 0x10
  4384                           
  4385  0030                     ctoa@fp:	
  4386                           ; 2 bytes @ 0x10
  4387                           
  4388  0030                     dtoa@fp:	
  4389                           ; 2 bytes @ 0x10
  4390                           
  4391  0030                     otoa@fp:	
  4392                           ; 2 bytes @ 0x10
  4393                           
  4394  0030                     utoa@fp:	
  4395                           ; 2 bytes @ 0x10
  4396                           
  4397  0030                     xtoa@fp:	
  4398                           ; 2 bytes @ 0x10
  4399                           
  4400                           
  4401                           ; 2 bytes @ 0x10
  4402  0030                     	ds	1
  4403  0031                     stoa@p:	
  4404                           
  4405                           ; 2 bytes @ 0x11
  4406  0031                     	ds	1
  4407  0032                     ?_EUSART_Initialize:	
  4408  0032                     ?_setCellUndervoltageProtection:	
  4409                           ; 1 bytes @ 0x12
  4410                           
  4411  0032                     ?_setCellOvervoltageProtection:	
  4412                           ; 1 bytes @ 0x12
  4413                           
  4414  0032                     ctoa@c:	
  4415                           ; 1 bytes @ 0x12
  4416                           
  4417  0032                     setCellUndervoltageProtection@voltage_mV:	
  4418                           ; 1 bytes @ 0x12
  4419                           
  4420  0032                     setCellOvervoltageProtection@voltage_mV:	
  4421                           ; 2 bytes @ 0x12
  4422                           
  4423  0032                     EUSART_Initialize@baudrate:	
  4424                           ; 2 bytes @ 0x12
  4425                           
  4426  0032                     dtoa@d:	
  4427                           ; 4 bytes @ 0x12
  4428                           
  4429  0032                     otoa@d:	
  4430                           ; 8 bytes @ 0x12
  4431                           
  4432  0032                     utoa@d:	
  4433                           ; 8 bytes @ 0x12
  4434                           
  4435  0032                     xtoa@d:	
  4436                           ; 8 bytes @ 0x12
  4437                           
  4438                           
  4439                           ; 8 bytes @ 0x12
  4440  0032                     	ds	1
  4441  0033                     ??_ctoa:	
  4442  0033                     ___flmul@sign:	
  4443                           ; 1 bytes @ 0x13
  4444                           
  4445  0033                     stoa@l:	
  4446                           ; 1 bytes @ 0x13
  4447                           
  4448                           
  4449                           ; 2 bytes @ 0x13
  4450  0033                     	ds	1
  4451  0034                     ___flmul@aexp:	
  4452  0034                     setCellUndervoltageProtection@delay_s:	
  4453                           ; 1 bytes @ 0x14
  4454                           
  4455  0034                     setCellOvervoltageProtection@delay_s:	
  4456                           ; 2 bytes @ 0x14
  4457                           
  4458  0034                     ctoa@w:	
  4459                           ; 2 bytes @ 0x14
  4460                           
  4461                           
  4462                           ; 2 bytes @ 0x14
  4463  0034                     	ds	1
  4464  0035                     ___flmul@grs:	
  4465                           
  4466                           ; 4 bytes @ 0x15
  4467  0035                     	ds	1
  4468  0036                     ??_EUSART_Initialize:	
  4469  0036                     ??_setCellUndervoltageProtection:	
  4470                           ; 1 bytes @ 0x16
  4471                           
  4472  0036                     ??_setCellOvervoltageProtection:	
  4473                           ; 1 bytes @ 0x16
  4474                           
  4475                           
  4476                           ; 1 bytes @ 0x16
  4477  0036                     	ds	3
  4478  0039                     ___flmul@bexp:	
  4479                           
  4480                           ; 1 bytes @ 0x19
  4481  0039                     	ds	1
  4482  003A                     ??_dtoa:	
  4483  003A                     ??_otoa:	
  4484                           ; 1 bytes @ 0x1A
  4485                           
  4486  003A                     ??_utoa:	
  4487                           ; 1 bytes @ 0x1A
  4488                           
  4489  003A                     xtoa@x:	
  4490                           ; 1 bytes @ 0x1A
  4491                           
  4492  003A                     ___flmul@prod:	
  4493                           ; 1 bytes @ 0x1A
  4494                           
  4495                           
  4496                           ; 4 bytes @ 0x1A
  4497  003A                     	ds	1
  4498  003B                     ??_xtoa:	
  4499  003B                     utoa@p:	
  4500                           ; 1 bytes @ 0x1B
  4501                           
  4502                           
  4503                           ; 2 bytes @ 0x1B
  4504  003B                     	ds	2
  4505  003D                     _dtoa$1199:	
  4506  003D                     utoa@w:	
  4507                           ; 2 bytes @ 0x1D
  4508                           
  4509                           
  4510                           ; 2 bytes @ 0x1D
  4511  003D                     	ds	1
  4512  003E                     ___flmul@temp:	
  4513                           
  4514                           ; 2 bytes @ 0x1E
  4515  003E                     	ds	1
  4516  003F                     dtoa@p:	
  4517  003F                     utoa@n:	
  4518                           ; 2 bytes @ 0x1F
  4519                           
  4520                           
  4521                           ; 8 bytes @ 0x1F
  4522  003F                     	ds	1
  4523  0040                     ?___fldiv:	
  4524  0040                     ___fldiv@a:	
  4525                           ; 4 bytes @ 0x20
  4526                           
  4527                           
  4528                           ; 4 bytes @ 0x20
  4529  0040                     	ds	1
  4530  0041                     dtoa@w:	
  4531                           
  4532                           ; 2 bytes @ 0x21
  4533  0041                     	ds	1
  4534  0042                     otoa@p:	
  4535                           
  4536                           ; 2 bytes @ 0x22
  4537  0042                     	ds	1
  4538  0043                     dtoa@s:	
  4539  0043                     _xtoa$1235:	
  4540                           ; 2 bytes @ 0x23
  4541                           
  4542                           
  4543                           ; 2 bytes @ 0x23
  4544  0043                     	ds	1
  4545  0044                     setCellUndervoltageProtection@uv_trip:	
  4546  0044                     setCellOvervoltageProtection@ov_trip:	
  4547                           ; 1 bytes @ 0x24
  4548                           
  4549  0044                     otoa@t:	
  4550                           ; 1 bytes @ 0x24
  4551                           
  4552  0044                     ___fldiv@b:	
  4553                           ; 2 bytes @ 0x24
  4554                           
  4555                           
  4556                           ; 4 bytes @ 0x24
  4557  0044                     	ds	1
  4558  0045                     setCellUndervoltageProtection@i:	
  4559  0045                     setCellOvervoltageProtection@i:	
  4560                           ; 2 bytes @ 0x25
  4561                           
  4562  0045                     _xtoa$1236:	
  4563                           ; 2 bytes @ 0x25
  4564                           
  4565  0045                     dtoa@n:	
  4566                           ; 2 bytes @ 0x25
  4567                           
  4568                           
  4569                           ; 8 bytes @ 0x25
  4570  0045                     	ds	1
  4571  0046                     otoa@w:	
  4572                           
  4573                           ; 2 bytes @ 0x26
  4574  0046                     	ds	1
  4575  0047                     utoa@i:	
  4576  0047                     xtoa@p:	
  4577                           ; 2 bytes @ 0x27
  4578                           
  4579                           
  4580                           ; 2 bytes @ 0x27
  4581  0047                     	ds	1
  4582  0048                     ??___fldiv:	
  4583  0048                     otoa@n:	
  4584                           ; 1 bytes @ 0x28
  4585                           
  4586                           
  4587                           ; 8 bytes @ 0x28
  4588  0048                     	ds	1
  4589  0049                     xtoa@w:	
  4590                           
  4591                           ; 2 bytes @ 0x29
  4592  0049                     	ds	2
  4593  004B                     xtoa@n:	
  4594                           
  4595                           ; 8 bytes @ 0x2B
  4596  004B                     	ds	2
  4597  004D                     dtoa@i:	
  4598  004D                     ___fldiv@rem:	
  4599                           ; 2 bytes @ 0x2D
  4600                           
  4601                           
  4602                           ; 4 bytes @ 0x2D
  4603  004D                     	ds	3
  4604  0050                     otoa@i:	
  4605                           
  4606                           ; 2 bytes @ 0x30
  4607  0050                     	ds	1
  4608  0051                     ___fldiv@sign:	
  4609                           
  4610                           ; 1 bytes @ 0x31
  4611  0051                     	ds	1
  4612  0052                     ___fldiv@new_exp:	
  4613                           
  4614                           ; 2 bytes @ 0x32
  4615  0052                     	ds	1
  4616  0053                     xtoa@i:	
  4617                           
  4618                           ; 2 bytes @ 0x33
  4619  0053                     	ds	1
  4620  0054                     ___fldiv@grs:	
  4621                           
  4622                           ; 4 bytes @ 0x34
  4623  0054                     	ds	1
  4624  0055                     xtoa@c:	
  4625                           
  4626                           ; 2 bytes @ 0x35
  4627  0055                     	ds	2
  4628  0057                     ?_vfpfcnvrt:	
  4629  0057                     vfpfcnvrt@fp:	
  4630                           ; 2 bytes @ 0x37
  4631                           
  4632                           
  4633                           ; 2 bytes @ 0x37
  4634  0057                     	ds	1
  4635  0058                     ___fldiv@bexp:	
  4636                           
  4637                           ; 1 bytes @ 0x38
  4638  0058                     	ds	1
  4639  0059                     vfpfcnvrt@fmt:	
  4640  0059                     ___fldiv@aexp:	
  4641                           ; 1 bytes @ 0x39
  4642                           
  4643                           
  4644                           ; 1 bytes @ 0x39
  4645  0059                     	ds	1
  4646  005A                     ?___flge:	
  4647  005A                     ?___flneg:	
  4648                           ; 1 bit 
  4649                           
  4650  005A                     ?___fladd:	
  4651                           ; 4 bytes @ 0x3A
  4652                           
  4653  005A                     vfpfcnvrt@ap:	
  4654                           ; 4 bytes @ 0x3A
  4655                           
  4656  005A                     ___flge@ff1:	
  4657                           ; 1 bytes @ 0x3A
  4658                           
  4659  005A                     ___flneg@f1:	
  4660                           ; 4 bytes @ 0x3A
  4661                           
  4662  005A                     ___fladd@b:	
  4663                           ; 4 bytes @ 0x3A
  4664                           
  4665                           
  4666                           ; 4 bytes @ 0x3A
  4667  005A                     	ds	1
  4668  005B                     ??_vfpfcnvrt:	
  4669                           
  4670                           ; 1 bytes @ 0x3B
  4671  005B                     	ds	3
  4672  005E                     ___flge@ff2:	
  4673  005E                     ___fladd@a:	
  4674                           ; 4 bytes @ 0x3E
  4675                           
  4676                           
  4677                           ; 4 bytes @ 0x3E
  4678  005E                     	ds	3
  4679  0061                     ?_vfprintf:	
  4680  0061                     vfprintf@fp:	
  4681                           ; 2 bytes @ 0x41
  4682                           
  4683                           
  4684                           ; 2 bytes @ 0x41
  4685  0061                     	ds	1
  4686  0062                     ??___flge:	
  4687  0062                     ??___fladd:	
  4688                           ; 1 bytes @ 0x42
  4689                           
  4690                           
  4691                           ; 1 bytes @ 0x42
  4692  0062                     	ds	1
  4693  0063                     vfprintf@fmt:	
  4694                           
  4695                           ; 2 bytes @ 0x43
  4696  0063                     	ds	2
  4697  0065                     vfprintf@ap:	
  4698                           
  4699                           ; 1 bytes @ 0x45
  4700  0065                     	ds	1
  4701  0066                     ?_setShortCircuitProtection:	
  4702  0066                     ?_setOverCurrentDischargeProtection:	
  4703                           ; 1 bytes @ 0x46
  4704                           
  4705  0066                     ??_vfprintf:	
  4706                           ; 1 bytes @ 0x46
  4707                           
  4708  0066                     setShortCircuitProtection@current_mA:	
  4709                           ; 1 bytes @ 0x46
  4710                           
  4711  0066                     setOverCurrentDischargeProtection@current_mA:	
  4712                           ; 4 bytes @ 0x46
  4713                           
  4714                           
  4715                           ; 4 bytes @ 0x46
  4716  0066                     	ds	2
  4717  0068                     vfprintf@cfmt:	
  4718                           
  4719                           ; 2 bytes @ 0x48
  4720  0068                     	ds	2
  4721  006A                     ??_vsnprintf:	
  4722  006A                     ___fladd@signs:	
  4723                           ; 1 bytes @ 0x4A
  4724                           
  4725  006A                     setShortCircuitProtection@delay_us:	
  4726                           ; 1 bytes @ 0x4A
  4727                           
  4728  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4729                           ; 2 bytes @ 0x4A
  4730                           
  4731                           
  4732                           ; 2 bytes @ 0x4A
  4733  006A                     	ds	1
  4734  006B                     ___fladd@aexp:	
  4735                           
  4736                           ; 1 bytes @ 0x4B
  4737  006B                     	ds	1
  4738  006C                     ??_snprintf:	
  4739  006C                     ??_setShortCircuitProtection:	
  4740                           ; 1 bytes @ 0x4C
  4741                           
  4742  006C                     ??_setOverCurrentDischargeProtection:	
  4743                           ; 1 bytes @ 0x4C
  4744                           
  4745  006C                     ___fladd@bexp:	
  4746                           ; 1 bytes @ 0x4C
  4747                           
  4748                           
  4749                           ; 1 bytes @ 0x4C
  4750  006C                     	ds	1
  4751  006D                     ___fladd@grs:	
  4752                           
  4753                           ; 1 bytes @ 0x4D
  4754  006D                     	ds	2
  4755  006F                     snprintf@ap:	
  4756                           
  4757                           ; 1 bytes @ 0x4F
  4758  006F                     	ds	1
  4759                           
  4760                           	psect	maintext
  4761  3697                     __pmaintext:	
  4762 ;;
  4763 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4764 ;;
  4765 ;; *************** function _main *****************
  4766 ;; Defined at:
  4767 ;;		line 72 in file "main.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : B1F/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4784 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4785 ;;Total ram usage:        2 bytes
  4786 ;; Hardware stack levels required when called:   12
  4787 ;; This function calls:
  4788 ;;		_EUSART_Initialize
  4789 ;;		_initClock
  4790 ;;		_initWDT
  4791 ;;		_init_GPIO
  4792 ;;		_init_I2C
  4793 ;;		_init_RGB
  4794 ;;		_init_TMR1
  4795 ;;		_statemachine
  4796 ;;		_watchdog_timeout_shutdown
  4797 ;; This function is called by:
  4798 ;;		Startup code after reset
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           
  4803                           ;psect for function _main
  4804  3697                     _main:	
  4805                           
  4806                           ;main.c: 75:     initClock();
  4807                           
  4808                           ;incstack = 0
  4809                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4810  3697  3187  27FD  31B6   	fcall	_initClock
  4811                           
  4812                           ;main.c: 76:     init_GPIO();
  4813  369A  3188  2008  31B6   	fcall	_init_GPIO
  4814                           
  4815                           ;main.c: 77:     initWDT();
  4816  369D  31B3  23D5  31B6   	fcall	_initWDT
  4817                           
  4818                           ;main.c: 78:     init_I2C();
  4819  36A0  31B4  2433  31B6   	fcall	_init_I2C
  4820                           
  4821                           ;main.c: 79:     EUSART_Initialize(9600);
  4822  36A3  3000               	movlw	0
  4823  36A4  0020               	movlb	0	; select bank0
  4824  36A5  00B5               	movwf	EUSART_Initialize@baudrate+3
  4825  36A6  3000               	movlw	0
  4826  36A7  00B4               	movwf	EUSART_Initialize@baudrate+2
  4827  36A8  3025               	movlw	37
  4828  36A9  00B3               	movwf	EUSART_Initialize@baudrate+1
  4829  36AA  3080               	movlw	128
  4830  36AB  00B2               	movwf	EUSART_Initialize@baudrate
  4831  36AC  31AD  251A  31B6   	fcall	_EUSART_Initialize
  4832                           
  4833                           ;main.c: 80:     init_TMR1();
  4834  36AF  31B4  241C  31B6   	fcall	_init_TMR1
  4835                           
  4836                           ;main.c: 81:     init_RGB();
  4837  36B2  3198  2000  31B6   	fcall	_init_RGB
  4838                           
  4839                           ;main.c: 84:     watchdog_timeout_shutdown();
  4840  36B5  31B5  252F  31B6   	fcall	_watchdog_timeout_shutdown
  4841  36B8                     l8418:	
  4842                           
  4843                           ;main.c: 88:         statemachine();
  4844  36B8  31AA  220A  31B6   	fcall	_statemachine
  4845                           
  4846                           ;main.c: 90:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  4847  36BB  3015               	movlw	21
  4848  36BC  0023               	movlb	3	; select bank3
  4849  36BD  00E4               	movwf	(??_main^(0+384)+1)
  4850  36BE  304B               	movlw	75
  4851  36BF  00E3               	movwf	??_main^(0+384)
  4852  36C0  30BE               	movlw	190
  4853  36C1                     u11497:	
  4854  36C1  0B89               	decfsz	9,f
  4855  36C2  2EC1               	goto	u11497
  4856  36C3  0BE3               	decfsz	??_main^(0+384),f
  4857  36C4  2EC1               	goto	u11497
  4858  36C5  0BE4               	decfsz	(??_main^(0+384)+1),f
  4859  36C6  2EC1               	goto	u11497
  4860  36C7  0000               	nop
  4861  36C8  2EB8               	goto	l8418
  4862  36C9                     __end_of_main:	
  4863                           
  4864                           	psect	text1
  4865  352F                     __ptext1:	
  4866 ;; *************** function _watchdog_timeout_shutdown *****************
  4867 ;; Defined at:
  4868 ;;		line 3 in file "algorithms.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4886 ;;Total ram usage:        2 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; Hardware stack levels required when called:    2
  4889 ;; This function calls:
  4890 ;;		_RGB_color
  4891 ;; This function is called by:
  4892 ;;		_main
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _watchdog_timeout_shutdown
  4898  352F                     _watchdog_timeout_shutdown:	
  4899                           
  4900                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  4901                           
  4902                           ;incstack = 0
  4903                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4904  352F  0020               	movlb	0	; select bank0
  4905  3530  1A03               	btfsc	3,4	;volatile
  4906  3531  0008               	return
  4907                           
  4908                           ;algorithms.c: 6:         RGB_color(0);
  4909  3532  3000               	movlw	0
  4910  3533  00F1               	movwf	RGB_color@color
  4911  3534  00F2               	movwf	RGB_color@color+1
  4912  3535  31B5  25C0  31B5   	fcall	_RGB_color
  4913                           
  4914                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  4915  3538  3029               	movlw	41
  4916  3539  00F4               	movwf	??_watchdog_timeout_shutdown+1
  4917  353A  3096               	movlw	150
  4918  353B  00F3               	movwf	??_watchdog_timeout_shutdown
  4919  353C  307F               	movlw	127
  4920  353D                     u11507:	
  4921  353D  0B89               	decfsz	9,f
  4922  353E  2D3D               	goto	u11507
  4923  353F  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  4924  3540  2D3D               	goto	u11507
  4925  3541  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  4926  3542  2D3D               	goto	u11507
  4927  3543  0000               	nop
  4928                           
  4929                           ;algorithms.c: 8:          currState = 3;
  4930  3544  3003               	movlw	3
  4931  3545  00F3               	movwf	??_watchdog_timeout_shutdown
  4932  3546  0873               	movf	??_watchdog_timeout_shutdown,w
  4933  3547  0023               	movlb	3	; select bank3
  4934  3548  00D9               	movwf	_currState^(0+384)
  4935  3549  0008               	return
  4936  354A                     __end_of_watchdog_timeout_shutdown:	
  4937                           
  4938                           	psect	text2
  4939  2A0A                     __ptext2:	
  4940 ;; *************** function _statemachine *****************
  4941 ;; Defined at:
  4942 ;;		line 96 in file "main.c"
  4943 ;; Parameters:    Size  Location     Type
  4944 ;;		None
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  success         1   68[BANK2 ] unsigned char 
  4947 ;; Return value:  Size  Location     Type
  4948 ;;                  1    wreg      void 
  4949 ;; Registers used:
  4950 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4951 ;; Tracked objects:
  4952 ;;		On entry : 0/0
  4953 ;;		On exit  : 0/0
  4954 ;;		Unchanged: 0/0
  4955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4957 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4958 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4959 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4960 ;;Total ram usage:        3 bytes
  4961 ;; Hardware stack levels used:    1
  4962 ;; Hardware stack levels required when called:   11
  4963 ;; This function calls:
  4964 ;;		_AFE_UPDATE
  4965 ;;		_EUSART_Write_Text
  4966 ;;		_RGB_AWAIT_AFE_CONN
  4967 ;;		_RGB_color
  4968 ;;		_beginAFEcommunication
  4969 ;;		_init_AFE
  4970 ;;		_printcellParameters
  4971 ;;		_snprintf
  4972 ;; This function is called by:
  4973 ;;		_main
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977                           
  4978                           ;psect for function _statemachine
  4979  2A0A                     _statemachine:	
  4980                           
  4981                           ;main.c: 98:     switch (currState) {
  4982                           
  4983                           ;incstack = 0
  4984                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4985  2A0A  2A69               	goto	l8394
  4986  2A0B                     l8360:	
  4987                           
  4988                           ;main.c: 101:             if (tmr1_flag) {
  4989  2A0B  0021               	movlb	1	; select bank1
  4990  2A0C  086F               	movf	_tmr1_flag^(0+128),w	;volatile
  4991  2A0D  1903               	btfsc	3,2
  4992  2A0E  0008               	return
  4993                           
  4994                           ;main.c: 102:                 tmr1_flag = 0;
  4995  2A0F  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  4996                           
  4997                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  4998  2A10  31B5  25E1  31AA   	fcall	_RGB_AWAIT_AFE_CONN
  4999                           
  5000                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  5001  2A13  31AD  25C3  31AA   	fcall	_beginAFEcommunication
  5002  2A16  0020               	movlb	0	; select bank0
  5003  2A17  0820               	movf	?_beginAFEcommunication,w
  5004  2A18  0022               	movlb	2	; select bank2
  5005  2A19  00E2               	movwf	??_statemachine^(0+256)
  5006  2A1A  0862               	movf	??_statemachine^(0+256),w
  5007  2A1B  00E4               	movwf	statemachine@success^(0+256)
  5008                           
  5009                           ;main.c: 109:                 if (success) {
  5010  2A1C  0864               	movf	statemachine@success^(0+256),w
  5011  2A1D  1903               	btfsc	3,2
  5012  2A1E  0008               	return
  5013                           
  5014                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  5015  2A1F  0020               	movlb	0	; select bank0
  5016  2A20  1018               	bcf	24,0	;volatile
  5017                           
  5018                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  5019  2A21  0021               	movlb	1	; select bank1
  5020  2A22  1011               	bcf	17,0	;volatile
  5021                           
  5022                           ;main.c: 112:                     RGB_color(0);
  5023  2A23  3000               	movlw	0
  5024  2A24  00F1               	movwf	RGB_color@color
  5025  2A25  00F2               	movwf	RGB_color@color+1
  5026  2A26  31B5  25C0         	fcall	_RGB_color
  5027                           
  5028                           ;main.c: 113:                     tmr1_flag = 0;
  5029  2A28  0021               	movlb	1	; select bank1
  5030  2A29  01EF               	clrf	_tmr1_flag^(0+128)	;volatile
  5031                           
  5032                           ;main.c: 126:                     currState = 1;
  5033  2A2A  0023               	movlb	3	; select bank3
  5034  2A2B  01D9               	clrf	_currState^(0+384)
  5035  2A2C  0AD9               	incf	_currState^(0+384),f
  5036  2A2D  0008               	return
  5037  2A2E                     l8378:	
  5038                           
  5039                           ;main.c: 135:             init_AFE();
  5040  2A2E  31A8  20E5  31AA   	fcall	_init_AFE
  5041                           
  5042                           ;main.c: 154:             RGB_color(1);
  5043  2A31  3001               	movlw	1
  5044  2A32  00F1               	movwf	RGB_color@color
  5045  2A33  3000               	movlw	0
  5046  2A34  00F2               	movwf	RGB_color@color+1
  5047  2A35  31B5  25C0         	fcall	_RGB_color
  5048                           
  5049                           ;main.c: 155:             currState = 2;
  5050  2A37  3002               	movlw	2
  5051  2A38  0022               	movlb	2	; select bank2
  5052  2A39  00E2               	movwf	??_statemachine^(0+256)
  5053  2A3A  0862               	movf	??_statemachine^(0+256),w
  5054  2A3B  0023               	movlb	3	; select bank3
  5055  2A3C  00D9               	movwf	_currState^(0+384)
  5056                           
  5057                           ;main.c: 156:             break;
  5058  2A3D  0008               	return
  5059  2A3E                     l8382:	
  5060                           
  5061                           ;main.c: 160:             AFE_UPDATE();
  5062  2A3E  31B4  24C6  31AA   	fcall	_AFE_UPDATE
  5063  2A41  0064               	clrwdt	;# 
  5064                           
  5065                           ;main.c: 164:             printcellParameters();
  5066  2A42  3199  211C  31AA   	fcall	_printcellParameters
  5067                           
  5068                           ;main.c: 166:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5069  2A45  3066               	movlw	102
  5070  2A46  0022               	movlb	2	; select bank2
  5071  2A47  00E3               	movwf	(??_statemachine^(0+256)+1)
  5072  2A48  3076               	movlw	118
  5073  2A49  00E2               	movwf	??_statemachine^(0+256)
  5074  2A4A  30C1               	movlw	193
  5075  2A4B                     u11517:	
  5076  2A4B  0B89               	decfsz	9,f
  5077  2A4C  2A4B               	goto	u11517
  5078  2A4D  0BE2               	decfsz	??_statemachine^(0+256),f
  5079  2A4E  2A4B               	goto	u11517
  5080  2A4F  0BE3               	decfsz	(??_statemachine^(0+256)+1),f
  5081  2A50  2A4B               	goto	u11517
  5082                           
  5083                           ;main.c: 168:             break;
  5084  2A51  0008               	return
  5085  2A52                     l8388:	
  5086                           
  5087                           ;main.c: 172:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5088  2A52  3071               	movlw	113
  5089  2A53  0021               	movlb	1	; select bank1
  5090  2A54  00CC               	movwf	snprintf@s^(0+128)
  5091  2A55  3027               	movlw	39
  5092  2A56  00CD               	movwf	(snprintf@s^(0+128)+1)
  5093  2A57  307F               	movlw	127
  5094  2A58  00CE               	movwf	snprintf@n^(0+128)
  5095  2A59  3000               	movlw	0
  5096  2A5A  00CF               	movwf	(snprintf@n^(0+128)+1)
  5097  2A5B  3049               	movlw	low (STR_1| (0+32768))
  5098  2A5C  00D0               	movwf	snprintf@fmt^(0+128)
  5099  2A5D  30B8               	movlw	high (STR_1| (0+32768))
  5100  2A5E  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5101  2A5F  31B5  2514  31AA   	fcall	_snprintf
  5102                           
  5103                           ;main.c: 173:              EUSART_Write_Text(messageBuffer);
  5104  2A62  3071               	movlw	113
  5105  2A63  00F2               	movwf	EUSART_Write_Text@text
  5106  2A64  3027               	movlw	39
  5107  2A65  00F3               	movwf	EUSART_Write_Text@text+1
  5108  2A66  31B4  24DF         	fcall	_EUSART_Write_Text
  5109                           
  5110                           ;main.c: 174:             break;
  5111  2A68  0008               	return
  5112  2A69                     l8394:	
  5113  2A69  0023               	movlb	3	; select bank3
  5114  2A6A  0859               	movf	_currState^(0+384),w
  5115  2A6B  0022               	movlb	2	; select bank2
  5116  2A6C  00E2               	movwf	??_statemachine^(0+256)
  5117  2A6D  01E3               	clrf	(??_statemachine^(0+256)+1)
  5118                           
  5119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5120                           ; Switch size 1, requested type "simple"
  5121                           ; Number of cases is 1, Range of values is 0 to 0
  5122                           ; switch strategies available:
  5123                           ; Name         Instructions Cycles
  5124                           ; simple_byte            4     3 (average)
  5125                           ; direct_byte            8     6 (fixed)
  5126                           ; jumptable            260     6 (fixed)
  5127                           ;	Chosen strategy is simple_byte
  5128  2A6E  0863               	movf	(??_statemachine+1)^(0+256),w
  5129  2A6F  3A00               	xorlw	0	; case 0
  5130  2A70  1903               	skipnz
  5131  2A71  2A73               	goto	l8586
  5132  2A72  2A81               	goto	l164
  5133  2A73                     l8586:	
  5134                           
  5135                           ; Switch size 1, requested type "simple"
  5136                           ; Number of cases is 4, Range of values is 0 to 3
  5137                           ; switch strategies available:
  5138                           ; Name         Instructions Cycles
  5139                           ; simple_byte           13     7 (average)
  5140                           ; direct_byte           14     6 (fixed)
  5141                           ; jumptable            260     6 (fixed)
  5142                           ;	Chosen strategy is simple_byte
  5143  2A73  0862               	movf	??_statemachine^(0+256),w
  5144  2A74  3A00               	xorlw	0	; case 0
  5145  2A75  1903               	skipnz
  5146  2A76  2A0B               	goto	l8360
  5147  2A77  3A01               	xorlw	1	; case 1
  5148  2A78  1903               	skipnz
  5149  2A79  2A2E               	goto	l8378
  5150  2A7A  3A03               	xorlw	3	; case 2
  5151  2A7B  1903               	skipnz
  5152  2A7C  2A3E               	goto	l8382
  5153  2A7D  3A01               	xorlw	1	; case 3
  5154  2A7E  1903               	skipnz
  5155  2A7F  2A52               	goto	l8388
  5156  2A80  2A81               	goto	l164
  5157  2A81                     l164:	
  5158  2A81  0008               	return
  5159  2A82                     __end_of_statemachine:	
  5160                           
  5161                           	psect	text3
  5162  191C                     __ptext3:	
  5163 ;; *************** function _printcellParameters *****************
  5164 ;; Defined at:
  5165 ;;		line 308 in file "BQ76920.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;		None
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5183 ;;Total ram usage:        0 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:   10
  5186 ;; This function calls:
  5187 ;;		_EUSART_Write_Text
  5188 ;;		_readRegister
  5189 ;;		_snprintf
  5190 ;; This function is called by:
  5191 ;;		_statemachine
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function _printcellParameters
  5197  191C                     _printcellParameters:	
  5198                           
  5199                           ;BQ76920.c: 309:     snprintf(messageBuffer, 127, "Cell batt: %i ,%d, %d , %d, %d, %d Ba
      +                          tt Curr: %i Temp: %i CTRL2: %i \n\r", batVoltage,cellVoltages[0],cellVoltages[1],cellVol
      +                          tages[2],cellVoltages[3],cellVoltages[4], batCurrent, temperatureThermistor,readRegister
      +                          (0x18, 0x05));
  5200                           
  5201                           ;incstack = 0
  5202                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5203  191C  3071               	movlw	113
  5204  191D  0021               	movlb	1	; select bank1
  5205  191E  00CC               	movwf	snprintf@s^(0+128)
  5206  191F  3027               	movlw	39
  5207  1920  00CD               	movwf	(snprintf@s^(0+128)+1)
  5208  1921  307F               	movlw	127
  5209  1922  00CE               	movwf	snprintf@n^(0+128)
  5210  1923  3000               	movlw	0
  5211  1924  00CF               	movwf	(snprintf@n^(0+128)+1)
  5212  1925  3002               	movlw	low (STR_2| (0+32768))
  5213  1926  00D0               	movwf	snprintf@fmt^(0+128)
  5214  1927  30B8               	movlw	high (STR_2| (0+32768))
  5215  1928  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5216  1929  0023               	movlb	3	; select bank3
  5217  192A  0841               	movf	(_batVoltage+3)^(0+384),w
  5218  192B  0021               	movlb	1	; select bank1
  5219  192C  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5220  192D  0023               	movlb	3	; select bank3
  5221  192E  0840               	movf	(_batVoltage+2)^(0+384),w
  5222  192F  0021               	movlb	1	; select bank1
  5223  1930  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5224  1931  0023               	movlb	3	; select bank3
  5225  1932  083F               	movf	(_batVoltage+1)^(0+384),w
  5226  1933  0021               	movlb	1	; select bank1
  5227  1934  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5228  1935  0023               	movlb	3	; select bank3
  5229  1936  083E               	movf	_batVoltage^(0+384),w
  5230  1937  0021               	movlb	1	; select bank1
  5231  1938  00D2               	movwf	(?_snprintf^(0+128)+6)
  5232  1939  0023               	movlb	3	; select bank3
  5233  193A  0821               	movf	(_cellVoltages+1)^(0+384),w
  5234  193B  0021               	movlb	1	; select bank1
  5235  193C  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5236  193D  0023               	movlb	3	; select bank3
  5237  193E  0820               	movf	_cellVoltages^(0+384),w
  5238  193F  0021               	movlb	1	; select bank1
  5239  1940  00D6               	movwf	(?_snprintf^(0+128)+10)
  5240  1941  0023               	movlb	3	; select bank3
  5241  1942  0823               	movf	((_cellVoltages+1)^(0+384)+2),w
  5242  1943  0021               	movlb	1	; select bank1
  5243  1944  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5244  1945  0023               	movlb	3	; select bank3
  5245  1946  0822               	movf	(_cellVoltages^(0+384)+2),w
  5246  1947  0021               	movlb	1	; select bank1
  5247  1948  00D8               	movwf	(?_snprintf^(0+128)+12)
  5248  1949  0023               	movlb	3	; select bank3
  5249  194A  0825               	movf	((_cellVoltages+1)^(0+384)+4),w
  5250  194B  0021               	movlb	1	; select bank1
  5251  194C  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5252  194D  0023               	movlb	3	; select bank3
  5253  194E  0824               	movf	(_cellVoltages^(0+384)+4),w
  5254  194F  0021               	movlb	1	; select bank1
  5255  1950  00DA               	movwf	(?_snprintf^(0+128)+14)
  5256  1951  0023               	movlb	3	; select bank3
  5257  1952  0827               	movf	((_cellVoltages+1)^(0+384)+6),w
  5258  1953  0021               	movlb	1	; select bank1
  5259  1954  00DD               	movwf	((?_snprintf+1)^(0+128)+16)
  5260  1955  0023               	movlb	3	; select bank3
  5261  1956  0826               	movf	(_cellVoltages^(0+384)+6),w
  5262  1957  0021               	movlb	1	; select bank1
  5263  1958  00DC               	movwf	(?_snprintf^(0+128)+16)
  5264  1959  0023               	movlb	3	; select bank3
  5265  195A  0829               	movf	((_cellVoltages+1)^(0+384)+8),w
  5266  195B  0021               	movlb	1	; select bank1
  5267  195C  00DF               	movwf	((?_snprintf+1)^(0+128)+18)
  5268  195D  0023               	movlb	3	; select bank3
  5269  195E  0828               	movf	(_cellVoltages^(0+384)+8),w
  5270  195F  0021               	movlb	1	; select bank1
  5271  1960  00DE               	movwf	(?_snprintf^(0+128)+18)
  5272  1961  0023               	movlb	3	; select bank3
  5273  1962  083D               	movf	(_batCurrent+3)^(0+384),w
  5274  1963  0021               	movlb	1	; select bank1
  5275  1964  00E3               	movwf	((?_snprintf+3)^(0+128)+20)
  5276  1965  0023               	movlb	3	; select bank3
  5277  1966  083C               	movf	(_batCurrent+2)^(0+384),w
  5278  1967  0021               	movlb	1	; select bank1
  5279  1968  00E2               	movwf	((?_snprintf+2)^(0+128)+20)
  5280  1969  0023               	movlb	3	; select bank3
  5281  196A  083B               	movf	(_batCurrent+1)^(0+384),w
  5282  196B  0021               	movlb	1	; select bank1
  5283  196C  00E1               	movwf	((?_snprintf+1)^(0+128)+20)
  5284  196D  0023               	movlb	3	; select bank3
  5285  196E  083A               	movf	_batCurrent^(0+384),w
  5286  196F  0021               	movlb	1	; select bank1
  5287  1970  00E0               	movwf	(?_snprintf^(0+128)+20)
  5288  1971  0023               	movlb	3	; select bank3
  5289  1972  0839               	movf	(_temperatureThermistor+3)^(0+384),w
  5290  1973  0021               	movlb	1	; select bank1
  5291  1974  00E7               	movwf	((?_snprintf+3)^(0+128)+24)
  5292  1975  0023               	movlb	3	; select bank3
  5293  1976  0838               	movf	(_temperatureThermistor+2)^(0+384),w
  5294  1977  0021               	movlb	1	; select bank1
  5295  1978  00E6               	movwf	((?_snprintf+2)^(0+128)+24)
  5296  1979  0023               	movlb	3	; select bank3
  5297  197A  0837               	movf	(_temperatureThermistor+1)^(0+384),w
  5298  197B  0021               	movlb	1	; select bank1
  5299  197C  00E5               	movwf	((?_snprintf+1)^(0+128)+24)
  5300  197D  0023               	movlb	3	; select bank3
  5301  197E  0836               	movf	_temperatureThermistor^(0+384),w
  5302  197F  0021               	movlb	1	; select bank1
  5303  1980  00E4               	movwf	(?_snprintf^(0+128)+24)
  5304  1981  3018               	movlw	24
  5305  1982  00F5               	movwf	readRegister@slaveAddress
  5306  1983  3000               	movlw	0
  5307  1984  00F6               	movwf	readRegister@slaveAddress+1
  5308  1985  3005               	movlw	5
  5309  1986  00F7               	movwf	readRegister@regAddress
  5310  1987  3000               	movlw	0
  5311  1988  00F8               	movwf	readRegister@regAddress+1
  5312  1989  31B6  26FE  3199   	fcall	_readRegister
  5313  198C  0876               	movf	?_readRegister+1,w
  5314  198D  0021               	movlb	1	; select bank1
  5315  198E  00E9               	movwf	((?_snprintf+1)^(0+128)+28)
  5316  198F  0875               	movf	?_readRegister,w
  5317  1990  00E8               	movwf	(?_snprintf^(0+128)+28)
  5318  1991  31B5  2514  3199   	fcall	_snprintf
  5319                           
  5320                           ;BQ76920.c: 310:     EUSART_Write_Text(messageBuffer);
  5321  1994  3071               	movlw	113
  5322  1995  00F2               	movwf	EUSART_Write_Text@text
  5323  1996  3027               	movlw	39
  5324  1997  00F3               	movwf	EUSART_Write_Text@text+1
  5325  1998  31B4  24DF  3199   	fcall	_EUSART_Write_Text
  5326                           
  5327                           ;BQ76920.c: 311:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  5328  199B  3071               	movlw	113
  5329  199C  0021               	movlb	1	; select bank1
  5330  199D  00CC               	movwf	snprintf@s^(0+128)
  5331  199E  3027               	movlw	39
  5332  199F  00CD               	movwf	(snprintf@s^(0+128)+1)
  5333  19A0  307F               	movlw	127
  5334  19A1  00CE               	movwf	snprintf@n^(0+128)
  5335  19A2  3000               	movlw	0
  5336  19A3  00CF               	movwf	(snprintf@n^(0+128)+1)
  5337  19A4  30CD               	movlw	low (STR_3| (0+32768))
  5338  19A5  00D0               	movwf	snprintf@fmt^(0+128)
  5339  19A6  30B8               	movlw	high (STR_3| (0+32768))
  5340  19A7  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5341  19A8  3018               	movlw	24
  5342  19A9  00F5               	movwf	readRegister@slaveAddress
  5343  19AA  3000               	movlw	0
  5344  19AB  00F6               	movwf	readRegister@slaveAddress+1
  5345  19AC  3005               	movlw	5
  5346  19AD  00F7               	movwf	readRegister@regAddress
  5347  19AE  3000               	movlw	0
  5348  19AF  00F8               	movwf	readRegister@regAddress+1
  5349  19B0  31B6  26FE  3199   	fcall	_readRegister
  5350  19B3  0876               	movf	?_readRegister+1,w
  5351  19B4  0021               	movlb	1	; select bank1
  5352  19B5  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5353  19B6  0875               	movf	?_readRegister,w
  5354  19B7  00D2               	movwf	(?_snprintf^(0+128)+6)
  5355  19B8  31B5  2514  3199   	fcall	_snprintf
  5356                           
  5357                           ;BQ76920.c: 312:     EUSART_Write_Text(messageBuffer);
  5358  19BB  3071               	movlw	113
  5359  19BC  00F2               	movwf	EUSART_Write_Text@text
  5360  19BD  3027               	movlw	39
  5361  19BE  00F3               	movwf	EUSART_Write_Text@text+1
  5362  19BF  31B4  24DF  3199   	fcall	_EUSART_Write_Text
  5363                           
  5364                           ;BQ76920.c: 313:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5365  19C2  3071               	movlw	113
  5366  19C3  0021               	movlb	1	; select bank1
  5367  19C4  00CC               	movwf	snprintf@s^(0+128)
  5368  19C5  3027               	movlw	39
  5369  19C6  00CD               	movwf	(snprintf@s^(0+128)+1)
  5370  19C7  307F               	movlw	127
  5371  19C8  00CE               	movwf	snprintf@n^(0+128)
  5372  19C9  3000               	movlw	0
  5373  19CA  00CF               	movwf	(snprintf@n^(0+128)+1)
  5374  19CB  3037               	movlw	low (STR_4| (0+32768))
  5375  19CC  00D0               	movwf	snprintf@fmt^(0+128)
  5376  19CD  30B9               	movlw	high (STR_4| (0+32768))
  5377  19CE  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5378  19CF  3018               	movlw	24
  5379  19D0  00F5               	movwf	readRegister@slaveAddress
  5380  19D1  3000               	movlw	0
  5381  19D2  00F6               	movwf	readRegister@slaveAddress+1
  5382  19D3  3000               	movlw	0
  5383  19D4  00F7               	movwf	readRegister@regAddress
  5384  19D5  00F8               	movwf	readRegister@regAddress+1
  5385  19D6  31B6  26FE  3199   	fcall	_readRegister
  5386  19D9  0876               	movf	?_readRegister+1,w
  5387  19DA  0021               	movlb	1	; select bank1
  5388  19DB  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5389  19DC  0875               	movf	?_readRegister,w
  5390  19DD  00D2               	movwf	(?_snprintf^(0+128)+6)
  5391  19DE  31B5  2514  3199   	fcall	_snprintf
  5392                           
  5393                           ;BQ76920.c: 314:     EUSART_Write_Text(messageBuffer);
  5394  19E1  3071               	movlw	113
  5395  19E2  00F2               	movwf	EUSART_Write_Text@text
  5396  19E3  3027               	movlw	39
  5397  19E4  00F3               	movwf	EUSART_Write_Text@text+1
  5398  19E5  31B4  24DF  3199   	fcall	_EUSART_Write_Text
  5399                           
  5400                           ;BQ76920.c: 315:     snprintf(messageBuffer, 127, "Current: %d \n\r", batCurrent);
  5401  19E8  3071               	movlw	113
  5402  19E9  0021               	movlb	1	; select bank1
  5403  19EA  00CC               	movwf	snprintf@s^(0+128)
  5404  19EB  3027               	movlw	39
  5405  19EC  00CD               	movwf	(snprintf@s^(0+128)+1)
  5406  19ED  307F               	movlw	127
  5407  19EE  00CE               	movwf	snprintf@n^(0+128)
  5408  19EF  3000               	movlw	0
  5409  19F0  00CF               	movwf	(snprintf@n^(0+128)+1)
  5410  19F1  30CB               	movlw	low (STR_5| (0+32768))
  5411  19F2  00D0               	movwf	snprintf@fmt^(0+128)
  5412  19F3  30B9               	movlw	high (STR_5| (0+32768))
  5413  19F4  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5414  19F5  0023               	movlb	3	; select bank3
  5415  19F6  083D               	movf	(_batCurrent+3)^(0+384),w
  5416  19F7  0021               	movlb	1	; select bank1
  5417  19F8  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5418  19F9  0023               	movlb	3	; select bank3
  5419  19FA  083C               	movf	(_batCurrent+2)^(0+384),w
  5420  19FB  0021               	movlb	1	; select bank1
  5421  19FC  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5422  19FD  0023               	movlb	3	; select bank3
  5423  19FE  083B               	movf	(_batCurrent+1)^(0+384),w
  5424  19FF  0021               	movlb	1	; select bank1
  5425  1A00  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5426  1A01  0023               	movlb	3	; select bank3
  5427  1A02  083A               	movf	_batCurrent^(0+384),w
  5428  1A03  0021               	movlb	1	; select bank1
  5429  1A04  00D2               	movwf	(?_snprintf^(0+128)+6)
  5430  1A05  31B5  2514  3199   	fcall	_snprintf
  5431                           
  5432                           ;BQ76920.c: 316:     EUSART_Write_Text(messageBuffer);
  5433  1A08  3071               	movlw	113
  5434  1A09  00F2               	movwf	EUSART_Write_Text@text
  5435  1A0A  3027               	movlw	39
  5436  1A0B  00F3               	movwf	EUSART_Write_Text@text+1
  5437  1A0C  31B4  24DF  3199   	fcall	_EUSART_Write_Text
  5438                           
  5439                           ;BQ76920.c: 317:     snprintf(messageBuffer, 127, "Temp: %d e-2\n\r", temperatureThermis
      +                          tor);
  5440  1A0F  3071               	movlw	113
  5441  1A10  0021               	movlb	1	; select bank1
  5442  1A11  00CC               	movwf	snprintf@s^(0+128)
  5443  1A12  3027               	movlw	39
  5444  1A13  00CD               	movwf	(snprintf@s^(0+128)+1)
  5445  1A14  307F               	movlw	127
  5446  1A15  00CE               	movwf	snprintf@n^(0+128)
  5447  1A16  3000               	movlw	0
  5448  1A17  00CF               	movwf	(snprintf@n^(0+128)+1)
  5449  1A18  30DA               	movlw	low (STR_6| (0+32768))
  5450  1A19  00D0               	movwf	snprintf@fmt^(0+128)
  5451  1A1A  30B9               	movlw	high (STR_6| (0+32768))
  5452  1A1B  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5453  1A1C  0023               	movlb	3	; select bank3
  5454  1A1D  0839               	movf	(_temperatureThermistor+3)^(0+384),w
  5455  1A1E  0021               	movlb	1	; select bank1
  5456  1A1F  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5457  1A20  0023               	movlb	3	; select bank3
  5458  1A21  0838               	movf	(_temperatureThermistor+2)^(0+384),w
  5459  1A22  0021               	movlb	1	; select bank1
  5460  1A23  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5461  1A24  0023               	movlb	3	; select bank3
  5462  1A25  0837               	movf	(_temperatureThermistor+1)^(0+384),w
  5463  1A26  0021               	movlb	1	; select bank1
  5464  1A27  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5465  1A28  0023               	movlb	3	; select bank3
  5466  1A29  0836               	movf	_temperatureThermistor^(0+384),w
  5467  1A2A  0021               	movlb	1	; select bank1
  5468  1A2B  00D2               	movwf	(?_snprintf^(0+128)+6)
  5469  1A2C  31B5  2514  3199   	fcall	_snprintf
  5470                           
  5471                           ;BQ76920.c: 318:     EUSART_Write_Text(messageBuffer);
  5472  1A2F  3071               	movlw	113
  5473  1A30  00F2               	movwf	EUSART_Write_Text@text
  5474  1A31  3027               	movlw	39
  5475  1A32  00F3               	movwf	EUSART_Write_Text@text+1
  5476  1A33  31B4  24DF         	fcall	_EUSART_Write_Text
  5477  1A35  0008               	return
  5478  1A36                     __end_of_printcellParameters:	
  5479                           
  5480                           	psect	text4
  5481  3514                     __ptext4:	
  5482 ;; *************** function _snprintf *****************
  5483 ;; Defined at:
  5484 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5487 ;;		 -> messageBuffer(127), 
  5488 ;;  n               2   46[BANK1 ] unsigned int 
  5489 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5490 ;;		 -> STR_20(18), STR_19(18), STR_18(19), STR_17(20), 
  5491 ;;		 -> STR_16(20), STR_15(21), STR_14(21), STR_13(21), 
  5492 ;;		 -> STR_12(22), STR_11(22), STR_10(21), STR_9(21), 
  5493 ;;		 -> STR_6(15), STR_5(15), STR_4(21), STR_3(22), 
  5494 ;;		 -> STR_2(71), STR_1(40), 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  ret             2    0        int 
  5497 ;;  ap              1   79[BANK0 ] PTR void [1]
  5498 ;;		 -> ?_snprintf(2), 
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  2   44[BANK1 ] int 
  5501 ;; Registers used:
  5502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5508 ;;      Params:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5509 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5510 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5511 ;;      Totals:         0       4      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5512 ;;Total ram usage:       34 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    9
  5515 ;; This function calls:
  5516 ;;		_vsnprintf
  5517 ;; This function is called by:
  5518 ;;		_statemachine
  5519 ;;		_printcellParameters
  5520 ;;		_printotAFERegisters
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           
  5525                           ;psect for function _snprintf
  5526  3514                     _snprintf:	
  5527                           
  5528                           ;incstack = 0
  5529                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5530  3514  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5531  3515  0020               	movlb	0	; select bank0
  5532  3516  00EC               	movwf	??_snprintf
  5533  3517  086C               	movf	??_snprintf,w
  5534  3518  00EF               	movwf	snprintf@ap
  5535  3519  0021               	movlb	1	; select bank1
  5536  351A  084D               	movf	(snprintf@s+1)^(0+128),w
  5537  351B  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5538  351C  084C               	movf	snprintf@s^(0+128),w
  5539  351D  00BB               	movwf	vsnprintf@s^(0+128)
  5540  351E  084F               	movf	(snprintf@n+1)^(0+128),w
  5541  351F  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5542  3520  084E               	movf	snprintf@n^(0+128),w
  5543  3521  00BD               	movwf	vsnprintf@n^(0+128)
  5544  3522  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5545  3523  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5546  3524  0850               	movf	snprintf@fmt^(0+128),w
  5547  3525  00BF               	movwf	vsnprintf@fmt^(0+128)
  5548  3526  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5549  3527  0020               	movlb	0	; select bank0
  5550  3528  00EC               	movwf	??_snprintf
  5551  3529  086C               	movf	??_snprintf,w
  5552  352A  0021               	movlb	1	; select bank1
  5553  352B  00C1               	movwf	vsnprintf@ap^(0+128)
  5554  352C  31AB  237A         	fcall	_vsnprintf
  5555  352E  0008               	return
  5556  352F                     __end_of_snprintf:	
  5557                           
  5558                           	psect	text5
  5559  2B7A                     __ptext5:	
  5560 ;; *************** function _vsnprintf *****************
  5561 ;; Defined at:
  5562 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5565 ;;		 -> messageBuffer(127), 
  5566 ;;  n               2   29[BANK1 ] unsigned int 
  5567 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5568 ;;		 -> STR_20(18), STR_19(18), STR_18(19), STR_17(20), 
  5569 ;;		 -> STR_16(20), STR_15(21), STR_14(21), STR_13(21), 
  5570 ;;		 -> STR_12(22), STR_11(22), STR_10(21), STR_9(21), 
  5571 ;;		 -> STR_6(15), STR_5(15), STR_4(21), STR_3(22), 
  5572 ;;		 -> STR_2(71), STR_1(40), 
  5573 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5574 ;;		 -> snprintf@ap(1), 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5577 ;;  cnt             2   36[BANK1 ] int 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  2   27[BANK1 ] int 
  5580 ;; Registers used:
  5581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5587 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5588 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5589 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5590 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5591 ;;Total ram usage:       19 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    8
  5594 ;; This function calls:
  5595 ;;		_vfprintf
  5596 ;; This function is called by:
  5597 ;;		_snprintf
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           
  5602                           ;psect for function _vsnprintf
  5603  2B7A                     _vsnprintf:	
  5604                           
  5605                           ;incstack = 0
  5606                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5607  2B7A  3080               	movlw	128
  5608  2B7B  0021               	movlb	1	; select bank1
  5609  2B7C  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5610  2B7D  3000               	movlw	0
  5611  2B7E  1903               	skipnz
  5612  2B7F  023D               	subwf	vsnprintf@n^(0+128),w
  5613  2B80  1C03               	skipc
  5614  2B81  2B8D               	goto	l7978
  5615  2B82  304B               	movlw	75
  5616  2B83  0023               	movlb	3	; select bank3
  5617  2B84  00C2               	movwf	_errno^(0+384)
  5618  2B85  3000               	movlw	0
  5619  2B86  00C3               	movwf	(_errno^(0+384)+1)
  5620  2B87  30FF               	movlw	255
  5621  2B88  0021               	movlb	1	; select bank1
  5622  2B89  00BB               	movwf	?_vsnprintf^(0+128)
  5623  2B8A  30FF               	movlw	255
  5624  2B8B  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5625  2B8C  0008               	return
  5626  2B8D                     l7978:	
  5627  2B8D  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5628  2B8E  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5629  2B8F  083B               	movf	vsnprintf@s^(0+128),w
  5630  2B90  00C6               	movwf	vsnprintf@f^(0+128)
  5631  2B91  3000               	movlw	0
  5632  2B92  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5633  2B93  3002               	movlw	2
  5634  2B94  1903               	skipnz
  5635  2B95  023D               	subwf	vsnprintf@n^(0+128),w
  5636  2B96  1C03               	skipc
  5637  2B97  2BA1               	goto	l7984
  5638  2B98  083D               	movf	vsnprintf@n^(0+128),w
  5639  2B99  3EFF               	addlw	255
  5640  2B9A  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5641  2B9B  30FF               	movlw	255
  5642  2B9C  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5643  2B9D  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5644  2B9E  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5645  2B9F  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5646  2BA0  2BA9               	goto	l7986
  5647  2BA1                     l7984:	
  5648  2BA1  3001               	movlw	1
  5649  2BA2  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5650  2BA3  3000               	movlw	0
  5651  2BA4  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5652  2BA5  3001               	movlw	1
  5653  2BA6  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5654  2BA7  3000               	movlw	0
  5655  2BA8  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5656  2BA9                     l7986:	
  5657  2BA9  30C6               	movlw	low vsnprintf@f
  5658  2BAA  0020               	movlb	0	; select bank0
  5659  2BAB  00E1               	movwf	vfprintf@fp
  5660  2BAC  3000               	movlw	high vsnprintf@f
  5661  2BAD  00E2               	movwf	vfprintf@fp+1
  5662  2BAE  0021               	movlb	1	; select bank1
  5663  2BAF  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  5664  2BB0  0020               	movlb	0	; select bank0
  5665  2BB1  00E4               	movwf	vfprintf@fmt+1
  5666  2BB2  0021               	movlb	1	; select bank1
  5667  2BB3  083F               	movf	vsnprintf@fmt^(0+128),w
  5668  2BB4  0020               	movlb	0	; select bank0
  5669  2BB5  00E3               	movwf	vfprintf@fmt
  5670  2BB6  0021               	movlb	1	; select bank1
  5671  2BB7  0841               	movf	vsnprintf@ap^(0+128),w
  5672  2BB8  0020               	movlb	0	; select bank0
  5673  2BB9  00EA               	movwf	??_vsnprintf
  5674  2BBA  086A               	movf	??_vsnprintf,w
  5675  2BBB  00E5               	movwf	vfprintf@ap
  5676  2BBC  31B6  2634  31AB   	fcall	_vfprintf
  5677  2BBF  0020               	movlb	0	; select bank0
  5678  2BC0  0862               	movf	?_vfprintf+1,w
  5679  2BC1  0021               	movlb	1	; select bank1
  5680  2BC2  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  5681  2BC3  0020               	movlb	0	; select bank0
  5682  2BC4  0861               	movf	?_vfprintf,w
  5683  2BC5  0021               	movlb	1	; select bank1
  5684  2BC6  00C4               	movwf	vsnprintf@cnt^(0+128)
  5685  2BC7  083D               	movf	vsnprintf@n^(0+128),w
  5686  2BC8  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  5687  2BC9  1D03               	btfss	3,2
  5688  2BCA  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  5689  2BCB  2BF2               	goto	l8000
  5690  2BCC  083D               	movf	vsnprintf@n^(0+128),w
  5691  2BCD  3EFF               	addlw	255
  5692  2BCE  0020               	movlb	0	; select bank0
  5693  2BCF  00EA               	movwf	??_vsnprintf
  5694  2BD0  30FF               	movlw	255
  5695  2BD1  0021               	movlb	1	; select bank1
  5696  2BD2  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5697  2BD3  0020               	movlb	0	; select bank0
  5698  2BD4  00EB               	movwf	??_vsnprintf+1
  5699  2BD5  086B               	movf	??_vsnprintf+1,w
  5700  2BD6  0021               	movlb	1	; select bank1
  5701  2BD7  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  5702  2BD8  1D03               	skipz
  5703  2BD9  2BDE               	goto	u11125
  5704  2BDA  0020               	movlb	0	; select bank0
  5705  2BDB  086A               	movf	??_vsnprintf,w
  5706  2BDC  0021               	movlb	1	; select bank1
  5707  2BDD  0244               	subwf	vsnprintf@cnt^(0+128),w
  5708  2BDE                     u11125:	
  5709  2BDE  1C03               	skipc
  5710  2BDF  2BE7               	goto	l7996
  5711  2BE0  083D               	movf	vsnprintf@n^(0+128),w
  5712  2BE1  3EFF               	addlw	255
  5713  2BE2  00C2               	movwf	_vsnprintf$1822^(0+128)
  5714  2BE3  30FF               	movlw	255
  5715  2BE4  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5716  2BE5  00C3               	movwf	(_vsnprintf$1822+1)^(0+128)
  5717  2BE6  2BEB               	goto	l7998
  5718  2BE7                     l7996:	
  5719  2BE7  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5720  2BE8  00C3               	movwf	(_vsnprintf$1822+1)^(0+128)
  5721  2BE9  0844               	movf	vsnprintf@cnt^(0+128),w
  5722  2BEA  00C2               	movwf	_vsnprintf$1822^(0+128)
  5723  2BEB                     l7998:	
  5724  2BEB  0842               	movf	_vsnprintf$1822^(0+128),w
  5725  2BEC  073B               	addwf	vsnprintf@s^(0+128),w
  5726  2BED  0086               	movwf	6
  5727  2BEE  0843               	movf	(_vsnprintf$1822+1)^(0+128),w
  5728  2BEF  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  5729  2BF0  0087               	movwf	7
  5730  2BF1  0181               	clrf	1
  5731  2BF2                     l8000:	
  5732  2BF2  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5733  2BF3  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  5734  2BF4  0844               	movf	vsnprintf@cnt^(0+128),w
  5735  2BF5  00BB               	movwf	?_vsnprintf^(0+128)
  5736  2BF6  0008               	return
  5737  2BF7                     __end_of_vsnprintf:	
  5738                           
  5739                           	psect	text6
  5740  3634                     __ptext6:	
  5741 ;; *************** function _vfprintf *****************
  5742 ;; Defined at:
  5743 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  5746 ;;		 -> vsnprintf@f(6), 
  5747 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  5748 ;;		 -> STR_20(18), STR_19(18), STR_18(19), STR_17(20), 
  5749 ;;		 -> STR_16(20), STR_15(21), STR_14(21), STR_13(21), 
  5750 ;;		 -> STR_12(22), STR_11(22), STR_10(21), STR_9(21), 
  5751 ;;		 -> STR_6(15), STR_5(15), STR_4(21), STR_3(22), 
  5752 ;;		 -> STR_2(71), STR_1(40), 
  5753 ;;  ap              1   69[BANK0 ] PTR PTR void 
  5754 ;;		 -> snprintf@ap(1), 
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  5757 ;;		 -> STR_20(18), STR_19(18), STR_18(19), STR_17(20), 
  5758 ;;		 -> STR_16(20), STR_15(21), STR_14(21), STR_13(21), 
  5759 ;;		 -> STR_12(22), STR_11(22), STR_10(21), STR_9(21), 
  5760 ;;		 -> STR_6(15), STR_5(15), STR_4(21), STR_3(22), 
  5761 ;;		 -> STR_2(71), STR_1(40), 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  2   65[BANK0 ] int 
  5764 ;; Registers used:
  5765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5771 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5772 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5773 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5774 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5775 ;;Total ram usage:        9 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; Hardware stack levels required when called:    7
  5778 ;; This function calls:
  5779 ;;		_vfpfcnvrt
  5780 ;; This function is called by:
  5781 ;;		_vsnprintf
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           
  5786                           ;psect for function _vfprintf
  5787  3634                     _vfprintf:	
  5788                           
  5789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5790                           
  5791                           ;incstack = 0
  5792                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5793  3634  0020               	movlb	0	; select bank0
  5794  3635  0864               	movf	vfprintf@fmt+1,w
  5795  3636  00E9               	movwf	vfprintf@cfmt+1
  5796  3637  0863               	movf	vfprintf@fmt,w
  5797  3638  00E8               	movwf	vfprintf@cfmt
  5798                           
  5799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5800  3639  0023               	movlb	3	; select bank3
  5801  363A  01C4               	clrf	_nout^(0+384)
  5802  363B  01C5               	clrf	(_nout+1)^(0+384)
  5803  363C                     l7400:	
  5804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5805                           
  5806                           
  5807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5808  363C  0020               	movlb	0	; select bank0
  5809  363D  0868               	movf	vfprintf@cfmt,w
  5810  363E  0084               	movwf	4
  5811  363F  0869               	movf	vfprintf@cfmt+1,w
  5812  3640  0085               	movwf	5
  5813  3641  0012               	moviw fsr0++
  5814  3642  1903               	btfsc	3,2
  5815  3643  2E5C               	goto	l7402
  5816                           
  5817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5818  3644  0862               	movf	vfprintf@fp+1,w
  5819  3645  00D8               	movwf	vfpfcnvrt@fp+1
  5820  3646  0861               	movf	vfprintf@fp,w
  5821  3647  00D7               	movwf	vfpfcnvrt@fp
  5822  3648  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5823  3649  00E6               	movwf	??_vfprintf
  5824  364A  0866               	movf	??_vfprintf,w
  5825  364B  00D9               	movwf	vfpfcnvrt@fmt
  5826  364C  0865               	movf	vfprintf@ap,w
  5827  364D  00E7               	movwf	??_vfprintf+1
  5828  364E  0867               	movf	??_vfprintf+1,w
  5829  364F  00DA               	movwf	vfpfcnvrt@ap
  5830  3650  319E  265C  31B6   	fcall	_vfpfcnvrt
  5831  3653  0020               	movlb	0	; select bank0
  5832  3654  0857               	movf	?_vfpfcnvrt,w
  5833  3655  0023               	movlb	3	; select bank3
  5834  3656  07C4               	addwf	_nout^(0+384),f
  5835  3657  0020               	movlb	0	; select bank0
  5836  3658  0858               	movf	?_vfpfcnvrt+1,w
  5837  3659  0023               	movlb	3	; select bank3
  5838  365A  3DC5               	addwfc	(_nout+1)^(0+384),f
  5839  365B  2E3C               	goto	l7400
  5840  365C                     l7402:	
  5841                           
  5842                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5843  365C  0023               	movlb	3	; select bank3
  5844  365D  0845               	movf	(_nout+1)^(0+384),w
  5845  365E  0020               	movlb	0	; select bank0
  5846  365F  00E2               	movwf	?_vfprintf+1
  5847  3660  0023               	movlb	3	; select bank3
  5848  3661  0844               	movf	_nout^(0+384),w
  5849  3662  0020               	movlb	0	; select bank0
  5850  3663  00E1               	movwf	?_vfprintf
  5851  3664  0008               	return
  5852  3665                     __end_of_vfprintf:	
  5853                           
  5854                           	psect	text7
  5855  1E5C                     __ptext7:	
  5856 ;; *************** function _vfpfcnvrt *****************
  5857 ;; Defined at:
  5858 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  5861 ;;		 -> vsnprintf@f(6), 
  5862 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  5863 ;;		 -> vfprintf@cfmt(2), 
  5864 ;;  ap              1   58[BANK0 ] PTR PTR void 
  5865 ;;		 -> snprintf@ap(1), 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;  llu             8   19[BANK1 ] unsigned long long 
  5868 ;;  ll              8    8[BANK1 ] long long 
  5869 ;;  f               4    0        long long 
  5870 ;;  ct              3    0        unsigned char [3]
  5871 ;;  vp              2   16[BANK1 ] PTR void 
  5872 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  5873 ;;  done            2    2[BANK1 ] int 
  5874 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  5875 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  5876 ;;  i               2    0        int 
  5877 ;;  c               1   18[BANK1 ] unsigned char 
  5878 ;; Return value:  Size  Location     Type
  5879 ;;                  2   55[BANK0 ] int 
  5880 ;; Registers used:
  5881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5882 ;; Tracked objects:
  5883 ;;		On entry : 0/0
  5884 ;;		On exit  : 0/0
  5885 ;;		Unchanged: 0/0
  5886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5887 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5888 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5889 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5890 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5891 ;;Total ram usage:       37 bytes
  5892 ;; Hardware stack levels used:    1
  5893 ;; Hardware stack levels required when called:    6
  5894 ;; This function calls:
  5895 ;;		_atoi
  5896 ;;		_ctoa
  5897 ;;		_dtoa
  5898 ;;		_fputc
  5899 ;;		_isdigit
  5900 ;;		_otoa
  5901 ;;		_stoa
  5902 ;;		_strncmp
  5903 ;;		_utoa
  5904 ;;		_xtoa
  5905 ;; This function is called by:
  5906 ;;		_vfprintf
  5907 ;; This function uses a non-reentrant model
  5908 ;;
  5909                           
  5910                           
  5911                           ;psect for function _vfpfcnvrt
  5912  1E5C                     _vfpfcnvrt:	
  5913                           
  5914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5915                           
  5916                           ;incstack = 0
  5917                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5918  1E5C  0020               	movlb	0	; select bank0
  5919  1E5D  0859               	movf	vfpfcnvrt@fmt,w
  5920  1E5E  0086               	movwf	6
  5921  1E5F  0187               	clrf	7
  5922  1E60  3F40               	moviw [0]fsr1
  5923  1E61  00DB               	movwf	??_vfpfcnvrt
  5924  1E62  3F41               	moviw [1]fsr1
  5925  1E63  00DC               	movwf	??_vfpfcnvrt+1
  5926  1E64  085B               	movf	??_vfpfcnvrt,w
  5927  1E65  0084               	movwf	4
  5928  1E66  085C               	movf	??_vfpfcnvrt+1,w
  5929  1E67  0085               	movwf	5
  5930  1E68  0012               	moviw fsr0++
  5931  1E69  3A25               	xorlw	37
  5932  1E6A  1D03               	btfss	3,2
  5933  1E6B  2FFE               	goto	L7
  5934                           
  5935                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5936  1E6C  0859               	movf	vfpfcnvrt@fmt,w
  5937  1E6D  0086               	movwf	6
  5938  1E6E  0187               	clrf	7
  5939  1E6F  3001               	movlw	1
  5940  1E70  0781               	addwf	1,f
  5941  1E71  3141               	addfsr 1,1
  5942  1E72  1803               	skipnc
  5943  1E73  0A81               	incf	1,f
  5944                           
  5945                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5946  1E74  0022               	movlb	2	; select bank2
  5947  1E75  01E5               	clrf	_width^(0+256)
  5948  1E76  01E6               	clrf	(_width+1)^(0+256)
  5949  1E77  01E9               	clrf	_flags^(0+256)
  5950  1E78  01EA               	clrf	(_flags+1)^(0+256)
  5951                           
  5952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5953  1E79  30FF               	movlw	255
  5954  1E7A  00E7               	movwf	_prec^(0+256)
  5955  1E7B  30FF               	movlw	255
  5956  1E7C  00E8               	movwf	(_prec^(0+256)+1)
  5957                           
  5958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5959  1E7D  0021               	movlb	1	; select bank1
  5960  1E7E  01A2               	clrf	vfpfcnvrt@done^(0+128)
  5961  1E7F  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  5962                           
  5963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5964  1E80  2E9E               	goto	l6828
  5965  1E81                     l768:	
  5966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  5967                           
  5968                           
  5969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5970  1E81  0022               	movlb	2	; select bank2
  5971  1E82  1469               	bsf	_flags^(0+256),0
  5972  1E83                     l6812:	
  5973                           
  5974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5975  1E83  0020               	movlb	0	; select bank0
  5976  1E84  0859               	movf	vfpfcnvrt@fmt,w
  5977  1E85  0086               	movwf	6
  5978  1E86  0187               	clrf	7
  5979  1E87  3001               	movlw	1
  5980  1E88  0781               	addwf	1,f
  5981  1E89  3141               	addfsr 1,1
  5982  1E8A  1803               	skipnc
  5983  1E8B  0A81               	incf	1,f
  5984                           
  5985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5986  1E8C  2E9E               	goto	l6828
  5987  1E8D                     l770:	
  5988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  5989                           
  5990                           
  5991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5992  1E8D  0022               	movlb	2	; select bank2
  5993  1E8E  14E9               	bsf	_flags^(0+256),1
  5994  1E8F  2E83               	goto	l6812
  5995  1E90                     l771:	
  5996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  5997                           
  5998                           
  5999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6000  1E90  0022               	movlb	2	; select bank2
  6001  1E91  1569               	bsf	_flags^(0+256),2
  6002  1E92  2E83               	goto	l6812
  6003  1E93                     l772:	
  6004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6005                           
  6006                           
  6007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6008  1E93  0022               	movlb	2	; select bank2
  6009  1E94  15E9               	bsf	_flags^(0+256),3
  6010  1E95  2E83               	goto	l6812
  6011  1E96                     l773:	
  6012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6013                           
  6014                           
  6015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6016  1E96  0022               	movlb	2	; select bank2
  6017  1E97  1669               	bsf	_flags^(0+256),4
  6018  1E98  2E83               	goto	l6812
  6019  1E99                     l6822:	
  6020                           
  6021                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6022  1E99  3001               	movlw	1
  6023  1E9A  0021               	movlb	1	; select bank1
  6024  1E9B  00A2               	movwf	vfpfcnvrt@done^(0+128)
  6025  1E9C  3000               	movlw	0
  6026  1E9D  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6027  1E9E                     l6828:	
  6028                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6029                           
  6030                           
  6031                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6032  1E9E  0021               	movlb	1	; select bank1
  6033  1E9F  0822               	movf	vfpfcnvrt@done^(0+128),w
  6034  1EA0  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6035  1EA1  1D03               	btfss	3,2
  6036  1EA2  2EC9               	goto	l775
  6037  1EA3  0020               	movlb	0	; select bank0
  6038  1EA4  0859               	movf	vfpfcnvrt@fmt,w
  6039  1EA5  0086               	movwf	6
  6040  1EA6  0187               	clrf	7
  6041  1EA7  3F40               	moviw [0]fsr1
  6042  1EA8  00DB               	movwf	??_vfpfcnvrt
  6043  1EA9  3F41               	moviw [1]fsr1
  6044  1EAA  00DC               	movwf	??_vfpfcnvrt+1
  6045  1EAB  085B               	movf	??_vfpfcnvrt,w
  6046  1EAC  0084               	movwf	4
  6047  1EAD  085C               	movf	??_vfpfcnvrt+1,w
  6048  1EAE  0085               	movwf	5
  6049  1EAF  0800               	movf	0,w	;code access
  6050  1EB0  00DD               	movwf	??_vfpfcnvrt+2
  6051  1EB1  01DE               	clrf	??_vfpfcnvrt+3
  6052                           
  6053                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6054                           ; Switch size 1, requested type "simple"
  6055                           ; Number of cases is 1, Range of values is 0 to 0
  6056                           ; switch strategies available:
  6057                           ; Name         Instructions Cycles
  6058                           ; simple_byte            4     3 (average)
  6059                           ; direct_byte            8     6 (fixed)
  6060                           ; jumptable            260     6 (fixed)
  6061                           ;	Chosen strategy is simple_byte
  6062  1EB2  085E               	movf	??_vfpfcnvrt+3,w
  6063  1EB3  3A00               	xorlw	0	; case 0
  6064  1EB4  1903               	skipnz
  6065  1EB5  2EB7               	goto	l8588
  6066  1EB6  2E99               	goto	l6822
  6067  1EB7                     l8588:	
  6068                           
  6069                           ; Switch size 1, requested type "simple"
  6070                           ; Number of cases is 5, Range of values is 32 to 48
  6071                           ; switch strategies available:
  6072                           ; Name         Instructions Cycles
  6073                           ; simple_byte           16     9 (average)
  6074                           ; direct_byte           43     9 (fixed)
  6075                           ; jumptable            263     9 (fixed)
  6076                           ;	Chosen strategy is simple_byte
  6077  1EB7  085D               	movf	??_vfpfcnvrt+2,w
  6078  1EB8  3A20               	xorlw	32	; case 32
  6079  1EB9  1903               	skipnz
  6080  1EBA  2E93               	goto	l772
  6081  1EBB  3A03               	xorlw	3	; case 35
  6082  1EBC  1903               	skipnz
  6083  1EBD  2E96               	goto	l773
  6084  1EBE  3A08               	xorlw	8	; case 43
  6085  1EBF  1903               	skipnz
  6086  1EC0  2E90               	goto	l771
  6087  1EC1  3A06               	xorlw	6	; case 45
  6088  1EC2  1903               	skipnz
  6089  1EC3  2E81               	goto	l768
  6090  1EC4  3A1D               	xorlw	29	; case 48
  6091  1EC5  1903               	skipnz
  6092  1EC6  2E8D               	goto	l770
  6093  1EC7  2E99               	goto	l6822
  6094  1EC8  2E9E               	goto	l6828
  6095  1EC9                     l775:	
  6096                           
  6097                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6098  1EC9  0022               	movlb	2	; select bank2
  6099  1ECA  1C69               	btfss	_flags^(0+256),0
  6100  1ECB  2ED0               	goto	l6832
  6101                           
  6102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6103  1ECC  30FD               	movlw	253
  6104  1ECD  05E9               	andwf	_flags^(0+256),f
  6105  1ECE  30FF               	movlw	255
  6106  1ECF  05EA               	andwf	(_flags+1)^(0+256),f
  6107  1ED0                     l6832:	
  6108                           
  6109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6110  1ED0  0020               	movlb	0	; select bank0
  6111  1ED1  0859               	movf	vfpfcnvrt@fmt,w
  6112  1ED2  0086               	movwf	6
  6113  1ED3  0187               	clrf	7
  6114  1ED4  3F40               	moviw [0]fsr1
  6115  1ED5  00DB               	movwf	??_vfpfcnvrt
  6116  1ED6  3F41               	moviw [1]fsr1
  6117  1ED7  00DC               	movwf	??_vfpfcnvrt+1
  6118  1ED8  085B               	movf	??_vfpfcnvrt,w
  6119  1ED9  0084               	movwf	4
  6120  1EDA  085C               	movf	??_vfpfcnvrt+1,w
  6121  1EDB  0085               	movwf	5
  6122  1EDC  0012               	moviw fsr0++
  6123  1EDD  3A2A               	xorlw	42
  6124  1EDE  1D03               	btfss	3,2
  6125  1EDF  2EFE               	goto	l6844
  6126                           
  6127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6128  1EE0  0859               	movf	vfpfcnvrt@fmt,w
  6129  1EE1  0086               	movwf	6
  6130  1EE2  0187               	clrf	7
  6131  1EE3  3001               	movlw	1
  6132  1EE4  0781               	addwf	1,f
  6133  1EE5  3141               	addfsr 1,1
  6134  1EE6  1803               	skipnc
  6135  1EE7  0A81               	incf	1,f
  6136                           
  6137                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6138  1EE8  085A               	movf	vfpfcnvrt@ap,w
  6139  1EE9  0086               	movwf	6
  6140  1EEA  0187               	clrf	7
  6141  1EEB  0801               	movf	1,w
  6142  1EEC  0084               	movwf	4
  6143  1EED  0185               	clrf	5
  6144  1EEE  3002               	movlw	2
  6145  1EEF  0781               	addwf	1,f
  6146  1EF0  3F00               	moviw [0]fsr0
  6147  1EF1  0022               	movlb	2	; select bank2
  6148  1EF2  00E5               	movwf	_width^(0+256)
  6149  1EF3  3F01               	moviw [1]fsr0
  6150  1EF4  00E6               	movwf	(_width+1)^(0+256)
  6151                           
  6152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6153  1EF5  1FE6               	btfss	(_width+1)^(0+256),7
  6154  1EF6  2F41               	goto	l6854
  6155                           
  6156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6157  1EF7  1469               	bsf	_flags^(0+256),0
  6158                           
  6159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6160  1EF8  09E5               	comf	_width^(0+256),f
  6161  1EF9  09E6               	comf	(_width+1)^(0+256),f
  6162  1EFA  0AE5               	incf	_width^(0+256),f
  6163  1EFB  1903               	skipnz
  6164  1EFC  0AE6               	incf	(_width+1)^(0+256),f
  6165  1EFD  2F41               	goto	l6854
  6166  1EFE                     l6844:	
  6167                           
  6168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6169  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  6170  1EFF  0086               	movwf	6
  6171  1F00  0187               	clrf	7
  6172  1F01  3F40               	moviw [0]fsr1
  6173  1F02  00F7               	movwf	atoi@s
  6174  1F03  3F41               	moviw [1]fsr1
  6175  1F04  00F8               	movwf	atoi@s+1
  6176  1F05  31AC  2479  319E   	fcall	_atoi
  6177  1F08  0878               	movf	?_atoi+1,w
  6178  1F09  0022               	movlb	2	; select bank2
  6179  1F0A  00E6               	movwf	(_width+1)^(0+256)
  6180  1F0B  0877               	movf	?_atoi,w
  6181  1F0C  00E5               	movwf	_width^(0+256)
  6182                           
  6183                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6184  1F0D  2F17               	goto	l6848
  6185  1F0E                     l6846:	
  6186                           
  6187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6188  1F0E  0020               	movlb	0	; select bank0
  6189  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  6190  1F10  0086               	movwf	6
  6191  1F11  0187               	clrf	7
  6192  1F12  3001               	movlw	1
  6193  1F13  0781               	addwf	1,f
  6194  1F14  3141               	addfsr 1,1
  6195  1F15  1803               	skipnc
  6196  1F16  0A81               	incf	1,f
  6197  1F17                     l6848:	
  6198  1F17  0020               	movlb	0	; select bank0
  6199  1F18  0859               	movf	vfpfcnvrt@fmt,w
  6200  1F19  0086               	movwf	6
  6201  1F1A  0187               	clrf	7
  6202  1F1B  3F40               	moviw [0]fsr1
  6203  1F1C  00DB               	movwf	??_vfpfcnvrt
  6204  1F1D  3F41               	moviw [1]fsr1
  6205  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  6206  1F1F  085B               	movf	??_vfpfcnvrt,w
  6207  1F20  0084               	movwf	4
  6208  1F21  085C               	movf	??_vfpfcnvrt+1,w
  6209  1F22  0085               	movwf	5
  6210  1F23  0800               	movf	0,w	;code access
  6211  1F24  3ED0               	addlw	208
  6212  1F25  00DD               	movwf	??_vfpfcnvrt+2
  6213  1F26  30FF               	movlw	255
  6214  1F27  1803               	skipnc
  6215  1F28  3000               	movlw	0
  6216  1F29  00DE               	movwf	??_vfpfcnvrt+3
  6217  1F2A  3000               	movlw	0
  6218  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  6219  1F2C  300A               	movlw	10
  6220  1F2D  1903               	skipnz
  6221  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  6222  1F2F  1803               	btfsc	3,0
  6223  1F30  2F33               	goto	u9050
  6224  1F31  3001               	movlw	1
  6225  1F32  2F34               	goto	u9060
  6226  1F33                     u9050:	
  6227  1F33  3000               	movlw	0
  6228  1F34                     u9060:	
  6229  1F34  00DF               	movwf	??_vfpfcnvrt+4
  6230  1F35  01E0               	clrf	??_vfpfcnvrt+5
  6231  1F36  085F               	movf	??_vfpfcnvrt+4,w
  6232  1F37  0021               	movlb	1	; select bank1
  6233  1F38  00A4               	movwf	_vfpfcnvrt$1250^(0+128)
  6234  1F39  0020               	movlb	0	; select bank0
  6235  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  6236  1F3B  0021               	movlb	1	; select bank1
  6237  1F3C  00A5               	movwf	(_vfpfcnvrt$1250+1)^(0+128)
  6238  1F3D  0824               	movf	_vfpfcnvrt$1250^(0+128),w
  6239  1F3E  0425               	iorwf	(_vfpfcnvrt$1250+1)^(0+128),w
  6240  1F3F  1D03               	btfss	3,2
  6241  1F40  2F0E               	goto	l6846
  6242  1F41                     l6854:	
  6243                           
  6244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6245  1F41  0020               	movlb	0	; select bank0
  6246  1F42  0859               	movf	vfpfcnvrt@fmt,w
  6247  1F43  0086               	movwf	6
  6248  1F44  0187               	clrf	7
  6249  1F45  3F40               	moviw [0]fsr1
  6250  1F46  00DB               	movwf	??_vfpfcnvrt
  6251  1F47  3F41               	moviw [1]fsr1
  6252  1F48  00DC               	movwf	??_vfpfcnvrt+1
  6253  1F49  085B               	movf	??_vfpfcnvrt,w
  6254  1F4A  0084               	movwf	4
  6255  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  6256  1F4C  0085               	movwf	5
  6257  1F4D  0012               	moviw fsr0++
  6258  1F4E  3A2E               	xorlw	46
  6259  1F4F  1D03               	btfss	3,2
  6260  1F50  2FC5               	goto	l6876
  6261                           
  6262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6263  1F51  0022               	movlb	2	; select bank2
  6264  1F52  01E7               	clrf	_prec^(0+256)
  6265  1F53  01E8               	clrf	(_prec+1)^(0+256)
  6266                           
  6267                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6268  1F54  0020               	movlb	0	; select bank0
  6269  1F55  0859               	movf	vfpfcnvrt@fmt,w
  6270  1F56  0086               	movwf	6
  6271  1F57  0187               	clrf	7
  6272  1F58  3001               	movlw	1
  6273  1F59  0781               	addwf	1,f
  6274  1F5A  3141               	addfsr 1,1
  6275  1F5B  1803               	skipnc
  6276  1F5C  0A81               	incf	1,f
  6277                           
  6278                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6279  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  6280  1F5E  0086               	movwf	6
  6281  1F5F  0187               	clrf	7
  6282  1F60  3F40               	moviw [0]fsr1
  6283  1F61  00DB               	movwf	??_vfpfcnvrt
  6284  1F62  3F41               	moviw [1]fsr1
  6285  1F63  00DC               	movwf	??_vfpfcnvrt+1
  6286  1F64  085B               	movf	??_vfpfcnvrt,w
  6287  1F65  0084               	movwf	4
  6288  1F66  085C               	movf	??_vfpfcnvrt+1,w
  6289  1F67  0085               	movwf	5
  6290  1F68  0012               	moviw fsr0++
  6291  1F69  3A2A               	xorlw	42
  6292  1F6A  1D03               	btfss	3,2
  6293  1F6B  2F82               	goto	l6866
  6294                           
  6295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6296  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  6297  1F6D  0086               	movwf	6
  6298  1F6E  0187               	clrf	7
  6299  1F6F  3001               	movlw	1
  6300  1F70  0781               	addwf	1,f
  6301  1F71  3141               	addfsr 1,1
  6302  1F72  1803               	skipnc
  6303  1F73  0A81               	incf	1,f
  6304                           
  6305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6306  1F74  085A               	movf	vfpfcnvrt@ap,w
  6307  1F75  0086               	movwf	6
  6308  1F76  0187               	clrf	7
  6309  1F77  0801               	movf	1,w
  6310  1F78  0084               	movwf	4
  6311  1F79  0185               	clrf	5
  6312  1F7A  3002               	movlw	2
  6313  1F7B  0781               	addwf	1,f
  6314  1F7C  3F00               	moviw [0]fsr0
  6315  1F7D  0022               	movlb	2	; select bank2
  6316  1F7E  00E7               	movwf	_prec^(0+256)
  6317  1F7F  3F01               	moviw [1]fsr0
  6318  1F80  00E8               	movwf	(_prec+1)^(0+256)
  6319                           
  6320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6321  1F81  2FC5               	goto	l6876
  6322  1F82                     l6866:	
  6323                           
  6324                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6325  1F82  0859               	movf	vfpfcnvrt@fmt,w
  6326  1F83  0086               	movwf	6
  6327  1F84  0187               	clrf	7
  6328  1F85  3F40               	moviw [0]fsr1
  6329  1F86  00F7               	movwf	atoi@s
  6330  1F87  3F41               	moviw [1]fsr1
  6331  1F88  00F8               	movwf	atoi@s+1
  6332  1F89  31AC  2479  319E   	fcall	_atoi
  6333  1F8C  0878               	movf	?_atoi+1,w
  6334  1F8D  0022               	movlb	2	; select bank2
  6335  1F8E  00E8               	movwf	(_prec+1)^(0+256)
  6336  1F8F  0877               	movf	?_atoi,w
  6337  1F90  00E7               	movwf	_prec^(0+256)
  6338                           
  6339                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6340  1F91  2F9B               	goto	l6870
  6341  1F92                     l6868:	
  6342                           
  6343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6344  1F92  0020               	movlb	0	; select bank0
  6345  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6346  1F94  0086               	movwf	6
  6347  1F95  0187               	clrf	7
  6348  1F96  3001               	movlw	1
  6349  1F97  0781               	addwf	1,f
  6350  1F98  3141               	addfsr 1,1
  6351  1F99  1803               	skipnc
  6352  1F9A  0A81               	incf	1,f
  6353  1F9B                     l6870:	
  6354  1F9B  0020               	movlb	0	; select bank0
  6355  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6356  1F9D  0086               	movwf	6
  6357  1F9E  0187               	clrf	7
  6358  1F9F  3F40               	moviw [0]fsr1
  6359  1FA0  00DB               	movwf	??_vfpfcnvrt
  6360  1FA1  3F41               	moviw [1]fsr1
  6361  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6362  1FA3  085B               	movf	??_vfpfcnvrt,w
  6363  1FA4  0084               	movwf	4
  6364  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6365  1FA6  0085               	movwf	5
  6366  1FA7  0800               	movf	0,w	;code access
  6367  1FA8  3ED0               	addlw	208
  6368  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6369  1FAA  30FF               	movlw	255
  6370  1FAB  1803               	skipnc
  6371  1FAC  3000               	movlw	0
  6372  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6373  1FAE  3000               	movlw	0
  6374  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6375  1FB0  300A               	movlw	10
  6376  1FB1  1903               	skipnz
  6377  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6378  1FB3  1803               	btfsc	3,0
  6379  1FB4  2FB7               	goto	u9100
  6380  1FB5  3001               	movlw	1
  6381  1FB6  2FB8               	goto	u9110
  6382  1FB7                     u9100:	
  6383  1FB7  3000               	movlw	0
  6384  1FB8                     u9110:	
  6385  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6386  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6387  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6388  1FBB  0021               	movlb	1	; select bank1
  6389  1FBC  00A6               	movwf	_vfpfcnvrt$1251^(0+128)
  6390  1FBD  0020               	movlb	0	; select bank0
  6391  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6392  1FBF  0021               	movlb	1	; select bank1
  6393  1FC0  00A7               	movwf	(_vfpfcnvrt$1251+1)^(0+128)
  6394  1FC1  0826               	movf	_vfpfcnvrt$1251^(0+128),w
  6395  1FC2  0427               	iorwf	(_vfpfcnvrt$1251+1)^(0+128),w
  6396  1FC3  1D03               	btfss	3,2
  6397  1FC4  2F92               	goto	l6868
  6398  1FC5                     l6876:	
  6399                           
  6400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6401  1FC5  0020               	movlb	0	; select bank0
  6402  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6403  1FC7  0086               	movwf	6
  6404  1FC8  0187               	clrf	7
  6405  1FC9  3F40               	moviw [0]fsr1
  6406  1FCA  00DB               	movwf	??_vfpfcnvrt
  6407  1FCB  3F41               	moviw [1]fsr1
  6408  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6409  1FCD  085B               	movf	??_vfpfcnvrt,w
  6410  1FCE  0084               	movwf	4
  6411  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6412  1FD0  0085               	movwf	5
  6413  1FD1  0012               	moviw fsr0++
  6414  1FD2  3A63               	xorlw	99
  6415  1FD3  31A5  1D03         	btfss	3,2
  6416  1FD5  2DF1               	goto	l6886
  6417                           
  6418                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6419  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6420  1FD7  0086               	movwf	6
  6421  1FD8  0187               	clrf	7
  6422  1FD9  3001               	movlw	1
  6423  1FDA  0781               	addwf	1,f
  6424  1FDB  3141               	addfsr 1,1
  6425  1FDC  1803               	skipnc
  6426  1FDD  0A81               	incf	1,f
  6427                           
  6428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6429  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6430  1FDF  0086               	movwf	6
  6431  1FE0  0187               	clrf	7
  6432  1FE1  0801               	movf	1,w
  6433  1FE2  0084               	movwf	4
  6434  1FE3  0185               	clrf	5
  6435  1FE4  3002               	movlw	2
  6436  1FE5  0781               	addwf	1,f
  6437  1FE6  0800               	movf	0,w
  6438  1FE7  00DB               	movwf	??_vfpfcnvrt
  6439  1FE8  085B               	movf	??_vfpfcnvrt,w
  6440  1FE9  0021               	movlb	1	; select bank1
  6441  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6442                           
  6443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6444  1FEB  0020               	movlb	0	; select bank0
  6445  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6446  1FED  00B1               	movwf	ctoa@fp+1
  6447  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6448  1FEF  00B0               	movwf	ctoa@fp
  6449  1FF0  0021               	movlb	1	; select bank1
  6450  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6451  1FF2  0020               	movlb	0	; select bank0
  6452  1FF3  00DB               	movwf	??_vfpfcnvrt
  6453  1FF4  085B               	movf	??_vfpfcnvrt,w
  6454  1FF5  00B2               	movwf	ctoa@c
  6455  1FF6  31B6  2603         	fcall	_ctoa
  6456  1FF8  0020               	movlb	0	; select bank0
  6457  1FF9  0831               	movf	?_ctoa+1,w
  6458  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6459  1FFB  0830               	movf	?_ctoa,w
  6460  1FFC  00D7               	movwf	?_vfpfcnvrt
  6461  1FFD  0008               	return
  6462  1FFE                     L7:	
  6463  1FFE                     L6:	
  6464  1FFE  318F  2FDD         	ljmp	l7154
  6465                           
  6466                           	psect	text8
  6467  1B89                     __ptext8:	
  6468 ;; *************** function _xtoa *****************
  6469 ;; Defined at:
  6470 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6471 ;; Parameters:    Size  Location     Type
  6472 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6473 ;;		 -> vsnprintf@f(6), 
  6474 ;;  d               8   18[BANK0 ] unsigned long long 
  6475 ;;  x               1   26[BANK0 ] unsigned char 
  6476 ;; Auto vars:     Size  Location     Type
  6477 ;;  n               8   43[BANK0 ] unsigned long long 
  6478 ;;  c               2   53[BANK0 ] int 
  6479 ;;  i               2   51[BANK0 ] int 
  6480 ;;  w               2   41[BANK0 ] int 
  6481 ;;  p               2   39[BANK0 ] int 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  2   16[BANK0 ] int 
  6484 ;; Registers used:
  6485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6491 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6492 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6493 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6494 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6495 ;;Total ram usage:       39 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    5
  6498 ;; This function calls:
  6499 ;;		_isalpha
  6500 ;;		_isupper
  6501 ;;		_pad
  6502 ;;		_toupper
  6503 ;; This function is called by:
  6504 ;;		_vfpfcnvrt
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           
  6509                           ;psect for function _xtoa
  6510  1B89                     _xtoa:	
  6511                           
  6512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6513                           
  6514                           ;incstack = 0
  6515                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6516  1B89  0022               	movlb	2	; select bank2
  6517  1B8A  1BE8               	btfsc	(_prec+1)^(0+256),7
  6518  1B8B  2B90               	goto	l734
  6519                           
  6520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6521  1B8C  30FD               	movlw	253
  6522  1B8D  05E9               	andwf	_flags^(0+256),f
  6523  1B8E  30FF               	movlw	255
  6524  1B8F  05EA               	andwf	(_flags+1)^(0+256),f
  6525  1B90                     l734:	
  6526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6527                           
  6528                           
  6529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6530  1B90  0868               	movf	(_prec+1)^(0+256),w
  6531  1B91  3A80               	xorlw	128
  6532  1B92  0020               	movlb	0	; select bank0
  6533  1B93  00BB               	movwf	??_xtoa
  6534  1B94  3080               	movlw	128
  6535  1B95  023B               	subwf	??_xtoa,w
  6536  1B96  1D03               	skipz
  6537  1B97  2B9B               	goto	u8725
  6538  1B98  3001               	movlw	1
  6539  1B99  0022               	movlb	2	; select bank2
  6540  1B9A  0267               	subwf	_prec^(0+256),w
  6541  1B9B                     u8725:	
  6542  1B9B  1803               	skipnc
  6543  1B9C  2BA3               	goto	l6676
  6544  1B9D  3001               	movlw	1
  6545  1B9E  0020               	movlb	0	; select bank0
  6546  1B9F  00C7               	movwf	xtoa@p
  6547  1BA0  3000               	movlw	0
  6548  1BA1  00C8               	movwf	xtoa@p+1
  6549  1BA2  2BAB               	goto	l738
  6550  1BA3                     l6676:	
  6551  1BA3  0022               	movlb	2	; select bank2
  6552  1BA4  0868               	movf	(_prec+1)^(0+256),w
  6553  1BA5  0020               	movlb	0	; select bank0
  6554  1BA6  00C8               	movwf	xtoa@p+1
  6555  1BA7  0022               	movlb	2	; select bank2
  6556  1BA8  0867               	movf	_prec^(0+256),w
  6557  1BA9  0020               	movlb	0	; select bank0
  6558  1BAA  00C7               	movwf	xtoa@p
  6559  1BAB                     l738:	
  6560                           
  6561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6562  1BAB  0022               	movlb	2	; select bank2
  6563  1BAC  0866               	movf	(_width+1)^(0+256),w
  6564  1BAD  0020               	movlb	0	; select bank0
  6565  1BAE  00CA               	movwf	xtoa@w+1
  6566  1BAF  0022               	movlb	2	; select bank2
  6567  1BB0  0865               	movf	_width^(0+256),w
  6568  1BB1  0020               	movlb	0	; select bank0
  6569  1BB2  00C9               	movwf	xtoa@w
  6570                           
  6571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6572  1BB3  0022               	movlb	2	; select bank2
  6573  1BB4  1E69               	btfss	_flags^(0+256),4
  6574  1BB5  2BBB               	goto	l6682
  6575                           
  6576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6577  1BB6  30FE               	movlw	254
  6578  1BB7  0020               	movlb	0	; select bank0
  6579  1BB8  07C9               	addwf	xtoa@w,f
  6580  1BB9  30FF               	movlw	255
  6581  1BBA  3DCA               	addwfc	xtoa@w+1,f
  6582  1BBB                     l6682:	
  6583                           
  6584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6585  1BBB  0020               	movlb	0	; select bank0
  6586  1BBC  0832               	movf	xtoa@d,w
  6587  1BBD  00CB               	movwf	xtoa@n
  6588  1BBE  0833               	movf	xtoa@d+1,w
  6589  1BBF  00CC               	movwf	xtoa@n+1
  6590  1BC0  0834               	movf	xtoa@d+2,w
  6591  1BC1  00CD               	movwf	xtoa@n+2
  6592  1BC2  0835               	movf	xtoa@d+3,w
  6593  1BC3  00CE               	movwf	xtoa@n+3
  6594  1BC4  0836               	movf	xtoa@d+4,w
  6595  1BC5  00CF               	movwf	xtoa@n+4
  6596  1BC6  0837               	movf	xtoa@d+5,w
  6597  1BC7  00D0               	movwf	xtoa@n+5
  6598  1BC8  0838               	movf	xtoa@d+6,w
  6599  1BC9  00D1               	movwf	xtoa@n+6
  6600  1BCA  0839               	movf	xtoa@d+7,w
  6601  1BCB  00D2               	movwf	xtoa@n+7
  6602                           
  6603                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6604  1BCC  301F               	movlw	31
  6605  1BCD  00D3               	movwf	xtoa@i
  6606  1BCE  3000               	movlw	0
  6607  1BCF  00D4               	movwf	xtoa@i+1
  6608                           
  6609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6610  1BD0  0024               	movlb	4	; select bank4
  6611  1BD1  01BF               	clrf	(_dbuf^(0+512)+31)
  6612                           
  6613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6614  1BD2  2C7D               	goto	l6714
  6615  1BD3                     l6686:	
  6616                           
  6617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6618  1BD3  30FF               	movlw	255
  6619  1BD4  0020               	movlb	0	; select bank0
  6620  1BD5  07D3               	addwf	xtoa@i,f
  6621  1BD6  30FF               	movlw	255
  6622  1BD7  3DD4               	addwfc	xtoa@i+1,f
  6623                           
  6624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6625  1BD8  300F               	movlw	15
  6626  1BD9  054B               	andwf	xtoa@n,w
  6627  1BDA  00D5               	movwf	xtoa@c
  6628  1BDB  3000               	movlw	0
  6629  1BDC  054C               	andwf	xtoa@n+1,w
  6630  1BDD  00D6               	movwf	xtoa@c+1
  6631                           
  6632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6633  1BDE  0856               	movf	xtoa@c+1,w
  6634  1BDF  3A80               	xorlw	128
  6635  1BE0  00BB               	movwf	??_xtoa
  6636  1BE1  3080               	movlw	128
  6637  1BE2  023B               	subwf	??_xtoa,w
  6638  1BE3  1D03               	skipz
  6639  1BE4  2BE7               	goto	u8745
  6640  1BE5  300A               	movlw	10
  6641  1BE6  0255               	subwf	xtoa@c,w
  6642  1BE7                     u8745:	
  6643  1BE7  1C03               	skipc
  6644  1BE8  2BED               	goto	l6690
  6645  1BE9  0020               	movlb	0	; select bank0
  6646  1BEA  0855               	movf	xtoa@c,w
  6647  1BEB  3E57               	addlw	87
  6648  1BEC  2BF0               	goto	L1
  6649  1BED                     l6690:	
  6650  1BED  0020               	movlb	0	; select bank0
  6651  1BEE  0855               	movf	xtoa@c,w
  6652  1BEF  3E30               	addlw	48
  6653  1BF0                     L1:	
  6654  1BF0  00D5               	movwf	xtoa@c
  6655  1BF1  3000               	movlw	0
  6656  1BF2  3D56               	addwfc	xtoa@c+1,w
  6657  1BF3  00D6               	movwf	xtoa@c+1
  6658  1BF4  083A               	movf	xtoa@x,w
  6659  1BF5  3EBF               	addlw	191
  6660  1BF6  00BB               	movwf	??_xtoa
  6661  1BF7  30FF               	movlw	255
  6662  1BF8  1803               	skipnc
  6663  1BF9  3000               	movlw	0
  6664  1BFA  00BC               	movwf	??_xtoa+1
  6665  1BFB  3000               	movlw	0
  6666  1BFC  023C               	subwf	??_xtoa+1,w
  6667  1BFD  301A               	movlw	26
  6668  1BFE  1903               	skipnz
  6669  1BFF  023B               	subwf	??_xtoa,w
  6670  1C00  1803               	btfsc	3,0
  6671  1C01  2C04               	goto	u8750
  6672  1C02  3001               	movlw	1
  6673  1C03  2C05               	goto	u8760
  6674  1C04                     u8750:	
  6675  1C04  3000               	movlw	0
  6676  1C05                     u8760:	
  6677  1C05  00BD               	movwf	??_xtoa+2
  6678  1C06  01BE               	clrf	??_xtoa+3
  6679  1C07  083D               	movf	??_xtoa+2,w
  6680  1C08  00C3               	movwf	_xtoa$1235
  6681  1C09  083E               	movf	??_xtoa+3,w
  6682  1C0A  00C4               	movwf	_xtoa$1235+1
  6683  1C0B  0843               	movf	_xtoa$1235,w
  6684  1C0C  0444               	iorwf	_xtoa$1235+1,w
  6685  1C0D  1903               	btfsc	3,2
  6686  1C0E  2C3B               	goto	l6706
  6687  1C0F  3020               	movlw	32
  6688  1C10  0455               	iorwf	xtoa@c,w
  6689  1C11  00BB               	movwf	??_xtoa
  6690  1C12  3000               	movlw	0
  6691  1C13  0456               	iorwf	xtoa@c+1,w
  6692  1C14  00BC               	movwf	??_xtoa+1
  6693  1C15  083B               	movf	??_xtoa,w
  6694  1C16  3E9F               	addlw	159
  6695  1C17  00BD               	movwf	??_xtoa+2
  6696  1C18  30FF               	movlw	255
  6697  1C19  3D3C               	addwfc	??_xtoa+1,w
  6698  1C1A  00BE               	movwf	??_xtoa+3
  6699  1C1B  3000               	movlw	0
  6700  1C1C  023E               	subwf	??_xtoa+3,w
  6701  1C1D  301A               	movlw	26
  6702  1C1E  1903               	skipnz
  6703  1C1F  023D               	subwf	??_xtoa+2,w
  6704  1C20  1803               	btfsc	3,0
  6705  1C21  2C24               	goto	u8780
  6706  1C22  3001               	movlw	1
  6707  1C23  2C25               	goto	u8790
  6708  1C24                     u8780:	
  6709  1C24  3000               	movlw	0
  6710  1C25                     u8790:	
  6711  1C25  00BF               	movwf	??_xtoa+4
  6712  1C26  01C0               	clrf	??_xtoa+5
  6713  1C27  083F               	movf	??_xtoa+4,w
  6714  1C28  00C5               	movwf	_xtoa$1236
  6715  1C29  0840               	movf	??_xtoa+5,w
  6716  1C2A  00C6               	movwf	_xtoa$1236+1
  6717  1C2B  0845               	movf	_xtoa$1236,w
  6718  1C2C  0446               	iorwf	_xtoa$1236+1,w
  6719  1C2D  1903               	btfsc	3,2
  6720  1C2E  2C3B               	goto	l6706
  6721                           
  6722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6723  1C2F  0856               	movf	xtoa@c+1,w
  6724  1C30  00F8               	movwf	toupper@c+1
  6725  1C31  0855               	movf	xtoa@c,w
  6726  1C32  00F7               	movwf	toupper@c
  6727  1C33  3190  2001  319B   	fcall	_toupper
  6728  1C36  0878               	movf	?_toupper+1,w
  6729  1C37  0020               	movlb	0	; select bank0
  6730  1C38  00D6               	movwf	xtoa@c+1
  6731  1C39  0877               	movf	?_toupper,w
  6732  1C3A  00D5               	movwf	xtoa@c
  6733  1C3B                     l6706:	
  6734                           
  6735                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6736  1C3B  0855               	movf	xtoa@c,w
  6737  1C3C  00BB               	movwf	??_xtoa
  6738  1C3D  0853               	movf	xtoa@i,w
  6739  1C3E  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6740  1C3F  0086               	movwf	6
  6741  1C40  3002               	movlw	2	; select bank4/5
  6742  1C41  0087               	movwf	7
  6743  1C42  083B               	movf	??_xtoa,w
  6744  1C43  0081               	movwf	1
  6745                           
  6746                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6747  1C44  30FF               	movlw	255
  6748  1C45  07C7               	addwf	xtoa@p,f
  6749  1C46  30FF               	movlw	255
  6750  1C47  3DC8               	addwfc	xtoa@p+1,f
  6751                           
  6752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6753  1C48  30FF               	movlw	255
  6754  1C49  07C9               	addwf	xtoa@w,f
  6755  1C4A  30FF               	movlw	255
  6756  1C4B  3DCA               	addwfc	xtoa@w+1,f
  6757                           
  6758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6759  1C4C  304B               	movlw	low xtoa@n
  6760  1C4D  0086               	movwf	6
  6761  1C4E  3000               	movlw	high xtoa@n
  6762  1C4F  0087               	movwf	7
  6763  1C50  3F40               	moviw [0]fsr1
  6764  1C51  00BB               	movwf	??_xtoa
  6765  1C52  3F41               	moviw [1]fsr1
  6766  1C53  00BC               	movwf	??_xtoa+1
  6767  1C54  3F42               	moviw [2]fsr1
  6768  1C55  00BD               	movwf	??_xtoa+2
  6769  1C56  3F43               	moviw [3]fsr1
  6770  1C57  00BE               	movwf	??_xtoa+3
  6771  1C58  3F44               	moviw [4]fsr1
  6772  1C59  00BF               	movwf	??_xtoa+4
  6773  1C5A  3F45               	moviw [5]fsr1
  6774  1C5B  00C0               	movwf	??_xtoa+5
  6775  1C5C  3F46               	moviw [6]fsr1
  6776  1C5D  00C1               	movwf	??_xtoa+6
  6777  1C5E  3F47               	moviw [7]fsr1
  6778  1C5F  00C2               	movwf	??_xtoa+7
  6779  1C60  3004               	movlw	4
  6780  1C61                     u8815:	
  6781  1C61  0020               	movlb	0	; select bank0
  6782  1C62  36C2               	lsrf	??_xtoa+7,f
  6783  1C63  0CC1               	rrf	??_xtoa+6,f
  6784  1C64  0CC0               	rrf	??_xtoa+5,f
  6785  1C65  0CBF               	rrf	??_xtoa+4,f
  6786  1C66  0CBE               	rrf	??_xtoa+3,f
  6787  1C67  0CBD               	rrf	??_xtoa+2,f
  6788  1C68  0CBC               	rrf	??_xtoa+1,f
  6789  1C69  0CBB               	rrf	??_xtoa,f
  6790  1C6A  0B89               	decfsz	9,f
  6791  1C6B  2C61               	goto	u8815
  6792  1C6C  0020               	movlb	0	; select bank0
  6793  1C6D  0842               	movf	??_xtoa+7,w
  6794  1C6E  00D2               	movwf	xtoa@n+7
  6795  1C6F  0841               	movf	??_xtoa+6,w
  6796  1C70  00D1               	movwf	xtoa@n+6
  6797  1C71  0840               	movf	??_xtoa+5,w
  6798  1C72  00D0               	movwf	xtoa@n+5
  6799  1C73  083F               	movf	??_xtoa+4,w
  6800  1C74  00CF               	movwf	xtoa@n+4
  6801  1C75  083E               	movf	??_xtoa+3,w
  6802  1C76  00CE               	movwf	xtoa@n+3
  6803  1C77  083D               	movf	??_xtoa+2,w
  6804  1C78  00CD               	movwf	xtoa@n+2
  6805  1C79  083C               	movf	??_xtoa+1,w
  6806  1C7A  00CC               	movwf	xtoa@n+1
  6807  1C7B  083B               	movf	??_xtoa,w
  6808  1C7C  00CB               	movwf	xtoa@n
  6809  1C7D                     l6714:	
  6810                           
  6811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6812  1C7D  0020               	movlb	0	; select bank0
  6813  1C7E  0854               	movf	xtoa@i+1,w
  6814  1C7F  3A80               	xorlw	128
  6815  1C80  00BB               	movwf	??_xtoa
  6816  1C81  3080               	movlw	128
  6817  1C82  023B               	subwf	??_xtoa,w
  6818  1C83  1D03               	skipz
  6819  1C84  2C87               	goto	u8825
  6820  1C85  3002               	movlw	2
  6821  1C86  0253               	subwf	xtoa@i,w
  6822  1C87                     u8825:	
  6823  1C87  1C03               	skipc
  6824  1C88  2CAE               	goto	l759
  6825  1C89  0020               	movlb	0	; select bank0
  6826  1C8A  084B               	movf	xtoa@n,w
  6827  1C8B  044C               	iorwf	xtoa@n+1,w
  6828  1C8C  044D               	iorwf	xtoa@n+2,w
  6829  1C8D  044E               	iorwf	xtoa@n+3,w
  6830  1C8E  044F               	iorwf	xtoa@n+4,w
  6831  1C8F  0450               	iorwf	xtoa@n+5,w
  6832  1C90  0451               	iorwf	xtoa@n+6,w
  6833  1C91  0452               	iorwf	xtoa@n+7,w
  6834  1C92  1D03               	skipz
  6835  1C93  2BD3               	goto	l6686
  6836  1C94  0848               	movf	xtoa@p+1,w
  6837  1C95  3A80               	xorlw	128
  6838  1C96  00BB               	movwf	??_xtoa
  6839  1C97  3080               	movlw	128
  6840  1C98  023B               	subwf	??_xtoa,w
  6841  1C99  1D03               	skipz
  6842  1C9A  2C9D               	goto	u8845
  6843  1C9B  3001               	movlw	1
  6844  1C9C  0247               	subwf	xtoa@p,w
  6845  1C9D                     u8845:	
  6846  1C9D  1803               	skipnc
  6847  1C9E  2BD3               	goto	l6686
  6848  1C9F  0020               	movlb	0	; select bank0
  6849  1CA0  084A               	movf	xtoa@w+1,w
  6850  1CA1  3A80               	xorlw	128
  6851  1CA2  00BB               	movwf	??_xtoa
  6852  1CA3  3080               	movlw	128
  6853  1CA4  023B               	subwf	??_xtoa,w
  6854  1CA5  1D03               	skipz
  6855  1CA6  2CA9               	goto	u8855
  6856  1CA7  3001               	movlw	1
  6857  1CA8  0249               	subwf	xtoa@w,w
  6858  1CA9                     u8855:	
  6859  1CA9  1C03               	skipc
  6860  1CAA  2CAE               	goto	l759
  6861  1CAB  0022               	movlb	2	; select bank2
  6862  1CAC  18E9               	btfsc	_flags^(0+256),1
  6863  1CAD  2BD3               	goto	l6686
  6864  1CAE                     l759:	
  6865                           
  6866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6867  1CAE  0022               	movlb	2	; select bank2
  6868  1CAF  1E69               	btfss	_flags^(0+256),4
  6869  1CB0  2CCC               	goto	l6730
  6870                           
  6871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6872  1CB1  30FF               	movlw	255
  6873  1CB2  0020               	movlb	0	; select bank0
  6874  1CB3  07D3               	addwf	xtoa@i,f
  6875  1CB4  30FF               	movlw	255
  6876  1CB5  3DD4               	addwfc	xtoa@i+1,f
  6877                           
  6878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6879  1CB6  083A               	movf	xtoa@x,w
  6880  1CB7  00BB               	movwf	??_xtoa
  6881  1CB8  0853               	movf	xtoa@i,w
  6882  1CB9  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6883  1CBA  0086               	movwf	6
  6884  1CBB  3002               	movlw	2	; select bank4/5
  6885  1CBC  0087               	movwf	7
  6886  1CBD  083B               	movf	??_xtoa,w
  6887  1CBE  0081               	movwf	1
  6888                           
  6889                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6890  1CBF  30FF               	movlw	255
  6891  1CC0  07D3               	addwf	xtoa@i,f
  6892  1CC1  30FF               	movlw	255
  6893  1CC2  3DD4               	addwfc	xtoa@i+1,f
  6894                           
  6895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6896  1CC3  3030               	movlw	48
  6897  1CC4  00BB               	movwf	??_xtoa
  6898  1CC5  0853               	movf	xtoa@i,w
  6899  1CC6  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6900  1CC7  0086               	movwf	6
  6901  1CC8  3002               	movlw	2	; select bank4/5
  6902  1CC9  0087               	movwf	7
  6903  1CCA  083B               	movf	??_xtoa,w
  6904  1CCB  0081               	movwf	1
  6905  1CCC                     l6730:	
  6906                           
  6907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6908  1CCC  0020               	movlb	0	; select bank0
  6909  1CCD  0831               	movf	xtoa@fp+1,w
  6910  1CCE  00A7               	movwf	pad@fp+1
  6911  1CCF  0830               	movf	xtoa@fp,w
  6912  1CD0  00A6               	movwf	pad@fp
  6913  1CD1  0853               	movf	xtoa@i,w
  6914  1CD2  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6915  1CD3  00BB               	movwf	??_xtoa
  6916  1CD4  083B               	movf	??_xtoa,w
  6917  1CD5  00A8               	movwf	pad@buf
  6918  1CD6  084A               	movf	xtoa@w+1,w
  6919  1CD7  00AA               	movwf	pad@p+1
  6920  1CD8  0849               	movf	xtoa@w,w
  6921  1CD9  00A9               	movwf	pad@p
  6922  1CDA  31B7  27AF         	fcall	_pad
  6923  1CDC  0020               	movlb	0	; select bank0
  6924  1CDD  0827               	movf	?_pad+1,w
  6925  1CDE  00B1               	movwf	?_xtoa+1
  6926  1CDF  0826               	movf	?_pad,w
  6927  1CE0  00B0               	movwf	?_xtoa
  6928  1CE1  0008               	return
  6929  1CE2                     __end_of_xtoa:	
  6930                           
  6931                           	psect	text9
  6932  1001                     __ptext9:	
  6933 ;; *************** function _toupper *****************
  6934 ;; Defined at:
  6935 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  c               2    7[COMMON] int 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;		None
  6940 ;; Return value:  Size  Location     Type
  6941 ;;                  2    7[COMMON] int 
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6951 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6952 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6953 ;;Total ram usage:        8 bytes
  6954 ;; Hardware stack levels used:    1
  6955 ;; Hardware stack levels required when called:    2
  6956 ;; This function calls:
  6957 ;;		_islower
  6958 ;; This function is called by:
  6959 ;;		_xtoa
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           
  6964                           ;psect for function _toupper
  6965  1001                     _toupper:	
  6966                           
  6967                           ;incstack = 0
  6968                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6969  1001  0877               	movf	toupper@c,w
  6970  1002  3E9F               	addlw	159
  6971  1003  0020               	movlb	0	; select bank0
  6972  1004  00A0               	movwf	??_toupper
  6973  1005  30FF               	movlw	255
  6974  1006  3D78               	addwfc	toupper@c+1,w
  6975  1007  00A1               	movwf	??_toupper+1
  6976  1008  3000               	movlw	0
  6977  1009  0221               	subwf	??_toupper+1,w
  6978  100A  301A               	movlw	26
  6979  100B  1903               	skipnz
  6980  100C  0220               	subwf	??_toupper,w
  6981  100D  1803               	btfsc	3,0
  6982  100E  2811               	goto	u7870
  6983  100F  3001               	movlw	1
  6984  1010  2812               	goto	u7880
  6985  1011                     u7870:	
  6986  1011  3000               	movlw	0
  6987  1012                     u7880:	
  6988  1012  00A2               	movwf	??_toupper+2
  6989  1013  01A3               	clrf	??_toupper+3
  6990  1014  0822               	movf	??_toupper+2,w
  6991  1015  00F9               	movwf	_toupper$1785
  6992  1016  0823               	movf	??_toupper+3,w
  6993  1017  00FA               	movwf	_toupper$1785+1
  6994  1018  0879               	movf	_toupper$1785,w
  6995  1019  047A               	iorwf	_toupper$1785+1,w
  6996  101A  1903               	btfsc	3,2
  6997  101B  0008               	return
  6998  101C  305F               	movlw	95
  6999  101D  0577               	andwf	toupper@c,w
  7000  101E  00F7               	movwf	?_toupper
  7001  101F  3000               	movlw	0
  7002  1020  0578               	andwf	toupper@c+1,w
  7003  1021  00F8               	movwf	?_toupper+1
  7004  1022  0008               	return
  7005  1023                     __end_of_toupper:	
  7006                           
  7007                           	psect	text10
  7008  34AF                     __ptext10:	
  7009 ;; *************** function _islower *****************
  7010 ;; Defined at:
  7011 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7012 ;; Parameters:    Size  Location     Type
  7013 ;;  c               2    1[COMMON] int 
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;		None
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  2    1[COMMON] int 
  7018 ;; Registers used:
  7019 ;;		wreg, status,2, status,0
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7027 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7028 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7029 ;;Total ram usage:        6 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; Hardware stack levels required when called:    1
  7032 ;; This function calls:
  7033 ;;		Nothing
  7034 ;; This function is called by:
  7035 ;;		_toupper
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           
  7040                           ;psect for function _islower
  7041  34AF                     _islower:	
  7042                           
  7043                           ;incstack = 0
  7044                           ; Regs used in _islower: [wreg+status,2+status,0]
  7045  34AF  0871               	movf	islower@c,w
  7046  34B0  3E9F               	addlw	159
  7047  34B1  00F3               	movwf	??_islower
  7048  34B2  30FF               	movlw	255
  7049  34B3  3D72               	addwfc	islower@c+1,w
  7050  34B4  00F4               	movwf	??_islower+1
  7051  34B5  3000               	movlw	0
  7052  34B6  0274               	subwf	??_islower+1,w
  7053  34B7  301A               	movlw	26
  7054  34B8  1903               	skipnz
  7055  34B9  0273               	subwf	??_islower,w
  7056  34BA  1803               	btfsc	3,0
  7057  34BB  2CBE               	goto	u7760
  7058  34BC  3001               	movlw	1
  7059  34BD  2CBF               	goto	u7770
  7060  34BE                     u7760:	
  7061  34BE  3000               	movlw	0
  7062  34BF                     u7770:	
  7063  34BF  00F5               	movwf	??_islower+2
  7064  34C0  01F6               	clrf	??_islower+3
  7065  34C1  0875               	movf	??_islower+2,w
  7066  34C2  00F1               	movwf	?_islower
  7067  34C3  0876               	movf	??_islower+3,w
  7068  34C4  00F2               	movwf	?_islower+1
  7069  34C5  0008               	return
  7070  34C6                     __end_of_islower:	
  7071                           
  7072                           	psect	text11
  7073  3498                     __ptext11:	
  7074 ;; *************** function _isupper *****************
  7075 ;; Defined at:
  7076 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  c               2    1[COMMON] int 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  2    1[COMMON] int 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7092 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7093 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7094 ;;Total ram usage:        6 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; Hardware stack levels required when called:    1
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_xtoa
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           
  7105                           ;psect for function _isupper
  7106  3498                     _isupper:	
  7107                           
  7108                           ;incstack = 0
  7109                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7110  3498  0871               	movf	isupper@c,w
  7111  3499  3EBF               	addlw	191
  7112  349A  00F3               	movwf	??_isupper
  7113  349B  30FF               	movlw	255
  7114  349C  3D72               	addwfc	isupper@c+1,w
  7115  349D  00F4               	movwf	??_isupper+1
  7116  349E  3000               	movlw	0
  7117  349F  0274               	subwf	??_isupper+1,w
  7118  34A0  301A               	movlw	26
  7119  34A1  1903               	skipnz
  7120  34A2  0273               	subwf	??_isupper,w
  7121  34A3  1803               	btfsc	3,0
  7122  34A4  2CA7               	goto	u7830
  7123  34A5  3001               	movlw	1
  7124  34A6  2CA8               	goto	u7840
  7125  34A7                     u7830:	
  7126  34A7  3000               	movlw	0
  7127  34A8                     u7840:	
  7128  34A8  00F5               	movwf	??_isupper+2
  7129  34A9  01F6               	clrf	??_isupper+3
  7130  34AA  0875               	movf	??_isupper+2,w
  7131  34AB  00F1               	movwf	?_isupper
  7132  34AC  0876               	movf	??_isupper+3,w
  7133  34AD  00F2               	movwf	?_isupper+1
  7134  34AE  0008               	return
  7135  34AF                     __end_of_isupper:	
  7136                           
  7137                           	psect	text12
  7138  3566                     __ptext12:	
  7139 ;; *************** function _isalpha *****************
  7140 ;; Defined at:
  7141 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  c               2    1[COMMON] int 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;		None
  7146 ;; Return value:  Size  Location     Type
  7147 ;;                  2    1[COMMON] int 
  7148 ;; Registers used:
  7149 ;;		wreg, status,2, status,0
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7157 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7158 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7159 ;;Total ram usage:        8 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; Hardware stack levels required when called:    1
  7162 ;; This function calls:
  7163 ;;		Nothing
  7164 ;; This function is called by:
  7165 ;;		_xtoa
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           
  7170                           ;psect for function _isalpha
  7171  3566                     _isalpha:	
  7172                           
  7173                           ;incstack = 0
  7174                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7175  3566  3020               	movlw	32
  7176  3567  0471               	iorwf	isalpha@c,w
  7177  3568  00F3               	movwf	??_isalpha
  7178  3569  3000               	movlw	0
  7179  356A  0472               	iorwf	isalpha@c+1,w
  7180  356B  00F4               	movwf	??_isalpha+1
  7181  356C  0873               	movf	??_isalpha,w
  7182  356D  3E9F               	addlw	159
  7183  356E  00F5               	movwf	??_isalpha+2
  7184  356F  30FF               	movlw	255
  7185  3570  3D74               	addwfc	??_isalpha+1,w
  7186  3571  00F6               	movwf	??_isalpha+3
  7187  3572  3000               	movlw	0
  7188  3573  0276               	subwf	??_isalpha+3,w
  7189  3574  301A               	movlw	26
  7190  3575  1903               	skipnz
  7191  3576  0275               	subwf	??_isalpha+2,w
  7192  3577  1803               	btfsc	3,0
  7193  3578  2D7B               	goto	u7850
  7194  3579  3001               	movlw	1
  7195  357A  2D7C               	goto	u7860
  7196  357B                     u7850:	
  7197  357B  3000               	movlw	0
  7198  357C                     u7860:	
  7199  357C  00F7               	movwf	??_isalpha+4
  7200  357D  01F8               	clrf	??_isalpha+5
  7201  357E  0877               	movf	??_isalpha+4,w
  7202  357F  00F1               	movwf	?_isalpha
  7203  3580  0878               	movf	??_isalpha+5,w
  7204  3581  00F2               	movwf	?_isalpha+1
  7205  3582  0008               	return
  7206  3583                     __end_of_isalpha:	
  7207                           
  7208                           	psect	text13
  7209  232C                     __ptext13:	
  7210 ;; *************** function _utoa *****************
  7211 ;; Defined at:
  7212 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7215 ;;		 -> vsnprintf@f(6), 
  7216 ;;  d               8   18[BANK0 ] unsigned long long 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  n               8   31[BANK0 ] unsigned long long 
  7219 ;;  i               2   39[BANK0 ] int 
  7220 ;;  w               2   29[BANK0 ] int 
  7221 ;;  p               2   27[BANK0 ] int 
  7222 ;; Return value:  Size  Location     Type
  7223 ;;                  2   16[BANK0 ] int 
  7224 ;; Registers used:
  7225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7226 ;; Tracked objects:
  7227 ;;		On entry : 0/0
  7228 ;;		On exit  : 0/0
  7229 ;;		Unchanged: 0/0
  7230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7231 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7232 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7233 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7234 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7235 ;;Total ram usage:       25 bytes
  7236 ;; Hardware stack levels used:    1
  7237 ;; Hardware stack levels required when called:    5
  7238 ;; This function calls:
  7239 ;;		___lodiv
  7240 ;;		___lomod
  7241 ;;		_pad
  7242 ;; This function is called by:
  7243 ;;		_vfpfcnvrt
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           
  7248                           ;psect for function _utoa
  7249  232C                     _utoa:	
  7250                           
  7251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7252                           
  7253                           ;incstack = 0
  7254                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7255  232C  0022               	movlb	2	; select bank2
  7256  232D  1BE8               	btfsc	(_prec+1)^(0+256),7
  7257  232E  2B33               	goto	l719
  7258                           
  7259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7260  232F  30FD               	movlw	253
  7261  2330  05E9               	andwf	_flags^(0+256),f
  7262  2331  30FF               	movlw	255
  7263  2332  05EA               	andwf	(_flags+1)^(0+256),f
  7264  2333                     l719:	
  7265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7266                           
  7267                           
  7268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7269  2333  0868               	movf	(_prec+1)^(0+256),w
  7270  2334  3A80               	xorlw	128
  7271  2335  0020               	movlb	0	; select bank0
  7272  2336  00BA               	movwf	??_utoa
  7273  2337  3080               	movlw	128
  7274  2338  023A               	subwf	??_utoa,w
  7275  2339  1D03               	skipz
  7276  233A  2B3E               	goto	u8655
  7277  233B  3001               	movlw	1
  7278  233C  0022               	movlb	2	; select bank2
  7279  233D  0267               	subwf	_prec^(0+256),w
  7280  233E                     u8655:	
  7281  233E  1803               	skipnc
  7282  233F  2B46               	goto	l6640
  7283  2340  3001               	movlw	1
  7284  2341  0020               	movlb	0	; select bank0
  7285  2342  00BB               	movwf	utoa@p
  7286  2343  3000               	movlw	0
  7287  2344  00BC               	movwf	utoa@p+1
  7288  2345  2B4E               	goto	l723
  7289  2346                     l6640:	
  7290  2346  0022               	movlb	2	; select bank2
  7291  2347  0868               	movf	(_prec+1)^(0+256),w
  7292  2348  0020               	movlb	0	; select bank0
  7293  2349  00BC               	movwf	utoa@p+1
  7294  234A  0022               	movlb	2	; select bank2
  7295  234B  0867               	movf	_prec^(0+256),w
  7296  234C  0020               	movlb	0	; select bank0
  7297  234D  00BB               	movwf	utoa@p
  7298  234E                     l723:	
  7299                           
  7300                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7301  234E  0022               	movlb	2	; select bank2
  7302  234F  0866               	movf	(_width+1)^(0+256),w
  7303  2350  0020               	movlb	0	; select bank0
  7304  2351  00BE               	movwf	utoa@w+1
  7305  2352  0022               	movlb	2	; select bank2
  7306  2353  0865               	movf	_width^(0+256),w
  7307  2354  0020               	movlb	0	; select bank0
  7308  2355  00BD               	movwf	utoa@w
  7309                           
  7310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7311  2356  0832               	movf	utoa@d,w
  7312  2357  00BF               	movwf	utoa@n
  7313  2358  0833               	movf	utoa@d+1,w
  7314  2359  00C0               	movwf	utoa@n+1
  7315  235A  0834               	movf	utoa@d+2,w
  7316  235B  00C1               	movwf	utoa@n+2
  7317  235C  0835               	movf	utoa@d+3,w
  7318  235D  00C2               	movwf	utoa@n+3
  7319  235E  0836               	movf	utoa@d+4,w
  7320  235F  00C3               	movwf	utoa@n+4
  7321  2360  0837               	movf	utoa@d+5,w
  7322  2361  00C4               	movwf	utoa@n+5
  7323  2362  0838               	movf	utoa@d+6,w
  7324  2363  00C5               	movwf	utoa@n+6
  7325  2364  0839               	movf	utoa@d+7,w
  7326  2365  00C6               	movwf	utoa@n+7
  7327                           
  7328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7329  2366  301F               	movlw	31
  7330  2367  00C7               	movwf	utoa@i
  7331  2368  3000               	movlw	0
  7332  2369  00C8               	movwf	utoa@i+1
  7333                           
  7334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7335  236A  0024               	movlb	4	; select bank4
  7336  236B  01BF               	clrf	(_dbuf^(0+512)+31)
  7337                           
  7338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7339  236C  2BF2               	goto	l6656
  7340  236D                     l6658:	
  7341  236D  083F               	movf	utoa@n,w
  7342  236E  0440               	iorwf	utoa@n+1,w
  7343  236F  0441               	iorwf	utoa@n+2,w
  7344  2370  0442               	iorwf	utoa@n+3,w
  7345  2371  0443               	iorwf	utoa@n+4,w
  7346  2372  0444               	iorwf	utoa@n+5,w
  7347  2373  0445               	iorwf	utoa@n+6,w
  7348  2374  0446               	iorwf	utoa@n+7,w
  7349  2375  1D03               	skipz
  7350  2376  2B91               	goto	l6646
  7351  2377  083C               	movf	utoa@p+1,w
  7352  2378  3A80               	xorlw	128
  7353  2379  00BA               	movwf	??_utoa
  7354  237A  3080               	movlw	128
  7355  237B  023A               	subwf	??_utoa,w
  7356  237C  1D03               	skipz
  7357  237D  2B80               	goto	u8685
  7358  237E  3001               	movlw	1
  7359  237F  023B               	subwf	utoa@p,w
  7360  2380                     u8685:	
  7361  2380  1803               	skipnc
  7362  2381  2B91               	goto	l6646
  7363  2382  0020               	movlb	0	; select bank0
  7364  2383  083E               	movf	utoa@w+1,w
  7365  2384  3A80               	xorlw	128
  7366  2385  00BA               	movwf	??_utoa
  7367  2386  3080               	movlw	128
  7368  2387  023A               	subwf	??_utoa,w
  7369  2388  1D03               	skipz
  7370  2389  2B8C               	goto	u8695
  7371  238A  3001               	movlw	1
  7372  238B  023D               	subwf	utoa@w,w
  7373  238C                     u8695:	
  7374  238C  1C03               	skipc
  7375  238D  2BF7               	goto	l6666
  7376  238E  0022               	movlb	2	; select bank2
  7377  238F  1CE9               	btfss	_flags^(0+256),1
  7378  2390  2BF7               	goto	l6666
  7379  2391                     l6646:	
  7380                           
  7381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7382  2391  30FF               	movlw	255
  7383  2392  0020               	movlb	0	; select bank0
  7384  2393  07C7               	addwf	utoa@i,f
  7385  2394  30FF               	movlw	255
  7386  2395  3DC8               	addwfc	utoa@i+1,f
  7387                           
  7388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7389  2396  300A               	movlw	10
  7390  2397  00A0               	movwf	___lomod@divisor
  7391  2398  01A1               	clrf	___lomod@divisor+1
  7392  2399  01A2               	clrf	___lomod@divisor+2
  7393  239A  01A3               	clrf	___lomod@divisor+3
  7394  239B  01A4               	clrf	___lomod@divisor+4
  7395  239C  01A5               	clrf	___lomod@divisor+5
  7396  239D  01A6               	clrf	___lomod@divisor+6
  7397  239E  01A7               	clrf	___lomod@divisor+7
  7398  239F  083F               	movf	utoa@n,w
  7399  23A0  00A8               	movwf	___lomod@dividend
  7400  23A1  0840               	movf	utoa@n+1,w
  7401  23A2  00A9               	movwf	___lomod@dividend+1
  7402  23A3  0841               	movf	utoa@n+2,w
  7403  23A4  00AA               	movwf	___lomod@dividend+2
  7404  23A5  0842               	movf	utoa@n+3,w
  7405  23A6  00AB               	movwf	___lomod@dividend+3
  7406  23A7  0843               	movf	utoa@n+4,w
  7407  23A8  00AC               	movwf	___lomod@dividend+4
  7408  23A9  0844               	movf	utoa@n+5,w
  7409  23AA  00AD               	movwf	___lomod@dividend+5
  7410  23AB  0845               	movf	utoa@n+6,w
  7411  23AC  00AE               	movwf	___lomod@dividend+6
  7412  23AD  0846               	movf	utoa@n+7,w
  7413  23AE  00AF               	movwf	___lomod@dividend+7
  7414  23AF  31A9  21A1  31A3   	fcall	___lomod
  7415  23B2  0020               	movlb	0	; select bank0
  7416  23B3  0820               	movf	?___lomod,w
  7417  23B4  3E30               	addlw	48
  7418  23B5  00BA               	movwf	??_utoa
  7419  23B6  0847               	movf	utoa@i,w
  7420  23B7  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7421  23B8  0086               	movwf	6
  7422  23B9  3002               	movlw	2	; select bank4/5
  7423  23BA  0087               	movwf	7
  7424  23BB  083A               	movf	??_utoa,w
  7425  23BC  0081               	movwf	1
  7426                           
  7427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7428  23BD  30FF               	movlw	255
  7429  23BE  07BB               	addwf	utoa@p,f
  7430  23BF  30FF               	movlw	255
  7431  23C0  3DBC               	addwfc	utoa@p+1,f
  7432                           
  7433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7434  23C1  30FF               	movlw	255
  7435  23C2  07BD               	addwf	utoa@w,f
  7436  23C3  30FF               	movlw	255
  7437  23C4  3DBE               	addwfc	utoa@w+1,f
  7438                           
  7439                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7440  23C5  300A               	movlw	10
  7441  23C6  00A0               	movwf	___lodiv@divisor
  7442  23C7  01A1               	clrf	___lodiv@divisor+1
  7443  23C8  01A2               	clrf	___lodiv@divisor+2
  7444  23C9  01A3               	clrf	___lodiv@divisor+3
  7445  23CA  01A4               	clrf	___lodiv@divisor+4
  7446  23CB  01A5               	clrf	___lodiv@divisor+5
  7447  23CC  01A6               	clrf	___lodiv@divisor+6
  7448  23CD  01A7               	clrf	___lodiv@divisor+7
  7449  23CE  083F               	movf	utoa@n,w
  7450  23CF  00A8               	movwf	___lodiv@dividend
  7451  23D0  0840               	movf	utoa@n+1,w
  7452  23D1  00A9               	movwf	___lodiv@dividend+1
  7453  23D2  0841               	movf	utoa@n+2,w
  7454  23D3  00AA               	movwf	___lodiv@dividend+2
  7455  23D4  0842               	movf	utoa@n+3,w
  7456  23D5  00AB               	movwf	___lodiv@dividend+3
  7457  23D6  0843               	movf	utoa@n+4,w
  7458  23D7  00AC               	movwf	___lodiv@dividend+4
  7459  23D8  0844               	movf	utoa@n+5,w
  7460  23D9  00AD               	movwf	___lodiv@dividend+5
  7461  23DA  0845               	movf	utoa@n+6,w
  7462  23DB  00AE               	movwf	___lodiv@dividend+6
  7463  23DC  0846               	movf	utoa@n+7,w
  7464  23DD  00AF               	movwf	___lodiv@dividend+7
  7465  23DE  31AA  22FE  31A3   	fcall	___lodiv
  7466  23E1  0020               	movlb	0	; select bank0
  7467  23E2  0820               	movf	?___lodiv,w
  7468  23E3  00BF               	movwf	utoa@n
  7469  23E4  0821               	movf	?___lodiv+1,w
  7470  23E5  00C0               	movwf	utoa@n+1
  7471  23E6  0822               	movf	?___lodiv+2,w
  7472  23E7  00C1               	movwf	utoa@n+2
  7473  23E8  0823               	movf	?___lodiv+3,w
  7474  23E9  00C2               	movwf	utoa@n+3
  7475  23EA  0824               	movf	?___lodiv+4,w
  7476  23EB  00C3               	movwf	utoa@n+4
  7477  23EC  0825               	movf	?___lodiv+5,w
  7478  23ED  00C4               	movwf	utoa@n+5
  7479  23EE  0826               	movf	?___lodiv+6,w
  7480  23EF  00C5               	movwf	utoa@n+6
  7481  23F0  0827               	movf	?___lodiv+7,w
  7482  23F1  00C6               	movwf	utoa@n+7
  7483  23F2                     l6656:	
  7484                           
  7485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7486  23F2  0020               	movlb	0	; select bank0
  7487  23F3  0847               	movf	utoa@i,w
  7488  23F4  0448               	iorwf	utoa@i+1,w
  7489  23F5  1D03               	btfss	3,2
  7490  23F6  2B6D               	goto	l6658
  7491  23F7                     l6666:	
  7492                           
  7493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7494  23F7  0020               	movlb	0	; select bank0
  7495  23F8  0831               	movf	utoa@fp+1,w
  7496  23F9  00A7               	movwf	pad@fp+1
  7497  23FA  0830               	movf	utoa@fp,w
  7498  23FB  00A6               	movwf	pad@fp
  7499  23FC  0847               	movf	utoa@i,w
  7500  23FD  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7501  23FE  00BA               	movwf	??_utoa
  7502  23FF  083A               	movf	??_utoa,w
  7503  2400  00A8               	movwf	pad@buf
  7504  2401  083E               	movf	utoa@w+1,w
  7505  2402  00AA               	movwf	pad@p+1
  7506  2403  083D               	movf	utoa@w,w
  7507  2404  00A9               	movwf	pad@p
  7508  2405  31B7  27AF         	fcall	_pad
  7509  2407  0020               	movlb	0	; select bank0
  7510  2408  0827               	movf	?_pad+1,w
  7511  2409  00B1               	movwf	?_utoa+1
  7512  240A  0826               	movf	?_pad,w
  7513  240B  00B0               	movwf	?_utoa
  7514  240C  0008               	return
  7515  240D                     __end_of_utoa:	
  7516                           
  7517                           	psect	text14
  7518  29A1                     __ptext14:	
  7519 ;; *************** function ___lomod *****************
  7520 ;; Defined at:
  7521 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7524 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7525 ;; Auto vars:     Size  Location     Type
  7526 ;;  counter         1    2[COMMON] unsigned char 
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  8    0[BANK0 ] unsigned long long 
  7529 ;; Registers used:
  7530 ;;		wreg, status,2, status,0
  7531 ;; Tracked objects:
  7532 ;;		On entry : 0/0
  7533 ;;		On exit  : 0/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7536 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7537 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7539 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7540 ;;Total ram usage:       18 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:    1
  7543 ;; This function calls:
  7544 ;;		Nothing
  7545 ;; This function is called by:
  7546 ;;		_utoa
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           
  7551                           ;psect for function ___lomod
  7552  29A1                     ___lomod:	
  7553                           
  7554                           ;incstack = 0
  7555                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7556  29A1  0020               	movlb	0	; select bank0
  7557  29A2  0820               	movf	___lomod@divisor,w
  7558  29A3  0421               	iorwf	___lomod@divisor+1,w
  7559  29A4  0422               	iorwf	___lomod@divisor+2,w
  7560  29A5  0423               	iorwf	___lomod@divisor+3,w
  7561  29A6  0424               	iorwf	___lomod@divisor+4,w
  7562  29A7  0425               	iorwf	___lomod@divisor+5,w
  7563  29A8  0426               	iorwf	___lomod@divisor+6,w
  7564  29A9  0427               	iorwf	___lomod@divisor+7,w
  7565  29AA  1903               	skipnz
  7566  29AB  29F9               	goto	l1090
  7567  29AC  01F2               	clrf	___lomod@counter
  7568  29AD  0AF2               	incf	___lomod@counter,f
  7569  29AE                     l6448:	
  7570  29AE  1BA7               	btfsc	___lomod@divisor+7,7
  7571  29AF  29BD               	goto	l6450
  7572  29B0  35A0               	lslf	___lomod@divisor,f
  7573  29B1  0DA1               	rlf	___lomod@divisor+1,f
  7574  29B2  0DA2               	rlf	___lomod@divisor+2,f
  7575  29B3  0DA3               	rlf	___lomod@divisor+3,f
  7576  29B4  0DA4               	rlf	___lomod@divisor+4,f
  7577  29B5  0DA5               	rlf	___lomod@divisor+5,f
  7578  29B6  0DA6               	rlf	___lomod@divisor+6,f
  7579  29B7  0DA7               	rlf	___lomod@divisor+7,f
  7580  29B8  3001               	movlw	1
  7581  29B9  00F1               	movwf	??___lomod
  7582  29BA  0871               	movf	??___lomod,w
  7583  29BB  07F2               	addwf	___lomod@counter,f
  7584  29BC  29AE               	goto	l6448
  7585  29BD                     l6450:	
  7586  29BD  0827               	movf	___lomod@divisor+7,w
  7587  29BE  022F               	subwf	___lomod@dividend+7,w
  7588  29BF  1D03               	skipz
  7589  29C0  29DB               	goto	u8245
  7590  29C1  0826               	movf	___lomod@divisor+6,w
  7591  29C2  022E               	subwf	___lomod@dividend+6,w
  7592  29C3  1D03               	skipz
  7593  29C4  29DB               	goto	u8245
  7594  29C5  0825               	movf	___lomod@divisor+5,w
  7595  29C6  022D               	subwf	___lomod@dividend+5,w
  7596  29C7  1D03               	skipz
  7597  29C8  29DB               	goto	u8245
  7598  29C9  0824               	movf	___lomod@divisor+4,w
  7599  29CA  022C               	subwf	___lomod@dividend+4,w
  7600  29CB  1D03               	skipz
  7601  29CC  29DB               	goto	u8245
  7602  29CD  0823               	movf	___lomod@divisor+3,w
  7603  29CE  022B               	subwf	___lomod@dividend+3,w
  7604  29CF  1D03               	skipz
  7605  29D0  29DB               	goto	u8245
  7606  29D1  0822               	movf	___lomod@divisor+2,w
  7607  29D2  022A               	subwf	___lomod@dividend+2,w
  7608  29D3  1D03               	skipz
  7609  29D4  29DB               	goto	u8245
  7610  29D5  0821               	movf	___lomod@divisor+1,w
  7611  29D6  0229               	subwf	___lomod@dividend+1,w
  7612  29D7  1D03               	skipz
  7613  29D8  29DB               	goto	u8245
  7614  29D9  0820               	movf	___lomod@divisor,w
  7615  29DA  0228               	subwf	___lomod@dividend,w
  7616  29DB                     u8245:	
  7617  29DB  1C03               	skipc
  7618  29DC  29ED               	goto	l6454
  7619  29DD  0820               	movf	___lomod@divisor,w
  7620  29DE  02A8               	subwf	___lomod@dividend,f
  7621  29DF  0821               	movf	___lomod@divisor+1,w
  7622  29E0  3BA9               	subwfb	___lomod@dividend+1,f
  7623  29E1  0822               	movf	___lomod@divisor+2,w
  7624  29E2  3BAA               	subwfb	___lomod@dividend+2,f
  7625  29E3  0823               	movf	___lomod@divisor+3,w
  7626  29E4  3BAB               	subwfb	___lomod@dividend+3,f
  7627  29E5  0824               	movf	___lomod@divisor+4,w
  7628  29E6  3BAC               	subwfb	___lomod@dividend+4,f
  7629  29E7  0825               	movf	___lomod@divisor+5,w
  7630  29E8  3BAD               	subwfb	___lomod@dividend+5,f
  7631  29E9  0826               	movf	___lomod@divisor+6,w
  7632  29EA  3BAE               	subwfb	___lomod@dividend+6,f
  7633  29EB  0827               	movf	___lomod@divisor+7,w
  7634  29EC  3BAF               	subwfb	___lomod@dividend+7,f
  7635  29ED                     l6454:	
  7636  29ED  36A7               	lsrf	___lomod@divisor+7,f
  7637  29EE  0CA6               	rrf	___lomod@divisor+6,f
  7638  29EF  0CA5               	rrf	___lomod@divisor+5,f
  7639  29F0  0CA4               	rrf	___lomod@divisor+4,f
  7640  29F1  0CA3               	rrf	___lomod@divisor+3,f
  7641  29F2  0CA2               	rrf	___lomod@divisor+2,f
  7642  29F3  0CA1               	rrf	___lomod@divisor+1,f
  7643  29F4  0CA0               	rrf	___lomod@divisor,f
  7644  29F5  3001               	movlw	1
  7645  29F6  02F2               	subwf	___lomod@counter,f
  7646  29F7  1D03               	btfss	3,2
  7647  29F8  29BD               	goto	l6450
  7648  29F9                     l1090:	
  7649  29F9  0828               	movf	___lomod@dividend,w
  7650  29FA  00A0               	movwf	?___lomod
  7651  29FB  0829               	movf	___lomod@dividend+1,w
  7652  29FC  00A1               	movwf	?___lomod+1
  7653  29FD  082A               	movf	___lomod@dividend+2,w
  7654  29FE  00A2               	movwf	?___lomod+2
  7655  29FF  082B               	movf	___lomod@dividend+3,w
  7656  2A00  00A3               	movwf	?___lomod+3
  7657  2A01  082C               	movf	___lomod@dividend+4,w
  7658  2A02  00A4               	movwf	?___lomod+4
  7659  2A03  082D               	movf	___lomod@dividend+5,w
  7660  2A04  00A5               	movwf	?___lomod+5
  7661  2A05  082E               	movf	___lomod@dividend+6,w
  7662  2A06  00A6               	movwf	?___lomod+6
  7663  2A07  082F               	movf	___lomod@dividend+7,w
  7664  2A08  00A7               	movwf	?___lomod+7
  7665  2A09  0008               	return
  7666  2A0A                     __end_of___lomod:	
  7667                           
  7668                           	psect	text15
  7669  2AFE                     __ptext15:	
  7670 ;; *************** function ___lodiv *****************
  7671 ;; Defined at:
  7672 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7675 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7676 ;; Auto vars:     Size  Location     Type
  7677 ;;  quotient        8    2[COMMON] unsigned long long 
  7678 ;;  counter         1   10[COMMON] unsigned char 
  7679 ;; Return value:  Size  Location     Type
  7680 ;;                  8    0[BANK0 ] unsigned long long 
  7681 ;; Registers used:
  7682 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7683 ;; Tracked objects:
  7684 ;;		On entry : 0/0
  7685 ;;		On exit  : 0/0
  7686 ;;		Unchanged: 0/0
  7687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7688 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7689 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7691 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7692 ;;Total ram usage:       26 bytes
  7693 ;; Hardware stack levels used:    1
  7694 ;; Hardware stack levels required when called:    1
  7695 ;; This function calls:
  7696 ;;		Nothing
  7697 ;; This function is called by:
  7698 ;;		_utoa
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           
  7703                           ;psect for function ___lodiv
  7704  2AFE                     ___lodiv:	
  7705                           
  7706                           ;incstack = 0
  7707                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7708  2AFE  3072               	movlw	low ___lodiv@quotient
  7709  2AFF  0086               	movwf	6
  7710  2B00  3000               	movlw	high ___lodiv@quotient
  7711  2B01  0087               	movwf	7
  7712  2B02  3008               	movlw	8
  7713  2B03  00F1               	movwf	??___lodiv
  7714  2B04  3000               	movlw	0
  7715  2B05                     u8170:	
  7716  2B05  001E               	movwi fsr1++
  7717  2B06  0BF1               	decfsz	??___lodiv,f
  7718  2B07  2B05               	goto	u8170
  7719  2B08  0020               	movlb	0	; select bank0
  7720  2B09  0820               	movf	___lodiv@divisor,w
  7721  2B0A  0421               	iorwf	___lodiv@divisor+1,w
  7722  2B0B  0422               	iorwf	___lodiv@divisor+2,w
  7723  2B0C  0423               	iorwf	___lodiv@divisor+3,w
  7724  2B0D  0424               	iorwf	___lodiv@divisor+4,w
  7725  2B0E  0425               	iorwf	___lodiv@divisor+5,w
  7726  2B0F  0426               	iorwf	___lodiv@divisor+6,w
  7727  2B10  0427               	iorwf	___lodiv@divisor+7,w
  7728  2B11  1903               	skipnz
  7729  2B12  2B69               	goto	l1080
  7730  2B13  01FA               	clrf	___lodiv@counter
  7731  2B14  0AFA               	incf	___lodiv@counter,f
  7732  2B15                     l6428:	
  7733  2B15  1BA7               	btfsc	___lodiv@divisor+7,7
  7734  2B16  2B24               	goto	l6430
  7735  2B17  35A0               	lslf	___lodiv@divisor,f
  7736  2B18  0DA1               	rlf	___lodiv@divisor+1,f
  7737  2B19  0DA2               	rlf	___lodiv@divisor+2,f
  7738  2B1A  0DA3               	rlf	___lodiv@divisor+3,f
  7739  2B1B  0DA4               	rlf	___lodiv@divisor+4,f
  7740  2B1C  0DA5               	rlf	___lodiv@divisor+5,f
  7741  2B1D  0DA6               	rlf	___lodiv@divisor+6,f
  7742  2B1E  0DA7               	rlf	___lodiv@divisor+7,f
  7743  2B1F  3001               	movlw	1
  7744  2B20  00F1               	movwf	??___lodiv
  7745  2B21  0871               	movf	??___lodiv,w
  7746  2B22  07FA               	addwf	___lodiv@counter,f
  7747  2B23  2B15               	goto	l6428
  7748  2B24                     l6430:	
  7749  2B24  35F2               	lslf	___lodiv@quotient,f
  7750  2B25  0DF3               	rlf	___lodiv@quotient+1,f
  7751  2B26  0DF4               	rlf	___lodiv@quotient+2,f
  7752  2B27  0DF5               	rlf	___lodiv@quotient+3,f
  7753  2B28  0DF6               	rlf	___lodiv@quotient+4,f
  7754  2B29  0DF7               	rlf	___lodiv@quotient+5,f
  7755  2B2A  0DF8               	rlf	___lodiv@quotient+6,f
  7756  2B2B  0DF9               	rlf	___lodiv@quotient+7,f
  7757  2B2C  0827               	movf	___lodiv@divisor+7,w
  7758  2B2D  022F               	subwf	___lodiv@dividend+7,w
  7759  2B2E  1D03               	skipz
  7760  2B2F  2B4A               	goto	u8205
  7761  2B30  0826               	movf	___lodiv@divisor+6,w
  7762  2B31  022E               	subwf	___lodiv@dividend+6,w
  7763  2B32  1D03               	skipz
  7764  2B33  2B4A               	goto	u8205
  7765  2B34  0825               	movf	___lodiv@divisor+5,w
  7766  2B35  022D               	subwf	___lodiv@dividend+5,w
  7767  2B36  1D03               	skipz
  7768  2B37  2B4A               	goto	u8205
  7769  2B38  0824               	movf	___lodiv@divisor+4,w
  7770  2B39  022C               	subwf	___lodiv@dividend+4,w
  7771  2B3A  1D03               	skipz
  7772  2B3B  2B4A               	goto	u8205
  7773  2B3C  0823               	movf	___lodiv@divisor+3,w
  7774  2B3D  022B               	subwf	___lodiv@dividend+3,w
  7775  2B3E  1D03               	skipz
  7776  2B3F  2B4A               	goto	u8205
  7777  2B40  0822               	movf	___lodiv@divisor+2,w
  7778  2B41  022A               	subwf	___lodiv@dividend+2,w
  7779  2B42  1D03               	skipz
  7780  2B43  2B4A               	goto	u8205
  7781  2B44  0821               	movf	___lodiv@divisor+1,w
  7782  2B45  0229               	subwf	___lodiv@dividend+1,w
  7783  2B46  1D03               	skipz
  7784  2B47  2B4A               	goto	u8205
  7785  2B48  0820               	movf	___lodiv@divisor,w
  7786  2B49  0228               	subwf	___lodiv@dividend,w
  7787  2B4A                     u8205:	
  7788  2B4A  1C03               	skipc
  7789  2B4B  2B5D               	goto	l6438
  7790  2B4C  0820               	movf	___lodiv@divisor,w
  7791  2B4D  02A8               	subwf	___lodiv@dividend,f
  7792  2B4E  0821               	movf	___lodiv@divisor+1,w
  7793  2B4F  3BA9               	subwfb	___lodiv@dividend+1,f
  7794  2B50  0822               	movf	___lodiv@divisor+2,w
  7795  2B51  3BAA               	subwfb	___lodiv@dividend+2,f
  7796  2B52  0823               	movf	___lodiv@divisor+3,w
  7797  2B53  3BAB               	subwfb	___lodiv@dividend+3,f
  7798  2B54  0824               	movf	___lodiv@divisor+4,w
  7799  2B55  3BAC               	subwfb	___lodiv@dividend+4,f
  7800  2B56  0825               	movf	___lodiv@divisor+5,w
  7801  2B57  3BAD               	subwfb	___lodiv@dividend+5,f
  7802  2B58  0826               	movf	___lodiv@divisor+6,w
  7803  2B59  3BAE               	subwfb	___lodiv@dividend+6,f
  7804  2B5A  0827               	movf	___lodiv@divisor+7,w
  7805  2B5B  3BAF               	subwfb	___lodiv@dividend+7,f
  7806  2B5C  1472               	bsf	___lodiv@quotient,0
  7807  2B5D                     l6438:	
  7808  2B5D  36A7               	lsrf	___lodiv@divisor+7,f
  7809  2B5E  0CA6               	rrf	___lodiv@divisor+6,f
  7810  2B5F  0CA5               	rrf	___lodiv@divisor+5,f
  7811  2B60  0CA4               	rrf	___lodiv@divisor+4,f
  7812  2B61  0CA3               	rrf	___lodiv@divisor+3,f
  7813  2B62  0CA2               	rrf	___lodiv@divisor+2,f
  7814  2B63  0CA1               	rrf	___lodiv@divisor+1,f
  7815  2B64  0CA0               	rrf	___lodiv@divisor,f
  7816  2B65  3001               	movlw	1
  7817  2B66  02FA               	subwf	___lodiv@counter,f
  7818  2B67  1D03               	btfss	3,2
  7819  2B68  2B24               	goto	l6430
  7820  2B69                     l1080:	
  7821  2B69  0872               	movf	___lodiv@quotient,w
  7822  2B6A  00A0               	movwf	?___lodiv
  7823  2B6B  0873               	movf	___lodiv@quotient+1,w
  7824  2B6C  00A1               	movwf	?___lodiv+1
  7825  2B6D  0874               	movf	___lodiv@quotient+2,w
  7826  2B6E  00A2               	movwf	?___lodiv+2
  7827  2B6F  0875               	movf	___lodiv@quotient+3,w
  7828  2B70  00A3               	movwf	?___lodiv+3
  7829  2B71  0876               	movf	___lodiv@quotient+4,w
  7830  2B72  00A4               	movwf	?___lodiv+4
  7831  2B73  0877               	movf	___lodiv@quotient+5,w
  7832  2B74  00A5               	movwf	?___lodiv+5
  7833  2B75  0878               	movf	___lodiv@quotient+6,w
  7834  2B76  00A6               	movwf	?___lodiv+6
  7835  2B77  0879               	movf	___lodiv@quotient+7,w
  7836  2B78  00A7               	movwf	?___lodiv+7
  7837  2B79  0008               	return
  7838  2B7A                     __end_of___lodiv:	
  7839                           
  7840                           	psect	text16
  7841  283F                     __ptext16:	
  7842 ;; *************** function _strncmp *****************
  7843 ;; Defined at:
  7844 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7845 ;; Parameters:    Size  Location     Type
  7846 ;;  _l              2    1[COMMON] PTR const unsigned char 
  7847 ;;		 -> STR_20(18), STR_19(18), STR_18(19), STR_17(20), 
  7848 ;;		 -> STR_16(20), STR_15(21), STR_14(21), STR_13(21), 
  7849 ;;		 -> STR_12(22), STR_11(22), STR_10(21), STR_9(21), 
  7850 ;;		 -> STR_6(15), STR_5(15), STR_4(21), STR_3(22), 
  7851 ;;		 -> STR_2(71), STR_1(40), 
  7852 ;;  _r              2    3[COMMON] PTR const unsigned char 
  7853 ;;		 -> STR_118(3), STR_114(3), STR_109(3), STR_105(3), 
  7854 ;;		 -> STR_100(4), STR_96(4), STR_91(3), STR_86(3), 
  7855 ;;		 -> STR_81(4), STR_76(3), STR_71(3), STR_66(4), 
  7856 ;;		 -> STR_61(3), STR_56(3), STR_51(4), STR_46(3), 
  7857 ;;		 -> STR_42(3), STR_37(3), STR_33(3), STR_28(4), 
  7858 ;;		 -> STR_24(4), 
  7859 ;;  n               2    5[COMMON] unsigned int 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;  r               2   10[COMMON] PTR const unsigned char 
  7862 ;;		 -> STR_118(3), STR_114(3), STR_109(3), STR_105(3), 
  7863 ;;		 -> STR_100(4), STR_96(4), STR_91(3), STR_86(3), 
  7864 ;;		 -> STR_81(4), STR_76(3), STR_71(3), STR_66(4), 
  7865 ;;		 -> STR_61(3), STR_56(3), STR_51(4), STR_46(3), 
  7866 ;;		 -> STR_42(3), STR_37(3), STR_33(3), STR_28(4), 
  7867 ;;		 -> STR_24(4), 
  7868 ;;  l               2    8[COMMON] PTR const unsigned char 
  7869 ;;		 -> STR_20(18), STR_19(18), STR_18(19), STR_17(20), 
  7870 ;;		 -> STR_16(20), STR_15(21), STR_14(21), STR_13(21), 
  7871 ;;		 -> STR_12(22), STR_11(22), STR_10(21), STR_9(21), 
  7872 ;;		 -> STR_6(15), STR_5(15), STR_4(21), STR_3(22), 
  7873 ;;		 -> STR_2(71), STR_1(40), 
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  2    1[COMMON] int 
  7876 ;; Registers used:
  7877 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7883 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7884 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7886 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7887 ;;Total ram usage:       11 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    1
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_vfpfcnvrt
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           
  7898                           ;psect for function _strncmp
  7899  283F                     _strncmp:	
  7900                           
  7901                           ;incstack = 0
  7902                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7903  283F  0872               	movf	strncmp@_l+1,w
  7904  2840  00F9               	movwf	strncmp@l+1
  7905  2841  0871               	movf	strncmp@_l,w
  7906  2842  00F8               	movwf	strncmp@l
  7907  2843  0874               	movf	strncmp@_r+1,w
  7908  2844  00FB               	movwf	strncmp@r+1
  7909  2845  0873               	movf	strncmp@_r,w
  7910  2846  00FA               	movwf	strncmp@r
  7911  2847  3001               	movlw	1
  7912  2848  02F5               	subwf	strncmp@n,f
  7913  2849  3000               	movlw	0
  7914  284A  3BF6               	subwfb	strncmp@n+1,f
  7915  284B  0A75               	incf	strncmp@n,w
  7916  284C  1D03               	skipz
  7917  284D  2879               	goto	l6790
  7918  284E  0A76               	incf	strncmp@n+1,w
  7919  284F  1D03               	btfss	3,2
  7920  2850  2879               	goto	l6790
  7921  2851  01F1               	clrf	?_strncmp
  7922  2852  01F2               	clrf	?_strncmp+1
  7923  2853  0008               	return
  7924  2854                     l6792:	
  7925  2854  087A               	movf	strncmp@r,w
  7926  2855  0084               	movwf	4
  7927  2856  087B               	movf	strncmp@r+1,w
  7928  2857  0085               	movwf	5
  7929  2858  0012               	moviw fsr0++
  7930  2859  1903               	btfsc	3,2
  7931  285A  2880               	goto	l6798
  7932  285B  0875               	movf	strncmp@n,w
  7933  285C  0476               	iorwf	strncmp@n+1,w
  7934  285D  1903               	btfsc	3,2
  7935  285E  2880               	goto	l6798
  7936  285F  087A               	movf	strncmp@r,w
  7937  2860  0084               	movwf	4
  7938  2861  087B               	movf	strncmp@r+1,w
  7939  2862  0085               	movwf	5
  7940  2863  0800               	movf	0,w	;code access
  7941  2864  00F7               	movwf	??_strncmp
  7942  2865  0878               	movf	strncmp@l,w
  7943  2866  0084               	movwf	4
  7944  2867  0879               	movf	strncmp@l+1,w
  7945  2868  0085               	movwf	5
  7946  2869  0800               	movf	0,w	;code access
  7947  286A  0677               	xorwf	??_strncmp,w
  7948  286B  1D03               	btfss	3,2
  7949  286C  2880               	goto	l6798
  7950  286D  3001               	movlw	1
  7951  286E  07F8               	addwf	strncmp@l,f
  7952  286F  3000               	movlw	0
  7953  2870  3DF9               	addwfc	strncmp@l+1,f
  7954  2871  3001               	movlw	1
  7955  2872  07FA               	addwf	strncmp@r,f
  7956  2873  3000               	movlw	0
  7957  2874  3DFB               	addwfc	strncmp@r+1,f
  7958  2875  3001               	movlw	1
  7959  2876  02F5               	subwf	strncmp@n,f
  7960  2877  3000               	movlw	0
  7961  2878  3BF6               	subwfb	strncmp@n+1,f
  7962  2879                     l6790:	
  7963  2879  0878               	movf	strncmp@l,w
  7964  287A  0084               	movwf	4
  7965  287B  0879               	movf	strncmp@l+1,w
  7966  287C  0085               	movwf	5
  7967  287D  0012               	moviw fsr0++
  7968  287E  1D03               	btfss	3,2
  7969  287F  2854               	goto	l6792
  7970  2880                     l6798:	
  7971  2880  0878               	movf	strncmp@l,w
  7972  2881  0084               	movwf	4
  7973  2882  0879               	movf	strncmp@l+1,w
  7974  2883  0085               	movwf	5
  7975  2884  0800               	movf	0,w	;code access
  7976  2885  00F7               	movwf	??_strncmp
  7977  2886  087A               	movf	strncmp@r,w
  7978  2887  0084               	movwf	4
  7979  2888  087B               	movf	strncmp@r+1,w
  7980  2889  0085               	movwf	5
  7981  288A  0800               	movf	0,w	;code access
  7982  288B  0277               	subwf	??_strncmp,w
  7983  288C  00F1               	movwf	?_strncmp
  7984  288D  01F2               	clrf	?_strncmp+1
  7985  288E  1C03               	skipc
  7986  288F  03F2               	decf	?_strncmp+1,f
  7987  2890  0008               	return
  7988  2891                     __end_of_strncmp:	
  7989                           
  7990                           	psect	text17
  7991  2F3B                     __ptext17:	
  7992 ;; *************** function _stoa *****************
  7993 ;; Defined at:
  7994 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7997 ;;		 -> vsnprintf@f(6), 
  7998 ;;  s               2    2[BANK0 ] PTR unsigned char 
  7999 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  8002 ;;  l               2   19[BANK0 ] int 
  8003 ;;  p               2   17[BANK0 ] int 
  8004 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  8005 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), adcGain(2), 
  8006 ;;  w               2   13[BANK0 ] int 
  8007 ;;  i               2   11[BANK0 ] int 
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  2    0[BANK0 ] int 
  8010 ;; Registers used:
  8011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8012 ;; Tracked objects:
  8013 ;;		On entry : 0/0
  8014 ;;		On exit  : 0/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8017 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8018 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8019 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8020 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8021 ;;Total ram usage:       23 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; Hardware stack levels required when called:    3
  8024 ;; This function calls:
  8025 ;;		_fputc
  8026 ;;		_strlen
  8027 ;; This function is called by:
  8028 ;;		_vfpfcnvrt
  8029 ;; This function uses a non-reentrant model
  8030 ;;
  8031                           
  8032                           
  8033                           ;psect for function _stoa
  8034  2F3B                     _stoa:	
  8035                           
  8036                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8037                           
  8038                           ;incstack = 0
  8039                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8040  2F3B  30DA               	movlw	low stoa@F1152
  8041  2F3C  0086               	movwf	6
  8042  2F3D  3001               	movlw	high stoa@F1152
  8043  2F3E  0087               	movwf	7
  8044  2F3F  3024               	movlw	low stoa@nuls
  8045  2F40  0084               	movwf	4
  8046  2F41  3000               	movlw	high stoa@nuls
  8047  2F42  0085               	movwf	5
  8048  2F43  3007               	movlw	7
  8049  2F44  00FA               	movwf	??_stoa
  8050  2F45                     u8550:	
  8051  2F45  0016               	moviw fsr1++
  8052  2F46  001A               	movwi fsr0++
  8053  2F47  0BFA               	decfsz	??_stoa,f
  8054  2F48  2F45               	goto	u8550
  8055                           
  8056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8057  2F49  0020               	movlb	0	; select bank0
  8058  2F4A  0823               	movf	stoa@s+1,w
  8059  2F4B  00B0               	movwf	stoa@cp+1
  8060  2F4C  0822               	movf	stoa@s,w
  8061  2F4D  00AF               	movwf	stoa@cp
  8062                           
  8063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8064  2F4E  082F               	movf	stoa@cp,w
  8065  2F4F  0430               	iorwf	stoa@cp+1,w
  8066  2F50  1D03               	btfss	3,2
  8067  2F51  2F56               	goto	l6592
  8068                           
  8069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8070  2F52  3024               	movlw	low stoa@nuls
  8071  2F53  00AF               	movwf	stoa@cp
  8072  2F54  3000               	movlw	high stoa@nuls
  8073  2F55  00B0               	movwf	stoa@cp+1
  8074  2F56                     l6592:	
  8075                           
  8076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8077  2F56  0830               	movf	stoa@cp+1,w
  8078  2F57  00F2               	movwf	strlen@s+1
  8079  2F58  082F               	movf	stoa@cp,w
  8080  2F59  00F1               	movwf	strlen@s
  8081  2F5A  31B4  246A  31AF   	fcall	_strlen
  8082  2F5D  0872               	movf	?_strlen+1,w
  8083  2F5E  0020               	movlb	0	; select bank0
  8084  2F5F  00B4               	movwf	stoa@l+1
  8085  2F60  0871               	movf	?_strlen,w
  8086  2F61  00B3               	movwf	stoa@l
  8087                           
  8088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8089  2F62  0022               	movlb	2	; select bank2
  8090  2F63  0868               	movf	(_prec+1)^(0+256),w
  8091  2F64  0020               	movlb	0	; select bank0
  8092  2F65  00B2               	movwf	stoa@p+1
  8093  2F66  0022               	movlb	2	; select bank2
  8094  2F67  0867               	movf	_prec^(0+256),w
  8095  2F68  0020               	movlb	0	; select bank0
  8096  2F69  00B1               	movwf	stoa@p
  8097                           
  8098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8099  2F6A  1BB2               	btfsc	stoa@p+1,7
  8100  2F6B  2F7D               	goto	l702
  8101  2F6C  0832               	movf	stoa@p+1,w
  8102  2F6D  3A80               	xorlw	128
  8103  2F6E  00FA               	movwf	??_stoa
  8104  2F6F  0834               	movf	stoa@l+1,w
  8105  2F70  3A80               	xorlw	128
  8106  2F71  027A               	subwf	??_stoa,w
  8107  2F72  1D03               	skipz
  8108  2F73  2F76               	goto	u8585
  8109  2F74  0833               	movf	stoa@l,w
  8110  2F75  0231               	subwf	stoa@p,w
  8111  2F76                     u8585:	
  8112  2F76  1803               	btfsc	3,0
  8113  2F77  2F7D               	goto	l702
  8114  2F78  0020               	movlb	0	; select bank0
  8115  2F79  0832               	movf	stoa@p+1,w
  8116  2F7A  00B4               	movwf	stoa@l+1
  8117  2F7B  0831               	movf	stoa@p,w
  8118  2F7C  00B3               	movwf	stoa@l
  8119  2F7D                     l702:	
  8120                           
  8121                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8122  2F7D  0020               	movlb	0	; select bank0
  8123  2F7E  0834               	movf	stoa@l+1,w
  8124  2F7F  00B2               	movwf	stoa@p+1
  8125  2F80  0833               	movf	stoa@l,w
  8126  2F81  00B1               	movwf	stoa@p
  8127                           
  8128                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8129  2F82  0022               	movlb	2	; select bank2
  8130  2F83  0866               	movf	(_width+1)^(0+256),w
  8131  2F84  0020               	movlb	0	; select bank0
  8132  2F85  00AE               	movwf	stoa@w+1
  8133  2F86  0022               	movlb	2	; select bank2
  8134  2F87  0865               	movf	_width^(0+256),w
  8135  2F88  0020               	movlb	0	; select bank0
  8136  2F89  00AD               	movwf	stoa@w
  8137                           
  8138                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8139  2F8A  0022               	movlb	2	; select bank2
  8140  2F8B  1C69               	btfss	_flags^(0+256),0
  8141  2F8C  2F9F               	goto	l6610
  8142  2F8D  2FAC               	goto	l6612
  8143  2F8E                     l6606:	
  8144                           
  8145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8146  2F8E  3020               	movlw	32
  8147  2F8F  00F1               	movwf	fputc@c
  8148  2F90  3000               	movlw	0
  8149  2F91  00F2               	movwf	fputc@c+1
  8150  2F92  0020               	movlb	0	; select bank0
  8151  2F93  0821               	movf	stoa@fp+1,w
  8152  2F94  00F4               	movwf	fputc@fp+1
  8153  2F95  0820               	movf	stoa@fp,w
  8154  2F96  00F3               	movwf	fputc@fp
  8155  2F97  31A8  2091  31AF   	fcall	_fputc
  8156                           
  8157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8158  2F9A  3001               	movlw	1
  8159  2F9B  0020               	movlb	0	; select bank0
  8160  2F9C  07B3               	addwf	stoa@l,f
  8161  2F9D  3000               	movlw	0
  8162  2F9E  3DB4               	addwfc	stoa@l+1,f
  8163  2F9F                     l6610:	
  8164                           
  8165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8166  2F9F  0020               	movlb	0	; select bank0
  8167  2FA0  0834               	movf	stoa@l+1,w
  8168  2FA1  3A80               	xorlw	128
  8169  2FA2  00FA               	movwf	??_stoa
  8170  2FA3  082E               	movf	stoa@w+1,w
  8171  2FA4  3A80               	xorlw	128
  8172  2FA5  027A               	subwf	??_stoa,w
  8173  2FA6  1D03               	skipz
  8174  2FA7  2FAA               	goto	u8605
  8175  2FA8  082D               	movf	stoa@w,w
  8176  2FA9  0233               	subwf	stoa@l,w
  8177  2FAA                     u8605:	
  8178  2FAA  1C03               	skipc
  8179  2FAB  2F8E               	goto	l6606
  8180  2FAC                     l6612:	
  8181                           
  8182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8183  2FAC  0020               	movlb	0	; select bank0
  8184  2FAD  01AB               	clrf	stoa@i
  8185  2FAE  01AC               	clrf	stoa@i+1
  8186  2FAF                     l6620:	
  8187                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8188                           
  8189                           
  8190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8191  2FAF  082C               	movf	stoa@i+1,w
  8192  2FB0  3A80               	xorlw	128
  8193  2FB1  00FA               	movwf	??_stoa
  8194  2FB2  0832               	movf	stoa@p+1,w
  8195  2FB3  3A80               	xorlw	128
  8196  2FB4  027A               	subwf	??_stoa,w
  8197  2FB5  1D03               	skipz
  8198  2FB6  2FB9               	goto	u8615
  8199  2FB7  0831               	movf	stoa@p,w
  8200  2FB8  022B               	subwf	stoa@i,w
  8201  2FB9                     u8615:	
  8202  2FB9  1803               	btfsc	3,0
  8203  2FBA  2FD8               	goto	l711
  8204                           
  8205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8206  2FBB  0020               	movlb	0	; select bank0
  8207  2FBC  082F               	movf	stoa@cp,w
  8208  2FBD  0086               	movwf	6
  8209  2FBE  0830               	movf	stoa@cp+1,w
  8210  2FBF  0087               	movwf	7
  8211  2FC0  0801               	movf	1,w
  8212  2FC1  00FA               	movwf	??_stoa
  8213  2FC2  01FB               	clrf	??_stoa+1
  8214  2FC3  087A               	movf	??_stoa,w
  8215  2FC4  00F1               	movwf	fputc@c
  8216  2FC5  087B               	movf	??_stoa+1,w
  8217  2FC6  00F2               	movwf	fputc@c+1
  8218  2FC7  0821               	movf	stoa@fp+1,w
  8219  2FC8  00F4               	movwf	fputc@fp+1
  8220  2FC9  0820               	movf	stoa@fp,w
  8221  2FCA  00F3               	movwf	fputc@fp
  8222  2FCB  31A8  2091  31AF   	fcall	_fputc
  8223                           
  8224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8225  2FCE  3001               	movlw	1
  8226  2FCF  0020               	movlb	0	; select bank0
  8227  2FD0  07AF               	addwf	stoa@cp,f
  8228  2FD1  3000               	movlw	0
  8229  2FD2  3DB0               	addwfc	stoa@cp+1,f
  8230                           
  8231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8232  2FD3  3001               	movlw	1
  8233  2FD4  07AB               	addwf	stoa@i,f
  8234  2FD5  3000               	movlw	0
  8235  2FD6  3DAC               	addwfc	stoa@i+1,f
  8236  2FD7  2FAF               	goto	l6620
  8237  2FD8                     l711:	
  8238                           
  8239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8240  2FD8  0022               	movlb	2	; select bank2
  8241  2FD9  1869               	btfsc	_flags^(0+256),0
  8242  2FDA  2FED               	goto	l6628
  8243  2FDB  2FFA               	goto	l6630
  8244  2FDC                     l6624:	
  8245                           
  8246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8247  2FDC  3020               	movlw	32
  8248  2FDD  00F1               	movwf	fputc@c
  8249  2FDE  3000               	movlw	0
  8250  2FDF  00F2               	movwf	fputc@c+1
  8251  2FE0  0020               	movlb	0	; select bank0
  8252  2FE1  0821               	movf	stoa@fp+1,w
  8253  2FE2  00F4               	movwf	fputc@fp+1
  8254  2FE3  0820               	movf	stoa@fp,w
  8255  2FE4  00F3               	movwf	fputc@fp
  8256  2FE5  31A8  2091  31AF   	fcall	_fputc
  8257                           
  8258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8259  2FE8  3001               	movlw	1
  8260  2FE9  0020               	movlb	0	; select bank0
  8261  2FEA  07B3               	addwf	stoa@l,f
  8262  2FEB  3000               	movlw	0
  8263  2FEC  3DB4               	addwfc	stoa@l+1,f
  8264  2FED                     l6628:	
  8265                           
  8266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8267  2FED  0020               	movlb	0	; select bank0
  8268  2FEE  0834               	movf	stoa@l+1,w
  8269  2FEF  3A80               	xorlw	128
  8270  2FF0  00FA               	movwf	??_stoa
  8271  2FF1  082E               	movf	stoa@w+1,w
  8272  2FF2  3A80               	xorlw	128
  8273  2FF3  027A               	subwf	??_stoa,w
  8274  2FF4  1D03               	skipz
  8275  2FF5  2FF8               	goto	u8635
  8276  2FF6  082D               	movf	stoa@w,w
  8277  2FF7  0233               	subwf	stoa@l,w
  8278  2FF8                     u8635:	
  8279  2FF8  1C03               	skipc
  8280  2FF9  2FDC               	goto	l6624
  8281  2FFA                     l6630:	
  8282                           
  8283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8284  2FFA  0020               	movlb	0	; select bank0
  8285  2FFB  0834               	movf	stoa@l+1,w
  8286  2FFC  00A1               	movwf	?_stoa+1
  8287  2FFD  0833               	movf	stoa@l,w
  8288  2FFE  00A0               	movwf	?_stoa
  8289  2FFF  0008               	return
  8290  3000                     __end_of_stoa:	
  8291                           
  8292                           	psect	text18
  8293  240D                     __ptext18:	
  8294 ;; *************** function _otoa *****************
  8295 ;; Defined at:
  8296 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8299 ;;		 -> vsnprintf@f(6), 
  8300 ;;  d               8   18[BANK0 ] unsigned long long 
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;  n               8   40[BANK0 ] unsigned long long 
  8303 ;;  i               2   48[BANK0 ] int 
  8304 ;;  w               2   38[BANK0 ] int 
  8305 ;;  t               2   36[BANK0 ] int 
  8306 ;;  p               2   34[BANK0 ] int 
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  2   16[BANK0 ] int 
  8309 ;; Registers used:
  8310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8316 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8317 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8318 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8319 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8320 ;;Total ram usage:       34 bytes
  8321 ;; Hardware stack levels used:    1
  8322 ;; Hardware stack levels required when called:    5
  8323 ;; This function calls:
  8324 ;;		_pad
  8325 ;; This function is called by:
  8326 ;;		_vfpfcnvrt
  8327 ;; This function uses a non-reentrant model
  8328 ;;
  8329                           
  8330                           
  8331                           ;psect for function _otoa
  8332  240D                     _otoa:	
  8333                           
  8334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8335                           
  8336                           ;incstack = 0
  8337                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8338  240D  0022               	movlb	2	; select bank2
  8339  240E  1BE8               	btfsc	(_prec+1)^(0+256),7
  8340  240F  2C14               	goto	l680
  8341                           
  8342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8343  2410  30FD               	movlw	253
  8344  2411  05E9               	andwf	_flags^(0+256),f
  8345  2412  30FF               	movlw	255
  8346  2413  05EA               	andwf	(_flags+1)^(0+256),f
  8347  2414                     l680:	
  8348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8349                           
  8350                           
  8351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8352  2414  0868               	movf	(_prec+1)^(0+256),w
  8353  2415  3A80               	xorlw	128
  8354  2416  0020               	movlb	0	; select bank0
  8355  2417  00BA               	movwf	??_otoa
  8356  2418  3080               	movlw	128
  8357  2419  023A               	subwf	??_otoa,w
  8358  241A  1D03               	skipz
  8359  241B  2C1F               	goto	u8465
  8360  241C  3001               	movlw	1
  8361  241D  0022               	movlb	2	; select bank2
  8362  241E  0267               	subwf	_prec^(0+256),w
  8363  241F                     u8465:	
  8364  241F  1803               	skipnc
  8365  2420  2C27               	goto	l6546
  8366  2421  3001               	movlw	1
  8367  2422  0020               	movlb	0	; select bank0
  8368  2423  00C2               	movwf	otoa@p
  8369  2424  3000               	movlw	0
  8370  2425  00C3               	movwf	otoa@p+1
  8371  2426  2C2F               	goto	l684
  8372  2427                     l6546:	
  8373  2427  0022               	movlb	2	; select bank2
  8374  2428  0868               	movf	(_prec+1)^(0+256),w
  8375  2429  0020               	movlb	0	; select bank0
  8376  242A  00C3               	movwf	otoa@p+1
  8377  242B  0022               	movlb	2	; select bank2
  8378  242C  0867               	movf	_prec^(0+256),w
  8379  242D  0020               	movlb	0	; select bank0
  8380  242E  00C2               	movwf	otoa@p
  8381  242F                     l684:	
  8382                           
  8383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8384  242F  0022               	movlb	2	; select bank2
  8385  2430  0866               	movf	(_width+1)^(0+256),w
  8386  2431  0020               	movlb	0	; select bank0
  8387  2432  00C7               	movwf	otoa@w+1
  8388  2433  0022               	movlb	2	; select bank2
  8389  2434  0865               	movf	_width^(0+256),w
  8390  2435  0020               	movlb	0	; select bank0
  8391  2436  00C6               	movwf	otoa@w
  8392                           
  8393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8394  2437  0832               	movf	otoa@d,w
  8395  2438  00C8               	movwf	otoa@n
  8396  2439  0833               	movf	otoa@d+1,w
  8397  243A  00C9               	movwf	otoa@n+1
  8398  243B  0834               	movf	otoa@d+2,w
  8399  243C  00CA               	movwf	otoa@n+2
  8400  243D  0835               	movf	otoa@d+3,w
  8401  243E  00CB               	movwf	otoa@n+3
  8402  243F  0836               	movf	otoa@d+4,w
  8403  2440  00CC               	movwf	otoa@n+4
  8404  2441  0837               	movf	otoa@d+5,w
  8405  2442  00CD               	movwf	otoa@n+5
  8406  2443  0838               	movf	otoa@d+6,w
  8407  2444  00CE               	movwf	otoa@n+6
  8408  2445  0839               	movf	otoa@d+7,w
  8409  2446  00CF               	movwf	otoa@n+7
  8410                           
  8411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8412  2447  301F               	movlw	31
  8413  2448  00D0               	movwf	otoa@i
  8414  2449  3000               	movlw	0
  8415  244A  00D1               	movwf	otoa@i+1
  8416                           
  8417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8418  244B  0024               	movlb	4	; select bank4
  8419  244C  01BF               	clrf	(_dbuf^(0+512)+31)
  8420                           
  8421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8422  244D  0020               	movlb	0	; select bank0
  8423  244E  01C4               	clrf	otoa@t
  8424  244F  01C5               	clrf	otoa@t+1
  8425                           
  8426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8427  2450  2CC4               	goto	l685
  8428  2451                     l6564:	
  8429  2451  0020               	movlb	0	; select bank0
  8430  2452  0848               	movf	otoa@n,w
  8431  2453  0449               	iorwf	otoa@n+1,w
  8432  2454  044A               	iorwf	otoa@n+2,w
  8433  2455  044B               	iorwf	otoa@n+3,w
  8434  2456  044C               	iorwf	otoa@n+4,w
  8435  2457  044D               	iorwf	otoa@n+5,w
  8436  2458  044E               	iorwf	otoa@n+6,w
  8437  2459  044F               	iorwf	otoa@n+7,w
  8438  245A  1D03               	skipz
  8439  245B  2C76               	goto	l6554
  8440  245C  0843               	movf	otoa@p+1,w
  8441  245D  3A80               	xorlw	128
  8442  245E  00BA               	movwf	??_otoa
  8443  245F  3080               	movlw	128
  8444  2460  023A               	subwf	??_otoa,w
  8445  2461  1D03               	skipz
  8446  2462  2C65               	goto	u8505
  8447  2463  3001               	movlw	1
  8448  2464  0242               	subwf	otoa@p,w
  8449  2465                     u8505:	
  8450  2465  1803               	skipnc
  8451  2466  2C76               	goto	l6554
  8452  2467  0020               	movlb	0	; select bank0
  8453  2468  0847               	movf	otoa@w+1,w
  8454  2469  3A80               	xorlw	128
  8455  246A  00BA               	movwf	??_otoa
  8456  246B  3080               	movlw	128
  8457  246C  023A               	subwf	??_otoa,w
  8458  246D  1D03               	skipz
  8459  246E  2C71               	goto	u8515
  8460  246F  3001               	movlw	1
  8461  2470  0246               	subwf	otoa@w,w
  8462  2471                     u8515:	
  8463  2471  1C03               	skipc
  8464  2472  2CCF               	goto	l691
  8465  2473  0022               	movlb	2	; select bank2
  8466  2474  1CE9               	btfss	_flags^(0+256),1
  8467  2475  2CCF               	goto	l691
  8468  2476                     l6554:	
  8469                           
  8470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8471  2476  30FF               	movlw	255
  8472  2477  0020               	movlb	0	; select bank0
  8473  2478  07D0               	addwf	otoa@i,f
  8474  2479  30FF               	movlw	255
  8475  247A  3DD1               	addwfc	otoa@i+1,f
  8476                           
  8477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8478  247B  3007               	movlw	7
  8479  247C  0548               	andwf	otoa@n,w
  8480  247D  00C4               	movwf	otoa@t
  8481  247E  3000               	movlw	0
  8482  247F  0549               	andwf	otoa@n+1,w
  8483  2480  00C5               	movwf	otoa@t+1
  8484                           
  8485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8486  2481  0844               	movf	otoa@t,w
  8487  2482  3E30               	addlw	48
  8488  2483  00BA               	movwf	??_otoa
  8489  2484  0850               	movf	otoa@i,w
  8490  2485  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8491  2486  0086               	movwf	6
  8492  2487  3002               	movlw	2	; select bank4/5
  8493  2488  0087               	movwf	7
  8494  2489  083A               	movf	??_otoa,w
  8495  248A  0081               	movwf	1
  8496                           
  8497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8498  248B  30FF               	movlw	255
  8499  248C  07C2               	addwf	otoa@p,f
  8500  248D  30FF               	movlw	255
  8501  248E  3DC3               	addwfc	otoa@p+1,f
  8502                           
  8503                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8504  248F  30FF               	movlw	255
  8505  2490  07C6               	addwf	otoa@w,f
  8506  2491  30FF               	movlw	255
  8507  2492  3DC7               	addwfc	otoa@w+1,f
  8508                           
  8509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8510  2493  3048               	movlw	low otoa@n
  8511  2494  0086               	movwf	6
  8512  2495  3000               	movlw	high otoa@n
  8513  2496  0087               	movwf	7
  8514  2497  3F40               	moviw [0]fsr1
  8515  2498  00BA               	movwf	??_otoa
  8516  2499  3F41               	moviw [1]fsr1
  8517  249A  00BB               	movwf	??_otoa+1
  8518  249B  3F42               	moviw [2]fsr1
  8519  249C  00BC               	movwf	??_otoa+2
  8520  249D  3F43               	moviw [3]fsr1
  8521  249E  00BD               	movwf	??_otoa+3
  8522  249F  3F44               	moviw [4]fsr1
  8523  24A0  00BE               	movwf	??_otoa+4
  8524  24A1  3F45               	moviw [5]fsr1
  8525  24A2  00BF               	movwf	??_otoa+5
  8526  24A3  3F46               	moviw [6]fsr1
  8527  24A4  00C0               	movwf	??_otoa+6
  8528  24A5  3F47               	moviw [7]fsr1
  8529  24A6  00C1               	movwf	??_otoa+7
  8530  24A7  3003               	movlw	3
  8531  24A8                     u8475:	
  8532  24A8  0020               	movlb	0	; select bank0
  8533  24A9  36C1               	lsrf	??_otoa+7,f
  8534  24AA  0CC0               	rrf	??_otoa+6,f
  8535  24AB  0CBF               	rrf	??_otoa+5,f
  8536  24AC  0CBE               	rrf	??_otoa+4,f
  8537  24AD  0CBD               	rrf	??_otoa+3,f
  8538  24AE  0CBC               	rrf	??_otoa+2,f
  8539  24AF  0CBB               	rrf	??_otoa+1,f
  8540  24B0  0CBA               	rrf	??_otoa,f
  8541  24B1  0B89               	decfsz	9,f
  8542  24B2  2CA8               	goto	u8475
  8543  24B3  0020               	movlb	0	; select bank0
  8544  24B4  0841               	movf	??_otoa+7,w
  8545  24B5  00CF               	movwf	otoa@n+7
  8546  24B6  0840               	movf	??_otoa+6,w
  8547  24B7  00CE               	movwf	otoa@n+6
  8548  24B8  083F               	movf	??_otoa+5,w
  8549  24B9  00CD               	movwf	otoa@n+5
  8550  24BA  083E               	movf	??_otoa+4,w
  8551  24BB  00CC               	movwf	otoa@n+4
  8552  24BC  083D               	movf	??_otoa+3,w
  8553  24BD  00CB               	movwf	otoa@n+3
  8554  24BE  083C               	movf	??_otoa+2,w
  8555  24BF  00CA               	movwf	otoa@n+2
  8556  24C0  083B               	movf	??_otoa+1,w
  8557  24C1  00C9               	movwf	otoa@n+1
  8558  24C2  083A               	movf	??_otoa,w
  8559  24C3  00C8               	movwf	otoa@n
  8560  24C4                     l685:	
  8561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8562                           
  8563                           
  8564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8565  24C4  0851               	movf	otoa@i+1,w
  8566  24C5  3A80               	xorlw	128
  8567  24C6  00BA               	movwf	??_otoa
  8568  24C7  3080               	movlw	128
  8569  24C8  023A               	subwf	??_otoa,w
  8570  24C9  1D03               	skipz
  8571  24CA  2CCD               	goto	u8485
  8572  24CB  3001               	movlw	1
  8573  24CC  0250               	subwf	otoa@i,w
  8574  24CD                     u8485:	
  8575  24CD  1803               	btfsc	3,0
  8576  24CE  2C51               	goto	l6564
  8577  24CF                     l691:	
  8578                           
  8579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8580  24CF  0022               	movlb	2	; select bank2
  8581  24D0  1E69               	btfss	_flags^(0+256),4
  8582  24D1  2CE8               	goto	l6580
  8583  24D2  0020               	movlb	0	; select bank0
  8584  24D3  0844               	movf	otoa@t,w
  8585  24D4  0445               	iorwf	otoa@t+1,w
  8586  24D5  1903               	btfsc	3,2
  8587  24D6  2CE8               	goto	l6580
  8588                           
  8589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8590  24D7  30FF               	movlw	255
  8591  24D8  07D0               	addwf	otoa@i,f
  8592  24D9  30FF               	movlw	255
  8593  24DA  3DD1               	addwfc	otoa@i+1,f
  8594                           
  8595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8596  24DB  3030               	movlw	48
  8597  24DC  00BA               	movwf	??_otoa
  8598  24DD  0850               	movf	otoa@i,w
  8599  24DE  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8600  24DF  0086               	movwf	6
  8601  24E0  3002               	movlw	2	; select bank4/5
  8602  24E1  0087               	movwf	7
  8603  24E2  083A               	movf	??_otoa,w
  8604  24E3  0081               	movwf	1
  8605                           
  8606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8607  24E4  30FF               	movlw	255
  8608  24E5  07C6               	addwf	otoa@w,f
  8609  24E6  30FF               	movlw	255
  8610  24E7  3DC7               	addwfc	otoa@w+1,f
  8611  24E8                     l6580:	
  8612                           
  8613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8614  24E8  0020               	movlb	0	; select bank0
  8615  24E9  0831               	movf	otoa@fp+1,w
  8616  24EA  00A7               	movwf	pad@fp+1
  8617  24EB  0830               	movf	otoa@fp,w
  8618  24EC  00A6               	movwf	pad@fp
  8619  24ED  0850               	movf	otoa@i,w
  8620  24EE  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8621  24EF  00BA               	movwf	??_otoa
  8622  24F0  083A               	movf	??_otoa,w
  8623  24F1  00A8               	movwf	pad@buf
  8624  24F2  0847               	movf	otoa@w+1,w
  8625  24F3  00AA               	movwf	pad@p+1
  8626  24F4  0846               	movf	otoa@w,w
  8627  24F5  00A9               	movwf	pad@p
  8628  24F6  31B7  27AF         	fcall	_pad
  8629  24F8  0020               	movlb	0	; select bank0
  8630  24F9  0827               	movf	?_pad+1,w
  8631  24FA  00B1               	movwf	?_otoa+1
  8632  24FB  0826               	movf	?_pad,w
  8633  24FC  00B0               	movwf	?_otoa
  8634  24FD  0008               	return
  8635  24FE                     __end_of_otoa:	
  8636                           
  8637                           	psect	text19
  8638  1A36                     __ptext19:	
  8639 ;; *************** function _dtoa *****************
  8640 ;; Defined at:
  8641 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8644 ;;		 -> vsnprintf@f(6), 
  8645 ;;  d               8   18[BANK0 ] long long 
  8646 ;; Auto vars:     Size  Location     Type
  8647 ;;  n               8   37[BANK0 ] long long 
  8648 ;;  i               2   45[BANK0 ] int 
  8649 ;;  s               2   35[BANK0 ] int 
  8650 ;;  w               2   33[BANK0 ] int 
  8651 ;;  p               2   31[BANK0 ] int 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  2   16[BANK0 ] int 
  8654 ;; Registers used:
  8655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8661 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8662 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8663 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8664 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8665 ;;Total ram usage:       31 bytes
  8666 ;; Hardware stack levels used:    1
  8667 ;; Hardware stack levels required when called:    5
  8668 ;; This function calls:
  8669 ;;		___aodiv
  8670 ;;		___aomod
  8671 ;;		_abs
  8672 ;;		_pad
  8673 ;; This function is called by:
  8674 ;;		_vfpfcnvrt
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           
  8679                           ;psect for function _dtoa
  8680  1A36                     _dtoa:	
  8681                           
  8682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8683                           
  8684                           ;incstack = 0
  8685                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8686  1A36  0020               	movlb	0	; select bank0
  8687  1A37  0832               	movf	dtoa@d,w
  8688  1A38  00C5               	movwf	dtoa@n
  8689  1A39  0833               	movf	dtoa@d+1,w
  8690  1A3A  00C6               	movwf	dtoa@n+1
  8691  1A3B  0834               	movf	dtoa@d+2,w
  8692  1A3C  00C7               	movwf	dtoa@n+2
  8693  1A3D  0835               	movf	dtoa@d+3,w
  8694  1A3E  00C8               	movwf	dtoa@n+3
  8695  1A3F  0836               	movf	dtoa@d+4,w
  8696  1A40  00C9               	movwf	dtoa@n+4
  8697  1A41  0837               	movf	dtoa@d+5,w
  8698  1A42  00CA               	movwf	dtoa@n+5
  8699  1A43  0838               	movf	dtoa@d+6,w
  8700  1A44  00CB               	movwf	dtoa@n+6
  8701  1A45  0839               	movf	dtoa@d+7,w
  8702  1A46  00CC               	movwf	dtoa@n+7
  8703                           
  8704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8705  1A47  3045               	movlw	low dtoa@n
  8706  1A48  0086               	movwf	6
  8707  1A49  3000               	movlw	high dtoa@n
  8708  1A4A  0087               	movwf	7
  8709  1A4B  3F47               	moviw [7]fsr1
  8710  1A4C  00BA               	movwf	??_dtoa
  8711  1A4D  1FBA               	btfss	??_dtoa,7
  8712  1A4E  2A51               	goto	u8290
  8713  1A4F  3001               	movlw	1
  8714  1A50  2A52               	goto	u8300
  8715  1A51                     u8290:	
  8716  1A51  3000               	movlw	0
  8717  1A52                     u8300:	
  8718  1A52  0020               	movlb	0	; select bank0
  8719  1A53  00BB               	movwf	??_dtoa+1
  8720  1A54  01BC               	clrf	??_dtoa+2
  8721  1A55  083B               	movf	??_dtoa+1,w
  8722  1A56  00C3               	movwf	dtoa@s
  8723  1A57  083C               	movf	??_dtoa+2,w
  8724  1A58  00C4               	movwf	dtoa@s+1
  8725                           
  8726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8727  1A59  0843               	movf	dtoa@s,w
  8728  1A5A  0444               	iorwf	dtoa@s+1,w
  8729  1A5B  1903               	btfsc	3,2
  8730  1A5C  2A7B               	goto	l654
  8731                           
  8732                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8733  1A5D  09C5               	comf	dtoa@n,f
  8734  1A5E  09C6               	comf	dtoa@n+1,f
  8735  1A5F  09C7               	comf	dtoa@n+2,f
  8736  1A60  09C8               	comf	dtoa@n+3,f
  8737  1A61  09C9               	comf	dtoa@n+4,f
  8738  1A62  09CA               	comf	dtoa@n+5,f
  8739  1A63  09CB               	comf	dtoa@n+6,f
  8740  1A64  09CC               	comf	dtoa@n+7,f
  8741  1A65  0AC5               	incf	dtoa@n,f
  8742  1A66  1D03               	skipz
  8743  1A67  2A7B               	goto	l654
  8744  1A68  0AC6               	incf	dtoa@n+1,f
  8745  1A69  1D03               	skipz
  8746  1A6A  2A7B               	goto	l654
  8747  1A6B  0AC7               	incf	dtoa@n+2,f
  8748  1A6C  1D03               	skipz
  8749  1A6D  2A7B               	goto	l654
  8750  1A6E  0AC8               	incf	dtoa@n+3,f
  8751  1A6F  1D03               	skipz
  8752  1A70  2A7B               	goto	l654
  8753  1A71  0AC9               	incf	dtoa@n+4,f
  8754  1A72  1D03               	skipz
  8755  1A73  2A7B               	goto	l654
  8756  1A74  0ACA               	incf	dtoa@n+5,f
  8757  1A75  1D03               	skipz
  8758  1A76  2A7B               	goto	l654
  8759  1A77  0ACB               	incf	dtoa@n+6,f
  8760  1A78  1D03               	skipz
  8761  1A79  2A7B               	goto	l654
  8762  1A7A  0ACC               	incf	dtoa@n+7,f
  8763  1A7B                     l654:	
  8764                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  8765                           
  8766                           
  8767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8768  1A7B  0022               	movlb	2	; select bank2
  8769  1A7C  1BE8               	btfsc	(_prec+1)^(0+256),7
  8770  1A7D  2A82               	goto	l655
  8771                           
  8772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8773  1A7E  30FD               	movlw	253
  8774  1A7F  05E9               	andwf	_flags^(0+256),f
  8775  1A80  30FF               	movlw	255
  8776  1A81  05EA               	andwf	(_flags+1)^(0+256),f
  8777  1A82                     l655:	
  8778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  8779                           
  8780                           
  8781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8782  1A82  0868               	movf	(_prec+1)^(0+256),w
  8783  1A83  3A80               	xorlw	128
  8784  1A84  0020               	movlb	0	; select bank0
  8785  1A85  00BA               	movwf	??_dtoa
  8786  1A86  3080               	movlw	128
  8787  1A87  023A               	subwf	??_dtoa,w
  8788  1A88  1D03               	skipz
  8789  1A89  2A8D               	goto	u8345
  8790  1A8A  3001               	movlw	1
  8791  1A8B  0022               	movlb	2	; select bank2
  8792  1A8C  0267               	subwf	_prec^(0+256),w
  8793  1A8D                     u8345:	
  8794  1A8D  1803               	skipnc
  8795  1A8E  2A95               	goto	l6494
  8796  1A8F  3001               	movlw	1
  8797  1A90  0020               	movlb	0	; select bank0
  8798  1A91  00BF               	movwf	dtoa@p
  8799  1A92  3000               	movlw	0
  8800  1A93  00C0               	movwf	dtoa@p+1
  8801  1A94  2A9D               	goto	l659
  8802  1A95                     l6494:	
  8803  1A95  0022               	movlb	2	; select bank2
  8804  1A96  0868               	movf	(_prec+1)^(0+256),w
  8805  1A97  0020               	movlb	0	; select bank0
  8806  1A98  00C0               	movwf	dtoa@p+1
  8807  1A99  0022               	movlb	2	; select bank2
  8808  1A9A  0867               	movf	_prec^(0+256),w
  8809  1A9B  0020               	movlb	0	; select bank0
  8810  1A9C  00BF               	movwf	dtoa@p
  8811  1A9D                     l659:	
  8812                           
  8813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8814  1A9D  0022               	movlb	2	; select bank2
  8815  1A9E  0866               	movf	(_width+1)^(0+256),w
  8816  1A9F  0020               	movlb	0	; select bank0
  8817  1AA0  00C2               	movwf	dtoa@w+1
  8818  1AA1  0022               	movlb	2	; select bank2
  8819  1AA2  0865               	movf	_width^(0+256),w
  8820  1AA3  0020               	movlb	0	; select bank0
  8821  1AA4  00C1               	movwf	dtoa@w
  8822                           
  8823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8824  1AA5  0843               	movf	dtoa@s,w
  8825  1AA6  0444               	iorwf	dtoa@s+1,w
  8826  1AA7  1D03               	btfss	3,2
  8827  1AA8  2AAC               	goto	l6500
  8828  1AA9  0022               	movlb	2	; select bank2
  8829  1AAA  1D69               	btfss	_flags^(0+256),2
  8830  1AAB  2AB1               	goto	l660
  8831  1AAC                     l6500:	
  8832                           
  8833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8834  1AAC  30FF               	movlw	255
  8835  1AAD  0020               	movlb	0	; select bank0
  8836  1AAE  07C1               	addwf	dtoa@w,f
  8837  1AAF  30FF               	movlw	255
  8838  1AB0  3DC2               	addwfc	dtoa@w+1,f
  8839  1AB1                     l660:	
  8840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  8841                           
  8842                           
  8843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8844  1AB1  301F               	movlw	31
  8845  1AB2  0020               	movlb	0	; select bank0
  8846  1AB3  00CD               	movwf	dtoa@i
  8847  1AB4  3000               	movlw	0
  8848  1AB5  00CE               	movwf	dtoa@i+1
  8849                           
  8850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8851  1AB6  0024               	movlb	4	; select bank4
  8852  1AB7  01BF               	clrf	(_dbuf^(0+512)+31)
  8853                           
  8854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8855  1AB8  2B47               	goto	l663
  8856  1AB9                     l6514:	
  8857  1AB9  0020               	movlb	0	; select bank0
  8858  1ABA  0845               	movf	dtoa@n,w
  8859  1ABB  0446               	iorwf	dtoa@n+1,w
  8860  1ABC  0447               	iorwf	dtoa@n+2,w
  8861  1ABD  0448               	iorwf	dtoa@n+3,w
  8862  1ABE  0449               	iorwf	dtoa@n+4,w
  8863  1ABF  044A               	iorwf	dtoa@n+5,w
  8864  1AC0  044B               	iorwf	dtoa@n+6,w
  8865  1AC1  044C               	iorwf	dtoa@n+7,w
  8866  1AC2  1D03               	skipz
  8867  1AC3  2ADE               	goto	l6504
  8868  1AC4  0840               	movf	dtoa@p+1,w
  8869  1AC5  3A80               	xorlw	128
  8870  1AC6  00BA               	movwf	??_dtoa
  8871  1AC7  3080               	movlw	128
  8872  1AC8  023A               	subwf	??_dtoa,w
  8873  1AC9  1D03               	skipz
  8874  1ACA  2ACD               	goto	u8395
  8875  1ACB  3001               	movlw	1
  8876  1ACC  023F               	subwf	dtoa@p,w
  8877  1ACD                     u8395:	
  8878  1ACD  1803               	skipnc
  8879  1ACE  2ADE               	goto	l6504
  8880  1ACF  0020               	movlb	0	; select bank0
  8881  1AD0  0842               	movf	dtoa@w+1,w
  8882  1AD1  3A80               	xorlw	128
  8883  1AD2  00BA               	movwf	??_dtoa
  8884  1AD3  3080               	movlw	128
  8885  1AD4  023A               	subwf	??_dtoa,w
  8886  1AD5  1D03               	skipz
  8887  1AD6  2AD9               	goto	u8405
  8888  1AD7  3001               	movlw	1
  8889  1AD8  0241               	subwf	dtoa@w,w
  8890  1AD9                     u8405:	
  8891  1AD9  1C03               	skipc
  8892  1ADA  2B53               	goto	l6522
  8893  1ADB  0022               	movlb	2	; select bank2
  8894  1ADC  1CE9               	btfss	_flags^(0+256),1
  8895  1ADD  2B53               	goto	l6522
  8896  1ADE                     l6504:	
  8897                           
  8898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8899  1ADE  30FF               	movlw	255
  8900  1ADF  0020               	movlb	0	; select bank0
  8901  1AE0  07CD               	addwf	dtoa@i,f
  8902  1AE1  30FF               	movlw	255
  8903  1AE2  3DCE               	addwfc	dtoa@i+1,f
  8904                           
  8905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8906  1AE3  300A               	movlw	10
  8907  1AE4  00A0               	movwf	___aomod@divisor
  8908  1AE5  01A1               	clrf	___aomod@divisor+1
  8909  1AE6  01A2               	clrf	___aomod@divisor+2
  8910  1AE7  01A3               	clrf	___aomod@divisor+3
  8911  1AE8  01A4               	clrf	___aomod@divisor+4
  8912  1AE9  01A5               	clrf	___aomod@divisor+5
  8913  1AEA  01A6               	clrf	___aomod@divisor+6
  8914  1AEB  01A7               	clrf	___aomod@divisor+7
  8915  1AEC  0845               	movf	dtoa@n,w
  8916  1AED  00A8               	movwf	___aomod@dividend
  8917  1AEE  0846               	movf	dtoa@n+1,w
  8918  1AEF  00A9               	movwf	___aomod@dividend+1
  8919  1AF0  0847               	movf	dtoa@n+2,w
  8920  1AF1  00AA               	movwf	___aomod@dividend+2
  8921  1AF2  0848               	movf	dtoa@n+3,w
  8922  1AF3  00AB               	movwf	___aomod@dividend+3
  8923  1AF4  0849               	movf	dtoa@n+4,w
  8924  1AF5  00AC               	movwf	___aomod@dividend+4
  8925  1AF6  084A               	movf	dtoa@n+5,w
  8926  1AF7  00AD               	movwf	___aomod@dividend+5
  8927  1AF8  084B               	movf	dtoa@n+6,w
  8928  1AF9  00AE               	movwf	___aomod@dividend+6
  8929  1AFA  084C               	movf	dtoa@n+7,w
  8930  1AFB  00AF               	movwf	___aomod@dividend+7
  8931  1AFC  31A2  2250  319A   	fcall	___aomod
  8932  1AFF  0020               	movlb	0	; select bank0
  8933  1B00  0821               	movf	?___aomod+1,w
  8934  1B01  00F5               	movwf	abs@a+1
  8935  1B02  0820               	movf	?___aomod,w
  8936  1B03  00F4               	movwf	abs@a
  8937  1B04  31B4  2481  319A   	fcall	_abs
  8938  1B07  0874               	movf	?_abs,w
  8939  1B08  3E30               	addlw	48
  8940  1B09  0020               	movlb	0	; select bank0
  8941  1B0A  00BA               	movwf	??_dtoa
  8942  1B0B  084D               	movf	dtoa@i,w
  8943  1B0C  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8944  1B0D  0086               	movwf	6
  8945  1B0E  3002               	movlw	2	; select bank4/5
  8946  1B0F  0087               	movwf	7
  8947  1B10  083A               	movf	??_dtoa,w
  8948  1B11  0081               	movwf	1
  8949                           
  8950                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8951  1B12  30FF               	movlw	255
  8952  1B13  07BF               	addwf	dtoa@p,f
  8953  1B14  30FF               	movlw	255
  8954  1B15  3DC0               	addwfc	dtoa@p+1,f
  8955                           
  8956                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8957  1B16  30FF               	movlw	255
  8958  1B17  07C1               	addwf	dtoa@w,f
  8959  1B18  30FF               	movlw	255
  8960  1B19  3DC2               	addwfc	dtoa@w+1,f
  8961                           
  8962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8963  1B1A  300A               	movlw	10
  8964  1B1B  00A0               	movwf	___aodiv@divisor
  8965  1B1C  01A1               	clrf	___aodiv@divisor+1
  8966  1B1D  01A2               	clrf	___aodiv@divisor+2
  8967  1B1E  01A3               	clrf	___aodiv@divisor+3
  8968  1B1F  01A4               	clrf	___aodiv@divisor+4
  8969  1B20  01A5               	clrf	___aodiv@divisor+5
  8970  1B21  01A6               	clrf	___aodiv@divisor+6
  8971  1B22  01A7               	clrf	___aodiv@divisor+7
  8972  1B23  0845               	movf	dtoa@n,w
  8973  1B24  00A8               	movwf	___aodiv@dividend
  8974  1B25  0846               	movf	dtoa@n+1,w
  8975  1B26  00A9               	movwf	___aodiv@dividend+1
  8976  1B27  0847               	movf	dtoa@n+2,w
  8977  1B28  00AA               	movwf	___aodiv@dividend+2
  8978  1B29  0848               	movf	dtoa@n+3,w
  8979  1B2A  00AB               	movwf	___aodiv@dividend+3
  8980  1B2B  0849               	movf	dtoa@n+4,w
  8981  1B2C  00AC               	movwf	___aodiv@dividend+4
  8982  1B2D  084A               	movf	dtoa@n+5,w
  8983  1B2E  00AD               	movwf	___aodiv@dividend+5
  8984  1B2F  084B               	movf	dtoa@n+6,w
  8985  1B30  00AE               	movwf	___aodiv@dividend+6
  8986  1B31  084C               	movf	dtoa@n+7,w
  8987  1B32  00AF               	movwf	___aodiv@dividend+7
  8988  1B33  31A4  24FE  319A   	fcall	___aodiv
  8989  1B36  0020               	movlb	0	; select bank0
  8990  1B37  0820               	movf	?___aodiv,w
  8991  1B38  00C5               	movwf	dtoa@n
  8992  1B39  0821               	movf	?___aodiv+1,w
  8993  1B3A  00C6               	movwf	dtoa@n+1
  8994  1B3B  0822               	movf	?___aodiv+2,w
  8995  1B3C  00C7               	movwf	dtoa@n+2
  8996  1B3D  0823               	movf	?___aodiv+3,w
  8997  1B3E  00C8               	movwf	dtoa@n+3
  8998  1B3F  0824               	movf	?___aodiv+4,w
  8999  1B40  00C9               	movwf	dtoa@n+4
  9000  1B41  0825               	movf	?___aodiv+5,w
  9001  1B42  00CA               	movwf	dtoa@n+5
  9002  1B43  0826               	movf	?___aodiv+6,w
  9003  1B44  00CB               	movwf	dtoa@n+6
  9004  1B45  0827               	movf	?___aodiv+7,w
  9005  1B46  00CC               	movwf	dtoa@n+7
  9006  1B47                     l663:	
  9007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  9008                           
  9009                           
  9010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9011  1B47  0020               	movlb	0	; select bank0
  9012  1B48  084E               	movf	dtoa@i+1,w
  9013  1B49  3A80               	xorlw	128
  9014  1B4A  00BA               	movwf	??_dtoa
  9015  1B4B  3080               	movlw	128
  9016  1B4C  023A               	subwf	??_dtoa,w
  9017  1B4D  1D03               	skipz
  9018  1B4E  2B51               	goto	u8375
  9019  1B4F  3001               	movlw	1
  9020  1B50  024D               	subwf	dtoa@i,w
  9021  1B51                     u8375:	
  9022  1B51  1803               	btfsc	3,0
  9023  1B52  2AB9               	goto	l6514
  9024  1B53                     l6522:	
  9025                           
  9026                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9027  1B53  0020               	movlb	0	; select bank0
  9028  1B54  0843               	movf	dtoa@s,w
  9029  1B55  0444               	iorwf	dtoa@s+1,w
  9030  1B56  1D03               	btfss	3,2
  9031  1B57  2B5B               	goto	l6526
  9032  1B58  0022               	movlb	2	; select bank2
  9033  1B59  1D69               	btfss	_flags^(0+256),2
  9034  1B5A  2B73               	goto	l6536
  9035  1B5B                     l6526:	
  9036                           
  9037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9038  1B5B  30FF               	movlw	255
  9039  1B5C  0020               	movlb	0	; select bank0
  9040  1B5D  07CD               	addwf	dtoa@i,f
  9041  1B5E  30FF               	movlw	255
  9042  1B5F  3DCE               	addwfc	dtoa@i+1,f
  9043                           
  9044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9045  1B60  0843               	movf	dtoa@s,w
  9046  1B61  0444               	iorwf	dtoa@s+1,w
  9047  1B62  1D03               	btfss	3,2
  9048  1B63  2B66               	goto	l6532
  9049  1B64  302B               	movlw	43
  9050  1B65  2B67               	goto	L2
  9051  1B66                     l6532:	
  9052  1B66  302D               	movlw	45
  9053  1B67                     L2:	
  9054  1B67  00BD               	movwf	_dtoa$1199
  9055  1B68  3000               	movlw	0
  9056  1B69  00BE               	movwf	_dtoa$1199+1
  9057  1B6A  083D               	movf	_dtoa$1199,w
  9058  1B6B  00BA               	movwf	??_dtoa
  9059  1B6C  084D               	movf	dtoa@i,w
  9060  1B6D  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9061  1B6E  0086               	movwf	6
  9062  1B6F  3002               	movlw	2	; select bank4/5
  9063  1B70  0087               	movwf	7
  9064  1B71  083A               	movf	??_dtoa,w
  9065  1B72  0081               	movwf	1
  9066  1B73                     l6536:	
  9067                           
  9068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9069  1B73  0020               	movlb	0	; select bank0
  9070  1B74  0831               	movf	dtoa@fp+1,w
  9071  1B75  00A7               	movwf	pad@fp+1
  9072  1B76  0830               	movf	dtoa@fp,w
  9073  1B77  00A6               	movwf	pad@fp
  9074  1B78  084D               	movf	dtoa@i,w
  9075  1B79  3E20               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9076  1B7A  00BA               	movwf	??_dtoa
  9077  1B7B  083A               	movf	??_dtoa,w
  9078  1B7C  00A8               	movwf	pad@buf
  9079  1B7D  0842               	movf	dtoa@w+1,w
  9080  1B7E  00AA               	movwf	pad@p+1
  9081  1B7F  0841               	movf	dtoa@w,w
  9082  1B80  00A9               	movwf	pad@p
  9083  1B81  31B7  27AF         	fcall	_pad
  9084  1B83  0020               	movlb	0	; select bank0
  9085  1B84  0827               	movf	?_pad+1,w
  9086  1B85  00B1               	movwf	?_dtoa+1
  9087  1B86  0826               	movf	?_pad,w
  9088  1B87  00B0               	movwf	?_dtoa
  9089  1B88  0008               	return
  9090  1B89                     __end_of_dtoa:	
  9091                           
  9092                           	psect	text20
  9093  3481                     __ptext20:	
  9094 ;; *************** function _abs *****************
  9095 ;; Defined at:
  9096 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;  a               2    4[COMMON] int 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  2    4[COMMON] int 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9113 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9114 ;;Total ram usage:        4 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    1
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_dtoa
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           
  9125                           ;psect for function _abs
  9126  3481                     _abs:	
  9127                           
  9128                           ;incstack = 0
  9129                           ; Regs used in _abs: [wreg+status,2+status,0]
  9130  3481  0875               	movf	abs@a+1,w
  9131  3482  3A80               	xorlw	128
  9132  3483  00F6               	movwf	??_abs
  9133  3484  3080               	movlw	128
  9134  3485  0276               	subwf	??_abs,w
  9135  3486  1D03               	skipz
  9136  3487  2C8A               	goto	u7825
  9137  3488  3001               	movlw	1
  9138  3489  0274               	subwf	abs@a,w
  9139  348A                     u7825:	
  9140  348A  1803               	skipnc
  9141  348B  0008               	return
  9142  348C  0974               	comf	abs@a,w
  9143  348D  00F6               	movwf	??_abs
  9144  348E  0975               	comf	abs@a+1,w
  9145  348F  00F7               	movwf	??_abs+1
  9146  3490  0AF6               	incf	??_abs,f
  9147  3491  1903               	skipnz
  9148  3492  0AF7               	incf	??_abs+1,f
  9149  3493  0876               	movf	??_abs,w
  9150  3494  00F4               	movwf	?_abs
  9151  3495  0877               	movf	??_abs+1,w
  9152  3496  00F5               	movwf	?_abs+1
  9153  3497  0008               	return
  9154  3498                     __end_of_abs:	
  9155                           
  9156                           	psect	text21
  9157  2250                     __ptext21:	
  9158 ;; *************** function ___aomod *****************
  9159 ;; Defined at:
  9160 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9161 ;; Parameters:    Size  Location     Type
  9162 ;;  divisor         8    0[BANK0 ] long long 
  9163 ;;  dividend        8    8[BANK0 ] long long 
  9164 ;; Auto vars:     Size  Location     Type
  9165 ;;  sign            1    3[COMMON] unsigned char 
  9166 ;;  counter         1    2[COMMON] unsigned char 
  9167 ;; Return value:  Size  Location     Type
  9168 ;;                  8    0[BANK0 ] long long 
  9169 ;; Registers used:
  9170 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9171 ;; Tracked objects:
  9172 ;;		On entry : 0/0
  9173 ;;		On exit  : 0/0
  9174 ;;		Unchanged: 0/0
  9175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9176 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9179 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9180 ;;Total ram usage:       19 bytes
  9181 ;; Hardware stack levels used:    1
  9182 ;; Hardware stack levels required when called:    1
  9183 ;; This function calls:
  9184 ;;		Nothing
  9185 ;; This function is called by:
  9186 ;;		_dtoa
  9187 ;; This function uses a non-reentrant model
  9188 ;;
  9189                           
  9190                           
  9191                           ;psect for function ___aomod
  9192  2250                     ___aomod:	
  9193                           
  9194                           ;incstack = 0
  9195                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9196  2250  01F3               	clrf	___aomod@sign
  9197  2251  3028               	movlw	low ___aomod@dividend
  9198  2252  0086               	movwf	6
  9199  2253  3000               	movlw	high ___aomod@dividend
  9200  2254  0087               	movwf	7
  9201  2255  3F47               	moviw [7]fsr1
  9202  2256  00F1               	movwf	??___aomod
  9203  2257  1FF1               	btfss	??___aomod,7
  9204  2258  2A7A               	goto	l6394
  9205  2259  0020               	movlb	0	; select bank0
  9206  225A  09A8               	comf	___aomod@dividend,f
  9207  225B  09A9               	comf	___aomod@dividend+1,f
  9208  225C  09AA               	comf	___aomod@dividend+2,f
  9209  225D  09AB               	comf	___aomod@dividend+3,f
  9210  225E  09AC               	comf	___aomod@dividend+4,f
  9211  225F  09AD               	comf	___aomod@dividend+5,f
  9212  2260  09AE               	comf	___aomod@dividend+6,f
  9213  2261  09AF               	comf	___aomod@dividend+7,f
  9214  2262  0AA8               	incf	___aomod@dividend,f
  9215  2263  1D03               	skipz
  9216  2264  2A78               	goto	u808lld
  9217  2265  0AA9               	incf	___aomod@dividend+1,f
  9218  2266  1D03               	skipz
  9219  2267  2A78               	goto	u808lld
  9220  2268  0AAA               	incf	___aomod@dividend+2,f
  9221  2269  1D03               	skipz
  9222  226A  2A78               	goto	u808lld
  9223  226B  0AAB               	incf	___aomod@dividend+3,f
  9224  226C  1D03               	skipz
  9225  226D  2A78               	goto	u808lld
  9226  226E  0AAC               	incf	___aomod@dividend+4,f
  9227  226F  1D03               	skipz
  9228  2270  2A78               	goto	u808lld
  9229  2271  0AAD               	incf	___aomod@dividend+5,f
  9230  2272  1D03               	skipz
  9231  2273  2A78               	goto	u808lld
  9232  2274  0AAE               	incf	___aomod@dividend+6,f
  9233  2275  1D03               	skipz
  9234  2276  2A78               	goto	u808lld
  9235  2277  0AAF               	incf	___aomod@dividend+7,f
  9236  2278                     u808lld:	
  9237  2278  01F3               	clrf	___aomod@sign
  9238  2279  0AF3               	incf	___aomod@sign,f
  9239  227A                     l6394:	
  9240  227A  3020               	movlw	low ___aomod@divisor
  9241  227B  0086               	movwf	6
  9242  227C  3000               	movlw	high ___aomod@divisor
  9243  227D  0087               	movwf	7
  9244  227E  3F47               	moviw [7]fsr1
  9245  227F  00F1               	movwf	??___aomod
  9246  2280  1FF1               	btfss	??___aomod,7
  9247  2281  2AA1               	goto	l6398
  9248  2282  0020               	movlb	0	; select bank0
  9249  2283  09A0               	comf	___aomod@divisor,f
  9250  2284  09A1               	comf	___aomod@divisor+1,f
  9251  2285  09A2               	comf	___aomod@divisor+2,f
  9252  2286  09A3               	comf	___aomod@divisor+3,f
  9253  2287  09A4               	comf	___aomod@divisor+4,f
  9254  2288  09A5               	comf	___aomod@divisor+5,f
  9255  2289  09A6               	comf	___aomod@divisor+6,f
  9256  228A  09A7               	comf	___aomod@divisor+7,f
  9257  228B  0AA0               	incf	___aomod@divisor,f
  9258  228C  1D03               	skipz
  9259  228D  2AA1               	goto	l6398
  9260  228E  0AA1               	incf	___aomod@divisor+1,f
  9261  228F  1D03               	skipz
  9262  2290  2AA1               	goto	l6398
  9263  2291  0AA2               	incf	___aomod@divisor+2,f
  9264  2292  1D03               	skipz
  9265  2293  2AA1               	goto	l6398
  9266  2294  0AA3               	incf	___aomod@divisor+3,f
  9267  2295  1D03               	skipz
  9268  2296  2AA1               	goto	l6398
  9269  2297  0AA4               	incf	___aomod@divisor+4,f
  9270  2298  1D03               	skipz
  9271  2299  2AA1               	goto	l6398
  9272  229A  0AA5               	incf	___aomod@divisor+5,f
  9273  229B  1D03               	skipz
  9274  229C  2AA1               	goto	l6398
  9275  229D  0AA6               	incf	___aomod@divisor+6,f
  9276  229E  1D03               	skipz
  9277  229F  2AA1               	goto	l6398
  9278  22A0  0AA7               	incf	___aomod@divisor+7,f
  9279  22A1                     l6398:	
  9280  22A1  0020               	movlb	0	; select bank0
  9281  22A2  0820               	movf	___aomod@divisor,w
  9282  22A3  0421               	iorwf	___aomod@divisor+1,w
  9283  22A4  0422               	iorwf	___aomod@divisor+2,w
  9284  22A5  0423               	iorwf	___aomod@divisor+3,w
  9285  22A6  0424               	iorwf	___aomod@divisor+4,w
  9286  22A7  0425               	iorwf	___aomod@divisor+5,w
  9287  22A8  0426               	iorwf	___aomod@divisor+6,w
  9288  22A9  0427               	iorwf	___aomod@divisor+7,w
  9289  22AA  1903               	skipnz
  9290  22AB  2AF9               	goto	l6414
  9291  22AC  01F2               	clrf	___aomod@counter
  9292  22AD  0AF2               	incf	___aomod@counter,f
  9293  22AE                     l6406:	
  9294  22AE  1BA7               	btfsc	___aomod@divisor+7,7
  9295  22AF  2ABD               	goto	l6408
  9296  22B0  35A0               	lslf	___aomod@divisor,f
  9297  22B1  0DA1               	rlf	___aomod@divisor+1,f
  9298  22B2  0DA2               	rlf	___aomod@divisor+2,f
  9299  22B3  0DA3               	rlf	___aomod@divisor+3,f
  9300  22B4  0DA4               	rlf	___aomod@divisor+4,f
  9301  22B5  0DA5               	rlf	___aomod@divisor+5,f
  9302  22B6  0DA6               	rlf	___aomod@divisor+6,f
  9303  22B7  0DA7               	rlf	___aomod@divisor+7,f
  9304  22B8  3001               	movlw	1
  9305  22B9  00F1               	movwf	??___aomod
  9306  22BA  0871               	movf	??___aomod,w
  9307  22BB  07F2               	addwf	___aomod@counter,f
  9308  22BC  2AAE               	goto	l6406
  9309  22BD                     l6408:	
  9310  22BD  0827               	movf	___aomod@divisor+7,w
  9311  22BE  022F               	subwf	___aomod@dividend+7,w
  9312  22BF  1D03               	skipz
  9313  22C0  2ADB               	goto	u8135
  9314  22C1  0826               	movf	___aomod@divisor+6,w
  9315  22C2  022E               	subwf	___aomod@dividend+6,w
  9316  22C3  1D03               	skipz
  9317  22C4  2ADB               	goto	u8135
  9318  22C5  0825               	movf	___aomod@divisor+5,w
  9319  22C6  022D               	subwf	___aomod@dividend+5,w
  9320  22C7  1D03               	skipz
  9321  22C8  2ADB               	goto	u8135
  9322  22C9  0824               	movf	___aomod@divisor+4,w
  9323  22CA  022C               	subwf	___aomod@dividend+4,w
  9324  22CB  1D03               	skipz
  9325  22CC  2ADB               	goto	u8135
  9326  22CD  0823               	movf	___aomod@divisor+3,w
  9327  22CE  022B               	subwf	___aomod@dividend+3,w
  9328  22CF  1D03               	skipz
  9329  22D0  2ADB               	goto	u8135
  9330  22D1  0822               	movf	___aomod@divisor+2,w
  9331  22D2  022A               	subwf	___aomod@dividend+2,w
  9332  22D3  1D03               	skipz
  9333  22D4  2ADB               	goto	u8135
  9334  22D5  0821               	movf	___aomod@divisor+1,w
  9335  22D6  0229               	subwf	___aomod@dividend+1,w
  9336  22D7  1D03               	skipz
  9337  22D8  2ADB               	goto	u8135
  9338  22D9  0820               	movf	___aomod@divisor,w
  9339  22DA  0228               	subwf	___aomod@dividend,w
  9340  22DB                     u8135:	
  9341  22DB  1C03               	skipc
  9342  22DC  2AED               	goto	l6412
  9343  22DD  0820               	movf	___aomod@divisor,w
  9344  22DE  02A8               	subwf	___aomod@dividend,f
  9345  22DF  0821               	movf	___aomod@divisor+1,w
  9346  22E0  3BA9               	subwfb	___aomod@dividend+1,f
  9347  22E1  0822               	movf	___aomod@divisor+2,w
  9348  22E2  3BAA               	subwfb	___aomod@dividend+2,f
  9349  22E3  0823               	movf	___aomod@divisor+3,w
  9350  22E4  3BAB               	subwfb	___aomod@dividend+3,f
  9351  22E5  0824               	movf	___aomod@divisor+4,w
  9352  22E6  3BAC               	subwfb	___aomod@dividend+4,f
  9353  22E7  0825               	movf	___aomod@divisor+5,w
  9354  22E8  3BAD               	subwfb	___aomod@dividend+5,f
  9355  22E9  0826               	movf	___aomod@divisor+6,w
  9356  22EA  3BAE               	subwfb	___aomod@dividend+6,f
  9357  22EB  0827               	movf	___aomod@divisor+7,w
  9358  22EC  3BAF               	subwfb	___aomod@dividend+7,f
  9359  22ED                     l6412:	
  9360  22ED  36A7               	lsrf	___aomod@divisor+7,f
  9361  22EE  0CA6               	rrf	___aomod@divisor+6,f
  9362  22EF  0CA5               	rrf	___aomod@divisor+5,f
  9363  22F0  0CA4               	rrf	___aomod@divisor+4,f
  9364  22F1  0CA3               	rrf	___aomod@divisor+3,f
  9365  22F2  0CA2               	rrf	___aomod@divisor+2,f
  9366  22F3  0CA1               	rrf	___aomod@divisor+1,f
  9367  22F4  0CA0               	rrf	___aomod@divisor,f
  9368  22F5  3001               	movlw	1
  9369  22F6  02F2               	subwf	___aomod@counter,f
  9370  22F7  1D03               	btfss	3,2
  9371  22F8  2ABD               	goto	l6408
  9372  22F9                     l6414:	
  9373  22F9  0873               	movf	___aomod@sign,w
  9374  22FA  1903               	btfsc	3,2
  9375  22FB  2B1A               	goto	l960
  9376  22FC  09A8               	comf	___aomod@dividend,f
  9377  22FD  09A9               	comf	___aomod@dividend+1,f
  9378  22FE  09AA               	comf	___aomod@dividend+2,f
  9379  22FF  09AB               	comf	___aomod@dividend+3,f
  9380  2300  09AC               	comf	___aomod@dividend+4,f
  9381  2301  09AD               	comf	___aomod@dividend+5,f
  9382  2302  09AE               	comf	___aomod@dividend+6,f
  9383  2303  09AF               	comf	___aomod@dividend+7,f
  9384  2304  0AA8               	incf	___aomod@dividend,f
  9385  2305  1D03               	skipz
  9386  2306  2B1A               	goto	l960
  9387  2307  0AA9               	incf	___aomod@dividend+1,f
  9388  2308  1D03               	skipz
  9389  2309  2B1A               	goto	l960
  9390  230A  0AAA               	incf	___aomod@dividend+2,f
  9391  230B  1D03               	skipz
  9392  230C  2B1A               	goto	l960
  9393  230D  0AAB               	incf	___aomod@dividend+3,f
  9394  230E  1D03               	skipz
  9395  230F  2B1A               	goto	l960
  9396  2310  0AAC               	incf	___aomod@dividend+4,f
  9397  2311  1D03               	skipz
  9398  2312  2B1A               	goto	l960
  9399  2313  0AAD               	incf	___aomod@dividend+5,f
  9400  2314  1D03               	skipz
  9401  2315  2B1A               	goto	l960
  9402  2316  0AAE               	incf	___aomod@dividend+6,f
  9403  2317  1D03               	skipz
  9404  2318  2B1A               	goto	l960
  9405  2319  0AAF               	incf	___aomod@dividend+7,f
  9406  231A                     l960:	
  9407  231A  0020               	movlb	0	; select bank0
  9408  231B  0828               	movf	___aomod@dividend,w
  9409  231C  00A0               	movwf	?___aomod
  9410  231D  0829               	movf	___aomod@dividend+1,w
  9411  231E  00A1               	movwf	?___aomod+1
  9412  231F  082A               	movf	___aomod@dividend+2,w
  9413  2320  00A2               	movwf	?___aomod+2
  9414  2321  082B               	movf	___aomod@dividend+3,w
  9415  2322  00A3               	movwf	?___aomod+3
  9416  2323  082C               	movf	___aomod@dividend+4,w
  9417  2324  00A4               	movwf	?___aomod+4
  9418  2325  082D               	movf	___aomod@dividend+5,w
  9419  2326  00A5               	movwf	?___aomod+5
  9420  2327  082E               	movf	___aomod@dividend+6,w
  9421  2328  00A6               	movwf	?___aomod+6
  9422  2329  082F               	movf	___aomod@dividend+7,w
  9423  232A  00A7               	movwf	?___aomod+7
  9424  232B  0008               	return
  9425  232C                     __end_of___aomod:	
  9426                           
  9427                           	psect	text22
  9428  24FE                     __ptext22:	
  9429 ;; *************** function ___aodiv *****************
  9430 ;; Defined at:
  9431 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  divisor         8    0[BANK0 ] long long 
  9434 ;;  dividend        8    8[BANK0 ] long long 
  9435 ;; Auto vars:     Size  Location     Type
  9436 ;;  quotient        8    4[COMMON] long long 
  9437 ;;  sign            1    3[COMMON] unsigned char 
  9438 ;;  counter         1    2[COMMON] unsigned char 
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  8    0[BANK0 ] long long 
  9441 ;; Registers used:
  9442 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9448 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9449 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9451 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9452 ;;Total ram usage:       27 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; Hardware stack levels required when called:    1
  9455 ;; This function calls:
  9456 ;;		Nothing
  9457 ;; This function is called by:
  9458 ;;		_dtoa
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           
  9463                           ;psect for function ___aodiv
  9464  24FE                     ___aodiv:	
  9465                           
  9466                           ;incstack = 0
  9467                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9468  24FE  01F3               	clrf	___aodiv@sign
  9469  24FF  3020               	movlw	low ___aodiv@divisor
  9470  2500  0086               	movwf	6
  9471  2501  3000               	movlw	high ___aodiv@divisor
  9472  2502  0087               	movwf	7
  9473  2503  3F47               	moviw [7]fsr1
  9474  2504  00F1               	movwf	??___aodiv
  9475  2505  1FF1               	btfss	??___aodiv,7
  9476  2506  2D28               	goto	l6356
  9477  2507  0020               	movlb	0	; select bank0
  9478  2508  09A0               	comf	___aodiv@divisor,f
  9479  2509  09A1               	comf	___aodiv@divisor+1,f
  9480  250A  09A2               	comf	___aodiv@divisor+2,f
  9481  250B  09A3               	comf	___aodiv@divisor+3,f
  9482  250C  09A4               	comf	___aodiv@divisor+4,f
  9483  250D  09A5               	comf	___aodiv@divisor+5,f
  9484  250E  09A6               	comf	___aodiv@divisor+6,f
  9485  250F  09A7               	comf	___aodiv@divisor+7,f
  9486  2510  0AA0               	incf	___aodiv@divisor,f
  9487  2511  1D03               	skipz
  9488  2512  2D26               	goto	u797lld
  9489  2513  0AA1               	incf	___aodiv@divisor+1,f
  9490  2514  1D03               	skipz
  9491  2515  2D26               	goto	u797lld
  9492  2516  0AA2               	incf	___aodiv@divisor+2,f
  9493  2517  1D03               	skipz
  9494  2518  2D26               	goto	u797lld
  9495  2519  0AA3               	incf	___aodiv@divisor+3,f
  9496  251A  1D03               	skipz
  9497  251B  2D26               	goto	u797lld
  9498  251C  0AA4               	incf	___aodiv@divisor+4,f
  9499  251D  1D03               	skipz
  9500  251E  2D26               	goto	u797lld
  9501  251F  0AA5               	incf	___aodiv@divisor+5,f
  9502  2520  1D03               	skipz
  9503  2521  2D26               	goto	u797lld
  9504  2522  0AA6               	incf	___aodiv@divisor+6,f
  9505  2523  1D03               	skipz
  9506  2524  2D26               	goto	u797lld
  9507  2525  0AA7               	incf	___aodiv@divisor+7,f
  9508  2526                     u797lld:	
  9509  2526  01F3               	clrf	___aodiv@sign
  9510  2527  0AF3               	incf	___aodiv@sign,f
  9511  2528                     l6356:	
  9512  2528  3028               	movlw	low ___aodiv@dividend
  9513  2529  0086               	movwf	6
  9514  252A  3000               	movlw	high ___aodiv@dividend
  9515  252B  0087               	movwf	7
  9516  252C  3F47               	moviw [7]fsr1
  9517  252D  00F1               	movwf	??___aodiv
  9518  252E  1FF1               	btfss	??___aodiv,7
  9519  252F  2D53               	goto	l6362
  9520  2530  0020               	movlb	0	; select bank0
  9521  2531  09A8               	comf	___aodiv@dividend,f
  9522  2532  09A9               	comf	___aodiv@dividend+1,f
  9523  2533  09AA               	comf	___aodiv@dividend+2,f
  9524  2534  09AB               	comf	___aodiv@dividend+3,f
  9525  2535  09AC               	comf	___aodiv@dividend+4,f
  9526  2536  09AD               	comf	___aodiv@dividend+5,f
  9527  2537  09AE               	comf	___aodiv@dividend+6,f
  9528  2538  09AF               	comf	___aodiv@dividend+7,f
  9529  2539  0AA8               	incf	___aodiv@dividend,f
  9530  253A  1D03               	skipz
  9531  253B  2D4F               	goto	l6360
  9532  253C  0AA9               	incf	___aodiv@dividend+1,f
  9533  253D  1D03               	skipz
  9534  253E  2D4F               	goto	l6360
  9535  253F  0AAA               	incf	___aodiv@dividend+2,f
  9536  2540  1D03               	skipz
  9537  2541  2D4F               	goto	l6360
  9538  2542  0AAB               	incf	___aodiv@dividend+3,f
  9539  2543  1D03               	skipz
  9540  2544  2D4F               	goto	l6360
  9541  2545  0AAC               	incf	___aodiv@dividend+4,f
  9542  2546  1D03               	skipz
  9543  2547  2D4F               	goto	l6360
  9544  2548  0AAD               	incf	___aodiv@dividend+5,f
  9545  2549  1D03               	skipz
  9546  254A  2D4F               	goto	l6360
  9547  254B  0AAE               	incf	___aodiv@dividend+6,f
  9548  254C  1D03               	skipz
  9549  254D  2D4F               	goto	l6360
  9550  254E  0AAF               	incf	___aodiv@dividend+7,f
  9551  254F                     l6360:	
  9552  254F  3001               	movlw	1
  9553  2550  00F1               	movwf	??___aodiv
  9554  2551  0871               	movf	??___aodiv,w
  9555  2552  06F3               	xorwf	___aodiv@sign,f
  9556  2553                     l6362:	
  9557  2553  3074               	movlw	low ___aodiv@quotient
  9558  2554  0086               	movwf	6
  9559  2555  3000               	movlw	high ___aodiv@quotient
  9560  2556  0087               	movwf	7
  9561  2557  3008               	movlw	8
  9562  2558  00F1               	movwf	??___aodiv
  9563  2559  3000               	movlw	0
  9564  255A                     u8000:	
  9565  255A  001E               	movwi fsr1++
  9566  255B  0BF1               	decfsz	??___aodiv,f
  9567  255C  2D5A               	goto	u8000
  9568  255D  0020               	movlb	0	; select bank0
  9569  255E  0820               	movf	___aodiv@divisor,w
  9570  255F  0421               	iorwf	___aodiv@divisor+1,w
  9571  2560  0422               	iorwf	___aodiv@divisor+2,w
  9572  2561  0423               	iorwf	___aodiv@divisor+3,w
  9573  2562  0424               	iorwf	___aodiv@divisor+4,w
  9574  2563  0425               	iorwf	___aodiv@divisor+5,w
  9575  2564  0426               	iorwf	___aodiv@divisor+6,w
  9576  2565  0427               	iorwf	___aodiv@divisor+7,w
  9577  2566  1903               	skipnz
  9578  2567  2DBE               	goto	l6384
  9579  2568  01F2               	clrf	___aodiv@counter
  9580  2569  0AF2               	incf	___aodiv@counter,f
  9581  256A                     l6372:	
  9582  256A  1BA7               	btfsc	___aodiv@divisor+7,7
  9583  256B  2D79               	goto	l6374
  9584  256C  35A0               	lslf	___aodiv@divisor,f
  9585  256D  0DA1               	rlf	___aodiv@divisor+1,f
  9586  256E  0DA2               	rlf	___aodiv@divisor+2,f
  9587  256F  0DA3               	rlf	___aodiv@divisor+3,f
  9588  2570  0DA4               	rlf	___aodiv@divisor+4,f
  9589  2571  0DA5               	rlf	___aodiv@divisor+5,f
  9590  2572  0DA6               	rlf	___aodiv@divisor+6,f
  9591  2573  0DA7               	rlf	___aodiv@divisor+7,f
  9592  2574  3001               	movlw	1
  9593  2575  00F1               	movwf	??___aodiv
  9594  2576  0871               	movf	??___aodiv,w
  9595  2577  07F2               	addwf	___aodiv@counter,f
  9596  2578  2D6A               	goto	l6372
  9597  2579                     l6374:	
  9598  2579  35F4               	lslf	___aodiv@quotient,f
  9599  257A  0DF5               	rlf	___aodiv@quotient+1,f
  9600  257B  0DF6               	rlf	___aodiv@quotient+2,f
  9601  257C  0DF7               	rlf	___aodiv@quotient+3,f
  9602  257D  0DF8               	rlf	___aodiv@quotient+4,f
  9603  257E  0DF9               	rlf	___aodiv@quotient+5,f
  9604  257F  0DFA               	rlf	___aodiv@quotient+6,f
  9605  2580  0DFB               	rlf	___aodiv@quotient+7,f
  9606  2581  0827               	movf	___aodiv@divisor+7,w
  9607  2582  022F               	subwf	___aodiv@dividend+7,w
  9608  2583  1D03               	skipz
  9609  2584  2D9F               	goto	u8035
  9610  2585  0826               	movf	___aodiv@divisor+6,w
  9611  2586  022E               	subwf	___aodiv@dividend+6,w
  9612  2587  1D03               	skipz
  9613  2588  2D9F               	goto	u8035
  9614  2589  0825               	movf	___aodiv@divisor+5,w
  9615  258A  022D               	subwf	___aodiv@dividend+5,w
  9616  258B  1D03               	skipz
  9617  258C  2D9F               	goto	u8035
  9618  258D  0824               	movf	___aodiv@divisor+4,w
  9619  258E  022C               	subwf	___aodiv@dividend+4,w
  9620  258F  1D03               	skipz
  9621  2590  2D9F               	goto	u8035
  9622  2591  0823               	movf	___aodiv@divisor+3,w
  9623  2592  022B               	subwf	___aodiv@dividend+3,w
  9624  2593  1D03               	skipz
  9625  2594  2D9F               	goto	u8035
  9626  2595  0822               	movf	___aodiv@divisor+2,w
  9627  2596  022A               	subwf	___aodiv@dividend+2,w
  9628  2597  1D03               	skipz
  9629  2598  2D9F               	goto	u8035
  9630  2599  0821               	movf	___aodiv@divisor+1,w
  9631  259A  0229               	subwf	___aodiv@dividend+1,w
  9632  259B  1D03               	skipz
  9633  259C  2D9F               	goto	u8035
  9634  259D  0820               	movf	___aodiv@divisor,w
  9635  259E  0228               	subwf	___aodiv@dividend,w
  9636  259F                     u8035:	
  9637  259F  1C03               	skipc
  9638  25A0  2DB2               	goto	l6382
  9639  25A1  0820               	movf	___aodiv@divisor,w
  9640  25A2  02A8               	subwf	___aodiv@dividend,f
  9641  25A3  0821               	movf	___aodiv@divisor+1,w
  9642  25A4  3BA9               	subwfb	___aodiv@dividend+1,f
  9643  25A5  0822               	movf	___aodiv@divisor+2,w
  9644  25A6  3BAA               	subwfb	___aodiv@dividend+2,f
  9645  25A7  0823               	movf	___aodiv@divisor+3,w
  9646  25A8  3BAB               	subwfb	___aodiv@dividend+3,f
  9647  25A9  0824               	movf	___aodiv@divisor+4,w
  9648  25AA  3BAC               	subwfb	___aodiv@dividend+4,f
  9649  25AB  0825               	movf	___aodiv@divisor+5,w
  9650  25AC  3BAD               	subwfb	___aodiv@dividend+5,f
  9651  25AD  0826               	movf	___aodiv@divisor+6,w
  9652  25AE  3BAE               	subwfb	___aodiv@dividend+6,f
  9653  25AF  0827               	movf	___aodiv@divisor+7,w
  9654  25B0  3BAF               	subwfb	___aodiv@dividend+7,f
  9655  25B1  1474               	bsf	___aodiv@quotient,0
  9656  25B2                     l6382:	
  9657  25B2  36A7               	lsrf	___aodiv@divisor+7,f
  9658  25B3  0CA6               	rrf	___aodiv@divisor+6,f
  9659  25B4  0CA5               	rrf	___aodiv@divisor+5,f
  9660  25B5  0CA4               	rrf	___aodiv@divisor+4,f
  9661  25B6  0CA3               	rrf	___aodiv@divisor+3,f
  9662  25B7  0CA2               	rrf	___aodiv@divisor+2,f
  9663  25B8  0CA1               	rrf	___aodiv@divisor+1,f
  9664  25B9  0CA0               	rrf	___aodiv@divisor,f
  9665  25BA  3001               	movlw	1
  9666  25BB  02F2               	subwf	___aodiv@counter,f
  9667  25BC  1D03               	btfss	3,2
  9668  25BD  2D79               	goto	l6374
  9669  25BE                     l6384:	
  9670  25BE  0873               	movf	___aodiv@sign,w
  9671  25BF  1903               	btfsc	3,2
  9672  25C0  2DDF               	goto	l947
  9673  25C1  09F4               	comf	___aodiv@quotient,f
  9674  25C2  09F5               	comf	___aodiv@quotient+1,f
  9675  25C3  09F6               	comf	___aodiv@quotient+2,f
  9676  25C4  09F7               	comf	___aodiv@quotient+3,f
  9677  25C5  09F8               	comf	___aodiv@quotient+4,f
  9678  25C6  09F9               	comf	___aodiv@quotient+5,f
  9679  25C7  09FA               	comf	___aodiv@quotient+6,f
  9680  25C8  09FB               	comf	___aodiv@quotient+7,f
  9681  25C9  0AF4               	incf	___aodiv@quotient,f
  9682  25CA  1D03               	skipz
  9683  25CB  2DDF               	goto	l947
  9684  25CC  0AF5               	incf	___aodiv@quotient+1,f
  9685  25CD  1D03               	skipz
  9686  25CE  2DDF               	goto	l947
  9687  25CF  0AF6               	incf	___aodiv@quotient+2,f
  9688  25D0  1D03               	skipz
  9689  25D1  2DDF               	goto	l947
  9690  25D2  0AF7               	incf	___aodiv@quotient+3,f
  9691  25D3  1D03               	skipz
  9692  25D4  2DDF               	goto	l947
  9693  25D5  0AF8               	incf	___aodiv@quotient+4,f
  9694  25D6  1D03               	skipz
  9695  25D7  2DDF               	goto	l947
  9696  25D8  0AF9               	incf	___aodiv@quotient+5,f
  9697  25D9  1D03               	skipz
  9698  25DA  2DDF               	goto	l947
  9699  25DB  0AFA               	incf	___aodiv@quotient+6,f
  9700  25DC  1D03               	skipz
  9701  25DD  2DDF               	goto	l947
  9702  25DE  0AFB               	incf	___aodiv@quotient+7,f
  9703  25DF                     l947:	
  9704  25DF  0874               	movf	___aodiv@quotient,w
  9705  25E0  0020               	movlb	0	; select bank0
  9706  25E1  00A0               	movwf	?___aodiv
  9707  25E2  0875               	movf	___aodiv@quotient+1,w
  9708  25E3  00A1               	movwf	?___aodiv+1
  9709  25E4  0876               	movf	___aodiv@quotient+2,w
  9710  25E5  00A2               	movwf	?___aodiv+2
  9711  25E6  0877               	movf	___aodiv@quotient+3,w
  9712  25E7  00A3               	movwf	?___aodiv+3
  9713  25E8  0878               	movf	___aodiv@quotient+4,w
  9714  25E9  00A4               	movwf	?___aodiv+4
  9715  25EA  0879               	movf	___aodiv@quotient+5,w
  9716  25EB  00A5               	movwf	?___aodiv+5
  9717  25EC  087A               	movf	___aodiv@quotient+6,w
  9718  25ED  00A6               	movwf	?___aodiv+6
  9719  25EE  087B               	movf	___aodiv@quotient+7,w
  9720  25EF  00A7               	movwf	?___aodiv+7
  9721  25F0  0008               	return
  9722  25F1                     __end_of___aodiv:	
  9723                           
  9724                           	psect	text23
  9725  3603                     __ptext23:	
  9726 ;; *************** function _ctoa *****************
  9727 ;; Defined at:
  9728 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9731 ;;		 -> vsnprintf@f(6), 
  9732 ;;  c               1   18[BANK0 ] unsigned char 
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;  w               2   20[BANK0 ] int 
  9735 ;;  l               2    0        int 
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  2   16[BANK0 ] int 
  9738 ;; Registers used:
  9739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9745 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9746 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9747 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9748 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9749 ;;Total ram usage:        6 bytes
  9750 ;; Hardware stack levels used:    1
  9751 ;; Hardware stack levels required when called:    5
  9752 ;; This function calls:
  9753 ;;		_pad
  9754 ;; This function is called by:
  9755 ;;		_vfpfcnvrt
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           
  9760                           ;psect for function _ctoa
  9761  3603                     _ctoa:	
  9762                           
  9763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9764                           
  9765                           ;incstack = 0
  9766                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9767  3603  0022               	movlb	2	; select bank2
  9768  3604  0865               	movf	_width^(0+256),w
  9769  3605  0466               	iorwf	(_width+1)^(0+256),w
  9770  3606  1D03               	btfss	3,2
  9771  3607  2E10               	goto	l6472
  9772  3608  0866               	movf	(_width+1)^(0+256),w
  9773  3609  0020               	movlb	0	; select bank0
  9774  360A  00B5               	movwf	ctoa@w+1
  9775  360B  0022               	movlb	2	; select bank2
  9776  360C  0865               	movf	_width^(0+256),w
  9777  360D  0020               	movlb	0	; select bank0
  9778  360E  00B4               	movwf	ctoa@w
  9779  360F  2E19               	goto	l6474
  9780  3610                     l6472:	
  9781  3610  0865               	movf	_width^(0+256),w
  9782  3611  3EFF               	addlw	255
  9783  3612  0020               	movlb	0	; select bank0
  9784  3613  00B4               	movwf	ctoa@w
  9785  3614  30FF               	movlw	255
  9786  3615  0022               	movlb	2	; select bank2
  9787  3616  3D66               	addwfc	(_width+1)^(0+256),w
  9788  3617  0020               	movlb	0	; select bank0
  9789  3618  00B5               	movwf	ctoa@w+1
  9790  3619                     l6474:	
  9791                           
  9792                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9793  3619  0832               	movf	ctoa@c,w
  9794  361A  00B3               	movwf	??_ctoa
  9795  361B  0833               	movf	??_ctoa,w
  9796  361C  0024               	movlb	4	; select bank4
  9797  361D  00A0               	movwf	_dbuf^(0+512)
  9798                           
  9799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9800  361E  01A1               	clrf	(_dbuf^(0+512)+1)
  9801                           
  9802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9803  361F  0020               	movlb	0	; select bank0
  9804  3620  0831               	movf	ctoa@fp+1,w
  9805  3621  00A7               	movwf	pad@fp+1
  9806  3622  0830               	movf	ctoa@fp,w
  9807  3623  00A6               	movwf	pad@fp
  9808  3624  3020               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9809  3625  00B3               	movwf	??_ctoa
  9810  3626  0833               	movf	??_ctoa,w
  9811  3627  00A8               	movwf	pad@buf
  9812  3628  0835               	movf	ctoa@w+1,w
  9813  3629  00AA               	movwf	pad@p+1
  9814  362A  0834               	movf	ctoa@w,w
  9815  362B  00A9               	movwf	pad@p
  9816  362C  31B7  27AF         	fcall	_pad
  9817  362E  0020               	movlb	0	; select bank0
  9818  362F  0827               	movf	?_pad+1,w
  9819  3630  00B1               	movwf	?_ctoa+1
  9820  3631  0826               	movf	?_pad,w
  9821  3632  00B0               	movwf	?_ctoa
  9822  3633  0008               	return
  9823  3634                     __end_of_ctoa:	
  9824                           
  9825                           	psect	text24
  9826  37AF                     __ptext24:	
  9827 ;; *************** function _pad *****************
  9828 ;; Defined at:
  9829 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9830 ;; Parameters:    Size  Location     Type
  9831 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  9832 ;;		 -> vsnprintf@f(6), 
  9833 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  9834 ;;		 -> dbuf(32), 
  9835 ;;  p               2    9[BANK0 ] int 
  9836 ;; Auto vars:     Size  Location     Type
  9837 ;;  w               2   14[BANK0 ] int 
  9838 ;;  i               2   12[BANK0 ] int 
  9839 ;; Return value:  Size  Location     Type
  9840 ;;                  2    6[BANK0 ] int 
  9841 ;; Registers used:
  9842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9843 ;; Tracked objects:
  9844 ;;		On entry : 0/0
  9845 ;;		On exit  : 0/0
  9846 ;;		Unchanged: 0/0
  9847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9848 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9849 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9850 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9851 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9852 ;;Total ram usage:       10 bytes
  9853 ;; Hardware stack levels used:    1
  9854 ;; Hardware stack levels required when called:    4
  9855 ;; This function calls:
  9856 ;;		_fputc
  9857 ;;		_fputs
  9858 ;;		_strlen
  9859 ;; This function is called by:
  9860 ;;		_ctoa
  9861 ;;		_dtoa
  9862 ;;		_otoa
  9863 ;;		_utoa
  9864 ;;		_xtoa
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           
  9868                           
  9869                           ;psect for function _pad
  9870  37AF                     _pad:	
  9871                           
  9872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9873                           
  9874                           ;incstack = 0
  9875                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9876  37AF  0022               	movlb	2	; select bank2
  9877  37B0  1C69               	btfss	_flags^(0+256),0
  9878  37B1  2FBB               	goto	l6292
  9879                           
  9880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9881  37B2  0020               	movlb	0	; select bank0
  9882  37B3  0827               	movf	pad@fp+1,w
  9883  37B4  00FB               	movwf	fputs@fp+1
  9884  37B5  0826               	movf	pad@fp,w
  9885  37B6  00FA               	movwf	fputs@fp
  9886  37B7  0828               	movf	pad@buf,w
  9887  37B8  3187  27D7  31B7   	fcall	_fputs
  9888  37BB                     l6292:	
  9889                           
  9890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9891  37BB  0020               	movlb	0	; select bank0
  9892  37BC  1BAA               	btfsc	pad@p+1,7
  9893  37BD  2FC3               	goto	l6296
  9894  37BE  082A               	movf	pad@p+1,w
  9895  37BF  00AF               	movwf	pad@w+1
  9896  37C0  0829               	movf	pad@p,w
  9897  37C1  00AE               	movwf	pad@w
  9898  37C2  2FC5               	goto	l639
  9899  37C3                     l6296:	
  9900  37C3  01AE               	clrf	pad@w
  9901  37C4  01AF               	clrf	pad@w+1
  9902  37C5                     l639:	
  9903                           
  9904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9905  37C5  01AC               	clrf	pad@i
  9906  37C6  01AD               	clrf	pad@i+1
  9907  37C7                     l6302:	
  9908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9909                           
  9910                           
  9911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9912  37C7  082D               	movf	pad@i+1,w
  9913  37C8  3A80               	xorlw	128
  9914  37C9  00AB               	movwf	??_pad
  9915  37CA  082F               	movf	pad@w+1,w
  9916  37CB  3A80               	xorlw	128
  9917  37CC  022B               	subwf	??_pad,w
  9918  37CD  1D03               	skipz
  9919  37CE  2FD1               	goto	u7805
  9920  37CF  082E               	movf	pad@w,w
  9921  37D0  022C               	subwf	pad@i,w
  9922  37D1                     u7805:	
  9923  37D1  1803               	btfsc	3,0
  9924  37D2  2FE5               	goto	l642
  9925                           
  9926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9927  37D3  3020               	movlw	32
  9928  37D4  00F1               	movwf	fputc@c
  9929  37D5  3000               	movlw	0
  9930  37D6  00F2               	movwf	fputc@c+1
  9931  37D7  0020               	movlb	0	; select bank0
  9932  37D8  0827               	movf	pad@fp+1,w
  9933  37D9  00F4               	movwf	fputc@fp+1
  9934  37DA  0826               	movf	pad@fp,w
  9935  37DB  00F3               	movwf	fputc@fp
  9936  37DC  31A8  2091  31B7   	fcall	_fputc
  9937                           
  9938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9939  37DF  3001               	movlw	1
  9940  37E0  0020               	movlb	0	; select bank0
  9941  37E1  07AC               	addwf	pad@i,f
  9942  37E2  3000               	movlw	0
  9943  37E3  3DAD               	addwfc	pad@i+1,f
  9944  37E4  2FC7               	goto	l6302
  9945  37E5                     l642:	
  9946                           
  9947                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9948  37E5  0022               	movlb	2	; select bank2
  9949  37E6  1869               	btfsc	_flags^(0+256),0
  9950  37E7  2FF1               	goto	l6306
  9951                           
  9952                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9953  37E8  0020               	movlb	0	; select bank0
  9954  37E9  0827               	movf	pad@fp+1,w
  9955  37EA  00FB               	movwf	fputs@fp+1
  9956  37EB  0826               	movf	pad@fp,w
  9957  37EC  00FA               	movwf	fputs@fp
  9958  37ED  0828               	movf	pad@buf,w
  9959  37EE  3187  27D7  31B7   	fcall	_fputs
  9960  37F1                     l6306:	
  9961                           
  9962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9963  37F1  0020               	movlb	0	; select bank0
  9964  37F2  0828               	movf	pad@buf,w
  9965  37F3  00F1               	movwf	strlen@s
  9966  37F4  3002               	movlw	2
  9967  37F5  00F2               	movwf	strlen@s+1
  9968  37F6  31B4  246A         	fcall	_strlen
  9969  37F8  0020               	movlb	0	; select bank0
  9970  37F9  082E               	movf	pad@w,w
  9971  37FA  0771               	addwf	?_strlen,w
  9972  37FB  00A6               	movwf	?_pad
  9973  37FC  082F               	movf	pad@w+1,w
  9974  37FD  3D72               	addwfc	?_strlen+1,w
  9975  37FE  00A7               	movwf	?_pad+1
  9976  37FF  0008               	return
  9977  3800                     __end_of_pad:	
  9978                           
  9979                           	psect	text25
  9980  346A                     __ptext25:	
  9981 ;; *************** function _strlen *****************
  9982 ;; Defined at:
  9983 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  s               2    1[COMMON] PTR const unsigned char 
  9986 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
  9987 ;;		 -> adcGain(2), 
  9988 ;; Auto vars:     Size  Location     Type
  9989 ;;  a               2    3[COMMON] PTR const unsigned char 
  9990 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
  9991 ;;		 -> adcGain(2), 
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  2    1[COMMON] unsigned int 
  9994 ;; Registers used:
  9995 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10004 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10005 ;;Total ram usage:        4 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; Hardware stack levels required when called:    1
 10008 ;; This function calls:
 10009 ;;		Nothing
 10010 ;; This function is called by:
 10011 ;;		_pad
 10012 ;;		_stoa
 10013 ;; This function uses a non-reentrant model
 10014 ;;
 10015                           
 10016                           
 10017                           ;psect for function _strlen
 10018  346A                     _strlen:	
 10019                           
 10020                           ;incstack = 0
 10021                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10022  346A  0872               	movf	strlen@s+1,w
 10023  346B  00F4               	movwf	strlen@a+1
 10024  346C  0871               	movf	strlen@s,w
 10025  346D  00F3               	movwf	strlen@a
 10026  346E                     l6278:	
 10027  346E  0871               	movf	strlen@s,w
 10028  346F  0086               	movwf	6
 10029  3470  0872               	movf	strlen@s+1,w
 10030  3471  0087               	movwf	7
 10031  3472  0801               	movf	1,w
 10032  3473  1903               	btfsc	3,2
 10033  3474  2C7A               	goto	l6280
 10034  3475  3001               	movlw	1
 10035  3476  07F1               	addwf	strlen@s,f
 10036  3477  3000               	movlw	0
 10037  3478  3DF2               	addwfc	strlen@s+1,f
 10038  3479  2C6E               	goto	l6278
 10039  347A                     l6280:	
 10040  347A  0873               	movf	strlen@a,w
 10041  347B  0271               	subwf	strlen@s,w
 10042  347C  00F1               	movwf	?_strlen
 10043  347D  0874               	movf	strlen@a+1,w
 10044  347E  3B72               	subwfb	strlen@s+1,w
 10045  347F  00F2               	movwf	?_strlen+1
 10046  3480  0008               	return
 10047  3481                     __end_of_strlen:	
 10048                           
 10049                           	psect	text26
 10050  07D7                     __ptext26:	
 10051 ;; *************** function _fputs *****************
 10052 ;; Defined at:
 10053 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10054 ;; Parameters:    Size  Location     Type
 10055 ;;  s               1    wreg     PTR const unsigned char 
 10056 ;;		 -> dbuf(32), 
 10057 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 10058 ;;		 -> vsnprintf@f(6), 
 10059 ;; Auto vars:     Size  Location     Type
 10060 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 10061 ;;		 -> dbuf(32), 
 10062 ;;  i               2    3[BANK0 ] int 
 10063 ;;  c               1    2[BANK0 ] unsigned char 
 10064 ;; Return value:  Size  Location     Type
 10065 ;;                  2   10[COMMON] int 
 10066 ;; Registers used:
 10067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10068 ;; Tracked objects:
 10069 ;;		On entry : 0/0
 10070 ;;		On exit  : 0/0
 10071 ;;		Unchanged: 0/0
 10072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10074 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10075 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10076 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10077 ;;Total ram usage:        8 bytes
 10078 ;; Hardware stack levels used:    1
 10079 ;; Hardware stack levels required when called:    3
 10080 ;; This function calls:
 10081 ;;		_fputc
 10082 ;; This function is called by:
 10083 ;;		_pad
 10084 ;; This function uses a non-reentrant model
 10085 ;;
 10086                           
 10087                           
 10088                           ;psect for function _fputs
 10089  07D7                     _fputs:	
 10090                           
 10091                           ;incstack = 0
 10092                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10093                           ;fputs@s stored from wreg
 10094  07D7  0020               	movlb	0	; select bank0
 10095  07D8  00A5               	movwf	fputs@s
 10096  07D9  01A3               	clrf	fputs@i
 10097  07DA  01A4               	clrf	fputs@i+1
 10098  07DB                     l6272:	
 10099  07DB  0823               	movf	fputs@i,w
 10100  07DC  0725               	addwf	fputs@s,w
 10101  07DD  00A0               	movwf	??_fputs
 10102  07DE  0820               	movf	??_fputs,w
 10103  07DF  0086               	movwf	6
 10104  07E0  3002               	movlw	2	; select bank4/5
 10105  07E1  0087               	movwf	7
 10106  07E2  0801               	movf	1,w
 10107  07E3  00A1               	movwf	??_fputs+1
 10108  07E4  0821               	movf	??_fputs+1,w
 10109  07E5  00A2               	movwf	fputs@c
 10110  07E6  0822               	movf	fputs@c,w
 10111  07E7  1903               	btfsc	3,2
 10112  07E8  0008               	return
 10113  07E9  0822               	movf	fputs@c,w
 10114  07EA  00A0               	movwf	??_fputs
 10115  07EB  01A1               	clrf	??_fputs+1
 10116  07EC  0820               	movf	??_fputs,w
 10117  07ED  00F1               	movwf	fputc@c
 10118  07EE  0821               	movf	??_fputs+1,w
 10119  07EF  00F2               	movwf	fputc@c+1
 10120  07F0  087B               	movf	fputs@fp+1,w
 10121  07F1  00F4               	movwf	fputc@fp+1
 10122  07F2  087A               	movf	fputs@fp,w
 10123  07F3  00F3               	movwf	fputc@fp
 10124  07F4  31A8  2091  3187   	fcall	_fputc
 10125  07F7  3001               	movlw	1
 10126  07F8  0020               	movlb	0	; select bank0
 10127  07F9  07A3               	addwf	fputs@i,f
 10128  07FA  3000               	movlw	0
 10129  07FB  3DA4               	addwfc	fputs@i+1,f
 10130  07FC  2FDB               	goto	l6272
 10131  07FD                     __end_of_fputs:	
 10132                           
 10133                           	psect	text27
 10134  2891                     __ptext27:	
 10135 ;; *************** function _fputc *****************
 10136 ;; Defined at:
 10137 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;  c               2    1[COMMON] int 
 10140 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10141 ;;		 -> vsnprintf@f(6), 
 10142 ;; Auto vars:     Size  Location     Type
 10143 ;;		None
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  2    1[COMMON] int 
 10146 ;; Registers used:
 10147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10155 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10156 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10157 ;;Total ram usage:        9 bytes
 10158 ;; Hardware stack levels used:    1
 10159 ;; Hardware stack levels required when called:    2
 10160 ;; This function calls:
 10161 ;;		_putch
 10162 ;; This function is called by:
 10163 ;;		_pad
 10164 ;;		_stoa
 10165 ;;		_vfpfcnvrt
 10166 ;;		_fputs
 10167 ;; This function uses a non-reentrant model
 10168 ;;
 10169                           
 10170                           
 10171                           ;psect for function _fputc
 10172  2891                     _fputc:	
 10173                           
 10174                           ;incstack = 0
 10175                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10176  2891  0873               	movf	fputc@fp,w
 10177  2892  0474               	iorwf	fputc@fp+1,w
 10178  2893  1903               	btfsc	3,2
 10179  2894  2899               	goto	l6254
 10180  2895  0873               	movf	fputc@fp,w
 10181  2896  0474               	iorwf	fputc@fp+1,w
 10182  2897  1D03               	btfss	3,2
 10183  2898  289D               	goto	l6256
 10184  2899                     l6254:	
 10185  2899  0871               	movf	fputc@c,w
 10186  289A  3180  2003         	fcall	_putch
 10187  289C  0008               	return
 10188  289D                     l6256:	
 10189  289D  0873               	movf	fputc@fp,w
 10190  289E  0086               	movwf	6
 10191  289F  0874               	movf	fputc@fp+1,w
 10192  28A0  0087               	movwf	7
 10193  28A1  3144               	addfsr 1,4
 10194  28A2  0016               	moviw fsr1++
 10195  28A3  0401               	iorwf	1,w
 10196  28A4  1903               	btfsc	3,2
 10197  28A5  28C4               	goto	l6260
 10198  28A6  0873               	movf	fputc@fp,w
 10199  28A7  0086               	movwf	6
 10200  28A8  0874               	movf	fputc@fp+1,w
 10201  28A9  0087               	movwf	7
 10202  28AA  3144               	addfsr 1,4
 10203  28AB  3F40               	moviw [0]fsr1
 10204  28AC  00F5               	movwf	??_fputc
 10205  28AD  3F41               	moviw [1]fsr1
 10206  28AE  00F6               	movwf	??_fputc+1
 10207  28AF  0873               	movf	fputc@fp,w
 10208  28B0  0086               	movwf	6
 10209  28B1  0874               	movf	fputc@fp+1,w
 10210  28B2  0087               	movwf	7
 10211  28B3  3142               	addfsr 1,2
 10212  28B4  3F40               	moviw [0]fsr1
 10213  28B5  00F7               	movwf	??_fputc+2
 10214  28B6  3F41               	moviw [1]fsr1
 10215  28B7  00F8               	movwf	??_fputc+3
 10216  28B8  0878               	movf	??_fputc+3,w
 10217  28B9  3A80               	xorlw	128
 10218  28BA  00F9               	movwf	??_fputc+4
 10219  28BB  0876               	movf	??_fputc+1,w
 10220  28BC  3A80               	xorlw	128
 10221  28BD  0279               	subwf	??_fputc+4,w
 10222  28BE  1D03               	skipz
 10223  28BF  28C2               	goto	u7735
 10224  28C0  0875               	movf	??_fputc,w
 10225  28C1  0277               	subwf	??_fputc+2,w
 10226  28C2                     u7735:	
 10227  28C2  1803               	skipnc
 10228  28C3  0008               	return
 10229  28C4                     l6260:	
 10230  28C4  0873               	movf	fputc@fp,w
 10231  28C5  0086               	movwf	6
 10232  28C6  0874               	movf	fputc@fp+1,w
 10233  28C7  0087               	movwf	7
 10234  28C8  3142               	addfsr 1,2
 10235  28C9  0873               	movf	fputc@fp,w
 10236  28CA  0084               	movwf	4
 10237  28CB  0874               	movf	fputc@fp+1,w
 10238  28CC  0085               	movwf	5
 10239  28CD  3F40               	moviw [0]fsr1
 10240  28CE  0700               	addwf	0,w
 10241  28CF  00F5               	movwf	??_fputc
 10242  28D0  3101               	addfsr 0,1
 10243  28D1  3F41               	moviw [1]fsr1
 10244  28D2  3D00               	addwfc	0,w
 10245  28D3  00F6               	movwf	??_fputc+1
 10246  28D4  0875               	movf	??_fputc,w
 10247  28D5  0086               	movwf	6
 10248  28D6  0876               	movf	??_fputc+1,w
 10249  28D7  0087               	movwf	7
 10250  28D8  0871               	movf	fputc@c,w
 10251  28D9  0081               	movwf	1
 10252  28DA  0873               	movf	fputc@fp,w
 10253  28DB  0086               	movwf	6
 10254  28DC  0874               	movf	fputc@fp+1,w
 10255  28DD  0087               	movwf	7
 10256  28DE  3142               	addfsr 1,2
 10257  28DF  3001               	movlw	1
 10258  28E0  0781               	addwf	1,f
 10259  28E1  3141               	addfsr 1,1
 10260  28E2  1803               	skipnc
 10261  28E3  0A81               	incf	1,f
 10262  28E4  0008               	return
 10263  28E5                     __end_of_fputc:	
 10264                           
 10265                           	psect	text28
 10266  0003                     __ptext28:	
 10267 ;; *************** function _putch *****************
 10268 ;; Defined at:
 10269 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10270 ;; Parameters:    Size  Location     Type
 10271 ;;  c               1    wreg     unsigned char 
 10272 ;; Auto vars:     Size  Location     Type
 10273 ;;  c               1    0[COMMON] unsigned char 
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  1    wreg      void 
 10276 ;; Registers used:
 10277 ;;		wreg
 10278 ;; Tracked objects:
 10279 ;;		On entry : 0/0
 10280 ;;		On exit  : 0/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10287 ;;Total ram usage:        0 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; Hardware stack levels required when called:    1
 10290 ;; This function calls:
 10291 ;;		Nothing
 10292 ;; This function is called by:
 10293 ;;		_fputc
 10294 ;; This function uses a non-reentrant model
 10295 ;;
 10296                           
 10297                           
 10298                           ;psect for function _putch
 10299  0003                     _putch:	
 10300                           
 10301                           ;incstack = 0
 10302                           ; Regs used in _putch: [wreg]
 10303  0003  0008               	return
 10304  0004                     __end_of_putch:	
 10305                           
 10306                           	psect	text29
 10307  2C79                     __ptext29:	
 10308 ;; *************** function _atoi *****************
 10309 ;; Defined at:
 10310 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10311 ;; Parameters:    Size  Location     Type
 10312 ;;  s               2    7[COMMON] PTR const unsigned char 
 10313 ;;		 -> STR_20(18), STR_19(18), STR_18(19), STR_17(20), 
 10314 ;;		 -> STR_16(20), STR_15(21), STR_14(21), STR_13(21), 
 10315 ;;		 -> STR_12(22), STR_11(22), STR_10(21), STR_9(21), 
 10316 ;;		 -> STR_6(15), STR_5(15), STR_4(21), STR_3(22), 
 10317 ;;		 -> STR_2(71), STR_1(40), 
 10318 ;; Auto vars:     Size  Location     Type
 10319 ;;  n               2   11[BANK0 ] int 
 10320 ;;  neg             2    4[BANK0 ] int 
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  2    7[COMMON] int 
 10323 ;; Registers used:
 10324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/0
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10330 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10331 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10332 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10333 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10334 ;;Total ram usage:       15 bytes
 10335 ;; Hardware stack levels used:    1
 10336 ;; Hardware stack levels required when called:    2
 10337 ;; This function calls:
 10338 ;;		___wmul
 10339 ;;		_isdigit
 10340 ;;		_isspace
 10341 ;; This function is called by:
 10342 ;;		_vfpfcnvrt
 10343 ;; This function uses a non-reentrant model
 10344 ;;
 10345                           
 10346                           
 10347                           ;psect for function _atoi
 10348  2C79                     _atoi:	
 10349                           
 10350                           ;incstack = 0
 10351                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10352  2C79  0020               	movlb	0	; select bank0
 10353  2C7A  01AB               	clrf	atoi@n
 10354  2C7B  01AC               	clrf	atoi@n+1
 10355  2C7C  01A4               	clrf	atoi@neg
 10356  2C7D  01A5               	clrf	atoi@neg+1
 10357  2C7E                     l6738:	
 10358  2C7E  01AA               	clrf	_atoi$1651
 10359  2C7F  0AAA               	incf	_atoi$1651,f
 10360  2C80  0877               	movf	atoi@s,w
 10361  2C81  0084               	movwf	4
 10362  2C82  0878               	movf	atoi@s+1,w
 10363  2C83  0085               	movwf	5
 10364  2C84  0012               	moviw fsr0++
 10365  2C85  3A20               	xorlw	32
 10366  2C86  1903               	btfsc	3,2
 10367  2C87  2C9A               	goto	l6746
 10368  2C88  0877               	movf	atoi@s,w
 10369  2C89  0084               	movwf	4
 10370  2C8A  0878               	movf	atoi@s+1,w
 10371  2C8B  0085               	movwf	5
 10372  2C8C  0800               	movf	0,w	;code access
 10373  2C8D  3EF7               	addlw	247
 10374  2C8E  00A0               	movwf	??_atoi
 10375  2C8F  30FF               	movlw	255
 10376  2C90  1803               	skipnc
 10377  2C91  3000               	movlw	0
 10378  2C92  00A1               	movwf	??_atoi+1
 10379  2C93  3000               	movlw	0
 10380  2C94  0221               	subwf	??_atoi+1,w
 10381  2C95  3005               	movlw	5
 10382  2C96  1903               	skipnz
 10383  2C97  0220               	subwf	??_atoi,w
 10384  2C98  1803               	btfsc	3,0
 10385  2C99  01AA               	clrf	_atoi$1651
 10386  2C9A                     l6746:	
 10387  2C9A  082A               	movf	_atoi$1651,w
 10388  2C9B  00A0               	movwf	??_atoi
 10389  2C9C  01A1               	clrf	??_atoi+1
 10390  2C9D  0820               	movf	??_atoi,w
 10391  2C9E  00A6               	movwf	_atoi$1650
 10392  2C9F  0821               	movf	??_atoi+1,w
 10393  2CA0  00A7               	movwf	_atoi$1650+1
 10394  2CA1  0826               	movf	_atoi$1650,w
 10395  2CA2  0427               	iorwf	_atoi$1650+1,w
 10396  2CA3  1903               	btfsc	3,2
 10397  2CA4  2CAF               	goto	l6754
 10398  2CA5  3001               	movlw	1
 10399  2CA6  07F7               	addwf	atoi@s,f
 10400  2CA7  3000               	movlw	0
 10401  2CA8  3DF8               	addwfc	atoi@s+1,f
 10402  2CA9  2C7E               	goto	l6738
 10403  2CAA                     l6752:	
 10404  2CAA  3001               	movlw	1
 10405  2CAB  00A4               	movwf	atoi@neg
 10406  2CAC  3000               	movlw	0
 10407  2CAD  00A5               	movwf	atoi@neg+1
 10408  2CAE  2CE2               	goto	l1322
 10409  2CAF                     l6754:	
 10410  2CAF  0877               	movf	atoi@s,w
 10411  2CB0  0084               	movwf	4
 10412  2CB1  0878               	movf	atoi@s+1,w
 10413  2CB2  0085               	movwf	5
 10414  2CB3  0800               	movf	0,w	;code access
 10415  2CB4  00A0               	movwf	??_atoi
 10416  2CB5  01A1               	clrf	??_atoi+1
 10417                           
 10418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10419                           ; Switch size 1, requested type "simple"
 10420                           ; Number of cases is 1, Range of values is 0 to 0
 10421                           ; switch strategies available:
 10422                           ; Name         Instructions Cycles
 10423                           ; simple_byte            4     3 (average)
 10424                           ; direct_byte            8     6 (fixed)
 10425                           ; jumptable            260     6 (fixed)
 10426                           ;	Chosen strategy is simple_byte
 10427  2CB6  0821               	movf	??_atoi+1,w
 10428  2CB7  3A00               	xorlw	0	; case 0
 10429  2CB8  1903               	skipnz
 10430  2CB9  2CBB               	goto	l8590
 10431  2CBA  2CE6               	goto	l6760
 10432  2CBB                     l8590:	
 10433                           
 10434                           ; Switch size 1, requested type "simple"
 10435                           ; Number of cases is 2, Range of values is 43 to 45
 10436                           ; switch strategies available:
 10437                           ; Name         Instructions Cycles
 10438                           ; simple_byte            7     4 (average)
 10439                           ; direct_byte           15     9 (fixed)
 10440                           ; jumptable            263     9 (fixed)
 10441                           ;	Chosen strategy is simple_byte
 10442  2CBB  0820               	movf	??_atoi,w
 10443  2CBC  3A2B               	xorlw	43	; case 43
 10444  2CBD  1903               	skipnz
 10445  2CBE  2CE2               	goto	l1322
 10446  2CBF  3A06               	xorlw	6	; case 45
 10447  2CC0  1903               	skipnz
 10448  2CC1  2CAA               	goto	l6752
 10449  2CC2  2CE6               	goto	l6760
 10450  2CC3                     l6756:	
 10451  2CC3  0877               	movf	atoi@s,w
 10452  2CC4  0084               	movwf	4
 10453  2CC5  0878               	movf	atoi@s+1,w
 10454  2CC6  0085               	movwf	5
 10455  2CC7  0800               	movf	0,w	;code access
 10456  2CC8  00A0               	movwf	??_atoi
 10457  2CC9  082C               	movf	atoi@n+1,w
 10458  2CCA  00F2               	movwf	___wmul@multiplier+1
 10459  2CCB  082B               	movf	atoi@n,w
 10460  2CCC  00F1               	movwf	___wmul@multiplier
 10461  2CCD  300A               	movlw	10
 10462  2CCE  00F3               	movwf	___wmul@multiplicand
 10463  2CCF  3000               	movlw	0
 10464  2CD0  00F4               	movwf	___wmul@multiplicand+1
 10465  2CD1  31B4  24F9  31AC   	fcall	___wmul
 10466  2CD4  0872               	movf	?___wmul+1,w
 10467  2CD5  0020               	movlb	0	; select bank0
 10468  2CD6  00A2               	movwf	??_atoi+2
 10469  2CD7  0820               	movf	??_atoi,w
 10470  2CD8  0271               	subwf	?___wmul,w
 10471  2CD9  00A1               	movwf	??_atoi+1
 10472  2CDA  1C03               	skipc
 10473  2CDB  03A2               	decf	??_atoi+2,f
 10474  2CDC  0821               	movf	??_atoi+1,w
 10475  2CDD  3E30               	addlw	48
 10476  2CDE  00AB               	movwf	atoi@n
 10477  2CDF  3000               	movlw	0
 10478  2CE0  3D22               	addwfc	??_atoi+2,w
 10479  2CE1  00AC               	movwf	atoi@n+1
 10480  2CE2                     l1322:	
 10481  2CE2  3001               	movlw	1
 10482  2CE3  07F7               	addwf	atoi@s,f
 10483  2CE4  3000               	movlw	0
 10484  2CE5  3DF8               	addwfc	atoi@s+1,f
 10485  2CE6                     l6760:	
 10486  2CE6  0877               	movf	atoi@s,w
 10487  2CE7  0084               	movwf	4
 10488  2CE8  0878               	movf	atoi@s+1,w
 10489  2CE9  0085               	movwf	5
 10490  2CEA  0800               	movf	0,w	;code access
 10491  2CEB  3ED0               	addlw	208
 10492  2CEC  00A0               	movwf	??_atoi
 10493  2CED  30FF               	movlw	255
 10494  2CEE  1803               	skipnc
 10495  2CEF  3000               	movlw	0
 10496  2CF0  00A1               	movwf	??_atoi+1
 10497  2CF1  3000               	movlw	0
 10498  2CF2  0221               	subwf	??_atoi+1,w
 10499  2CF3  300A               	movlw	10
 10500  2CF4  1903               	skipnz
 10501  2CF5  0220               	subwf	??_atoi,w
 10502  2CF6  1803               	btfsc	3,0
 10503  2CF7  2CFA               	goto	u8910
 10504  2CF8  3001               	movlw	1
 10505  2CF9  2CFB               	goto	u8920
 10506  2CFA                     u8910:	
 10507  2CFA  3000               	movlw	0
 10508  2CFB                     u8920:	
 10509  2CFB  00A2               	movwf	??_atoi+2
 10510  2CFC  01A3               	clrf	??_atoi+3
 10511  2CFD  0822               	movf	??_atoi+2,w
 10512  2CFE  00A8               	movwf	_atoi$1652
 10513  2CFF  0823               	movf	??_atoi+3,w
 10514  2D00  00A9               	movwf	_atoi$1652+1
 10515  2D01  0828               	movf	_atoi$1652,w
 10516  2D02  0429               	iorwf	_atoi$1652+1,w
 10517  2D03  1D03               	btfss	3,2
 10518  2D04  2CC3               	goto	l6756
 10519  2D05  0824               	movf	atoi@neg,w
 10520  2D06  0425               	iorwf	atoi@neg+1,w
 10521  2D07  1D03               	btfss	3,2
 10522  2D08  2D15               	goto	l6770
 10523  2D09  092B               	comf	atoi@n,w
 10524  2D0A  00A0               	movwf	??_atoi
 10525  2D0B  092C               	comf	atoi@n+1,w
 10526  2D0C  00A1               	movwf	??_atoi+1
 10527  2D0D  0AA0               	incf	??_atoi,f
 10528  2D0E  1903               	skipnz
 10529  2D0F  0AA1               	incf	??_atoi+1,f
 10530  2D10  0820               	movf	??_atoi,w
 10531  2D11  00F7               	movwf	?_atoi
 10532  2D12  0821               	movf	??_atoi+1,w
 10533  2D13  00F8               	movwf	?_atoi+1
 10534  2D14  0008               	return
 10535  2D15                     l6770:	
 10536  2D15  082C               	movf	atoi@n+1,w
 10537  2D16  00F8               	movwf	?_atoi+1
 10538  2D17  082B               	movf	atoi@n,w
 10539  2D18  00F7               	movwf	?_atoi
 10540  2D19  0008               	return
 10541  2D1A                     __end_of_atoi:	
 10542                           
 10543                           	psect	text30
 10544  354A                     __ptext30:	
 10545 ;; *************** function _isspace *****************
 10546 ;; Defined at:
 10547 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;  c               2    1[COMMON] int 
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;		None
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  2    1[COMMON] int 
 10554 ;; Registers used:
 10555 ;;		wreg, status,2, status,0
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10563 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10564 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10565 ;;Total ram usage:        5 bytes
 10566 ;; Hardware stack levels used:    1
 10567 ;; Hardware stack levels required when called:    1
 10568 ;; This function calls:
 10569 ;;		Nothing
 10570 ;; This function is called by:
 10571 ;;		_atoi
 10572 ;; This function uses a non-reentrant model
 10573 ;;
 10574                           
 10575                           
 10576                           ;psect for function _isspace
 10577  354A                     _isspace:	
 10578                           
 10579                           ;incstack = 0
 10580                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10581  354A  01F5               	clrf	_isspace$1677
 10582  354B  0AF5               	incf	_isspace$1677,f
 10583  354C  3020               	movlw	32
 10584  354D  0671               	xorwf	isspace@c,w
 10585  354E  0472               	iorwf	isspace@c+1,w
 10586  354F  1903               	btfsc	3,2
 10587  3550  2D5E               	goto	l6464
 10588  3551  0871               	movf	isspace@c,w
 10589  3552  3EF7               	addlw	247
 10590  3553  00F3               	movwf	??_isspace
 10591  3554  30FF               	movlw	255
 10592  3555  3D72               	addwfc	isspace@c+1,w
 10593  3556  00F4               	movwf	??_isspace+1
 10594  3557  3000               	movlw	0
 10595  3558  0274               	subwf	??_isspace+1,w
 10596  3559  3005               	movlw	5
 10597  355A  1903               	skipnz
 10598  355B  0273               	subwf	??_isspace,w
 10599  355C  1803               	btfsc	3,0
 10600  355D  01F5               	clrf	_isspace$1677
 10601  355E                     l6464:	
 10602  355E  0875               	movf	_isspace$1677,w
 10603  355F  00F3               	movwf	??_isspace
 10604  3560  01F4               	clrf	??_isspace+1
 10605  3561  0873               	movf	??_isspace,w
 10606  3562  00F1               	movwf	?_isspace
 10607  3563  0874               	movf	??_isspace+1,w
 10608  3564  00F2               	movwf	?_isspace+1
 10609  3565  0008               	return
 10610  3566                     __end_of_isspace:	
 10611                           
 10612                           	psect	text31
 10613  3453                     __ptext31:	
 10614 ;; *************** function _isdigit *****************
 10615 ;; Defined at:
 10616 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10617 ;; Parameters:    Size  Location     Type
 10618 ;;  c               2    1[COMMON] int 
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;		None
 10621 ;; Return value:  Size  Location     Type
 10622 ;;                  2    1[COMMON] int 
 10623 ;; Registers used:
 10624 ;;		wreg, status,2, status,0
 10625 ;; Tracked objects:
 10626 ;;		On entry : 0/0
 10627 ;;		On exit  : 0/0
 10628 ;;		Unchanged: 0/0
 10629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10632 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10633 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10634 ;;Total ram usage:        6 bytes
 10635 ;; Hardware stack levels used:    1
 10636 ;; Hardware stack levels required when called:    1
 10637 ;; This function calls:
 10638 ;;		Nothing
 10639 ;; This function is called by:
 10640 ;;		_vfpfcnvrt
 10641 ;;		_atoi
 10642 ;; This function uses a non-reentrant model
 10643 ;;
 10644                           
 10645                           
 10646                           ;psect for function _isdigit
 10647  3453                     _isdigit:	
 10648                           
 10649                           ;incstack = 0
 10650                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10651  3453  0871               	movf	isdigit@c,w
 10652  3454  3ED0               	addlw	208
 10653  3455  00F3               	movwf	??_isdigit
 10654  3456  30FF               	movlw	255
 10655  3457  3D72               	addwfc	isdigit@c+1,w
 10656  3458  00F4               	movwf	??_isdigit+1
 10657  3459  3000               	movlw	0
 10658  345A  0274               	subwf	??_isdigit+1,w
 10659  345B  300A               	movlw	10
 10660  345C  1903               	skipnz
 10661  345D  0273               	subwf	??_isdigit,w
 10662  345E  1803               	btfsc	3,0
 10663  345F  2C62               	goto	u7900
 10664  3460  3001               	movlw	1
 10665  3461  2C63               	goto	u7910
 10666  3462                     u7900:	
 10667  3462  3000               	movlw	0
 10668  3463                     u7910:	
 10669  3463  00F5               	movwf	??_isdigit+2
 10670  3464  01F6               	clrf	??_isdigit+3
 10671  3465  0875               	movf	??_isdigit+2,w
 10672  3466  00F1               	movwf	?_isdigit
 10673  3467  0876               	movf	??_isdigit+3,w
 10674  3468  00F2               	movwf	?_isdigit+1
 10675  3469  0008               	return
 10676  346A                     __end_of_isdigit:	
 10677                           
 10678                           	psect	text32
 10679  34DF                     __ptext32:	
 10680 ;; *************** function _EUSART_Write_Text *****************
 10681 ;; Defined at:
 10682 ;;		line 75 in file "EUSART.c"
 10683 ;; Parameters:    Size  Location     Type
 10684 ;;  text            2    2[COMMON] PTR unsigned char 
 10685 ;;		 -> STR_21(3), STR_8(3), STR_7(38), messageBuffer(127), 
 10686 ;; Auto vars:     Size  Location     Type
 10687 ;;  i               2    5[COMMON] int 
 10688 ;; Return value:  Size  Location     Type
 10689 ;;                  1    wreg      void 
 10690 ;; Registers used:
 10691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10692 ;; Tracked objects:
 10693 ;;		On entry : 0/0
 10694 ;;		On exit  : 0/0
 10695 ;;		Unchanged: 0/0
 10696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10698 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10699 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10700 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10701 ;;Total ram usage:        5 bytes
 10702 ;; Hardware stack levels used:    1
 10703 ;; Hardware stack levels required when called:    2
 10704 ;; This function calls:
 10705 ;;		_EUSART_Write
 10706 ;; This function is called by:
 10707 ;;		_statemachine
 10708 ;;		_printcellParameters
 10709 ;;		_printotAFERegisters
 10710 ;; This function uses a non-reentrant model
 10711 ;;
 10712                           
 10713                           
 10714                           ;psect for function _EUSART_Write_Text
 10715  34DF                     _EUSART_Write_Text:	
 10716                           
 10717                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10718                           
 10719                           ;incstack = 0
 10720                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10721  34DF  01F5               	clrf	EUSART_Write_Text@i
 10722  34E0  01F6               	clrf	EUSART_Write_Text@i+1
 10723  34E1                     l8026:	
 10724  34E1  0872               	movf	EUSART_Write_Text@text,w
 10725  34E2  0775               	addwf	EUSART_Write_Text@i,w
 10726  34E3  0084               	movwf	4
 10727  34E4  0873               	movf	EUSART_Write_Text@text+1,w
 10728  34E5  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10729  34E6  0085               	movwf	5
 10730  34E7  0012               	moviw fsr0++
 10731  34E8  1903               	btfsc	3,2
 10732  34E9  0008               	return
 10733                           
 10734                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10735  34EA  0872               	movf	EUSART_Write_Text@text,w
 10736  34EB  0775               	addwf	EUSART_Write_Text@i,w
 10737  34EC  0084               	movwf	4
 10738  34ED  0873               	movf	EUSART_Write_Text@text+1,w
 10739  34EE  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10740  34EF  0085               	movwf	5
 10741  34F0  0800               	movf	0,w	;code access
 10742  34F1  3188  2000  31B4   	fcall	_EUSART_Write
 10743  34F4  3001               	movlw	1
 10744  34F5  07F5               	addwf	EUSART_Write_Text@i,f
 10745  34F6  3000               	movlw	0
 10746  34F7  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10747  34F8  2CE1               	goto	l8026
 10748  34F9                     __end_of_EUSART_Write_Text:	
 10749                           
 10750                           	psect	text33
 10751  0800                     __ptext33:	
 10752 ;; *************** function _EUSART_Write *****************
 10753 ;; Defined at:
 10754 ;;		line 56 in file "EUSART.c"
 10755 ;; Parameters:    Size  Location     Type
 10756 ;;  txData          1    wreg     unsigned char 
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;  txData          1    1[COMMON] unsigned char 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  1    wreg      void 
 10761 ;; Registers used:
 10762 ;;		wreg
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10772 ;;Total ram usage:        1 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; Hardware stack levels required when called:    1
 10775 ;; This function calls:
 10776 ;;		Nothing
 10777 ;; This function is called by:
 10778 ;;		_EUSART_Write_Text
 10779 ;; This function uses a non-reentrant model
 10780 ;;
 10781                           
 10782                           
 10783                           ;psect for function _EUSART_Write
 10784  0800                     _EUSART_Write:	
 10785                           
 10786                           ;incstack = 0
 10787                           ; Regs used in _EUSART_Write: [wreg]
 10788                           ;EUSART_Write@txData stored from wreg
 10789  0800  00F1               	movwf	EUSART_Write@txData
 10790  0801                     l243:	
 10791                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 10792                           
 10793                           
 10794                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 10795  0801  0020               	movlb	0	; select bank0
 10796  0802  1E11               	btfss	17,4	;volatile
 10797  0803  2801               	goto	l243
 10798                           
 10799                           ;EUSART.c: 62:     TX1REG = txData;
 10800  0804  0871               	movf	EUSART_Write@txData,w
 10801  0805  0023               	movlb	3	; select bank3
 10802  0806  009A               	movwf	26	;volatile
 10803  0807  0008               	return
 10804  0808                     __end_of_EUSART_Write:	
 10805                           
 10806                           	psect	text34
 10807  28E5                     __ptext34:	
 10808 ;; *************** function _init_AFE *****************
 10809 ;; Defined at:
 10810 ;;		line 3 in file "BQ76920.c"
 10811 ;; Parameters:    Size  Location     Type
 10812 ;;		None
 10813 ;; Auto vars:     Size  Location     Type
 10814 ;;		None
 10815 ;; Return value:  Size  Location     Type
 10816 ;;                  1    wreg      void 
 10817 ;; Registers used:
 10818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10819 ;; Tracked objects:
 10820 ;;		On entry : 0/0
 10821 ;;		On exit  : 0/0
 10822 ;;		Unchanged: 0/0
 10823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10828 ;;Total ram usage:        0 bytes
 10829 ;; Hardware stack levels used:    1
 10830 ;; Hardware stack levels required when called:    4
 10831 ;; This function calls:
 10832 ;;		_setCellOvervoltageProtection
 10833 ;;		_setCellUndervoltageProtection
 10834 ;;		_setOverCurrentDischargeProtection
 10835 ;;		_setShortCircuitProtection
 10836 ;;		_setShuntResistorValue
 10837 ;;		_setTemperatureLimitsint
 10838 ;; This function is called by:
 10839 ;;		_statemachine
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           
 10844                           ;psect for function _init_AFE
 10845  28E5                     _init_AFE:	
 10846                           
 10847                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 10848                           
 10849                           ;incstack = 0
 10850                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10851  28E5  30EC               	movlw	236
 10852  28E6  0020               	movlb	0	; select bank0
 10853  28E7  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 10854  28E8  30FF               	movlw	255
 10855  28E9  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 10856  28EA  302D               	movlw	45
 10857  28EB  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 10858  28EC  3000               	movlw	0
 10859  28ED  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 10860  28EE  3000               	movlw	0
 10861  28EF  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 10862  28F0  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 10863  28F1  302D               	movlw	45
 10864  28F2  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 10865  28F3  3000               	movlw	0
 10866  28F4  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 10867  28F5  31B7  276B  31A8   	fcall	_setTemperatureLimitsint
 10868                           
 10869                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 10870  28F8  303C               	movlw	60
 10871  28F9  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 10872  28FA  30A3               	movlw	163
 10873  28FB  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 10874  28FC  30D7               	movlw	215
 10875  28FD  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 10876  28FE  300A               	movlw	10
 10877  28FF  00F1               	movwf	setShuntResistorValue@res_mOhm
 10878  2900  31B4  2412  31A8   	fcall	_setShuntResistorValue
 10879                           
 10880                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 10881  2903  3000               	movlw	0
 10882  2904  0020               	movlb	0	; select bank0
 10883  2905  00E9               	movwf	setShortCircuitProtection@current_mA+3
 10884  2906  3000               	movlw	0
 10885  2907  00E8               	movwf	setShortCircuitProtection@current_mA+2
 10886  2908  3009               	movlw	9
 10887  2909  00E7               	movwf	setShortCircuitProtection@current_mA+1
 10888  290A  30C4               	movlw	196
 10889  290B  00E6               	movwf	setShortCircuitProtection@current_mA
 10890  290C  30C8               	movlw	200
 10891  290D  00EA               	movwf	setShortCircuitProtection@delay_us
 10892  290E  3000               	movlw	0
 10893  290F  00EB               	movwf	setShortCircuitProtection@delay_us+1
 10894  2910  3198  2005  31A8   	fcall	_setShortCircuitProtection
 10895                           
 10896                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 10897  2913  3000               	movlw	0
 10898  2914  0020               	movlb	0	; select bank0
 10899  2915  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 10900  2916  3000               	movlw	0
 10901  2917  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 10902  2918  304E               	movlw	78
 10903  2919  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 10904  291A  3020               	movlw	32
 10905  291B  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 10906  291C  3040               	movlw	64
 10907  291D  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 10908  291E  3001               	movlw	1
 10909  291F  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 10910  2920  31A6  26EB  31A8   	fcall	_setOverCurrentDischargeProtection
 10911                           
 10912                           ;BQ76920.c: 10:     setCellUndervoltageProtection(2900, 2);
 10913  2923  3054               	movlw	84
 10914  2924  0020               	movlb	0	; select bank0
 10915  2925  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 10916  2926  300B               	movlw	11
 10917  2927  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 10918  2928  3002               	movlw	2
 10919  2929  00B4               	movwf	setCellUndervoltageProtection@delay_s
 10920  292A  3000               	movlw	0
 10921  292B  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 10922  292C  31A1  2174  31A8   	fcall	_setCellUndervoltageProtection
 10923                           
 10924                           ;BQ76920.c: 11:     setCellOvervoltageProtection(4100,2);
 10925  292F  3004               	movlw	4
 10926  2930  0020               	movlb	0	; select bank0
 10927  2931  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 10928  2932  3010               	movlw	16
 10929  2933  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 10930  2934  3002               	movlw	2
 10931  2935  00B4               	movwf	setCellOvervoltageProtection@delay_s
 10932  2936  3000               	movlw	0
 10933  2937  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 10934  2938  31A0  209F         	fcall	_setCellOvervoltageProtection
 10935  293A  0008               	return
 10936  293B                     __end_of_init_AFE:	
 10937                           
 10938                           	psect	text35
 10939  376B                     __ptext35:	
 10940 ;; *************** function _setTemperatureLimitsint *****************
 10941 ;; Defined at:
 10942 ;;		line 56 in file "BQ76920.c"
 10943 ;; Parameters:    Size  Location     Type
 10944 ;;  minDischarge    2    0[BANK0 ] int 
 10945 ;;  maxDischarge    2    2[BANK0 ] int 
 10946 ;;  minCharge_de    2    4[BANK0 ] int 
 10947 ;;  maxCharge_de    2    6[BANK0 ] int 
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;		None
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  1    wreg      void 
 10952 ;; Registers used:
 10953 ;;		wreg, status,2, status,0, pclath, cstack
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10959 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10962 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10963 ;;Total ram usage:        8 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    2
 10966 ;; This function calls:
 10967 ;;		___wmul
 10968 ;; This function is called by:
 10969 ;;		_init_AFE
 10970 ;; This function uses a non-reentrant model
 10971 ;;
 10972                           
 10973                           
 10974                           ;psect for function _setTemperatureLimitsint
 10975  376B                     _setTemperatureLimitsint:	
 10976                           
 10977                           ;BQ76920.c: 58:     minCellTempDischarge = minDischarge_degC * 10;
 10978                           
 10979                           ;incstack = 0
 10980                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 10981  376B  0020               	movlb	0	; select bank0
 10982  376C  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 10983  376D  00F2               	movwf	___wmul@multiplier+1
 10984  376E  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 10985  376F  00F1               	movwf	___wmul@multiplier
 10986  3770  300A               	movlw	10
 10987  3771  00F3               	movwf	___wmul@multiplicand
 10988  3772  3000               	movlw	0
 10989  3773  00F4               	movwf	___wmul@multiplicand+1
 10990  3774  31B4  24F9  31B7   	fcall	___wmul
 10991  3777  0872               	movf	?___wmul+1,w
 10992  3778  0023               	movlb	3	; select bank3
 10993  3779  00CF               	movwf	(_minCellTempDischarge+1)^(0+384)
 10994  377A  0871               	movf	?___wmul,w
 10995  377B  00CE               	movwf	_minCellTempDischarge^(0+384)
 10996                           
 10997                           ;BQ76920.c: 59:     maxCellTempDischarge = maxDischarge_degC * 10;
 10998  377C  0020               	movlb	0	; select bank0
 10999  377D  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 11000  377E  00F2               	movwf	___wmul@multiplier+1
 11001  377F  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 11002  3780  00F1               	movwf	___wmul@multiplier
 11003  3781  300A               	movlw	10
 11004  3782  00F3               	movwf	___wmul@multiplicand
 11005  3783  3000               	movlw	0
 11006  3784  00F4               	movwf	___wmul@multiplicand+1
 11007  3785  31B4  24F9  31B7   	fcall	___wmul
 11008  3788  0872               	movf	?___wmul+1,w
 11009  3789  0023               	movlb	3	; select bank3
 11010  378A  00CB               	movwf	(_maxCellTempDischarge+1)^(0+384)
 11011  378B  0871               	movf	?___wmul,w
 11012  378C  00CA               	movwf	_maxCellTempDischarge^(0+384)
 11013                           
 11014                           ;BQ76920.c: 60:     minCellTempCharge = minCharge_degC * 10;
 11015  378D  0020               	movlb	0	; select bank0
 11016  378E  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 11017  378F  00F2               	movwf	___wmul@multiplier+1
 11018  3790  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 11019  3791  00F1               	movwf	___wmul@multiplier
 11020  3792  300A               	movlw	10
 11021  3793  00F3               	movwf	___wmul@multiplicand
 11022  3794  3000               	movlw	0
 11023  3795  00F4               	movwf	___wmul@multiplicand+1
 11024  3796  31B4  24F9  31B7   	fcall	___wmul
 11025  3799  0872               	movf	?___wmul+1,w
 11026  379A  0023               	movlb	3	; select bank3
 11027  379B  00D1               	movwf	(_minCellTempCharge+1)^(0+384)
 11028  379C  0871               	movf	?___wmul,w
 11029  379D  00D0               	movwf	_minCellTempCharge^(0+384)
 11030                           
 11031                           ;BQ76920.c: 61:     maxCellTempCharge = maxCharge_degC * 10;
 11032  379E  0020               	movlb	0	; select bank0
 11033  379F  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 11034  37A0  00F2               	movwf	___wmul@multiplier+1
 11035  37A1  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 11036  37A2  00F1               	movwf	___wmul@multiplier
 11037  37A3  300A               	movlw	10
 11038  37A4  00F3               	movwf	___wmul@multiplicand
 11039  37A5  3000               	movlw	0
 11040  37A6  00F4               	movwf	___wmul@multiplicand+1
 11041  37A7  31B4  24F9         	fcall	___wmul
 11042  37A9  0872               	movf	?___wmul+1,w
 11043  37AA  0023               	movlb	3	; select bank3
 11044  37AB  00CD               	movwf	(_maxCellTempCharge+1)^(0+384)
 11045  37AC  0871               	movf	?___wmul,w
 11046  37AD  00CC               	movwf	_maxCellTempCharge^(0+384)
 11047  37AE  0008               	return
 11048  37AF                     __end_of_setTemperatureLimitsint:	
 11049                           
 11050                           	psect	text36
 11051  34F9                     __ptext36:	
 11052 ;; *************** function ___wmul *****************
 11053 ;; Defined at:
 11054 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11055 ;; Parameters:    Size  Location     Type
 11056 ;;  multiplier      2    1[COMMON] unsigned int 
 11057 ;;  multiplicand    2    3[COMMON] unsigned int 
 11058 ;; Auto vars:     Size  Location     Type
 11059 ;;  product         2    5[COMMON] unsigned int 
 11060 ;; Return value:  Size  Location     Type
 11061 ;;                  2    1[COMMON] unsigned int 
 11062 ;; Registers used:
 11063 ;;		wreg, status,2, status,0
 11064 ;; Tracked objects:
 11065 ;;		On entry : 0/0
 11066 ;;		On exit  : 0/0
 11067 ;;		Unchanged: 0/0
 11068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11072 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11073 ;;Total ram usage:        6 bytes
 11074 ;; Hardware stack levels used:    1
 11075 ;; Hardware stack levels required when called:    1
 11076 ;; This function calls:
 11077 ;;		Nothing
 11078 ;; This function is called by:
 11079 ;;		_setTemperatureLimitsint
 11080 ;;		_atoi
 11081 ;; This function uses a non-reentrant model
 11082 ;;
 11083                           
 11084                           
 11085                           ;psect for function ___wmul
 11086  34F9                     ___wmul:	
 11087                           
 11088                           ;incstack = 0
 11089                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11090  34F9  01F5               	clrf	___wmul@product
 11091  34FA  01F6               	clrf	___wmul@product+1
 11092  34FB                     l6338:	
 11093  34FB  1C71               	btfss	___wmul@multiplier,0
 11094  34FC  2D01               	goto	l847
 11095  34FD  0873               	movf	___wmul@multiplicand,w
 11096  34FE  07F5               	addwf	___wmul@product,f
 11097  34FF  0874               	movf	___wmul@multiplicand+1,w
 11098  3500  3DF6               	addwfc	___wmul@product+1,f
 11099  3501                     l847:	
 11100  3501  3001               	movlw	1
 11101  3502                     u7935:	
 11102  3502  35F3               	lslf	___wmul@multiplicand,f
 11103  3503  0DF4               	rlf	___wmul@multiplicand+1,f
 11104  3504  0B89               	decfsz	9,f
 11105  3505  2D02               	goto	u7935
 11106  3506  3001               	movlw	1
 11107  3507                     u7945:	
 11108  3507  36F2               	lsrf	___wmul@multiplier+1,f
 11109  3508  0CF1               	rrf	___wmul@multiplier,f
 11110  3509  0B89               	decfsz	9,f
 11111  350A  2D07               	goto	u7945
 11112  350B  0871               	movf	___wmul@multiplier,w
 11113  350C  0472               	iorwf	___wmul@multiplier+1,w
 11114  350D  1D03               	btfss	3,2
 11115  350E  2CFB               	goto	l6338
 11116  350F  0876               	movf	___wmul@product+1,w
 11117  3510  00F2               	movwf	?___wmul+1
 11118  3511  0875               	movf	___wmul@product,w
 11119  3512  00F1               	movwf	?___wmul
 11120  3513  0008               	return
 11121  3514                     __end_of___wmul:	
 11122                           
 11123                           	psect	text37
 11124  3412                     __ptext37:	
 11125 ;; *************** function _setShuntResistorValue *****************
 11126 ;; Defined at:
 11127 ;;		line 68 in file "BQ76920.c"
 11128 ;; Parameters:    Size  Location     Type
 11129 ;;  res_mOhm        4    1[COMMON] float 
 11130 ;; Auto vars:     Size  Location     Type
 11131 ;;		None
 11132 ;; Return value:  Size  Location     Type
 11133 ;;                  1    wreg      void 
 11134 ;; Registers used:
 11135 ;;		wreg
 11136 ;; Tracked objects:
 11137 ;;		On entry : 0/0
 11138 ;;		On exit  : 0/0
 11139 ;;		Unchanged: 0/0
 11140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11144 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11145 ;;Total ram usage:        4 bytes
 11146 ;; Hardware stack levels used:    1
 11147 ;; Hardware stack levels required when called:    1
 11148 ;; This function calls:
 11149 ;;		Nothing
 11150 ;; This function is called by:
 11151 ;;		_init_AFE
 11152 ;; This function uses a non-reentrant model
 11153 ;;
 11154                           
 11155                           
 11156                           ;psect for function _setShuntResistorValue
 11157  3412                     _setShuntResistorValue:	
 11158                           
 11159                           ;BQ76920.c: 69:     shuntResistorValue_mOhm = res_mOhm;
 11160                           
 11161                           ;incstack = 0
 11162                           ; Regs used in _setShuntResistorValue: [wreg]
 11163  3412  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11164  3413  0023               	movlb	3	; select bank3
 11165  3414  00B1               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 11166  3415  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11167  3416  00B0               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 11168  3417  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11169  3418  00AF               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 11170  3419  0871               	movf	setShuntResistorValue@res_mOhm,w
 11171  341A  00AE               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 11172  341B  0008               	return
 11173  341C                     __end_of_setShuntResistorValue:	
 11174                           
 11175                           	psect	text38
 11176  1805                     __ptext38:	
 11177 ;; *************** function _setShortCircuitProtection *****************
 11178 ;; Defined at:
 11179 ;;		line 76 in file "BQ76920.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;  current_mA      4   70[BANK0 ] long 
 11182 ;;  delay_us        2   74[BANK0 ] int 
 11183 ;; Auto vars:     Size  Location     Type
 11184 ;;  i               2   10[BANK1 ] int 
 11185 ;;  i               2    8[BANK1 ] int 
 11186 ;;  scaler          4    0[BANK1 ] float 
 11187 ;; Return value:  Size  Location     Type
 11188 ;;                  1    wreg      void 
 11189 ;; Registers used:
 11190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11191 ;; Tracked objects:
 11192 ;;		On entry : 0/0
 11193 ;;		On exit  : 0/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11196 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11197 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11198 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11199 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11200 ;;Total ram usage:       21 bytes
 11201 ;; Hardware stack levels used:    1
 11202 ;; Hardware stack levels required when called:    3
 11203 ;; This function calls:
 11204 ;;		_I2C_writeRegister
 11205 ;;		___fldiv
 11206 ;;		___flge
 11207 ;;		___flmul
 11208 ;;		___xxtofl
 11209 ;; This function is called by:
 11210 ;;		_init_AFE
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214                           
 11215                           ;psect for function _setShortCircuitProtection
 11216  1805                     _setShortCircuitProtection:	
 11217                           
 11218                           ;BQ76920.c: 81:     float scaler = 1000.0;
 11219                           
 11220                           ;incstack = 0
 11221                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11222  1805  3044               	movlw	68
 11223  1806  0021               	movlb	1	; select bank1
 11224  1807  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11225  1808  307A               	movlw	122
 11226  1809  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11227  180A  3000               	movlw	0
 11228  180B  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11229  180C  3000               	movlw	0
 11230  180D  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11231                           
 11232                           ;BQ76920.c: 82:     protect1.bits.SCD_THRESH = 0;
 11233  180E  30F8               	movlw	-8
 11234  180F  0023               	movlb	3	; select bank3
 11235  1810  05D4               	andwf	BQ76920@protect1^(0+384),f
 11236                           
 11237                           ;BQ76920.c: 83:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11238  1811  0021               	movlb	1	; select bank1
 11239  1812  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11240  1813  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11241  1814                     l8042:	
 11242                           
 11243                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11244  1814  0023               	movlb	3	; select bank3
 11245  1815  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 11246  1816  0020               	movlb	0	; select bank0
 11247  1817  00A9               	movwf	___flmul@b+3
 11248  1818  0023               	movlb	3	; select bank3
 11249  1819  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 11250  181A  0020               	movlb	0	; select bank0
 11251  181B  00A8               	movwf	___flmul@b+2
 11252  181C  0023               	movlb	3	; select bank3
 11253  181D  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 11254  181E  0020               	movlb	0	; select bank0
 11255  181F  00A7               	movwf	___flmul@b+1
 11256  1820  0023               	movlb	3	; select bank3
 11257  1821  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 11258  1822  0020               	movlb	0	; select bank0
 11259  1823  00A6               	movwf	___flmul@b
 11260  1824  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11261  1825  00F4               	movwf	___xxtofl@val+3
 11262  1826  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11263  1827  00F3               	movwf	___xxtofl@val+2
 11264  1828  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11265  1829  00F2               	movwf	___xxtofl@val+1
 11266  182A  0866               	movf	setShortCircuitProtection@current_mA,w
 11267  182B  00F1               	movwf	___xxtofl@val
 11268  182C  3001               	movlw	1
 11269  182D  31A0  2009  3198   	fcall	___xxtofl
 11270  1830  0874               	movf	?___xxtofl+3,w
 11271  1831  0020               	movlb	0	; select bank0
 11272  1832  00AD               	movwf	___flmul@a+3
 11273  1833  0873               	movf	?___xxtofl+2,w
 11274  1834  00AC               	movwf	___flmul@a+2
 11275  1835  0872               	movf	?___xxtofl+1,w
 11276  1836  00AB               	movwf	___flmul@a+1
 11277  1837  0871               	movf	?___xxtofl,w
 11278  1838  00AA               	movwf	___flmul@a
 11279  1839  3190  2023  3198   	fcall	___flmul
 11280  183C  0020               	movlb	0	; select bank0
 11281  183D  0829               	movf	?___flmul+3,w
 11282  183E  0021               	movlb	1	; select bank1
 11283  183F  00A7               	movwf	(_setShortCircuitProtection$2026+3)^(0+128)
 11284  1840  0020               	movlb	0	; select bank0
 11285  1841  0828               	movf	?___flmul+2,w
 11286  1842  0021               	movlb	1	; select bank1
 11287  1843  00A6               	movwf	(_setShortCircuitProtection$2026+2)^(0+128)
 11288  1844  0020               	movlb	0	; select bank0
 11289  1845  0827               	movf	?___flmul+1,w
 11290  1846  0021               	movlb	1	; select bank1
 11291  1847  00A5               	movwf	(_setShortCircuitProtection$2026+1)^(0+128)
 11292  1848  0020               	movlb	0	; select bank0
 11293  1849  0826               	movf	?___flmul,w
 11294  184A  0021               	movlb	1	; select bank1
 11295  184B  00A4               	movwf	_setShortCircuitProtection$2026^(0+128)
 11296                           
 11297                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11298  184C  3044               	movlw	68
 11299  184D  0020               	movlb	0	; select bank0
 11300  184E  00C3               	movwf	___fldiv@a+3
 11301  184F  307A               	movlw	122
 11302  1850  00C2               	movwf	___fldiv@a+2
 11303  1851  3000               	movlw	0
 11304  1852  00C1               	movwf	___fldiv@a+1
 11305  1853  3000               	movlw	0
 11306  1854  00C0               	movwf	___fldiv@a
 11307  1855  0021               	movlb	1	; select bank1
 11308  1856  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11309  1857  0020               	movlb	0	; select bank0
 11310  1858  00A9               	movwf	___flmul@b+3
 11311  1859  0021               	movlb	1	; select bank1
 11312  185A  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11313  185B  0020               	movlb	0	; select bank0
 11314  185C  00A8               	movwf	___flmul@b+2
 11315  185D  0021               	movlb	1	; select bank1
 11316  185E  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11317  185F  0020               	movlb	0	; select bank0
 11318  1860  00A7               	movwf	___flmul@b+1
 11319  1861  0021               	movlb	1	; select bank1
 11320  1862  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11321  1863  0020               	movlb	0	; select bank0
 11322  1864  00A6               	movwf	___flmul@b
 11323  1865  0021               	movlb	1	; select bank1
 11324  1866  0827               	movf	(_setShortCircuitProtection$2026+3)^(0+128),w
 11325  1867  0020               	movlb	0	; select bank0
 11326  1868  00AD               	movwf	___flmul@a+3
 11327  1869  0021               	movlb	1	; select bank1
 11328  186A  0826               	movf	(_setShortCircuitProtection$2026+2)^(0+128),w
 11329  186B  0020               	movlb	0	; select bank0
 11330  186C  00AC               	movwf	___flmul@a+2
 11331  186D  0021               	movlb	1	; select bank1
 11332  186E  0825               	movf	(_setShortCircuitProtection$2026+1)^(0+128),w
 11333  186F  0020               	movlb	0	; select bank0
 11334  1870  00AB               	movwf	___flmul@a+1
 11335  1871  0021               	movlb	1	; select bank1
 11336  1872  0824               	movf	_setShortCircuitProtection$2026^(0+128),w
 11337  1873  0020               	movlb	0	; select bank0
 11338  1874  00AA               	movwf	___flmul@a
 11339  1875  3190  2023  3198   	fcall	___flmul
 11340  1878  0020               	movlb	0	; select bank0
 11341  1879  0829               	movf	?___flmul+3,w
 11342  187A  00C7               	movwf	___fldiv@b+3
 11343  187B  0828               	movf	?___flmul+2,w
 11344  187C  00C6               	movwf	___fldiv@b+2
 11345  187D  0827               	movf	?___flmul+1,w
 11346  187E  00C5               	movwf	___fldiv@b+1
 11347  187F  0826               	movf	?___flmul,w
 11348  1880  00C4               	movwf	___fldiv@b
 11349  1881  319C  24E2  3198   	fcall	___fldiv
 11350  1884  0020               	movlb	0	; select bank0
 11351  1885  0843               	movf	?___fldiv+3,w
 11352  1886  00DD               	movwf	___flge@ff1+3
 11353  1887  0842               	movf	?___fldiv+2,w
 11354  1888  00DC               	movwf	___flge@ff1+2
 11355  1889  0841               	movf	?___fldiv+1,w
 11356  188A  00DB               	movwf	___flge@ff1+1
 11357  188B  0840               	movf	?___fldiv,w
 11358  188C  00DA               	movwf	___flge@ff1
 11359  188D  0021               	movlb	1	; select bank1
 11360  188E  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11361  188F  0085               	movwf	5
 11362  1890  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11363  1891  0084               	movwf	4
 11364  1892  3584               	lslf	4,f
 11365  1893  0D85               	rlf	5,f
 11366  1894  30BB               	movlw	low (_SCD_threshold_setting| (0+32768))
 11367  1895  0784               	addwf	4,f
 11368  1896  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 11369  1897  3D85               	addwfc	5,f
 11370  1898  3F00               	moviw [0]fsr0
 11371  1899  0020               	movlb	0	; select bank0
 11372  189A  00EC               	movwf	??_setShortCircuitProtection
 11373  189B  3F01               	moviw [1]fsr0
 11374  189C  00ED               	movwf	??_setShortCircuitProtection+1
 11375  189D  086C               	movf	??_setShortCircuitProtection,w
 11376  189E  00F1               	movwf	___xxtofl@val
 11377  189F  086D               	movf	??_setShortCircuitProtection+1,w
 11378  18A0  00F2               	movwf	___xxtofl@val+1
 11379  18A1  0D89               	rlf	9,f
 11380  18A2  3B89               	subwfb	9,f
 11381  18A3  0989               	comf	9,f
 11382  18A4  00F3               	movwf	___xxtofl@val+2
 11383  18A5  00F4               	movwf	___xxtofl@val+3
 11384  18A6  3001               	movlw	1
 11385  18A7  31A0  2009  3198   	fcall	___xxtofl
 11386  18AA  0874               	movf	?___xxtofl+3,w
 11387  18AB  0020               	movlb	0	; select bank0
 11388  18AC  00E1               	movwf	___flge@ff2+3
 11389  18AD  0873               	movf	?___xxtofl+2,w
 11390  18AE  00E0               	movwf	___flge@ff2+2
 11391  18AF  0872               	movf	?___xxtofl+1,w
 11392  18B0  00DF               	movwf	___flge@ff2+1
 11393  18B1  0871               	movf	?___xxtofl,w
 11394  18B2  00DE               	movwf	___flge@ff2
 11395  18B3  31AA  2282  3198   	fcall	___flge
 11396  18B6  1C03               	btfss	3,0
 11397  18B7  28C0               	goto	l8048
 11398                           
 11399                           ;BQ76920.c: 85:             protect1.bits.SCD_THRESH = i;
 11400  18B8  0023               	movlb	3	; select bank3
 11401  18B9  0854               	movf	BQ76920@protect1^(0+384),w
 11402  18BA  0021               	movlb	1	; select bank1
 11403  18BB  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11404  18BC  39F8               	andlw	-8
 11405  18BD  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11406  18BE  0023               	movlb	3	; select bank3
 11407  18BF  00D4               	movwf	BQ76920@protect1^(0+384)
 11408  18C0                     l8048:	
 11409                           
 11410                           ;BQ76920.c: 87:     }
 11411  18C0  3001               	movlw	1
 11412  18C1  0021               	movlb	1	; select bank1
 11413  18C2  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11414  18C3  3000               	movlw	0
 11415  18C4  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11416  18C5  3000               	movlw	0
 11417  18C6  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11418  18C7  3007               	movlw	7
 11419  18C8  1903               	skipnz
 11420  18C9  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11421  18CA  1C03               	skipc
 11422  18CB  2814               	goto	l8042
 11423                           
 11424                           ;BQ76920.c: 89:     protect1.bits.SCD_DELAY = 0;
 11425  18CC  30E7               	movlw	-25
 11426  18CD  0023               	movlb	3	; select bank3
 11427  18CE  05D4               	andwf	BQ76920@protect1^(0+384),f
 11428                           
 11429                           ;BQ76920.c: 90:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11430  18CF  0021               	movlb	1	; select bank1
 11431  18D0  01AA               	clrf	setShortCircuitProtection@i_972^(0+128)
 11432  18D1  01AB               	clrf	(setShortCircuitProtection@i_972+1)^(0+128)
 11433  18D2                     l8060:	
 11434                           
 11435                           ;BQ76920.c: 91:         if (delay_us >= SCD_delay_setting[i]) {
 11436  18D2  082B               	movf	(setShortCircuitProtection@i_972+1)^(0+128),w
 11437  18D3  0085               	movwf	5
 11438  18D4  082A               	movf	setShortCircuitProtection@i_972^(0+128),w
 11439  18D5  0084               	movwf	4
 11440  18D6  3584               	lslf	4,f
 11441  18D7  0D85               	rlf	5,f
 11442  18D8  30F9               	movlw	low (_SCD_delay_setting| (0+32768))
 11443  18D9  0784               	addwf	4,f
 11444  18DA  30B9               	movlw	high (_SCD_delay_setting| (0+32768))
 11445  18DB  3D85               	addwfc	5,f
 11446  18DC  3F00               	moviw [0]fsr0
 11447  18DD  0020               	movlb	0	; select bank0
 11448  18DE  00EC               	movwf	??_setShortCircuitProtection
 11449  18DF  3F01               	moviw [1]fsr0
 11450  18E0  00ED               	movwf	??_setShortCircuitProtection+1
 11451  18E1  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11452  18E2  3A80               	xorlw	128
 11453  18E3  00EE               	movwf	??_setShortCircuitProtection+2
 11454  18E4  086D               	movf	??_setShortCircuitProtection+1,w
 11455  18E5  3A80               	xorlw	128
 11456  18E6  026E               	subwf	??_setShortCircuitProtection+2,w
 11457  18E7  1D03               	skipz
 11458  18E8  28EB               	goto	u11165
 11459  18E9  086C               	movf	??_setShortCircuitProtection,w
 11460  18EA  026A               	subwf	setShortCircuitProtection@delay_us,w
 11461  18EB                     u11165:	
 11462  18EB  1C03               	skipc
 11463  18EC  28FC               	goto	l8064
 11464                           
 11465                           ;BQ76920.c: 92:             protect1.bits.SCD_DELAY = i;
 11466  18ED  0021               	movlb	1	; select bank1
 11467  18EE  082A               	movf	setShortCircuitProtection@i_972^(0+128),w
 11468  18EF  0020               	movlb	0	; select bank0
 11469  18F0  00EC               	movwf	??_setShortCircuitProtection
 11470  18F1  0DEC               	rlf	??_setShortCircuitProtection,f
 11471  18F2  0DEC               	rlf	??_setShortCircuitProtection,f
 11472  18F3  0DEC               	rlf	??_setShortCircuitProtection,f
 11473  18F4  0023               	movlb	3	; select bank3
 11474  18F5  0854               	movf	BQ76920@protect1^(0+384),w
 11475  18F6  0020               	movlb	0	; select bank0
 11476  18F7  066C               	xorwf	??_setShortCircuitProtection,w
 11477  18F8  39E7               	andlw	-25
 11478  18F9  066C               	xorwf	??_setShortCircuitProtection,w
 11479  18FA  0023               	movlb	3	; select bank3
 11480  18FB  00D4               	movwf	BQ76920@protect1^(0+384)
 11481  18FC                     l8064:	
 11482                           
 11483                           ;BQ76920.c: 94:     }
 11484  18FC  3001               	movlw	1
 11485  18FD  0021               	movlb	1	; select bank1
 11486  18FE  07AA               	addwf	setShortCircuitProtection@i_972^(0+128),f
 11487  18FF  3000               	movlw	0
 11488  1900  3DAB               	addwfc	(setShortCircuitProtection@i_972+1)^(0+128),f
 11489  1901  3000               	movlw	0
 11490  1902  022B               	subwf	(setShortCircuitProtection@i_972+1)^(0+128),w
 11491  1903  3007               	movlw	7
 11492  1904  1903               	skipnz
 11493  1905  022A               	subwf	setShortCircuitProtection@i_972^(0+128),w
 11494  1906  1C03               	skipc
 11495  1907  28D2               	goto	l8060
 11496                           
 11497                           ;BQ76920.c: 96:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11498  1908  3018               	movlw	24
 11499  1909  00F5               	movwf	I2C_writeRegister@slaveAddress
 11500  190A  3000               	movlw	0
 11501  190B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11502  190C  3006               	movlw	6
 11503  190D  00F7               	movwf	I2C_writeRegister@regAddress
 11504  190E  3000               	movlw	0
 11505  190F  00F8               	movwf	I2C_writeRegister@regAddress+1
 11506  1910  0023               	movlb	3	; select bank3
 11507  1911  0854               	movf	BQ76920@protect1^(0+384),w
 11508  1912  0020               	movlb	0	; select bank0
 11509  1913  00EC               	movwf	??_setShortCircuitProtection
 11510  1914  01ED               	clrf	??_setShortCircuitProtection+1
 11511  1915  086C               	movf	??_setShortCircuitProtection,w
 11512  1916  00F9               	movwf	I2C_writeRegister@data
 11513  1917  086D               	movf	??_setShortCircuitProtection+1,w
 11514  1918  00FA               	movwf	I2C_writeRegister@data+1
 11515  1919  31B5  2583         	fcall	_I2C_writeRegister
 11516  191B  0008               	return
 11517  191C                     __end_of_setShortCircuitProtection:	
 11518                           
 11519                           	psect	text39
 11520  26EB                     __ptext39:	
 11521 ;; *************** function _setOverCurrentDischargeProtection *****************
 11522 ;; Defined at:
 11523 ;;		line 103 in file "BQ76920.c"
 11524 ;; Parameters:    Size  Location     Type
 11525 ;;  current_mA      4   70[BANK0 ] long 
 11526 ;;  delay_ms        2   74[BANK0 ] int 
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;  i               2   10[BANK1 ] int 
 11529 ;;  i               2    8[BANK1 ] int 
 11530 ;;  scaler          4    0[BANK1 ] float 
 11531 ;; Return value:  Size  Location     Type
 11532 ;;                  1    wreg      void 
 11533 ;; Registers used:
 11534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11535 ;; Tracked objects:
 11536 ;;		On entry : 0/0
 11537 ;;		On exit  : 0/0
 11538 ;;		Unchanged: 0/0
 11539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11540 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11541 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11542 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11543 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11544 ;;Total ram usage:       21 bytes
 11545 ;; Hardware stack levels used:    1
 11546 ;; Hardware stack levels required when called:    3
 11547 ;; This function calls:
 11548 ;;		_I2C_writeRegister
 11549 ;;		___fldiv
 11550 ;;		___flge
 11551 ;;		___flmul
 11552 ;;		___xxtofl
 11553 ;; This function is called by:
 11554 ;;		_init_AFE
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           
 11559                           ;psect for function _setOverCurrentDischargeProtection
 11560  26EB                     _setOverCurrentDischargeProtection:	
 11561                           
 11562                           ;BQ76920.c: 106:     float scaler = 1000.0;
 11563                           
 11564                           ;incstack = 0
 11565                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11566  26EB  3044               	movlw	68
 11567  26EC  0021               	movlb	1	; select bank1
 11568  26ED  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11569  26EE  307A               	movlw	122
 11570  26EF  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11571  26F0  3000               	movlw	0
 11572  26F1  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11573  26F2  3000               	movlw	0
 11574  26F3  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11575                           
 11576                           ;BQ76920.c: 107:     protect2.bits.OCD_THRESH = 0;
 11577  26F4  30F0               	movlw	-16
 11578  26F5  0023               	movlb	3	; select bank3
 11579  26F6  05D3               	andwf	BQ76920@protect2^(0+384),f
 11580                           
 11581                           ;BQ76920.c: 108:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11582  26F7  0021               	movlb	1	; select bank1
 11583  26F8  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11584  26F9  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11585  26FA                     l8080:	
 11586                           
 11587                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11588  26FA  0023               	movlb	3	; select bank3
 11589  26FB  0831               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 11590  26FC  0020               	movlb	0	; select bank0
 11591  26FD  00A9               	movwf	___flmul@b+3
 11592  26FE  0023               	movlb	3	; select bank3
 11593  26FF  0830               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 11594  2700  0020               	movlb	0	; select bank0
 11595  2701  00A8               	movwf	___flmul@b+2
 11596  2702  0023               	movlb	3	; select bank3
 11597  2703  082F               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 11598  2704  0020               	movlb	0	; select bank0
 11599  2705  00A7               	movwf	___flmul@b+1
 11600  2706  0023               	movlb	3	; select bank3
 11601  2707  082E               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 11602  2708  0020               	movlb	0	; select bank0
 11603  2709  00A6               	movwf	___flmul@b
 11604  270A  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11605  270B  00F4               	movwf	___xxtofl@val+3
 11606  270C  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11607  270D  00F3               	movwf	___xxtofl@val+2
 11608  270E  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11609  270F  00F2               	movwf	___xxtofl@val+1
 11610  2710  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11611  2711  00F1               	movwf	___xxtofl@val
 11612  2712  3001               	movlw	1
 11613  2713  31A0  2009  31A6   	fcall	___xxtofl
 11614  2716  0874               	movf	?___xxtofl+3,w
 11615  2717  0020               	movlb	0	; select bank0
 11616  2718  00AD               	movwf	___flmul@a+3
 11617  2719  0873               	movf	?___xxtofl+2,w
 11618  271A  00AC               	movwf	___flmul@a+2
 11619  271B  0872               	movf	?___xxtofl+1,w
 11620  271C  00AB               	movwf	___flmul@a+1
 11621  271D  0871               	movf	?___xxtofl,w
 11622  271E  00AA               	movwf	___flmul@a
 11623  271F  3190  2023  31A6   	fcall	___flmul
 11624  2722  0020               	movlb	0	; select bank0
 11625  2723  0829               	movf	?___flmul+3,w
 11626  2724  0021               	movlb	1	; select bank1
 11627  2725  00A7               	movwf	(_setOverCurrentDischargeProtection$2027+3)^(0+128)
 11628  2726  0020               	movlb	0	; select bank0
 11629  2727  0828               	movf	?___flmul+2,w
 11630  2728  0021               	movlb	1	; select bank1
 11631  2729  00A6               	movwf	(_setOverCurrentDischargeProtection$2027+2)^(0+128)
 11632  272A  0020               	movlb	0	; select bank0
 11633  272B  0827               	movf	?___flmul+1,w
 11634  272C  0021               	movlb	1	; select bank1
 11635  272D  00A5               	movwf	(_setOverCurrentDischargeProtection$2027+1)^(0+128)
 11636  272E  0020               	movlb	0	; select bank0
 11637  272F  0826               	movf	?___flmul,w
 11638  2730  0021               	movlb	1	; select bank1
 11639  2731  00A4               	movwf	_setOverCurrentDischargeProtection$2027^(0+128)
 11640                           
 11641                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11642  2732  3044               	movlw	68
 11643  2733  0020               	movlb	0	; select bank0
 11644  2734  00C3               	movwf	___fldiv@a+3
 11645  2735  307A               	movlw	122
 11646  2736  00C2               	movwf	___fldiv@a+2
 11647  2737  3000               	movlw	0
 11648  2738  00C1               	movwf	___fldiv@a+1
 11649  2739  3000               	movlw	0
 11650  273A  00C0               	movwf	___fldiv@a
 11651  273B  0021               	movlb	1	; select bank1
 11652  273C  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 11653  273D  0020               	movlb	0	; select bank0
 11654  273E  00A9               	movwf	___flmul@b+3
 11655  273F  0021               	movlb	1	; select bank1
 11656  2740  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 11657  2741  0020               	movlb	0	; select bank0
 11658  2742  00A8               	movwf	___flmul@b+2
 11659  2743  0021               	movlb	1	; select bank1
 11660  2744  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 11661  2745  0020               	movlb	0	; select bank0
 11662  2746  00A7               	movwf	___flmul@b+1
 11663  2747  0021               	movlb	1	; select bank1
 11664  2748  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 11665  2749  0020               	movlb	0	; select bank0
 11666  274A  00A6               	movwf	___flmul@b
 11667  274B  0021               	movlb	1	; select bank1
 11668  274C  0827               	movf	(_setOverCurrentDischargeProtection$2027+3)^(0+128),w
 11669  274D  0020               	movlb	0	; select bank0
 11670  274E  00AD               	movwf	___flmul@a+3
 11671  274F  0021               	movlb	1	; select bank1
 11672  2750  0826               	movf	(_setOverCurrentDischargeProtection$2027+2)^(0+128),w
 11673  2751  0020               	movlb	0	; select bank0
 11674  2752  00AC               	movwf	___flmul@a+2
 11675  2753  0021               	movlb	1	; select bank1
 11676  2754  0825               	movf	(_setOverCurrentDischargeProtection$2027+1)^(0+128),w
 11677  2755  0020               	movlb	0	; select bank0
 11678  2756  00AB               	movwf	___flmul@a+1
 11679  2757  0021               	movlb	1	; select bank1
 11680  2758  0824               	movf	_setOverCurrentDischargeProtection$2027^(0+128),w
 11681  2759  0020               	movlb	0	; select bank0
 11682  275A  00AA               	movwf	___flmul@a
 11683  275B  3190  2023  31A6   	fcall	___flmul
 11684  275E  0020               	movlb	0	; select bank0
 11685  275F  0829               	movf	?___flmul+3,w
 11686  2760  00C7               	movwf	___fldiv@b+3
 11687  2761  0828               	movf	?___flmul+2,w
 11688  2762  00C6               	movwf	___fldiv@b+2
 11689  2763  0827               	movf	?___flmul+1,w
 11690  2764  00C5               	movwf	___fldiv@b+1
 11691  2765  0826               	movf	?___flmul,w
 11692  2766  00C4               	movwf	___fldiv@b
 11693  2767  319C  24E2  31A6   	fcall	___fldiv
 11694  276A  0020               	movlb	0	; select bank0
 11695  276B  0843               	movf	?___fldiv+3,w
 11696  276C  00DD               	movwf	___flge@ff1+3
 11697  276D  0842               	movf	?___fldiv+2,w
 11698  276E  00DC               	movwf	___flge@ff1+2
 11699  276F  0841               	movf	?___fldiv+1,w
 11700  2770  00DB               	movwf	___flge@ff1+1
 11701  2771  0840               	movf	?___fldiv,w
 11702  2772  00DA               	movwf	___flge@ff1
 11703  2773  0021               	movlb	1	; select bank1
 11704  2774  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11705  2775  0085               	movwf	5
 11706  2776  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 11707  2777  0084               	movwf	4
 11708  2778  3584               	lslf	4,f
 11709  2779  0D85               	rlf	5,f
 11710  277A  3097               	movlw	low (_OCD_threshold_setting| (0+32768))
 11711  277B  0784               	addwf	4,f
 11712  277C  30B8               	movlw	high (_OCD_threshold_setting| (0+32768))
 11713  277D  3D85               	addwfc	5,f
 11714  277E  3F00               	moviw [0]fsr0
 11715  277F  0020               	movlb	0	; select bank0
 11716  2780  00EC               	movwf	??_setOverCurrentDischargeProtection
 11717  2781  3F01               	moviw [1]fsr0
 11718  2782  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11719  2783  086C               	movf	??_setOverCurrentDischargeProtection,w
 11720  2784  00F1               	movwf	___xxtofl@val
 11721  2785  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11722  2786  00F2               	movwf	___xxtofl@val+1
 11723  2787  0D89               	rlf	9,f
 11724  2788  3B89               	subwfb	9,f
 11725  2789  0989               	comf	9,f
 11726  278A  00F3               	movwf	___xxtofl@val+2
 11727  278B  00F4               	movwf	___xxtofl@val+3
 11728  278C  3001               	movlw	1
 11729  278D  31A0  2009  31A6   	fcall	___xxtofl
 11730  2790  0874               	movf	?___xxtofl+3,w
 11731  2791  0020               	movlb	0	; select bank0
 11732  2792  00E1               	movwf	___flge@ff2+3
 11733  2793  0873               	movf	?___xxtofl+2,w
 11734  2794  00E0               	movwf	___flge@ff2+2
 11735  2795  0872               	movf	?___xxtofl+1,w
 11736  2796  00DF               	movwf	___flge@ff2+1
 11737  2797  0871               	movf	?___xxtofl,w
 11738  2798  00DE               	movwf	___flge@ff2
 11739  2799  31AA  2282  31A6   	fcall	___flge
 11740  279C  1C03               	btfss	3,0
 11741  279D  2FA6               	goto	l8086
 11742                           
 11743                           ;BQ76920.c: 110:             protect2.bits.OCD_THRESH = i;
 11744  279E  0023               	movlb	3	; select bank3
 11745  279F  0853               	movf	BQ76920@protect2^(0+384),w
 11746  27A0  0021               	movlb	1	; select bank1
 11747  27A1  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11748  27A2  39F0               	andlw	-16
 11749  27A3  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11750  27A4  0023               	movlb	3	; select bank3
 11751  27A5  00D3               	movwf	BQ76920@protect2^(0+384)
 11752  27A6                     l8086:	
 11753                           
 11754                           ;BQ76920.c: 112:     }
 11755  27A6  3001               	movlw	1
 11756  27A7  0021               	movlb	1	; select bank1
 11757  27A8  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 11758  27A9  3000               	movlw	0
 11759  27AA  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 11760  27AB  3000               	movlw	0
 11761  27AC  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11762  27AD  300F               	movlw	15
 11763  27AE  1903               	skipnz
 11764  27AF  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 11765  27B0  1C03               	skipc
 11766  27B1  2EFA               	goto	l8080
 11767                           
 11768                           ;BQ76920.c: 114:     protect2.bits.OCD_DELAY = 0;
 11769  27B2  308F               	movlw	-113
 11770  27B3  0023               	movlb	3	; select bank3
 11771  27B4  05D3               	andwf	BQ76920@protect2^(0+384),f
 11772                           
 11773                           ;BQ76920.c: 115:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 11774  27B5  0021               	movlb	1	; select bank1
 11775  27B6  01AA               	clrf	setOverCurrentDischargeProtection@i_981^(0+128)
 11776  27B7  01AB               	clrf	(setOverCurrentDischargeProtection@i_981+1)^(0+128)
 11777  27B8                     l8098:	
 11778                           
 11779                           ;BQ76920.c: 116:         if (delay_ms >= OCD_delay_setting[i]) {
 11780  27B8  082B               	movf	(setOverCurrentDischargeProtection@i_981+1)^(0+128),w
 11781  27B9  0085               	movwf	5
 11782  27BA  082A               	movf	setOverCurrentDischargeProtection@i_981^(0+128),w
 11783  27BB  0084               	movwf	4
 11784  27BC  3584               	lslf	4,f
 11785  27BD  0D85               	rlf	5,f
 11786  27BE  30AB               	movlw	low (_OCD_delay_setting| (0+32768))
 11787  27BF  0784               	addwf	4,f
 11788  27C0  30B9               	movlw	high (_OCD_delay_setting| (0+32768))
 11789  27C1  3D85               	addwfc	5,f
 11790  27C2  3F00               	moviw [0]fsr0
 11791  27C3  0020               	movlb	0	; select bank0
 11792  27C4  00EC               	movwf	??_setOverCurrentDischargeProtection
 11793  27C5  3F01               	moviw [1]fsr0
 11794  27C6  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11795  27C7  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 11796  27C8  3A80               	xorlw	128
 11797  27C9  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 11798  27CA  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11799  27CB  3A80               	xorlw	128
 11800  27CC  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 11801  27CD  1D03               	skipz
 11802  27CE  2FD1               	goto	u11205
 11803  27CF  086C               	movf	??_setOverCurrentDischargeProtection,w
 11804  27D0  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 11805  27D1                     u11205:	
 11806  27D1  1C03               	skipc
 11807  27D2  2FE0               	goto	l8102
 11808                           
 11809                           ;BQ76920.c: 117:             protect2.bits.OCD_DELAY = i;
 11810  27D3  0021               	movlb	1	; select bank1
 11811  27D4  082A               	movf	setOverCurrentDischargeProtection@i_981^(0+128),w
 11812  27D5  0020               	movlb	0	; select bank0
 11813  27D6  00EC               	movwf	??_setOverCurrentDischargeProtection
 11814  27D7  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 11815  27D8  0023               	movlb	3	; select bank3
 11816  27D9  0853               	movf	BQ76920@protect2^(0+384),w
 11817  27DA  0020               	movlb	0	; select bank0
 11818  27DB  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11819  27DC  398F               	andlw	-113
 11820  27DD  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11821  27DE  0023               	movlb	3	; select bank3
 11822  27DF  00D3               	movwf	BQ76920@protect2^(0+384)
 11823  27E0                     l8102:	
 11824                           
 11825                           ;BQ76920.c: 119:     }
 11826  27E0  3001               	movlw	1
 11827  27E1  0021               	movlb	1	; select bank1
 11828  27E2  07AA               	addwf	setOverCurrentDischargeProtection@i_981^(0+128),f
 11829  27E3  3000               	movlw	0
 11830  27E4  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_981+1)^(0+128),f
 11831  27E5  3000               	movlw	0
 11832  27E6  022B               	subwf	(setOverCurrentDischargeProtection@i_981+1)^(0+128),w
 11833  27E7  3007               	movlw	7
 11834  27E8  1903               	skipnz
 11835  27E9  022A               	subwf	setOverCurrentDischargeProtection@i_981^(0+128),w
 11836  27EA  1C03               	skipc
 11837  27EB  2FB8               	goto	l8098
 11838                           
 11839                           ;BQ76920.c: 121:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 11840  27EC  3018               	movlw	24
 11841  27ED  00F5               	movwf	I2C_writeRegister@slaveAddress
 11842  27EE  3000               	movlw	0
 11843  27EF  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11844  27F0  3007               	movlw	7
 11845  27F1  00F7               	movwf	I2C_writeRegister@regAddress
 11846  27F2  3000               	movlw	0
 11847  27F3  00F8               	movwf	I2C_writeRegister@regAddress+1
 11848  27F4  0023               	movlb	3	; select bank3
 11849  27F5  0853               	movf	BQ76920@protect2^(0+384),w
 11850  27F6  0020               	movlb	0	; select bank0
 11851  27F7  00EC               	movwf	??_setOverCurrentDischargeProtection
 11852  27F8  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 11853  27F9  086C               	movf	??_setOverCurrentDischargeProtection,w
 11854  27FA  00F9               	movwf	I2C_writeRegister@data
 11855  27FB  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11856  27FC  00FA               	movwf	I2C_writeRegister@data+1
 11857  27FD  31B5  2583         	fcall	_I2C_writeRegister
 11858  27FF  0008               	return
 11859  2800                     __end_of_setOverCurrentDischargeProtection:	
 11860                           
 11861                           	psect	text40
 11862  2A82                     __ptext40:	
 11863 ;; *************** function ___flge *****************
 11864 ;; Defined at:
 11865 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11866 ;; Parameters:    Size  Location     Type
 11867 ;;  ff1             4   58[BANK0 ] void 
 11868 ;;  ff2             4   62[BANK0 ] void 
 11869 ;; Auto vars:     Size  Location     Type
 11870 ;;		None
 11871 ;; Return value:  Size  Location     Type
 11872 ;;		None               void
 11873 ;; Registers used:
 11874 ;;		wreg, status,2, status,0
 11875 ;; Tracked objects:
 11876 ;;		On entry : 0/0
 11877 ;;		On exit  : 0/0
 11878 ;;		Unchanged: 0/0
 11879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11880 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11882 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11883 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11884 ;;Total ram usage:       12 bytes
 11885 ;; Hardware stack levels used:    1
 11886 ;; Hardware stack levels required when called:    1
 11887 ;; This function calls:
 11888 ;;		Nothing
 11889 ;; This function is called by:
 11890 ;;		_setShortCircuitProtection
 11891 ;;		_setOverCurrentDischargeProtection
 11892 ;; This function uses a non-reentrant model
 11893 ;;
 11894                           
 11895                           
 11896                           ;psect for function ___flge
 11897  2A82                     ___flge:	
 11898                           
 11899                           ;incstack = 0
 11900                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11901  2A82  3000               	movlw	0
 11902  2A83  0020               	movlb	0	; select bank0
 11903  2A84  055A               	andwf	___flge@ff1,w
 11904  2A85  00E2               	movwf	??___flge
 11905  2A86  3000               	movlw	0
 11906  2A87  055B               	andwf	___flge@ff1+1,w
 11907  2A88  00E3               	movwf	??___flge+1
 11908  2A89  3080               	movlw	128
 11909  2A8A  055C               	andwf	___flge@ff1+2,w
 11910  2A8B  00E4               	movwf	??___flge+2
 11911  2A8C  307F               	movlw	127
 11912  2A8D  055D               	andwf	___flge@ff1+3,w
 11913  2A8E  00E5               	movwf	??___flge+3
 11914  2A8F  0865               	movf	??___flge+3,w
 11915  2A90  0464               	iorwf	??___flge+2,w
 11916  2A91  0463               	iorwf	??___flge+1,w
 11917  2A92  0462               	iorwf	??___flge,w
 11918  2A93  1D03               	skipz
 11919  2A94  2A9D               	goto	l1025
 11920  2A95  3000               	movlw	0
 11921  2A96  00DD               	movwf	___flge@ff1+3
 11922  2A97  3000               	movlw	0
 11923  2A98  00DC               	movwf	___flge@ff1+2
 11924  2A99  3000               	movlw	0
 11925  2A9A  00DB               	movwf	___flge@ff1+1
 11926  2A9B  3000               	movlw	0
 11927  2A9C  00DA               	movwf	___flge@ff1
 11928  2A9D                     l1025:	
 11929  2A9D  3000               	movlw	0
 11930  2A9E  055E               	andwf	___flge@ff2,w
 11931  2A9F  00E2               	movwf	??___flge
 11932  2AA0  3000               	movlw	0
 11933  2AA1  055F               	andwf	___flge@ff2+1,w
 11934  2AA2  00E3               	movwf	??___flge+1
 11935  2AA3  3080               	movlw	128
 11936  2AA4  0560               	andwf	___flge@ff2+2,w
 11937  2AA5  00E4               	movwf	??___flge+2
 11938  2AA6  307F               	movlw	127
 11939  2AA7  0561               	andwf	___flge@ff2+3,w
 11940  2AA8  00E5               	movwf	??___flge+3
 11941  2AA9  0865               	movf	??___flge+3,w
 11942  2AAA  0464               	iorwf	??___flge+2,w
 11943  2AAB  0463               	iorwf	??___flge+1,w
 11944  2AAC  0462               	iorwf	??___flge,w
 11945  2AAD  1D03               	skipz
 11946  2AAE  2AB7               	goto	l7914
 11947  2AAF  3000               	movlw	0
 11948  2AB0  00E1               	movwf	___flge@ff2+3
 11949  2AB1  3000               	movlw	0
 11950  2AB2  00E0               	movwf	___flge@ff2+2
 11951  2AB3  3000               	movlw	0
 11952  2AB4  00DF               	movwf	___flge@ff2+1
 11953  2AB5  3000               	movlw	0
 11954  2AB6  00DE               	movwf	___flge@ff2
 11955  2AB7                     l7914:	
 11956  2AB7  1FDD               	btfss	___flge@ff1+3,7
 11957  2AB8  2AD1               	goto	l7918
 11958  2AB9  3000               	movlw	0
 11959  2ABA  00E2               	movwf	??___flge
 11960  2ABB  3000               	movlw	0
 11961  2ABC  00E3               	movwf	??___flge+1
 11962  2ABD  3000               	movlw	0
 11963  2ABE  00E4               	movwf	??___flge+2
 11964  2ABF  3080               	movlw	128
 11965  2AC0  00E5               	movwf	??___flge+3
 11966  2AC1  085A               	movf	___flge@ff1,w
 11967  2AC2  02E2               	subwf	??___flge,f
 11968  2AC3  085B               	movf	___flge@ff1+1,w
 11969  2AC4  3BE3               	subwfb	??___flge+1,f
 11970  2AC5  085C               	movf	___flge@ff1+2,w
 11971  2AC6  3BE4               	subwfb	??___flge+2,f
 11972  2AC7  085D               	movf	___flge@ff1+3,w
 11973  2AC8  3BE5               	subwfb	??___flge+3,f
 11974  2AC9  0865               	movf	??___flge+3,w
 11975  2ACA  00DD               	movwf	___flge@ff1+3
 11976  2ACB  0864               	movf	??___flge+2,w
 11977  2ACC  00DC               	movwf	___flge@ff1+2
 11978  2ACD  0863               	movf	??___flge+1,w
 11979  2ACE  00DB               	movwf	___flge@ff1+1
 11980  2ACF  0862               	movf	??___flge,w
 11981  2AD0  00DA               	movwf	___flge@ff1
 11982  2AD1                     l7918:	
 11983  2AD1  1FE1               	btfss	___flge@ff2+3,7
 11984  2AD2  2AEB               	goto	l1028
 11985  2AD3  3000               	movlw	0
 11986  2AD4  00E2               	movwf	??___flge
 11987  2AD5  3000               	movlw	0
 11988  2AD6  00E3               	movwf	??___flge+1
 11989  2AD7  3000               	movlw	0
 11990  2AD8  00E4               	movwf	??___flge+2
 11991  2AD9  3080               	movlw	128
 11992  2ADA  00E5               	movwf	??___flge+3
 11993  2ADB  085E               	movf	___flge@ff2,w
 11994  2ADC  02E2               	subwf	??___flge,f
 11995  2ADD  085F               	movf	___flge@ff2+1,w
 11996  2ADE  3BE3               	subwfb	??___flge+1,f
 11997  2ADF  0860               	movf	___flge@ff2+2,w
 11998  2AE0  3BE4               	subwfb	??___flge+2,f
 11999  2AE1  0861               	movf	___flge@ff2+3,w
 12000  2AE2  3BE5               	subwfb	??___flge+3,f
 12001  2AE3  0865               	movf	??___flge+3,w
 12002  2AE4  00E1               	movwf	___flge@ff2+3
 12003  2AE5  0864               	movf	??___flge+2,w
 12004  2AE6  00E0               	movwf	___flge@ff2+2
 12005  2AE7  0863               	movf	??___flge+1,w
 12006  2AE8  00DF               	movwf	___flge@ff2+1
 12007  2AE9  0862               	movf	??___flge,w
 12008  2AEA  00DE               	movwf	___flge@ff2
 12009  2AEB                     l1028:	
 12010  2AEB  3080               	movlw	128
 12011  2AEC  06DD               	xorwf	___flge@ff1+3,f
 12012  2AED  3080               	movlw	128
 12013  2AEE  06E1               	xorwf	___flge@ff2+3,f
 12014  2AEF  0861               	movf	___flge@ff2+3,w
 12015  2AF0  025D               	subwf	___flge@ff1+3,w
 12016  2AF1  1D03               	skipz
 12017  2AF2  0008               	return
 12018  2AF3  0860               	movf	___flge@ff2+2,w
 12019  2AF4  025C               	subwf	___flge@ff1+2,w
 12020  2AF5  1D03               	skipz
 12021  2AF6  0008               	return
 12022  2AF7  085F               	movf	___flge@ff2+1,w
 12023  2AF8  025B               	subwf	___flge@ff1+1,w
 12024  2AF9  1D03               	skipz
 12025  2AFA  0008               	return
 12026  2AFB  085E               	movf	___flge@ff2,w
 12027  2AFC  025A               	subwf	___flge@ff1,w
 12028  2AFD  0008               	return
 12029  2AFE                     __end_of___flge:	
 12030                           
 12031                           	psect	text41
 12032  2174                     __ptext41:	
 12033 ;; *************** function _setCellUndervoltageProtection *****************
 12034 ;; Defined at:
 12035 ;;		line 127 in file "BQ76920.c"
 12036 ;; Parameters:    Size  Location     Type
 12037 ;;  voltage_mV      2   18[BANK0 ] int 
 12038 ;;  delay_s         2   20[BANK0 ] int 
 12039 ;; Auto vars:     Size  Location     Type
 12040 ;;  i               2   37[BANK0 ] int 
 12041 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 12042 ;; Return value:  Size  Location     Type
 12043 ;;                  1    wreg      void 
 12044 ;; Registers used:
 12045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12046 ;; Tracked objects:
 12047 ;;		On entry : 0/0
 12048 ;;		On exit  : 0/0
 12049 ;;		Unchanged: 0/0
 12050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12051 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12052 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12053 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12054 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12055 ;;Total ram usage:       21 bytes
 12056 ;; Hardware stack levels used:    1
 12057 ;; Hardware stack levels required when called:    3
 12058 ;; This function calls:
 12059 ;;		_I2C_writeRegister
 12060 ;;		___aldiv
 12061 ;;		___lmul
 12062 ;;		_readRegister
 12063 ;; This function is called by:
 12064 ;;		_init_AFE
 12065 ;; This function uses a non-reentrant model
 12066 ;;
 12067                           
 12068                           
 12069                           ;psect for function _setCellUndervoltageProtection
 12070  2174                     _setCellUndervoltageProtection:	
 12071                           
 12072                           ;BQ76920.c: 129:     minCellVoltage = voltage_mV;
 12073                           
 12074                           ;incstack = 0
 12075                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 12076  2174  0020               	movlb	0	; select bank0
 12077  2175  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12078  2176  0023               	movlb	3	; select bank3
 12079  2177  00C7               	movwf	(_minCellVoltage+1)^(0+384)
 12080  2178  0020               	movlb	0	; select bank0
 12081  2179  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12082  217A  0023               	movlb	3	; select bank3
 12083  217B  00C6               	movwf	_minCellVoltage^(0+384)
 12084                           
 12085                           ;BQ76920.c: 131:     protect3.regByte = readRegister(0x18, 0x08);
 12086  217C  3018               	movlw	24
 12087  217D  00F5               	movwf	readRegister@slaveAddress
 12088  217E  3000               	movlw	0
 12089  217F  00F6               	movwf	readRegister@slaveAddress+1
 12090  2180  3008               	movlw	8
 12091  2181  00F7               	movwf	readRegister@regAddress
 12092  2182  3000               	movlw	0
 12093  2183  00F8               	movwf	readRegister@regAddress+1
 12094  2184  31B6  26FE  31A1   	fcall	_readRegister
 12095  2187  0875               	movf	?_readRegister,w
 12096  2188  0020               	movlb	0	; select bank0
 12097  2189  00B6               	movwf	??_setCellUndervoltageProtection
 12098  218A  0836               	movf	??_setCellUndervoltageProtection,w
 12099  218B  0023               	movlb	3	; select bank3
 12100  218C  00D2               	movwf	BQ76920@protect3^(0+384)
 12101                           
 12102                           ;BQ76920.c: 132:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12103  218D  0022               	movlb	2	; select bank2
 12104  218E  086D               	movf	_adcGain^(0+256),w
 12105  218F  0020               	movlb	0	; select bank0
 12106  2190  00A4               	movwf	___aldiv@divisor
 12107  2191  0022               	movlb	2	; select bank2
 12108  2192  086E               	movf	(_adcGain+1)^(0+256),w
 12109  2193  0020               	movlb	0	; select bank0
 12110  2194  00A5               	movwf	___aldiv@divisor+1
 12111  2195  0D89               	rlf	9,f
 12112  2196  3B89               	subwfb	9,f
 12113  2197  0989               	comf	9,f
 12114  2198  00A6               	movwf	___aldiv@divisor+2
 12115  2199  00A7               	movwf	___aldiv@divisor+3
 12116  219A  0022               	movlb	2	; select bank2
 12117  219B  086B               	movf	_adcOffset^(0+256),w
 12118  219C  0020               	movlb	0	; select bank0
 12119  219D  00B6               	movwf	??_setCellUndervoltageProtection
 12120  219E  0022               	movlb	2	; select bank2
 12121  219F  086C               	movf	(_adcOffset+1)^(0+256),w
 12122  21A0  0020               	movlb	0	; select bank0
 12123  21A1  00B7               	movwf	??_setCellUndervoltageProtection+1
 12124  21A2  3000               	movlw	0
 12125  21A3  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12126  21A4  30FF               	movlw	255
 12127  21A5  00B8               	movwf	??_setCellUndervoltageProtection+2
 12128  21A6  00B9               	movwf	??_setCellUndervoltageProtection+3
 12129  21A7  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12130  21A8  00BA               	movwf	??_setCellUndervoltageProtection+4
 12131  21A9  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12132  21AA  00BB               	movwf	??_setCellUndervoltageProtection+5
 12133  21AB  3000               	movlw	0
 12134  21AC  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12135  21AD  30FF               	movlw	255
 12136  21AE  00BC               	movwf	??_setCellUndervoltageProtection+6
 12137  21AF  00BD               	movwf	??_setCellUndervoltageProtection+7
 12138  21B0  0836               	movf	??_setCellUndervoltageProtection,w
 12139  21B1  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12140  21B2  0837               	movf	??_setCellUndervoltageProtection+1,w
 12141  21B3  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12142  21B4  0838               	movf	??_setCellUndervoltageProtection+2,w
 12143  21B5  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12144  21B6  0839               	movf	??_setCellUndervoltageProtection+3,w
 12145  21B7  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12146  21B8  083D               	movf	??_setCellUndervoltageProtection+7,w
 12147  21B9  00F4               	movwf	___lmul@multiplier+3
 12148  21BA  083C               	movf	??_setCellUndervoltageProtection+6,w
 12149  21BB  00F3               	movwf	___lmul@multiplier+2
 12150  21BC  083B               	movf	??_setCellUndervoltageProtection+5,w
 12151  21BD  00F2               	movwf	___lmul@multiplier+1
 12152  21BE  083A               	movf	??_setCellUndervoltageProtection+4,w
 12153  21BF  00F1               	movwf	___lmul@multiplier
 12154  21C0  3000               	movlw	0
 12155  21C1  00F8               	movwf	___lmul@multiplicand+3
 12156  21C2  3000               	movlw	0
 12157  21C3  00F7               	movwf	___lmul@multiplicand+2
 12158  21C4  3003               	movlw	3
 12159  21C5  00F6               	movwf	___lmul@multiplicand+1
 12160  21C6  30E8               	movlw	232
 12161  21C7  00F5               	movwf	___lmul@multiplicand
 12162  21C8  31B6  2665  31A1   	fcall	___lmul
 12163  21CB  0874               	movf	?___lmul+3,w
 12164  21CC  0020               	movlb	0	; select bank0
 12165  21CD  00AB               	movwf	___aldiv@dividend+3
 12166  21CE  0873               	movf	?___lmul+2,w
 12167  21CF  00AA               	movwf	___aldiv@dividend+2
 12168  21D0  0872               	movf	?___lmul+1,w
 12169  21D1  00A9               	movwf	___aldiv@dividend+1
 12170  21D2  0871               	movf	?___lmul,w
 12171  21D3  00A8               	movwf	___aldiv@dividend
 12172  21D4  31AB  23F7  31A1   	fcall	___aldiv
 12173  21D7  0020               	movlb	0	; select bank0
 12174  21D8  0824               	movf	?___aldiv,w
 12175  21D9  00BE               	movwf	??_setCellUndervoltageProtection+8
 12176  21DA  0825               	movf	?___aldiv+1,w
 12177  21DB  00BF               	movwf	??_setCellUndervoltageProtection+9
 12178  21DC  0826               	movf	?___aldiv+2,w
 12179  21DD  00C0               	movwf	??_setCellUndervoltageProtection+10
 12180  21DE  0827               	movf	?___aldiv+3,w
 12181  21DF  00C1               	movwf	??_setCellUndervoltageProtection+11
 12182  21E0  3004               	movlw	4
 12183  21E1  00C2               	movwf	??_setCellUndervoltageProtection+12
 12184  21E2                     u11225:	
 12185  21E2  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12186  21E3  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12187  21E4  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12188  21E5  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12189  21E6  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12190  21E7  29E2               	goto	u11225
 12191  21E8  083E               	movf	??_setCellUndervoltageProtection+8,w
 12192  21E9  00C3               	movwf	??_setCellUndervoltageProtection+13
 12193  21EA  0843               	movf	??_setCellUndervoltageProtection+13,w
 12194  21EB  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12195                           
 12196                           ;BQ76920.c: 133:     uv_trip += 1;
 12197  21EC  3001               	movlw	1
 12198  21ED  00B6               	movwf	??_setCellUndervoltageProtection
 12199  21EE  0836               	movf	??_setCellUndervoltageProtection,w
 12200  21EF  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12201                           
 12202                           ;BQ76920.c: 134:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12203  21F0  3018               	movlw	24
 12204  21F1  00F5               	movwf	I2C_writeRegister@slaveAddress
 12205  21F2  3000               	movlw	0
 12206  21F3  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12207  21F4  300A               	movlw	10
 12208  21F5  00F7               	movwf	I2C_writeRegister@regAddress
 12209  21F6  3000               	movlw	0
 12210  21F7  00F8               	movwf	I2C_writeRegister@regAddress+1
 12211  21F8  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12212  21F9  00B6               	movwf	??_setCellUndervoltageProtection
 12213  21FA  01B7               	clrf	??_setCellUndervoltageProtection+1
 12214  21FB  0836               	movf	??_setCellUndervoltageProtection,w
 12215  21FC  00F9               	movwf	I2C_writeRegister@data
 12216  21FD  0837               	movf	??_setCellUndervoltageProtection+1,w
 12217  21FE  00FA               	movwf	I2C_writeRegister@data+1
 12218  21FF  31B5  2583  31A1   	fcall	_I2C_writeRegister
 12219                           
 12220                           ;BQ76920.c: 136:     protect3.bits.UV_DELAY = 0;
 12221  2202  303F               	movlw	-193
 12222  2203  0023               	movlb	3	; select bank3
 12223  2204  05D2               	andwf	BQ76920@protect3^(0+384),f
 12224                           
 12225                           ;BQ76920.c: 137:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12226  2205  0020               	movlb	0	; select bank0
 12227  2206  01C5               	clrf	setCellUndervoltageProtection@i
 12228  2207  01C6               	clrf	setCellUndervoltageProtection@i+1
 12229  2208                     l8128:	
 12230                           
 12231                           ;BQ76920.c: 138:         if (delay_s >= UV_delay_setting[i]) {
 12232  2208  0846               	movf	setCellUndervoltageProtection@i+1,w
 12233  2209  0085               	movwf	5
 12234  220A  0845               	movf	setCellUndervoltageProtection@i,w
 12235  220B  0084               	movwf	4
 12236  220C  3584               	lslf	4,f
 12237  220D  0D85               	rlf	5,f
 12238  220E  30F1               	movlw	low (_UV_delay_setting| (0+32768))
 12239  220F  0784               	addwf	4,f
 12240  2210  30B9               	movlw	high (_UV_delay_setting| (0+32768))
 12241  2211  3D85               	addwfc	5,f
 12242  2212  3F00               	moviw [0]fsr0
 12243  2213  00B6               	movwf	??_setCellUndervoltageProtection
 12244  2214  3F01               	moviw [1]fsr0
 12245  2215  00B7               	movwf	??_setCellUndervoltageProtection+1
 12246  2216  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12247  2217  3A80               	xorlw	128
 12248  2218  00B8               	movwf	??_setCellUndervoltageProtection+2
 12249  2219  0837               	movf	??_setCellUndervoltageProtection+1,w
 12250  221A  3A80               	xorlw	128
 12251  221B  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12252  221C  1D03               	skipz
 12253  221D  2A20               	goto	u11235
 12254  221E  0836               	movf	??_setCellUndervoltageProtection,w
 12255  221F  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12256  2220                     u11235:	
 12257  2220  1C03               	skipc
 12258  2221  2A30               	goto	l8132
 12259                           
 12260                           ;BQ76920.c: 139:             protect3.bits.UV_DELAY = i;
 12261  2222  0020               	movlb	0	; select bank0
 12262  2223  0845               	movf	setCellUndervoltageProtection@i,w
 12263  2224  00B6               	movwf	??_setCellUndervoltageProtection
 12264  2225  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12265  2226  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12266  2227  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12267  2228  0023               	movlb	3	; select bank3
 12268  2229  0852               	movf	BQ76920@protect3^(0+384),w
 12269  222A  0020               	movlb	0	; select bank0
 12270  222B  0636               	xorwf	??_setCellUndervoltageProtection,w
 12271  222C  393F               	andlw	-193
 12272  222D  0636               	xorwf	??_setCellUndervoltageProtection,w
 12273  222E  0023               	movlb	3	; select bank3
 12274  222F  00D2               	movwf	BQ76920@protect3^(0+384)
 12275  2230                     l8132:	
 12276                           
 12277                           ;BQ76920.c: 141:     }
 12278  2230  3001               	movlw	1
 12279  2231  0020               	movlb	0	; select bank0
 12280  2232  07C5               	addwf	setCellUndervoltageProtection@i,f
 12281  2233  3000               	movlw	0
 12282  2234  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12283  2235  3000               	movlw	0
 12284  2236  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12285  2237  3003               	movlw	3
 12286  2238  1903               	skipnz
 12287  2239  0245               	subwf	setCellUndervoltageProtection@i,w
 12288  223A  1C03               	skipc
 12289  223B  2A08               	goto	l8128
 12290                           
 12291                           ;BQ76920.c: 142:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12292  223C  3018               	movlw	24
 12293  223D  00F5               	movwf	I2C_writeRegister@slaveAddress
 12294  223E  3000               	movlw	0
 12295  223F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12296  2240  3008               	movlw	8
 12297  2241  00F7               	movwf	I2C_writeRegister@regAddress
 12298  2242  3000               	movlw	0
 12299  2243  00F8               	movwf	I2C_writeRegister@regAddress+1
 12300  2244  0023               	movlb	3	; select bank3
 12301  2245  0852               	movf	BQ76920@protect3^(0+384),w
 12302  2246  0020               	movlb	0	; select bank0
 12303  2247  00B6               	movwf	??_setCellUndervoltageProtection
 12304  2248  01B7               	clrf	??_setCellUndervoltageProtection+1
 12305  2249  0836               	movf	??_setCellUndervoltageProtection,w
 12306  224A  00F9               	movwf	I2C_writeRegister@data
 12307  224B  0837               	movf	??_setCellUndervoltageProtection+1,w
 12308  224C  00FA               	movwf	I2C_writeRegister@data+1
 12309  224D  31B5  2583         	fcall	_I2C_writeRegister
 12310  224F  0008               	return
 12311  2250                     __end_of_setCellUndervoltageProtection:	
 12312                           
 12313                           	psect	text42
 12314  209F                     __ptext42:	
 12315 ;; *************** function _setCellOvervoltageProtection *****************
 12316 ;; Defined at:
 12317 ;;		line 148 in file "BQ76920.c"
 12318 ;; Parameters:    Size  Location     Type
 12319 ;;  voltage_mV      2   18[BANK0 ] int 
 12320 ;;  delay_s         2   20[BANK0 ] int 
 12321 ;; Auto vars:     Size  Location     Type
 12322 ;;  i               2   37[BANK0 ] int 
 12323 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12324 ;; Return value:  Size  Location     Type
 12325 ;;                  1    wreg      void 
 12326 ;; Registers used:
 12327 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12328 ;; Tracked objects:
 12329 ;;		On entry : 0/0
 12330 ;;		On exit  : 0/0
 12331 ;;		Unchanged: 0/0
 12332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12333 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12334 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12335 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12336 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12337 ;;Total ram usage:       21 bytes
 12338 ;; Hardware stack levels used:    1
 12339 ;; Hardware stack levels required when called:    3
 12340 ;; This function calls:
 12341 ;;		_I2C_writeRegister
 12342 ;;		___aldiv
 12343 ;;		___lmul
 12344 ;;		_readRegister
 12345 ;; This function is called by:
 12346 ;;		_init_AFE
 12347 ;; This function uses a non-reentrant model
 12348 ;;
 12349                           
 12350                           
 12351                           ;psect for function _setCellOvervoltageProtection
 12352  209F                     _setCellOvervoltageProtection:	
 12353                           
 12354                           ;BQ76920.c: 150:     maxCellVoltage = voltage_mV;
 12355                           
 12356                           ;incstack = 0
 12357                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12358  209F  0020               	movlb	0	; select bank0
 12359  20A0  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12360  20A1  0023               	movlb	3	; select bank3
 12361  20A2  00C9               	movwf	(_maxCellVoltage+1)^(0+384)
 12362  20A3  0020               	movlb	0	; select bank0
 12363  20A4  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12364  20A5  0023               	movlb	3	; select bank3
 12365  20A6  00C8               	movwf	_maxCellVoltage^(0+384)
 12366                           
 12367                           ;BQ76920.c: 151:     protect3.regByte = readRegister(0x18, 0x08);
 12368  20A7  3018               	movlw	24
 12369  20A8  00F5               	movwf	readRegister@slaveAddress
 12370  20A9  3000               	movlw	0
 12371  20AA  00F6               	movwf	readRegister@slaveAddress+1
 12372  20AB  3008               	movlw	8
 12373  20AC  00F7               	movwf	readRegister@regAddress
 12374  20AD  3000               	movlw	0
 12375  20AE  00F8               	movwf	readRegister@regAddress+1
 12376  20AF  31B6  26FE  31A0   	fcall	_readRegister
 12377  20B2  0875               	movf	?_readRegister,w
 12378  20B3  0020               	movlb	0	; select bank0
 12379  20B4  00B6               	movwf	??_setCellOvervoltageProtection
 12380  20B5  0836               	movf	??_setCellOvervoltageProtection,w
 12381  20B6  0023               	movlb	3	; select bank3
 12382  20B7  00D2               	movwf	BQ76920@protect3^(0+384)
 12383                           
 12384                           ;BQ76920.c: 152:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12385  20B8  0022               	movlb	2	; select bank2
 12386  20B9  086D               	movf	_adcGain^(0+256),w
 12387  20BA  0020               	movlb	0	; select bank0
 12388  20BB  00A4               	movwf	___aldiv@divisor
 12389  20BC  0022               	movlb	2	; select bank2
 12390  20BD  086E               	movf	(_adcGain+1)^(0+256),w
 12391  20BE  0020               	movlb	0	; select bank0
 12392  20BF  00A5               	movwf	___aldiv@divisor+1
 12393  20C0  0D89               	rlf	9,f
 12394  20C1  3B89               	subwfb	9,f
 12395  20C2  0989               	comf	9,f
 12396  20C3  00A6               	movwf	___aldiv@divisor+2
 12397  20C4  00A7               	movwf	___aldiv@divisor+3
 12398  20C5  0022               	movlb	2	; select bank2
 12399  20C6  086B               	movf	_adcOffset^(0+256),w
 12400  20C7  0020               	movlb	0	; select bank0
 12401  20C8  00B6               	movwf	??_setCellOvervoltageProtection
 12402  20C9  0022               	movlb	2	; select bank2
 12403  20CA  086C               	movf	(_adcOffset+1)^(0+256),w
 12404  20CB  0020               	movlb	0	; select bank0
 12405  20CC  00B7               	movwf	??_setCellOvervoltageProtection+1
 12406  20CD  3000               	movlw	0
 12407  20CE  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12408  20CF  30FF               	movlw	255
 12409  20D0  00B8               	movwf	??_setCellOvervoltageProtection+2
 12410  20D1  00B9               	movwf	??_setCellOvervoltageProtection+3
 12411  20D2  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12412  20D3  00BA               	movwf	??_setCellOvervoltageProtection+4
 12413  20D4  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12414  20D5  00BB               	movwf	??_setCellOvervoltageProtection+5
 12415  20D6  3000               	movlw	0
 12416  20D7  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12417  20D8  30FF               	movlw	255
 12418  20D9  00BC               	movwf	??_setCellOvervoltageProtection+6
 12419  20DA  00BD               	movwf	??_setCellOvervoltageProtection+7
 12420  20DB  0836               	movf	??_setCellOvervoltageProtection,w
 12421  20DC  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12422  20DD  0837               	movf	??_setCellOvervoltageProtection+1,w
 12423  20DE  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12424  20DF  0838               	movf	??_setCellOvervoltageProtection+2,w
 12425  20E0  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12426  20E1  0839               	movf	??_setCellOvervoltageProtection+3,w
 12427  20E2  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12428  20E3  083D               	movf	??_setCellOvervoltageProtection+7,w
 12429  20E4  00F4               	movwf	___lmul@multiplier+3
 12430  20E5  083C               	movf	??_setCellOvervoltageProtection+6,w
 12431  20E6  00F3               	movwf	___lmul@multiplier+2
 12432  20E7  083B               	movf	??_setCellOvervoltageProtection+5,w
 12433  20E8  00F2               	movwf	___lmul@multiplier+1
 12434  20E9  083A               	movf	??_setCellOvervoltageProtection+4,w
 12435  20EA  00F1               	movwf	___lmul@multiplier
 12436  20EB  3000               	movlw	0
 12437  20EC  00F8               	movwf	___lmul@multiplicand+3
 12438  20ED  3000               	movlw	0
 12439  20EE  00F7               	movwf	___lmul@multiplicand+2
 12440  20EF  3003               	movlw	3
 12441  20F0  00F6               	movwf	___lmul@multiplicand+1
 12442  20F1  30E8               	movlw	232
 12443  20F2  00F5               	movwf	___lmul@multiplicand
 12444  20F3  31B6  2665  31A0   	fcall	___lmul
 12445  20F6  0874               	movf	?___lmul+3,w
 12446  20F7  0020               	movlb	0	; select bank0
 12447  20F8  00AB               	movwf	___aldiv@dividend+3
 12448  20F9  0873               	movf	?___lmul+2,w
 12449  20FA  00AA               	movwf	___aldiv@dividend+2
 12450  20FB  0872               	movf	?___lmul+1,w
 12451  20FC  00A9               	movwf	___aldiv@dividend+1
 12452  20FD  0871               	movf	?___lmul,w
 12453  20FE  00A8               	movwf	___aldiv@dividend
 12454  20FF  31AB  23F7  31A0   	fcall	___aldiv
 12455  2102  0020               	movlb	0	; select bank0
 12456  2103  0824               	movf	?___aldiv,w
 12457  2104  00BE               	movwf	??_setCellOvervoltageProtection+8
 12458  2105  0825               	movf	?___aldiv+1,w
 12459  2106  00BF               	movwf	??_setCellOvervoltageProtection+9
 12460  2107  0826               	movf	?___aldiv+2,w
 12461  2108  00C0               	movwf	??_setCellOvervoltageProtection+10
 12462  2109  0827               	movf	?___aldiv+3,w
 12463  210A  00C1               	movwf	??_setCellOvervoltageProtection+11
 12464  210B  3004               	movlw	4
 12465  210C  00C2               	movwf	??_setCellOvervoltageProtection+12
 12466  210D                     u11255:	
 12467  210D  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12468  210E  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12469  210F  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12470  2110  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12471  2111  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12472  2112  290D               	goto	u11255
 12473  2113  083E               	movf	??_setCellOvervoltageProtection+8,w
 12474  2114  00C3               	movwf	??_setCellOvervoltageProtection+13
 12475  2115  0843               	movf	??_setCellOvervoltageProtection+13,w
 12476  2116  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12477                           
 12478                           ;BQ76920.c: 153:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12479  2117  3018               	movlw	24
 12480  2118  00F5               	movwf	I2C_writeRegister@slaveAddress
 12481  2119  3000               	movlw	0
 12482  211A  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12483  211B  3009               	movlw	9
 12484  211C  00F7               	movwf	I2C_writeRegister@regAddress
 12485  211D  3000               	movlw	0
 12486  211E  00F8               	movwf	I2C_writeRegister@regAddress+1
 12487  211F  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12488  2120  00B6               	movwf	??_setCellOvervoltageProtection
 12489  2121  01B7               	clrf	??_setCellOvervoltageProtection+1
 12490  2122  0836               	movf	??_setCellOvervoltageProtection,w
 12491  2123  00F9               	movwf	I2C_writeRegister@data
 12492  2124  0837               	movf	??_setCellOvervoltageProtection+1,w
 12493  2125  00FA               	movwf	I2C_writeRegister@data+1
 12494  2126  31B5  2583  31A0   	fcall	_I2C_writeRegister
 12495                           
 12496                           ;BQ76920.c: 155:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12497  2129  0020               	movlb	0	; select bank0
 12498  212A  01C5               	clrf	setCellOvervoltageProtection@i
 12499  212B  01C6               	clrf	setCellOvervoltageProtection@i+1
 12500  212C                     l8154:	
 12501                           
 12502                           ;BQ76920.c: 156:         if (delay_s >= OV_delay_setting[i]) {
 12503  212C  0846               	movf	setCellOvervoltageProtection@i+1,w
 12504  212D  0085               	movwf	5
 12505  212E  0845               	movf	setCellOvervoltageProtection@i,w
 12506  212F  0084               	movwf	4
 12507  2130  3584               	lslf	4,f
 12508  2131  0D85               	rlf	5,f
 12509  2132  30E9               	movlw	low (_OV_delay_setting| (0+32768))
 12510  2133  0784               	addwf	4,f
 12511  2134  30B9               	movlw	high (_OV_delay_setting| (0+32768))
 12512  2135  3D85               	addwfc	5,f
 12513  2136  3F00               	moviw [0]fsr0
 12514  2137  00B6               	movwf	??_setCellOvervoltageProtection
 12515  2138  3F01               	moviw [1]fsr0
 12516  2139  00B7               	movwf	??_setCellOvervoltageProtection+1
 12517  213A  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12518  213B  3A80               	xorlw	128
 12519  213C  00B8               	movwf	??_setCellOvervoltageProtection+2
 12520  213D  0837               	movf	??_setCellOvervoltageProtection+1,w
 12521  213E  3A80               	xorlw	128
 12522  213F  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12523  2140  1D03               	skipz
 12524  2141  2944               	goto	u11265
 12525  2142  0836               	movf	??_setCellOvervoltageProtection,w
 12526  2143  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12527  2144                     u11265:	
 12528  2144  1C03               	skipc
 12529  2145  2954               	goto	l8158
 12530                           
 12531                           ;BQ76920.c: 157:             protect3.bits.UV_DELAY = i;
 12532  2146  0020               	movlb	0	; select bank0
 12533  2147  0845               	movf	setCellOvervoltageProtection@i,w
 12534  2148  00B6               	movwf	??_setCellOvervoltageProtection
 12535  2149  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12536  214A  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12537  214B  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12538  214C  0023               	movlb	3	; select bank3
 12539  214D  0852               	movf	BQ76920@protect3^(0+384),w
 12540  214E  0020               	movlb	0	; select bank0
 12541  214F  0636               	xorwf	??_setCellOvervoltageProtection,w
 12542  2150  393F               	andlw	-193
 12543  2151  0636               	xorwf	??_setCellOvervoltageProtection,w
 12544  2152  0023               	movlb	3	; select bank3
 12545  2153  00D2               	movwf	BQ76920@protect3^(0+384)
 12546  2154                     l8158:	
 12547                           
 12548                           ;BQ76920.c: 159:     }
 12549  2154  3001               	movlw	1
 12550  2155  0020               	movlb	0	; select bank0
 12551  2156  07C5               	addwf	setCellOvervoltageProtection@i,f
 12552  2157  3000               	movlw	0
 12553  2158  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12554  2159  3000               	movlw	0
 12555  215A  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12556  215B  3003               	movlw	3
 12557  215C  1903               	skipnz
 12558  215D  0245               	subwf	setCellOvervoltageProtection@i,w
 12559  215E  1C03               	skipc
 12560  215F  292C               	goto	l8154
 12561                           
 12562                           ;BQ76920.c: 160:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12563  2160  3018               	movlw	24
 12564  2161  00F5               	movwf	I2C_writeRegister@slaveAddress
 12565  2162  3000               	movlw	0
 12566  2163  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12567  2164  3008               	movlw	8
 12568  2165  00F7               	movwf	I2C_writeRegister@regAddress
 12569  2166  3000               	movlw	0
 12570  2167  00F8               	movwf	I2C_writeRegister@regAddress+1
 12571  2168  0023               	movlb	3	; select bank3
 12572  2169  0852               	movf	BQ76920@protect3^(0+384),w
 12573  216A  0020               	movlb	0	; select bank0
 12574  216B  00B6               	movwf	??_setCellOvervoltageProtection
 12575  216C  01B7               	clrf	??_setCellOvervoltageProtection+1
 12576  216D  0836               	movf	??_setCellOvervoltageProtection,w
 12577  216E  00F9               	movwf	I2C_writeRegister@data
 12578  216F  0837               	movf	??_setCellOvervoltageProtection+1,w
 12579  2170  00FA               	movwf	I2C_writeRegister@data+1
 12580  2171  31B5  2583         	fcall	_I2C_writeRegister
 12581  2173  0008               	return
 12582  2174                     __end_of_setCellOvervoltageProtection:	
 12583                           
 12584                           	psect	text43
 12585  2DC3                     __ptext43:	
 12586 ;; *************** function _beginAFEcommunication *****************
 12587 ;; Defined at:
 12588 ;;		line 23 in file "BQ76920.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;		None
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;  i               2   13[BANK0 ] int 
 12593 ;;  commSuccess     2   11[BANK0 ] int 
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  2    0[BANK0 ] int 
 12596 ;; Registers used:
 12597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12598 ;; Tracked objects:
 12599 ;;		On entry : 0/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12603 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12604 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12605 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12606 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12607 ;;Total ram usage:       15 bytes
 12608 ;; Hardware stack levels used:    1
 12609 ;; Hardware stack levels required when called:    3
 12610 ;; This function calls:
 12611 ;;		_I2C_writeRegister
 12612 ;;		_readRegister
 12613 ;; This function is called by:
 12614 ;;		_statemachine
 12615 ;; This function uses a non-reentrant model
 12616 ;;
 12617                           
 12618                           
 12619                           ;psect for function _beginAFEcommunication
 12620  2DC3                     _beginAFEcommunication:	
 12621                           
 12622                           ;BQ76920.c: 25:     int commSuccess = 0;
 12623                           
 12624                           ;incstack = 0
 12625                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12626  2DC3  0020               	movlb	0	; select bank0
 12627  2DC4  01AB               	clrf	beginAFEcommunication@commSuccess
 12628  2DC5  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12629                           
 12630                           ;BQ76920.c: 28:     for (int i = 0; i < 4; i++) {
 12631  2DC6  01AD               	clrf	beginAFEcommunication@i
 12632  2DC7  01AE               	clrf	beginAFEcommunication@i+1
 12633  2DC8                     l8278:	
 12634                           
 12635                           ;BQ76920.c: 29:         cellVoltages[i] = 0;
 12636  2DC8  0020               	movlb	0	; select bank0
 12637  2DC9  352D               	lslf	beginAFEcommunication@i,w
 12638  2DCA  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12639  2DCB  0086               	movwf	6
 12640  2DCC  3001               	movlw	1	; select bank3/4
 12641  2DCD  0087               	movwf	7
 12642  2DCE  3000               	movlw	0
 12643  2DCF  3FC0               	movwi [0]fsr1
 12644  2DD0  3FC1               	movwi [1]fsr1
 12645                           
 12646                           ;BQ76920.c: 30:     }
 12647  2DD1  3001               	movlw	1
 12648  2DD2  07AD               	addwf	beginAFEcommunication@i,f
 12649  2DD3  3000               	movlw	0
 12650  2DD4  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12651  2DD5  082E               	movf	beginAFEcommunication@i+1,w
 12652  2DD6  3A80               	xorlw	128
 12653  2DD7  00A2               	movwf	??_beginAFEcommunication
 12654  2DD8  3080               	movlw	128
 12655  2DD9  0222               	subwf	??_beginAFEcommunication,w
 12656  2DDA  1D03               	skipz
 12657  2DDB  2DDE               	goto	u11375
 12658  2DDC  3004               	movlw	4
 12659  2DDD  022D               	subwf	beginAFEcommunication@i,w
 12660  2DDE                     u11375:	
 12661  2DDE  1C03               	skipc
 12662  2DDF  2DC8               	goto	l8278
 12663                           
 12664                           ;BQ76920.c: 33:     I2C_writeRegister(0x18, 0x0B, 0x19);
 12665  2DE0  3018               	movlw	24
 12666  2DE1  00F5               	movwf	I2C_writeRegister@slaveAddress
 12667  2DE2  3000               	movlw	0
 12668  2DE3  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12669  2DE4  300B               	movlw	11
 12670  2DE5  00F7               	movwf	I2C_writeRegister@regAddress
 12671  2DE6  3000               	movlw	0
 12672  2DE7  00F8               	movwf	I2C_writeRegister@regAddress+1
 12673  2DE8  3019               	movlw	25
 12674  2DE9  00F9               	movwf	I2C_writeRegister@data
 12675  2DEA  3000               	movlw	0
 12676  2DEB  00FA               	movwf	I2C_writeRegister@data+1
 12677  2DEC  31B5  2583  31AD   	fcall	_I2C_writeRegister
 12678                           
 12679                           ;BQ76920.c: 35:     if (readRegister(0x18, 0x0B) == 0x19) {
 12680  2DEF  3018               	movlw	24
 12681  2DF0  00F5               	movwf	readRegister@slaveAddress
 12682  2DF1  3000               	movlw	0
 12683  2DF2  00F6               	movwf	readRegister@slaveAddress+1
 12684  2DF3  300B               	movlw	11
 12685  2DF4  00F7               	movwf	readRegister@regAddress
 12686  2DF5  3000               	movlw	0
 12687  2DF6  00F8               	movwf	readRegister@regAddress+1
 12688  2DF7  31B6  26FE  31AD   	fcall	_readRegister
 12689  2DFA  3019               	movlw	25
 12690  2DFB  0675               	xorwf	?_readRegister,w
 12691  2DFC  0476               	iorwf	?_readRegister+1,w
 12692  2DFD  1D03               	btfss	3,2
 12693  2DFE  2E71               	goto	l447
 12694                           
 12695                           ;BQ76920.c: 36:         commSuccess = 1;
 12696  2DFF  3001               	movlw	1
 12697  2E00  0020               	movlb	0	; select bank0
 12698  2E01  00AB               	movwf	beginAFEcommunication@commSuccess
 12699  2E02  3000               	movlw	0
 12700  2E03  00AC               	movwf	beginAFEcommunication@commSuccess+1
 12701                           
 12702                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x04, 0x18);
 12703  2E04  3018               	movlw	24
 12704  2E05  00F5               	movwf	I2C_writeRegister@slaveAddress
 12705  2E06  3000               	movlw	0
 12706  2E07  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12707  2E08  3004               	movlw	4
 12708  2E09  00F7               	movwf	I2C_writeRegister@regAddress
 12709  2E0A  3000               	movlw	0
 12710  2E0B  00F8               	movwf	I2C_writeRegister@regAddress+1
 12711  2E0C  3018               	movlw	24
 12712  2E0D  00F9               	movwf	I2C_writeRegister@data
 12713  2E0E  3000               	movlw	0
 12714  2E0F  00FA               	movwf	I2C_writeRegister@data+1
 12715  2E10  31B5  2583  31AD   	fcall	_I2C_writeRegister
 12716                           
 12717                           ;BQ76920.c: 41:         I2C_writeRegister(0x18, 0x05, 0x40);
 12718  2E13  3018               	movlw	24
 12719  2E14  00F5               	movwf	I2C_writeRegister@slaveAddress
 12720  2E15  3000               	movlw	0
 12721  2E16  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12722  2E17  3005               	movlw	5
 12723  2E18  00F7               	movwf	I2C_writeRegister@regAddress
 12724  2E19  3000               	movlw	0
 12725  2E1A  00F8               	movwf	I2C_writeRegister@regAddress+1
 12726  2E1B  3040               	movlw	64
 12727  2E1C  00F9               	movwf	I2C_writeRegister@data
 12728  2E1D  3000               	movlw	0
 12729  2E1E  00FA               	movwf	I2C_writeRegister@data+1
 12730  2E1F  31B5  2583  31AD   	fcall	_I2C_writeRegister
 12731                           
 12732                           ;BQ76920.c: 44:         adcOffset = (signed int) readRegister(0x18, 0x51);
 12733  2E22  3018               	movlw	24
 12734  2E23  00F5               	movwf	readRegister@slaveAddress
 12735  2E24  3000               	movlw	0
 12736  2E25  00F6               	movwf	readRegister@slaveAddress+1
 12737  2E26  3051               	movlw	81
 12738  2E27  00F7               	movwf	readRegister@regAddress
 12739  2E28  3000               	movlw	0
 12740  2E29  00F8               	movwf	readRegister@regAddress+1
 12741  2E2A  31B6  26FE  31AD   	fcall	_readRegister
 12742  2E2D  0876               	movf	?_readRegister+1,w
 12743  2E2E  0022               	movlb	2	; select bank2
 12744  2E2F  00EC               	movwf	(_adcOffset+1)^(0+256)
 12745  2E30  0875               	movf	?_readRegister,w
 12746  2E31  00EB               	movwf	_adcOffset^(0+256)
 12747                           
 12748                           ;BQ76920.c: 45:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 12749  2E32  3018               	movlw	24
 12750  2E33  00F5               	movwf	readRegister@slaveAddress
 12751  2E34  3000               	movlw	0
 12752  2E35  00F6               	movwf	readRegister@slaveAddress+1
 12753  2E36  3059               	movlw	89
 12754  2E37  00F7               	movwf	readRegister@regAddress
 12755  2E38  3000               	movlw	0
 12756  2E39  00F8               	movwf	readRegister@regAddress+1
 12757  2E3A  31B6  26FE  31AD   	fcall	_readRegister
 12758  2E3D  0875               	movf	?_readRegister,w
 12759  2E3E  0020               	movlb	0	; select bank0
 12760  2E3F  00A2               	movwf	??_beginAFEcommunication
 12761  2E40  0876               	movf	?_readRegister+1,w
 12762  2E41  00A3               	movwf	??_beginAFEcommunication+1
 12763  2E42  3005               	movlw	5
 12764  2E43  00A4               	movwf	??_beginAFEcommunication+2
 12765  2E44                     u11395:	
 12766  2E44  0D23               	rlf	??_beginAFEcommunication+1,w
 12767  2E45  0CA3               	rrf	??_beginAFEcommunication+1,f
 12768  2E46  0CA2               	rrf	??_beginAFEcommunication,f
 12769  2E47  0BA4               	decfsz	??_beginAFEcommunication+2,f
 12770  2E48  2E44               	goto	u11395
 12771  2E49  3007               	movlw	7
 12772  2E4A  0522               	andwf	??_beginAFEcommunication,w
 12773  2E4B  00A5               	movwf	??_beginAFEcommunication+3
 12774  2E4C  3000               	movlw	0
 12775  2E4D  0523               	andwf	??_beginAFEcommunication+1,w
 12776  2E4E  00A6               	movwf	??_beginAFEcommunication+4
 12777  2E4F  3018               	movlw	24
 12778  2E50  00F5               	movwf	readRegister@slaveAddress
 12779  2E51  3000               	movlw	0
 12780  2E52  00F6               	movwf	readRegister@slaveAddress+1
 12781  2E53  3050               	movlw	80
 12782  2E54  00F7               	movwf	readRegister@regAddress
 12783  2E55  3000               	movlw	0
 12784  2E56  00F8               	movwf	readRegister@regAddress+1
 12785  2E57  31B6  26FE         	fcall	_readRegister
 12786  2E59  300C               	movlw	12
 12787  2E5A  0575               	andwf	?_readRegister,w
 12788  2E5B  0020               	movlb	0	; select bank0
 12789  2E5C  00A7               	movwf	??_beginAFEcommunication+5
 12790  2E5D  3000               	movlw	0
 12791  2E5E  0576               	andwf	?_readRegister+1,w
 12792  2E5F  00A8               	movwf	??_beginAFEcommunication+6
 12793  2E60  35A7               	lslf	??_beginAFEcommunication+5,f
 12794  2E61  0DA8               	rlf	??_beginAFEcommunication+6,f
 12795  2E62  0825               	movf	??_beginAFEcommunication+3,w
 12796  2E63  0427               	iorwf	??_beginAFEcommunication+5,w
 12797  2E64  00A9               	movwf	??_beginAFEcommunication+7
 12798  2E65  0826               	movf	??_beginAFEcommunication+4,w
 12799  2E66  0428               	iorwf	??_beginAFEcommunication+6,w
 12800  2E67  00AA               	movwf	??_beginAFEcommunication+8
 12801  2E68  0829               	movf	??_beginAFEcommunication+7,w
 12802  2E69  3E6D               	addlw	109
 12803  2E6A  0022               	movlb	2	; select bank2
 12804  2E6B  00ED               	movwf	_adcGain^(0+256)
 12805  2E6C  3001               	movlw	1
 12806  2E6D  0020               	movlb	0	; select bank0
 12807  2E6E  3D2A               	addwfc	??_beginAFEcommunication+8,w
 12808  2E6F  0022               	movlb	2	; select bank2
 12809  2E70  00EE               	movwf	(_adcGain+1)^(0+256)
 12810  2E71                     l447:	
 12811                           ;BQ76920.c: 48:     }
 12812                           
 12813                           
 12814                           ;BQ76920.c: 49:     return commSuccess;
 12815  2E71  0020               	movlb	0	; select bank0
 12816  2E72  082C               	movf	beginAFEcommunication@commSuccess+1,w
 12817  2E73  00A1               	movwf	?_beginAFEcommunication+1
 12818  2E74  082B               	movf	beginAFEcommunication@commSuccess,w
 12819  2E75  00A0               	movwf	?_beginAFEcommunication
 12820  2E76  0008               	return
 12821  2E77                     __end_of_beginAFEcommunication:	
 12822                           
 12823                           	psect	text44
 12824  35E1                     __ptext44:	
 12825 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 12826 ;; Defined at:
 12827 ;;		line 43 in file "RGB.c"
 12828 ;; Parameters:    Size  Location     Type
 12829 ;;		None
 12830 ;; Auto vars:     Size  Location     Type
 12831 ;;		None
 12832 ;; Return value:  Size  Location     Type
 12833 ;;                  1    wreg      void 
 12834 ;; Registers used:
 12835 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12836 ;; Tracked objects:
 12837 ;;		On entry : 0/0
 12838 ;;		On exit  : 0/0
 12839 ;;		Unchanged: 0/0
 12840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12845 ;;Total ram usage:        1 bytes
 12846 ;; Hardware stack levels used:    1
 12847 ;; Hardware stack levels required when called:    2
 12848 ;; This function calls:
 12849 ;;		_RGB_color
 12850 ;; This function is called by:
 12851 ;;		_statemachine
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855                           
 12856                           ;psect for function _RGB_AWAIT_AFE_CONN
 12857  35E1                     _RGB_AWAIT_AFE_CONN:	
 12858                           
 12859                           ;RGB.c: 45:     if (toggleColor) {
 12860                           
 12861                           ;incstack = 0
 12862                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12863  35E1  087C               	movf	_toggleColor,w
 12864  35E2  1903               	btfsc	3,2
 12865  35E3  2DF3               	goto	l8268
 12866                           
 12867                           ;RGB.c: 46:         toggleColor = !toggleColor;
 12868  35E4  087C               	movf	_toggleColor,w
 12869  35E5  1D03               	btfss	3,2
 12870  35E6  2DE9               	goto	u11330
 12871  35E7  3001               	movlw	1
 12872  35E8  2DEA               	goto	u11340
 12873  35E9                     u11330:	
 12874  35E9  3000               	movlw	0
 12875  35EA                     u11340:	
 12876  35EA  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12877  35EB  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12878  35EC  00FC               	movwf	_toggleColor
 12879                           
 12880                           ;RGB.c: 47:         RGB_color(0);
 12881  35ED  3000               	movlw	0
 12882  35EE  00F1               	movwf	RGB_color@color
 12883  35EF  00F2               	movwf	RGB_color@color+1
 12884  35F0  31B5  25C0         	fcall	_RGB_color
 12885                           
 12886                           ;RGB.c: 48:     } else {
 12887  35F2  0008               	return
 12888  35F3                     l8268:	
 12889                           
 12890                           ;RGB.c: 49:         toggleColor = !toggleColor;
 12891  35F3  087C               	movf	_toggleColor,w
 12892  35F4  1D03               	btfss	3,2
 12893  35F5  2DF8               	goto	u11350
 12894  35F6  3001               	movlw	1
 12895  35F7  2DF9               	goto	u11360
 12896  35F8                     u11350:	
 12897  35F8  3000               	movlw	0
 12898  35F9                     u11360:	
 12899  35F9  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12900  35FA  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12901  35FB  00FC               	movwf	_toggleColor
 12902                           
 12903                           ;RGB.c: 50:         RGB_color(1);
 12904  35FC  3001               	movlw	1
 12905  35FD  00F1               	movwf	RGB_color@color
 12906  35FE  3000               	movlw	0
 12907  35FF  00F2               	movwf	RGB_color@color+1
 12908  3600  31B5  25C0         	fcall	_RGB_color
 12909  3602  0008               	return
 12910  3603                     __end_of_RGB_AWAIT_AFE_CONN:	
 12911                           
 12912                           	psect	text45
 12913  35C0                     __ptext45:	
 12914 ;; *************** function _RGB_color *****************
 12915 ;; Defined at:
 12916 ;;		line 17 in file "RGB.c"
 12917 ;; Parameters:    Size  Location     Type
 12918 ;;  color           2    1[COMMON] int 
 12919 ;; Auto vars:     Size  Location     Type
 12920 ;;		None
 12921 ;; Return value:  Size  Location     Type
 12922 ;;                  1    wreg      void 
 12923 ;; Registers used:
 12924 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12925 ;; Tracked objects:
 12926 ;;		On entry : 0/0
 12927 ;;		On exit  : 0/0
 12928 ;;		Unchanged: 0/0
 12929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12930 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12934 ;;Total ram usage:        2 bytes
 12935 ;; Hardware stack levels used:    1
 12936 ;; Hardware stack levels required when called:    1
 12937 ;; This function calls:
 12938 ;;		Nothing
 12939 ;; This function is called by:
 12940 ;;		_statemachine
 12941 ;;		_RGB_AWAIT_AFE_CONN
 12942 ;;		_watchdog_timeout_shutdown
 12943 ;; This function uses a non-reentrant model
 12944 ;;
 12945                           
 12946                           
 12947                           ;psect for function _RGB_color
 12948  35C0                     _RGB_color:	
 12949                           
 12950                           ;RGB.c: 19:     switch (color) {
 12951                           
 12952                           ;incstack = 0
 12953                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 12954  35C0  2DD0               	goto	l8008
 12955  35C1                     l342:	
 12956                           ;RGB.c: 20:         case 0:
 12957                           
 12958                           
 12959                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 12960  35C1  0022               	movlb	2	; select bank2
 12961  35C2  120C               	bcf	12,4	;volatile
 12962                           
 12963                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 12964  35C3  168C               	bsf	12,5	;volatile
 12965                           
 12966                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 12967  35C4  1410               	bsf	16,0	;volatile
 12968                           
 12969                           ;RGB.c: 24:             break;
 12970  35C5  0008               	return
 12971  35C6                     l344:	
 12972                           ;RGB.c: 25:         case 1:
 12973                           
 12974                           
 12975                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 12976  35C6  0022               	movlb	2	; select bank2
 12977  35C7  160C               	bsf	12,4	;volatile
 12978                           
 12979                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 12980  35C8  128C               	bcf	12,5	;volatile
 12981                           
 12982                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 12983  35C9  1410               	bsf	16,0	;volatile
 12984                           
 12985                           ;RGB.c: 29:             break;
 12986  35CA  0008               	return
 12987  35CB                     l345:	
 12988                           ;RGB.c: 30:         case 2:
 12989                           
 12990                           
 12991                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 12992  35CB  0022               	movlb	2	; select bank2
 12993  35CC  160C               	bsf	12,4	;volatile
 12994                           
 12995                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 12996  35CD  168C               	bsf	12,5	;volatile
 12997                           
 12998                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 12999  35CE  1010               	bcf	16,0	;volatile
 13000                           
 13001                           ;RGB.c: 34:             break;
 13002  35CF  0008               	return
 13003  35D0                     l8008:	
 13004                           
 13005                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13006                           ; Switch size 1, requested type "simple"
 13007                           ; Number of cases is 1, Range of values is 0 to 0
 13008                           ; switch strategies available:
 13009                           ; Name         Instructions Cycles
 13010                           ; simple_byte            4     3 (average)
 13011                           ; direct_byte            8     6 (fixed)
 13012                           ; jumptable            260     6 (fixed)
 13013                           ;	Chosen strategy is simple_byte
 13014  35D0  0872               	movf	RGB_color@color+1,w
 13015  35D1  3A00               	xorlw	0	; case 0
 13016  35D2  1903               	skipnz
 13017  35D3  2DD5               	goto	l8592
 13018  35D4  2DE0               	goto	l346
 13019  35D5                     l8592:	
 13020                           
 13021                           ; Switch size 1, requested type "simple"
 13022                           ; Number of cases is 3, Range of values is 0 to 2
 13023                           ; switch strategies available:
 13024                           ; Name         Instructions Cycles
 13025                           ; simple_byte           10     6 (average)
 13026                           ; direct_byte           12     6 (fixed)
 13027                           ; jumptable            260     6 (fixed)
 13028                           ;	Chosen strategy is simple_byte
 13029  35D5  0871               	movf	RGB_color@color,w
 13030  35D6  3A00               	xorlw	0	; case 0
 13031  35D7  1903               	skipnz
 13032  35D8  2DC1               	goto	l342
 13033  35D9  3A01               	xorlw	1	; case 1
 13034  35DA  1903               	skipnz
 13035  35DB  2DC6               	goto	l344
 13036  35DC  3A03               	xorlw	3	; case 2
 13037  35DD  1903               	skipnz
 13038  35DE  2DCB               	goto	l345
 13039  35DF  2DE0               	goto	l346
 13040  35E0                     l346:	
 13041  35E0  0008               	return
 13042  35E1                     __end_of_RGB_color:	
 13043                           
 13044                           	psect	text46
 13045  34C6                     __ptext46:	
 13046 ;; *************** function _AFE_UPDATE *****************
 13047 ;; Defined at:
 13048 ;;		line 166 in file "BQ76920.c"
 13049 ;; Parameters:    Size  Location     Type
 13050 ;;		None
 13051 ;; Auto vars:     Size  Location     Type
 13052 ;;		None
 13053 ;; Return value:  Size  Location     Type
 13054 ;;                  1    wreg      void 
 13055 ;; Registers used:
 13056 ;;		wreg, status,2, status,0, pclath, cstack
 13057 ;; Tracked objects:
 13058 ;;		On entry : 0/0
 13059 ;;		On exit  : 0/0
 13060 ;;		Unchanged: 0/0
 13061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13066 ;;Total ram usage:        0 bytes
 13067 ;; Hardware stack levels used:    1
 13068 ;; Hardware stack levels required when called:    5
 13069 ;; This function calls:
 13070 ;;		_enableCharging
 13071 ;;		_enableDischarging
 13072 ;;		_updateCurrent
 13073 ;;		_updateTemperatures
 13074 ;;		_updateVoltages
 13075 ;; This function is called by:
 13076 ;;		_statemachine
 13077 ;; This function uses a non-reentrant model
 13078 ;;
 13079                           
 13080                           
 13081                           ;psect for function _AFE_UPDATE
 13082  34C6                     _AFE_UPDATE:	
 13083                           
 13084                           ;BQ76920.c: 167:     updateCurrent();
 13085                           
 13086                           ;incstack = 0
 13087                           ; Regs used in _AFE_UPDATE: [wreg+status,2+status,0+pclath+cstack]
 13088  34C6  31AE  2677  31B4   	fcall	_updateCurrent
 13089                           
 13090                           ;BQ76920.c: 168:     updateVoltages();
 13091  34C9  3192  224F  31B4   	fcall	_updateVoltages
 13092                           
 13093                           ;BQ76920.c: 169:     updateTemperatures();
 13094  34CC  3195  2527  31B4   	fcall	_updateTemperatures
 13095                           
 13096                           ;BQ76920.c: 172:     enableDischarging(1);
 13097  34CF  3001               	movlw	1
 13098  34D0  0020               	movlb	0	; select bank0
 13099  34D1  00A0               	movwf	enableDischarging@enable
 13100  34D2  3000               	movlw	0
 13101  34D3  00A1               	movwf	enableDischarging@enable+1
 13102  34D4  31A8  2008  31B4   	fcall	_enableDischarging
 13103                           
 13104                           ;BQ76920.c: 173:     enableCharging(1);
 13105  34D7  3001               	movlw	1
 13106  34D8  0020               	movlb	0	; select bank0
 13107  34D9  00A0               	movwf	enableCharging@enable
 13108  34DA  3000               	movlw	0
 13109  34DB  00A1               	movwf	enableCharging@enable+1
 13110  34DC  31B7  2734         	fcall	_enableCharging
 13111  34DE  0008               	return
 13112  34DF                     __end_of_AFE_UPDATE:	
 13113                           
 13114                           	psect	text47
 13115  124F                     __ptext47:	
 13116 ;; *************** function _updateVoltages *****************
 13117 ;; Defined at:
 13118 ;;		line 203 in file "BQ76920.c"
 13119 ;; Parameters:    Size  Location     Type
 13120 ;;		None
 13121 ;; Auto vars:     Size  Location     Type
 13122 ;;  adcVal          4   24[BANK1 ] long 
 13123 ;; Return value:  Size  Location     Type
 13124 ;;                  1    wreg      void 
 13125 ;; Registers used:
 13126 ;;		wreg, status,2, status,0, pclath, cstack
 13127 ;; Tracked objects:
 13128 ;;		On entry : 0/0
 13129 ;;		On exit  : 0/0
 13130 ;;		Unchanged: 0/0
 13131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13133 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13134 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13135 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13136 ;;Total ram usage:       11 bytes
 13137 ;; Hardware stack levels used:    1
 13138 ;; Hardware stack levels required when called:    3
 13139 ;; This function calls:
 13140 ;;		___aldiv
 13141 ;;		___fladd
 13142 ;;		___fldiv
 13143 ;;		___flmul
 13144 ;;		___fltol
 13145 ;;		___lmul
 13146 ;;		___xxtofl
 13147 ;;		_readRegister
 13148 ;; This function is called by:
 13149 ;;		_AFE_UPDATE
 13150 ;; This function uses a non-reentrant model
 13151 ;;
 13152                           
 13153                           
 13154                           ;psect for function _updateVoltages
 13155  124F                     _updateVoltages:	
 13156                           
 13157                           ;BQ76920.c: 207:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13158                           
 13159                           ;incstack = 0
 13160                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13161  124F  3018               	movlw	24
 13162  1250  00F5               	movwf	readRegister@slaveAddress
 13163  1251  3000               	movlw	0
 13164  1252  00F6               	movwf	readRegister@slaveAddress+1
 13165  1253  302A               	movlw	42
 13166  1254  00F7               	movwf	readRegister@regAddress
 13167  1255  3000               	movlw	0
 13168  1256  00F8               	movwf	readRegister@regAddress+1
 13169  1257  31B6  26FE  3192   	fcall	_readRegister
 13170  125A  0875               	movf	?_readRegister,w
 13171  125B  0021               	movlb	1	; select bank1
 13172  125C  00B1               	movwf	??_updateVoltages^(0+128)
 13173  125D  0876               	movf	?_readRegister+1,w
 13174  125E  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13175  125F  0831               	movf	??_updateVoltages^(0+128),w
 13176  1260  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13177  1261  01B1               	clrf	??_updateVoltages^(0+128)
 13178  1262  3018               	movlw	24
 13179  1263  00F5               	movwf	readRegister@slaveAddress
 13180  1264  3000               	movlw	0
 13181  1265  00F6               	movwf	readRegister@slaveAddress+1
 13182  1266  302B               	movlw	43
 13183  1267  00F7               	movwf	readRegister@regAddress
 13184  1268  3000               	movlw	0
 13185  1269  00F8               	movwf	readRegister@regAddress+1
 13186  126A  31B6  26FE  3192   	fcall	_readRegister
 13187  126D  0875               	movf	?_readRegister,w
 13188  126E  0021               	movlb	1	; select bank1
 13189  126F  0431               	iorwf	??_updateVoltages^(0+128),w
 13190  1270  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13191  1271  0876               	movf	?_readRegister+1,w
 13192  1272  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13193  1273  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13194  1274  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13195  1275  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13196  1276  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13197  1277  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13198  1278  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13199                           
 13200                           ;BQ76920.c: 208:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13201  1279  0022               	movlb	2	; select bank2
 13202  127A  086D               	movf	_adcGain^(0+256),w
 13203  127B  00F1               	movwf	___xxtofl@val
 13204  127C  086E               	movf	(_adcGain+1)^(0+256),w
 13205  127D  00F2               	movwf	___xxtofl@val+1
 13206  127E  0D89               	rlf	9,f
 13207  127F  3B89               	subwfb	9,f
 13208  1280  0989               	comf	9,f
 13209  1281  00F3               	movwf	___xxtofl@val+2
 13210  1282  00F4               	movwf	___xxtofl@val+3
 13211  1283  3001               	movlw	1
 13212  1284  31A0  2009  3192   	fcall	___xxtofl
 13213  1287  0874               	movf	?___xxtofl+3,w
 13214  1288  0020               	movlb	0	; select bank0
 13215  1289  00AD               	movwf	___flmul@a+3
 13216  128A  0873               	movf	?___xxtofl+2,w
 13217  128B  00AC               	movwf	___flmul@a+2
 13218  128C  0872               	movf	?___xxtofl+1,w
 13219  128D  00AB               	movwf	___flmul@a+1
 13220  128E  0871               	movf	?___xxtofl,w
 13221  128F  00AA               	movwf	___flmul@a
 13222  1290  3040               	movlw	64
 13223  1291  00A9               	movwf	___flmul@b+3
 13224  1292  3080               	movlw	128
 13225  1293  00A8               	movwf	___flmul@b+2
 13226  1294  3000               	movlw	0
 13227  1295  00A7               	movwf	___flmul@b+1
 13228  1296  3000               	movlw	0
 13229  1297  00A6               	movwf	___flmul@b
 13230  1298  3190  2023  3192   	fcall	___flmul
 13231  129B  0020               	movlb	0	; select bank0
 13232  129C  0829               	movf	?___flmul+3,w
 13233  129D  0021               	movlb	1	; select bank1
 13234  129E  00B7               	movwf	(_updateVoltages$2028+3)^(0+128)
 13235  129F  0020               	movlb	0	; select bank0
 13236  12A0  0828               	movf	?___flmul+2,w
 13237  12A1  0021               	movlb	1	; select bank1
 13238  12A2  00B6               	movwf	(_updateVoltages$2028+2)^(0+128)
 13239  12A3  0020               	movlb	0	; select bank0
 13240  12A4  0827               	movf	?___flmul+1,w
 13241  12A5  0021               	movlb	1	; select bank1
 13242  12A6  00B5               	movwf	(_updateVoltages$2028+1)^(0+128)
 13243  12A7  0020               	movlb	0	; select bank0
 13244  12A8  0826               	movf	?___flmul,w
 13245  12A9  0021               	movlb	1	; select bank1
 13246  12AA  00B4               	movwf	_updateVoltages$2028^(0+128)
 13247                           
 13248                           ;BQ76920.c: 208:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13249  12AB  0837               	movf	(_updateVoltages$2028+3)^(0+128),w
 13250  12AC  0020               	movlb	0	; select bank0
 13251  12AD  00AD               	movwf	___flmul@a+3
 13252  12AE  0021               	movlb	1	; select bank1
 13253  12AF  0836               	movf	(_updateVoltages$2028+2)^(0+128),w
 13254  12B0  0020               	movlb	0	; select bank0
 13255  12B1  00AC               	movwf	___flmul@a+2
 13256  12B2  0021               	movlb	1	; select bank1
 13257  12B3  0835               	movf	(_updateVoltages$2028+1)^(0+128),w
 13258  12B4  0020               	movlb	0	; select bank0
 13259  12B5  00AB               	movwf	___flmul@a+1
 13260  12B6  0021               	movlb	1	; select bank1
 13261  12B7  0834               	movf	_updateVoltages$2028^(0+128),w
 13262  12B8  0020               	movlb	0	; select bank0
 13263  12B9  00AA               	movwf	___flmul@a
 13264  12BA  0021               	movlb	1	; select bank1
 13265  12BB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13266  12BC  00F4               	movwf	___xxtofl@val+3
 13267  12BD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13268  12BE  00F3               	movwf	___xxtofl@val+2
 13269  12BF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13270  12C0  00F2               	movwf	___xxtofl@val+1
 13271  12C1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13272  12C2  00F1               	movwf	___xxtofl@val
 13273  12C3  3001               	movlw	1
 13274  12C4  31A0  2009  3192   	fcall	___xxtofl
 13275  12C7  0874               	movf	?___xxtofl+3,w
 13276  12C8  0020               	movlb	0	; select bank0
 13277  12C9  00A9               	movwf	___flmul@b+3
 13278  12CA  0873               	movf	?___xxtofl+2,w
 13279  12CB  00A8               	movwf	___flmul@b+2
 13280  12CC  0872               	movf	?___xxtofl+1,w
 13281  12CD  00A7               	movwf	___flmul@b+1
 13282  12CE  0871               	movf	?___xxtofl,w
 13283  12CF  00A6               	movwf	___flmul@b
 13284  12D0  3190  2023  3192   	fcall	___flmul
 13285  12D3  0020               	movlb	0	; select bank0
 13286  12D4  0829               	movf	?___flmul+3,w
 13287  12D5  00C7               	movwf	___fldiv@b+3
 13288  12D6  0828               	movf	?___flmul+2,w
 13289  12D7  00C6               	movwf	___fldiv@b+2
 13290  12D8  0827               	movf	?___flmul+1,w
 13291  12D9  00C5               	movwf	___fldiv@b+1
 13292  12DA  0826               	movf	?___flmul,w
 13293  12DB  00C4               	movwf	___fldiv@b
 13294  12DC  3044               	movlw	68
 13295  12DD  00C3               	movwf	___fldiv@a+3
 13296  12DE  307A               	movlw	122
 13297  12DF  00C2               	movwf	___fldiv@a+2
 13298  12E0  3000               	movlw	0
 13299  12E1  00C1               	movwf	___fldiv@a+1
 13300  12E2  3000               	movlw	0
 13301  12E3  00C0               	movwf	___fldiv@a
 13302  12E4  319C  24E2  3192   	fcall	___fldiv
 13303  12E7  0020               	movlb	0	; select bank0
 13304  12E8  0843               	movf	?___fldiv+3,w
 13305  12E9  00E1               	movwf	___fladd@a+3
 13306  12EA  0842               	movf	?___fldiv+2,w
 13307  12EB  00E0               	movwf	___fladd@a+2
 13308  12EC  0841               	movf	?___fldiv+1,w
 13309  12ED  00DF               	movwf	___fladd@a+1
 13310  12EE  0840               	movf	?___fldiv,w
 13311  12EF  00DE               	movwf	___fladd@a
 13312  12F0  0022               	movlb	2	; select bank2
 13313  12F1  086C               	movf	(_adcOffset+1)^(0+256),w
 13314  12F2  0021               	movlb	1	; select bank1
 13315  12F3  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13316  12F4  0022               	movlb	2	; select bank2
 13317  12F5  086B               	movf	_adcOffset^(0+256),w
 13318  12F6  0021               	movlb	1	; select bank1
 13319  12F7  00B1               	movwf	??_updateVoltages^(0+128)
 13320  12F8  35B1               	lslf	??_updateVoltages^(0+128),f
 13321  12F9  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13322  12FA  35B1               	lslf	??_updateVoltages^(0+128),f
 13323  12FB  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13324  12FC  0831               	movf	??_updateVoltages^(0+128),w
 13325  12FD  00F1               	movwf	___xxtofl@val
 13326  12FE  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13327  12FF  00F2               	movwf	___xxtofl@val+1
 13328  1300  0D89               	rlf	9,f
 13329  1301  3B89               	subwfb	9,f
 13330  1302  0989               	comf	9,f
 13331  1303  00F3               	movwf	___xxtofl@val+2
 13332  1304  00F4               	movwf	___xxtofl@val+3
 13333  1305  3001               	movlw	1
 13334  1306  31A0  2009  3192   	fcall	___xxtofl
 13335  1309  0874               	movf	?___xxtofl+3,w
 13336  130A  0020               	movlb	0	; select bank0
 13337  130B  00DD               	movwf	___fladd@b+3
 13338  130C  0873               	movf	?___xxtofl+2,w
 13339  130D  00DC               	movwf	___fladd@b+2
 13340  130E  0872               	movf	?___xxtofl+1,w
 13341  130F  00DB               	movwf	___fladd@b+1
 13342  1310  0871               	movf	?___xxtofl,w
 13343  1311  00DA               	movwf	___fladd@b
 13344  1312  3185  25F5  3192   	fcall	___fladd
 13345  1315  0020               	movlb	0	; select bank0
 13346  1316  085D               	movf	?___fladd+3,w
 13347  1317  0021               	movlb	1	; select bank1
 13348  1318  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13349  1319  0020               	movlb	0	; select bank0
 13350  131A  085C               	movf	?___fladd+2,w
 13351  131B  0021               	movlb	1	; select bank1
 13352  131C  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13353  131D  0020               	movlb	0	; select bank0
 13354  131E  085B               	movf	?___fladd+1,w
 13355  131F  0021               	movlb	1	; select bank1
 13356  1320  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13357  1321  0020               	movlb	0	; select bank0
 13358  1322  085A               	movf	?___fladd,w
 13359  1323  0021               	movlb	1	; select bank1
 13360  1324  00A8               	movwf	___fltol@f1^(0+128)
 13361  1325  31A9  213B  3192   	fcall	___fltol
 13362  1328  0021               	movlb	1	; select bank1
 13363  1329  082B               	movf	(?___fltol+3)^(0+128),w
 13364  132A  0023               	movlb	3	; select bank3
 13365  132B  00C1               	movwf	(_batVoltage+3)^(0+384)
 13366  132C  0021               	movlb	1	; select bank1
 13367  132D  082A               	movf	(?___fltol+2)^(0+128),w
 13368  132E  0023               	movlb	3	; select bank3
 13369  132F  00C0               	movwf	(_batVoltage+2)^(0+384)
 13370  1330  0021               	movlb	1	; select bank1
 13371  1331  0829               	movf	(?___fltol+1)^(0+128),w
 13372  1332  0023               	movlb	3	; select bank3
 13373  1333  00BF               	movwf	(_batVoltage+1)^(0+384)
 13374  1334  0021               	movlb	1	; select bank1
 13375  1335  0828               	movf	?___fltol^(0+128),w
 13376  1336  0023               	movlb	3	; select bank3
 13377  1337  00BE               	movwf	_batVoltage^(0+384)
 13378                           
 13379                           ;BQ76920.c: 231:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13380  1338  3018               	movlw	24
 13381  1339  00F5               	movwf	readRegister@slaveAddress
 13382  133A  3000               	movlw	0
 13383  133B  00F6               	movwf	readRegister@slaveAddress+1
 13384  133C  300C               	movlw	12
 13385  133D  00F7               	movwf	readRegister@regAddress
 13386  133E  3000               	movlw	0
 13387  133F  00F8               	movwf	readRegister@regAddress+1
 13388  1340  31B6  26FE  3192   	fcall	_readRegister
 13389  1343  303F               	movlw	63
 13390  1344  0575               	andwf	?_readRegister,w
 13391  1345  0021               	movlb	1	; select bank1
 13392  1346  00B1               	movwf	??_updateVoltages^(0+128)
 13393  1347  3000               	movlw	0
 13394  1348  0576               	andwf	?_readRegister+1,w
 13395  1349  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13396  134A  0831               	movf	??_updateVoltages^(0+128),w
 13397  134B  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13398  134C  01B1               	clrf	??_updateVoltages^(0+128)
 13399  134D  3018               	movlw	24
 13400  134E  00F5               	movwf	readRegister@slaveAddress
 13401  134F  3000               	movlw	0
 13402  1350  00F6               	movwf	readRegister@slaveAddress+1
 13403  1351  300D               	movlw	13
 13404  1352  00F7               	movwf	readRegister@regAddress
 13405  1353  3000               	movlw	0
 13406  1354  00F8               	movwf	readRegister@regAddress+1
 13407  1355  31B6  26FE  3192   	fcall	_readRegister
 13408  1358  0875               	movf	?_readRegister,w
 13409  1359  0021               	movlb	1	; select bank1
 13410  135A  0431               	iorwf	??_updateVoltages^(0+128),w
 13411  135B  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13412  135C  0876               	movf	?_readRegister+1,w
 13413  135D  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13414  135E  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13415  135F  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13416  1360  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13417  1361  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13418  1362  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13419  1363  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13420                           
 13421                           ;BQ76920.c: 232:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13422  1364  3000               	movlw	0
 13423  1365  0020               	movlb	0	; select bank0
 13424  1366  00A7               	movwf	___aldiv@divisor+3
 13425  1367  3000               	movlw	0
 13426  1368  00A6               	movwf	___aldiv@divisor+2
 13427  1369  3003               	movlw	3
 13428  136A  00A5               	movwf	___aldiv@divisor+1
 13429  136B  30E8               	movlw	232
 13430  136C  00A4               	movwf	___aldiv@divisor
 13431  136D  0022               	movlb	2	; select bank2
 13432  136E  086D               	movf	_adcGain^(0+256),w
 13433  136F  00F1               	movwf	___lmul@multiplier
 13434  1370  086E               	movf	(_adcGain+1)^(0+256),w
 13435  1371  00F2               	movwf	___lmul@multiplier+1
 13436  1372  0D89               	rlf	9,f
 13437  1373  3B89               	subwfb	9,f
 13438  1374  0989               	comf	9,f
 13439  1375  00F3               	movwf	___lmul@multiplier+2
 13440  1376  00F4               	movwf	___lmul@multiplier+3
 13441  1377  0021               	movlb	1	; select bank1
 13442  1378  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13443  1379  00F8               	movwf	___lmul@multiplicand+3
 13444  137A  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13445  137B  00F7               	movwf	___lmul@multiplicand+2
 13446  137C  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13447  137D  00F6               	movwf	___lmul@multiplicand+1
 13448  137E  0838               	movf	updateVoltages@adcVal^(0+128),w
 13449  137F  00F5               	movwf	___lmul@multiplicand
 13450  1380  31B6  2665  3192   	fcall	___lmul
 13451  1383  0874               	movf	?___lmul+3,w
 13452  1384  0020               	movlb	0	; select bank0
 13453  1385  00AB               	movwf	___aldiv@dividend+3
 13454  1386  0873               	movf	?___lmul+2,w
 13455  1387  00AA               	movwf	___aldiv@dividend+2
 13456  1388  0872               	movf	?___lmul+1,w
 13457  1389  00A9               	movwf	___aldiv@dividend+1
 13458  138A  0871               	movf	?___lmul,w
 13459  138B  00A8               	movwf	___aldiv@dividend
 13460  138C  31AB  23F7  3192   	fcall	___aldiv
 13461  138F  0022               	movlb	2	; select bank2
 13462  1390  086B               	movf	_adcOffset^(0+256),w
 13463  1391  0020               	movlb	0	; select bank0
 13464  1392  0724               	addwf	?___aldiv,w
 13465  1393  0023               	movlb	3	; select bank3
 13466  1394  00A0               	movwf	_cellVoltages^(0+384)
 13467  1395  0022               	movlb	2	; select bank2
 13468  1396  086C               	movf	(_adcOffset+1)^(0+256),w
 13469  1397  0020               	movlb	0	; select bank0
 13470  1398  3D25               	addwfc	?___aldiv+1,w
 13471  1399  0023               	movlb	3	; select bank3
 13472  139A  00A1               	movwf	(_cellVoltages+1)^(0+384)
 13473                           
 13474                           ;BQ76920.c: 233:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13475  139B  3018               	movlw	24
 13476  139C  00F5               	movwf	readRegister@slaveAddress
 13477  139D  3000               	movlw	0
 13478  139E  00F6               	movwf	readRegister@slaveAddress+1
 13479  139F  300E               	movlw	14
 13480  13A0  00F7               	movwf	readRegister@regAddress
 13481  13A1  3000               	movlw	0
 13482  13A2  00F8               	movwf	readRegister@regAddress+1
 13483  13A3  31B6  26FE  3192   	fcall	_readRegister
 13484  13A6  303F               	movlw	63
 13485  13A7  0575               	andwf	?_readRegister,w
 13486  13A8  0021               	movlb	1	; select bank1
 13487  13A9  00B1               	movwf	??_updateVoltages^(0+128)
 13488  13AA  3000               	movlw	0
 13489  13AB  0576               	andwf	?_readRegister+1,w
 13490  13AC  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13491  13AD  0831               	movf	??_updateVoltages^(0+128),w
 13492  13AE  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13493  13AF  01B1               	clrf	??_updateVoltages^(0+128)
 13494  13B0  3018               	movlw	24
 13495  13B1  00F5               	movwf	readRegister@slaveAddress
 13496  13B2  3000               	movlw	0
 13497  13B3  00F6               	movwf	readRegister@slaveAddress+1
 13498  13B4  300F               	movlw	15
 13499  13B5  00F7               	movwf	readRegister@regAddress
 13500  13B6  3000               	movlw	0
 13501  13B7  00F8               	movwf	readRegister@regAddress+1
 13502  13B8  31B6  26FE  3192   	fcall	_readRegister
 13503  13BB  0875               	movf	?_readRegister,w
 13504  13BC  0021               	movlb	1	; select bank1
 13505  13BD  0431               	iorwf	??_updateVoltages^(0+128),w
 13506  13BE  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13507  13BF  0876               	movf	?_readRegister+1,w
 13508  13C0  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13509  13C1  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13510  13C2  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13511  13C3  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13512  13C4  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13513  13C5  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13514  13C6  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13515                           
 13516                           ;BQ76920.c: 234:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13517  13C7  3000               	movlw	0
 13518  13C8  0020               	movlb	0	; select bank0
 13519  13C9  00A7               	movwf	___aldiv@divisor+3
 13520  13CA  3000               	movlw	0
 13521  13CB  00A6               	movwf	___aldiv@divisor+2
 13522  13CC  3003               	movlw	3
 13523  13CD  00A5               	movwf	___aldiv@divisor+1
 13524  13CE  30E8               	movlw	232
 13525  13CF  00A4               	movwf	___aldiv@divisor
 13526  13D0  0022               	movlb	2	; select bank2
 13527  13D1  086D               	movf	_adcGain^(0+256),w
 13528  13D2  00F1               	movwf	___lmul@multiplier
 13529  13D3  086E               	movf	(_adcGain+1)^(0+256),w
 13530  13D4  00F2               	movwf	___lmul@multiplier+1
 13531  13D5  0D89               	rlf	9,f
 13532  13D6  3B89               	subwfb	9,f
 13533  13D7  0989               	comf	9,f
 13534  13D8  00F3               	movwf	___lmul@multiplier+2
 13535  13D9  00F4               	movwf	___lmul@multiplier+3
 13536  13DA  0021               	movlb	1	; select bank1
 13537  13DB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13538  13DC  00F8               	movwf	___lmul@multiplicand+3
 13539  13DD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13540  13DE  00F7               	movwf	___lmul@multiplicand+2
 13541  13DF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13542  13E0  00F6               	movwf	___lmul@multiplicand+1
 13543  13E1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13544  13E2  00F5               	movwf	___lmul@multiplicand
 13545  13E3  31B6  2665  3192   	fcall	___lmul
 13546  13E6  0874               	movf	?___lmul+3,w
 13547  13E7  0020               	movlb	0	; select bank0
 13548  13E8  00AB               	movwf	___aldiv@dividend+3
 13549  13E9  0873               	movf	?___lmul+2,w
 13550  13EA  00AA               	movwf	___aldiv@dividend+2
 13551  13EB  0872               	movf	?___lmul+1,w
 13552  13EC  00A9               	movwf	___aldiv@dividend+1
 13553  13ED  0871               	movf	?___lmul,w
 13554  13EE  00A8               	movwf	___aldiv@dividend
 13555  13EF  31AB  23F7  3192   	fcall	___aldiv
 13556  13F2  0022               	movlb	2	; select bank2
 13557  13F3  086B               	movf	_adcOffset^(0+256),w
 13558  13F4  0020               	movlb	0	; select bank0
 13559  13F5  0724               	addwf	?___aldiv,w
 13560  13F6  0023               	movlb	3	; select bank3
 13561  13F7  00A2               	movwf	(_cellVoltages^(0+384)+2)
 13562  13F8  0022               	movlb	2	; select bank2
 13563  13F9  086C               	movf	(_adcOffset+1)^(0+256),w
 13564  13FA  0020               	movlb	0	; select bank0
 13565  13FB  3D25               	addwfc	?___aldiv+1,w
 13566  13FC  0023               	movlb	3	; select bank3
 13567  13FD  00A3               	movwf	((_cellVoltages+1)^(0+384)+2)
 13568                           
 13569                           ;BQ76920.c: 235:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13570  13FE  3018               	movlw	24
 13571  13FF  00F5               	movwf	readRegister@slaveAddress
 13572  1400  3000               	movlw	0
 13573  1401  00F6               	movwf	readRegister@slaveAddress+1
 13574  1402  3010               	movlw	16
 13575  1403  00F7               	movwf	readRegister@regAddress
 13576  1404  3000               	movlw	0
 13577  1405  00F8               	movwf	readRegister@regAddress+1
 13578  1406  31B6  26FE  3192   	fcall	_readRegister
 13579  1409  303F               	movlw	63
 13580  140A  0575               	andwf	?_readRegister,w
 13581  140B  0021               	movlb	1	; select bank1
 13582  140C  00B1               	movwf	??_updateVoltages^(0+128)
 13583  140D  3000               	movlw	0
 13584  140E  0576               	andwf	?_readRegister+1,w
 13585  140F  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13586  1410  0831               	movf	??_updateVoltages^(0+128),w
 13587  1411  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13588  1412  01B1               	clrf	??_updateVoltages^(0+128)
 13589  1413  3018               	movlw	24
 13590  1414  00F5               	movwf	readRegister@slaveAddress
 13591  1415  3000               	movlw	0
 13592  1416  00F6               	movwf	readRegister@slaveAddress+1
 13593  1417  3011               	movlw	17
 13594  1418  00F7               	movwf	readRegister@regAddress
 13595  1419  3000               	movlw	0
 13596  141A  00F8               	movwf	readRegister@regAddress+1
 13597  141B  31B6  26FE  3192   	fcall	_readRegister
 13598  141E  0875               	movf	?_readRegister,w
 13599  141F  0021               	movlb	1	; select bank1
 13600  1420  0431               	iorwf	??_updateVoltages^(0+128),w
 13601  1421  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13602  1422  0876               	movf	?_readRegister+1,w
 13603  1423  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13604  1424  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13605  1425  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13606  1426  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13607  1427  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13608  1428  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13609  1429  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13610                           
 13611                           ;BQ76920.c: 236:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13612  142A  3000               	movlw	0
 13613  142B  0020               	movlb	0	; select bank0
 13614  142C  00A7               	movwf	___aldiv@divisor+3
 13615  142D  3000               	movlw	0
 13616  142E  00A6               	movwf	___aldiv@divisor+2
 13617  142F  3003               	movlw	3
 13618  1430  00A5               	movwf	___aldiv@divisor+1
 13619  1431  30E8               	movlw	232
 13620  1432  00A4               	movwf	___aldiv@divisor
 13621  1433  0022               	movlb	2	; select bank2
 13622  1434  086D               	movf	_adcGain^(0+256),w
 13623  1435  00F1               	movwf	___lmul@multiplier
 13624  1436  086E               	movf	(_adcGain+1)^(0+256),w
 13625  1437  00F2               	movwf	___lmul@multiplier+1
 13626  1438  0D89               	rlf	9,f
 13627  1439  3B89               	subwfb	9,f
 13628  143A  0989               	comf	9,f
 13629  143B  00F3               	movwf	___lmul@multiplier+2
 13630  143C  00F4               	movwf	___lmul@multiplier+3
 13631  143D  0021               	movlb	1	; select bank1
 13632  143E  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13633  143F  00F8               	movwf	___lmul@multiplicand+3
 13634  1440  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13635  1441  00F7               	movwf	___lmul@multiplicand+2
 13636  1442  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13637  1443  00F6               	movwf	___lmul@multiplicand+1
 13638  1444  0838               	movf	updateVoltages@adcVal^(0+128),w
 13639  1445  00F5               	movwf	___lmul@multiplicand
 13640  1446  31B6  2665  3192   	fcall	___lmul
 13641  1449  0874               	movf	?___lmul+3,w
 13642  144A  0020               	movlb	0	; select bank0
 13643  144B  00AB               	movwf	___aldiv@dividend+3
 13644  144C  0873               	movf	?___lmul+2,w
 13645  144D  00AA               	movwf	___aldiv@dividend+2
 13646  144E  0872               	movf	?___lmul+1,w
 13647  144F  00A9               	movwf	___aldiv@dividend+1
 13648  1450  0871               	movf	?___lmul,w
 13649  1451  00A8               	movwf	___aldiv@dividend
 13650  1452  31AB  23F7  3192   	fcall	___aldiv
 13651  1455  0022               	movlb	2	; select bank2
 13652  1456  086B               	movf	_adcOffset^(0+256),w
 13653  1457  0020               	movlb	0	; select bank0
 13654  1458  0724               	addwf	?___aldiv,w
 13655  1459  0023               	movlb	3	; select bank3
 13656  145A  00A4               	movwf	(_cellVoltages^(0+384)+4)
 13657  145B  0022               	movlb	2	; select bank2
 13658  145C  086C               	movf	(_adcOffset+1)^(0+256),w
 13659  145D  0020               	movlb	0	; select bank0
 13660  145E  3D25               	addwfc	?___aldiv+1,w
 13661  145F  0023               	movlb	3	; select bank3
 13662  1460  00A5               	movwf	((_cellVoltages+1)^(0+384)+4)
 13663                           
 13664                           ;BQ76920.c: 237:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 13665  1461  3018               	movlw	24
 13666  1462  00F5               	movwf	readRegister@slaveAddress
 13667  1463  3000               	movlw	0
 13668  1464  00F6               	movwf	readRegister@slaveAddress+1
 13669  1465  3012               	movlw	18
 13670  1466  00F7               	movwf	readRegister@regAddress
 13671  1467  3000               	movlw	0
 13672  1468  00F8               	movwf	readRegister@regAddress+1
 13673  1469  31B6  26FE  3192   	fcall	_readRegister
 13674  146C  303F               	movlw	63
 13675  146D  0575               	andwf	?_readRegister,w
 13676  146E  0021               	movlb	1	; select bank1
 13677  146F  00B1               	movwf	??_updateVoltages^(0+128)
 13678  1470  3000               	movlw	0
 13679  1471  0576               	andwf	?_readRegister+1,w
 13680  1472  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13681  1473  0831               	movf	??_updateVoltages^(0+128),w
 13682  1474  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13683  1475  01B1               	clrf	??_updateVoltages^(0+128)
 13684  1476  3018               	movlw	24
 13685  1477  00F5               	movwf	readRegister@slaveAddress
 13686  1478  3000               	movlw	0
 13687  1479  00F6               	movwf	readRegister@slaveAddress+1
 13688  147A  3013               	movlw	19
 13689  147B  00F7               	movwf	readRegister@regAddress
 13690  147C  3000               	movlw	0
 13691  147D  00F8               	movwf	readRegister@regAddress+1
 13692  147E  31B6  26FE  3192   	fcall	_readRegister
 13693  1481  0875               	movf	?_readRegister,w
 13694  1482  0021               	movlb	1	; select bank1
 13695  1483  0431               	iorwf	??_updateVoltages^(0+128),w
 13696  1484  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13697  1485  0876               	movf	?_readRegister+1,w
 13698  1486  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13699  1487  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13700  1488  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13701  1489  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13702  148A  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13703  148B  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13704  148C  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13705                           
 13706                           ;BQ76920.c: 238:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 13707  148D  3000               	movlw	0
 13708  148E  0020               	movlb	0	; select bank0
 13709  148F  00A7               	movwf	___aldiv@divisor+3
 13710  1490  3000               	movlw	0
 13711  1491  00A6               	movwf	___aldiv@divisor+2
 13712  1492  3003               	movlw	3
 13713  1493  00A5               	movwf	___aldiv@divisor+1
 13714  1494  30E8               	movlw	232
 13715  1495  00A4               	movwf	___aldiv@divisor
 13716  1496  0022               	movlb	2	; select bank2
 13717  1497  086D               	movf	_adcGain^(0+256),w
 13718  1498  00F1               	movwf	___lmul@multiplier
 13719  1499  086E               	movf	(_adcGain+1)^(0+256),w
 13720  149A  00F2               	movwf	___lmul@multiplier+1
 13721  149B  0D89               	rlf	9,f
 13722  149C  3B89               	subwfb	9,f
 13723  149D  0989               	comf	9,f
 13724  149E  00F3               	movwf	___lmul@multiplier+2
 13725  149F  00F4               	movwf	___lmul@multiplier+3
 13726  14A0  0021               	movlb	1	; select bank1
 13727  14A1  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13728  14A2  00F8               	movwf	___lmul@multiplicand+3
 13729  14A3  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13730  14A4  00F7               	movwf	___lmul@multiplicand+2
 13731  14A5  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13732  14A6  00F6               	movwf	___lmul@multiplicand+1
 13733  14A7  0838               	movf	updateVoltages@adcVal^(0+128),w
 13734  14A8  00F5               	movwf	___lmul@multiplicand
 13735  14A9  31B6  2665  3192   	fcall	___lmul
 13736  14AC  0874               	movf	?___lmul+3,w
 13737  14AD  0020               	movlb	0	; select bank0
 13738  14AE  00AB               	movwf	___aldiv@dividend+3
 13739  14AF  0873               	movf	?___lmul+2,w
 13740  14B0  00AA               	movwf	___aldiv@dividend+2
 13741  14B1  0872               	movf	?___lmul+1,w
 13742  14B2  00A9               	movwf	___aldiv@dividend+1
 13743  14B3  0871               	movf	?___lmul,w
 13744  14B4  00A8               	movwf	___aldiv@dividend
 13745  14B5  31AB  23F7  3192   	fcall	___aldiv
 13746  14B8  0022               	movlb	2	; select bank2
 13747  14B9  086B               	movf	_adcOffset^(0+256),w
 13748  14BA  0020               	movlb	0	; select bank0
 13749  14BB  0724               	addwf	?___aldiv,w
 13750  14BC  0023               	movlb	3	; select bank3
 13751  14BD  00A6               	movwf	(_cellVoltages^(0+384)+6)
 13752  14BE  0022               	movlb	2	; select bank2
 13753  14BF  086C               	movf	(_adcOffset+1)^(0+256),w
 13754  14C0  0020               	movlb	0	; select bank0
 13755  14C1  3D25               	addwfc	?___aldiv+1,w
 13756  14C2  0023               	movlb	3	; select bank3
 13757  14C3  00A7               	movwf	((_cellVoltages+1)^(0+384)+6)
 13758                           
 13759                           ;BQ76920.c: 239:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 13760  14C4  3018               	movlw	24
 13761  14C5  00F5               	movwf	readRegister@slaveAddress
 13762  14C6  3000               	movlw	0
 13763  14C7  00F6               	movwf	readRegister@slaveAddress+1
 13764  14C8  3014               	movlw	20
 13765  14C9  00F7               	movwf	readRegister@regAddress
 13766  14CA  3000               	movlw	0
 13767  14CB  00F8               	movwf	readRegister@regAddress+1
 13768  14CC  31B6  26FE  3192   	fcall	_readRegister
 13769  14CF  303F               	movlw	63
 13770  14D0  0575               	andwf	?_readRegister,w
 13771  14D1  0021               	movlb	1	; select bank1
 13772  14D2  00B1               	movwf	??_updateVoltages^(0+128)
 13773  14D3  3000               	movlw	0
 13774  14D4  0576               	andwf	?_readRegister+1,w
 13775  14D5  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13776  14D6  0831               	movf	??_updateVoltages^(0+128),w
 13777  14D7  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13778  14D8  01B1               	clrf	??_updateVoltages^(0+128)
 13779  14D9  3018               	movlw	24
 13780  14DA  00F5               	movwf	readRegister@slaveAddress
 13781  14DB  3000               	movlw	0
 13782  14DC  00F6               	movwf	readRegister@slaveAddress+1
 13783  14DD  3015               	movlw	21
 13784  14DE  00F7               	movwf	readRegister@regAddress
 13785  14DF  3000               	movlw	0
 13786  14E0  00F8               	movwf	readRegister@regAddress+1
 13787  14E1  31B6  26FE  3192   	fcall	_readRegister
 13788  14E4  0875               	movf	?_readRegister,w
 13789  14E5  0021               	movlb	1	; select bank1
 13790  14E6  0431               	iorwf	??_updateVoltages^(0+128),w
 13791  14E7  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13792  14E8  0876               	movf	?_readRegister+1,w
 13793  14E9  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13794  14EA  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13795  14EB  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13796  14EC  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13797  14ED  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13798  14EE  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13799  14EF  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13800                           
 13801                           ;BQ76920.c: 240:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 13802  14F0  3000               	movlw	0
 13803  14F1  0020               	movlb	0	; select bank0
 13804  14F2  00A7               	movwf	___aldiv@divisor+3
 13805  14F3  3000               	movlw	0
 13806  14F4  00A6               	movwf	___aldiv@divisor+2
 13807  14F5  3003               	movlw	3
 13808  14F6  00A5               	movwf	___aldiv@divisor+1
 13809  14F7  30E8               	movlw	232
 13810  14F8  00A4               	movwf	___aldiv@divisor
 13811  14F9  0022               	movlb	2	; select bank2
 13812  14FA  086D               	movf	_adcGain^(0+256),w
 13813  14FB  00F1               	movwf	___lmul@multiplier
 13814  14FC  086E               	movf	(_adcGain+1)^(0+256),w
 13815  14FD  00F2               	movwf	___lmul@multiplier+1
 13816  14FE  0D89               	rlf	9,f
 13817  14FF  3B89               	subwfb	9,f
 13818  1500  0989               	comf	9,f
 13819  1501  00F3               	movwf	___lmul@multiplier+2
 13820  1502  00F4               	movwf	___lmul@multiplier+3
 13821  1503  0021               	movlb	1	; select bank1
 13822  1504  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13823  1505  00F8               	movwf	___lmul@multiplicand+3
 13824  1506  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13825  1507  00F7               	movwf	___lmul@multiplicand+2
 13826  1508  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13827  1509  00F6               	movwf	___lmul@multiplicand+1
 13828  150A  0838               	movf	updateVoltages@adcVal^(0+128),w
 13829  150B  00F5               	movwf	___lmul@multiplicand
 13830  150C  31B6  2665  3192   	fcall	___lmul
 13831  150F  0874               	movf	?___lmul+3,w
 13832  1510  0020               	movlb	0	; select bank0
 13833  1511  00AB               	movwf	___aldiv@dividend+3
 13834  1512  0873               	movf	?___lmul+2,w
 13835  1513  00AA               	movwf	___aldiv@dividend+2
 13836  1514  0872               	movf	?___lmul+1,w
 13837  1515  00A9               	movwf	___aldiv@dividend+1
 13838  1516  0871               	movf	?___lmul,w
 13839  1517  00A8               	movwf	___aldiv@dividend
 13840  1518  31AB  23F7         	fcall	___aldiv
 13841  151A  0022               	movlb	2	; select bank2
 13842  151B  086B               	movf	_adcOffset^(0+256),w
 13843  151C  0020               	movlb	0	; select bank0
 13844  151D  0724               	addwf	?___aldiv,w
 13845  151E  0023               	movlb	3	; select bank3
 13846  151F  00A8               	movwf	(_cellVoltages^(0+384)+8)
 13847  1520  0022               	movlb	2	; select bank2
 13848  1521  086C               	movf	(_adcOffset+1)^(0+256),w
 13849  1522  0020               	movlb	0	; select bank0
 13850  1523  3D25               	addwfc	?___aldiv+1,w
 13851  1524  0023               	movlb	3	; select bank3
 13852  1525  00A9               	movwf	((_cellVoltages+1)^(0+384)+8)
 13853  1526  0008               	return
 13854  1527                     __end_of_updateVoltages:	
 13855                           
 13856                           	psect	text48
 13857  3665                     __ptext48:	
 13858 ;; *************** function ___lmul *****************
 13859 ;; Defined at:
 13860 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 13861 ;; Parameters:    Size  Location     Type
 13862 ;;  multiplier      4    1[COMMON] unsigned long 
 13863 ;;  multiplicand    4    5[COMMON] unsigned long 
 13864 ;; Auto vars:     Size  Location     Type
 13865 ;;  product         4    0[BANK0 ] unsigned long 
 13866 ;; Return value:  Size  Location     Type
 13867 ;;                  4    1[COMMON] unsigned long 
 13868 ;; Registers used:
 13869 ;;		wreg, status,2, status,0
 13870 ;; Tracked objects:
 13871 ;;		On entry : 0/0
 13872 ;;		On exit  : 0/0
 13873 ;;		Unchanged: 0/0
 13874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13875 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13876 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13878 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13879 ;;Total ram usage:       12 bytes
 13880 ;; Hardware stack levels used:    1
 13881 ;; Hardware stack levels required when called:    1
 13882 ;; This function calls:
 13883 ;;		Nothing
 13884 ;; This function is called by:
 13885 ;;		_setCellUndervoltageProtection
 13886 ;;		_setCellOvervoltageProtection
 13887 ;;		_updateVoltages
 13888 ;; This function uses a non-reentrant model
 13889 ;;
 13890                           
 13891                           
 13892                           ;psect for function ___lmul
 13893  3665                     ___lmul:	
 13894                           
 13895                           ;incstack = 0
 13896                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13897  3665  3000               	movlw	0
 13898  3666  0020               	movlb	0	; select bank0
 13899  3667  00A3               	movwf	___lmul@product+3
 13900  3668  3000               	movlw	0
 13901  3669  00A2               	movwf	___lmul@product+2
 13902  366A  3000               	movlw	0
 13903  366B  00A1               	movwf	___lmul@product+1
 13904  366C  3000               	movlw	0
 13905  366D  00A0               	movwf	___lmul@product
 13906  366E                     l7856:	
 13907  366E  1C71               	btfss	___lmul@multiplier,0
 13908  366F  2E79               	goto	l7860
 13909  3670  0875               	movf	___lmul@multiplicand,w
 13910  3671  0020               	movlb	0	; select bank0
 13911  3672  07A0               	addwf	___lmul@product,f
 13912  3673  0876               	movf	___lmul@multiplicand+1,w
 13913  3674  3DA1               	addwfc	___lmul@product+1,f
 13914  3675  0877               	movf	___lmul@multiplicand+2,w
 13915  3676  3DA2               	addwfc	___lmul@product+2,f
 13916  3677  0878               	movf	___lmul@multiplicand+3,w
 13917  3678  3DA3               	addwfc	___lmul@product+3,f
 13918  3679                     l7860:	
 13919  3679  3001               	movlw	1
 13920  367A                     u10795:	
 13921  367A  35F5               	lslf	___lmul@multiplicand,f
 13922  367B  0DF6               	rlf	___lmul@multiplicand+1,f
 13923  367C  0DF7               	rlf	___lmul@multiplicand+2,f
 13924  367D  0DF8               	rlf	___lmul@multiplicand+3,f
 13925  367E  0B89               	decfsz	9,f
 13926  367F  2E7A               	goto	u10795
 13927  3680  3001               	movlw	1
 13928  3681                     u10805:	
 13929  3681  36F4               	lsrf	___lmul@multiplier+3,f
 13930  3682  0CF3               	rrf	___lmul@multiplier+2,f
 13931  3683  0CF2               	rrf	___lmul@multiplier+1,f
 13932  3684  0CF1               	rrf	___lmul@multiplier,f
 13933  3685  0B89               	decfsz	9,f
 13934  3686  2E81               	goto	u10805
 13935  3687  0874               	movf	___lmul@multiplier+3,w
 13936  3688  0473               	iorwf	___lmul@multiplier+2,w
 13937  3689  0472               	iorwf	___lmul@multiplier+1,w
 13938  368A  0471               	iorwf	___lmul@multiplier,w
 13939  368B  1D03               	skipz
 13940  368C  2E6E               	goto	l7856
 13941  368D  0020               	movlb	0	; select bank0
 13942  368E  0823               	movf	___lmul@product+3,w
 13943  368F  00F4               	movwf	?___lmul+3
 13944  3690  0822               	movf	___lmul@product+2,w
 13945  3691  00F3               	movwf	?___lmul+2
 13946  3692  0821               	movf	___lmul@product+1,w
 13947  3693  00F2               	movwf	?___lmul+1
 13948  3694  0820               	movf	___lmul@product,w
 13949  3695  00F1               	movwf	?___lmul
 13950  3696  0008               	return
 13951  3697                     __end_of___lmul:	
 13952                           
 13953                           	psect	text49
 13954  1527                     __ptext49:	
 13955 ;; *************** function _updateTemperatures *****************
 13956 ;; Defined at:
 13957 ;;		line 247 in file "BQ76920.c"
 13958 ;; Parameters:    Size  Location     Type
 13959 ;;		None
 13960 ;; Auto vars:     Size  Location     Type
 13961 ;;  rts             4   75[BANK1 ] unsigned long 
 13962 ;;  tmp             4   67[BANK1 ] float 
 13963 ;;  vtsx            2   73[BANK1 ] int 
 13964 ;;  adcVal          2   71[BANK1 ] int 
 13965 ;; Return value:  Size  Location     Type
 13966 ;;                  1    wreg      void 
 13967 ;; Registers used:
 13968 ;;		wreg, status,2, status,0, pclath, cstack
 13969 ;; Tracked objects:
 13970 ;;		On entry : 0/0
 13971 ;;		On exit  : 0/0
 13972 ;;		Unchanged: 0/0
 13973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13975 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13976 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13977 ;;      Totals:         0       0      59       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13978 ;;Total ram usage:       59 bytes
 13979 ;; Hardware stack levels used:    1
 13980 ;; Hardware stack levels required when called:    4
 13981 ;; This function calls:
 13982 ;;		___fladd
 13983 ;;		___fldiv
 13984 ;;		___flmul
 13985 ;;		___flsub
 13986 ;;		___fltol
 13987 ;;		___xxtofl
 13988 ;;		_logf
 13989 ;;		_readRegister
 13990 ;; This function is called by:
 13991 ;;		_AFE_UPDATE
 13992 ;; This function uses a non-reentrant model
 13993 ;;
 13994                           
 13995                           
 13996                           ;psect for function _updateTemperatures
 13997  1527                     _updateTemperatures:	
 13998                           
 13999                           ;BQ76920.c: 251:      unsigned long rts = 0;
 14000                           
 14001                           ;incstack = 0
 14002                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 14003  1527  3000               	movlw	0
 14004  1528  0021               	movlb	1	; select bank1
 14005  1529  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14006  152A  3000               	movlw	0
 14007  152B  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14008  152C  3000               	movlw	0
 14009  152D  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14010  152E  3000               	movlw	0
 14011  152F  00EB               	movwf	updateTemperatures@rts^(0+128)
 14012                           
 14013                           ;BQ76920.c: 253:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 14014  1530  3018               	movlw	24
 14015  1531  00F5               	movwf	readRegister@slaveAddress
 14016  1532  3000               	movlw	0
 14017  1533  00F6               	movwf	readRegister@slaveAddress+1
 14018  1534  302C               	movlw	44
 14019  1535  00F7               	movwf	readRegister@regAddress
 14020  1536  3000               	movlw	0
 14021  1537  00F8               	movwf	readRegister@regAddress+1
 14022  1538  31B6  26FE  3195   	fcall	_readRegister
 14023  153B  303F               	movlw	63
 14024  153C  0575               	andwf	?_readRegister,w
 14025  153D  0021               	movlb	1	; select bank1
 14026  153E  00B4               	movwf	??_updateTemperatures^(0+128)
 14027  153F  3000               	movlw	0
 14028  1540  0576               	andwf	?_readRegister+1,w
 14029  1541  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 14030  1542  0834               	movf	??_updateTemperatures^(0+128),w
 14031  1543  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 14032  1544  01B4               	clrf	??_updateTemperatures^(0+128)
 14033  1545  3018               	movlw	24
 14034  1546  00F5               	movwf	readRegister@slaveAddress
 14035  1547  3000               	movlw	0
 14036  1548  00F6               	movwf	readRegister@slaveAddress+1
 14037  1549  302D               	movlw	45
 14038  154A  00F7               	movwf	readRegister@regAddress
 14039  154B  3000               	movlw	0
 14040  154C  00F8               	movwf	readRegister@regAddress+1
 14041  154D  31B6  26FE  3195   	fcall	_readRegister
 14042  1550  0875               	movf	?_readRegister,w
 14043  1551  0021               	movlb	1	; select bank1
 14044  1552  0434               	iorwf	??_updateTemperatures^(0+128),w
 14045  1553  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 14046  1554  0876               	movf	?_readRegister+1,w
 14047  1555  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 14048  1556  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 14049                           
 14050                           ;BQ76920.c: 254:      vtsx = adcVal * 0.382;
 14051  1557  0867               	movf	updateTemperatures@adcVal^(0+128),w
 14052  1558  00F1               	movwf	___xxtofl@val
 14053  1559  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 14054  155A  00F2               	movwf	___xxtofl@val+1
 14055  155B  0D89               	rlf	9,f
 14056  155C  3B89               	subwfb	9,f
 14057  155D  0989               	comf	9,f
 14058  155E  00F3               	movwf	___xxtofl@val+2
 14059  155F  00F4               	movwf	___xxtofl@val+3
 14060  1560  3001               	movlw	1
 14061  1561  31A0  2009  3195   	fcall	___xxtofl
 14062  1564  0874               	movf	?___xxtofl+3,w
 14063  1565  0020               	movlb	0	; select bank0
 14064  1566  00AD               	movwf	___flmul@a+3
 14065  1567  0873               	movf	?___xxtofl+2,w
 14066  1568  00AC               	movwf	___flmul@a+2
 14067  1569  0872               	movf	?___xxtofl+1,w
 14068  156A  00AB               	movwf	___flmul@a+1
 14069  156B  0871               	movf	?___xxtofl,w
 14070  156C  00AA               	movwf	___flmul@a
 14071  156D  303E               	movlw	62
 14072  156E  00A9               	movwf	___flmul@b+3
 14073  156F  30C3               	movlw	195
 14074  1570  00A8               	movwf	___flmul@b+2
 14075  1571  3095               	movlw	149
 14076  1572  00A7               	movwf	___flmul@b+1
 14077  1573  3081               	movlw	129
 14078  1574  00A6               	movwf	___flmul@b
 14079  1575  3190  2023  3195   	fcall	___flmul
 14080  1578  0020               	movlb	0	; select bank0
 14081  1579  0829               	movf	?___flmul+3,w
 14082  157A  0021               	movlb	1	; select bank1
 14083  157B  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14084  157C  0020               	movlb	0	; select bank0
 14085  157D  0828               	movf	?___flmul+2,w
 14086  157E  0021               	movlb	1	; select bank1
 14087  157F  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14088  1580  0020               	movlb	0	; select bank0
 14089  1581  0827               	movf	?___flmul+1,w
 14090  1582  0021               	movlb	1	; select bank1
 14091  1583  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14092  1584  0020               	movlb	0	; select bank0
 14093  1585  0826               	movf	?___flmul,w
 14094  1586  0021               	movlb	1	; select bank1
 14095  1587  00A8               	movwf	___fltol@f1^(0+128)
 14096  1588  31A9  213B  3195   	fcall	___fltol
 14097  158B  0021               	movlb	1	; select bank1
 14098  158C  0829               	movf	(?___fltol+1)^(0+128),w
 14099  158D  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 14100  158E  0828               	movf	?___fltol^(0+128),w
 14101  158F  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 14102                           
 14103                           ;BQ76920.c: 255:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 14104  1590  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14105  1591  00F1               	movwf	___xxtofl@val
 14106  1592  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14107  1593  00F2               	movwf	___xxtofl@val+1
 14108  1594  0D89               	rlf	9,f
 14109  1595  3B89               	subwfb	9,f
 14110  1596  0989               	comf	9,f
 14111  1597  00F3               	movwf	___xxtofl@val+2
 14112  1598  00F4               	movwf	___xxtofl@val+3
 14113  1599  3001               	movlw	1
 14114  159A  31A0  2009  3195   	fcall	___xxtofl
 14115  159D  0874               	movf	?___xxtofl+3,w
 14116  159E  0020               	movlb	0	; select bank0
 14117  159F  00AD               	movwf	___flmul@a+3
 14118  15A0  0873               	movf	?___xxtofl+2,w
 14119  15A1  00AC               	movwf	___flmul@a+2
 14120  15A2  0872               	movf	?___xxtofl+1,w
 14121  15A3  00AB               	movwf	___flmul@a+1
 14122  15A4  0871               	movf	?___xxtofl,w
 14123  15A5  00AA               	movwf	___flmul@a
 14124  15A6  3046               	movlw	70
 14125  15A7  00A9               	movwf	___flmul@b+3
 14126  15A8  301C               	movlw	28
 14127  15A9  00A8               	movwf	___flmul@b+2
 14128  15AA  3040               	movlw	64
 14129  15AB  00A7               	movwf	___flmul@b+1
 14130  15AC  3000               	movlw	0
 14131  15AD  00A6               	movwf	___flmul@b
 14132  15AE  3190  2023  3195   	fcall	___flmul
 14133  15B1  0020               	movlb	0	; select bank0
 14134  15B2  0829               	movf	?___flmul+3,w
 14135  15B3  00C7               	movwf	___fldiv@b+3
 14136  15B4  0828               	movf	?___flmul+2,w
 14137  15B5  00C6               	movwf	___fldiv@b+2
 14138  15B6  0827               	movf	?___flmul+1,w
 14139  15B7  00C5               	movwf	___fldiv@b+1
 14140  15B8  0826               	movf	?___flmul,w
 14141  15B9  00C4               	movwf	___fldiv@b
 14142  15BA  3045               	movlw	69
 14143  15BB  0021               	movlb	1	; select bank1
 14144  15BC  00A7               	movwf	(___flsub@b+3)^(0+128)
 14145  15BD  304E               	movlw	78
 14146  15BE  00A6               	movwf	(___flsub@b+2)^(0+128)
 14147  15BF  3040               	movlw	64
 14148  15C0  00A5               	movwf	(___flsub@b+1)^(0+128)
 14149  15C1  3000               	movlw	0
 14150  15C2  00A4               	movwf	___flsub@b^(0+128)
 14151  15C3  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14152  15C4  00F1               	movwf	___xxtofl@val
 14153  15C5  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14154  15C6  00F2               	movwf	___xxtofl@val+1
 14155  15C7  0D89               	rlf	9,f
 14156  15C8  3B89               	subwfb	9,f
 14157  15C9  0989               	comf	9,f
 14158  15CA  00F3               	movwf	___xxtofl@val+2
 14159  15CB  00F4               	movwf	___xxtofl@val+3
 14160  15CC  3001               	movlw	1
 14161  15CD  31A0  2009  3195   	fcall	___xxtofl
 14162  15D0  0874               	movf	?___xxtofl+3,w
 14163  15D1  0021               	movlb	1	; select bank1
 14164  15D2  00A3               	movwf	(___flsub@a+3)^(0+128)
 14165  15D3  0873               	movf	?___xxtofl+2,w
 14166  15D4  00A2               	movwf	(___flsub@a+2)^(0+128)
 14167  15D5  0872               	movf	?___xxtofl+1,w
 14168  15D6  00A1               	movwf	(___flsub@a+1)^(0+128)
 14169  15D7  0871               	movf	?___xxtofl,w
 14170  15D8  00A0               	movwf	___flsub@a^(0+128)
 14171  15D9  31B6  26C9  3195   	fcall	___flsub
 14172  15DC  0021               	movlb	1	; select bank1
 14173  15DD  0823               	movf	(?___flsub+3)^(0+128),w
 14174  15DE  0020               	movlb	0	; select bank0
 14175  15DF  00C3               	movwf	___fldiv@a+3
 14176  15E0  0021               	movlb	1	; select bank1
 14177  15E1  0822               	movf	(?___flsub+2)^(0+128),w
 14178  15E2  0020               	movlb	0	; select bank0
 14179  15E3  00C2               	movwf	___fldiv@a+2
 14180  15E4  0021               	movlb	1	; select bank1
 14181  15E5  0821               	movf	(?___flsub+1)^(0+128),w
 14182  15E6  0020               	movlb	0	; select bank0
 14183  15E7  00C1               	movwf	___fldiv@a+1
 14184  15E8  0021               	movlb	1	; select bank1
 14185  15E9  0820               	movf	?___flsub^(0+128),w
 14186  15EA  0020               	movlb	0	; select bank0
 14187  15EB  00C0               	movwf	___fldiv@a
 14188  15EC  319C  24E2  3195   	fcall	___fldiv
 14189  15EF  0020               	movlb	0	; select bank0
 14190  15F0  0843               	movf	?___fldiv+3,w
 14191  15F1  0021               	movlb	1	; select bank1
 14192  15F2  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14193  15F3  0020               	movlb	0	; select bank0
 14194  15F4  0842               	movf	?___fldiv+2,w
 14195  15F5  0021               	movlb	1	; select bank1
 14196  15F6  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14197  15F7  0020               	movlb	0	; select bank0
 14198  15F8  0841               	movf	?___fldiv+1,w
 14199  15F9  0021               	movlb	1	; select bank1
 14200  15FA  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14201  15FB  0020               	movlb	0	; select bank0
 14202  15FC  0840               	movf	?___fldiv,w
 14203  15FD  0021               	movlb	1	; select bank1
 14204  15FE  00A8               	movwf	___fltol@f1^(0+128)
 14205  15FF  31A9  213B  3195   	fcall	___fltol
 14206  1602  0021               	movlb	1	; select bank1
 14207  1603  082B               	movf	(?___fltol+3)^(0+128),w
 14208  1604  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14209  1605  082A               	movf	(?___fltol+2)^(0+128),w
 14210  1606  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14211  1607  0829               	movf	(?___fltol+1)^(0+128),w
 14212  1608  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14213  1609  0828               	movf	?___fltol^(0+128),w
 14214  160A  00EB               	movwf	updateTemperatures@rts^(0+128)
 14215                           
 14216                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14217  160B  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14218  160C  00F4               	movwf	___xxtofl@val+3
 14219  160D  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14220  160E  00F3               	movwf	___xxtofl@val+2
 14221  160F  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14222  1610  00F2               	movwf	___xxtofl@val+1
 14223  1611  086B               	movf	updateTemperatures@rts^(0+128),w
 14224  1612  00F1               	movwf	___xxtofl@val
 14225  1613  3000               	movlw	0
 14226  1614  31A0  2009  3195   	fcall	___xxtofl
 14227  1617  0874               	movf	?___xxtofl+3,w
 14228  1618  0021               	movlb	1	; select bank1
 14229  1619  00BA               	movwf	(_updateTemperatures$2029+3)^(0+128)
 14230  161A  0873               	movf	?___xxtofl+2,w
 14231  161B  00B9               	movwf	(_updateTemperatures$2029+2)^(0+128)
 14232  161C  0872               	movf	?___xxtofl+1,w
 14233  161D  00B8               	movwf	(_updateTemperatures$2029+1)^(0+128)
 14234  161E  0871               	movf	?___xxtofl,w
 14235  161F  00B7               	movwf	_updateTemperatures$2029^(0+128)
 14236                           
 14237                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14238  1620  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14239  1621  00F4               	movwf	___xxtofl@val+3
 14240  1622  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14241  1623  00F3               	movwf	___xxtofl@val+2
 14242  1624  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14243  1625  00F2               	movwf	___xxtofl@val+1
 14244  1626  086B               	movf	updateTemperatures@rts^(0+128),w
 14245  1627  00F1               	movwf	___xxtofl@val
 14246  1628  3000               	movlw	0
 14247  1629  31A0  2009  3195   	fcall	___xxtofl
 14248  162C  0874               	movf	?___xxtofl+3,w
 14249  162D  0021               	movlb	1	; select bank1
 14250  162E  00BE               	movwf	(_updateTemperatures$2030+3)^(0+128)
 14251  162F  0873               	movf	?___xxtofl+2,w
 14252  1630  00BD               	movwf	(_updateTemperatures$2030+2)^(0+128)
 14253  1631  0872               	movf	?___xxtofl+1,w
 14254  1632  00BC               	movwf	(_updateTemperatures$2030+1)^(0+128)
 14255  1633  0871               	movf	?___xxtofl,w
 14256  1634  00BB               	movwf	_updateTemperatures$2030^(0+128)
 14257                           
 14258                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14259  1635  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14260  1636  00F4               	movwf	___xxtofl@val+3
 14261  1637  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14262  1638  00F3               	movwf	___xxtofl@val+2
 14263  1639  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14264  163A  00F2               	movwf	___xxtofl@val+1
 14265  163B  086B               	movf	updateTemperatures@rts^(0+128),w
 14266  163C  00F1               	movwf	___xxtofl@val
 14267  163D  3000               	movlw	0
 14268  163E  31A0  2009  3195   	fcall	___xxtofl
 14269  1641  0874               	movf	?___xxtofl+3,w
 14270  1642  0021               	movlb	1	; select bank1
 14271  1643  00C2               	movwf	(_updateTemperatures$2031+3)^(0+128)
 14272  1644  0873               	movf	?___xxtofl+2,w
 14273  1645  00C1               	movwf	(_updateTemperatures$2031+2)^(0+128)
 14274  1646  0872               	movf	?___xxtofl+1,w
 14275  1647  00C0               	movwf	(_updateTemperatures$2031+1)^(0+128)
 14276  1648  0871               	movf	?___xxtofl,w
 14277  1649  00BF               	movwf	_updateTemperatures$2031^(0+128)
 14278                           
 14279                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14280  164A  083E               	movf	(_updateTemperatures$2030+3)^(0+128),w
 14281  164B  00AB               	movwf	(logf@x+3)^(0+128)
 14282  164C  083D               	movf	(_updateTemperatures$2030+2)^(0+128),w
 14283  164D  00AA               	movwf	(logf@x+2)^(0+128)
 14284  164E  083C               	movf	(_updateTemperatures$2030+1)^(0+128),w
 14285  164F  00A9               	movwf	(logf@x+1)^(0+128)
 14286  1650  083B               	movf	_updateTemperatures$2030^(0+128),w
 14287  1651  00A8               	movwf	logf@x^(0+128)
 14288  1652  3180  206B  3195   	fcall	_logf
 14289  1655  0021               	movlb	1	; select bank1
 14290  1656  082B               	movf	(?_logf+3)^(0+128),w
 14291  1657  00C6               	movwf	(_updateTemperatures$2032+3)^(0+128)
 14292  1658  082A               	movf	(?_logf+2)^(0+128),w
 14293  1659  00C5               	movwf	(_updateTemperatures$2032+2)^(0+128)
 14294  165A  0829               	movf	(?_logf+1)^(0+128),w
 14295  165B  00C4               	movwf	(_updateTemperatures$2032+1)^(0+128)
 14296  165C  0828               	movf	?_logf^(0+128),w
 14297  165D  00C3               	movwf	_updateTemperatures$2032^(0+128)
 14298                           
 14299                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14300  165E  0842               	movf	(_updateTemperatures$2031+3)^(0+128),w
 14301  165F  00AB               	movwf	(logf@x+3)^(0+128)
 14302  1660  0841               	movf	(_updateTemperatures$2031+2)^(0+128),w
 14303  1661  00AA               	movwf	(logf@x+2)^(0+128)
 14304  1662  0840               	movf	(_updateTemperatures$2031+1)^(0+128),w
 14305  1663  00A9               	movwf	(logf@x+1)^(0+128)
 14306  1664  083F               	movf	_updateTemperatures$2031^(0+128),w
 14307  1665  00A8               	movwf	logf@x^(0+128)
 14308  1666  3180  206B  3195   	fcall	_logf
 14309  1669  0021               	movlb	1	; select bank1
 14310  166A  082B               	movf	(?_logf+3)^(0+128),w
 14311  166B  00CA               	movwf	(_updateTemperatures$2033+3)^(0+128)
 14312  166C  082A               	movf	(?_logf+2)^(0+128),w
 14313  166D  00C9               	movwf	(_updateTemperatures$2033+2)^(0+128)
 14314  166E  0829               	movf	(?_logf+1)^(0+128),w
 14315  166F  00C8               	movwf	(_updateTemperatures$2033+1)^(0+128)
 14316  1670  0828               	movf	?_logf^(0+128),w
 14317  1671  00C7               	movwf	_updateTemperatures$2033^(0+128)
 14318                           
 14319                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14320  1672  083A               	movf	(_updateTemperatures$2029+3)^(0+128),w
 14321  1673  00AB               	movwf	(logf@x+3)^(0+128)
 14322  1674  0839               	movf	(_updateTemperatures$2029+2)^(0+128),w
 14323  1675  00AA               	movwf	(logf@x+2)^(0+128)
 14324  1676  0838               	movf	(_updateTemperatures$2029+1)^(0+128),w
 14325  1677  00A9               	movwf	(logf@x+1)^(0+128)
 14326  1678  0837               	movf	_updateTemperatures$2029^(0+128),w
 14327  1679  00A8               	movwf	logf@x^(0+128)
 14328  167A  3180  206B  3195   	fcall	_logf
 14329  167D  0021               	movlb	1	; select bank1
 14330  167E  082B               	movf	(?_logf+3)^(0+128),w
 14331  167F  00CE               	movwf	(_updateTemperatures$2034+3)^(0+128)
 14332  1680  082A               	movf	(?_logf+2)^(0+128),w
 14333  1681  00CD               	movwf	(_updateTemperatures$2034+2)^(0+128)
 14334  1682  0829               	movf	(?_logf+1)^(0+128),w
 14335  1683  00CC               	movwf	(_updateTemperatures$2034+1)^(0+128)
 14336  1684  0828               	movf	?_logf^(0+128),w
 14337  1685  00CB               	movwf	_updateTemperatures$2034^(0+128)
 14338                           
 14339                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14340  1686  0846               	movf	(_updateTemperatures$2032+3)^(0+128),w
 14341  1687  0020               	movlb	0	; select bank0
 14342  1688  00A9               	movwf	___flmul@b+3
 14343  1689  0021               	movlb	1	; select bank1
 14344  168A  0845               	movf	(_updateTemperatures$2032+2)^(0+128),w
 14345  168B  0020               	movlb	0	; select bank0
 14346  168C  00A8               	movwf	___flmul@b+2
 14347  168D  0021               	movlb	1	; select bank1
 14348  168E  0844               	movf	(_updateTemperatures$2032+1)^(0+128),w
 14349  168F  0020               	movlb	0	; select bank0
 14350  1690  00A7               	movwf	___flmul@b+1
 14351  1691  0021               	movlb	1	; select bank1
 14352  1692  0843               	movf	_updateTemperatures$2032^(0+128),w
 14353  1693  0020               	movlb	0	; select bank0
 14354  1694  00A6               	movwf	___flmul@b
 14355  1695  0021               	movlb	1	; select bank1
 14356  1696  084A               	movf	(_updateTemperatures$2033+3)^(0+128),w
 14357  1697  0020               	movlb	0	; select bank0
 14358  1698  00AD               	movwf	___flmul@a+3
 14359  1699  0021               	movlb	1	; select bank1
 14360  169A  0849               	movf	(_updateTemperatures$2033+2)^(0+128),w
 14361  169B  0020               	movlb	0	; select bank0
 14362  169C  00AC               	movwf	___flmul@a+2
 14363  169D  0021               	movlb	1	; select bank1
 14364  169E  0848               	movf	(_updateTemperatures$2033+1)^(0+128),w
 14365  169F  0020               	movlb	0	; select bank0
 14366  16A0  00AB               	movwf	___flmul@a+1
 14367  16A1  0021               	movlb	1	; select bank1
 14368  16A2  0847               	movf	_updateTemperatures$2033^(0+128),w
 14369  16A3  0020               	movlb	0	; select bank0
 14370  16A4  00AA               	movwf	___flmul@a
 14371  16A5  3190  2023  3195   	fcall	___flmul
 14372  16A8  0020               	movlb	0	; select bank0
 14373  16A9  0829               	movf	?___flmul+3,w
 14374  16AA  0021               	movlb	1	; select bank1
 14375  16AB  00D2               	movwf	(_updateTemperatures$2035+3)^(0+128)
 14376  16AC  0020               	movlb	0	; select bank0
 14377  16AD  0828               	movf	?___flmul+2,w
 14378  16AE  0021               	movlb	1	; select bank1
 14379  16AF  00D1               	movwf	(_updateTemperatures$2035+2)^(0+128)
 14380  16B0  0020               	movlb	0	; select bank0
 14381  16B1  0827               	movf	?___flmul+1,w
 14382  16B2  0021               	movlb	1	; select bank1
 14383  16B3  00D0               	movwf	(_updateTemperatures$2035+1)^(0+128)
 14384  16B4  0020               	movlb	0	; select bank0
 14385  16B5  0826               	movf	?___flmul,w
 14386  16B6  0021               	movlb	1	; select bank1
 14387  16B7  00CF               	movwf	_updateTemperatures$2035^(0+128)
 14388                           
 14389                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14390  16B8  084E               	movf	(_updateTemperatures$2034+3)^(0+128),w
 14391  16B9  0020               	movlb	0	; select bank0
 14392  16BA  00A9               	movwf	___flmul@b+3
 14393  16BB  0021               	movlb	1	; select bank1
 14394  16BC  084D               	movf	(_updateTemperatures$2034+2)^(0+128),w
 14395  16BD  0020               	movlb	0	; select bank0
 14396  16BE  00A8               	movwf	___flmul@b+2
 14397  16BF  0021               	movlb	1	; select bank1
 14398  16C0  084C               	movf	(_updateTemperatures$2034+1)^(0+128),w
 14399  16C1  0020               	movlb	0	; select bank0
 14400  16C2  00A7               	movwf	___flmul@b+1
 14401  16C3  0021               	movlb	1	; select bank1
 14402  16C4  084B               	movf	_updateTemperatures$2034^(0+128),w
 14403  16C5  0020               	movlb	0	; select bank0
 14404  16C6  00A6               	movwf	___flmul@b
 14405  16C7  0021               	movlb	1	; select bank1
 14406  16C8  0852               	movf	(_updateTemperatures$2035+3)^(0+128),w
 14407  16C9  0020               	movlb	0	; select bank0
 14408  16CA  00AD               	movwf	___flmul@a+3
 14409  16CB  0021               	movlb	1	; select bank1
 14410  16CC  0851               	movf	(_updateTemperatures$2035+2)^(0+128),w
 14411  16CD  0020               	movlb	0	; select bank0
 14412  16CE  00AC               	movwf	___flmul@a+2
 14413  16CF  0021               	movlb	1	; select bank1
 14414  16D0  0850               	movf	(_updateTemperatures$2035+1)^(0+128),w
 14415  16D1  0020               	movlb	0	; select bank0
 14416  16D2  00AB               	movwf	___flmul@a+1
 14417  16D3  0021               	movlb	1	; select bank1
 14418  16D4  084F               	movf	_updateTemperatures$2035^(0+128),w
 14419  16D5  0020               	movlb	0	; select bank0
 14420  16D6  00AA               	movwf	___flmul@a
 14421  16D7  3190  2023  3195   	fcall	___flmul
 14422  16DA  0020               	movlb	0	; select bank0
 14423  16DB  0829               	movf	?___flmul+3,w
 14424  16DC  0021               	movlb	1	; select bank1
 14425  16DD  00D6               	movwf	(_updateTemperatures$2036+3)^(0+128)
 14426  16DE  0020               	movlb	0	; select bank0
 14427  16DF  0828               	movf	?___flmul+2,w
 14428  16E0  0021               	movlb	1	; select bank1
 14429  16E1  00D5               	movwf	(_updateTemperatures$2036+2)^(0+128)
 14430  16E2  0020               	movlb	0	; select bank0
 14431  16E3  0827               	movf	?___flmul+1,w
 14432  16E4  0021               	movlb	1	; select bank1
 14433  16E5  00D4               	movwf	(_updateTemperatures$2036+1)^(0+128)
 14434  16E6  0020               	movlb	0	; select bank0
 14435  16E7  0826               	movf	?___flmul,w
 14436  16E8  0021               	movlb	1	; select bank1
 14437  16E9  00D3               	movwf	_updateTemperatures$2036^(0+128)
 14438                           
 14439                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14440  16EA  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14441  16EB  00F4               	movwf	___xxtofl@val+3
 14442  16EC  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14443  16ED  00F3               	movwf	___xxtofl@val+2
 14444  16EE  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14445  16EF  00F2               	movwf	___xxtofl@val+1
 14446  16F0  086B               	movf	updateTemperatures@rts^(0+128),w
 14447  16F1  00F1               	movwf	___xxtofl@val
 14448  16F2  3000               	movlw	0
 14449  16F3  31A0  2009  3195   	fcall	___xxtofl
 14450  16F6  0874               	movf	?___xxtofl+3,w
 14451  16F7  0021               	movlb	1	; select bank1
 14452  16F8  00DA               	movwf	(_updateTemperatures$2037+3)^(0+128)
 14453  16F9  0873               	movf	?___xxtofl+2,w
 14454  16FA  00D9               	movwf	(_updateTemperatures$2037+2)^(0+128)
 14455  16FB  0872               	movf	?___xxtofl+1,w
 14456  16FC  00D8               	movwf	(_updateTemperatures$2037+1)^(0+128)
 14457  16FD  0871               	movf	?___xxtofl,w
 14458  16FE  00D7               	movwf	_updateTemperatures$2037^(0+128)
 14459                           
 14460                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14461  16FF  085A               	movf	(_updateTemperatures$2037+3)^(0+128),w
 14462  1700  00AB               	movwf	(logf@x+3)^(0+128)
 14463  1701  0859               	movf	(_updateTemperatures$2037+2)^(0+128),w
 14464  1702  00AA               	movwf	(logf@x+2)^(0+128)
 14465  1703  0858               	movf	(_updateTemperatures$2037+1)^(0+128),w
 14466  1704  00A9               	movwf	(logf@x+1)^(0+128)
 14467  1705  0857               	movf	_updateTemperatures$2037^(0+128),w
 14468  1706  00A8               	movwf	logf@x^(0+128)
 14469  1707  3180  206B  3195   	fcall	_logf
 14470  170A  0021               	movlb	1	; select bank1
 14471  170B  082B               	movf	(?_logf+3)^(0+128),w
 14472  170C  00DE               	movwf	(_updateTemperatures$2038+3)^(0+128)
 14473  170D  082A               	movf	(?_logf+2)^(0+128),w
 14474  170E  00DD               	movwf	(_updateTemperatures$2038+2)^(0+128)
 14475  170F  0829               	movf	(?_logf+1)^(0+128),w
 14476  1710  00DC               	movwf	(_updateTemperatures$2038+1)^(0+128)
 14477  1711  0828               	movf	?_logf^(0+128),w
 14478  1712  00DB               	movwf	_updateTemperatures$2038^(0+128)
 14479                           
 14480                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14481  1713  30BC               	movlw	188
 14482  1714  0020               	movlb	0	; select bank0
 14483  1715  00DD               	movwf	___fladd@b+3
 14484  1716  308E               	movlw	142
 14485  1717  00DC               	movwf	___fladd@b+2
 14486  1718  30C5               	movlw	197
 14487  1719  00DB               	movwf	___fladd@b+1
 14488  171A  3072               	movlw	114
 14489  171B  00DA               	movwf	___fladd@b
 14490  171C  303B               	movlw	59
 14491  171D  00A9               	movwf	___flmul@b+3
 14492  171E  304D               	movlw	77
 14493  171F  00A8               	movwf	___flmul@b+2
 14494  1720  3098               	movlw	152
 14495  1721  00A7               	movwf	___flmul@b+1
 14496  1722  3025               	movlw	37
 14497  1723  00A6               	movwf	___flmul@b
 14498  1724  0021               	movlb	1	; select bank1
 14499  1725  085E               	movf	(_updateTemperatures$2038+3)^(0+128),w
 14500  1726  0020               	movlb	0	; select bank0
 14501  1727  00AD               	movwf	___flmul@a+3
 14502  1728  0021               	movlb	1	; select bank1
 14503  1729  085D               	movf	(_updateTemperatures$2038+2)^(0+128),w
 14504  172A  0020               	movlb	0	; select bank0
 14505  172B  00AC               	movwf	___flmul@a+2
 14506  172C  0021               	movlb	1	; select bank1
 14507  172D  085C               	movf	(_updateTemperatures$2038+1)^(0+128),w
 14508  172E  0020               	movlb	0	; select bank0
 14509  172F  00AB               	movwf	___flmul@a+1
 14510  1730  0021               	movlb	1	; select bank1
 14511  1731  085B               	movf	_updateTemperatures$2038^(0+128),w
 14512  1732  0020               	movlb	0	; select bank0
 14513  1733  00AA               	movwf	___flmul@a
 14514  1734  3190  2023  3195   	fcall	___flmul
 14515  1737  0020               	movlb	0	; select bank0
 14516  1738  0829               	movf	?___flmul+3,w
 14517  1739  00E1               	movwf	___fladd@a+3
 14518  173A  0828               	movf	?___flmul+2,w
 14519  173B  00E0               	movwf	___fladd@a+2
 14520  173C  0827               	movf	?___flmul+1,w
 14521  173D  00DF               	movwf	___fladd@a+1
 14522  173E  0826               	movf	?___flmul,w
 14523  173F  00DE               	movwf	___fladd@a
 14524  1740  3185  25F5  3195   	fcall	___fladd
 14525  1743  0020               	movlb	0	; select bank0
 14526  1744  085D               	movf	?___fladd+3,w
 14527  1745  0021               	movlb	1	; select bank1
 14528  1746  00E2               	movwf	(_updateTemperatures$2039+3)^(0+128)
 14529  1747  0020               	movlb	0	; select bank0
 14530  1748  085C               	movf	?___fladd+2,w
 14531  1749  0021               	movlb	1	; select bank1
 14532  174A  00E1               	movwf	(_updateTemperatures$2039+2)^(0+128)
 14533  174B  0020               	movlb	0	; select bank0
 14534  174C  085B               	movf	?___fladd+1,w
 14535  174D  0021               	movlb	1	; select bank1
 14536  174E  00E0               	movwf	(_updateTemperatures$2039+1)^(0+128)
 14537  174F  0020               	movlb	0	; select bank0
 14538  1750  085A               	movf	?___fladd,w
 14539  1751  0021               	movlb	1	; select bank1
 14540  1752  00DF               	movwf	_updateTemperatures$2039^(0+128)
 14541                           
 14542                           ;BQ76920.c: 262:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14543  1753  30B7               	movlw	183
 14544  1754  0020               	movlb	0	; select bank0
 14545  1755  00A9               	movwf	___flmul@b+3
 14546  1756  302E               	movlw	46
 14547  1757  00A8               	movwf	___flmul@b+2
 14548  1758  302F               	movlw	47
 14549  1759  00A7               	movwf	___flmul@b+1
 14550  175A  3045               	movlw	69
 14551  175B  00A6               	movwf	___flmul@b
 14552  175C  0021               	movlb	1	; select bank1
 14553  175D  0856               	movf	(_updateTemperatures$2036+3)^(0+128),w
 14554  175E  0020               	movlb	0	; select bank0
 14555  175F  00AD               	movwf	___flmul@a+3
 14556  1760  0021               	movlb	1	; select bank1
 14557  1761  0855               	movf	(_updateTemperatures$2036+2)^(0+128),w
 14558  1762  0020               	movlb	0	; select bank0
 14559  1763  00AC               	movwf	___flmul@a+2
 14560  1764  0021               	movlb	1	; select bank1
 14561  1765  0854               	movf	(_updateTemperatures$2036+1)^(0+128),w
 14562  1766  0020               	movlb	0	; select bank0
 14563  1767  00AB               	movwf	___flmul@a+1
 14564  1768  0021               	movlb	1	; select bank1
 14565  1769  0853               	movf	_updateTemperatures$2036^(0+128),w
 14566  176A  0020               	movlb	0	; select bank0
 14567  176B  00AA               	movwf	___flmul@a
 14568  176C  3190  2023  3195   	fcall	___flmul
 14569  176F  0020               	movlb	0	; select bank0
 14570  1770  0829               	movf	?___flmul+3,w
 14571  1771  00DD               	movwf	___fladd@b+3
 14572  1772  0828               	movf	?___flmul+2,w
 14573  1773  00DC               	movwf	___fladd@b+2
 14574  1774  0827               	movf	?___flmul+1,w
 14575  1775  00DB               	movwf	___fladd@b+1
 14576  1776  0826               	movf	?___flmul,w
 14577  1777  00DA               	movwf	___fladd@b
 14578  1778  0021               	movlb	1	; select bank1
 14579  1779  0862               	movf	(_updateTemperatures$2039+3)^(0+128),w
 14580  177A  0020               	movlb	0	; select bank0
 14581  177B  00E1               	movwf	___fladd@a+3
 14582  177C  0021               	movlb	1	; select bank1
 14583  177D  0861               	movf	(_updateTemperatures$2039+2)^(0+128),w
 14584  177E  0020               	movlb	0	; select bank0
 14585  177F  00E0               	movwf	___fladd@a+2
 14586  1780  0021               	movlb	1	; select bank1
 14587  1781  0860               	movf	(_updateTemperatures$2039+1)^(0+128),w
 14588  1782  0020               	movlb	0	; select bank0
 14589  1783  00DF               	movwf	___fladd@a+1
 14590  1784  0021               	movlb	1	; select bank1
 14591  1785  085F               	movf	_updateTemperatures$2039^(0+128),w
 14592  1786  0020               	movlb	0	; select bank0
 14593  1787  00DE               	movwf	___fladd@a
 14594  1788  3185  25F5  3195   	fcall	___fladd
 14595  178B  0020               	movlb	0	; select bank0
 14596  178C  085D               	movf	?___fladd+3,w
 14597  178D  00C3               	movwf	___fldiv@a+3
 14598  178E  085C               	movf	?___fladd+2,w
 14599  178F  00C2               	movwf	___fldiv@a+2
 14600  1790  085B               	movf	?___fladd+1,w
 14601  1791  00C1               	movwf	___fldiv@a+1
 14602  1792  085A               	movf	?___fladd,w
 14603  1793  00C0               	movwf	___fldiv@a
 14604  1794  303F               	movlw	63
 14605  1795  00C7               	movwf	___fldiv@b+3
 14606  1796  3080               	movlw	128
 14607  1797  00C6               	movwf	___fldiv@b+2
 14608  1798  3000               	movlw	0
 14609  1799  00C5               	movwf	___fldiv@b+1
 14610  179A  3000               	movlw	0
 14611  179B  00C4               	movwf	___fldiv@b
 14612  179C  319C  24E2  3195   	fcall	___fldiv
 14613  179F  0020               	movlb	0	; select bank0
 14614  17A0  0843               	movf	?___fldiv+3,w
 14615  17A1  0021               	movlb	1	; select bank1
 14616  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 14617  17A3  0020               	movlb	0	; select bank0
 14618  17A4  0842               	movf	?___fldiv+2,w
 14619  17A5  0021               	movlb	1	; select bank1
 14620  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 14621  17A7  0020               	movlb	0	; select bank0
 14622  17A8  0841               	movf	?___fldiv+1,w
 14623  17A9  0021               	movlb	1	; select bank1
 14624  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 14625  17AB  0020               	movlb	0	; select bank0
 14626  17AC  0840               	movf	?___fldiv,w
 14627  17AD  0021               	movlb	1	; select bank1
 14628  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 14629                           
 14630                           ;BQ76920.c: 264:      temperatureThermistor = (tmp - 273.15)*100;
 14631  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 14632  17B0  0020               	movlb	0	; select bank0
 14633  17B1  00E1               	movwf	___fladd@a+3
 14634  17B2  0021               	movlb	1	; select bank1
 14635  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 14636  17B4  0020               	movlb	0	; select bank0
 14637  17B5  00E0               	movwf	___fladd@a+2
 14638  17B6  0021               	movlb	1	; select bank1
 14639  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 14640  17B8  0020               	movlb	0	; select bank0
 14641  17B9  00DF               	movwf	___fladd@a+1
 14642  17BA  0021               	movlb	1	; select bank1
 14643  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 14644  17BC  0020               	movlb	0	; select bank0
 14645  17BD  00DE               	movwf	___fladd@a
 14646  17BE  30C3               	movlw	195
 14647  17BF  00DD               	movwf	___fladd@b+3
 14648  17C0  3088               	movlw	136
 14649  17C1  00DC               	movwf	___fladd@b+2
 14650  17C2  3093               	movlw	147
 14651  17C3  00DB               	movwf	___fladd@b+1
 14652  17C4  3033               	movlw	51
 14653  17C5  00DA               	movwf	___fladd@b
 14654  17C6  3185  25F5  3195   	fcall	___fladd
 14655  17C9  0020               	movlb	0	; select bank0
 14656  17CA  085D               	movf	?___fladd+3,w
 14657  17CB  00AD               	movwf	___flmul@a+3
 14658  17CC  085C               	movf	?___fladd+2,w
 14659  17CD  00AC               	movwf	___flmul@a+2
 14660  17CE  085B               	movf	?___fladd+1,w
 14661  17CF  00AB               	movwf	___flmul@a+1
 14662  17D0  085A               	movf	?___fladd,w
 14663  17D1  00AA               	movwf	___flmul@a
 14664  17D2  3042               	movlw	66
 14665  17D3  00A9               	movwf	___flmul@b+3
 14666  17D4  30C8               	movlw	200
 14667  17D5  00A8               	movwf	___flmul@b+2
 14668  17D6  3000               	movlw	0
 14669  17D7  00A7               	movwf	___flmul@b+1
 14670  17D8  3000               	movlw	0
 14671  17D9  00A6               	movwf	___flmul@b
 14672  17DA  3190  2023  3195   	fcall	___flmul
 14673  17DD  0020               	movlb	0	; select bank0
 14674  17DE  0829               	movf	?___flmul+3,w
 14675  17DF  0021               	movlb	1	; select bank1
 14676  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14677  17E1  0020               	movlb	0	; select bank0
 14678  17E2  0828               	movf	?___flmul+2,w
 14679  17E3  0021               	movlb	1	; select bank1
 14680  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14681  17E5  0020               	movlb	0	; select bank0
 14682  17E6  0827               	movf	?___flmul+1,w
 14683  17E7  0021               	movlb	1	; select bank1
 14684  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14685  17E9  0020               	movlb	0	; select bank0
 14686  17EA  0826               	movf	?___flmul,w
 14687  17EB  0021               	movlb	1	; select bank1
 14688  17EC  00A8               	movwf	___fltol@f1^(0+128)
 14689  17ED  31A9  213B         	fcall	___fltol
 14690  17EF  0021               	movlb	1	; select bank1
 14691  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 14692  17F1  0023               	movlb	3	; select bank3
 14693  17F2  00B9               	movwf	(_temperatureThermistor+3)^(0+384)
 14694  17F3  0021               	movlb	1	; select bank1
 14695  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 14696  17F5  0023               	movlb	3	; select bank3
 14697  17F6  00B8               	movwf	(_temperatureThermistor+2)^(0+384)
 14698  17F7  0021               	movlb	1	; select bank1
 14699  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 14700  17F9  0023               	movlb	3	; select bank3
 14701  17FA  00B7               	movwf	(_temperatureThermistor+1)^(0+384)
 14702  17FB  0021               	movlb	1	; select bank1
 14703  17FC  0828               	movf	?___fltol^(0+128),w
 14704  17FD  0023               	movlb	3	; select bank3
 14705  17FE  00B6               	movwf	_temperatureThermistor^(0+384)
 14706  17FF  0008               	return
 14707  1800                     __end_of_updateTemperatures:	
 14708                           
 14709                           	psect	text50
 14710  006B                     __ptext50:	
 14711 ;; *************** function _logf *****************
 14712 ;; Defined at:
 14713 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;  x               4    8[BANK1 ] float 
 14716 ;; Auto vars:     Size  Location     Type
 14717 ;;  ix              4   62[BANK2 ] unsigned long 
 14718 ;;  f               4   58[BANK2 ] float 
 14719 ;;  u               4   54[BANK2 ] struct .
 14720 ;;  w               4   46[BANK2 ] float 
 14721 ;;  z               4   42[BANK2 ] float 
 14722 ;;  s               4   38[BANK2 ] float 
 14723 ;;  dk              4   34[BANK2 ] float 
 14724 ;;  hfsq            4   30[BANK2 ] float 
 14725 ;;  t2              4    8[BANK2 ] float 
 14726 ;;  t1              4    4[BANK2 ] float 
 14727 ;;  R               4    0[BANK2 ] float 
 14728 ;;  k               2   28[BANK2 ] int 
 14729 ;; Return value:  Size  Location     Type
 14730 ;;                  4    8[BANK1 ] float 
 14731 ;; Registers used:
 14732 ;;		wreg, status,2, status,0, pclath, cstack
 14733 ;; Tracked objects:
 14734 ;;		On entry : 0/0
 14735 ;;		On exit  : 0/0
 14736 ;;		Unchanged: 0/0
 14737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14738 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14739 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14740 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14741 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14742 ;;Total ram usage:       78 bytes
 14743 ;; Hardware stack levels used:    1
 14744 ;; Hardware stack levels required when called:    3
 14745 ;; This function calls:
 14746 ;;		___fladd
 14747 ;;		___fldiv
 14748 ;;		___flmul
 14749 ;;		___flsub
 14750 ;;		___xxtofl
 14751 ;; This function is called by:
 14752 ;;		_updateTemperatures
 14753 ;; This function uses a non-reentrant model
 14754 ;;
 14755                           
 14756                           
 14757                           ;psect for function _logf
 14758  006B                     _logf:	
 14759                           
 14760                           ;incstack = 0
 14761                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 14762  006B  0023               	movlb	3	; select bank3
 14763  006C  082D               	movf	(logf@F469+3)^(0+384),w
 14764  006D  0022               	movlb	2	; select bank2
 14765  006E  00D9               	movwf	(logf@u+3)^(0+256)
 14766  006F  0023               	movlb	3	; select bank3
 14767  0070  082C               	movf	(logf@F469+2)^(0+384),w
 14768  0071  0022               	movlb	2	; select bank2
 14769  0072  00D8               	movwf	(logf@u+2)^(0+256)
 14770  0073  0023               	movlb	3	; select bank3
 14771  0074  082B               	movf	(logf@F469+1)^(0+384),w
 14772  0075  0022               	movlb	2	; select bank2
 14773  0076  00D7               	movwf	(logf@u+1)^(0+256)
 14774  0077  0023               	movlb	3	; select bank3
 14775  0078  082A               	movf	logf@F469^(0+384),w
 14776  0079  0022               	movlb	2	; select bank2
 14777  007A  00D6               	movwf	logf@u^(0+256)
 14778  007B  0021               	movlb	1	; select bank1
 14779  007C  082B               	movf	(logf@x+3)^(0+128),w
 14780  007D  0022               	movlb	2	; select bank2
 14781  007E  00D9               	movwf	(logf@u+3)^(0+256)
 14782  007F  0021               	movlb	1	; select bank1
 14783  0080  082A               	movf	(logf@x+2)^(0+128),w
 14784  0081  0022               	movlb	2	; select bank2
 14785  0082  00D8               	movwf	(logf@u+2)^(0+256)
 14786  0083  0021               	movlb	1	; select bank1
 14787  0084  0829               	movf	(logf@x+1)^(0+128),w
 14788  0085  0022               	movlb	2	; select bank2
 14789  0086  00D7               	movwf	(logf@u+1)^(0+256)
 14790  0087  0021               	movlb	1	; select bank1
 14791  0088  0828               	movf	logf@x^(0+128),w
 14792  0089  0022               	movlb	2	; select bank2
 14793  008A  00D6               	movwf	logf@u^(0+256)
 14794  008B  0859               	movf	(logf@u+3)^(0+256),w
 14795  008C  00E1               	movwf	(logf@ix+3)^(0+256)
 14796  008D  0858               	movf	(logf@u+2)^(0+256),w
 14797  008E  00E0               	movwf	(logf@ix+2)^(0+256)
 14798  008F  0857               	movf	(logf@u+1)^(0+256),w
 14799  0090  00DF               	movwf	(logf@ix+1)^(0+256)
 14800  0091  0856               	movf	logf@u^(0+256),w
 14801  0092  00DE               	movwf	logf@ix^(0+256)
 14802  0093  01BC               	clrf	logf@k^(0+256)
 14803  0094  01BD               	clrf	(logf@k+1)^(0+256)
 14804  0095  0861               	movf	(logf@ix+3)^(0+256),w
 14805  0096  1D03               	btfss	3,2
 14806  0097  289C               	goto	l7774
 14807  0098  3080               	movlw	128
 14808  0099  0260               	subwf	(logf@ix+2)^(0+256),w
 14809  009A  1C03               	btfss	3,0
 14810  009B  28B8               	goto	l7776
 14811  009C                     l7774:	
 14812  009C  085E               	movf	logf@ix^(0+256),w
 14813  009D  0021               	movlb	1	; select bank1
 14814  009E  00AC               	movwf	??_logf^(0+128)
 14815  009F  0022               	movlb	2	; select bank2
 14816  00A0  085F               	movf	(logf@ix+1)^(0+256),w
 14817  00A1  0021               	movlb	1	; select bank1
 14818  00A2  00AD               	movwf	(??_logf^(0+128)+1)
 14819  00A3  0022               	movlb	2	; select bank2
 14820  00A4  0860               	movf	(logf@ix+2)^(0+256),w
 14821  00A5  0021               	movlb	1	; select bank1
 14822  00A6  00AE               	movwf	(??_logf^(0+128)+2)
 14823  00A7  0022               	movlb	2	; select bank2
 14824  00A8  0861               	movf	(logf@ix+3)^(0+256),w
 14825  00A9  0021               	movlb	1	; select bank1
 14826  00AA  00AF               	movwf	(??_logf^(0+128)+3)
 14827  00AB  301F               	movlw	31
 14828  00AC                     u10695:	
 14829  00AC  36AF               	lsrf	(??_logf^(0+128)+3),f
 14830  00AD  0CAE               	rrf	(??_logf^(0+128)+2),f
 14831  00AE  0CAD               	rrf	(??_logf^(0+128)+1),f
 14832  00AF  0CAC               	rrf	??_logf^(0+128),f
 14833  00B0  0B89               	decfsz	9,f
 14834  00B1  28AC               	goto	u10695
 14835  00B2  082F               	movf	(??_logf+3)^(0+128),w
 14836  00B3  042E               	iorwf	(??_logf+2)^(0+128),w
 14837  00B4  042D               	iorwf	(??_logf+1)^(0+128),w
 14838  00B5  042C               	iorwf	??_logf^(0+128),w
 14839  00B6  1903               	skipnz
 14840  00B7  29C1               	goto	l7796
 14841  00B8                     l7776:	
 14842  00B8  0022               	movlb	2	; select bank2
 14843  00B9  085E               	movf	logf@ix^(0+256),w
 14844  00BA  0021               	movlb	1	; select bank1
 14845  00BB  00AC               	movwf	??_logf^(0+128)
 14846  00BC  0022               	movlb	2	; select bank2
 14847  00BD  085F               	movf	(logf@ix+1)^(0+256),w
 14848  00BE  0021               	movlb	1	; select bank1
 14849  00BF  00AD               	movwf	(??_logf^(0+128)+1)
 14850  00C0  0022               	movlb	2	; select bank2
 14851  00C1  0860               	movf	(logf@ix+2)^(0+256),w
 14852  00C2  0021               	movlb	1	; select bank1
 14853  00C3  00AE               	movwf	(??_logf^(0+128)+2)
 14854  00C4  0022               	movlb	2	; select bank2
 14855  00C5  0861               	movf	(logf@ix+3)^(0+256),w
 14856  00C6  0021               	movlb	1	; select bank1
 14857  00C7  00AF               	movwf	(??_logf^(0+128)+3)
 14858  00C8  3001               	movlw	1
 14859  00C9                     u10715:	
 14860  00C9  35AC               	lslf	??_logf^(0+128),f
 14861  00CA  0DAD               	rlf	(??_logf^(0+128)+1),f
 14862  00CB  0DAE               	rlf	(??_logf^(0+128)+2),f
 14863  00CC  0DAF               	rlf	(??_logf^(0+128)+3),f
 14864  00CD  0B89               	decfsz	9,f
 14865  00CE  28C9               	goto	u10715
 14866  00CF  082F               	movf	(??_logf+3)^(0+128),w
 14867  00D0  042E               	iorwf	(??_logf+2)^(0+128),w
 14868  00D1  042D               	iorwf	(??_logf+1)^(0+128),w
 14869  00D2  042C               	iorwf	??_logf^(0+128),w
 14870  00D3  1D03               	skipz
 14871  00D4  291B               	goto	l7782
 14872  00D5  082B               	movf	(logf@x+3)^(0+128),w
 14873  00D6  0020               	movlb	0	; select bank0
 14874  00D7  00A9               	movwf	___flmul@b+3
 14875  00D8  0021               	movlb	1	; select bank1
 14876  00D9  082A               	movf	(logf@x+2)^(0+128),w
 14877  00DA  0020               	movlb	0	; select bank0
 14878  00DB  00A8               	movwf	___flmul@b+2
 14879  00DC  0021               	movlb	1	; select bank1
 14880  00DD  0829               	movf	(logf@x+1)^(0+128),w
 14881  00DE  0020               	movlb	0	; select bank0
 14882  00DF  00A7               	movwf	___flmul@b+1
 14883  00E0  0021               	movlb	1	; select bank1
 14884  00E1  0828               	movf	logf@x^(0+128),w
 14885  00E2  0020               	movlb	0	; select bank0
 14886  00E3  00A6               	movwf	___flmul@b
 14887  00E4  0021               	movlb	1	; select bank1
 14888  00E5  082B               	movf	(logf@x+3)^(0+128),w
 14889  00E6  0020               	movlb	0	; select bank0
 14890  00E7  00AD               	movwf	___flmul@a+3
 14891  00E8  0021               	movlb	1	; select bank1
 14892  00E9  082A               	movf	(logf@x+2)^(0+128),w
 14893  00EA  0020               	movlb	0	; select bank0
 14894  00EB  00AC               	movwf	___flmul@a+2
 14895  00EC  0021               	movlb	1	; select bank1
 14896  00ED  0829               	movf	(logf@x+1)^(0+128),w
 14897  00EE  0020               	movlb	0	; select bank0
 14898  00EF  00AB               	movwf	___flmul@a+1
 14899  00F0  0021               	movlb	1	; select bank1
 14900  00F1  0828               	movf	logf@x^(0+128),w
 14901  00F2  0020               	movlb	0	; select bank0
 14902  00F3  00AA               	movwf	___flmul@a
 14903  00F4  3190  2023  3180   	fcall	___flmul
 14904  00F7  0020               	movlb	0	; select bank0
 14905  00F8  0829               	movf	?___flmul+3,w
 14906  00F9  00C3               	movwf	___fldiv@a+3
 14907  00FA  0828               	movf	?___flmul+2,w
 14908  00FB  00C2               	movwf	___fldiv@a+2
 14909  00FC  0827               	movf	?___flmul+1,w
 14910  00FD  00C1               	movwf	___fldiv@a+1
 14911  00FE  0826               	movf	?___flmul,w
 14912  00FF  00C0               	movwf	___fldiv@a
 14913  0100  30BF               	movlw	191
 14914  0101  00C7               	movwf	___fldiv@b+3
 14915  0102  3080               	movlw	128
 14916  0103  00C6               	movwf	___fldiv@b+2
 14917  0104  3000               	movlw	0
 14918  0105  00C5               	movwf	___fldiv@b+1
 14919  0106  3000               	movlw	0
 14920  0107  00C4               	movwf	___fldiv@b
 14921  0108  319C  24E2         	fcall	___fldiv
 14922  010A  0020               	movlb	0	; select bank0
 14923  010B  0843               	movf	?___fldiv+3,w
 14924  010C  0021               	movlb	1	; select bank1
 14925  010D  00AB               	movwf	(?_logf+3)^(0+128)
 14926  010E  0020               	movlb	0	; select bank0
 14927  010F  0842               	movf	?___fldiv+2,w
 14928  0110  0021               	movlb	1	; select bank1
 14929  0111  00AA               	movwf	(?_logf+2)^(0+128)
 14930  0112  0020               	movlb	0	; select bank0
 14931  0113  0841               	movf	?___fldiv+1,w
 14932  0114  0021               	movlb	1	; select bank1
 14933  0115  00A9               	movwf	(?_logf+1)^(0+128)
 14934  0116  0020               	movlb	0	; select bank0
 14935  0117  0840               	movf	?___fldiv,w
 14936  0118  0021               	movlb	1	; select bank1
 14937  0119  00A8               	movwf	?_logf^(0+128)
 14938  011A  0008               	return
 14939  011B                     l7782:	
 14940  011B  0022               	movlb	2	; select bank2
 14941  011C  085E               	movf	logf@ix^(0+256),w
 14942  011D  0021               	movlb	1	; select bank1
 14943  011E  00AC               	movwf	??_logf^(0+128)
 14944  011F  0022               	movlb	2	; select bank2
 14945  0120  085F               	movf	(logf@ix+1)^(0+256),w
 14946  0121  0021               	movlb	1	; select bank1
 14947  0122  00AD               	movwf	(??_logf^(0+128)+1)
 14948  0123  0022               	movlb	2	; select bank2
 14949  0124  0860               	movf	(logf@ix+2)^(0+256),w
 14950  0125  0021               	movlb	1	; select bank1
 14951  0126  00AE               	movwf	(??_logf^(0+128)+2)
 14952  0127  0022               	movlb	2	; select bank2
 14953  0128  0861               	movf	(logf@ix+3)^(0+256),w
 14954  0129  0021               	movlb	1	; select bank1
 14955  012A  00AF               	movwf	(??_logf^(0+128)+3)
 14956  012B  301F               	movlw	31
 14957  012C                     u10735:	
 14958  012C  36AF               	lsrf	(??_logf^(0+128)+3),f
 14959  012D  0CAE               	rrf	(??_logf^(0+128)+2),f
 14960  012E  0CAD               	rrf	(??_logf^(0+128)+1),f
 14961  012F  0CAC               	rrf	??_logf^(0+128),f
 14962  0130  0B89               	decfsz	9,f
 14963  0131  292C               	goto	u10735
 14964  0132  082F               	movf	(??_logf+3)^(0+128),w
 14965  0133  042E               	iorwf	(??_logf+2)^(0+128),w
 14966  0134  042D               	iorwf	(??_logf+1)^(0+128),w
 14967  0135  042C               	iorwf	??_logf^(0+128),w
 14968  0136  1903               	skipnz
 14969  0137  2978               	goto	l7788
 14970  0138  3000               	movlw	0
 14971  0139  0020               	movlb	0	; select bank0
 14972  013A  00C3               	movwf	___fldiv@a+3
 14973  013B  3000               	movlw	0
 14974  013C  00C2               	movwf	___fldiv@a+2
 14975  013D  3000               	movlw	0
 14976  013E  00C1               	movwf	___fldiv@a+1
 14977  013F  3000               	movlw	0
 14978  0140  00C0               	movwf	___fldiv@a
 14979  0141  0021               	movlb	1	; select bank1
 14980  0142  082B               	movf	(logf@x+3)^(0+128),w
 14981  0143  00A3               	movwf	(___flsub@a+3)^(0+128)
 14982  0144  082A               	movf	(logf@x+2)^(0+128),w
 14983  0145  00A2               	movwf	(___flsub@a+2)^(0+128)
 14984  0146  0829               	movf	(logf@x+1)^(0+128),w
 14985  0147  00A1               	movwf	(___flsub@a+1)^(0+128)
 14986  0148  0828               	movf	logf@x^(0+128),w
 14987  0149  00A0               	movwf	___flsub@a^(0+128)
 14988  014A  082B               	movf	(logf@x+3)^(0+128),w
 14989  014B  00A7               	movwf	(___flsub@b+3)^(0+128)
 14990  014C  082A               	movf	(logf@x+2)^(0+128),w
 14991  014D  00A6               	movwf	(___flsub@b+2)^(0+128)
 14992  014E  0829               	movf	(logf@x+1)^(0+128),w
 14993  014F  00A5               	movwf	(___flsub@b+1)^(0+128)
 14994  0150  0828               	movf	logf@x^(0+128),w
 14995  0151  00A4               	movwf	___flsub@b^(0+128)
 14996  0152  31B6  26C9  3180   	fcall	___flsub
 14997  0155  0021               	movlb	1	; select bank1
 14998  0156  0823               	movf	(?___flsub+3)^(0+128),w
 14999  0157  0020               	movlb	0	; select bank0
 15000  0158  00C7               	movwf	___fldiv@b+3
 15001  0159  0021               	movlb	1	; select bank1
 15002  015A  0822               	movf	(?___flsub+2)^(0+128),w
 15003  015B  0020               	movlb	0	; select bank0
 15004  015C  00C6               	movwf	___fldiv@b+2
 15005  015D  0021               	movlb	1	; select bank1
 15006  015E  0821               	movf	(?___flsub+1)^(0+128),w
 15007  015F  0020               	movlb	0	; select bank0
 15008  0160  00C5               	movwf	___fldiv@b+1
 15009  0161  0021               	movlb	1	; select bank1
 15010  0162  0820               	movf	?___flsub^(0+128),w
 15011  0163  0020               	movlb	0	; select bank0
 15012  0164  00C4               	movwf	___fldiv@b
 15013  0165  319C  24E2         	fcall	___fldiv
 15014  0167  0020               	movlb	0	; select bank0
 15015  0168  0843               	movf	?___fldiv+3,w
 15016  0169  0021               	movlb	1	; select bank1
 15017  016A  00AB               	movwf	(?_logf+3)^(0+128)
 15018  016B  0020               	movlb	0	; select bank0
 15019  016C  0842               	movf	?___fldiv+2,w
 15020  016D  0021               	movlb	1	; select bank1
 15021  016E  00AA               	movwf	(?_logf+2)^(0+128)
 15022  016F  0020               	movlb	0	; select bank0
 15023  0170  0841               	movf	?___fldiv+1,w
 15024  0171  0021               	movlb	1	; select bank1
 15025  0172  00A9               	movwf	(?_logf+1)^(0+128)
 15026  0173  0020               	movlb	0	; select bank0
 15027  0174  0840               	movf	?___fldiv,w
 15028  0175  0021               	movlb	1	; select bank1
 15029  0176  00A8               	movwf	?_logf^(0+128)
 15030  0177  0008               	return
 15031  0178                     l7788:	
 15032  0178  30E7               	movlw	231
 15033  0179  0022               	movlb	2	; select bank2
 15034  017A  07BC               	addwf	logf@k^(0+256),f
 15035  017B  30FF               	movlw	255
 15036  017C  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15037  017D  304C               	movlw	76
 15038  017E  0020               	movlb	0	; select bank0
 15039  017F  00A9               	movwf	___flmul@b+3
 15040  0180  3000               	movlw	0
 15041  0181  00A8               	movwf	___flmul@b+2
 15042  0182  3000               	movlw	0
 15043  0183  00A7               	movwf	___flmul@b+1
 15044  0184  3000               	movlw	0
 15045  0185  00A6               	movwf	___flmul@b
 15046  0186  0021               	movlb	1	; select bank1
 15047  0187  082B               	movf	(logf@x+3)^(0+128),w
 15048  0188  0020               	movlb	0	; select bank0
 15049  0189  00AD               	movwf	___flmul@a+3
 15050  018A  0021               	movlb	1	; select bank1
 15051  018B  082A               	movf	(logf@x+2)^(0+128),w
 15052  018C  0020               	movlb	0	; select bank0
 15053  018D  00AC               	movwf	___flmul@a+2
 15054  018E  0021               	movlb	1	; select bank1
 15055  018F  0829               	movf	(logf@x+1)^(0+128),w
 15056  0190  0020               	movlb	0	; select bank0
 15057  0191  00AB               	movwf	___flmul@a+1
 15058  0192  0021               	movlb	1	; select bank1
 15059  0193  0828               	movf	logf@x^(0+128),w
 15060  0194  0020               	movlb	0	; select bank0
 15061  0195  00AA               	movwf	___flmul@a
 15062  0196  3190  2023  3180   	fcall	___flmul
 15063  0199  0020               	movlb	0	; select bank0
 15064  019A  0829               	movf	?___flmul+3,w
 15065  019B  0021               	movlb	1	; select bank1
 15066  019C  00AB               	movwf	(logf@x+3)^(0+128)
 15067  019D  0020               	movlb	0	; select bank0
 15068  019E  0828               	movf	?___flmul+2,w
 15069  019F  0021               	movlb	1	; select bank1
 15070  01A0  00AA               	movwf	(logf@x+2)^(0+128)
 15071  01A1  0020               	movlb	0	; select bank0
 15072  01A2  0827               	movf	?___flmul+1,w
 15073  01A3  0021               	movlb	1	; select bank1
 15074  01A4  00A9               	movwf	(logf@x+1)^(0+128)
 15075  01A5  0020               	movlb	0	; select bank0
 15076  01A6  0826               	movf	?___flmul,w
 15077  01A7  0021               	movlb	1	; select bank1
 15078  01A8  00A8               	movwf	logf@x^(0+128)
 15079  01A9  082B               	movf	(logf@x+3)^(0+128),w
 15080  01AA  0022               	movlb	2	; select bank2
 15081  01AB  00D9               	movwf	(logf@u+3)^(0+256)
 15082  01AC  0021               	movlb	1	; select bank1
 15083  01AD  082A               	movf	(logf@x+2)^(0+128),w
 15084  01AE  0022               	movlb	2	; select bank2
 15085  01AF  00D8               	movwf	(logf@u+2)^(0+256)
 15086  01B0  0021               	movlb	1	; select bank1
 15087  01B1  0829               	movf	(logf@x+1)^(0+128),w
 15088  01B2  0022               	movlb	2	; select bank2
 15089  01B3  00D7               	movwf	(logf@u+1)^(0+256)
 15090  01B4  0021               	movlb	1	; select bank1
 15091  01B5  0828               	movf	logf@x^(0+128),w
 15092  01B6  0022               	movlb	2	; select bank2
 15093  01B7  00D6               	movwf	logf@u^(0+256)
 15094  01B8  0859               	movf	(logf@u+3)^(0+256),w
 15095  01B9  00E1               	movwf	(logf@ix+3)^(0+256)
 15096  01BA  0858               	movf	(logf@u+2)^(0+256),w
 15097  01BB  00E0               	movwf	(logf@ix+2)^(0+256)
 15098  01BC  0857               	movf	(logf@u+1)^(0+256),w
 15099  01BD  00DF               	movwf	(logf@ix+1)^(0+256)
 15100  01BE  0856               	movf	logf@u^(0+256),w
 15101  01BF  00DE               	movwf	logf@ix^(0+256)
 15102  01C0  29DB               	goto	l7808
 15103  01C1                     l7796:	
 15104  01C1  3080               	movlw	128
 15105  01C2  0022               	movlb	2	; select bank2
 15106  01C3  0260               	subwf	(logf@ix+2)^(0+256),w
 15107  01C4  307F               	movlw	127
 15108  01C5  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15109  01C6  1803               	btfsc	3,0
 15110  01C7  0008               	return
 15111  01C8  3080               	movlw	128
 15112  01C9  0660               	xorwf	(logf@ix+2)^(0+256),w
 15113  01CA  303F               	movlw	63
 15114  01CB  1903               	skipnz
 15115  01CC  0661               	xorwf	(logf@ix+3)^(0+256),w
 15116  01CD  045E               	iorwf	logf@ix^(0+256),w
 15117  01CE  045F               	iorwf	(logf@ix+1)^(0+256),w
 15118  01CF  1D03               	btfss	3,2
 15119  01D0  29DB               	goto	l7808
 15120  01D1  3000               	movlw	0
 15121  01D2  0021               	movlb	1	; select bank1
 15122  01D3  00AB               	movwf	(?_logf+3)^(0+128)
 15123  01D4  3000               	movlw	0
 15124  01D5  00AA               	movwf	(?_logf+2)^(0+128)
 15125  01D6  3000               	movlw	0
 15126  01D7  00A9               	movwf	(?_logf+1)^(0+128)
 15127  01D8  3000               	movlw	0
 15128  01D9  00A8               	movwf	?_logf^(0+128)
 15129  01DA  0008               	return
 15130  01DB                     l7808:	
 15131  01DB  300D               	movlw	13
 15132  01DC  07DE               	addwf	logf@ix^(0+256),f
 15133  01DD  30FB               	movlw	251
 15134  01DE  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15135  01DF  304A               	movlw	74
 15136  01E0  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15137  01E1  3000               	movlw	0
 15138  01E2  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15139  01E3  085E               	movf	logf@ix^(0+256),w
 15140  01E4  0021               	movlb	1	; select bank1
 15141  01E5  00AC               	movwf	??_logf^(0+128)
 15142  01E6  0022               	movlb	2	; select bank2
 15143  01E7  085F               	movf	(logf@ix+1)^(0+256),w
 15144  01E8  0021               	movlb	1	; select bank1
 15145  01E9  00AD               	movwf	(??_logf^(0+128)+1)
 15146  01EA  0022               	movlb	2	; select bank2
 15147  01EB  0860               	movf	(logf@ix+2)^(0+256),w
 15148  01EC  0021               	movlb	1	; select bank1
 15149  01ED  00AE               	movwf	(??_logf^(0+128)+2)
 15150  01EE  0022               	movlb	2	; select bank2
 15151  01EF  0861               	movf	(logf@ix+3)^(0+256),w
 15152  01F0  0021               	movlb	1	; select bank1
 15153  01F1  00AF               	movwf	(??_logf^(0+128)+3)
 15154  01F2  3017               	movlw	23
 15155  01F3                     u10775:	
 15156  01F3  36AF               	lsrf	(??_logf^(0+128)+3),f
 15157  01F4  0CAE               	rrf	(??_logf^(0+128)+2),f
 15158  01F5  0CAD               	rrf	(??_logf^(0+128)+1),f
 15159  01F6  0CAC               	rrf	??_logf^(0+128),f
 15160  01F7  0B89               	decfsz	9,f
 15161  01F8  29F3               	goto	u10775
 15162  01F9  082C               	movf	??_logf^(0+128),w
 15163  01FA  3E81               	addlw	129
 15164  01FB  00B0               	movwf	(??_logf+4)^(0+128)
 15165  01FC  30FF               	movlw	255
 15166  01FD  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15167  01FE  00B1               	movwf	(??_logf+5)^(0+128)
 15168  01FF  0830               	movf	(??_logf+4)^(0+128),w
 15169  0200  0022               	movlb	2	; select bank2
 15170  0201  07BC               	addwf	logf@k^(0+256),f
 15171  0202  0021               	movlb	1	; select bank1
 15172  0203  0831               	movf	(??_logf+5)^(0+128),w
 15173  0204  0022               	movlb	2	; select bank2
 15174  0205  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15175  0206  30F3               	movlw	243
 15176  0207  0021               	movlb	1	; select bank1
 15177  0208  00AC               	movwf	??_logf^(0+128)
 15178  0209  3004               	movlw	4
 15179  020A  00AD               	movwf	(??_logf^(0+128)+1)
 15180  020B  3035               	movlw	53
 15181  020C  00AE               	movwf	(??_logf^(0+128)+2)
 15182  020D  303F               	movlw	63
 15183  020E  00AF               	movwf	(??_logf^(0+128)+3)
 15184  020F  30FF               	movlw	255
 15185  0210  0022               	movlb	2	; select bank2
 15186  0211  055E               	andwf	logf@ix^(0+256),w
 15187  0212  0021               	movlb	1	; select bank1
 15188  0213  00B0               	movwf	(??_logf+4)^(0+128)
 15189  0214  30FF               	movlw	255
 15190  0215  0022               	movlb	2	; select bank2
 15191  0216  055F               	andwf	(logf@ix+1)^(0+256),w
 15192  0217  0021               	movlb	1	; select bank1
 15193  0218  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15194  0219  307F               	movlw	127
 15195  021A  0022               	movlb	2	; select bank2
 15196  021B  0560               	andwf	(logf@ix+2)^(0+256),w
 15197  021C  0021               	movlb	1	; select bank1
 15198  021D  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15199  021E  3000               	movlw	0
 15200  021F  0022               	movlb	2	; select bank2
 15201  0220  0561               	andwf	(logf@ix+3)^(0+256),w
 15202  0221  0021               	movlb	1	; select bank1
 15203  0222  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15204  0223  0830               	movf	(??_logf+4)^(0+128),w
 15205  0224  07AC               	addwf	??_logf^(0+128),f
 15206  0225  0831               	movf	(??_logf+5)^(0+128),w
 15207  0226  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15208  0227  0832               	movf	(??_logf+6)^(0+128),w
 15209  0228  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15210  0229  0833               	movf	(??_logf+7)^(0+128),w
 15211  022A  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15212  022B  082F               	movf	(??_logf+3)^(0+128),w
 15213  022C  0022               	movlb	2	; select bank2
 15214  022D  00E1               	movwf	(logf@ix+3)^(0+256)
 15215  022E  0021               	movlb	1	; select bank1
 15216  022F  082E               	movf	(??_logf+2)^(0+128),w
 15217  0230  0022               	movlb	2	; select bank2
 15218  0231  00E0               	movwf	(logf@ix+2)^(0+256)
 15219  0232  0021               	movlb	1	; select bank1
 15220  0233  082D               	movf	(??_logf+1)^(0+128),w
 15221  0234  0022               	movlb	2	; select bank2
 15222  0235  00DF               	movwf	(logf@ix+1)^(0+256)
 15223  0236  0021               	movlb	1	; select bank1
 15224  0237  082C               	movf	??_logf^(0+128),w
 15225  0238  0022               	movlb	2	; select bank2
 15226  0239  00DE               	movwf	logf@ix^(0+256)
 15227  023A  0861               	movf	(logf@ix+3)^(0+256),w
 15228  023B  00D9               	movwf	(logf@u+3)^(0+256)
 15229  023C  0860               	movf	(logf@ix+2)^(0+256),w
 15230  023D  00D8               	movwf	(logf@u+2)^(0+256)
 15231  023E  085F               	movf	(logf@ix+1)^(0+256),w
 15232  023F  00D7               	movwf	(logf@u+1)^(0+256)
 15233  0240  085E               	movf	logf@ix^(0+256),w
 15234  0241  00D6               	movwf	logf@u^(0+256)
 15235  0242  0859               	movf	(logf@u+3)^(0+256),w
 15236  0243  0021               	movlb	1	; select bank1
 15237  0244  00AB               	movwf	(logf@x+3)^(0+128)
 15238  0245  0022               	movlb	2	; select bank2
 15239  0246  0858               	movf	(logf@u+2)^(0+256),w
 15240  0247  0021               	movlb	1	; select bank1
 15241  0248  00AA               	movwf	(logf@x+2)^(0+128)
 15242  0249  0022               	movlb	2	; select bank2
 15243  024A  0857               	movf	(logf@u+1)^(0+256),w
 15244  024B  0021               	movlb	1	; select bank1
 15245  024C  00A9               	movwf	(logf@x+1)^(0+128)
 15246  024D  0022               	movlb	2	; select bank2
 15247  024E  0856               	movf	logf@u^(0+256),w
 15248  024F  0021               	movlb	1	; select bank1
 15249  0250  00A8               	movwf	logf@x^(0+128)
 15250  0251  30BF               	movlw	191
 15251  0252  0020               	movlb	0	; select bank0
 15252  0253  00DD               	movwf	___fladd@b+3
 15253  0254  3080               	movlw	128
 15254  0255  00DC               	movwf	___fladd@b+2
 15255  0256  3000               	movlw	0
 15256  0257  00DB               	movwf	___fladd@b+1
 15257  0258  3000               	movlw	0
 15258  0259  00DA               	movwf	___fladd@b
 15259  025A  0021               	movlb	1	; select bank1
 15260  025B  082B               	movf	(logf@x+3)^(0+128),w
 15261  025C  0020               	movlb	0	; select bank0
 15262  025D  00E1               	movwf	___fladd@a+3
 15263  025E  0021               	movlb	1	; select bank1
 15264  025F  082A               	movf	(logf@x+2)^(0+128),w
 15265  0260  0020               	movlb	0	; select bank0
 15266  0261  00E0               	movwf	___fladd@a+2
 15267  0262  0021               	movlb	1	; select bank1
 15268  0263  0829               	movf	(logf@x+1)^(0+128),w
 15269  0264  0020               	movlb	0	; select bank0
 15270  0265  00DF               	movwf	___fladd@a+1
 15271  0266  0021               	movlb	1	; select bank1
 15272  0267  0828               	movf	logf@x^(0+128),w
 15273  0268  0020               	movlb	0	; select bank0
 15274  0269  00DE               	movwf	___fladd@a
 15275  026A  3185  25F5  3180   	fcall	___fladd
 15276  026D  0020               	movlb	0	; select bank0
 15277  026E  085D               	movf	?___fladd+3,w
 15278  026F  0022               	movlb	2	; select bank2
 15279  0270  00DD               	movwf	(logf@f+3)^(0+256)
 15280  0271  0020               	movlb	0	; select bank0
 15281  0272  085C               	movf	?___fladd+2,w
 15282  0273  0022               	movlb	2	; select bank2
 15283  0274  00DC               	movwf	(logf@f+2)^(0+256)
 15284  0275  0020               	movlb	0	; select bank0
 15285  0276  085B               	movf	?___fladd+1,w
 15286  0277  0022               	movlb	2	; select bank2
 15287  0278  00DB               	movwf	(logf@f+1)^(0+256)
 15288  0279  0020               	movlb	0	; select bank0
 15289  027A  085A               	movf	?___fladd,w
 15290  027B  0022               	movlb	2	; select bank2
 15291  027C  00DA               	movwf	logf@f^(0+256)
 15292  027D  3040               	movlw	64
 15293  027E  0020               	movlb	0	; select bank0
 15294  027F  00DD               	movwf	___fladd@b+3
 15295  0280  3000               	movlw	0
 15296  0281  00DC               	movwf	___fladd@b+2
 15297  0282  3000               	movlw	0
 15298  0283  00DB               	movwf	___fladd@b+1
 15299  0284  3000               	movlw	0
 15300  0285  00DA               	movwf	___fladd@b
 15301  0286  0022               	movlb	2	; select bank2
 15302  0287  085D               	movf	(logf@f+3)^(0+256),w
 15303  0288  0020               	movlb	0	; select bank0
 15304  0289  00E1               	movwf	___fladd@a+3
 15305  028A  0022               	movlb	2	; select bank2
 15306  028B  085C               	movf	(logf@f+2)^(0+256),w
 15307  028C  0020               	movlb	0	; select bank0
 15308  028D  00E0               	movwf	___fladd@a+2
 15309  028E  0022               	movlb	2	; select bank2
 15310  028F  085B               	movf	(logf@f+1)^(0+256),w
 15311  0290  0020               	movlb	0	; select bank0
 15312  0291  00DF               	movwf	___fladd@a+1
 15313  0292  0022               	movlb	2	; select bank2
 15314  0293  085A               	movf	logf@f^(0+256),w
 15315  0294  0020               	movlb	0	; select bank0
 15316  0295  00DE               	movwf	___fladd@a
 15317  0296  3185  25F5  3180   	fcall	___fladd
 15318  0299  0020               	movlb	0	; select bank0
 15319  029A  085D               	movf	?___fladd+3,w
 15320  029B  00C3               	movwf	___fldiv@a+3
 15321  029C  085C               	movf	?___fladd+2,w
 15322  029D  00C2               	movwf	___fldiv@a+2
 15323  029E  085B               	movf	?___fladd+1,w
 15324  029F  00C1               	movwf	___fldiv@a+1
 15325  02A0  085A               	movf	?___fladd,w
 15326  02A1  00C0               	movwf	___fldiv@a
 15327  02A2  0022               	movlb	2	; select bank2
 15328  02A3  085D               	movf	(logf@f+3)^(0+256),w
 15329  02A4  0020               	movlb	0	; select bank0
 15330  02A5  00C7               	movwf	___fldiv@b+3
 15331  02A6  0022               	movlb	2	; select bank2
 15332  02A7  085C               	movf	(logf@f+2)^(0+256),w
 15333  02A8  0020               	movlb	0	; select bank0
 15334  02A9  00C6               	movwf	___fldiv@b+2
 15335  02AA  0022               	movlb	2	; select bank2
 15336  02AB  085B               	movf	(logf@f+1)^(0+256),w
 15337  02AC  0020               	movlb	0	; select bank0
 15338  02AD  00C5               	movwf	___fldiv@b+1
 15339  02AE  0022               	movlb	2	; select bank2
 15340  02AF  085A               	movf	logf@f^(0+256),w
 15341  02B0  0020               	movlb	0	; select bank0
 15342  02B1  00C4               	movwf	___fldiv@b
 15343  02B2  319C  24E2  3180   	fcall	___fldiv
 15344  02B5  0020               	movlb	0	; select bank0
 15345  02B6  0843               	movf	?___fldiv+3,w
 15346  02B7  0022               	movlb	2	; select bank2
 15347  02B8  00C9               	movwf	(logf@s+3)^(0+256)
 15348  02B9  0020               	movlb	0	; select bank0
 15349  02BA  0842               	movf	?___fldiv+2,w
 15350  02BB  0022               	movlb	2	; select bank2
 15351  02BC  00C8               	movwf	(logf@s+2)^(0+256)
 15352  02BD  0020               	movlb	0	; select bank0
 15353  02BE  0841               	movf	?___fldiv+1,w
 15354  02BF  0022               	movlb	2	; select bank2
 15355  02C0  00C7               	movwf	(logf@s+1)^(0+256)
 15356  02C1  0020               	movlb	0	; select bank0
 15357  02C2  0840               	movf	?___fldiv,w
 15358  02C3  0022               	movlb	2	; select bank2
 15359  02C4  00C6               	movwf	logf@s^(0+256)
 15360  02C5  0849               	movf	(logf@s+3)^(0+256),w
 15361  02C6  0020               	movlb	0	; select bank0
 15362  02C7  00A9               	movwf	___flmul@b+3
 15363  02C8  0022               	movlb	2	; select bank2
 15364  02C9  0848               	movf	(logf@s+2)^(0+256),w
 15365  02CA  0020               	movlb	0	; select bank0
 15366  02CB  00A8               	movwf	___flmul@b+2
 15367  02CC  0022               	movlb	2	; select bank2
 15368  02CD  0847               	movf	(logf@s+1)^(0+256),w
 15369  02CE  0020               	movlb	0	; select bank0
 15370  02CF  00A7               	movwf	___flmul@b+1
 15371  02D0  0022               	movlb	2	; select bank2
 15372  02D1  0846               	movf	logf@s^(0+256),w
 15373  02D2  0020               	movlb	0	; select bank0
 15374  02D3  00A6               	movwf	___flmul@b
 15375  02D4  0022               	movlb	2	; select bank2
 15376  02D5  0849               	movf	(logf@s+3)^(0+256),w
 15377  02D6  0020               	movlb	0	; select bank0
 15378  02D7  00AD               	movwf	___flmul@a+3
 15379  02D8  0022               	movlb	2	; select bank2
 15380  02D9  0848               	movf	(logf@s+2)^(0+256),w
 15381  02DA  0020               	movlb	0	; select bank0
 15382  02DB  00AC               	movwf	___flmul@a+2
 15383  02DC  0022               	movlb	2	; select bank2
 15384  02DD  0847               	movf	(logf@s+1)^(0+256),w
 15385  02DE  0020               	movlb	0	; select bank0
 15386  02DF  00AB               	movwf	___flmul@a+1
 15387  02E0  0022               	movlb	2	; select bank2
 15388  02E1  0846               	movf	logf@s^(0+256),w
 15389  02E2  0020               	movlb	0	; select bank0
 15390  02E3  00AA               	movwf	___flmul@a
 15391  02E4  3190  2023  3180   	fcall	___flmul
 15392  02E7  0020               	movlb	0	; select bank0
 15393  02E8  0829               	movf	?___flmul+3,w
 15394  02E9  0022               	movlb	2	; select bank2
 15395  02EA  00CD               	movwf	(logf@z+3)^(0+256)
 15396  02EB  0020               	movlb	0	; select bank0
 15397  02EC  0828               	movf	?___flmul+2,w
 15398  02ED  0022               	movlb	2	; select bank2
 15399  02EE  00CC               	movwf	(logf@z+2)^(0+256)
 15400  02EF  0020               	movlb	0	; select bank0
 15401  02F0  0827               	movf	?___flmul+1,w
 15402  02F1  0022               	movlb	2	; select bank2
 15403  02F2  00CB               	movwf	(logf@z+1)^(0+256)
 15404  02F3  0020               	movlb	0	; select bank0
 15405  02F4  0826               	movf	?___flmul,w
 15406  02F5  0022               	movlb	2	; select bank2
 15407  02F6  00CA               	movwf	logf@z^(0+256)
 15408  02F7  084D               	movf	(logf@z+3)^(0+256),w
 15409  02F8  0020               	movlb	0	; select bank0
 15410  02F9  00A9               	movwf	___flmul@b+3
 15411  02FA  0022               	movlb	2	; select bank2
 15412  02FB  084C               	movf	(logf@z+2)^(0+256),w
 15413  02FC  0020               	movlb	0	; select bank0
 15414  02FD  00A8               	movwf	___flmul@b+2
 15415  02FE  0022               	movlb	2	; select bank2
 15416  02FF  084B               	movf	(logf@z+1)^(0+256),w
 15417  0300  0020               	movlb	0	; select bank0
 15418  0301  00A7               	movwf	___flmul@b+1
 15419  0302  0022               	movlb	2	; select bank2
 15420  0303  084A               	movf	logf@z^(0+256),w
 15421  0304  0020               	movlb	0	; select bank0
 15422  0305  00A6               	movwf	___flmul@b
 15423  0306  0022               	movlb	2	; select bank2
 15424  0307  084D               	movf	(logf@z+3)^(0+256),w
 15425  0308  0020               	movlb	0	; select bank0
 15426  0309  00AD               	movwf	___flmul@a+3
 15427  030A  0022               	movlb	2	; select bank2
 15428  030B  084C               	movf	(logf@z+2)^(0+256),w
 15429  030C  0020               	movlb	0	; select bank0
 15430  030D  00AC               	movwf	___flmul@a+2
 15431  030E  0022               	movlb	2	; select bank2
 15432  030F  084B               	movf	(logf@z+1)^(0+256),w
 15433  0310  0020               	movlb	0	; select bank0
 15434  0311  00AB               	movwf	___flmul@a+1
 15435  0312  0022               	movlb	2	; select bank2
 15436  0313  084A               	movf	logf@z^(0+256),w
 15437  0314  0020               	movlb	0	; select bank0
 15438  0315  00AA               	movwf	___flmul@a
 15439  0316  3190  2023  3180   	fcall	___flmul
 15440  0319  0020               	movlb	0	; select bank0
 15441  031A  0829               	movf	?___flmul+3,w
 15442  031B  0022               	movlb	2	; select bank2
 15443  031C  00D1               	movwf	(logf@w+3)^(0+256)
 15444  031D  0020               	movlb	0	; select bank0
 15445  031E  0828               	movf	?___flmul+2,w
 15446  031F  0022               	movlb	2	; select bank2
 15447  0320  00D0               	movwf	(logf@w+2)^(0+256)
 15448  0321  0020               	movlb	0	; select bank0
 15449  0322  0827               	movf	?___flmul+1,w
 15450  0323  0022               	movlb	2	; select bank2
 15451  0324  00CF               	movwf	(logf@w+1)^(0+256)
 15452  0325  0020               	movlb	0	; select bank0
 15453  0326  0826               	movf	?___flmul,w
 15454  0327  0022               	movlb	2	; select bank2
 15455  0328  00CE               	movwf	logf@w^(0+256)
 15456  0329  303E               	movlw	62
 15457  032A  0020               	movlb	0	; select bank0
 15458  032B  00DD               	movwf	___fladd@b+3
 15459  032C  30CC               	movlw	204
 15460  032D  00DC               	movwf	___fladd@b+2
 15461  032E  30CE               	movlw	206
 15462  032F  00DB               	movwf	___fladd@b+1
 15463  0330  3013               	movlw	19
 15464  0331  00DA               	movwf	___fladd@b
 15465  0332  303E               	movlw	62
 15466  0333  00A9               	movwf	___flmul@b+3
 15467  0334  3078               	movlw	120
 15468  0335  00A8               	movwf	___flmul@b+2
 15469  0336  309E               	movlw	158
 15470  0337  00A7               	movwf	___flmul@b+1
 15471  0338  3026               	movlw	38
 15472  0339  00A6               	movwf	___flmul@b
 15473  033A  0022               	movlb	2	; select bank2
 15474  033B  0851               	movf	(logf@w+3)^(0+256),w
 15475  033C  0020               	movlb	0	; select bank0
 15476  033D  00AD               	movwf	___flmul@a+3
 15477  033E  0022               	movlb	2	; select bank2
 15478  033F  0850               	movf	(logf@w+2)^(0+256),w
 15479  0340  0020               	movlb	0	; select bank0
 15480  0341  00AC               	movwf	___flmul@a+2
 15481  0342  0022               	movlb	2	; select bank2
 15482  0343  084F               	movf	(logf@w+1)^(0+256),w
 15483  0344  0020               	movlb	0	; select bank0
 15484  0345  00AB               	movwf	___flmul@a+1
 15485  0346  0022               	movlb	2	; select bank2
 15486  0347  084E               	movf	logf@w^(0+256),w
 15487  0348  0020               	movlb	0	; select bank0
 15488  0349  00AA               	movwf	___flmul@a
 15489  034A  3190  2023  3180   	fcall	___flmul
 15490  034D  0020               	movlb	0	; select bank0
 15491  034E  0829               	movf	?___flmul+3,w
 15492  034F  00E1               	movwf	___fladd@a+3
 15493  0350  0828               	movf	?___flmul+2,w
 15494  0351  00E0               	movwf	___fladd@a+2
 15495  0352  0827               	movf	?___flmul+1,w
 15496  0353  00DF               	movwf	___fladd@a+1
 15497  0354  0826               	movf	?___flmul,w
 15498  0355  00DE               	movwf	___fladd@a
 15499  0356  3185  25F5  3180   	fcall	___fladd
 15500  0359  0020               	movlb	0	; select bank0
 15501  035A  085D               	movf	?___fladd+3,w
 15502  035B  0022               	movlb	2	; select bank2
 15503  035C  00D5               	movwf	(_logf$2040+3)^(0+256)
 15504  035D  0020               	movlb	0	; select bank0
 15505  035E  085C               	movf	?___fladd+2,w
 15506  035F  0022               	movlb	2	; select bank2
 15507  0360  00D4               	movwf	(_logf$2040+2)^(0+256)
 15508  0361  0020               	movlb	0	; select bank0
 15509  0362  085B               	movf	?___fladd+1,w
 15510  0363  0022               	movlb	2	; select bank2
 15511  0364  00D3               	movwf	(_logf$2040+1)^(0+256)
 15512  0365  0020               	movlb	0	; select bank0
 15513  0366  085A               	movf	?___fladd,w
 15514  0367  0022               	movlb	2	; select bank2
 15515  0368  00D2               	movwf	_logf$2040^(0+256)
 15516  0369  0851               	movf	(logf@w+3)^(0+256),w
 15517  036A  0020               	movlb	0	; select bank0
 15518  036B  00A9               	movwf	___flmul@b+3
 15519  036C  0022               	movlb	2	; select bank2
 15520  036D  0850               	movf	(logf@w+2)^(0+256),w
 15521  036E  0020               	movlb	0	; select bank0
 15522  036F  00A8               	movwf	___flmul@b+2
 15523  0370  0022               	movlb	2	; select bank2
 15524  0371  084F               	movf	(logf@w+1)^(0+256),w
 15525  0372  0020               	movlb	0	; select bank0
 15526  0373  00A7               	movwf	___flmul@b+1
 15527  0374  0022               	movlb	2	; select bank2
 15528  0375  084E               	movf	logf@w^(0+256),w
 15529  0376  0020               	movlb	0	; select bank0
 15530  0377  00A6               	movwf	___flmul@b
 15531  0378  0022               	movlb	2	; select bank2
 15532  0379  0855               	movf	(_logf$2040+3)^(0+256),w
 15533  037A  0020               	movlb	0	; select bank0
 15534  037B  00AD               	movwf	___flmul@a+3
 15535  037C  0022               	movlb	2	; select bank2
 15536  037D  0854               	movf	(_logf$2040+2)^(0+256),w
 15537  037E  0020               	movlb	0	; select bank0
 15538  037F  00AC               	movwf	___flmul@a+2
 15539  0380  0022               	movlb	2	; select bank2
 15540  0381  0853               	movf	(_logf$2040+1)^(0+256),w
 15541  0382  0020               	movlb	0	; select bank0
 15542  0383  00AB               	movwf	___flmul@a+1
 15543  0384  0022               	movlb	2	; select bank2
 15544  0385  0852               	movf	_logf$2040^(0+256),w
 15545  0386  0020               	movlb	0	; select bank0
 15546  0387  00AA               	movwf	___flmul@a
 15547  0388  3190  2023  3180   	fcall	___flmul
 15548  038B  0020               	movlb	0	; select bank0
 15549  038C  0829               	movf	?___flmul+3,w
 15550  038D  0022               	movlb	2	; select bank2
 15551  038E  00A7               	movwf	(logf@t1+3)^(0+256)
 15552  038F  0020               	movlb	0	; select bank0
 15553  0390  0828               	movf	?___flmul+2,w
 15554  0391  0022               	movlb	2	; select bank2
 15555  0392  00A6               	movwf	(logf@t1+2)^(0+256)
 15556  0393  0020               	movlb	0	; select bank0
 15557  0394  0827               	movf	?___flmul+1,w
 15558  0395  0022               	movlb	2	; select bank2
 15559  0396  00A5               	movwf	(logf@t1+1)^(0+256)
 15560  0397  0020               	movlb	0	; select bank0
 15561  0398  0826               	movf	?___flmul,w
 15562  0399  0022               	movlb	2	; select bank2
 15563  039A  00A4               	movwf	logf@t1^(0+256)
 15564  039B  303F               	movlw	63
 15565  039C  0020               	movlb	0	; select bank0
 15566  039D  00DD               	movwf	___fladd@b+3
 15567  039E  302A               	movlw	42
 15568  039F  00DC               	movwf	___fladd@b+2
 15569  03A0  30AA               	movlw	170
 15570  03A1  00DB               	movwf	___fladd@b+1
 15571  03A2  30AA               	movlw	170
 15572  03A3  00DA               	movwf	___fladd@b
 15573  03A4  303E               	movlw	62
 15574  03A5  00A9               	movwf	___flmul@b+3
 15575  03A6  3091               	movlw	145
 15576  03A7  00A8               	movwf	___flmul@b+2
 15577  03A8  30E9               	movlw	233
 15578  03A9  00A7               	movwf	___flmul@b+1
 15579  03AA  30EE               	movlw	238
 15580  03AB  00A6               	movwf	___flmul@b
 15581  03AC  0022               	movlb	2	; select bank2
 15582  03AD  0851               	movf	(logf@w+3)^(0+256),w
 15583  03AE  0020               	movlb	0	; select bank0
 15584  03AF  00AD               	movwf	___flmul@a+3
 15585  03B0  0022               	movlb	2	; select bank2
 15586  03B1  0850               	movf	(logf@w+2)^(0+256),w
 15587  03B2  0020               	movlb	0	; select bank0
 15588  03B3  00AC               	movwf	___flmul@a+2
 15589  03B4  0022               	movlb	2	; select bank2
 15590  03B5  084F               	movf	(logf@w+1)^(0+256),w
 15591  03B6  0020               	movlb	0	; select bank0
 15592  03B7  00AB               	movwf	___flmul@a+1
 15593  03B8  0022               	movlb	2	; select bank2
 15594  03B9  084E               	movf	logf@w^(0+256),w
 15595  03BA  0020               	movlb	0	; select bank0
 15596  03BB  00AA               	movwf	___flmul@a
 15597  03BC  3190  2023  3180   	fcall	___flmul
 15598  03BF  0020               	movlb	0	; select bank0
 15599  03C0  0829               	movf	?___flmul+3,w
 15600  03C1  00E1               	movwf	___fladd@a+3
 15601  03C2  0828               	movf	?___flmul+2,w
 15602  03C3  00E0               	movwf	___fladd@a+2
 15603  03C4  0827               	movf	?___flmul+1,w
 15604  03C5  00DF               	movwf	___fladd@a+1
 15605  03C6  0826               	movf	?___flmul,w
 15606  03C7  00DE               	movwf	___fladd@a
 15607  03C8  3185  25F5  3180   	fcall	___fladd
 15608  03CB  0020               	movlb	0	; select bank0
 15609  03CC  085D               	movf	?___fladd+3,w
 15610  03CD  0022               	movlb	2	; select bank2
 15611  03CE  00D5               	movwf	(_logf$2040+3)^(0+256)
 15612  03CF  0020               	movlb	0	; select bank0
 15613  03D0  085C               	movf	?___fladd+2,w
 15614  03D1  0022               	movlb	2	; select bank2
 15615  03D2  00D4               	movwf	(_logf$2040+2)^(0+256)
 15616  03D3  0020               	movlb	0	; select bank0
 15617  03D4  085B               	movf	?___fladd+1,w
 15618  03D5  0022               	movlb	2	; select bank2
 15619  03D6  00D3               	movwf	(_logf$2040+1)^(0+256)
 15620  03D7  0020               	movlb	0	; select bank0
 15621  03D8  085A               	movf	?___fladd,w
 15622  03D9  0022               	movlb	2	; select bank2
 15623  03DA  00D2               	movwf	_logf$2040^(0+256)
 15624  03DB  084D               	movf	(logf@z+3)^(0+256),w
 15625  03DC  0020               	movlb	0	; select bank0
 15626  03DD  00A9               	movwf	___flmul@b+3
 15627  03DE  0022               	movlb	2	; select bank2
 15628  03DF  084C               	movf	(logf@z+2)^(0+256),w
 15629  03E0  0020               	movlb	0	; select bank0
 15630  03E1  00A8               	movwf	___flmul@b+2
 15631  03E2  0022               	movlb	2	; select bank2
 15632  03E3  084B               	movf	(logf@z+1)^(0+256),w
 15633  03E4  0020               	movlb	0	; select bank0
 15634  03E5  00A7               	movwf	___flmul@b+1
 15635  03E6  0022               	movlb	2	; select bank2
 15636  03E7  084A               	movf	logf@z^(0+256),w
 15637  03E8  0020               	movlb	0	; select bank0
 15638  03E9  00A6               	movwf	___flmul@b
 15639  03EA  0022               	movlb	2	; select bank2
 15640  03EB  0855               	movf	(_logf$2040+3)^(0+256),w
 15641  03EC  0020               	movlb	0	; select bank0
 15642  03ED  00AD               	movwf	___flmul@a+3
 15643  03EE  0022               	movlb	2	; select bank2
 15644  03EF  0854               	movf	(_logf$2040+2)^(0+256),w
 15645  03F0  0020               	movlb	0	; select bank0
 15646  03F1  00AC               	movwf	___flmul@a+2
 15647  03F2  0022               	movlb	2	; select bank2
 15648  03F3  0853               	movf	(_logf$2040+1)^(0+256),w
 15649  03F4  0020               	movlb	0	; select bank0
 15650  03F5  00AB               	movwf	___flmul@a+1
 15651  03F6  0022               	movlb	2	; select bank2
 15652  03F7  0852               	movf	_logf$2040^(0+256),w
 15653  03F8  0020               	movlb	0	; select bank0
 15654  03F9  00AA               	movwf	___flmul@a
 15655  03FA  3190  2023  3180   	fcall	___flmul
 15656  03FD  0020               	movlb	0	; select bank0
 15657  03FE  0829               	movf	?___flmul+3,w
 15658  03FF  0022               	movlb	2	; select bank2
 15659  0400  00AB               	movwf	(logf@t2+3)^(0+256)
 15660  0401  0020               	movlb	0	; select bank0
 15661  0402  0828               	movf	?___flmul+2,w
 15662  0403  0022               	movlb	2	; select bank2
 15663  0404  00AA               	movwf	(logf@t2+2)^(0+256)
 15664  0405  0020               	movlb	0	; select bank0
 15665  0406  0827               	movf	?___flmul+1,w
 15666  0407  0022               	movlb	2	; select bank2
 15667  0408  00A9               	movwf	(logf@t2+1)^(0+256)
 15668  0409  0020               	movlb	0	; select bank0
 15669  040A  0826               	movf	?___flmul,w
 15670  040B  0022               	movlb	2	; select bank2
 15671  040C  00A8               	movwf	logf@t2^(0+256)
 15672  040D  0827               	movf	(logf@t1+3)^(0+256),w
 15673  040E  0020               	movlb	0	; select bank0
 15674  040F  00DD               	movwf	___fladd@b+3
 15675  0410  0022               	movlb	2	; select bank2
 15676  0411  0826               	movf	(logf@t1+2)^(0+256),w
 15677  0412  0020               	movlb	0	; select bank0
 15678  0413  00DC               	movwf	___fladd@b+2
 15679  0414  0022               	movlb	2	; select bank2
 15680  0415  0825               	movf	(logf@t1+1)^(0+256),w
 15681  0416  0020               	movlb	0	; select bank0
 15682  0417  00DB               	movwf	___fladd@b+1
 15683  0418  0022               	movlb	2	; select bank2
 15684  0419  0824               	movf	logf@t1^(0+256),w
 15685  041A  0020               	movlb	0	; select bank0
 15686  041B  00DA               	movwf	___fladd@b
 15687  041C  0022               	movlb	2	; select bank2
 15688  041D  082B               	movf	(logf@t2+3)^(0+256),w
 15689  041E  0020               	movlb	0	; select bank0
 15690  041F  00E1               	movwf	___fladd@a+3
 15691  0420  0022               	movlb	2	; select bank2
 15692  0421  082A               	movf	(logf@t2+2)^(0+256),w
 15693  0422  0020               	movlb	0	; select bank0
 15694  0423  00E0               	movwf	___fladd@a+2
 15695  0424  0022               	movlb	2	; select bank2
 15696  0425  0829               	movf	(logf@t2+1)^(0+256),w
 15697  0426  0020               	movlb	0	; select bank0
 15698  0427  00DF               	movwf	___fladd@a+1
 15699  0428  0022               	movlb	2	; select bank2
 15700  0429  0828               	movf	logf@t2^(0+256),w
 15701  042A  0020               	movlb	0	; select bank0
 15702  042B  00DE               	movwf	___fladd@a
 15703  042C  3185  25F5  3180   	fcall	___fladd
 15704  042F  0020               	movlb	0	; select bank0
 15705  0430  085D               	movf	?___fladd+3,w
 15706  0431  0022               	movlb	2	; select bank2
 15707  0432  00A3               	movwf	(logf@R+3)^(0+256)
 15708  0433  0020               	movlb	0	; select bank0
 15709  0434  085C               	movf	?___fladd+2,w
 15710  0435  0022               	movlb	2	; select bank2
 15711  0436  00A2               	movwf	(logf@R+2)^(0+256)
 15712  0437  0020               	movlb	0	; select bank0
 15713  0438  085B               	movf	?___fladd+1,w
 15714  0439  0022               	movlb	2	; select bank2
 15715  043A  00A1               	movwf	(logf@R+1)^(0+256)
 15716  043B  0020               	movlb	0	; select bank0
 15717  043C  085A               	movf	?___fladd,w
 15718  043D  0022               	movlb	2	; select bank2
 15719  043E  00A0               	movwf	logf@R^(0+256)
 15720  043F  303F               	movlw	63
 15721  0440  0020               	movlb	0	; select bank0
 15722  0441  00A9               	movwf	___flmul@b+3
 15723  0442  3000               	movlw	0
 15724  0443  00A8               	movwf	___flmul@b+2
 15725  0444  3000               	movlw	0
 15726  0445  00A7               	movwf	___flmul@b+1
 15727  0446  3000               	movlw	0
 15728  0447  00A6               	movwf	___flmul@b
 15729  0448  0022               	movlb	2	; select bank2
 15730  0449  085D               	movf	(logf@f+3)^(0+256),w
 15731  044A  0020               	movlb	0	; select bank0
 15732  044B  00AD               	movwf	___flmul@a+3
 15733  044C  0022               	movlb	2	; select bank2
 15734  044D  085C               	movf	(logf@f+2)^(0+256),w
 15735  044E  0020               	movlb	0	; select bank0
 15736  044F  00AC               	movwf	___flmul@a+2
 15737  0450  0022               	movlb	2	; select bank2
 15738  0451  085B               	movf	(logf@f+1)^(0+256),w
 15739  0452  0020               	movlb	0	; select bank0
 15740  0453  00AB               	movwf	___flmul@a+1
 15741  0454  0022               	movlb	2	; select bank2
 15742  0455  085A               	movf	logf@f^(0+256),w
 15743  0456  0020               	movlb	0	; select bank0
 15744  0457  00AA               	movwf	___flmul@a
 15745  0458  3190  2023  3180   	fcall	___flmul
 15746  045B  0020               	movlb	0	; select bank0
 15747  045C  0829               	movf	?___flmul+3,w
 15748  045D  0022               	movlb	2	; select bank2
 15749  045E  00D5               	movwf	(_logf$2040+3)^(0+256)
 15750  045F  0020               	movlb	0	; select bank0
 15751  0460  0828               	movf	?___flmul+2,w
 15752  0461  0022               	movlb	2	; select bank2
 15753  0462  00D4               	movwf	(_logf$2040+2)^(0+256)
 15754  0463  0020               	movlb	0	; select bank0
 15755  0464  0827               	movf	?___flmul+1,w
 15756  0465  0022               	movlb	2	; select bank2
 15757  0466  00D3               	movwf	(_logf$2040+1)^(0+256)
 15758  0467  0020               	movlb	0	; select bank0
 15759  0468  0826               	movf	?___flmul,w
 15760  0469  0022               	movlb	2	; select bank2
 15761  046A  00D2               	movwf	_logf$2040^(0+256)
 15762  046B  085D               	movf	(logf@f+3)^(0+256),w
 15763  046C  0020               	movlb	0	; select bank0
 15764  046D  00A9               	movwf	___flmul@b+3
 15765  046E  0022               	movlb	2	; select bank2
 15766  046F  085C               	movf	(logf@f+2)^(0+256),w
 15767  0470  0020               	movlb	0	; select bank0
 15768  0471  00A8               	movwf	___flmul@b+2
 15769  0472  0022               	movlb	2	; select bank2
 15770  0473  085B               	movf	(logf@f+1)^(0+256),w
 15771  0474  0020               	movlb	0	; select bank0
 15772  0475  00A7               	movwf	___flmul@b+1
 15773  0476  0022               	movlb	2	; select bank2
 15774  0477  085A               	movf	logf@f^(0+256),w
 15775  0478  0020               	movlb	0	; select bank0
 15776  0479  00A6               	movwf	___flmul@b
 15777  047A  0022               	movlb	2	; select bank2
 15778  047B  0855               	movf	(_logf$2040+3)^(0+256),w
 15779  047C  0020               	movlb	0	; select bank0
 15780  047D  00AD               	movwf	___flmul@a+3
 15781  047E  0022               	movlb	2	; select bank2
 15782  047F  0854               	movf	(_logf$2040+2)^(0+256),w
 15783  0480  0020               	movlb	0	; select bank0
 15784  0481  00AC               	movwf	___flmul@a+2
 15785  0482  0022               	movlb	2	; select bank2
 15786  0483  0853               	movf	(_logf$2040+1)^(0+256),w
 15787  0484  0020               	movlb	0	; select bank0
 15788  0485  00AB               	movwf	___flmul@a+1
 15789  0486  0022               	movlb	2	; select bank2
 15790  0487  0852               	movf	_logf$2040^(0+256),w
 15791  0488  0020               	movlb	0	; select bank0
 15792  0489  00AA               	movwf	___flmul@a
 15793  048A  3190  2023  3180   	fcall	___flmul
 15794  048D  0020               	movlb	0	; select bank0
 15795  048E  0829               	movf	?___flmul+3,w
 15796  048F  0022               	movlb	2	; select bank2
 15797  0490  00C1               	movwf	(logf@hfsq+3)^(0+256)
 15798  0491  0020               	movlb	0	; select bank0
 15799  0492  0828               	movf	?___flmul+2,w
 15800  0493  0022               	movlb	2	; select bank2
 15801  0494  00C0               	movwf	(logf@hfsq+2)^(0+256)
 15802  0495  0020               	movlb	0	; select bank0
 15803  0496  0827               	movf	?___flmul+1,w
 15804  0497  0022               	movlb	2	; select bank2
 15805  0498  00BF               	movwf	(logf@hfsq+1)^(0+256)
 15806  0499  0020               	movlb	0	; select bank0
 15807  049A  0826               	movf	?___flmul,w
 15808  049B  0022               	movlb	2	; select bank2
 15809  049C  00BE               	movwf	logf@hfsq^(0+256)
 15810  049D  083C               	movf	logf@k^(0+256),w
 15811  049E  00F1               	movwf	___xxtofl@val
 15812  049F  083D               	movf	(logf@k+1)^(0+256),w
 15813  04A0  00F2               	movwf	___xxtofl@val+1
 15814  04A1  0D89               	rlf	9,f
 15815  04A2  3B89               	subwfb	9,f
 15816  04A3  0989               	comf	9,f
 15817  04A4  00F3               	movwf	___xxtofl@val+2
 15818  04A5  00F4               	movwf	___xxtofl@val+3
 15819  04A6  3001               	movlw	1
 15820  04A7  31A0  2009  3180   	fcall	___xxtofl
 15821  04AA  0874               	movf	?___xxtofl+3,w
 15822  04AB  0022               	movlb	2	; select bank2
 15823  04AC  00C5               	movwf	(logf@dk+3)^(0+256)
 15824  04AD  0873               	movf	?___xxtofl+2,w
 15825  04AE  00C4               	movwf	(logf@dk+2)^(0+256)
 15826  04AF  0872               	movf	?___xxtofl+1,w
 15827  04B0  00C3               	movwf	(logf@dk+1)^(0+256)
 15828  04B1  0871               	movf	?___xxtofl,w
 15829  04B2  00C2               	movwf	logf@dk^(0+256)
 15830  04B3  0849               	movf	(logf@s+3)^(0+256),w
 15831  04B4  0020               	movlb	0	; select bank0
 15832  04B5  00A9               	movwf	___flmul@b+3
 15833  04B6  0022               	movlb	2	; select bank2
 15834  04B7  0848               	movf	(logf@s+2)^(0+256),w
 15835  04B8  0020               	movlb	0	; select bank0
 15836  04B9  00A8               	movwf	___flmul@b+2
 15837  04BA  0022               	movlb	2	; select bank2
 15838  04BB  0847               	movf	(logf@s+1)^(0+256),w
 15839  04BC  0020               	movlb	0	; select bank0
 15840  04BD  00A7               	movwf	___flmul@b+1
 15841  04BE  0022               	movlb	2	; select bank2
 15842  04BF  0846               	movf	logf@s^(0+256),w
 15843  04C0  0020               	movlb	0	; select bank0
 15844  04C1  00A6               	movwf	___flmul@b
 15845  04C2  0022               	movlb	2	; select bank2
 15846  04C3  0823               	movf	(logf@R+3)^(0+256),w
 15847  04C4  0020               	movlb	0	; select bank0
 15848  04C5  00DD               	movwf	___fladd@b+3
 15849  04C6  0022               	movlb	2	; select bank2
 15850  04C7  0822               	movf	(logf@R+2)^(0+256),w
 15851  04C8  0020               	movlb	0	; select bank0
 15852  04C9  00DC               	movwf	___fladd@b+2
 15853  04CA  0022               	movlb	2	; select bank2
 15854  04CB  0821               	movf	(logf@R+1)^(0+256),w
 15855  04CC  0020               	movlb	0	; select bank0
 15856  04CD  00DB               	movwf	___fladd@b+1
 15857  04CE  0022               	movlb	2	; select bank2
 15858  04CF  0820               	movf	logf@R^(0+256),w
 15859  04D0  0020               	movlb	0	; select bank0
 15860  04D1  00DA               	movwf	___fladd@b
 15861  04D2  0022               	movlb	2	; select bank2
 15862  04D3  0841               	movf	(logf@hfsq+3)^(0+256),w
 15863  04D4  0020               	movlb	0	; select bank0
 15864  04D5  00E1               	movwf	___fladd@a+3
 15865  04D6  0022               	movlb	2	; select bank2
 15866  04D7  0840               	movf	(logf@hfsq+2)^(0+256),w
 15867  04D8  0020               	movlb	0	; select bank0
 15868  04D9  00E0               	movwf	___fladd@a+2
 15869  04DA  0022               	movlb	2	; select bank2
 15870  04DB  083F               	movf	(logf@hfsq+1)^(0+256),w
 15871  04DC  0020               	movlb	0	; select bank0
 15872  04DD  00DF               	movwf	___fladd@a+1
 15873  04DE  0022               	movlb	2	; select bank2
 15874  04DF  083E               	movf	logf@hfsq^(0+256),w
 15875  04E0  0020               	movlb	0	; select bank0
 15876  04E1  00DE               	movwf	___fladd@a
 15877  04E2  3185  25F5  3180   	fcall	___fladd
 15878  04E5  0020               	movlb	0	; select bank0
 15879  04E6  085D               	movf	?___fladd+3,w
 15880  04E7  00AD               	movwf	___flmul@a+3
 15881  04E8  085C               	movf	?___fladd+2,w
 15882  04E9  00AC               	movwf	___flmul@a+2
 15883  04EA  085B               	movf	?___fladd+1,w
 15884  04EB  00AB               	movwf	___flmul@a+1
 15885  04EC  085A               	movf	?___fladd,w
 15886  04ED  00AA               	movwf	___flmul@a
 15887  04EE  3190  2023  3180   	fcall	___flmul
 15888  04F1  0020               	movlb	0	; select bank0
 15889  04F2  0829               	movf	?___flmul+3,w
 15890  04F3  0022               	movlb	2	; select bank2
 15891  04F4  00AF               	movwf	(_logf$2041+3)^(0+256)
 15892  04F5  0020               	movlb	0	; select bank0
 15893  04F6  0828               	movf	?___flmul+2,w
 15894  04F7  0022               	movlb	2	; select bank2
 15895  04F8  00AE               	movwf	(_logf$2041+2)^(0+256)
 15896  04F9  0020               	movlb	0	; select bank0
 15897  04FA  0827               	movf	?___flmul+1,w
 15898  04FB  0022               	movlb	2	; select bank2
 15899  04FC  00AD               	movwf	(_logf$2041+1)^(0+256)
 15900  04FD  0020               	movlb	0	; select bank0
 15901  04FE  0826               	movf	?___flmul,w
 15902  04FF  0022               	movlb	2	; select bank2
 15903  0500  00AC               	movwf	_logf$2041^(0+256)
 15904  0501  3037               	movlw	55
 15905  0502  0020               	movlb	0	; select bank0
 15906  0503  00A9               	movwf	___flmul@b+3
 15907  0504  3017               	movlw	23
 15908  0505  00A8               	movwf	___flmul@b+2
 15909  0506  30F7               	movlw	247
 15910  0507  00A7               	movwf	___flmul@b+1
 15911  0508  30D1               	movlw	209
 15912  0509  00A6               	movwf	___flmul@b
 15913  050A  0022               	movlb	2	; select bank2
 15914  050B  0845               	movf	(logf@dk+3)^(0+256),w
 15915  050C  0020               	movlb	0	; select bank0
 15916  050D  00AD               	movwf	___flmul@a+3
 15917  050E  0022               	movlb	2	; select bank2
 15918  050F  0844               	movf	(logf@dk+2)^(0+256),w
 15919  0510  0020               	movlb	0	; select bank0
 15920  0511  00AC               	movwf	___flmul@a+2
 15921  0512  0022               	movlb	2	; select bank2
 15922  0513  0843               	movf	(logf@dk+1)^(0+256),w
 15923  0514  0020               	movlb	0	; select bank0
 15924  0515  00AB               	movwf	___flmul@a+1
 15925  0516  0022               	movlb	2	; select bank2
 15926  0517  0842               	movf	logf@dk^(0+256),w
 15927  0518  0020               	movlb	0	; select bank0
 15928  0519  00AA               	movwf	___flmul@a
 15929  051A  3190  2023  3180   	fcall	___flmul
 15930  051D  0020               	movlb	0	; select bank0
 15931  051E  0829               	movf	?___flmul+3,w
 15932  051F  00DD               	movwf	___fladd@b+3
 15933  0520  0828               	movf	?___flmul+2,w
 15934  0521  00DC               	movwf	___fladd@b+2
 15935  0522  0827               	movf	?___flmul+1,w
 15936  0523  00DB               	movwf	___fladd@b+1
 15937  0524  0826               	movf	?___flmul,w
 15938  0525  00DA               	movwf	___fladd@b
 15939  0526  0022               	movlb	2	; select bank2
 15940  0527  082F               	movf	(_logf$2041+3)^(0+256),w
 15941  0528  0020               	movlb	0	; select bank0
 15942  0529  00E1               	movwf	___fladd@a+3
 15943  052A  0022               	movlb	2	; select bank2
 15944  052B  082E               	movf	(_logf$2041+2)^(0+256),w
 15945  052C  0020               	movlb	0	; select bank0
 15946  052D  00E0               	movwf	___fladd@a+2
 15947  052E  0022               	movlb	2	; select bank2
 15948  052F  082D               	movf	(_logf$2041+1)^(0+256),w
 15949  0530  0020               	movlb	0	; select bank0
 15950  0531  00DF               	movwf	___fladd@a+1
 15951  0532  0022               	movlb	2	; select bank2
 15952  0533  082C               	movf	_logf$2041^(0+256),w
 15953  0534  0020               	movlb	0	; select bank0
 15954  0535  00DE               	movwf	___fladd@a
 15955  0536  3185  25F5  3180   	fcall	___fladd
 15956  0539  0020               	movlb	0	; select bank0
 15957  053A  085D               	movf	?___fladd+3,w
 15958  053B  0022               	movlb	2	; select bank2
 15959  053C  00B3               	movwf	(_logf$2042+3)^(0+256)
 15960  053D  0020               	movlb	0	; select bank0
 15961  053E  085C               	movf	?___fladd+2,w
 15962  053F  0022               	movlb	2	; select bank2
 15963  0540  00B2               	movwf	(_logf$2042+2)^(0+256)
 15964  0541  0020               	movlb	0	; select bank0
 15965  0542  085B               	movf	?___fladd+1,w
 15966  0543  0022               	movlb	2	; select bank2
 15967  0544  00B1               	movwf	(_logf$2042+1)^(0+256)
 15968  0545  0020               	movlb	0	; select bank0
 15969  0546  085A               	movf	?___fladd,w
 15970  0547  0022               	movlb	2	; select bank2
 15971  0548  00B0               	movwf	_logf$2042^(0+256)
 15972  0549  0841               	movf	(logf@hfsq+3)^(0+256),w
 15973  054A  0021               	movlb	1	; select bank1
 15974  054B  00A3               	movwf	(___flsub@a+3)^(0+128)
 15975  054C  0022               	movlb	2	; select bank2
 15976  054D  0840               	movf	(logf@hfsq+2)^(0+256),w
 15977  054E  0021               	movlb	1	; select bank1
 15978  054F  00A2               	movwf	(___flsub@a+2)^(0+128)
 15979  0550  0022               	movlb	2	; select bank2
 15980  0551  083F               	movf	(logf@hfsq+1)^(0+256),w
 15981  0552  0021               	movlb	1	; select bank1
 15982  0553  00A1               	movwf	(___flsub@a+1)^(0+128)
 15983  0554  0022               	movlb	2	; select bank2
 15984  0555  083E               	movf	logf@hfsq^(0+256),w
 15985  0556  0021               	movlb	1	; select bank1
 15986  0557  00A0               	movwf	___flsub@a^(0+128)
 15987  0558  0022               	movlb	2	; select bank2
 15988  0559  0833               	movf	(_logf$2042+3)^(0+256),w
 15989  055A  0021               	movlb	1	; select bank1
 15990  055B  00A7               	movwf	(___flsub@b+3)^(0+128)
 15991  055C  0022               	movlb	2	; select bank2
 15992  055D  0832               	movf	(_logf$2042+2)^(0+256),w
 15993  055E  0021               	movlb	1	; select bank1
 15994  055F  00A6               	movwf	(___flsub@b+2)^(0+128)
 15995  0560  0022               	movlb	2	; select bank2
 15996  0561  0831               	movf	(_logf$2042+1)^(0+256),w
 15997  0562  0021               	movlb	1	; select bank1
 15998  0563  00A5               	movwf	(___flsub@b+1)^(0+128)
 15999  0564  0022               	movlb	2	; select bank2
 16000  0565  0830               	movf	_logf$2042^(0+256),w
 16001  0566  0021               	movlb	1	; select bank1
 16002  0567  00A4               	movwf	___flsub@b^(0+128)
 16003  0568  31B6  26C9  3180   	fcall	___flsub
 16004  056B  0021               	movlb	1	; select bank1
 16005  056C  0823               	movf	(?___flsub+3)^(0+128),w
 16006  056D  0022               	movlb	2	; select bank2
 16007  056E  00B7               	movwf	(_logf$2043+3)^(0+256)
 16008  056F  0021               	movlb	1	; select bank1
 16009  0570  0822               	movf	(?___flsub+2)^(0+128),w
 16010  0571  0022               	movlb	2	; select bank2
 16011  0572  00B6               	movwf	(_logf$2043+2)^(0+256)
 16012  0573  0021               	movlb	1	; select bank1
 16013  0574  0821               	movf	(?___flsub+1)^(0+128),w
 16014  0575  0022               	movlb	2	; select bank2
 16015  0576  00B5               	movwf	(_logf$2043+1)^(0+256)
 16016  0577  0021               	movlb	1	; select bank1
 16017  0578  0820               	movf	?___flsub^(0+128),w
 16018  0579  0022               	movlb	2	; select bank2
 16019  057A  00B4               	movwf	_logf$2043^(0+256)
 16020  057B  085D               	movf	(logf@f+3)^(0+256),w
 16021  057C  0020               	movlb	0	; select bank0
 16022  057D  00DD               	movwf	___fladd@b+3
 16023  057E  0022               	movlb	2	; select bank2
 16024  057F  085C               	movf	(logf@f+2)^(0+256),w
 16025  0580  0020               	movlb	0	; select bank0
 16026  0581  00DC               	movwf	___fladd@b+2
 16027  0582  0022               	movlb	2	; select bank2
 16028  0583  085B               	movf	(logf@f+1)^(0+256),w
 16029  0584  0020               	movlb	0	; select bank0
 16030  0585  00DB               	movwf	___fladd@b+1
 16031  0586  0022               	movlb	2	; select bank2
 16032  0587  085A               	movf	logf@f^(0+256),w
 16033  0588  0020               	movlb	0	; select bank0
 16034  0589  00DA               	movwf	___fladd@b
 16035  058A  0022               	movlb	2	; select bank2
 16036  058B  0837               	movf	(_logf$2043+3)^(0+256),w
 16037  058C  0020               	movlb	0	; select bank0
 16038  058D  00E1               	movwf	___fladd@a+3
 16039  058E  0022               	movlb	2	; select bank2
 16040  058F  0836               	movf	(_logf$2043+2)^(0+256),w
 16041  0590  0020               	movlb	0	; select bank0
 16042  0591  00E0               	movwf	___fladd@a+2
 16043  0592  0022               	movlb	2	; select bank2
 16044  0593  0835               	movf	(_logf$2043+1)^(0+256),w
 16045  0594  0020               	movlb	0	; select bank0
 16046  0595  00DF               	movwf	___fladd@a+1
 16047  0596  0022               	movlb	2	; select bank2
 16048  0597  0834               	movf	_logf$2043^(0+256),w
 16049  0598  0020               	movlb	0	; select bank0
 16050  0599  00DE               	movwf	___fladd@a
 16051  059A  3185  25F5  3180   	fcall	___fladd
 16052  059D  0020               	movlb	0	; select bank0
 16053  059E  085D               	movf	?___fladd+3,w
 16054  059F  0022               	movlb	2	; select bank2
 16055  05A0  00BB               	movwf	(_logf$2044+3)^(0+256)
 16056  05A1  0020               	movlb	0	; select bank0
 16057  05A2  085C               	movf	?___fladd+2,w
 16058  05A3  0022               	movlb	2	; select bank2
 16059  05A4  00BA               	movwf	(_logf$2044+2)^(0+256)
 16060  05A5  0020               	movlb	0	; select bank0
 16061  05A6  085B               	movf	?___fladd+1,w
 16062  05A7  0022               	movlb	2	; select bank2
 16063  05A8  00B9               	movwf	(_logf$2044+1)^(0+256)
 16064  05A9  0020               	movlb	0	; select bank0
 16065  05AA  085A               	movf	?___fladd,w
 16066  05AB  0022               	movlb	2	; select bank2
 16067  05AC  00B8               	movwf	_logf$2044^(0+256)
 16068  05AD  303F               	movlw	63
 16069  05AE  0020               	movlb	0	; select bank0
 16070  05AF  00A9               	movwf	___flmul@b+3
 16071  05B0  3031               	movlw	49
 16072  05B1  00A8               	movwf	___flmul@b+2
 16073  05B2  3071               	movlw	113
 16074  05B3  00A7               	movwf	___flmul@b+1
 16075  05B4  3080               	movlw	128
 16076  05B5  00A6               	movwf	___flmul@b
 16077  05B6  0022               	movlb	2	; select bank2
 16078  05B7  0845               	movf	(logf@dk+3)^(0+256),w
 16079  05B8  0020               	movlb	0	; select bank0
 16080  05B9  00AD               	movwf	___flmul@a+3
 16081  05BA  0022               	movlb	2	; select bank2
 16082  05BB  0844               	movf	(logf@dk+2)^(0+256),w
 16083  05BC  0020               	movlb	0	; select bank0
 16084  05BD  00AC               	movwf	___flmul@a+2
 16085  05BE  0022               	movlb	2	; select bank2
 16086  05BF  0843               	movf	(logf@dk+1)^(0+256),w
 16087  05C0  0020               	movlb	0	; select bank0
 16088  05C1  00AB               	movwf	___flmul@a+1
 16089  05C2  0022               	movlb	2	; select bank2
 16090  05C3  0842               	movf	logf@dk^(0+256),w
 16091  05C4  0020               	movlb	0	; select bank0
 16092  05C5  00AA               	movwf	___flmul@a
 16093  05C6  3190  2023  3180   	fcall	___flmul
 16094  05C9  0020               	movlb	0	; select bank0
 16095  05CA  0829               	movf	?___flmul+3,w
 16096  05CB  00DD               	movwf	___fladd@b+3
 16097  05CC  0828               	movf	?___flmul+2,w
 16098  05CD  00DC               	movwf	___fladd@b+2
 16099  05CE  0827               	movf	?___flmul+1,w
 16100  05CF  00DB               	movwf	___fladd@b+1
 16101  05D0  0826               	movf	?___flmul,w
 16102  05D1  00DA               	movwf	___fladd@b
 16103  05D2  0022               	movlb	2	; select bank2
 16104  05D3  083B               	movf	(_logf$2044+3)^(0+256),w
 16105  05D4  0020               	movlb	0	; select bank0
 16106  05D5  00E1               	movwf	___fladd@a+3
 16107  05D6  0022               	movlb	2	; select bank2
 16108  05D7  083A               	movf	(_logf$2044+2)^(0+256),w
 16109  05D8  0020               	movlb	0	; select bank0
 16110  05D9  00E0               	movwf	___fladd@a+2
 16111  05DA  0022               	movlb	2	; select bank2
 16112  05DB  0839               	movf	(_logf$2044+1)^(0+256),w
 16113  05DC  0020               	movlb	0	; select bank0
 16114  05DD  00DF               	movwf	___fladd@a+1
 16115  05DE  0022               	movlb	2	; select bank2
 16116  05DF  0838               	movf	_logf$2044^(0+256),w
 16117  05E0  0020               	movlb	0	; select bank0
 16118  05E1  00DE               	movwf	___fladd@a
 16119  05E2  3185  25F5         	fcall	___fladd
 16120  05E4  0020               	movlb	0	; select bank0
 16121  05E5  085D               	movf	?___fladd+3,w
 16122  05E6  0021               	movlb	1	; select bank1
 16123  05E7  00AB               	movwf	(?_logf+3)^(0+128)
 16124  05E8  0020               	movlb	0	; select bank0
 16125  05E9  085C               	movf	?___fladd+2,w
 16126  05EA  0021               	movlb	1	; select bank1
 16127  05EB  00AA               	movwf	(?_logf+2)^(0+128)
 16128  05EC  0020               	movlb	0	; select bank0
 16129  05ED  085B               	movf	?___fladd+1,w
 16130  05EE  0021               	movlb	1	; select bank1
 16131  05EF  00A9               	movwf	(?_logf+1)^(0+128)
 16132  05F0  0020               	movlb	0	; select bank0
 16133  05F1  085A               	movf	?___fladd,w
 16134  05F2  0021               	movlb	1	; select bank1
 16135  05F3  00A8               	movwf	?_logf^(0+128)
 16136  05F4  0008               	return
 16137  05F5                     __end_of_logf:	
 16138                           
 16139                           	psect	text51
 16140  36C9                     __ptext51:	
 16141 ;; *************** function ___flsub *****************
 16142 ;; Defined at:
 16143 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16144 ;; Parameters:    Size  Location     Type
 16145 ;;  a               4    0[BANK1 ] float 
 16146 ;;  b               4    4[BANK1 ] float 
 16147 ;; Auto vars:     Size  Location     Type
 16148 ;;		None
 16149 ;; Return value:  Size  Location     Type
 16150 ;;                  4    0[BANK1 ] float 
 16151 ;; Registers used:
 16152 ;;		wreg, status,2, status,0, pclath, cstack
 16153 ;; Tracked objects:
 16154 ;;		On entry : 0/0
 16155 ;;		On exit  : 0/0
 16156 ;;		Unchanged: 0/0
 16157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16158 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16161 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16162 ;;Total ram usage:        8 bytes
 16163 ;; Hardware stack levels used:    1
 16164 ;; Hardware stack levels required when called:    2
 16165 ;; This function calls:
 16166 ;;		___fladd
 16167 ;; This function is called by:
 16168 ;;		_updateTemperatures
 16169 ;;		_logf
 16170 ;; This function uses a non-reentrant model
 16171 ;;
 16172                           
 16173                           
 16174                           ;psect for function ___flsub
 16175  36C9                     ___flsub:	
 16176                           
 16177                           ;incstack = 0
 16178                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 16179  36C9  3080               	movlw	128
 16180  36CA  0021               	movlb	1	; select bank1
 16181  36CB  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 16182  36CC  0827               	movf	(___flsub@b+3)^(0+128),w
 16183  36CD  0020               	movlb	0	; select bank0
 16184  36CE  00DD               	movwf	___fladd@b+3
 16185  36CF  0021               	movlb	1	; select bank1
 16186  36D0  0826               	movf	(___flsub@b+2)^(0+128),w
 16187  36D1  0020               	movlb	0	; select bank0
 16188  36D2  00DC               	movwf	___fladd@b+2
 16189  36D3  0021               	movlb	1	; select bank1
 16190  36D4  0825               	movf	(___flsub@b+1)^(0+128),w
 16191  36D5  0020               	movlb	0	; select bank0
 16192  36D6  00DB               	movwf	___fladd@b+1
 16193  36D7  0021               	movlb	1	; select bank1
 16194  36D8  0824               	movf	___flsub@b^(0+128),w
 16195  36D9  0020               	movlb	0	; select bank0
 16196  36DA  00DA               	movwf	___fladd@b
 16197  36DB  0021               	movlb	1	; select bank1
 16198  36DC  0823               	movf	(___flsub@a+3)^(0+128),w
 16199  36DD  0020               	movlb	0	; select bank0
 16200  36DE  00E1               	movwf	___fladd@a+3
 16201  36DF  0021               	movlb	1	; select bank1
 16202  36E0  0822               	movf	(___flsub@a+2)^(0+128),w
 16203  36E1  0020               	movlb	0	; select bank0
 16204  36E2  00E0               	movwf	___fladd@a+2
 16205  36E3  0021               	movlb	1	; select bank1
 16206  36E4  0821               	movf	(___flsub@a+1)^(0+128),w
 16207  36E5  0020               	movlb	0	; select bank0
 16208  36E6  00DF               	movwf	___fladd@a+1
 16209  36E7  0021               	movlb	1	; select bank1
 16210  36E8  0820               	movf	___flsub@a^(0+128),w
 16211  36E9  0020               	movlb	0	; select bank0
 16212  36EA  00DE               	movwf	___fladd@a
 16213  36EB  3185  25F5         	fcall	___fladd
 16214  36ED  0020               	movlb	0	; select bank0
 16215  36EE  085D               	movf	?___fladd+3,w
 16216  36EF  0021               	movlb	1	; select bank1
 16217  36F0  00A3               	movwf	(?___flsub+3)^(0+128)
 16218  36F1  0020               	movlb	0	; select bank0
 16219  36F2  085C               	movf	?___fladd+2,w
 16220  36F3  0021               	movlb	1	; select bank1
 16221  36F4  00A2               	movwf	(?___flsub+2)^(0+128)
 16222  36F5  0020               	movlb	0	; select bank0
 16223  36F6  085B               	movf	?___fladd+1,w
 16224  36F7  0021               	movlb	1	; select bank1
 16225  36F8  00A1               	movwf	(?___flsub+1)^(0+128)
 16226  36F9  0020               	movlb	0	; select bank0
 16227  36FA  085A               	movf	?___fladd,w
 16228  36FB  0021               	movlb	1	; select bank1
 16229  36FC  00A0               	movwf	?___flsub^(0+128)
 16230  36FD  0008               	return
 16231  36FE                     __end_of___flsub:	
 16232                           
 16233                           	psect	text52
 16234  05F5                     __ptext52:	
 16235 ;; *************** function ___fladd *****************
 16236 ;; Defined at:
 16237 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16238 ;; Parameters:    Size  Location     Type
 16239 ;;  b               4   58[BANK0 ] float 
 16240 ;;  a               4   62[BANK0 ] float 
 16241 ;; Auto vars:     Size  Location     Type
 16242 ;;  grs             1   77[BANK0 ] unsigned char 
 16243 ;;  bexp            1   76[BANK0 ] unsigned char 
 16244 ;;  aexp            1   75[BANK0 ] unsigned char 
 16245 ;;  signs           1   74[BANK0 ] unsigned char 
 16246 ;; Return value:  Size  Location     Type
 16247 ;;                  4   58[BANK0 ] unsigned char 
 16248 ;; Registers used:
 16249 ;;		wreg, status,2, status,0
 16250 ;; Tracked objects:
 16251 ;;		On entry : 0/0
 16252 ;;		On exit  : 0/0
 16253 ;;		Unchanged: 0/0
 16254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16255 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16256 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16257 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16258 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16259 ;;Total ram usage:       20 bytes
 16260 ;; Hardware stack levels used:    1
 16261 ;; Hardware stack levels required when called:    1
 16262 ;; This function calls:
 16263 ;;		Nothing
 16264 ;; This function is called by:
 16265 ;;		_updateVoltages
 16266 ;;		_updateTemperatures
 16267 ;;		___flsub
 16268 ;;		_logf
 16269 ;; This function uses a non-reentrant model
 16270 ;;
 16271                           
 16272                           
 16273                           ;psect for function ___fladd
 16274  05F5                     ___fladd:	
 16275                           
 16276                           ;incstack = 0
 16277                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 16278  05F5  0020               	movlb	0	; select bank0
 16279  05F6  085D               	movf	___fladd@b+3,w
 16280  05F7  3980               	andlw	128
 16281  05F8  00E2               	movwf	??___fladd
 16282  05F9  0862               	movf	??___fladd,w
 16283  05FA  00EA               	movwf	___fladd@signs
 16284  05FB  355D               	lslf	___fladd@b+3,w
 16285  05FC  00E2               	movwf	??___fladd
 16286  05FD  0862               	movf	??___fladd,w
 16287  05FE  00EC               	movwf	___fladd@bexp
 16288  05FF  1BDC               	btfsc	___fladd@b+2,7
 16289  0600  146C               	bsf	___fladd@bexp,0
 16290  0601  086C               	movf	___fladd@bexp,w
 16291  0602  1903               	btfsc	3,2
 16292  0603  2E12               	goto	l7184
 16293  0604  0A6C               	incf	___fladd@bexp,w
 16294  0605  1D03               	btfss	3,2
 16295  0606  2E0F               	goto	l7180
 16296  0607  3000               	movlw	0
 16297  0608  00DD               	movwf	___fladd@b+3
 16298  0609  3000               	movlw	0
 16299  060A  00DC               	movwf	___fladd@b+2
 16300  060B  3000               	movlw	0
 16301  060C  00DB               	movwf	___fladd@b+1
 16302  060D  3000               	movlw	0
 16303  060E  00DA               	movwf	___fladd@b
 16304  060F                     l7180:	
 16305  060F  17DC               	bsf	___fladd@b+2,7
 16306  0610  01DD               	clrf	___fladd@b+3
 16307  0611  2E1A               	goto	l7186
 16308  0612                     l7184:	
 16309  0612  3000               	movlw	0
 16310  0613  00DD               	movwf	___fladd@b+3
 16311  0614  3000               	movlw	0
 16312  0615  00DC               	movwf	___fladd@b+2
 16313  0616  3000               	movlw	0
 16314  0617  00DB               	movwf	___fladd@b+1
 16315  0618  3000               	movlw	0
 16316  0619  00DA               	movwf	___fladd@b
 16317  061A                     l7186:	
 16318  061A  0861               	movf	___fladd@a+3,w
 16319  061B  3980               	andlw	128
 16320  061C  00E2               	movwf	??___fladd
 16321  061D  0862               	movf	??___fladd,w
 16322  061E  00EB               	movwf	___fladd@aexp
 16323  061F  086B               	movf	___fladd@aexp,w
 16324  0620  066A               	xorwf	___fladd@signs,w
 16325  0621  1D03               	btfss	3,2
 16326  0622  176A               	bsf	___fladd@signs,6
 16327  0623  3561               	lslf	___fladd@a+3,w
 16328  0624  00E2               	movwf	??___fladd
 16329  0625  0862               	movf	??___fladd,w
 16330  0626  00EB               	movwf	___fladd@aexp
 16331  0627  1BE0               	btfsc	___fladd@a+2,7
 16332  0628  146B               	bsf	___fladd@aexp,0
 16333  0629  086B               	movf	___fladd@aexp,w
 16334  062A  1903               	btfsc	3,2
 16335  062B  2E3A               	goto	l7208
 16336  062C  0A6B               	incf	___fladd@aexp,w
 16337  062D  1D03               	btfss	3,2
 16338  062E  2E37               	goto	l7204
 16339  062F  3000               	movlw	0
 16340  0630  00E1               	movwf	___fladd@a+3
 16341  0631  3000               	movlw	0
 16342  0632  00E0               	movwf	___fladd@a+2
 16343  0633  3000               	movlw	0
 16344  0634  00DF               	movwf	___fladd@a+1
 16345  0635  3000               	movlw	0
 16346  0636  00DE               	movwf	___fladd@a
 16347  0637                     l7204:	
 16348  0637  17E0               	bsf	___fladd@a+2,7
 16349  0638  01E1               	clrf	___fladd@a+3
 16350  0639  2E42               	goto	l1148
 16351  063A                     l7208:	
 16352  063A  3000               	movlw	0
 16353  063B  00E1               	movwf	___fladd@a+3
 16354  063C  3000               	movlw	0
 16355  063D  00E0               	movwf	___fladd@a+2
 16356  063E  3000               	movlw	0
 16357  063F  00DF               	movwf	___fladd@a+1
 16358  0640  3000               	movlw	0
 16359  0641  00DE               	movwf	___fladd@a
 16360  0642                     l1148:	
 16361  0642  086C               	movf	___fladd@bexp,w
 16362  0643  026B               	subwf	___fladd@aexp,w
 16363  0644  1803               	skipnc
 16364  0645  2E88               	goto	l7244
 16365  0646  1F6A               	btfss	___fladd@signs,6
 16366  0647  2E4C               	goto	l7214
 16367  0648  3080               	movlw	128
 16368  0649  00E2               	movwf	??___fladd
 16369  064A  0862               	movf	??___fladd,w
 16370  064B  06EA               	xorwf	___fladd@signs,f
 16371  064C                     l7214:	
 16372  064C  086C               	movf	___fladd@bexp,w
 16373  064D  00E2               	movwf	??___fladd
 16374  064E  0862               	movf	??___fladd,w
 16375  064F  00ED               	movwf	___fladd@grs
 16376  0650  086B               	movf	___fladd@aexp,w
 16377  0651  00E2               	movwf	??___fladd
 16378  0652  0862               	movf	??___fladd,w
 16379  0653  00EC               	movwf	___fladd@bexp
 16380  0654  086D               	movf	___fladd@grs,w
 16381  0655  00E2               	movwf	??___fladd
 16382  0656  0862               	movf	??___fladd,w
 16383  0657  00EB               	movwf	___fladd@aexp
 16384  0658  085A               	movf	___fladd@b,w
 16385  0659  00E2               	movwf	??___fladd
 16386  065A  0862               	movf	??___fladd,w
 16387  065B  00ED               	movwf	___fladd@grs
 16388  065C  085E               	movf	___fladd@a,w
 16389  065D  00E2               	movwf	??___fladd
 16390  065E  0862               	movf	??___fladd,w
 16391  065F  00DA               	movwf	___fladd@b
 16392  0660  086D               	movf	___fladd@grs,w
 16393  0661  00E2               	movwf	??___fladd
 16394  0662  0862               	movf	??___fladd,w
 16395  0663  00DE               	movwf	___fladd@a
 16396  0664  085B               	movf	___fladd@b+1,w
 16397  0665  00E2               	movwf	??___fladd
 16398  0666  0862               	movf	??___fladd,w
 16399  0667  00ED               	movwf	___fladd@grs
 16400  0668  085F               	movf	___fladd@a+1,w
 16401  0669  00E2               	movwf	??___fladd
 16402  066A  0862               	movf	??___fladd,w
 16403  066B  00DB               	movwf	___fladd@b+1
 16404  066C  086D               	movf	___fladd@grs,w
 16405  066D  00E2               	movwf	??___fladd
 16406  066E  0862               	movf	??___fladd,w
 16407  066F  00DF               	movwf	___fladd@a+1
 16408  0670  085C               	movf	___fladd@b+2,w
 16409  0671  00E2               	movwf	??___fladd
 16410  0672  0862               	movf	??___fladd,w
 16411  0673  00ED               	movwf	___fladd@grs
 16412  0674  0860               	movf	___fladd@a+2,w
 16413  0675  00E2               	movwf	??___fladd
 16414  0676  0862               	movf	??___fladd,w
 16415  0677  00DC               	movwf	___fladd@b+2
 16416  0678  086D               	movf	___fladd@grs,w
 16417  0679  00E2               	movwf	??___fladd
 16418  067A  0862               	movf	??___fladd,w
 16419  067B  00E0               	movwf	___fladd@a+2
 16420  067C  085D               	movf	___fladd@b+3,w
 16421  067D  00E2               	movwf	??___fladd
 16422  067E  0862               	movf	??___fladd,w
 16423  067F  00ED               	movwf	___fladd@grs
 16424  0680  0861               	movf	___fladd@a+3,w
 16425  0681  00E2               	movwf	??___fladd
 16426  0682  0862               	movf	??___fladd,w
 16427  0683  00DD               	movwf	___fladd@b+3
 16428  0684  086D               	movf	___fladd@grs,w
 16429  0685  00E2               	movwf	??___fladd
 16430  0686  0862               	movf	??___fladd,w
 16431  0687  00E1               	movwf	___fladd@a+3
 16432  0688                     l7244:	
 16433  0688  01ED               	clrf	___fladd@grs
 16434  0689  086B               	movf	___fladd@aexp,w
 16435  068A  00E2               	movwf	??___fladd
 16436  068B  01E3               	clrf	??___fladd+1
 16437  068C  0863               	movf	??___fladd+1,w
 16438  068D  00E5               	movwf	??___fladd+3
 16439  068E  086C               	movf	___fladd@bexp,w
 16440  068F  0262               	subwf	??___fladd,w
 16441  0690  00E4               	movwf	??___fladd+2
 16442  0691  1C03               	skipc
 16443  0692  03E5               	decf	??___fladd+3,f
 16444  0693  0865               	movf	??___fladd+3,w
 16445  0694  3A80               	xorlw	128
 16446  0695  00E6               	movwf	??___fladd+4
 16447  0696  3080               	movlw	128
 16448  0697  0266               	subwf	??___fladd+4,w
 16449  0698  1D03               	skipz
 16450  0699  2E9C               	goto	u9545
 16451  069A  301A               	movlw	26
 16452  069B  0264               	subwf	??___fladd+2,w
 16453  069C                     u9545:	
 16454  069C  1C03               	skipc
 16455  069D  2ED0               	goto	l7262
 16456  069E  0020               	movlb	0	; select bank0
 16457  069F  085D               	movf	___fladd@b+3,w
 16458  06A0  045C               	iorwf	___fladd@b+2,w
 16459  06A1  045B               	iorwf	___fladd@b+1,w
 16460  06A2  045A               	iorwf	___fladd@b,w
 16461  06A3  1903               	btfsc	3,2
 16462  06A4  2EA7               	goto	u9550
 16463  06A5  3001               	movlw	1
 16464  06A6  2EA8               	goto	u9560
 16465  06A7                     u9550:	
 16466  06A7  3000               	movlw	0
 16467  06A8                     u9560:	
 16468  06A8  00E2               	movwf	??___fladd
 16469  06A9  0862               	movf	??___fladd,w
 16470  06AA  00ED               	movwf	___fladd@grs
 16471  06AB  3000               	movlw	0
 16472  06AC  00DD               	movwf	___fladd@b+3
 16473  06AD  3000               	movlw	0
 16474  06AE  00DC               	movwf	___fladd@b+2
 16475  06AF  3000               	movlw	0
 16476  06B0  00DB               	movwf	___fladd@b+1
 16477  06B1  3000               	movlw	0
 16478  06B2  00DA               	movwf	___fladd@b
 16479  06B3  086B               	movf	___fladd@aexp,w
 16480  06B4  00E2               	movwf	??___fladd
 16481  06B5  0862               	movf	??___fladd,w
 16482  06B6  00EC               	movwf	___fladd@bexp
 16483  06B7  2ED5               	goto	l1152
 16484  06B8                     l1154:	
 16485  06B8  1C6D               	btfss	___fladd@grs,0
 16486  06B9  2EC0               	goto	l7252
 16487  06BA  366D               	lsrf	___fladd@grs,w
 16488  06BB  3801               	iorlw	1
 16489  06BC  00E2               	movwf	??___fladd
 16490  06BD  0862               	movf	??___fladd,w
 16491  06BE  00ED               	movwf	___fladd@grs
 16492  06BF  2EC2               	goto	l7254
 16493  06C0                     l7252:	
 16494  06C0  1003               	clrc
 16495  06C1  0CED               	rrf	___fladd@grs,f
 16496  06C2                     l7254:	
 16497  06C2  185A               	btfsc	___fladd@b,0
 16498  06C3  17ED               	bsf	___fladd@grs,7
 16499  06C4  3001               	movlw	1
 16500  06C5  00E2               	movwf	??___fladd
 16501  06C6                     u9595:	
 16502  06C6  37DD               	asrf	___fladd@b+3,f
 16503  06C7  0CDC               	rrf	___fladd@b+2,f
 16504  06C8  0CDB               	rrf	___fladd@b+1,f
 16505  06C9  0CDA               	rrf	___fladd@b,f
 16506  06CA  0BE2               	decfsz	??___fladd& (0+127),f
 16507  06CB  2EC6               	goto	u9595
 16508  06CC  3001               	movlw	1
 16509  06CD  00E2               	movwf	??___fladd
 16510  06CE  0862               	movf	??___fladd,w
 16511  06CF  07EC               	addwf	___fladd@bexp,f
 16512  06D0                     l7262:	
 16513  06D0  0020               	movlb	0	; select bank0
 16514  06D1  086B               	movf	___fladd@aexp,w
 16515  06D2  026C               	subwf	___fladd@bexp,w
 16516  06D3  1C03               	skipc
 16517  06D4  2EB8               	goto	l1154
 16518  06D5                     l1152:	
 16519  06D5  1B6A               	btfsc	___fladd@signs,6
 16520  06D6  2F06               	goto	l7288
 16521  06D7  086C               	movf	___fladd@bexp,w
 16522  06D8  1D03               	btfss	3,2
 16523  06D9  2EE3               	goto	l7270
 16524  06DA  3000               	movlw	0
 16525  06DB  00DD               	movwf	?___fladd+3
 16526  06DC  3000               	movlw	0
 16527  06DD  00DC               	movwf	?___fladd+2
 16528  06DE  3000               	movlw	0
 16529  06DF  00DB               	movwf	?___fladd+1
 16530  06E0  3000               	movlw	0
 16531  06E1  00DA               	movwf	?___fladd
 16532  06E2  0008               	return
 16533  06E3                     l7270:	
 16534  06E3  085E               	movf	___fladd@a,w
 16535  06E4  07DA               	addwf	___fladd@b,f
 16536  06E5  085F               	movf	___fladd@a+1,w
 16537  06E6  3DDB               	addwfc	___fladd@b+1,f
 16538  06E7  0860               	movf	___fladd@a+2,w
 16539  06E8  3DDC               	addwfc	___fladd@b+2,f
 16540  06E9  0861               	movf	___fladd@a+3,w
 16541  06EA  3DDD               	addwfc	___fladd@b+3,f
 16542  06EB  1C5D               	btfss	___fladd@b+3,0
 16543  06EC  2F80               	goto	l7322
 16544  06ED  1C6D               	btfss	___fladd@grs,0
 16545  06EE  2EF5               	goto	l7278
 16546  06EF  366D               	lsrf	___fladd@grs,w
 16547  06F0  3801               	iorlw	1
 16548  06F1  00E2               	movwf	??___fladd
 16549  06F2  0862               	movf	??___fladd,w
 16550  06F3  00ED               	movwf	___fladd@grs
 16551  06F4  2EF7               	goto	l7280
 16552  06F5                     l7278:	
 16553  06F5  1003               	clrc
 16554  06F6  0CED               	rrf	___fladd@grs,f
 16555  06F7                     l7280:	
 16556  06F7  185A               	btfsc	___fladd@b,0
 16557  06F8  17ED               	bsf	___fladd@grs,7
 16558  06F9  3001               	movlw	1
 16559  06FA  00E2               	movwf	??___fladd
 16560  06FB                     u9665:	
 16561  06FB  37DD               	asrf	___fladd@b+3,f
 16562  06FC  0CDC               	rrf	___fladd@b+2,f
 16563  06FD  0CDB               	rrf	___fladd@b+1,f
 16564  06FE  0CDA               	rrf	___fladd@b,f
 16565  06FF  0BE2               	decfsz	??___fladd& (0+127),f
 16566  0700  2EFB               	goto	u9665
 16567  0701  3001               	movlw	1
 16568  0702  00E2               	movwf	??___fladd
 16569  0703  0862               	movf	??___fladd,w
 16570  0704  07EC               	addwf	___fladd@bexp,f
 16571  0705  2F80               	goto	l7322
 16572  0706                     l7288:	
 16573  0706  085D               	movf	___fladd@b+3,w
 16574  0707  3A80               	xorlw	128
 16575  0708  00E2               	movwf	??___fladd
 16576  0709  0861               	movf	___fladd@a+3,w
 16577  070A  3A80               	xorlw	128
 16578  070B  0262               	subwf	??___fladd,w
 16579  070C  1D03               	skipz
 16580  070D  2F18               	goto	u9673
 16581  070E  0860               	movf	___fladd@a+2,w
 16582  070F  025C               	subwf	___fladd@b+2,w
 16583  0710  1D03               	skipz
 16584  0711  2F18               	goto	u9673
 16585  0712  085F               	movf	___fladd@a+1,w
 16586  0713  025B               	subwf	___fladd@b+1,w
 16587  0714  1D03               	skipz
 16588  0715  2F18               	goto	u9673
 16589  0716  085E               	movf	___fladd@a,w
 16590  0717  025A               	subwf	___fladd@b,w
 16591  0718                     u9673:	
 16592  0718  1803               	skipnc
 16593  0719  2F50               	goto	l7298
 16594  071A  30FF               	movlw	255
 16595  071B  00E2               	movwf	??___fladd
 16596  071C  30FF               	movlw	255
 16597  071D  00E3               	movwf	??___fladd+1
 16598  071E  30FF               	movlw	255
 16599  071F  00E4               	movwf	??___fladd+2
 16600  0720  30FF               	movlw	255
 16601  0721  00E5               	movwf	??___fladd+3
 16602  0722  085A               	movf	___fladd@b,w
 16603  0723  025E               	subwf	___fladd@a,w
 16604  0724  00E6               	movwf	??___fladd+4
 16605  0725  085B               	movf	___fladd@b+1,w
 16606  0726  3B5F               	subwfb	___fladd@a+1,w
 16607  0727  00E7               	movwf	??___fladd+5
 16608  0728  085C               	movf	___fladd@b+2,w
 16609  0729  3B60               	subwfb	___fladd@a+2,w
 16610  072A  00E8               	movwf	??___fladd+6
 16611  072B  085D               	movf	___fladd@b+3,w
 16612  072C  3B61               	subwfb	___fladd@a+3,w
 16613  072D  00E9               	movwf	??___fladd+7
 16614  072E  0866               	movf	??___fladd+4,w
 16615  072F  07E2               	addwf	??___fladd,f
 16616  0730  0867               	movf	??___fladd+5,w
 16617  0731  3DE3               	addwfc	??___fladd+1,f
 16618  0732  0868               	movf	??___fladd+6,w
 16619  0733  3DE4               	addwfc	??___fladd+2,f
 16620  0734  0869               	movf	??___fladd+7,w
 16621  0735  3DE5               	addwfc	??___fladd+3,f
 16622  0736  0865               	movf	??___fladd+3,w
 16623  0737  00DD               	movwf	___fladd@b+3
 16624  0738  0864               	movf	??___fladd+2,w
 16625  0739  00DC               	movwf	___fladd@b+2
 16626  073A  0863               	movf	??___fladd+1,w
 16627  073B  00DB               	movwf	___fladd@b+1
 16628  073C  0862               	movf	??___fladd,w
 16629  073D  00DA               	movwf	___fladd@b
 16630  073E  3080               	movlw	128
 16631  073F  00E2               	movwf	??___fladd
 16632  0740  0862               	movf	??___fladd,w
 16633  0741  06EA               	xorwf	___fladd@signs,f
 16634  0742  09ED               	comf	___fladd@grs,f
 16635  0743  0AED               	incf	___fladd@grs,f
 16636  0744  086D               	movf	___fladd@grs,w
 16637  0745  1D03               	btfss	3,2
 16638  0746  2F58               	goto	l1169
 16639  0747  3001               	movlw	1
 16640  0748  07DA               	addwf	___fladd@b,f
 16641  0749  3000               	movlw	0
 16642  074A  3DDB               	addwfc	___fladd@b+1,f
 16643  074B  3000               	movlw	0
 16644  074C  3DDC               	addwfc	___fladd@b+2,f
 16645  074D  3000               	movlw	0
 16646  074E  3DDD               	addwfc	___fladd@b+3,f
 16647  074F  2F58               	goto	l1169
 16648  0750                     l7298:	
 16649  0750  085E               	movf	___fladd@a,w
 16650  0751  02DA               	subwf	___fladd@b,f
 16651  0752  085F               	movf	___fladd@a+1,w
 16652  0753  3BDB               	subwfb	___fladd@b+1,f
 16653  0754  0860               	movf	___fladd@a+2,w
 16654  0755  3BDC               	subwfb	___fladd@b+2,f
 16655  0756  0861               	movf	___fladd@a+3,w
 16656  0757  3BDD               	subwfb	___fladd@b+3,f
 16657  0758                     l1169:	
 16658  0758  085D               	movf	___fladd@b+3,w
 16659  0759  045C               	iorwf	___fladd@b+2,w
 16660  075A  045B               	iorwf	___fladd@b+1,w
 16661  075B  045A               	iorwf	___fladd@b,w
 16662  075C  1D03               	skipz
 16663  075D  2F7E               	goto	l7320
 16664  075E  086D               	movf	___fladd@grs,w
 16665  075F  1D03               	btfss	3,2
 16666  0760  2F7E               	goto	l7320
 16667  0761  3000               	movlw	0
 16668  0762  00DD               	movwf	?___fladd+3
 16669  0763  3000               	movlw	0
 16670  0764  00DC               	movwf	?___fladd+2
 16671  0765  3000               	movlw	0
 16672  0766  00DB               	movwf	?___fladd+1
 16673  0767  3000               	movlw	0
 16674  0768  00DA               	movwf	?___fladd
 16675  0769  0008               	return
 16676  076A                     l7306:	
 16677  076A  3001               	movlw	1
 16678  076B                     u9715:	
 16679  076B  35DA               	lslf	___fladd@b,f
 16680  076C  0DDB               	rlf	___fladd@b+1,f
 16681  076D  0DDC               	rlf	___fladd@b+2,f
 16682  076E  0DDD               	rlf	___fladd@b+3,f
 16683  076F  0B89               	decfsz	9,f
 16684  0770  2F6B               	goto	u9715
 16685  0771  1BED               	btfsc	___fladd@grs,7
 16686  0772  145A               	bsf	___fladd@b,0
 16687  0773  1C6D               	btfss	___fladd@grs,0
 16688  0774  2F77               	goto	l7314
 16689  0775  1403               	setc
 16690  0776  2F78               	goto	L4
 16691  0777                     l7314:	
 16692  0777  1003               	clrc
 16693  0778                     L4:	
 16694  0778  0DED               	rlf	___fladd@grs,f
 16695  0779  086C               	movf	___fladd@bexp,w
 16696  077A  1903               	btfsc	3,2
 16697  077B  2F7E               	goto	l7320
 16698  077C  3001               	movlw	1
 16699  077D  02EC               	subwf	___fladd@bexp,f
 16700  077E                     l7320:	
 16701  077E  1FDC               	btfss	___fladd@b+2,7
 16702  077F  2F6A               	goto	l7306
 16703  0780                     l7322:	
 16704  0780  01EB               	clrf	___fladd@aexp
 16705  0781  1FED               	btfss	___fladd@grs,7
 16706  0782  2F8B               	goto	l7332
 16707  0783  086D               	movf	___fladd@grs,w
 16708  0784  397F               	andlw	127
 16709  0785  1903               	btfsc	3,2
 16710  0786  185A               	btfsc	___fladd@b,0
 16711  0787  2F89               	goto	l7328
 16712  0788  2F8B               	goto	l7332
 16713  0789                     l7328:	
 16714  0789  01EB               	clrf	___fladd@aexp
 16715  078A  0AEB               	incf	___fladd@aexp,f
 16716  078B                     l7332:	
 16717  078B  086B               	movf	___fladd@aexp,w
 16718  078C  1903               	btfsc	3,2
 16719  078D  2FB7               	goto	l1182
 16720  078E  3001               	movlw	1
 16721  078F  07DA               	addwf	___fladd@b,f
 16722  0790  3000               	movlw	0
 16723  0791  3DDB               	addwfc	___fladd@b+1,f
 16724  0792  3000               	movlw	0
 16725  0793  3DDC               	addwfc	___fladd@b+2,f
 16726  0794  3000               	movlw	0
 16727  0795  3DDD               	addwfc	___fladd@b+3,f
 16728  0796  1C5D               	btfss	___fladd@b+3,0
 16729  0797  2FB7               	goto	l1182
 16730  0798  085A               	movf	___fladd@b,w
 16731  0799  00E2               	movwf	??___fladd
 16732  079A  085B               	movf	___fladd@b+1,w
 16733  079B  00E3               	movwf	??___fladd+1
 16734  079C  085C               	movf	___fladd@b+2,w
 16735  079D  00E4               	movwf	??___fladd+2
 16736  079E  085D               	movf	___fladd@b+3,w
 16737  079F  00E5               	movwf	??___fladd+3
 16738  07A0  3001               	movlw	1
 16739  07A1  00E6               	movwf	??___fladd+4
 16740  07A2                     u9815:	
 16741  07A2  37E5               	asrf	??___fladd+3,f
 16742  07A3  0CE4               	rrf	??___fladd+2,f
 16743  07A4  0CE3               	rrf	??___fladd+1,f
 16744  07A5  0CE2               	rrf	??___fladd,f
 16745  07A6  0BE6               	decfsz	??___fladd+4,f
 16746  07A7  2FA2               	goto	u9815
 16747  07A8  0865               	movf	??___fladd+3,w
 16748  07A9  00DD               	movwf	___fladd@b+3
 16749  07AA  0864               	movf	??___fladd+2,w
 16750  07AB  00DC               	movwf	___fladd@b+2
 16751  07AC  0863               	movf	??___fladd+1,w
 16752  07AD  00DB               	movwf	___fladd@b+1
 16753  07AE  0862               	movf	??___fladd,w
 16754  07AF  00DA               	movwf	___fladd@b
 16755  07B0  0A6C               	incf	___fladd@bexp,w
 16756  07B1  1903               	btfsc	3,2
 16757  07B2  2FB7               	goto	l1182
 16758  07B3  3001               	movlw	1
 16759  07B4  00E2               	movwf	??___fladd
 16760  07B5  0862               	movf	??___fladd,w
 16761  07B6  07EC               	addwf	___fladd@bexp,f
 16762  07B7                     l1182:	
 16763  07B7  0A6C               	incf	___fladd@bexp,w
 16764  07B8  1D03               	btfss	3,2
 16765  07B9  086C               	movf	___fladd@bexp,w
 16766  07BA  1D03               	btfss	3,2
 16767  07BB  2FC7               	goto	l7350
 16768  07BC  3000               	movlw	0
 16769  07BD  00DD               	movwf	___fladd@b+3
 16770  07BE  3000               	movlw	0
 16771  07BF  00DC               	movwf	___fladd@b+2
 16772  07C0  3000               	movlw	0
 16773  07C1  00DB               	movwf	___fladd@b+1
 16774  07C2  3000               	movlw	0
 16775  07C3  00DA               	movwf	___fladd@b
 16776  07C4  086C               	movf	___fladd@bexp,w
 16777  07C5  1903               	btfsc	3,2
 16778  07C6  01EA               	clrf	___fladd@signs
 16779  07C7                     l7350:	
 16780  07C7  1C6C               	btfss	___fladd@bexp,0
 16781  07C8  2FCB               	goto	l7354
 16782  07C9  17DC               	bsf	___fladd@b+2,7
 16783  07CA  2FCF               	goto	l1190
 16784  07CB                     l7354:	
 16785  07CB  307F               	movlw	127
 16786  07CC  00E2               	movwf	??___fladd
 16787  07CD  0862               	movf	??___fladd,w
 16788  07CE  05DC               	andwf	___fladd@b+2,f
 16789  07CF                     l1190:	
 16790  07CF  366C               	lsrf	___fladd@bexp,w
 16791  07D0  00E2               	movwf	??___fladd
 16792  07D1  0862               	movf	??___fladd,w
 16793  07D2  00DD               	movwf	___fladd@b+3
 16794  07D3  1FEA               	btfss	___fladd@signs,7
 16795  07D4  0008               	return
 16796  07D5  17DD               	bsf	___fladd@b+3,7
 16797  07D6  0008               	return
 16798  07D7                     __end_of___fladd:	
 16799                           
 16800                           	psect	text53
 16801  2E77                     __ptext53:	
 16802 ;; *************** function _updateCurrent *****************
 16803 ;; Defined at:
 16804 ;;		line 180 in file "BQ76920.c"
 16805 ;; Parameters:    Size  Location     Type
 16806 ;;		None
 16807 ;; Auto vars:     Size  Location     Type
 16808 ;;  adcVal          2   21[BANK1 ] int 
 16809 ;;  sys_stat        1    0        struct regSYS_STAT
 16810 ;; Return value:  Size  Location     Type
 16811 ;;                  1    wreg      void 
 16812 ;; Registers used:
 16813 ;;		wreg, status,2, status,0, pclath, cstack
 16814 ;; Tracked objects:
 16815 ;;		On entry : 0/0
 16816 ;;		On exit  : 0/0
 16817 ;;		Unchanged: 0/0
 16818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16820 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16821 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16822 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16823 ;;Total ram usage:        6 bytes
 16824 ;; Hardware stack levels used:    1
 16825 ;; Hardware stack levels required when called:    3
 16826 ;; This function calls:
 16827 ;;		_I2C_writeRegister
 16828 ;;		___fldiv
 16829 ;;		___flmul
 16830 ;;		___flneg
 16831 ;;		___fltol
 16832 ;;		___xxtofl
 16833 ;;		_readRegister
 16834 ;; This function is called by:
 16835 ;;		_AFE_UPDATE
 16836 ;; This function uses a non-reentrant model
 16837 ;;
 16838                           
 16839                           
 16840                           ;psect for function _updateCurrent
 16841  2E77                     _updateCurrent:	
 16842                           
 16843                           ;incstack = 0
 16844                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16845  2E77  3018               	movlw	24
 16846  2E78  00F5               	movwf	readRegister@slaveAddress
 16847  2E79  3000               	movlw	0
 16848  2E7A  00F6               	movwf	readRegister@slaveAddress+1
 16849  2E7B  3000               	movlw	0
 16850  2E7C  00F7               	movwf	readRegister@regAddress
 16851  2E7D  00F8               	movwf	readRegister@regAddress+1
 16852  2E7E  31B6  26FE  31AE   	fcall	_readRegister
 16853                           
 16854                           ;BQ76920.c: 187:     adcVal = (readRegister(0x18, 0x32) << 8)| readRegister(0x18, 0x33);
 16855  2E81  3018               	movlw	24
 16856  2E82  00F5               	movwf	readRegister@slaveAddress
 16857  2E83  3000               	movlw	0
 16858  2E84  00F6               	movwf	readRegister@slaveAddress+1
 16859  2E85  3032               	movlw	50
 16860  2E86  00F7               	movwf	readRegister@regAddress
 16861  2E87  3000               	movlw	0
 16862  2E88  00F8               	movwf	readRegister@regAddress+1
 16863  2E89  31B6  26FE  31AE   	fcall	_readRegister
 16864  2E8C  0875               	movf	?_readRegister,w
 16865  2E8D  0021               	movlb	1	; select bank1
 16866  2E8E  00B1               	movwf	??_updateCurrent^(0+128)
 16867  2E8F  0876               	movf	?_readRegister+1,w
 16868  2E90  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16869  2E91  0831               	movf	??_updateCurrent^(0+128),w
 16870  2E92  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16871  2E93  01B1               	clrf	??_updateCurrent^(0+128)
 16872  2E94  3018               	movlw	24
 16873  2E95  00F5               	movwf	readRegister@slaveAddress
 16874  2E96  3000               	movlw	0
 16875  2E97  00F6               	movwf	readRegister@slaveAddress+1
 16876  2E98  3033               	movlw	51
 16877  2E99  00F7               	movwf	readRegister@regAddress
 16878  2E9A  3000               	movlw	0
 16879  2E9B  00F8               	movwf	readRegister@regAddress+1
 16880  2E9C  31B6  26FE  31AE   	fcall	_readRegister
 16881  2E9F  0875               	movf	?_readRegister,w
 16882  2EA0  0021               	movlb	1	; select bank1
 16883  2EA1  0431               	iorwf	??_updateCurrent^(0+128),w
 16884  2EA2  00B5               	movwf	updateCurrent@adcVal^(0+128)
 16885  2EA3  0876               	movf	?_readRegister+1,w
 16886  2EA4  0432               	iorwf	(??_updateCurrent+1)^(0+128),w
 16887  2EA5  00B6               	movwf	(updateCurrent@adcVal+1)^(0+128)
 16888                           
 16889                           ;BQ76920.c: 188:     batCurrent = -(adcVal * 8.44 / 5.0);
 16890  2EA6  0835               	movf	updateCurrent@adcVal^(0+128),w
 16891  2EA7  00F1               	movwf	___xxtofl@val
 16892  2EA8  0836               	movf	(updateCurrent@adcVal+1)^(0+128),w
 16893  2EA9  00F2               	movwf	___xxtofl@val+1
 16894  2EAA  0D89               	rlf	9,f
 16895  2EAB  3B89               	subwfb	9,f
 16896  2EAC  0989               	comf	9,f
 16897  2EAD  00F3               	movwf	___xxtofl@val+2
 16898  2EAE  00F4               	movwf	___xxtofl@val+3
 16899  2EAF  3001               	movlw	1
 16900  2EB0  31A0  2009  31AE   	fcall	___xxtofl
 16901  2EB3  0874               	movf	?___xxtofl+3,w
 16902  2EB4  0020               	movlb	0	; select bank0
 16903  2EB5  00AD               	movwf	___flmul@a+3
 16904  2EB6  0873               	movf	?___xxtofl+2,w
 16905  2EB7  00AC               	movwf	___flmul@a+2
 16906  2EB8  0872               	movf	?___xxtofl+1,w
 16907  2EB9  00AB               	movwf	___flmul@a+1
 16908  2EBA  0871               	movf	?___xxtofl,w
 16909  2EBB  00AA               	movwf	___flmul@a
 16910  2EBC  3041               	movlw	65
 16911  2EBD  00A9               	movwf	___flmul@b+3
 16912  2EBE  3007               	movlw	7
 16913  2EBF  00A8               	movwf	___flmul@b+2
 16914  2EC0  300A               	movlw	10
 16915  2EC1  00A7               	movwf	___flmul@b+1
 16916  2EC2  303D               	movlw	61
 16917  2EC3  00A6               	movwf	___flmul@b
 16918  2EC4  3190  2023  31AE   	fcall	___flmul
 16919  2EC7  0020               	movlb	0	; select bank0
 16920  2EC8  0829               	movf	?___flmul+3,w
 16921  2EC9  00C7               	movwf	___fldiv@b+3
 16922  2ECA  0828               	movf	?___flmul+2,w
 16923  2ECB  00C6               	movwf	___fldiv@b+2
 16924  2ECC  0827               	movf	?___flmul+1,w
 16925  2ECD  00C5               	movwf	___fldiv@b+1
 16926  2ECE  0826               	movf	?___flmul,w
 16927  2ECF  00C4               	movwf	___fldiv@b
 16928  2ED0  3040               	movlw	64
 16929  2ED1  00C3               	movwf	___fldiv@a+3
 16930  2ED2  30A0               	movlw	160
 16931  2ED3  00C2               	movwf	___fldiv@a+2
 16932  2ED4  3000               	movlw	0
 16933  2ED5  00C1               	movwf	___fldiv@a+1
 16934  2ED6  3000               	movlw	0
 16935  2ED7  00C0               	movwf	___fldiv@a
 16936  2ED8  319C  24E2  31AE   	fcall	___fldiv
 16937  2EDB  0020               	movlb	0	; select bank0
 16938  2EDC  0843               	movf	?___fldiv+3,w
 16939  2EDD  00DD               	movwf	___flneg@f1+3
 16940  2EDE  0842               	movf	?___fldiv+2,w
 16941  2EDF  00DC               	movwf	___flneg@f1+2
 16942  2EE0  0841               	movf	?___fldiv+1,w
 16943  2EE1  00DB               	movwf	___flneg@f1+1
 16944  2EE2  0840               	movf	?___fldiv,w
 16945  2EE3  00DA               	movwf	___flneg@f1
 16946  2EE4  31B4  2408  31AE   	fcall	___flneg
 16947  2EE7  0020               	movlb	0	; select bank0
 16948  2EE8  085D               	movf	?___flneg+3,w
 16949  2EE9  0021               	movlb	1	; select bank1
 16950  2EEA  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16951  2EEB  0020               	movlb	0	; select bank0
 16952  2EEC  085C               	movf	?___flneg+2,w
 16953  2EED  0021               	movlb	1	; select bank1
 16954  2EEE  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16955  2EEF  0020               	movlb	0	; select bank0
 16956  2EF0  085B               	movf	?___flneg+1,w
 16957  2EF1  0021               	movlb	1	; select bank1
 16958  2EF2  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16959  2EF3  0020               	movlb	0	; select bank0
 16960  2EF4  085A               	movf	?___flneg,w
 16961  2EF5  0021               	movlb	1	; select bank1
 16962  2EF6  00A8               	movwf	___fltol@f1^(0+128)
 16963  2EF7  31A9  213B  31AE   	fcall	___fltol
 16964  2EFA  0021               	movlb	1	; select bank1
 16965  2EFB  082B               	movf	(?___fltol+3)^(0+128),w
 16966  2EFC  0023               	movlb	3	; select bank3
 16967  2EFD  00BD               	movwf	(_batCurrent+3)^(0+384)
 16968  2EFE  0021               	movlb	1	; select bank1
 16969  2EFF  082A               	movf	(?___fltol+2)^(0+128),w
 16970  2F00  0023               	movlb	3	; select bank3
 16971  2F01  00BC               	movwf	(_batCurrent+2)^(0+384)
 16972  2F02  0021               	movlb	1	; select bank1
 16973  2F03  0829               	movf	(?___fltol+1)^(0+128),w
 16974  2F04  0023               	movlb	3	; select bank3
 16975  2F05  00BB               	movwf	(_batCurrent+1)^(0+384)
 16976  2F06  0021               	movlb	1	; select bank1
 16977  2F07  0828               	movf	?___fltol^(0+128),w
 16978  2F08  0023               	movlb	3	; select bank3
 16979  2F09  00BA               	movwf	_batCurrent^(0+384)
 16980                           
 16981                           ;BQ76920.c: 190:     if (batCurrent > -10 && batCurrent < 10)
 16982  2F0A  1FBD               	btfss	(_batCurrent+3)^(0+384),7
 16983  2F0B  2F16               	goto	l8174
 16984  2F0C  30F7               	movlw	247
 16985  2F0D  023A               	subwf	_batCurrent^(0+384),w
 16986  2F0E  30FF               	movlw	255
 16987  2F0F  3B3B               	subwfb	(_batCurrent+1)^(0+384),w
 16988  2F10  30FF               	movlw	255
 16989  2F11  3B3C               	subwfb	(_batCurrent+2)^(0+384),w
 16990  2F12  30FF               	movlw	255
 16991  2F13  3B3D               	subwfb	(_batCurrent+3)^(0+384),w
 16992  2F14  1C03               	btfss	3,0
 16993  2F15  2F2D               	goto	l8178
 16994  2F16                     l8174:	
 16995  2F16  1BBD               	btfsc	(_batCurrent+3)^(0+384),7
 16996  2F17  2F25               	goto	l8176
 16997  2F18  083D               	movf	(_batCurrent+3)^(0+384),w
 16998  2F19  1D03               	btfss	3,2
 16999  2F1A  2F2D               	goto	l8178
 17000  2F1B  083C               	movf	(_batCurrent+2)^(0+384),w
 17001  2F1C  1D03               	btfss	3,2
 17002  2F1D  2F2D               	goto	l8178
 17003  2F1E  083B               	movf	(_batCurrent+1)^(0+384),w
 17004  2F1F  1D03               	btfss	3,2
 17005  2F20  2F2D               	goto	l8178
 17006  2F21  300A               	movlw	10
 17007  2F22  023A               	subwf	_batCurrent^(0+384),w
 17008  2F23  1803               	btfsc	3,0
 17009  2F24  2F2D               	goto	l8178
 17010  2F25                     l8176:	
 17011                           
 17012                           ;BQ76920.c: 191:     {;BQ76920.c: 192:       batCurrent = 0;
 17013  2F25  3000               	movlw	0
 17014  2F26  00BD               	movwf	(_batCurrent+3)^(0+384)
 17015  2F27  3000               	movlw	0
 17016  2F28  00BC               	movwf	(_batCurrent+2)^(0+384)
 17017  2F29  3000               	movlw	0
 17018  2F2A  00BB               	movwf	(_batCurrent+1)^(0+384)
 17019  2F2B  3000               	movlw	0
 17020  2F2C  00BA               	movwf	_batCurrent^(0+384)
 17021  2F2D                     l8178:	
 17022                           
 17023                           ;BQ76920.c: 195:     I2C_writeRegister(0x18, 0x00, 0x80);
 17024  2F2D  3018               	movlw	24
 17025  2F2E  00F5               	movwf	I2C_writeRegister@slaveAddress
 17026  2F2F  3000               	movlw	0
 17027  2F30  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 17028  2F31  3000               	movlw	0
 17029  2F32  00F7               	movwf	I2C_writeRegister@regAddress
 17030  2F33  00F8               	movwf	I2C_writeRegister@regAddress+1
 17031  2F34  3080               	movlw	128
 17032  2F35  00F9               	movwf	I2C_writeRegister@data
 17033  2F36  3000               	movlw	0
 17034  2F37  00FA               	movwf	I2C_writeRegister@data+1
 17035  2F38  31B5  2583         	fcall	_I2C_writeRegister
 17036  2F3A  0008               	return
 17037  2F3B                     __end_of_updateCurrent:	
 17038                           
 17039                           	psect	text54
 17040  2009                     __ptext54:	
 17041 ;; *************** function ___xxtofl *****************
 17042 ;; Defined at:
 17043 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 17044 ;; Parameters:    Size  Location     Type
 17045 ;;  sign            1    wreg     unsigned char 
 17046 ;;  val             4    1[COMMON] long 
 17047 ;; Auto vars:     Size  Location     Type
 17048 ;;  sign            1    0[BANK0 ] unsigned char 
 17049 ;;  arg             4    2[BANK0 ] unsigned long 
 17050 ;;  exp             1    1[BANK0 ] unsigned char 
 17051 ;; Return value:  Size  Location     Type
 17052 ;;                  4    1[COMMON] unsigned char 
 17053 ;; Registers used:
 17054 ;;		wreg, status,2, status,0
 17055 ;; Tracked objects:
 17056 ;;		On entry : 0/0
 17057 ;;		On exit  : 0/0
 17058 ;;		Unchanged: 0/0
 17059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17060 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17061 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17062 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17063 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17064 ;;Total ram usage:       14 bytes
 17065 ;; Hardware stack levels used:    1
 17066 ;; Hardware stack levels required when called:    1
 17067 ;; This function calls:
 17068 ;;		Nothing
 17069 ;; This function is called by:
 17070 ;;		_setShortCircuitProtection
 17071 ;;		_setOverCurrentDischargeProtection
 17072 ;;		_updateCurrent
 17073 ;;		_updateVoltages
 17074 ;;		_updateTemperatures
 17075 ;;		_logf
 17076 ;;		_AFE_getSetShortCircuitCurrent
 17077 ;;		_AFE_getOverCurrentDischargeCurrent
 17078 ;; This function uses a non-reentrant model
 17079 ;;
 17080                           
 17081                           
 17082                           ;psect for function ___xxtofl
 17083  2009                     ___xxtofl:	
 17084                           
 17085                           ;incstack = 0
 17086                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 17087                           ;___xxtofl@sign stored from wreg
 17088  2009  0020               	movlb	0	; select bank0
 17089  200A  00A0               	movwf	___xxtofl@sign
 17090  200B  0820               	movf	___xxtofl@sign,w
 17091  200C  1D03               	btfss	3,2
 17092  200D  1FF4               	btfss	___xxtofl@val+3,7
 17093  200E  281F               	goto	l7698
 17094  200F  0971               	comf	___xxtofl@val,w
 17095  2010  00A2               	movwf	___xxtofl@arg
 17096  2011  0972               	comf	___xxtofl@val+1,w
 17097  2012  00A3               	movwf	___xxtofl@arg+1
 17098  2013  0973               	comf	___xxtofl@val+2,w
 17099  2014  00A4               	movwf	___xxtofl@arg+2
 17100  2015  0974               	comf	___xxtofl@val+3,w
 17101  2016  00A5               	movwf	___xxtofl@arg+3
 17102  2017  0AA2               	incf	___xxtofl@arg,f
 17103  2018  1903               	skipnz
 17104  2019  0AA3               	incf	___xxtofl@arg+1,f
 17105  201A  1903               	skipnz
 17106  201B  0AA4               	incf	___xxtofl@arg+2,f
 17107  201C  1903               	skipnz
 17108  201D  0AA5               	incf	___xxtofl@arg+3,f
 17109  201E  2827               	goto	l1282
 17110  201F                     l7698:	
 17111  201F  0874               	movf	___xxtofl@val+3,w
 17112  2020  00A5               	movwf	___xxtofl@arg+3
 17113  2021  0873               	movf	___xxtofl@val+2,w
 17114  2022  00A4               	movwf	___xxtofl@arg+2
 17115  2023  0872               	movf	___xxtofl@val+1,w
 17116  2024  00A3               	movwf	___xxtofl@arg+1
 17117  2025  0871               	movf	___xxtofl@val,w
 17118  2026  00A2               	movwf	___xxtofl@arg
 17119  2027                     l1282:	
 17120  2027  0874               	movf	___xxtofl@val+3,w
 17121  2028  0473               	iorwf	___xxtofl@val+2,w
 17122  2029  0472               	iorwf	___xxtofl@val+1,w
 17123  202A  0471               	iorwf	___xxtofl@val,w
 17124  202B  1D03               	skipz
 17125  202C  2836               	goto	l7704
 17126  202D  3000               	movlw	0
 17127  202E  00F4               	movwf	?___xxtofl+3
 17128  202F  3000               	movlw	0
 17129  2030  00F3               	movwf	?___xxtofl+2
 17130  2031  3000               	movlw	0
 17131  2032  00F2               	movwf	?___xxtofl+1
 17132  2033  3000               	movlw	0
 17133  2034  00F1               	movwf	?___xxtofl
 17134  2035  0008               	return
 17135  2036                     l7704:	
 17136  2036  3096               	movlw	150
 17137  2037  00F5               	movwf	??___xxtofl
 17138  2038  0875               	movf	??___xxtofl,w
 17139  2039  00A1               	movwf	___xxtofl@exp
 17140  203A                     l7708:	
 17141  203A  30FE               	movlw	254
 17142  203B  0525               	andwf	___xxtofl@arg+3,w
 17143  203C  1903               	btfsc	3,2
 17144  203D  285D               	goto	l1288
 17145  203E  3001               	movlw	1
 17146  203F  00F5               	movwf	??___xxtofl
 17147  2040  0875               	movf	??___xxtofl,w
 17148  2041  07A1               	addwf	___xxtofl@exp,f
 17149  2042  3001               	movlw	1
 17150  2043                     u10565:	
 17151  2043  36A5               	lsrf	___xxtofl@arg+3,f
 17152  2044  0CA4               	rrf	___xxtofl@arg+2,f
 17153  2045  0CA3               	rrf	___xxtofl@arg+1,f
 17154  2046  0CA2               	rrf	___xxtofl@arg,f
 17155  2047  0B89               	decfsz	9,f
 17156  2048  2843               	goto	u10565
 17157  2049  283A               	goto	l7708
 17158  204A                     l7710:	
 17159  204A  3001               	movlw	1
 17160  204B  00F5               	movwf	??___xxtofl
 17161  204C  0875               	movf	??___xxtofl,w
 17162  204D  07A1               	addwf	___xxtofl@exp,f
 17163  204E  3001               	movlw	1
 17164  204F  07A2               	addwf	___xxtofl@arg,f
 17165  2050  3000               	movlw	0
 17166  2051  3DA3               	addwfc	___xxtofl@arg+1,f
 17167  2052  3000               	movlw	0
 17168  2053  3DA4               	addwfc	___xxtofl@arg+2,f
 17169  2054  3000               	movlw	0
 17170  2055  3DA5               	addwfc	___xxtofl@arg+3,f
 17171  2056  3001               	movlw	1
 17172  2057                     u10585:	
 17173  2057  36A5               	lsrf	___xxtofl@arg+3,f
 17174  2058  0CA4               	rrf	___xxtofl@arg+2,f
 17175  2059  0CA3               	rrf	___xxtofl@arg+1,f
 17176  205A  0CA2               	rrf	___xxtofl@arg,f
 17177  205B  0B89               	decfsz	9,f
 17178  205C  2857               	goto	u10585
 17179  205D                     l1288:	
 17180  205D  30FF               	movlw	255
 17181  205E  0525               	andwf	___xxtofl@arg+3,w
 17182  205F  1903               	btfsc	3,2
 17183  2060  286F               	goto	l7718
 17184  2061  284A               	goto	l7710
 17185  2062                     l7720:	
 17186  2062  3002               	movlw	2
 17187  2063  0221               	subwf	___xxtofl@exp,w
 17188  2064  1C03               	btfss	3,0
 17189  2065  2871               	goto	l1295
 17190  2066  3001               	movlw	1
 17191  2067  02A1               	subwf	___xxtofl@exp,f
 17192  2068  3001               	movlw	1
 17193  2069                     u10605:	
 17194  2069  35A2               	lslf	___xxtofl@arg,f
 17195  206A  0DA3               	rlf	___xxtofl@arg+1,f
 17196  206B  0DA4               	rlf	___xxtofl@arg+2,f
 17197  206C  0DA5               	rlf	___xxtofl@arg+3,f
 17198  206D  0B89               	decfsz	9,f
 17199  206E  2869               	goto	u10605
 17200  206F                     l7718:	
 17201  206F  1FA4               	btfss	___xxtofl@arg+2,7
 17202  2070  2862               	goto	l7720
 17203  2071                     l1295:	
 17204  2071  1821               	btfsc	___xxtofl@exp,0
 17205  2072  287B               	goto	l1296
 17206  2073  30FF               	movlw	255
 17207  2074  05A2               	andwf	___xxtofl@arg,f
 17208  2075  30FF               	movlw	255
 17209  2076  05A3               	andwf	___xxtofl@arg+1,f
 17210  2077  307F               	movlw	127
 17211  2078  05A4               	andwf	___xxtofl@arg+2,f
 17212  2079  30FF               	movlw	255
 17213  207A  05A5               	andwf	___xxtofl@arg+3,f
 17214  207B                     l1296:	
 17215  207B  1003               	clrc
 17216  207C  0CA1               	rrf	___xxtofl@exp,f
 17217  207D  0821               	movf	___xxtofl@exp,w
 17218  207E  00F5               	movwf	??___xxtofl
 17219  207F  01F6               	clrf	??___xxtofl+1
 17220  2080  01F7               	clrf	??___xxtofl+2
 17221  2081  01F8               	clrf	??___xxtofl+3
 17222  2082  3018               	movlw	24
 17223  2083                     u10645:	
 17224  2083  35F5               	lslf	??___xxtofl,f
 17225  2084  0DF6               	rlf	??___xxtofl+1,f
 17226  2085  0DF7               	rlf	??___xxtofl+2,f
 17227  2086  0DF8               	rlf	??___xxtofl+3,f
 17228  2087  0B89               	decfsz	9,f
 17229  2088  2883               	goto	u10645
 17230  2089  0875               	movf	??___xxtofl,w
 17231  208A  04A2               	iorwf	___xxtofl@arg,f
 17232  208B  0876               	movf	??___xxtofl+1,w
 17233  208C  04A3               	iorwf	___xxtofl@arg+1,f
 17234  208D  0877               	movf	??___xxtofl+2,w
 17235  208E  04A4               	iorwf	___xxtofl@arg+2,f
 17236  208F  0878               	movf	??___xxtofl+3,w
 17237  2090  04A5               	iorwf	___xxtofl@arg+3,f
 17238  2091  0820               	movf	___xxtofl@sign,w
 17239  2092  1D03               	btfss	3,2
 17240  2093  1FF4               	btfss	___xxtofl@val+3,7
 17241  2094  2896               	goto	l7732
 17242  2095  17A5               	bsf	___xxtofl@arg+3,7
 17243  2096                     l7732:	
 17244  2096  0825               	movf	___xxtofl@arg+3,w
 17245  2097  00F4               	movwf	?___xxtofl+3
 17246  2098  0824               	movf	___xxtofl@arg+2,w
 17247  2099  00F3               	movwf	?___xxtofl+2
 17248  209A  0823               	movf	___xxtofl@arg+1,w
 17249  209B  00F2               	movwf	?___xxtofl+1
 17250  209C  0822               	movf	___xxtofl@arg,w
 17251  209D  00F1               	movwf	?___xxtofl
 17252  209E  0008               	return
 17253  209F                     __end_of___xxtofl:	
 17254                           
 17255                           	psect	text55
 17256  293B                     __ptext55:	
 17257 ;; *************** function ___fltol *****************
 17258 ;; Defined at:
 17259 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 17260 ;; Parameters:    Size  Location     Type
 17261 ;;  f1              4    8[BANK1 ] unsigned char 
 17262 ;; Auto vars:     Size  Location     Type
 17263 ;;  exp1            1   11[COMMON] unsigned char 
 17264 ;;  sign1           1   10[COMMON] unsigned char 
 17265 ;; Return value:  Size  Location     Type
 17266 ;;                  4    8[BANK1 ] long 
 17267 ;; Registers used:
 17268 ;;		wreg, status,2, status,0
 17269 ;; Tracked objects:
 17270 ;;		On entry : 0/0
 17271 ;;		On exit  : 0/0
 17272 ;;		Unchanged: 0/0
 17273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17274 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17275 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17276 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17277 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17278 ;;Total ram usage:       11 bytes
 17279 ;; Hardware stack levels used:    1
 17280 ;; Hardware stack levels required when called:    1
 17281 ;; This function calls:
 17282 ;;		Nothing
 17283 ;; This function is called by:
 17284 ;;		_updateCurrent
 17285 ;;		_updateVoltages
 17286 ;;		_updateTemperatures
 17287 ;;		_AFE_getSetShortCircuitCurrent
 17288 ;;		_AFE_getOverCurrentDischargeCurrent
 17289 ;; This function uses a non-reentrant model
 17290 ;;
 17291                           
 17292                           
 17293                           ;psect for function ___fltol
 17294  293B                     ___fltol:	
 17295                           
 17296                           ;incstack = 0
 17297                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 17298  293B  1003               	clrc
 17299  293C  0021               	movlb	1	; select bank1
 17300  293D  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 17301  293E  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 17302  293F  00AC               	movwf	??___fltol^(0+128)
 17303  2940  082C               	movf	??___fltol^(0+128),w
 17304  2941  00FB               	movwf	___fltol@exp1
 17305  2942  087B               	movf	___fltol@exp1,w
 17306  2943  1D03               	btfss	3,2
 17307  2944  294E               	goto	l7942
 17308  2945                     l7938:	
 17309  2945  3000               	movlw	0
 17310  2946  00AB               	movwf	(?___fltol+3)^(0+128)
 17311  2947  3000               	movlw	0
 17312  2948  00AA               	movwf	(?___fltol+2)^(0+128)
 17313  2949  3000               	movlw	0
 17314  294A  00A9               	movwf	(?___fltol+1)^(0+128)
 17315  294B  3000               	movlw	0
 17316  294C  00A8               	movwf	?___fltol^(0+128)
 17317  294D  0008               	return
 17318  294E                     l7942:	
 17319  294E  0828               	movf	___fltol@f1^(0+128),w
 17320  294F  00AC               	movwf	??___fltol^(0+128)
 17321  2950  0829               	movf	(___fltol@f1+1)^(0+128),w
 17322  2951  00AD               	movwf	(??___fltol^(0+128)+1)
 17323  2952  082A               	movf	(___fltol@f1+2)^(0+128),w
 17324  2953  00AE               	movwf	(??___fltol^(0+128)+2)
 17325  2954  082B               	movf	(___fltol@f1+3)^(0+128),w
 17326  2955  00AF               	movwf	(??___fltol^(0+128)+3)
 17327  2956  301F               	movlw	31
 17328  2957                     u10995:	
 17329  2957  36AF               	lsrf	(??___fltol^(0+128)+3),f
 17330  2958  0CAE               	rrf	(??___fltol^(0+128)+2),f
 17331  2959  0CAD               	rrf	(??___fltol^(0+128)+1),f
 17332  295A  0CAC               	rrf	??___fltol^(0+128),f
 17333  295B  0B89               	decfsz	9,f
 17334  295C  2957               	goto	u10995
 17335  295D  082C               	movf	??___fltol^(0+128),w
 17336  295E  00B0               	movwf	(??___fltol+4)^(0+128)
 17337  295F  0830               	movf	(??___fltol+4)^(0+128),w
 17338  2960  00FA               	movwf	___fltol@sign1
 17339  2961  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 17340  2962  30FF               	movlw	255
 17341  2963  05A8               	andwf	___fltol@f1^(0+128),f
 17342  2964  30FF               	movlw	255
 17343  2965  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 17344  2966  30FF               	movlw	255
 17345  2967  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 17346  2968  3000               	movlw	0
 17347  2969  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 17348  296A  3096               	movlw	150
 17349  296B  02FB               	subwf	___fltol@exp1,f
 17350  296C  1FFB               	btfss	___fltol@exp1,7
 17351  296D  2981               	goto	l7960
 17352  296E  087B               	movf	___fltol@exp1,w
 17353  296F  3A80               	xorlw	128
 17354  2970  3E97               	addlw	151
 17355  2971  1C03               	btfss	3,0
 17356  2972  2945               	goto	l7938
 17357  2973                     l7958:	
 17358  2973  3001               	movlw	1
 17359  2974                     u11025:	
 17360  2974  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 17361  2975  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 17362  2976  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 17363  2977  0CA8               	rrf	___fltol@f1^(0+128),f
 17364  2978  0B89               	decfsz	9,f
 17365  2979  2974               	goto	u11025
 17366  297A  3001               	movlw	1
 17367  297B  00AC               	movwf	??___fltol^(0+128)
 17368  297C  082C               	movf	??___fltol^(0+128),w
 17369  297D  07FB               	addwf	___fltol@exp1,f
 17370  297E  1903               	btfsc	3,2
 17371  297F  2992               	goto	l7968
 17372  2980  2973               	goto	l7958
 17373  2981                     l7960:	
 17374  2981  3020               	movlw	32
 17375  2982  027B               	subwf	___fltol@exp1,w
 17376  2983  1803               	btfsc	3,0
 17377  2984  2945               	goto	l7938
 17378  2985                     l1048:	
 17379  2985  087B               	movf	___fltol@exp1,w
 17380  2986  1903               	btfsc	3,2
 17381  2987  2992               	goto	l7968
 17382  2988  3001               	movlw	1
 17383  2989                     u11055:	
 17384  2989  35A8               	lslf	___fltol@f1^(0+128),f
 17385  298A  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 17386  298B  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 17387  298C  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 17388  298D  0B89               	decfsz	9,f
 17389  298E  2989               	goto	u11055
 17390  298F  3001               	movlw	1
 17391  2990  02FB               	subwf	___fltol@exp1,f
 17392  2991  2985               	goto	l1048
 17393  2992                     l7968:	
 17394  2992  087A               	movf	___fltol@sign1,w
 17395  2993  1903               	btfsc	3,2
 17396  2994  0008               	return
 17397  2995  09A8               	comf	___fltol@f1^(0+128),f
 17398  2996  09A9               	comf	(___fltol@f1+1)^(0+128),f
 17399  2997  09AA               	comf	(___fltol@f1+2)^(0+128),f
 17400  2998  09AB               	comf	(___fltol@f1+3)^(0+128),f
 17401  2999  0AA8               	incf	___fltol@f1^(0+128),f
 17402  299A  1903               	skipnz
 17403  299B  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 17404  299C  1903               	skipnz
 17405  299D  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 17406  299E  1903               	skipnz
 17407  299F  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 17408  29A0  0008               	return
 17409  29A1                     __end_of___fltol:	
 17410                           
 17411                           	psect	text56
 17412  3408                     __ptext56:	
 17413 ;; *************** function ___flneg *****************
 17414 ;; Defined at:
 17415 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 17416 ;; Parameters:    Size  Location     Type
 17417 ;;  f1              4   58[BANK0 ] long 
 17418 ;; Auto vars:     Size  Location     Type
 17419 ;;		None
 17420 ;; Return value:  Size  Location     Type
 17421 ;;                  4   58[BANK0 ] long 
 17422 ;; Registers used:
 17423 ;;		wreg
 17424 ;; Tracked objects:
 17425 ;;		On entry : 0/0
 17426 ;;		On exit  : 0/0
 17427 ;;		Unchanged: 0/0
 17428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17429 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17432 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17433 ;;Total ram usage:        4 bytes
 17434 ;; Hardware stack levels used:    1
 17435 ;; Hardware stack levels required when called:    1
 17436 ;; This function calls:
 17437 ;;		Nothing
 17438 ;; This function is called by:
 17439 ;;		_updateCurrent
 17440 ;; This function uses a non-reentrant model
 17441 ;;
 17442                           
 17443                           
 17444                           ;psect for function ___flneg
 17445  3408                     ___flneg:	
 17446                           
 17447                           ;incstack = 0
 17448                           ; Regs used in ___flneg: [wreg]
 17449  3408  0020               	movlb	0	; select bank0
 17450  3409  085D               	movf	___flneg@f1+3,w
 17451  340A  045C               	iorwf	___flneg@f1+2,w
 17452  340B  045B               	iorwf	___flneg@f1+1,w
 17453  340C  045A               	iorwf	___flneg@f1,w
 17454  340D  1903               	skipnz
 17455  340E  0008               	return
 17456  340F  3080               	movlw	128
 17457  3410  06DD               	xorwf	___flneg@f1+3,f
 17458  3411  0008               	return
 17459  3412                     __end_of___flneg:	
 17460                           
 17461                           	psect	text57
 17462  1023                     __ptext57:	
 17463 ;; *************** function ___flmul *****************
 17464 ;; Defined at:
 17465 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 17466 ;; Parameters:    Size  Location     Type
 17467 ;;  b               4    6[BANK0 ] long 
 17468 ;;  a               4   10[BANK0 ] long 
 17469 ;; Auto vars:     Size  Location     Type
 17470 ;;  prod            4   26[BANK0 ] struct .
 17471 ;;  grs             4   21[BANK0 ] unsigned long 
 17472 ;;  temp            2   30[BANK0 ] struct .
 17473 ;;  bexp            1   25[BANK0 ] unsigned char 
 17474 ;;  aexp            1   20[BANK0 ] unsigned char 
 17475 ;;  sign            1   19[BANK0 ] unsigned char 
 17476 ;; Return value:  Size  Location     Type
 17477 ;;                  4    6[BANK0 ] unsigned char 
 17478 ;; Registers used:
 17479 ;;		wreg, status,2, status,0, pclath, cstack
 17480 ;; Tracked objects:
 17481 ;;		On entry : 0/0
 17482 ;;		On exit  : 0/0
 17483 ;;		Unchanged: 0/0
 17484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17485 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17486 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17487 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17488 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17489 ;;Total ram usage:       26 bytes
 17490 ;; Hardware stack levels used:    1
 17491 ;; Hardware stack levels required when called:    2
 17492 ;; This function calls:
 17493 ;;		__Umul8_16
 17494 ;; This function is called by:
 17495 ;;		_setShortCircuitProtection
 17496 ;;		_setOverCurrentDischargeProtection
 17497 ;;		_updateCurrent
 17498 ;;		_updateVoltages
 17499 ;;		_updateTemperatures
 17500 ;;		_logf
 17501 ;; This function uses a non-reentrant model
 17502 ;;
 17503                           
 17504                           
 17505                           ;psect for function ___flmul
 17506  1023                     ___flmul:	
 17507                           
 17508                           ;incstack = 0
 17509                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 17510  1023  0020               	movlb	0	; select bank0
 17511  1024  0829               	movf	___flmul@b+3,w
 17512  1025  3980               	andlw	128
 17513  1026  00AE               	movwf	??___flmul
 17514  1027  082E               	movf	??___flmul,w
 17515  1028  00B3               	movwf	___flmul@sign
 17516  1029  3529               	lslf	___flmul@b+3,w
 17517  102A  00AE               	movwf	??___flmul
 17518  102B  082E               	movf	??___flmul,w
 17519  102C  00B9               	movwf	___flmul@bexp
 17520  102D  1BA8               	btfsc	___flmul@b+2,7
 17521  102E  1439               	bsf	___flmul@bexp,0
 17522  102F  0839               	movf	___flmul@bexp,w
 17523  1030  1903               	btfsc	3,2
 17524  1031  283F               	goto	l7568
 17525  1032  0A39               	incf	___flmul@bexp,w
 17526  1033  1D03               	btfss	3,2
 17527  1034  283D               	goto	l7566
 17528  1035  3000               	movlw	0
 17529  1036  00A9               	movwf	___flmul@b+3
 17530  1037  3000               	movlw	0
 17531  1038  00A8               	movwf	___flmul@b+2
 17532  1039  3000               	movlw	0
 17533  103A  00A7               	movwf	___flmul@b+1
 17534  103B  3000               	movlw	0
 17535  103C  00A6               	movwf	___flmul@b
 17536  103D                     l7566:	
 17537  103D  17A8               	bsf	___flmul@b+2,7
 17538  103E  2847               	goto	l7570
 17539  103F                     l7568:	
 17540  103F  3000               	movlw	0
 17541  1040  00A9               	movwf	___flmul@b+3
 17542  1041  3000               	movlw	0
 17543  1042  00A8               	movwf	___flmul@b+2
 17544  1043  3000               	movlw	0
 17545  1044  00A7               	movwf	___flmul@b+1
 17546  1045  3000               	movlw	0
 17547  1046  00A6               	movwf	___flmul@b
 17548  1047                     l7570:	
 17549  1047  082D               	movf	___flmul@a+3,w
 17550  1048  3980               	andlw	128
 17551  1049  00AE               	movwf	??___flmul
 17552  104A  082E               	movf	??___flmul,w
 17553  104B  06B3               	xorwf	___flmul@sign,f
 17554  104C  352D               	lslf	___flmul@a+3,w
 17555  104D  00AE               	movwf	??___flmul
 17556  104E  082E               	movf	??___flmul,w
 17557  104F  00B4               	movwf	___flmul@aexp
 17558  1050  1BAC               	btfsc	___flmul@a+2,7
 17559  1051  1434               	bsf	___flmul@aexp,0
 17560  1052  0834               	movf	___flmul@aexp,w
 17561  1053  1903               	btfsc	3,2
 17562  1054  2862               	goto	l7586
 17563  1055  0A34               	incf	___flmul@aexp,w
 17564  1056  1D03               	btfss	3,2
 17565  1057  2860               	goto	l7584
 17566  1058  3000               	movlw	0
 17567  1059  00AD               	movwf	___flmul@a+3
 17568  105A  3000               	movlw	0
 17569  105B  00AC               	movwf	___flmul@a+2
 17570  105C  3000               	movlw	0
 17571  105D  00AB               	movwf	___flmul@a+1
 17572  105E  3000               	movlw	0
 17573  105F  00AA               	movwf	___flmul@a
 17574  1060                     l7584:	
 17575  1060  17AC               	bsf	___flmul@a+2,7
 17576  1061  286A               	goto	l7588
 17577  1062                     l7586:	
 17578  1062  3000               	movlw	0
 17579  1063  00AD               	movwf	___flmul@a+3
 17580  1064  3000               	movlw	0
 17581  1065  00AC               	movwf	___flmul@a+2
 17582  1066  3000               	movlw	0
 17583  1067  00AB               	movwf	___flmul@a+1
 17584  1068  3000               	movlw	0
 17585  1069  00AA               	movwf	___flmul@a
 17586  106A                     l7588:	
 17587  106A  0834               	movf	___flmul@aexp,w
 17588  106B  1D03               	btfss	3,2
 17589  106C  0839               	movf	___flmul@bexp,w
 17590  106D  1D03               	btfss	3,2
 17591  106E  2878               	goto	l7596
 17592  106F  3000               	movlw	0
 17593  1070  00A9               	movwf	?___flmul+3
 17594  1071  3000               	movlw	0
 17595  1072  00A8               	movwf	?___flmul+2
 17596  1073  3000               	movlw	0
 17597  1074  00A7               	movwf	?___flmul+1
 17598  1075  3000               	movlw	0
 17599  1076  00A6               	movwf	?___flmul
 17600  1077  0008               	return
 17601  1078                     l7596:	
 17602  1078  0826               	movf	___flmul@b,w
 17603  1079  00AE               	movwf	??___flmul
 17604  107A  082E               	movf	??___flmul,w
 17605  107B  00F1               	movwf	__Umul8_16@multiplicand
 17606  107C  082C               	movf	___flmul@a+2,w
 17607  107D  31B5  25A1  3190   	fcall	__Umul8_16
 17608  1080  0872               	movf	?__Umul8_16+1,w
 17609  1081  0020               	movlb	0	; select bank0
 17610  1082  00BF               	movwf	___flmul@temp+1
 17611  1083  0871               	movf	?__Umul8_16,w
 17612  1084  00BE               	movwf	___flmul@temp
 17613  1085  083E               	movf	___flmul@temp,w
 17614  1086  00AE               	movwf	??___flmul
 17615  1087  01AF               	clrf	??___flmul+1
 17616  1088  01B0               	clrf	??___flmul+2
 17617  1089  01B1               	clrf	??___flmul+3
 17618  108A  0831               	movf	??___flmul+3,w
 17619  108B  00B8               	movwf	___flmul@grs+3
 17620  108C  0830               	movf	??___flmul+2,w
 17621  108D  00B7               	movwf	___flmul@grs+2
 17622  108E  082F               	movf	??___flmul+1,w
 17623  108F  00B6               	movwf	___flmul@grs+1
 17624  1090  082E               	movf	??___flmul,w
 17625  1091  00B5               	movwf	___flmul@grs
 17626  1092  083F               	movf	___flmul@temp+1,w
 17627  1093  00AE               	movwf	??___flmul
 17628  1094  01AF               	clrf	??___flmul+1
 17629  1095  01B0               	clrf	??___flmul+2
 17630  1096  01B1               	clrf	??___flmul+3
 17631  1097  0831               	movf	??___flmul+3,w
 17632  1098  00BD               	movwf	___flmul@prod+3
 17633  1099  0830               	movf	??___flmul+2,w
 17634  109A  00BC               	movwf	___flmul@prod+2
 17635  109B  082F               	movf	??___flmul+1,w
 17636  109C  00BB               	movwf	___flmul@prod+1
 17637  109D  082E               	movf	??___flmul,w
 17638  109E  00BA               	movwf	___flmul@prod
 17639  109F  0827               	movf	___flmul@b+1,w
 17640  10A0  00AE               	movwf	??___flmul
 17641  10A1  082E               	movf	??___flmul,w
 17642  10A2  00F1               	movwf	__Umul8_16@multiplicand
 17643  10A3  082B               	movf	___flmul@a+1,w
 17644  10A4  31B5  25A1  3190   	fcall	__Umul8_16
 17645  10A7  0872               	movf	?__Umul8_16+1,w
 17646  10A8  0020               	movlb	0	; select bank0
 17647  10A9  00BF               	movwf	___flmul@temp+1
 17648  10AA  0871               	movf	?__Umul8_16,w
 17649  10AB  00BE               	movwf	___flmul@temp
 17650  10AC  083E               	movf	___flmul@temp,w
 17651  10AD  00AE               	movwf	??___flmul
 17652  10AE  01AF               	clrf	??___flmul+1
 17653  10AF  01B0               	clrf	??___flmul+2
 17654  10B0  01B1               	clrf	??___flmul+3
 17655  10B1  082E               	movf	??___flmul,w
 17656  10B2  07B5               	addwf	___flmul@grs,f
 17657  10B3  082F               	movf	??___flmul+1,w
 17658  10B4  3DB6               	addwfc	___flmul@grs+1,f
 17659  10B5  0830               	movf	??___flmul+2,w
 17660  10B6  3DB7               	addwfc	___flmul@grs+2,f
 17661  10B7  0831               	movf	??___flmul+3,w
 17662  10B8  3DB8               	addwfc	___flmul@grs+3,f
 17663  10B9  083F               	movf	___flmul@temp+1,w
 17664  10BA  00AE               	movwf	??___flmul
 17665  10BB  01AF               	clrf	??___flmul+1
 17666  10BC  01B0               	clrf	??___flmul+2
 17667  10BD  01B1               	clrf	??___flmul+3
 17668  10BE  082E               	movf	??___flmul,w
 17669  10BF  07BA               	addwf	___flmul@prod,f
 17670  10C0  082F               	movf	??___flmul+1,w
 17671  10C1  3DBB               	addwfc	___flmul@prod+1,f
 17672  10C2  0830               	movf	??___flmul+2,w
 17673  10C3  3DBC               	addwfc	___flmul@prod+2,f
 17674  10C4  0831               	movf	??___flmul+3,w
 17675  10C5  3DBD               	addwfc	___flmul@prod+3,f
 17676  10C6  0828               	movf	___flmul@b+2,w
 17677  10C7  00AE               	movwf	??___flmul
 17678  10C8  082E               	movf	??___flmul,w
 17679  10C9  00F1               	movwf	__Umul8_16@multiplicand
 17680  10CA  082A               	movf	___flmul@a,w
 17681  10CB  31B5  25A1  3190   	fcall	__Umul8_16
 17682  10CE  0872               	movf	?__Umul8_16+1,w
 17683  10CF  0020               	movlb	0	; select bank0
 17684  10D0  00BF               	movwf	___flmul@temp+1
 17685  10D1  0871               	movf	?__Umul8_16,w
 17686  10D2  00BE               	movwf	___flmul@temp
 17687  10D3  083E               	movf	___flmul@temp,w
 17688  10D4  00AE               	movwf	??___flmul
 17689  10D5  01AF               	clrf	??___flmul+1
 17690  10D6  01B0               	clrf	??___flmul+2
 17691  10D7  01B1               	clrf	??___flmul+3
 17692  10D8  082E               	movf	??___flmul,w
 17693  10D9  07B5               	addwf	___flmul@grs,f
 17694  10DA  082F               	movf	??___flmul+1,w
 17695  10DB  3DB6               	addwfc	___flmul@grs+1,f
 17696  10DC  0830               	movf	??___flmul+2,w
 17697  10DD  3DB7               	addwfc	___flmul@grs+2,f
 17698  10DE  0831               	movf	??___flmul+3,w
 17699  10DF  3DB8               	addwfc	___flmul@grs+3,f
 17700  10E0  083F               	movf	___flmul@temp+1,w
 17701  10E1  00AE               	movwf	??___flmul
 17702  10E2  01AF               	clrf	??___flmul+1
 17703  10E3  01B0               	clrf	??___flmul+2
 17704  10E4  01B1               	clrf	??___flmul+3
 17705  10E5  082E               	movf	??___flmul,w
 17706  10E6  07BA               	addwf	___flmul@prod,f
 17707  10E7  082F               	movf	??___flmul+1,w
 17708  10E8  3DBB               	addwfc	___flmul@prod+1,f
 17709  10E9  0830               	movf	??___flmul+2,w
 17710  10EA  3DBC               	addwfc	___flmul@prod+2,f
 17711  10EB  0831               	movf	??___flmul+3,w
 17712  10EC  3DBD               	addwfc	___flmul@prod+3,f
 17713  10ED  3008               	movlw	8
 17714  10EE                     u10355:	
 17715  10EE  35B5               	lslf	___flmul@grs,f
 17716  10EF  0DB6               	rlf	___flmul@grs+1,f
 17717  10F0  0DB7               	rlf	___flmul@grs+2,f
 17718  10F1  0DB8               	rlf	___flmul@grs+3,f
 17719  10F2  0B89               	decfsz	9,f
 17720  10F3  28EE               	goto	u10355
 17721  10F4  0827               	movf	___flmul@b+1,w
 17722  10F5  00AE               	movwf	??___flmul
 17723  10F6  082E               	movf	??___flmul,w
 17724  10F7  00F1               	movwf	__Umul8_16@multiplicand
 17725  10F8  082A               	movf	___flmul@a,w
 17726  10F9  31B5  25A1  3190   	fcall	__Umul8_16
 17727  10FC  0872               	movf	?__Umul8_16+1,w
 17728  10FD  0020               	movlb	0	; select bank0
 17729  10FE  00BF               	movwf	___flmul@temp+1
 17730  10FF  0871               	movf	?__Umul8_16,w
 17731  1100  00BE               	movwf	___flmul@temp
 17732  1101  083E               	movf	___flmul@temp,w
 17733  1102  07B5               	addwf	___flmul@grs,f
 17734  1103  083F               	movf	___flmul@temp+1,w
 17735  1104  3DB6               	addwfc	___flmul@grs+1,f
 17736  1105  3000               	movlw	0
 17737  1106  3DB7               	addwfc	___flmul@grs+2,f
 17738  1107  3DB8               	addwfc	___flmul@grs+3,f
 17739  1108  0826               	movf	___flmul@b,w
 17740  1109  00AE               	movwf	??___flmul
 17741  110A  082E               	movf	??___flmul,w
 17742  110B  00F1               	movwf	__Umul8_16@multiplicand
 17743  110C  082B               	movf	___flmul@a+1,w
 17744  110D  31B5  25A1  3190   	fcall	__Umul8_16
 17745  1110  0872               	movf	?__Umul8_16+1,w
 17746  1111  0020               	movlb	0	; select bank0
 17747  1112  00BF               	movwf	___flmul@temp+1
 17748  1113  0871               	movf	?__Umul8_16,w
 17749  1114  00BE               	movwf	___flmul@temp
 17750  1115  083E               	movf	___flmul@temp,w
 17751  1116  07B5               	addwf	___flmul@grs,f
 17752  1117  083F               	movf	___flmul@temp+1,w
 17753  1118  3DB6               	addwfc	___flmul@grs+1,f
 17754  1119  3000               	movlw	0
 17755  111A  3DB7               	addwfc	___flmul@grs+2,f
 17756  111B  3DB8               	addwfc	___flmul@grs+3,f
 17757  111C  3008               	movlw	8
 17758  111D                     u10365:	
 17759  111D  35B5               	lslf	___flmul@grs,f
 17760  111E  0DB6               	rlf	___flmul@grs+1,f
 17761  111F  0DB7               	rlf	___flmul@grs+2,f
 17762  1120  0DB8               	rlf	___flmul@grs+3,f
 17763  1121  0B89               	decfsz	9,f
 17764  1122  291D               	goto	u10365
 17765  1123  0826               	movf	___flmul@b,w
 17766  1124  00AE               	movwf	??___flmul
 17767  1125  082E               	movf	??___flmul,w
 17768  1126  00F1               	movwf	__Umul8_16@multiplicand
 17769  1127  082A               	movf	___flmul@a,w
 17770  1128  31B5  25A1  3190   	fcall	__Umul8_16
 17771  112B  0872               	movf	?__Umul8_16+1,w
 17772  112C  0020               	movlb	0	; select bank0
 17773  112D  00BF               	movwf	___flmul@temp+1
 17774  112E  0871               	movf	?__Umul8_16,w
 17775  112F  00BE               	movwf	___flmul@temp
 17776  1130  083E               	movf	___flmul@temp,w
 17777  1131  07B5               	addwf	___flmul@grs,f
 17778  1132  083F               	movf	___flmul@temp+1,w
 17779  1133  3DB6               	addwfc	___flmul@grs+1,f
 17780  1134  3000               	movlw	0
 17781  1135  3DB7               	addwfc	___flmul@grs+2,f
 17782  1136  3DB8               	addwfc	___flmul@grs+3,f
 17783  1137  0827               	movf	___flmul@b+1,w
 17784  1138  00AE               	movwf	??___flmul
 17785  1139  082E               	movf	??___flmul,w
 17786  113A  00F1               	movwf	__Umul8_16@multiplicand
 17787  113B  082C               	movf	___flmul@a+2,w
 17788  113C  31B5  25A1  3190   	fcall	__Umul8_16
 17789  113F  0872               	movf	?__Umul8_16+1,w
 17790  1140  0020               	movlb	0	; select bank0
 17791  1141  00BF               	movwf	___flmul@temp+1
 17792  1142  0871               	movf	?__Umul8_16,w
 17793  1143  00BE               	movwf	___flmul@temp
 17794  1144  083E               	movf	___flmul@temp,w
 17795  1145  07BA               	addwf	___flmul@prod,f
 17796  1146  083F               	movf	___flmul@temp+1,w
 17797  1147  3DBB               	addwfc	___flmul@prod+1,f
 17798  1148  3000               	movlw	0
 17799  1149  3DBC               	addwfc	___flmul@prod+2,f
 17800  114A  3DBD               	addwfc	___flmul@prod+3,f
 17801  114B  0828               	movf	___flmul@b+2,w
 17802  114C  00AE               	movwf	??___flmul
 17803  114D  082E               	movf	??___flmul,w
 17804  114E  00F1               	movwf	__Umul8_16@multiplicand
 17805  114F  082B               	movf	___flmul@a+1,w
 17806  1150  31B5  25A1  3190   	fcall	__Umul8_16
 17807  1153  0872               	movf	?__Umul8_16+1,w
 17808  1154  0020               	movlb	0	; select bank0
 17809  1155  00BF               	movwf	___flmul@temp+1
 17810  1156  0871               	movf	?__Umul8_16,w
 17811  1157  00BE               	movwf	___flmul@temp
 17812  1158  083E               	movf	___flmul@temp,w
 17813  1159  07BA               	addwf	___flmul@prod,f
 17814  115A  083F               	movf	___flmul@temp+1,w
 17815  115B  3DBB               	addwfc	___flmul@prod+1,f
 17816  115C  3000               	movlw	0
 17817  115D  3DBC               	addwfc	___flmul@prod+2,f
 17818  115E  3DBD               	addwfc	___flmul@prod+3,f
 17819  115F  0828               	movf	___flmul@b+2,w
 17820  1160  00AE               	movwf	??___flmul
 17821  1161  082E               	movf	??___flmul,w
 17822  1162  00F1               	movwf	__Umul8_16@multiplicand
 17823  1163  082C               	movf	___flmul@a+2,w
 17824  1164  31B5  25A1  3190   	fcall	__Umul8_16
 17825  1167  0872               	movf	?__Umul8_16+1,w
 17826  1168  0020               	movlb	0	; select bank0
 17827  1169  00BF               	movwf	___flmul@temp+1
 17828  116A  0871               	movf	?__Umul8_16,w
 17829  116B  00BE               	movwf	___flmul@temp
 17830  116C  083E               	movf	___flmul@temp,w
 17831  116D  00AE               	movwf	??___flmul
 17832  116E  083F               	movf	___flmul@temp+1,w
 17833  116F  00AF               	movwf	??___flmul+1
 17834  1170  01B0               	clrf	??___flmul+2
 17835  1171  01B1               	clrf	??___flmul+3
 17836  1172  3008               	movlw	8
 17837  1173                     u10375:	
 17838  1173  35AE               	lslf	??___flmul,f
 17839  1174  0DAF               	rlf	??___flmul+1,f
 17840  1175  0DB0               	rlf	??___flmul+2,f
 17841  1176  0DB1               	rlf	??___flmul+3,f
 17842  1177  0B89               	decfsz	9,f
 17843  1178  2973               	goto	u10375
 17844  1179  082E               	movf	??___flmul,w
 17845  117A  07BA               	addwf	___flmul@prod,f
 17846  117B  082F               	movf	??___flmul+1,w
 17847  117C  3DBB               	addwfc	___flmul@prod+1,f
 17848  117D  0830               	movf	??___flmul+2,w
 17849  117E  3DBC               	addwfc	___flmul@prod+2,f
 17850  117F  0831               	movf	??___flmul+3,w
 17851  1180  3DBD               	addwfc	___flmul@prod+3,f
 17852  1181  0835               	movf	___flmul@grs,w
 17853  1182  00AE               	movwf	??___flmul
 17854  1183  0836               	movf	___flmul@grs+1,w
 17855  1184  00AF               	movwf	??___flmul+1
 17856  1185  0837               	movf	___flmul@grs+2,w
 17857  1186  00B0               	movwf	??___flmul+2
 17858  1187  0838               	movf	___flmul@grs+3,w
 17859  1188  00B1               	movwf	??___flmul+3
 17860  1189  3018               	movlw	24
 17861  118A                     u10385:	
 17862  118A  36B1               	lsrf	??___flmul+3,f
 17863  118B  0CB0               	rrf	??___flmul+2,f
 17864  118C  0CAF               	rrf	??___flmul+1,f
 17865  118D  0CAE               	rrf	??___flmul,f
 17866  118E  0B89               	decfsz	9,f
 17867  118F  298A               	goto	u10385
 17868  1190  082E               	movf	??___flmul,w
 17869  1191  07BA               	addwf	___flmul@prod,f
 17870  1192  082F               	movf	??___flmul+1,w
 17871  1193  3DBB               	addwfc	___flmul@prod+1,f
 17872  1194  0830               	movf	??___flmul+2,w
 17873  1195  3DBC               	addwfc	___flmul@prod+2,f
 17874  1196  0831               	movf	??___flmul+3,w
 17875  1197  3DBD               	addwfc	___flmul@prod+3,f
 17876  1198  3008               	movlw	8
 17877  1199                     u10395:	
 17878  1199  35B5               	lslf	___flmul@grs,f
 17879  119A  0DB6               	rlf	___flmul@grs+1,f
 17880  119B  0DB7               	rlf	___flmul@grs+2,f
 17881  119C  0DB8               	rlf	___flmul@grs+3,f
 17882  119D  0B89               	decfsz	9,f
 17883  119E  2999               	goto	u10395
 17884  119F  0839               	movf	___flmul@bexp,w
 17885  11A0  0734               	addwf	___flmul@aexp,w
 17886  11A1  00AE               	movwf	??___flmul
 17887  11A2  01AF               	clrf	??___flmul+1
 17888  11A3  0DAF               	rlf	??___flmul+1,f
 17889  11A4  082E               	movf	??___flmul,w
 17890  11A5  3E82               	addlw	130
 17891  11A6  00BE               	movwf	___flmul@temp
 17892  11A7  30FF               	movlw	255
 17893  11A8  3D2F               	addwfc	??___flmul+1,w
 17894  11A9  00BF               	movwf	___flmul@temp+1
 17895  11AA                     l7648:	
 17896  11AA  1BBC               	btfsc	___flmul@prod+2,7
 17897  11AB  29C1               	goto	l7650
 17898  11AC  3001               	movlw	1
 17899  11AD                     u10405:	
 17900  11AD  35BA               	lslf	___flmul@prod,f
 17901  11AE  0DBB               	rlf	___flmul@prod+1,f
 17902  11AF  0DBC               	rlf	___flmul@prod+2,f
 17903  11B0  0DBD               	rlf	___flmul@prod+3,f
 17904  11B1  0B89               	decfsz	9,f
 17905  11B2  29AD               	goto	u10405
 17906  11B3  1BB8               	btfsc	___flmul@grs+3,7
 17907  11B4  143A               	bsf	___flmul@prod,0
 17908  11B5  3001               	movlw	1
 17909  11B6                     u10425:	
 17910  11B6  35B5               	lslf	___flmul@grs,f
 17911  11B7  0DB6               	rlf	___flmul@grs+1,f
 17912  11B8  0DB7               	rlf	___flmul@grs+2,f
 17913  11B9  0DB8               	rlf	___flmul@grs+3,f
 17914  11BA  0B89               	decfsz	9,f
 17915  11BB  29B6               	goto	u10425
 17916  11BC  30FF               	movlw	255
 17917  11BD  07BE               	addwf	___flmul@temp,f
 17918  11BE  30FF               	movlw	255
 17919  11BF  3DBF               	addwfc	___flmul@temp+1,f
 17920  11C0  29AA               	goto	l7648
 17921  11C1                     l7650:	
 17922  11C1  01B4               	clrf	___flmul@aexp
 17923  11C2  1FB8               	btfss	___flmul@grs+3,7
 17924  11C3  29DA               	goto	l7660
 17925  11C4  30FF               	movlw	255
 17926  11C5  0535               	andwf	___flmul@grs,w
 17927  11C6  00AE               	movwf	??___flmul
 17928  11C7  30FF               	movlw	255
 17929  11C8  0536               	andwf	___flmul@grs+1,w
 17930  11C9  00AF               	movwf	??___flmul+1
 17931  11CA  30FF               	movlw	255
 17932  11CB  0537               	andwf	___flmul@grs+2,w
 17933  11CC  00B0               	movwf	??___flmul+2
 17934  11CD  307F               	movlw	127
 17935  11CE  0538               	andwf	___flmul@grs+3,w
 17936  11CF  00B1               	movwf	??___flmul+3
 17937  11D0  0831               	movf	??___flmul+3,w
 17938  11D1  0430               	iorwf	??___flmul+2,w
 17939  11D2  042F               	iorwf	??___flmul+1,w
 17940  11D3  042E               	iorwf	??___flmul,w
 17941  11D4  1903               	skipnz
 17942  11D5  183A               	btfsc	___flmul@prod,0
 17943  11D6  29D8               	goto	l7656
 17944  11D7  29DA               	goto	l7660
 17945  11D8                     l7656:	
 17946  11D8  01B4               	clrf	___flmul@aexp
 17947  11D9  0AB4               	incf	___flmul@aexp,f
 17948  11DA                     l7660:	
 17949  11DA  0834               	movf	___flmul@aexp,w
 17950  11DB  1903               	btfsc	3,2
 17951  11DC  2A03               	goto	l7670
 17952  11DD  3001               	movlw	1
 17953  11DE  07BA               	addwf	___flmul@prod,f
 17954  11DF  3000               	movlw	0
 17955  11E0  3DBB               	addwfc	___flmul@prod+1,f
 17956  11E1  3000               	movlw	0
 17957  11E2  3DBC               	addwfc	___flmul@prod+2,f
 17958  11E3  3000               	movlw	0
 17959  11E4  3DBD               	addwfc	___flmul@prod+3,f
 17960  11E5  1C3D               	btfss	___flmul@prod+3,0
 17961  11E6  2A03               	goto	l7670
 17962  11E7  083A               	movf	___flmul@prod,w
 17963  11E8  00AE               	movwf	??___flmul
 17964  11E9  083B               	movf	___flmul@prod+1,w
 17965  11EA  00AF               	movwf	??___flmul+1
 17966  11EB  083C               	movf	___flmul@prod+2,w
 17967  11EC  00B0               	movwf	??___flmul+2
 17968  11ED  083D               	movf	___flmul@prod+3,w
 17969  11EE  00B1               	movwf	??___flmul+3
 17970  11EF  3001               	movlw	1
 17971  11F0  00B2               	movwf	??___flmul+4
 17972  11F1                     u10495:	
 17973  11F1  37B1               	asrf	??___flmul+3,f
 17974  11F2  0CB0               	rrf	??___flmul+2,f
 17975  11F3  0CAF               	rrf	??___flmul+1,f
 17976  11F4  0CAE               	rrf	??___flmul,f
 17977  11F5  0BB2               	decfsz	??___flmul+4,f
 17978  11F6  29F1               	goto	u10495
 17979  11F7  0831               	movf	??___flmul+3,w
 17980  11F8  00BD               	movwf	___flmul@prod+3
 17981  11F9  0830               	movf	??___flmul+2,w
 17982  11FA  00BC               	movwf	___flmul@prod+2
 17983  11FB  082F               	movf	??___flmul+1,w
 17984  11FC  00BB               	movwf	___flmul@prod+1
 17985  11FD  082E               	movf	??___flmul,w
 17986  11FE  00BA               	movwf	___flmul@prod
 17987  11FF  3001               	movlw	1
 17988  1200  07BE               	addwf	___flmul@temp,f
 17989  1201  3000               	movlw	0
 17990  1202  3DBF               	addwfc	___flmul@temp+1,f
 17991  1203                     l7670:	
 17992  1203  083F               	movf	___flmul@temp+1,w
 17993  1204  3A80               	xorlw	128
 17994  1205  00AE               	movwf	??___flmul
 17995  1206  3080               	movlw	128
 17996  1207  022E               	subwf	??___flmul,w
 17997  1208  1D03               	skipz
 17998  1209  2A0C               	goto	u10505
 17999  120A  30FF               	movlw	255
 18000  120B  023E               	subwf	___flmul@temp,w
 18001  120C                     u10505:	
 18002  120C  1C03               	skipc
 18003  120D  2A18               	goto	l7674
 18004  120E  307F               	movlw	127
 18005  120F  0020               	movlb	0	; select bank0
 18006  1210  00BD               	movwf	___flmul@prod+3
 18007  1211  3080               	movlw	128
 18008  1212  00BC               	movwf	___flmul@prod+2
 18009  1213  3000               	movlw	0
 18010  1214  00BB               	movwf	___flmul@prod+1
 18011  1215  3000               	movlw	0
 18012  1216  00BA               	movwf	___flmul@prod
 18013  1217  2A42               	goto	l1256
 18014  1218                     l7674:	
 18015  1218  0020               	movlb	0	; select bank0
 18016  1219  083F               	movf	___flmul@temp+1,w
 18017  121A  3A80               	xorlw	128
 18018  121B  00AE               	movwf	??___flmul
 18019  121C  3080               	movlw	128
 18020  121D  022E               	subwf	??___flmul,w
 18021  121E  1D03               	skipz
 18022  121F  2A22               	goto	u10515
 18023  1220  3001               	movlw	1
 18024  1221  023E               	subwf	___flmul@temp,w
 18025  1222                     u10515:	
 18026  1222  1803               	skipnc
 18027  1223  2A2F               	goto	l7680
 18028  1224  3000               	movlw	0
 18029  1225  0020               	movlb	0	; select bank0
 18030  1226  00BD               	movwf	___flmul@prod+3
 18031  1227  3000               	movlw	0
 18032  1228  00BC               	movwf	___flmul@prod+2
 18033  1229  3000               	movlw	0
 18034  122A  00BB               	movwf	___flmul@prod+1
 18035  122B  3000               	movlw	0
 18036  122C  00BA               	movwf	___flmul@prod
 18037  122D  01B3               	clrf	___flmul@sign
 18038  122E  2A42               	goto	l1256
 18039  122F                     l7680:	
 18040  122F  0020               	movlb	0	; select bank0
 18041  1230  083E               	movf	___flmul@temp,w
 18042  1231  00AE               	movwf	??___flmul
 18043  1232  082E               	movf	??___flmul,w
 18044  1233  00B9               	movwf	___flmul@bexp
 18045  1234  30FF               	movlw	255
 18046  1235  05BA               	andwf	___flmul@prod,f
 18047  1236  30FF               	movlw	255
 18048  1237  05BB               	andwf	___flmul@prod+1,f
 18049  1238  307F               	movlw	127
 18050  1239  05BC               	andwf	___flmul@prod+2,f
 18051  123A  3000               	movlw	0
 18052  123B  05BD               	andwf	___flmul@prod+3,f
 18053  123C  1839               	btfsc	___flmul@bexp,0
 18054  123D  17BC               	bsf	___flmul@prod+2,7
 18055  123E  3639               	lsrf	___flmul@bexp,w
 18056  123F  00AE               	movwf	??___flmul
 18057  1240  082E               	movf	??___flmul,w
 18058  1241  00BD               	movwf	___flmul@prod+3
 18059  1242                     l1256:	
 18060  1242  0833               	movf	___flmul@sign,w
 18061  1243  00AE               	movwf	??___flmul
 18062  1244  082E               	movf	??___flmul,w
 18063  1245  04BD               	iorwf	___flmul@prod+3,f
 18064  1246  083D               	movf	___flmul@prod+3,w
 18065  1247  00A9               	movwf	?___flmul+3
 18066  1248  083C               	movf	___flmul@prod+2,w
 18067  1249  00A8               	movwf	?___flmul+2
 18068  124A  083B               	movf	___flmul@prod+1,w
 18069  124B  00A7               	movwf	?___flmul+1
 18070  124C  083A               	movf	___flmul@prod,w
 18071  124D  00A6               	movwf	?___flmul
 18072  124E  0008               	return
 18073  124F                     __end_of___flmul:	
 18074                           
 18075                           	psect	text58
 18076  35A1                     __ptext58:	
 18077 ;; *************** function __Umul8_16 *****************
 18078 ;; Defined at:
 18079 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 18080 ;; Parameters:    Size  Location     Type
 18081 ;;  multiplier      1    wreg     unsigned char 
 18082 ;;  multiplicand    1    1[COMMON] unsigned char 
 18083 ;; Auto vars:     Size  Location     Type
 18084 ;;  multiplier      1    9[COMMON] unsigned char 
 18085 ;;  word_mpld       2    7[COMMON] unsigned int 
 18086 ;;  product         2    5[COMMON] unsigned int 
 18087 ;; Return value:  Size  Location     Type
 18088 ;;                  2    1[COMMON] unsigned int 
 18089 ;; Registers used:
 18090 ;;		wreg, status,2, status,0
 18091 ;; Tracked objects:
 18092 ;;		On entry : 0/0
 18093 ;;		On exit  : 0/0
 18094 ;;		Unchanged: 0/0
 18095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18096 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18097 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18098 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18099 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18100 ;;Total ram usage:        9 bytes
 18101 ;; Hardware stack levels used:    1
 18102 ;; Hardware stack levels required when called:    1
 18103 ;; This function calls:
 18104 ;;		Nothing
 18105 ;; This function is called by:
 18106 ;;		___flmul
 18107 ;; This function uses a non-reentrant model
 18108 ;;
 18109                           
 18110                           
 18111                           ;psect for function __Umul8_16
 18112  35A1                     __Umul8_16:	
 18113                           
 18114                           ;incstack = 0
 18115                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 18116                           ;__Umul8_16@multiplier stored from wreg
 18117  35A1  00F9               	movwf	__Umul8_16@multiplier
 18118  35A2  01F5               	clrf	__Umul8_16@product
 18119  35A3  01F6               	clrf	__Umul8_16@product+1
 18120  35A4  0871               	movf	__Umul8_16@multiplicand,w
 18121  35A5  00F3               	movwf	??__Umul8_16
 18122  35A6  01F4               	clrf	??__Umul8_16+1
 18123  35A7  0873               	movf	??__Umul8_16,w
 18124  35A8  00F7               	movwf	__Umul8_16@word_mpld
 18125  35A9  0874               	movf	??__Umul8_16+1,w
 18126  35AA  00F8               	movwf	__Umul8_16@word_mpld+1
 18127  35AB                     l7364:	
 18128  35AB  1C79               	btfss	__Umul8_16@multiplier,0
 18129  35AC  2DB1               	goto	l1449
 18130  35AD  0877               	movf	__Umul8_16@word_mpld,w
 18131  35AE  07F5               	addwf	__Umul8_16@product,f
 18132  35AF  0878               	movf	__Umul8_16@word_mpld+1,w
 18133  35B0  3DF6               	addwfc	__Umul8_16@product+1,f
 18134  35B1                     l1449:	
 18135  35B1  3001               	movlw	1
 18136  35B2                     u9895:	
 18137  35B2  35F7               	lslf	__Umul8_16@word_mpld,f
 18138  35B3  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 18139  35B4  0B89               	decfsz	9,f
 18140  35B5  2DB2               	goto	u9895
 18141  35B6  1003               	clrc
 18142  35B7  0CF9               	rrf	__Umul8_16@multiplier,f
 18143  35B8  0879               	movf	__Umul8_16@multiplier,w
 18144  35B9  1D03               	btfss	3,2
 18145  35BA  2DAB               	goto	l7364
 18146  35BB  0876               	movf	__Umul8_16@product+1,w
 18147  35BC  00F2               	movwf	?__Umul8_16+1
 18148  35BD  0875               	movf	__Umul8_16@product,w
 18149  35BE  00F1               	movwf	?__Umul8_16
 18150  35BF  0008               	return
 18151  35C0                     __end_of__Umul8_16:	
 18152                           
 18153                           	psect	text59
 18154  1CE2                     __ptext59:	
 18155 ;; *************** function ___fldiv *****************
 18156 ;; Defined at:
 18157 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 18158 ;; Parameters:    Size  Location     Type
 18159 ;;  a               4   32[BANK0 ] unsigned int 
 18160 ;;  b               4   36[BANK0 ] unsigned int 
 18161 ;; Auto vars:     Size  Location     Type
 18162 ;;  grs             4   52[BANK0 ] unsigned long 
 18163 ;;  rem             4   45[BANK0 ] unsigned long 
 18164 ;;  new_exp         2   50[BANK0 ] int 
 18165 ;;  aexp            1   57[BANK0 ] unsigned char 
 18166 ;;  bexp            1   56[BANK0 ] unsigned char 
 18167 ;;  sign            1   49[BANK0 ] unsigned char 
 18168 ;; Return value:  Size  Location     Type
 18169 ;;                  4   32[BANK0 ] unsigned char 
 18170 ;; Registers used:
 18171 ;;		wreg, status,2, status,0
 18172 ;; Tracked objects:
 18173 ;;		On entry : 0/0
 18174 ;;		On exit  : 0/0
 18175 ;;		Unchanged: 0/0
 18176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18177 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18178 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18179 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18180 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18181 ;;Total ram usage:       26 bytes
 18182 ;; Hardware stack levels used:    1
 18183 ;; Hardware stack levels required when called:    1
 18184 ;; This function calls:
 18185 ;;		Nothing
 18186 ;; This function is called by:
 18187 ;;		_setShortCircuitProtection
 18188 ;;		_setOverCurrentDischargeProtection
 18189 ;;		_updateCurrent
 18190 ;;		_updateVoltages
 18191 ;;		_updateTemperatures
 18192 ;;		_logf
 18193 ;;		_AFE_getSetShortCircuitCurrent
 18194 ;;		_AFE_getOverCurrentDischargeCurrent
 18195 ;; This function uses a non-reentrant model
 18196 ;;
 18197                           
 18198                           
 18199                           ;psect for function ___fldiv
 18200  1CE2                     ___fldiv:	
 18201                           
 18202                           ;incstack = 0
 18203                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 18204  1CE2  0020               	movlb	0	; select bank0
 18205  1CE3  0847               	movf	___fldiv@b+3,w
 18206  1CE4  3980               	andlw	128
 18207  1CE5  00C8               	movwf	??___fldiv
 18208  1CE6  0848               	movf	??___fldiv,w
 18209  1CE7  00D1               	movwf	___fldiv@sign
 18210  1CE8  3547               	lslf	___fldiv@b+3,w
 18211  1CE9  00C8               	movwf	??___fldiv
 18212  1CEA  0848               	movf	??___fldiv,w
 18213  1CEB  00D8               	movwf	___fldiv@bexp
 18214  1CEC  1BC6               	btfsc	___fldiv@b+2,7
 18215  1CED  1458               	bsf	___fldiv@bexp,0
 18216  1CEE  0858               	movf	___fldiv@bexp,w
 18217  1CEF  1903               	btfsc	3,2
 18218  1CF0  2CFF               	goto	l7430
 18219  1CF1  0A58               	incf	___fldiv@bexp,w
 18220  1CF2  1D03               	btfss	3,2
 18221  1CF3  2CFC               	goto	l7426
 18222  1CF4  3000               	movlw	0
 18223  1CF5  00C7               	movwf	___fldiv@b+3
 18224  1CF6  3000               	movlw	0
 18225  1CF7  00C6               	movwf	___fldiv@b+2
 18226  1CF8  3000               	movlw	0
 18227  1CF9  00C5               	movwf	___fldiv@b+1
 18228  1CFA  3000               	movlw	0
 18229  1CFB  00C4               	movwf	___fldiv@b
 18230  1CFC                     l7426:	
 18231  1CFC  17C6               	bsf	___fldiv@b+2,7
 18232  1CFD  01C7               	clrf	___fldiv@b+3
 18233  1CFE  2D07               	goto	l7432
 18234  1CFF                     l7430:	
 18235  1CFF  3000               	movlw	0
 18236  1D00  00C7               	movwf	___fldiv@b+3
 18237  1D01  3000               	movlw	0
 18238  1D02  00C6               	movwf	___fldiv@b+2
 18239  1D03  3000               	movlw	0
 18240  1D04  00C5               	movwf	___fldiv@b+1
 18241  1D05  3000               	movlw	0
 18242  1D06  00C4               	movwf	___fldiv@b
 18243  1D07                     l7432:	
 18244  1D07  0843               	movf	___fldiv@a+3,w
 18245  1D08  3980               	andlw	128
 18246  1D09  00C8               	movwf	??___fldiv
 18247  1D0A  0848               	movf	??___fldiv,w
 18248  1D0B  06D1               	xorwf	___fldiv@sign,f
 18249  1D0C  3543               	lslf	___fldiv@a+3,w
 18250  1D0D  00C8               	movwf	??___fldiv
 18251  1D0E  0848               	movf	??___fldiv,w
 18252  1D0F  00D9               	movwf	___fldiv@aexp
 18253  1D10  1BC2               	btfsc	___fldiv@a+2,7
 18254  1D11  1459               	bsf	___fldiv@aexp,0
 18255  1D12  0859               	movf	___fldiv@aexp,w
 18256  1D13  1903               	btfsc	3,2
 18257  1D14  2D23               	goto	l7450
 18258  1D15  0A59               	incf	___fldiv@aexp,w
 18259  1D16  1D03               	btfss	3,2
 18260  1D17  2D20               	goto	l7446
 18261  1D18  3000               	movlw	0
 18262  1D19  00C3               	movwf	___fldiv@a+3
 18263  1D1A  3000               	movlw	0
 18264  1D1B  00C2               	movwf	___fldiv@a+2
 18265  1D1C  3000               	movlw	0
 18266  1D1D  00C1               	movwf	___fldiv@a+1
 18267  1D1E  3000               	movlw	0
 18268  1D1F  00C0               	movwf	___fldiv@a
 18269  1D20                     l7446:	
 18270  1D20  17C2               	bsf	___fldiv@a+2,7
 18271  1D21  01C3               	clrf	___fldiv@a+3
 18272  1D22  2D2B               	goto	l1204
 18273  1D23                     l7450:	
 18274  1D23  3000               	movlw	0
 18275  1D24  00C3               	movwf	___fldiv@a+3
 18276  1D25  3000               	movlw	0
 18277  1D26  00C2               	movwf	___fldiv@a+2
 18278  1D27  3000               	movlw	0
 18279  1D28  00C1               	movwf	___fldiv@a+1
 18280  1D29  3000               	movlw	0
 18281  1D2A  00C0               	movwf	___fldiv@a
 18282  1D2B                     l1204:	
 18283  1D2B  0843               	movf	___fldiv@a+3,w
 18284  1D2C  0442               	iorwf	___fldiv@a+2,w
 18285  1D2D  0441               	iorwf	___fldiv@a+1,w
 18286  1D2E  0440               	iorwf	___fldiv@a,w
 18287  1D2F  1D03               	skipz
 18288  1D30  2D4A               	goto	l7460
 18289  1D31  3000               	movlw	0
 18290  1D32  00C7               	movwf	___fldiv@b+3
 18291  1D33  3000               	movlw	0
 18292  1D34  00C6               	movwf	___fldiv@b+2
 18293  1D35  3000               	movlw	0
 18294  1D36  00C5               	movwf	___fldiv@b+1
 18295  1D37  3000               	movlw	0
 18296  1D38  00C4               	movwf	___fldiv@b
 18297  1D39  3080               	movlw	128
 18298  1D3A  04C6               	iorwf	___fldiv@b+2,f
 18299  1D3B  307F               	movlw	127
 18300  1D3C  04C7               	iorwf	___fldiv@b+3,f
 18301  1D3D                     L5:	
 18302  1D3D  0851               	movf	___fldiv@sign,w
 18303  1D3E  00C8               	movwf	??___fldiv
 18304  1D3F  0848               	movf	??___fldiv,w
 18305  1D40  04C7               	iorwf	___fldiv@b+3,f
 18306  1D41  0847               	movf	___fldiv@b+3,w
 18307  1D42  00C3               	movwf	?___fldiv+3
 18308  1D43  0846               	movf	___fldiv@b+2,w
 18309  1D44  00C2               	movwf	?___fldiv+2
 18310  1D45  0845               	movf	___fldiv@b+1,w
 18311  1D46  00C1               	movwf	?___fldiv+1
 18312  1D47  0844               	movf	___fldiv@b,w
 18313  1D48  00C0               	movwf	?___fldiv
 18314  1D49  0008               	return
 18315  1D4A                     l7460:	
 18316  1D4A  0858               	movf	___fldiv@bexp,w
 18317  1D4B  1D03               	btfss	3,2
 18318  1D4C  2D56               	goto	l7466
 18319  1D4D  3000               	movlw	0
 18320  1D4E  00C3               	movwf	?___fldiv+3
 18321  1D4F  3000               	movlw	0
 18322  1D50  00C2               	movwf	?___fldiv+2
 18323  1D51  3000               	movlw	0
 18324  1D52  00C1               	movwf	?___fldiv+1
 18325  1D53  3000               	movlw	0
 18326  1D54  00C0               	movwf	?___fldiv
 18327  1D55  0008               	return
 18328  1D56                     l7466:	
 18329  1D56  0858               	movf	___fldiv@bexp,w
 18330  1D57  00C8               	movwf	??___fldiv
 18331  1D58  01C9               	clrf	??___fldiv+1
 18332  1D59  0849               	movf	??___fldiv+1,w
 18333  1D5A  00CB               	movwf	??___fldiv+3
 18334  1D5B  0859               	movf	___fldiv@aexp,w
 18335  1D5C  0248               	subwf	??___fldiv,w
 18336  1D5D  00CA               	movwf	??___fldiv+2
 18337  1D5E  1C03               	skipc
 18338  1D5F  03CB               	decf	??___fldiv+3,f
 18339  1D60  084A               	movf	??___fldiv+2,w
 18340  1D61  3E7F               	addlw	127
 18341  1D62  00D2               	movwf	___fldiv@new_exp
 18342  1D63  3000               	movlw	0
 18343  1D64  3D4B               	addwfc	??___fldiv+3,w
 18344  1D65  00D3               	movwf	___fldiv@new_exp+1
 18345  1D66  0847               	movf	___fldiv@b+3,w
 18346  1D67  00D0               	movwf	___fldiv@rem+3
 18347  1D68  0846               	movf	___fldiv@b+2,w
 18348  1D69  00CF               	movwf	___fldiv@rem+2
 18349  1D6A  0845               	movf	___fldiv@b+1,w
 18350  1D6B  00CE               	movwf	___fldiv@rem+1
 18351  1D6C  0844               	movf	___fldiv@b,w
 18352  1D6D  00CD               	movwf	___fldiv@rem
 18353  1D6E  3000               	movlw	0
 18354  1D6F  00C7               	movwf	___fldiv@b+3
 18355  1D70  3000               	movlw	0
 18356  1D71  00C6               	movwf	___fldiv@b+2
 18357  1D72  3000               	movlw	0
 18358  1D73  00C5               	movwf	___fldiv@b+1
 18359  1D74  3000               	movlw	0
 18360  1D75  00C4               	movwf	___fldiv@b
 18361  1D76  3000               	movlw	0
 18362  1D77  00D7               	movwf	___fldiv@grs+3
 18363  1D78  3000               	movlw	0
 18364  1D79  00D6               	movwf	___fldiv@grs+2
 18365  1D7A  3000               	movlw	0
 18366  1D7B  00D5               	movwf	___fldiv@grs+1
 18367  1D7C  3000               	movlw	0
 18368  1D7D  00D4               	movwf	___fldiv@grs
 18369  1D7E  01D9               	clrf	___fldiv@aexp
 18370  1D7F                     l7494:	
 18371  1D7F  301A               	movlw	26
 18372  1D80  0259               	subwf	___fldiv@aexp,w
 18373  1D81  1803               	btfsc	3,0
 18374  1D82  2DBB               	goto	l7496
 18375  1D83  0859               	movf	___fldiv@aexp,w
 18376  1D84  1903               	btfsc	3,2
 18377  1D85  2D9D               	goto	l7486
 18378  1D86  3001               	movlw	1
 18379  1D87                     u10075:	
 18380  1D87  35CD               	lslf	___fldiv@rem,f
 18381  1D88  0DCE               	rlf	___fldiv@rem+1,f
 18382  1D89  0DCF               	rlf	___fldiv@rem+2,f
 18383  1D8A  0DD0               	rlf	___fldiv@rem+3,f
 18384  1D8B  0B89               	decfsz	9,f
 18385  1D8C  2D87               	goto	u10075
 18386  1D8D  3001               	movlw	1
 18387  1D8E                     u10085:	
 18388  1D8E  35C4               	lslf	___fldiv@b,f
 18389  1D8F  0DC5               	rlf	___fldiv@b+1,f
 18390  1D90  0DC6               	rlf	___fldiv@b+2,f
 18391  1D91  0DC7               	rlf	___fldiv@b+3,f
 18392  1D92  0B89               	decfsz	9,f
 18393  1D93  2D8E               	goto	u10085
 18394  1D94  1BD7               	btfsc	___fldiv@grs+3,7
 18395  1D95  1444               	bsf	___fldiv@b,0
 18396  1D96  3001               	movlw	1
 18397  1D97                     u10105:	
 18398  1D97  35D4               	lslf	___fldiv@grs,f
 18399  1D98  0DD5               	rlf	___fldiv@grs+1,f
 18400  1D99  0DD6               	rlf	___fldiv@grs+2,f
 18401  1D9A  0DD7               	rlf	___fldiv@grs+3,f
 18402  1D9B  0B89               	decfsz	9,f
 18403  1D9C  2D97               	goto	u10105
 18404  1D9D                     l7486:	
 18405  1D9D  0843               	movf	___fldiv@a+3,w
 18406  1D9E  0250               	subwf	___fldiv@rem+3,w
 18407  1D9F  1D03               	skipz
 18408  1DA0  2DAB               	goto	u10115
 18409  1DA1  0842               	movf	___fldiv@a+2,w
 18410  1DA2  024F               	subwf	___fldiv@rem+2,w
 18411  1DA3  1D03               	skipz
 18412  1DA4  2DAB               	goto	u10115
 18413  1DA5  0841               	movf	___fldiv@a+1,w
 18414  1DA6  024E               	subwf	___fldiv@rem+1,w
 18415  1DA7  1D03               	skipz
 18416  1DA8  2DAB               	goto	u10115
 18417  1DA9  0840               	movf	___fldiv@a,w
 18418  1DAA  024D               	subwf	___fldiv@rem,w
 18419  1DAB                     u10115:	
 18420  1DAB  1C03               	skipc
 18421  1DAC  2DB6               	goto	l7492
 18422  1DAD  1757               	bsf	___fldiv@grs+3,6
 18423  1DAE  0840               	movf	___fldiv@a,w
 18424  1DAF  02CD               	subwf	___fldiv@rem,f
 18425  1DB0  0841               	movf	___fldiv@a+1,w
 18426  1DB1  3BCE               	subwfb	___fldiv@rem+1,f
 18427  1DB2  0842               	movf	___fldiv@a+2,w
 18428  1DB3  3BCF               	subwfb	___fldiv@rem+2,f
 18429  1DB4  0843               	movf	___fldiv@a+3,w
 18430  1DB5  3BD0               	subwfb	___fldiv@rem+3,f
 18431  1DB6                     l7492:	
 18432  1DB6  3001               	movlw	1
 18433  1DB7  00C8               	movwf	??___fldiv
 18434  1DB8  0848               	movf	??___fldiv,w
 18435  1DB9  07D9               	addwf	___fldiv@aexp,f
 18436  1DBA  2D7F               	goto	l7494
 18437  1DBB                     l7496:	
 18438  1DBB  0850               	movf	___fldiv@rem+3,w
 18439  1DBC  044F               	iorwf	___fldiv@rem+2,w
 18440  1DBD  044E               	iorwf	___fldiv@rem+1,w
 18441  1DBE  044D               	iorwf	___fldiv@rem,w
 18442  1DBF  1D03               	btfss	3,2
 18443  1DC0  1454               	bsf	___fldiv@grs,0
 18444  1DC1                     l7510:	
 18445  1DC1  1BC6               	btfsc	___fldiv@b+2,7
 18446  1DC2  2DD8               	goto	l7512
 18447  1DC3  3001               	movlw	1
 18448  1DC4                     u10145:	
 18449  1DC4  35C4               	lslf	___fldiv@b,f
 18450  1DC5  0DC5               	rlf	___fldiv@b+1,f
 18451  1DC6  0DC6               	rlf	___fldiv@b+2,f
 18452  1DC7  0DC7               	rlf	___fldiv@b+3,f
 18453  1DC8  0B89               	decfsz	9,f
 18454  1DC9  2DC4               	goto	u10145
 18455  1DCA  1BD7               	btfsc	___fldiv@grs+3,7
 18456  1DCB  1444               	bsf	___fldiv@b,0
 18457  1DCC  3001               	movlw	1
 18458  1DCD                     u10165:	
 18459  1DCD  35D4               	lslf	___fldiv@grs,f
 18460  1DCE  0DD5               	rlf	___fldiv@grs+1,f
 18461  1DCF  0DD6               	rlf	___fldiv@grs+2,f
 18462  1DD0  0DD7               	rlf	___fldiv@grs+3,f
 18463  1DD1  0B89               	decfsz	9,f
 18464  1DD2  2DCD               	goto	u10165
 18465  1DD3  30FF               	movlw	255
 18466  1DD4  07D2               	addwf	___fldiv@new_exp,f
 18467  1DD5  30FF               	movlw	255
 18468  1DD6  3DD3               	addwfc	___fldiv@new_exp+1,f
 18469  1DD7  2DC1               	goto	l7510
 18470  1DD8                     l7512:	
 18471  1DD8  01D9               	clrf	___fldiv@aexp
 18472  1DD9  1FD7               	btfss	___fldiv@grs+3,7
 18473  1DDA  2DF1               	goto	l7522
 18474  1DDB  30FF               	movlw	255
 18475  1DDC  0554               	andwf	___fldiv@grs,w
 18476  1DDD  00C8               	movwf	??___fldiv
 18477  1DDE  30FF               	movlw	255
 18478  1DDF  0555               	andwf	___fldiv@grs+1,w
 18479  1DE0  00C9               	movwf	??___fldiv+1
 18480  1DE1  30FF               	movlw	255
 18481  1DE2  0556               	andwf	___fldiv@grs+2,w
 18482  1DE3  00CA               	movwf	??___fldiv+2
 18483  1DE4  307F               	movlw	127
 18484  1DE5  0557               	andwf	___fldiv@grs+3,w
 18485  1DE6  00CB               	movwf	??___fldiv+3
 18486  1DE7  084B               	movf	??___fldiv+3,w
 18487  1DE8  044A               	iorwf	??___fldiv+2,w
 18488  1DE9  0449               	iorwf	??___fldiv+1,w
 18489  1DEA  0448               	iorwf	??___fldiv,w
 18490  1DEB  1903               	skipnz
 18491  1DEC  1844               	btfsc	___fldiv@b,0
 18492  1DED  2DEF               	goto	l7518
 18493  1DEE  2DF1               	goto	l7522
 18494  1DEF                     l7518:	
 18495  1DEF  01D9               	clrf	___fldiv@aexp
 18496  1DF0  0AD9               	incf	___fldiv@aexp,f
 18497  1DF1                     l7522:	
 18498  1DF1  0859               	movf	___fldiv@aexp,w
 18499  1DF2  1903               	btfsc	3,2
 18500  1DF3  2E1A               	goto	l7532
 18501  1DF4  3001               	movlw	1
 18502  1DF5  07C4               	addwf	___fldiv@b,f
 18503  1DF6  3000               	movlw	0
 18504  1DF7  3DC5               	addwfc	___fldiv@b+1,f
 18505  1DF8  3000               	movlw	0
 18506  1DF9  3DC6               	addwfc	___fldiv@b+2,f
 18507  1DFA  3000               	movlw	0
 18508  1DFB  3DC7               	addwfc	___fldiv@b+3,f
 18509  1DFC  1C47               	btfss	___fldiv@b+3,0
 18510  1DFD  2E1A               	goto	l7532
 18511  1DFE  0844               	movf	___fldiv@b,w
 18512  1DFF  00C8               	movwf	??___fldiv
 18513  1E00  0845               	movf	___fldiv@b+1,w
 18514  1E01  00C9               	movwf	??___fldiv+1
 18515  1E02  0846               	movf	___fldiv@b+2,w
 18516  1E03  00CA               	movwf	??___fldiv+2
 18517  1E04  0847               	movf	___fldiv@b+3,w
 18518  1E05  00CB               	movwf	??___fldiv+3
 18519  1E06  3001               	movlw	1
 18520  1E07  00CC               	movwf	??___fldiv+4
 18521  1E08                     u10235:	
 18522  1E08  37CB               	asrf	??___fldiv+3,f
 18523  1E09  0CCA               	rrf	??___fldiv+2,f
 18524  1E0A  0CC9               	rrf	??___fldiv+1,f
 18525  1E0B  0CC8               	rrf	??___fldiv,f
 18526  1E0C  0BCC               	decfsz	??___fldiv+4,f
 18527  1E0D  2E08               	goto	u10235
 18528  1E0E  084B               	movf	??___fldiv+3,w
 18529  1E0F  00C7               	movwf	___fldiv@b+3
 18530  1E10  084A               	movf	??___fldiv+2,w
 18531  1E11  00C6               	movwf	___fldiv@b+2
 18532  1E12  0849               	movf	??___fldiv+1,w
 18533  1E13  00C5               	movwf	___fldiv@b+1
 18534  1E14  0848               	movf	??___fldiv,w
 18535  1E15  00C4               	movwf	___fldiv@b
 18536  1E16  3001               	movlw	1
 18537  1E17  07D2               	addwf	___fldiv@new_exp,f
 18538  1E18  3000               	movlw	0
 18539  1E19  3DD3               	addwfc	___fldiv@new_exp+1,f
 18540  1E1A                     l7532:	
 18541  1E1A  0853               	movf	___fldiv@new_exp+1,w
 18542  1E1B  3A80               	xorlw	128
 18543  1E1C  00C8               	movwf	??___fldiv
 18544  1E1D  3080               	movlw	128
 18545  1E1E  0248               	subwf	??___fldiv,w
 18546  1E1F  1D03               	skipz
 18547  1E20  2E23               	goto	u10245
 18548  1E21  30FF               	movlw	255
 18549  1E22  0252               	subwf	___fldiv@new_exp,w
 18550  1E23                     u10245:	
 18551  1E23  1C03               	skipc
 18552  1E24  2E32               	goto	l1225
 18553  1E25  30FF               	movlw	255
 18554  1E26  0020               	movlb	0	; select bank0
 18555  1E27  00D2               	movwf	___fldiv@new_exp
 18556  1E28  3000               	movlw	0
 18557  1E29  00D3               	movwf	___fldiv@new_exp+1
 18558  1E2A  3000               	movlw	0
 18559  1E2B  00C7               	movwf	___fldiv@b+3
 18560  1E2C  3000               	movlw	0
 18561  1E2D  00C6               	movwf	___fldiv@b+2
 18562  1E2E  3000               	movlw	0
 18563  1E2F  00C5               	movwf	___fldiv@b+1
 18564  1E30  3000               	movlw	0
 18565  1E31  00C4               	movwf	___fldiv@b
 18566  1E32                     l1225:	
 18567  1E32  0020               	movlb	0	; select bank0
 18568  1E33  0853               	movf	___fldiv@new_exp+1,w
 18569  1E34  3A80               	xorlw	128
 18570  1E35  00C8               	movwf	??___fldiv
 18571  1E36  3080               	movlw	128
 18572  1E37  0248               	subwf	??___fldiv,w
 18573  1E38  1D03               	skipz
 18574  1E39  2E3C               	goto	u10255
 18575  1E3A  3001               	movlw	1
 18576  1E3B  0252               	subwf	___fldiv@new_exp,w
 18577  1E3C                     u10255:	
 18578  1E3C  1803               	skipnc
 18579  1E3D  2E4A               	goto	l1226
 18580  1E3E  0020               	movlb	0	; select bank0
 18581  1E3F  01D2               	clrf	___fldiv@new_exp
 18582  1E40  01D3               	clrf	___fldiv@new_exp+1
 18583  1E41  3000               	movlw	0
 18584  1E42  00C7               	movwf	___fldiv@b+3
 18585  1E43  3000               	movlw	0
 18586  1E44  00C6               	movwf	___fldiv@b+2
 18587  1E45  3000               	movlw	0
 18588  1E46  00C5               	movwf	___fldiv@b+1
 18589  1E47  3000               	movlw	0
 18590  1E48  00C4               	movwf	___fldiv@b
 18591  1E49  01D1               	clrf	___fldiv@sign
 18592  1E4A                     l1226:	
 18593  1E4A  0020               	movlb	0	; select bank0
 18594  1E4B  0852               	movf	___fldiv@new_exp,w
 18595  1E4C  00C8               	movwf	??___fldiv
 18596  1E4D  0848               	movf	??___fldiv,w
 18597  1E4E  00D8               	movwf	___fldiv@bexp
 18598  1E4F  1C58               	btfss	___fldiv@bexp,0
 18599  1E50  2E53               	goto	l7546
 18600  1E51  17C6               	bsf	___fldiv@b+2,7
 18601  1E52  2E57               	goto	l1228
 18602  1E53                     l7546:	
 18603  1E53  307F               	movlw	127
 18604  1E54  00C8               	movwf	??___fldiv
 18605  1E55  0848               	movf	??___fldiv,w
 18606  1E56  05C6               	andwf	___fldiv@b+2,f
 18607  1E57                     l1228:	
 18608  1E57  3658               	lsrf	___fldiv@bexp,w
 18609  1E58  00C8               	movwf	??___fldiv
 18610  1E59  0848               	movf	??___fldiv,w
 18611  1E5A  00C7               	movwf	___fldiv@b+3
 18612  1E5B  2D3D               	goto	L5
 18613  1E5C                     __end_of___fldiv:	
 18614                           
 18615                           	psect	text60
 18616  2808                     __ptext60:	
 18617 ;; *************** function _enableDischarging *****************
 18618 ;; Defined at:
 18619 ;;		line 271 in file "BQ76920.c"
 18620 ;; Parameters:    Size  Location     Type
 18621 ;;  enable          2    0[BANK0 ] unsigned int 
 18622 ;; Auto vars:     Size  Location     Type
 18623 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 18624 ;; Return value:  Size  Location     Type
 18625 ;;                  1    wreg      void 
 18626 ;; Registers used:
 18627 ;;		wreg, status,2, status,0, pclath, cstack
 18628 ;; Tracked objects:
 18629 ;;		On entry : 0/0
 18630 ;;		On exit  : 0/0
 18631 ;;		Unchanged: 0/0
 18632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18633 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18635 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18636 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18637 ;;Total ram usage:        5 bytes
 18638 ;; Hardware stack levels used:    1
 18639 ;; Hardware stack levels required when called:    3
 18640 ;; This function calls:
 18641 ;;		_I2C_writeRegister
 18642 ;;		_readRegister
 18643 ;; This function is called by:
 18644 ;;		_AFE_UPDATE
 18645 ;; This function uses a non-reentrant model
 18646 ;;
 18647                           
 18648                           
 18649                           ;psect for function _enableDischarging
 18650  2808                     _enableDischarging:	
 18651                           
 18652                           ;BQ76920.c: 272:     uint8_t sys_ctrl2;;BQ76920.c: 273:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 18653                           
 18654                           ;incstack = 0
 18655                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 18656  2808  3018               	movlw	24
 18657  2809  00F5               	movwf	readRegister@slaveAddress
 18658  280A  3000               	movlw	0
 18659  280B  00F6               	movwf	readRegister@slaveAddress+1
 18660  280C  3005               	movlw	5
 18661  280D  00F7               	movwf	readRegister@regAddress
 18662  280E  3000               	movlw	0
 18663  280F  00F8               	movwf	readRegister@regAddress+1
 18664  2810  31B6  26FE  31A8   	fcall	_readRegister
 18665  2813  0875               	movf	?_readRegister,w
 18666  2814  0020               	movlb	0	; select bank0
 18667  2815  00A2               	movwf	??_enableDischarging
 18668  2816  0822               	movf	??_enableDischarging,w
 18669  2817  00FB               	movwf	enableDischarging@sys_ctrl2
 18670                           
 18671                           ;BQ76920.c: 274:     if(enable){
 18672  2818  0820               	movf	enableDischarging@enable,w
 18673  2819  0421               	iorwf	enableDischarging@enable+1,w
 18674  281A  1903               	btfsc	3,2
 18675  281B  282C               	goto	l8252
 18676                           
 18677                           ;BQ76920.c: 275:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 18678  281C  3018               	movlw	24
 18679  281D  00F5               	movwf	I2C_writeRegister@slaveAddress
 18680  281E  3000               	movlw	0
 18681  281F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18682  2820  3005               	movlw	5
 18683  2821  00F7               	movwf	I2C_writeRegister@regAddress
 18684  2822  3000               	movlw	0
 18685  2823  00F8               	movwf	I2C_writeRegister@regAddress+1
 18686  2824  3002               	movlw	2
 18687  2825  047B               	iorwf	enableDischarging@sys_ctrl2,w
 18688  2826  00F9               	movwf	I2C_writeRegister@data
 18689  2827  3000               	movlw	0
 18690  2828  00FA               	movwf	I2C_writeRegister@data+1
 18691  2829  31B5  2583         	fcall	_I2C_writeRegister
 18692                           
 18693                           ;BQ76920.c: 276:     }else{
 18694  282B  0008               	return
 18695  282C                     l8252:	
 18696                           
 18697                           ;BQ76920.c: 277:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 18698  282C  3018               	movlw	24
 18699  282D  00F5               	movwf	I2C_writeRegister@slaveAddress
 18700  282E  3000               	movlw	0
 18701  282F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18702  2830  3005               	movlw	5
 18703  2831  00F7               	movwf	I2C_writeRegister@regAddress
 18704  2832  3000               	movlw	0
 18705  2833  00F8               	movwf	I2C_writeRegister@regAddress+1
 18706  2834  087B               	movf	enableDischarging@sys_ctrl2,w
 18707  2835  39FD               	andlw	253
 18708  2836  00A2               	movwf	??_enableDischarging
 18709  2837  01A3               	clrf	??_enableDischarging+1
 18710  2838  0822               	movf	??_enableDischarging,w
 18711  2839  00F9               	movwf	I2C_writeRegister@data
 18712  283A  0823               	movf	??_enableDischarging+1,w
 18713  283B  00FA               	movwf	I2C_writeRegister@data+1
 18714  283C  31B5  2583         	fcall	_I2C_writeRegister
 18715  283E  0008               	return
 18716  283F                     __end_of_enableDischarging:	
 18717                           
 18718                           	psect	text61
 18719  3734                     __ptext61:	
 18720 ;; *************** function _enableCharging *****************
 18721 ;; Defined at:
 18722 ;;		line 281 in file "BQ76920.c"
 18723 ;; Parameters:    Size  Location     Type
 18724 ;;  enable          2    0[BANK0 ] unsigned int 
 18725 ;; Auto vars:     Size  Location     Type
 18726 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 18727 ;; Return value:  Size  Location     Type
 18728 ;;                  1    wreg      void 
 18729 ;; Registers used:
 18730 ;;		wreg, status,2, status,0, pclath, cstack
 18731 ;; Tracked objects:
 18732 ;;		On entry : 0/0
 18733 ;;		On exit  : 0/0
 18734 ;;		Unchanged: 0/0
 18735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18736 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18739 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18740 ;;Total ram usage:        5 bytes
 18741 ;; Hardware stack levels used:    1
 18742 ;; Hardware stack levels required when called:    3
 18743 ;; This function calls:
 18744 ;;		_I2C_writeRegister
 18745 ;;		_readRegister
 18746 ;; This function is called by:
 18747 ;;		_AFE_UPDATE
 18748 ;; This function uses a non-reentrant model
 18749 ;;
 18750                           
 18751                           
 18752                           ;psect for function _enableCharging
 18753  3734                     _enableCharging:	
 18754                           
 18755                           ;BQ76920.c: 282:     uint8_t sys_ctrl2;;BQ76920.c: 283:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 18756                           
 18757                           ;incstack = 0
 18758                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 18759  3734  3018               	movlw	24
 18760  3735  00F5               	movwf	readRegister@slaveAddress
 18761  3736  3000               	movlw	0
 18762  3737  00F6               	movwf	readRegister@slaveAddress+1
 18763  3738  3005               	movlw	5
 18764  3739  00F7               	movwf	readRegister@regAddress
 18765  373A  3000               	movlw	0
 18766  373B  00F8               	movwf	readRegister@regAddress+1
 18767  373C  31B6  26FE  31B7   	fcall	_readRegister
 18768  373F  0875               	movf	?_readRegister,w
 18769  3740  0020               	movlb	0	; select bank0
 18770  3741  00A2               	movwf	??_enableCharging
 18771  3742  0822               	movf	??_enableCharging,w
 18772  3743  00FB               	movwf	enableCharging@sys_ctrl2
 18773                           
 18774                           ;BQ76920.c: 284:     if(enable){
 18775  3744  0820               	movf	enableCharging@enable,w
 18776  3745  0421               	iorwf	enableCharging@enable+1,w
 18777  3746  1903               	btfsc	3,2
 18778  3747  2F58               	goto	l8260
 18779                           
 18780                           ;BQ76920.c: 285:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 18781  3748  3018               	movlw	24
 18782  3749  00F5               	movwf	I2C_writeRegister@slaveAddress
 18783  374A  3000               	movlw	0
 18784  374B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18785  374C  3005               	movlw	5
 18786  374D  00F7               	movwf	I2C_writeRegister@regAddress
 18787  374E  3000               	movlw	0
 18788  374F  00F8               	movwf	I2C_writeRegister@regAddress+1
 18789  3750  3001               	movlw	1
 18790  3751  047B               	iorwf	enableCharging@sys_ctrl2,w
 18791  3752  00F9               	movwf	I2C_writeRegister@data
 18792  3753  3000               	movlw	0
 18793  3754  00FA               	movwf	I2C_writeRegister@data+1
 18794  3755  31B5  2583         	fcall	_I2C_writeRegister
 18795                           
 18796                           ;BQ76920.c: 286:     }else{
 18797  3757  0008               	return
 18798  3758                     l8260:	
 18799                           
 18800                           ;BQ76920.c: 287:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 18801  3758  3018               	movlw	24
 18802  3759  00F5               	movwf	I2C_writeRegister@slaveAddress
 18803  375A  3000               	movlw	0
 18804  375B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 18805  375C  3005               	movlw	5
 18806  375D  00F7               	movwf	I2C_writeRegister@regAddress
 18807  375E  3000               	movlw	0
 18808  375F  00F8               	movwf	I2C_writeRegister@regAddress+1
 18809  3760  087B               	movf	enableCharging@sys_ctrl2,w
 18810  3761  39FE               	andlw	254
 18811  3762  00A2               	movwf	??_enableCharging
 18812  3763  01A3               	clrf	??_enableCharging+1
 18813  3764  0822               	movf	??_enableCharging,w
 18814  3765  00F9               	movwf	I2C_writeRegister@data
 18815  3766  0823               	movf	??_enableCharging+1,w
 18816  3767  00FA               	movwf	I2C_writeRegister@data+1
 18817  3768  31B5  2583         	fcall	_I2C_writeRegister
 18818  376A  0008               	return
 18819  376B                     __end_of_enableCharging:	
 18820                           
 18821                           	psect	text62
 18822  36FE                     __ptext62:	
 18823 ;; *************** function _readRegister *****************
 18824 ;; Defined at:
 18825 ;;		line 115 in file "I2C.c"
 18826 ;; Parameters:    Size  Location     Type
 18827 ;;  slaveAddress    2    5[COMMON] int 
 18828 ;;  regAddress      2    7[COMMON] int 
 18829 ;; Auto vars:     Size  Location     Type
 18830 ;;  recievedData    2    9[COMMON] int 
 18831 ;; Return value:  Size  Location     Type
 18832 ;;                  2    5[COMMON] int 
 18833 ;; Registers used:
 18834 ;;		wreg, status,2, status,0, pclath, cstack
 18835 ;; Tracked objects:
 18836 ;;		On entry : 0/0
 18837 ;;		On exit  : 0/0
 18838 ;;		Unchanged: 0/0
 18839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18843 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18844 ;;Total ram usage:        6 bytes
 18845 ;; Hardware stack levels used:    1
 18846 ;; Hardware stack levels required when called:    2
 18847 ;; This function calls:
 18848 ;;		_read_I2C_data
 18849 ;;		_send_I2C_NACK
 18850 ;;		_send_I2C_controlByte
 18851 ;;		_send_I2C_data
 18852 ;;		_send_I2C_startBit
 18853 ;;		_send_I2C_stopBit
 18854 ;; This function is called by:
 18855 ;;		_beginAFEcommunication
 18856 ;;		_setCellUndervoltageProtection
 18857 ;;		_setCellOvervoltageProtection
 18858 ;;		_updateCurrent
 18859 ;;		_updateVoltages
 18860 ;;		_updateTemperatures
 18861 ;;		_enableDischarging
 18862 ;;		_enableCharging
 18863 ;;		_printcellParameters
 18864 ;;		_printotAFERegisters
 18865 ;; This function uses a non-reentrant model
 18866 ;;
 18867                           
 18868                           
 18869                           ;psect for function _readRegister
 18870  36FE                     _readRegister:	
 18871                           
 18872                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 18873                           
 18874                           ;incstack = 0
 18875                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 18876  36FE  31B3  23DB  31B6   	fcall	_send_I2C_startBit
 18877                           
 18878                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 18879  3701  0876               	movf	readRegister@slaveAddress+1,w
 18880  3702  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18881  3703  0875               	movf	readRegister@slaveAddress,w
 18882  3704  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18883  3705  3000               	movlw	0
 18884  3706  00F3               	movwf	send_I2C_controlByte@RW_bit
 18885  3707  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18886  3708  31B3  23FE  31B6   	fcall	_send_I2C_controlByte
 18887                           
 18888                           ;I2C.c: 119:     send_I2C_data(regAddress);
 18889  370B  0878               	movf	readRegister@regAddress+1,w
 18890  370C  00F2               	movwf	send_I2C_data@databyte+1
 18891  370D  0877               	movf	readRegister@regAddress,w
 18892  370E  00F1               	movwf	send_I2C_data@databyte
 18893  370F  31B3  23EC  31B6   	fcall	_send_I2C_data
 18894                           
 18895                           ;I2C.c: 120:     send_I2C_stopBit();
 18896  3712  31A8  2000  31B6   	fcall	_send_I2C_stopBit
 18897                           
 18898                           ;I2C.c: 121:     send_I2C_startBit();
 18899  3715  31B3  23DB  31B6   	fcall	_send_I2C_startBit
 18900                           
 18901                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 18902  3718  0876               	movf	readRegister@slaveAddress+1,w
 18903  3719  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18904  371A  0875               	movf	readRegister@slaveAddress,w
 18905  371B  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18906  371C  3001               	movlw	1
 18907  371D  00F3               	movwf	send_I2C_controlByte@RW_bit
 18908  371E  3000               	movlw	0
 18909  371F  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18910  3720  31B3  23FE  31B6   	fcall	_send_I2C_controlByte
 18911                           
 18912                           ;I2C.c: 123:     recievedData = read_I2C_data();
 18913  3723  31B4  2443  31B6   	fcall	_read_I2C_data
 18914  3726  0872               	movf	?_read_I2C_data+1,w
 18915  3727  00FA               	movwf	readRegister@recievedData+1
 18916  3728  0871               	movf	?_read_I2C_data,w
 18917  3729  00F9               	movwf	readRegister@recievedData
 18918                           
 18919                           ;I2C.c: 124:     send_I2C_NACK();
 18920  372A  31B3  23F5  31B6   	fcall	_send_I2C_NACK
 18921                           
 18922                           ;I2C.c: 125:     send_I2C_stopBit();
 18923  372D  31A8  2000         	fcall	_send_I2C_stopBit
 18924                           
 18925                           ;I2C.c: 126:     return recievedData;
 18926  372F  087A               	movf	readRegister@recievedData+1,w
 18927  3730  00F6               	movwf	?_readRegister+1
 18928  3731  0879               	movf	readRegister@recievedData,w
 18929  3732  00F5               	movwf	?_readRegister
 18930  3733  0008               	return
 18931  3734                     __end_of_readRegister:	
 18932                           
 18933                           	psect	text63
 18934  33F5                     __ptext63:	
 18935 ;; *************** function _send_I2C_NACK *****************
 18936 ;; Defined at:
 18937 ;;		line 91 in file "I2C.c"
 18938 ;; Parameters:    Size  Location     Type
 18939 ;;		None
 18940 ;; Auto vars:     Size  Location     Type
 18941 ;;		None
 18942 ;; Return value:  Size  Location     Type
 18943 ;;                  1    wreg      void 
 18944 ;; Registers used:
 18945 ;;		None
 18946 ;; Tracked objects:
 18947 ;;		On entry : 0/0
 18948 ;;		On exit  : 0/0
 18949 ;;		Unchanged: 0/0
 18950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18955 ;;Total ram usage:        0 bytes
 18956 ;; Hardware stack levels used:    1
 18957 ;; Hardware stack levels required when called:    1
 18958 ;; This function calls:
 18959 ;;		Nothing
 18960 ;; This function is called by:
 18961 ;;		_readRegister
 18962 ;; This function uses a non-reentrant model
 18963 ;;
 18964                           
 18965                           
 18966                           ;psect for function _send_I2C_NACK
 18967  33F5                     _send_I2C_NACK:	
 18968                           
 18969                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 18970                           
 18971                           ;incstack = 0
 18972                           ; Regs used in _send_I2C_NACK: []
 18973  33F5  0020               	movlb	0	; select bank0
 18974  33F6  1191               	bcf	17,3	;volatile
 18975                           
 18976                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 18977  33F7  0024               	movlb	4	; select bank4
 18978  33F8  1696               	bsf	22,5	;volatile
 18979                           
 18980                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 18981  33F9  1616               	bsf	22,4	;volatile
 18982  33FA                     l320:	
 18983                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 18984                           
 18985  33FA  0020               	movlb	0	; select bank0
 18986  33FB  1991               	btfsc	17,3	;volatile
 18987  33FC  0008               	return
 18988  33FD  2BFA               	goto	l320
 18989  33FE                     __end_of_send_I2C_NACK:	
 18990                           
 18991                           	psect	text64
 18992  3443                     __ptext64:	
 18993 ;; *************** function _read_I2C_data *****************
 18994 ;; Defined at:
 18995 ;;		line 43 in file "I2C.c"
 18996 ;; Parameters:    Size  Location     Type
 18997 ;;		None
 18998 ;; Auto vars:     Size  Location     Type
 18999 ;;		None
 19000 ;; Return value:  Size  Location     Type
 19001 ;;                  2    1[COMMON] unsigned int 
 19002 ;; Registers used:
 19003 ;;		wreg
 19004 ;; Tracked objects:
 19005 ;;		On entry : 0/0
 19006 ;;		On exit  : 0/0
 19007 ;;		Unchanged: 0/0
 19008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19011 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19012 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19013 ;;Total ram usage:        4 bytes
 19014 ;; Hardware stack levels used:    1
 19015 ;; Hardware stack levels required when called:    1
 19016 ;; This function calls:
 19017 ;;		Nothing
 19018 ;; This function is called by:
 19019 ;;		_readRegister
 19020 ;; This function uses a non-reentrant model
 19021 ;;
 19022                           
 19023                           
 19024                           ;psect for function _read_I2C_data
 19025  3443                     _read_I2C_data:	
 19026                           
 19027                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 19028                           
 19029                           ;incstack = 0
 19030                           ; Regs used in _read_I2C_data: [wreg]
 19031  3443  0020               	movlb	0	; select bank0
 19032  3444  1191               	bcf	17,3	;volatile
 19033                           
 19034                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 19035  3445  0024               	movlb	4	; select bank4
 19036  3446  1596               	bsf	22,3	;volatile
 19037  3447                     l284:	
 19038                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 19039                           
 19040  3447  0020               	movlb	0	; select bank0
 19041  3448  1D91               	btfss	17,3	;volatile
 19042  3449  2C47               	goto	l284
 19043                           
 19044                           ;I2C.c: 47:     return (SSPBUF);
 19045  344A  0024               	movlb	4	; select bank4
 19046  344B  0811               	movf	17,w	;volatile
 19047  344C  00F3               	movwf	??_read_I2C_data
 19048  344D  01F4               	clrf	??_read_I2C_data+1
 19049  344E  0873               	movf	??_read_I2C_data,w
 19050  344F  00F1               	movwf	?_read_I2C_data
 19051  3450  0874               	movf	??_read_I2C_data+1,w
 19052  3451  00F2               	movwf	?_read_I2C_data+1
 19053  3452  0008               	return
 19054  3453                     __end_of_read_I2C_data:	
 19055                           
 19056                           	psect	text65
 19057  3583                     __ptext65:	
 19058 ;; *************** function _I2C_writeRegister *****************
 19059 ;; Defined at:
 19060 ;;		line 104 in file "I2C.c"
 19061 ;; Parameters:    Size  Location     Type
 19062 ;;  slaveAddress    2    5[COMMON] int 
 19063 ;;  regAddress      2    7[COMMON] int 
 19064 ;;  data            2    9[COMMON] int 
 19065 ;; Auto vars:     Size  Location     Type
 19066 ;;		None
 19067 ;; Return value:  Size  Location     Type
 19068 ;;                  1    wreg      void 
 19069 ;; Registers used:
 19070 ;;		wreg, status,2, status,0, pclath, cstack
 19071 ;; Tracked objects:
 19072 ;;		On entry : 0/0
 19073 ;;		On exit  : 0/0
 19074 ;;		Unchanged: 0/0
 19075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19076 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19079 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19080 ;;Total ram usage:        6 bytes
 19081 ;; Hardware stack levels used:    1
 19082 ;; Hardware stack levels required when called:    2
 19083 ;; This function calls:
 19084 ;;		_send_I2C_controlByte
 19085 ;;		_send_I2C_data
 19086 ;;		_send_I2C_startBit
 19087 ;;		_send_I2C_stopBit
 19088 ;; This function is called by:
 19089 ;;		_beginAFEcommunication
 19090 ;;		_setShortCircuitProtection
 19091 ;;		_setOverCurrentDischargeProtection
 19092 ;;		_setCellUndervoltageProtection
 19093 ;;		_setCellOvervoltageProtection
 19094 ;;		_updateCurrent
 19095 ;;		_enableDischarging
 19096 ;;		_enableCharging
 19097 ;; This function uses a non-reentrant model
 19098 ;;
 19099                           
 19100                           
 19101                           ;psect for function _I2C_writeRegister
 19102  3583                     _I2C_writeRegister:	
 19103                           
 19104                           ;I2C.c: 105:     send_I2C_startBit();
 19105                           
 19106                           ;incstack = 0
 19107                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 19108  3583  31B3  23DB  31B5   	fcall	_send_I2C_startBit
 19109                           
 19110                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 19111  3586  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 19112  3587  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19113  3588  0875               	movf	I2C_writeRegister@slaveAddress,w
 19114  3589  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19115  358A  3000               	movlw	0
 19116  358B  00F3               	movwf	send_I2C_controlByte@RW_bit
 19117  358C  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19118  358D  31B3  23FE  31B5   	fcall	_send_I2C_controlByte
 19119                           
 19120                           ;I2C.c: 107:     send_I2C_data(regAddress);
 19121  3590  0878               	movf	I2C_writeRegister@regAddress+1,w
 19122  3591  00F2               	movwf	send_I2C_data@databyte+1
 19123  3592  0877               	movf	I2C_writeRegister@regAddress,w
 19124  3593  00F1               	movwf	send_I2C_data@databyte
 19125  3594  31B3  23EC  31B5   	fcall	_send_I2C_data
 19126                           
 19127                           ;I2C.c: 108:     send_I2C_data(data);
 19128  3597  087A               	movf	I2C_writeRegister@data+1,w
 19129  3598  00F2               	movwf	send_I2C_data@databyte+1
 19130  3599  0879               	movf	I2C_writeRegister@data,w
 19131  359A  00F1               	movwf	send_I2C_data@databyte
 19132  359B  31B3  23EC  31B5   	fcall	_send_I2C_data
 19133                           
 19134                           ;I2C.c: 109:     send_I2C_stopBit();
 19135  359E  31A8  2000         	fcall	_send_I2C_stopBit
 19136  35A0  0008               	return
 19137  35A1                     __end_of_I2C_writeRegister:	
 19138                           
 19139                           	psect	text66
 19140  2800                     __ptext66:	
 19141 ;; *************** function _send_I2C_stopBit *****************
 19142 ;; Defined at:
 19143 ;;		line 78 in file "I2C.c"
 19144 ;; Parameters:    Size  Location     Type
 19145 ;;		None
 19146 ;; Auto vars:     Size  Location     Type
 19147 ;;		None
 19148 ;; Return value:  Size  Location     Type
 19149 ;;                  1    wreg      void 
 19150 ;; Registers used:
 19151 ;;		None
 19152 ;; Tracked objects:
 19153 ;;		On entry : 0/0
 19154 ;;		On exit  : 0/0
 19155 ;;		Unchanged: 0/0
 19156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19161 ;;Total ram usage:        0 bytes
 19162 ;; Hardware stack levels used:    1
 19163 ;; Hardware stack levels required when called:    1
 19164 ;; This function calls:
 19165 ;;		Nothing
 19166 ;; This function is called by:
 19167 ;;		_I2C_writeRegister
 19168 ;;		_readRegister
 19169 ;; This function uses a non-reentrant model
 19170 ;;
 19171                           
 19172                           
 19173                           ;psect for function _send_I2C_stopBit
 19174  2800                     _send_I2C_stopBit:	
 19175                           
 19176                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 19177                           
 19178                           ;incstack = 0
 19179                           ; Regs used in _send_I2C_stopBit: []
 19180  2800  0020               	movlb	0	; select bank0
 19181  2801  1191               	bcf	17,3	;volatile
 19182                           
 19183                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 19184  2802  0024               	movlb	4	; select bank4
 19185  2803  1516               	bsf	22,2	;volatile
 19186  2804                     l308:	
 19187                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 19188                           
 19189  2804  0020               	movlb	0	; select bank0
 19190  2805  1991               	btfsc	17,3	;volatile
 19191  2806  0008               	return
 19192  2807  2804               	goto	l308
 19193  2808                     __end_of_send_I2C_stopBit:	
 19194                           
 19195                           	psect	text67
 19196  33DB                     __ptext67:	
 19197 ;; *************** function _send_I2C_startBit *****************
 19198 ;; Defined at:
 19199 ;;		line 65 in file "I2C.c"
 19200 ;; Parameters:    Size  Location     Type
 19201 ;;		None
 19202 ;; Auto vars:     Size  Location     Type
 19203 ;;		None
 19204 ;; Return value:  Size  Location     Type
 19205 ;;                  1    wreg      void 
 19206 ;; Registers used:
 19207 ;;		None
 19208 ;; Tracked objects:
 19209 ;;		On entry : 0/0
 19210 ;;		On exit  : 0/0
 19211 ;;		Unchanged: 0/0
 19212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19217 ;;Total ram usage:        0 bytes
 19218 ;; Hardware stack levels used:    1
 19219 ;; Hardware stack levels required when called:    1
 19220 ;; This function calls:
 19221 ;;		Nothing
 19222 ;; This function is called by:
 19223 ;;		_I2C_writeRegister
 19224 ;;		_readRegister
 19225 ;; This function uses a non-reentrant model
 19226 ;;
 19227                           
 19228                           
 19229                           ;psect for function _send_I2C_startBit
 19230  33DB                     _send_I2C_startBit:	
 19231                           
 19232                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 19233                           
 19234                           ;incstack = 0
 19235                           ; Regs used in _send_I2C_startBit: []
 19236  33DB  0020               	movlb	0	; select bank0
 19237  33DC  1191               	bcf	17,3	;volatile
 19238                           
 19239                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 19240  33DD  0024               	movlb	4	; select bank4
 19241  33DE  1416               	bsf	22,0	;volatile
 19242  33DF                     l296:	
 19243                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 19244                           
 19245  33DF  0020               	movlb	0	; select bank0
 19246  33E0  1991               	btfsc	17,3	;volatile
 19247  33E1  0008               	return
 19248  33E2  2BDF               	goto	l296
 19249  33E3                     __end_of_send_I2C_startBit:	
 19250                           
 19251                           	psect	text68
 19252  33EC                     __ptext68:	
 19253 ;; *************** function _send_I2C_data *****************
 19254 ;; Defined at:
 19255 ;;		line 33 in file "I2C.c"
 19256 ;; Parameters:    Size  Location     Type
 19257 ;;  databyte        2    1[COMMON] unsigned int 
 19258 ;; Auto vars:     Size  Location     Type
 19259 ;;		None
 19260 ;; Return value:  Size  Location     Type
 19261 ;;                  1    wreg      void 
 19262 ;; Registers used:
 19263 ;;		wreg
 19264 ;; Tracked objects:
 19265 ;;		On entry : 0/0
 19266 ;;		On exit  : 0/0
 19267 ;;		Unchanged: 0/0
 19268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19272 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19273 ;;Total ram usage:        2 bytes
 19274 ;; Hardware stack levels used:    1
 19275 ;; Hardware stack levels required when called:    1
 19276 ;; This function calls:
 19277 ;;		Nothing
 19278 ;; This function is called by:
 19279 ;;		_I2C_writeRegister
 19280 ;;		_readRegister
 19281 ;; This function uses a non-reentrant model
 19282 ;;
 19283                           
 19284                           
 19285                           ;psect for function _send_I2C_data
 19286  33EC                     _send_I2C_data:	
 19287                           
 19288                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 19289                           
 19290                           ;incstack = 0
 19291                           ; Regs used in _send_I2C_data: [wreg]
 19292  33EC  0020               	movlb	0	; select bank0
 19293  33ED  1191               	bcf	17,3	;volatile
 19294                           
 19295                           ;I2C.c: 35:     SSPBUF = databyte;
 19296  33EE  0871               	movf	send_I2C_data@databyte,w
 19297  33EF  0024               	movlb	4	; select bank4
 19298  33F0  0091               	movwf	17	;volatile
 19299  33F1                     l278:	
 19300                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 19301                           
 19302  33F1  0020               	movlb	0	; select bank0
 19303  33F2  1991               	btfsc	17,3	;volatile
 19304  33F3  0008               	return
 19305  33F4  2BF1               	goto	l278
 19306  33F5                     __end_of_send_I2C_data:	
 19307                           
 19308                           	psect	text69
 19309  33FE                     __ptext69:	
 19310 ;; *************** function _send_I2C_controlByte *****************
 19311 ;; Defined at:
 19312 ;;		line 53 in file "I2C.c"
 19313 ;; Parameters:    Size  Location     Type
 19314 ;;  BlockAddress    2    1[COMMON] unsigned int 
 19315 ;;  RW_bit          2    3[COMMON] unsigned int 
 19316 ;; Auto vars:     Size  Location     Type
 19317 ;;		None
 19318 ;; Return value:  Size  Location     Type
 19319 ;;                  1    wreg      void 
 19320 ;; Registers used:
 19321 ;;		wreg, status,2, status,0
 19322 ;; Tracked objects:
 19323 ;;		On entry : 0/0
 19324 ;;		On exit  : 0/0
 19325 ;;		Unchanged: 0/0
 19326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19327 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19330 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19331 ;;Total ram usage:        4 bytes
 19332 ;; Hardware stack levels used:    1
 19333 ;; Hardware stack levels required when called:    1
 19334 ;; This function calls:
 19335 ;;		Nothing
 19336 ;; This function is called by:
 19337 ;;		_I2C_writeRegister
 19338 ;;		_readRegister
 19339 ;; This function uses a non-reentrant model
 19340 ;;
 19341                           
 19342                           
 19343                           ;psect for function _send_I2C_controlByte
 19344  33FE                     _send_I2C_controlByte:	
 19345                           
 19346                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 19347                           
 19348                           ;incstack = 0
 19349                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 19350  33FE  0020               	movlb	0	; select bank0
 19351  33FF  1191               	bcf	17,3	;volatile
 19352                           
 19353                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 19354  3400  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 19355  3401  0773               	addwf	send_I2C_controlByte@RW_bit,w
 19356  3402  0024               	movlb	4	; select bank4
 19357  3403  0091               	movwf	17	;volatile
 19358  3404                     l290:	
 19359                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 19360                           
 19361  3404  0020               	movlb	0	; select bank0
 19362  3405  1991               	btfsc	17,3	;volatile
 19363  3406  0008               	return
 19364  3407  2C04               	goto	l290
 19365  3408                     __end_of_send_I2C_controlByte:	
 19366                           
 19367                           	psect	text70
 19368  341C                     __ptext70:	
 19369 ;; *************** function _init_TMR1 *****************
 19370 ;; Defined at:
 19371 ;;		line 189 in file "main.c"
 19372 ;; Parameters:    Size  Location     Type
 19373 ;;		None
 19374 ;; Auto vars:     Size  Location     Type
 19375 ;;		None
 19376 ;; Return value:  Size  Location     Type
 19377 ;;                  1    wreg      void 
 19378 ;; Registers used:
 19379 ;;		wreg, status,2, status,0
 19380 ;; Tracked objects:
 19381 ;;		On entry : 0/0
 19382 ;;		On exit  : 0/0
 19383 ;;		Unchanged: 0/0
 19384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19389 ;;Total ram usage:        0 bytes
 19390 ;; Hardware stack levels used:    1
 19391 ;; Hardware stack levels required when called:    1
 19392 ;; This function calls:
 19393 ;;		Nothing
 19394 ;; This function is called by:
 19395 ;;		_main
 19396 ;; This function uses a non-reentrant model
 19397 ;;
 19398                           
 19399                           
 19400                           ;psect for function _init_TMR1
 19401  341C                     _init_TMR1:	
 19402                           
 19403                           ;main.c: 192:     T1CONbits.T1CKPS = 0b00;
 19404                           
 19405                           ;incstack = 0
 19406                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 19407  341C  30CF               	movlw	-49
 19408  341D  0020               	movlb	0	; select bank0
 19409  341E  0598               	andwf	24,f	;volatile
 19410                           
 19411                           ;main.c: 194:     TMR1 = 0;
 19412  341F  0196               	clrf	22	;volatile
 19413  3420  0197               	clrf	23	;volatile
 19414                           
 19415                           ;main.c: 196:     T1CONbits.TMR1ON = 1;
 19416  3421  1418               	bsf	24,0	;volatile
 19417                           
 19418                           ;main.c: 198:     PIE1bits.TMR1IE = 1;
 19419  3422  0021               	movlb	1	; select bank1
 19420  3423  1411               	bsf	17,0	;volatile
 19421                           
 19422                           ;main.c: 200:     INTCONbits.PEIE = 1;
 19423  3424  170B               	bsf	11,6	;volatile
 19424                           
 19425                           ;main.c: 202:     (INTCONbits.GIE = 1);
 19426  3425  178B               	bsf	11,7	;volatile
 19427  3426  0008               	return
 19428  3427                     __end_of_init_TMR1:	
 19429                           
 19430                           	psect	text71
 19431  1800                     __ptext71:	
 19432 ;; *************** function _init_RGB *****************
 19433 ;; Defined at:
 19434 ;;		line 6 in file "RGB.c"
 19435 ;; Parameters:    Size  Location     Type
 19436 ;;		None
 19437 ;; Auto vars:     Size  Location     Type
 19438 ;;		None
 19439 ;; Return value:  Size  Location     Type
 19440 ;;                  1    wreg      void 
 19441 ;; Registers used:
 19442 ;;		None
 19443 ;; Tracked objects:
 19444 ;;		On entry : 0/0
 19445 ;;		On exit  : 0/0
 19446 ;;		Unchanged: 0/0
 19447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19452 ;;Total ram usage:        0 bytes
 19453 ;; Hardware stack levels used:    1
 19454 ;; Hardware stack levels required when called:    1
 19455 ;; This function calls:
 19456 ;;		Nothing
 19457 ;; This function is called by:
 19458 ;;		_main
 19459 ;; This function uses a non-reentrant model
 19460 ;;
 19461                           
 19462                           
 19463                           ;psect for function _init_RGB
 19464  1800                     _init_RGB:	
 19465                           
 19466                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 19467                           
 19468                           ;incstack = 0
 19469                           ; Regs used in _init_RGB: []
 19470  1800  0022               	movlb	2	; select bank2
 19471  1801  160C               	bsf	12,4	;volatile
 19472                           
 19473                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 19474  1802  168C               	bsf	12,5	;volatile
 19475                           
 19476                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 19477  1803  1410               	bsf	16,0	;volatile
 19478  1804  0008               	return
 19479  1805                     __end_of_init_RGB:	
 19480                           
 19481                           	psect	text72
 19482  3433                     __ptext72:	
 19483 ;; *************** function _init_I2C *****************
 19484 ;; Defined at:
 19485 ;;		line 10 in file "I2C.c"
 19486 ;; Parameters:    Size  Location     Type
 19487 ;;		None
 19488 ;; Auto vars:     Size  Location     Type
 19489 ;;		None
 19490 ;; Return value:  Size  Location     Type
 19491 ;;                  1    wreg      void 
 19492 ;; Registers used:
 19493 ;;		wreg, status,2, status,0
 19494 ;; Tracked objects:
 19495 ;;		On entry : 0/0
 19496 ;;		On exit  : 0/0
 19497 ;;		Unchanged: 0/0
 19498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19503 ;;Total ram usage:        1 bytes
 19504 ;; Hardware stack levels used:    1
 19505 ;; Hardware stack levels required when called:    1
 19506 ;; This function calls:
 19507 ;;		Nothing
 19508 ;; This function is called by:
 19509 ;;		_main
 19510 ;; This function uses a non-reentrant model
 19511 ;;
 19512                           
 19513                           
 19514                           ;psect for function _init_I2C
 19515  3433                     _init_I2C:	
 19516                           
 19517                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 19518                           
 19519                           ;incstack = 0
 19520                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 19521  3433  0024               	movlb	4	; select bank4
 19522  3434  0815               	movf	21,w	;volatile
 19523  3435  39F0               	andlw	-16
 19524  3436  3808               	iorlw	8
 19525  3437  0095               	movwf	21	;volatile
 19526                           
 19527                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 19528  3438  1695               	bsf	21,5	;volatile
 19529                           
 19530                           ;I2C.c: 24:     SSPADD = 39;
 19531  3439  3027               	movlw	39
 19532  343A  0092               	movwf	18	;volatile
 19533                           
 19534                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 19535  343B  3034               	movlw	52
 19536  343C  00F1               	movwf	??_init_I2C
 19537  343D  30F2               	movlw	242
 19538  343E                     u11527:	
 19539  343E  0B89               	decfsz	9,f
 19540  343F  2C3E               	goto	u11527
 19541  3440  0BF1               	decfsz	??_init_I2C,f
 19542  3441  2C3E               	goto	u11527
 19543  3442  0008               	return
 19544  3443                     __end_of_init_I2C:	
 19545                           
 19546                           	psect	text73
 19547  0808                     __ptext73:	
 19548 ;; *************** function _init_GPIO *****************
 19549 ;; Defined at:
 19550 ;;		line 206 in file "main.c"
 19551 ;; Parameters:    Size  Location     Type
 19552 ;;		None
 19553 ;; Auto vars:     Size  Location     Type
 19554 ;;		None
 19555 ;; Return value:  Size  Location     Type
 19556 ;;                  1    wreg      void 
 19557 ;; Registers used:
 19558 ;;		wreg, status,2, status,0
 19559 ;; Tracked objects:
 19560 ;;		On entry : 0/0
 19561 ;;		On exit  : 0/0
 19562 ;;		Unchanged: 0/0
 19563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19568 ;;Total ram usage:        0 bytes
 19569 ;; Hardware stack levels used:    1
 19570 ;; Hardware stack levels required when called:    1
 19571 ;; This function calls:
 19572 ;;		Nothing
 19573 ;; This function is called by:
 19574 ;;		_main
 19575 ;; This function uses a non-reentrant model
 19576 ;;
 19577                           
 19578                           
 19579                           ;psect for function _init_GPIO
 19580  0808                     _init_GPIO:	
 19581                           
 19582                           ;main.c: 212:     TRISBbits.TRISB2 = 0;
 19583                           
 19584                           ;incstack = 0
 19585                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 19586  0808  0021               	movlb	1	; select bank1
 19587  0809  110D               	bcf	13,2	;volatile
 19588                           
 19589                           ;main.c: 213:     ANSELBbits.ANSB2 = 0;
 19590  080A  0023               	movlb	3	; select bank3
 19591  080B  110D               	bcf	13,2	;volatile
 19592                           
 19593                           ;main.c: 214:     TRISBbits.TRISB3 = 1;
 19594  080C  0021               	movlb	1	; select bank1
 19595  080D  158D               	bsf	13,3	;volatile
 19596                           
 19597                           ;main.c: 215:     ANSELBbits.ANSB3 = 0;
 19598  080E  0023               	movlb	3	; select bank3
 19599  080F  118D               	bcf	13,3	;volatile
 19600                           
 19601                           ;main.c: 220:     ANSELCbits.ANSC4 = 0;
 19602  0810  120E               	bcf	14,4	;volatile
 19603                           
 19604                           ;main.c: 221:     ANSELCbits.ANSC5 = 0;
 19605  0811  128E               	bcf	14,5	;volatile
 19606                           
 19607                           ;main.c: 222:     TRISCbits.TRISC4 = 1;
 19608  0812  0021               	movlb	1	; select bank1
 19609  0813  160E               	bsf	14,4	;volatile
 19610                           
 19611                           ;main.c: 223:     TRISCbits.TRISC5 = 1;
 19612  0814  168E               	bsf	14,5	;volatile
 19613                           
 19614                           ;main.c: 232:     TRISAbits.TRISA4 = 0;
 19615  0815  120C               	bcf	12,4	;volatile
 19616                           
 19617                           ;main.c: 233:     TRISAbits.TRISA5 = 0;
 19618  0816  128C               	bcf	12,5	;volatile
 19619                           
 19620                           ;main.c: 234:     TRISEbits.TRISE0 = 0;
 19621  0817  1010               	bcf	16,0	;volatile
 19622                           
 19623                           ;main.c: 239:     TRISAbits.TRISA3 = 0;
 19624  0818  118C               	bcf	12,3	;volatile
 19625                           
 19626                           ;main.c: 240:     LATAbits.LATA3 = 0;
 19627  0819  0022               	movlb	2	; select bank2
 19628  081A  118C               	bcf	12,3	;volatile
 19629                           
 19630                           ;main.c: 246:     PPSLOCK = 0x55;
 19631  081B  3055               	movlw	85
 19632  081C  003C               	movlb	28	; select bank28
 19633  081D  008F               	movwf	15	;volsfr
 19634                           
 19635                           ;main.c: 247:     PPSLOCK = 0xAA;
 19636  081E  30AA               	movlw	170
 19637  081F  008F               	movwf	15	;volsfr
 19638                           
 19639                           ;main.c: 248:     PPSLOCKbits.PPSLOCKED = 0x00;
 19640  0820  100F               	bcf	15,0	;volsfr
 19641                           
 19642                           ;main.c: 252:     RC4PPSbits.RC4PPS = 0x0011;
 19643  0821  003D               	movlb	29	; select bank29
 19644  0822  0824               	movf	36,w	;volatile
 19645  0823  39E0               	andlw	-32
 19646  0824  3811               	iorlw	17
 19647  0825  00A4               	movwf	36	;volatile
 19648                           
 19649                           ;main.c: 253:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 19650  0826  003C               	movlb	28	; select bank28
 19651  0827  0821               	movf	33,w	;volatile
 19652  0828  39E0               	andlw	-32
 19653  0829  3814               	iorlw	20
 19654  082A  00A1               	movwf	33	;volatile
 19655                           
 19656                           ;main.c: 254:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 19657  082B  0820               	movf	32,w	;volatile
 19658  082C  39E0               	andlw	-32
 19659  082D  3815               	iorlw	21
 19660  082E  00A0               	movwf	32	;volatile
 19661                           
 19662                           ;main.c: 255:     RC5PPSbits.RC5PPS = 0x0010;
 19663  082F  003D               	movlb	29	; select bank29
 19664  0830  0825               	movf	37,w	;volatile
 19665  0831  39E0               	andlw	-32
 19666  0832  3810               	iorlw	16
 19667  0833  00A5               	movwf	37	;volatile
 19668                           
 19669                           ;main.c: 258:     RB2PPSbits.RB2PPS = 0x14;
 19670  0834  081A               	movf	26,w	;volatile
 19671  0835  39E0               	andlw	-32
 19672  0836  3814               	iorlw	20
 19673  0837  009A               	movwf	26	;volatile
 19674                           
 19675                           ;main.c: 259:     RXPPSbits.RXPPS = 0x0B;
 19676  0838  003C               	movlb	28	; select bank28
 19677  0839  0824               	movf	36,w	;volatile
 19678  083A  39E0               	andlw	-32
 19679  083B  380B               	iorlw	11
 19680  083C  00A4               	movwf	36	;volatile
 19681                           
 19682                           ;main.c: 261:     PPSLOCK = 0x55;
 19683  083D  3055               	movlw	85
 19684  083E  008F               	movwf	15	;volsfr
 19685                           
 19686                           ;main.c: 262:     PPSLOCK = 0xAA;
 19687  083F  30AA               	movlw	170
 19688  0840  008F               	movwf	15	;volsfr
 19689                           
 19690                           ;main.c: 263:     PPSLOCKbits.PPSLOCKED = 0x01;
 19691  0841  140F               	bsf	15,0	;volsfr
 19692  0842  0008               	return
 19693  0843                     __end_of_init_GPIO:	
 19694                           
 19695                           	psect	text74
 19696  33D5                     __ptext74:	
 19697 ;; *************** function _initWDT *****************
 19698 ;; Defined at:
 19699 ;;		line 267 in file "main.c"
 19700 ;; Parameters:    Size  Location     Type
 19701 ;;		None
 19702 ;; Auto vars:     Size  Location     Type
 19703 ;;		None
 19704 ;; Return value:  Size  Location     Type
 19705 ;;                  1    wreg      void 
 19706 ;; Registers used:
 19707 ;;		wreg, status,2, status,0
 19708 ;; Tracked objects:
 19709 ;;		On entry : 0/0
 19710 ;;		On exit  : 0/0
 19711 ;;		Unchanged: 0/0
 19712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19717 ;;Total ram usage:        0 bytes
 19718 ;; Hardware stack levels used:    1
 19719 ;; Hardware stack levels required when called:    1
 19720 ;; This function calls:
 19721 ;;		Nothing
 19722 ;; This function is called by:
 19723 ;;		_main
 19724 ;; This function uses a non-reentrant model
 19725 ;;
 19726                           
 19727                           
 19728                           ;psect for function _initWDT
 19729  33D5                     _initWDT:	
 19730                           
 19731                           ;main.c: 269:     WDTCONbits.WDTPS = 0b01101;
 19732                           
 19733                           ;incstack = 0
 19734                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 19735  33D5  0021               	movlb	1	; select bank1
 19736  33D6  0817               	movf	23,w	;volatile
 19737  33D7  39C1               	andlw	-63
 19738  33D8  381A               	iorlw	26
 19739  33D9  0097               	movwf	23	;volatile
 19740  33DA  0008               	return
 19741  33DB                     __end_of_initWDT:	
 19742                           
 19743                           	psect	text75
 19744  07FD                     __ptext75:	
 19745 ;; *************** function _initClock *****************
 19746 ;; Defined at:
 19747 ;;		line 180 in file "main.c"
 19748 ;; Parameters:    Size  Location     Type
 19749 ;;		None
 19750 ;; Auto vars:     Size  Location     Type
 19751 ;;		None
 19752 ;; Return value:  Size  Location     Type
 19753 ;;                  1    wreg      void 
 19754 ;; Registers used:
 19755 ;;		status,2, status,0, pclath, cstack
 19756 ;; Tracked objects:
 19757 ;;		On entry : 0/0
 19758 ;;		On exit  : 0/0
 19759 ;;		Unchanged: 0/0
 19760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19764 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19765 ;;Total ram usage:        0 bytes
 19766 ;; Hardware stack levels used:    1
 19767 ;; Hardware stack levels required when called:    2
 19768 ;; This function calls:
 19769 ;;		_internal_16
 19770 ;; This function is called by:
 19771 ;;		_main
 19772 ;; This function uses a non-reentrant model
 19773 ;;
 19774                           
 19775                           
 19776                           ;psect for function _initClock
 19777  07FD                     _initClock:	
 19778                           
 19779                           ;main.c: 182:     internal_16();
 19780                           
 19781                           ;incstack = 0
 19782                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 19783  07FD  31B3  23E3         	fcall	_internal_16
 19784  07FF  0008               	return
 19785  0800                     __end_of_initClock:	
 19786                           
 19787                           	psect	text76
 19788  33E3                     __ptext76:	
 19789 ;; *************** function _internal_16 *****************
 19790 ;; Defined at:
 19791 ;;		line 26 in file "pic16f1719_internals.c"
 19792 ;; Parameters:    Size  Location     Type
 19793 ;;		None
 19794 ;; Auto vars:     Size  Location     Type
 19795 ;;		None
 19796 ;; Return value:  Size  Location     Type
 19797 ;;                  1    wreg      void 
 19798 ;; Registers used:
 19799 ;;		None
 19800 ;; Tracked objects:
 19801 ;;		On entry : 0/0
 19802 ;;		On exit  : 0/0
 19803 ;;		Unchanged: 0/0
 19804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19809 ;;Total ram usage:        0 bytes
 19810 ;; Hardware stack levels used:    1
 19811 ;; Hardware stack levels required when called:    1
 19812 ;; This function calls:
 19813 ;;		Nothing
 19814 ;; This function is called by:
 19815 ;;		_initClock
 19816 ;; This function uses a non-reentrant model
 19817 ;;
 19818                           
 19819                           
 19820                           ;psect for function _internal_16
 19821  33E3                     _internal_16:	
 19822                           
 19823                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 19824                           
 19825                           ;incstack = 0
 19826                           ; Regs used in _internal_16: []
 19827  33E3  0021               	movlb	1	; select bank1
 19828  33E4  1019               	bcf	25,0	;volatile
 19829                           
 19830                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 19831  33E5  1099               	bcf	25,1	;volatile
 19832                           
 19833                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 19834  33E6  1599               	bsf	25,3	;volatile
 19835                           
 19836                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 19837  33E7  1619               	bsf	25,4	;volatile
 19838                           
 19839                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 19840  33E8  1699               	bsf	25,5	;volatile
 19841                           
 19842                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 19843  33E9  1719               	bsf	25,6	;volatile
 19844                           
 19845                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 19846  33EA  1399               	bcf	25,7	;volatile
 19847  33EB  0008               	return
 19848  33EC                     __end_of_internal_16:	
 19849                           
 19850                           	psect	text77
 19851  2D1A                     __ptext77:	
 19852 ;; *************** function _EUSART_Initialize *****************
 19853 ;; Defined at:
 19854 ;;		line 6 in file "EUSART.c"
 19855 ;; Parameters:    Size  Location     Type
 19856 ;;  baudrate        4   18[BANK0 ] const long 
 19857 ;; Auto vars:     Size  Location     Type
 19858 ;;  x               2   10[COMMON] unsigned int 
 19859 ;; Return value:  Size  Location     Type
 19860 ;;                  1    wreg      unsigned char 
 19861 ;; Registers used:
 19862 ;;		wreg, status,2, status,0, pclath, cstack
 19863 ;; Tracked objects:
 19864 ;;		On entry : 0/0
 19865 ;;		On exit  : 0/0
 19866 ;;		Unchanged: 0/0
 19867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19868 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19869 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19870 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19871 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19872 ;;Total ram usage:       18 bytes
 19873 ;; Hardware stack levels used:    1
 19874 ;; Hardware stack levels required when called:    2
 19875 ;; This function calls:
 19876 ;;		___aldiv
 19877 ;; This function is called by:
 19878 ;;		_main
 19879 ;; This function uses a non-reentrant model
 19880 ;;
 19881                           
 19882                           
 19883                           ;psect for function _EUSART_Initialize
 19884  2D1A                     _EUSART_Initialize:	
 19885                           
 19886                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 19887                           
 19888                           ;incstack = 0
 19889                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 19890  2D1A  0020               	movlb	0	; select bank0
 19891  2D1B  0832               	movf	EUSART_Initialize@baudrate,w
 19892  2D1C  00B6               	movwf	??_EUSART_Initialize
 19893  2D1D  0833               	movf	EUSART_Initialize@baudrate+1,w
 19894  2D1E  00B7               	movwf	??_EUSART_Initialize+1
 19895  2D1F  0834               	movf	EUSART_Initialize@baudrate+2,w
 19896  2D20  00B8               	movwf	??_EUSART_Initialize+2
 19897  2D21  0835               	movf	EUSART_Initialize@baudrate+3,w
 19898  2D22  00B9               	movwf	??_EUSART_Initialize+3
 19899  2D23  3006               	movlw	6
 19900  2D24                     u11405:	
 19901  2D24  35B6               	lslf	??_EUSART_Initialize,f
 19902  2D25  0DB7               	rlf	??_EUSART_Initialize+1,f
 19903  2D26  0DB8               	rlf	??_EUSART_Initialize+2,f
 19904  2D27  0DB9               	rlf	??_EUSART_Initialize+3,f
 19905  2D28  0B89               	decfsz	9,f
 19906  2D29  2D24               	goto	u11405
 19907  2D2A  0839               	movf	??_EUSART_Initialize+3,w
 19908  2D2B  00A7               	movwf	___aldiv@divisor+3
 19909  2D2C  0838               	movf	??_EUSART_Initialize+2,w
 19910  2D2D  00A6               	movwf	___aldiv@divisor+2
 19911  2D2E  0837               	movf	??_EUSART_Initialize+1,w
 19912  2D2F  00A5               	movwf	___aldiv@divisor+1
 19913  2D30  0836               	movf	??_EUSART_Initialize,w
 19914  2D31  00A4               	movwf	___aldiv@divisor
 19915  2D32  0832               	movf	EUSART_Initialize@baudrate,w
 19916  2D33  00BA               	movwf	??_EUSART_Initialize+4
 19917  2D34  0833               	movf	EUSART_Initialize@baudrate+1,w
 19918  2D35  00BB               	movwf	??_EUSART_Initialize+5
 19919  2D36  0834               	movf	EUSART_Initialize@baudrate+2,w
 19920  2D37  00BC               	movwf	??_EUSART_Initialize+6
 19921  2D38  0835               	movf	EUSART_Initialize@baudrate+3,w
 19922  2D39  00BD               	movwf	??_EUSART_Initialize+7
 19923  2D3A  3006               	movlw	6
 19924  2D3B                     u11415:	
 19925  2D3B  35BA               	lslf	??_EUSART_Initialize+4,f
 19926  2D3C  0DBB               	rlf	??_EUSART_Initialize+5,f
 19927  2D3D  0DBC               	rlf	??_EUSART_Initialize+6,f
 19928  2D3E  0DBD               	rlf	??_EUSART_Initialize+7,f
 19929  2D3F  0B89               	decfsz	9,f
 19930  2D40  2D3B               	goto	u11415
 19931  2D41  3000               	movlw	0
 19932  2D42  00BE               	movwf	??_EUSART_Initialize+8
 19933  2D43  3024               	movlw	36
 19934  2D44  00BF               	movwf	??_EUSART_Initialize+9
 19935  2D45  30F4               	movlw	244
 19936  2D46  00C0               	movwf	??_EUSART_Initialize+10
 19937  2D47  3000               	movlw	0
 19938  2D48  00C1               	movwf	??_EUSART_Initialize+11
 19939  2D49  083A               	movf	??_EUSART_Initialize+4,w
 19940  2D4A  02BE               	subwf	??_EUSART_Initialize+8,f
 19941  2D4B  083B               	movf	??_EUSART_Initialize+5,w
 19942  2D4C  3BBF               	subwfb	??_EUSART_Initialize+9,f
 19943  2D4D  083C               	movf	??_EUSART_Initialize+6,w
 19944  2D4E  3BC0               	subwfb	??_EUSART_Initialize+10,f
 19945  2D4F  083D               	movf	??_EUSART_Initialize+7,w
 19946  2D50  3BC1               	subwfb	??_EUSART_Initialize+11,f
 19947  2D51  0841               	movf	??_EUSART_Initialize+11,w
 19948  2D52  00AB               	movwf	___aldiv@dividend+3
 19949  2D53  0840               	movf	??_EUSART_Initialize+10,w
 19950  2D54  00AA               	movwf	___aldiv@dividend+2
 19951  2D55  083F               	movf	??_EUSART_Initialize+9,w
 19952  2D56  00A9               	movwf	___aldiv@dividend+1
 19953  2D57  083E               	movf	??_EUSART_Initialize+8,w
 19954  2D58  00A8               	movwf	___aldiv@dividend
 19955  2D59  31AB  23F7  31AD   	fcall	___aldiv
 19956  2D5C  0020               	movlb	0	; select bank0
 19957  2D5D  0825               	movf	?___aldiv+1,w
 19958  2D5E  00FB               	movwf	EUSART_Initialize@x+1
 19959  2D5F  0824               	movf	?___aldiv,w
 19960  2D60  00FA               	movwf	EUSART_Initialize@x
 19961                           
 19962                           ;EUSART.c: 10:  if(x>255)
 19963  2D61  3001               	movlw	1
 19964  2D62  027B               	subwf	EUSART_Initialize@x+1,w
 19965  2D63  3000               	movlw	0
 19966  2D64  1903               	skipnz
 19967  2D65  027A               	subwf	EUSART_Initialize@x,w
 19968  2D66  1C03               	skipc
 19969  2D67  2DB0               	goto	l8332
 19970                           
 19971                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 19972  2D68  0832               	movf	EUSART_Initialize@baudrate,w
 19973  2D69  00B6               	movwf	??_EUSART_Initialize
 19974  2D6A  0833               	movf	EUSART_Initialize@baudrate+1,w
 19975  2D6B  00B7               	movwf	??_EUSART_Initialize+1
 19976  2D6C  0834               	movf	EUSART_Initialize@baudrate+2,w
 19977  2D6D  00B8               	movwf	??_EUSART_Initialize+2
 19978  2D6E  0835               	movf	EUSART_Initialize@baudrate+3,w
 19979  2D6F  00B9               	movwf	??_EUSART_Initialize+3
 19980  2D70  3004               	movlw	4
 19981  2D71                     u11435:	
 19982  2D71  35B6               	lslf	??_EUSART_Initialize,f
 19983  2D72  0DB7               	rlf	??_EUSART_Initialize+1,f
 19984  2D73  0DB8               	rlf	??_EUSART_Initialize+2,f
 19985  2D74  0DB9               	rlf	??_EUSART_Initialize+3,f
 19986  2D75  0B89               	decfsz	9,f
 19987  2D76  2D71               	goto	u11435
 19988  2D77  0839               	movf	??_EUSART_Initialize+3,w
 19989  2D78  00A7               	movwf	___aldiv@divisor+3
 19990  2D79  0838               	movf	??_EUSART_Initialize+2,w
 19991  2D7A  00A6               	movwf	___aldiv@divisor+2
 19992  2D7B  0837               	movf	??_EUSART_Initialize+1,w
 19993  2D7C  00A5               	movwf	___aldiv@divisor+1
 19994  2D7D  0836               	movf	??_EUSART_Initialize,w
 19995  2D7E  00A4               	movwf	___aldiv@divisor
 19996  2D7F  0832               	movf	EUSART_Initialize@baudrate,w
 19997  2D80  00BA               	movwf	??_EUSART_Initialize+4
 19998  2D81  0833               	movf	EUSART_Initialize@baudrate+1,w
 19999  2D82  00BB               	movwf	??_EUSART_Initialize+5
 20000  2D83  0834               	movf	EUSART_Initialize@baudrate+2,w
 20001  2D84  00BC               	movwf	??_EUSART_Initialize+6
 20002  2D85  0835               	movf	EUSART_Initialize@baudrate+3,w
 20003  2D86  00BD               	movwf	??_EUSART_Initialize+7
 20004  2D87  3004               	movlw	4
 20005  2D88                     u11445:	
 20006  2D88  35BA               	lslf	??_EUSART_Initialize+4,f
 20007  2D89  0DBB               	rlf	??_EUSART_Initialize+5,f
 20008  2D8A  0DBC               	rlf	??_EUSART_Initialize+6,f
 20009  2D8B  0DBD               	rlf	??_EUSART_Initialize+7,f
 20010  2D8C  0B89               	decfsz	9,f
 20011  2D8D  2D88               	goto	u11445
 20012  2D8E  3000               	movlw	0
 20013  2D8F  00BE               	movwf	??_EUSART_Initialize+8
 20014  2D90  3024               	movlw	36
 20015  2D91  00BF               	movwf	??_EUSART_Initialize+9
 20016  2D92  30F4               	movlw	244
 20017  2D93  00C0               	movwf	??_EUSART_Initialize+10
 20018  2D94  3000               	movlw	0
 20019  2D95  00C1               	movwf	??_EUSART_Initialize+11
 20020  2D96  083A               	movf	??_EUSART_Initialize+4,w
 20021  2D97  02BE               	subwf	??_EUSART_Initialize+8,f
 20022  2D98  083B               	movf	??_EUSART_Initialize+5,w
 20023  2D99  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20024  2D9A  083C               	movf	??_EUSART_Initialize+6,w
 20025  2D9B  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20026  2D9C  083D               	movf	??_EUSART_Initialize+7,w
 20027  2D9D  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20028  2D9E  0841               	movf	??_EUSART_Initialize+11,w
 20029  2D9F  00AB               	movwf	___aldiv@dividend+3
 20030  2DA0  0840               	movf	??_EUSART_Initialize+10,w
 20031  2DA1  00AA               	movwf	___aldiv@dividend+2
 20032  2DA2  083F               	movf	??_EUSART_Initialize+9,w
 20033  2DA3  00A9               	movwf	___aldiv@dividend+1
 20034  2DA4  083E               	movf	??_EUSART_Initialize+8,w
 20035  2DA5  00A8               	movwf	___aldiv@dividend
 20036  2DA6  31AB  23F7  31AD   	fcall	___aldiv
 20037  2DA9  0020               	movlb	0	; select bank0
 20038  2DAA  0825               	movf	?___aldiv+1,w
 20039  2DAB  00FB               	movwf	EUSART_Initialize@x+1
 20040  2DAC  0824               	movf	?___aldiv,w
 20041  2DAD  00FA               	movwf	EUSART_Initialize@x
 20042                           
 20043                           ;EUSART.c: 13:   BRGH = 1;
 20044  2DAE  0023               	movlb	3	; select bank3
 20045  2DAF  151E               	bsf	30,2	;volatile
 20046  2DB0                     l8332:	
 20047                           
 20048                           ;EUSART.c: 15:  if(x<256)
 20049  2DB0  3001               	movlw	1
 20050  2DB1  027B               	subwf	EUSART_Initialize@x+1,w
 20051  2DB2  3000               	movlw	0
 20052  2DB3  1903               	skipnz
 20053  2DB4  027A               	subwf	EUSART_Initialize@x,w
 20054  2DB5  1803               	skipnc
 20055  2DB6  0008               	return
 20056                           
 20057                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 20058  2DB7  087A               	movf	EUSART_Initialize@x,w
 20059  2DB8  0023               	movlb	3	; select bank3
 20060  2DB9  009B               	movwf	27	;volatile
 20061                           
 20062                           ;EUSART.c: 18:    SYNC = 0;
 20063  2DBA  121E               	bcf	30,4	;volatile
 20064                           
 20065                           ;EUSART.c: 19:    SPEN = 1;
 20066  2DBB  179D               	bsf	29,7	;volatile
 20067                           
 20068                           ;EUSART.c: 20:           TRISC7 = 1;
 20069  2DBC  0021               	movlb	1	; select bank1
 20070  2DBD  178E               	bsf	14,7	;volatile
 20071                           
 20072                           ;EUSART.c: 21:           TRISC6 = 1;
 20073  2DBE  170E               	bsf	14,6	;volatile
 20074                           
 20075                           ;EUSART.c: 22:           CREN = 1;
 20076  2DBF  0023               	movlb	3	; select bank3
 20077  2DC0  161D               	bsf	29,4	;volatile
 20078                           
 20079                           ;EUSART.c: 23:           TXEN = 1;
 20080  2DC1  169E               	bsf	30,5	;volatile
 20081  2DC2  0008               	return
 20082  2DC3                     __end_of_EUSART_Initialize:	
 20083                           
 20084                           	psect	text78
 20085  2BF7                     __ptext78:	
 20086 ;; *************** function ___aldiv *****************
 20087 ;; Defined at:
 20088 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 20089 ;; Parameters:    Size  Location     Type
 20090 ;;  divisor         4    4[BANK0 ] long 
 20091 ;;  dividend        4    8[BANK0 ] long 
 20092 ;; Auto vars:     Size  Location     Type
 20093 ;;  quotient        4   14[BANK0 ] long 
 20094 ;;  sign            1   13[BANK0 ] unsigned char 
 20095 ;;  counter         1   12[BANK0 ] unsigned char 
 20096 ;; Return value:  Size  Location     Type
 20097 ;;                  4    4[BANK0 ] long 
 20098 ;; Registers used:
 20099 ;;		wreg, status,2, status,0
 20100 ;; Tracked objects:
 20101 ;;		On entry : 0/0
 20102 ;;		On exit  : 0/0
 20103 ;;		Unchanged: 0/0
 20104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20105 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20106 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20107 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20108 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20109 ;;Total ram usage:       15 bytes
 20110 ;; Hardware stack levels used:    1
 20111 ;; Hardware stack levels required when called:    1
 20112 ;; This function calls:
 20113 ;;		Nothing
 20114 ;; This function is called by:
 20115 ;;		_EUSART_Initialize
 20116 ;;		_setCellUndervoltageProtection
 20117 ;;		_setCellOvervoltageProtection
 20118 ;;		_updateVoltages
 20119 ;; This function uses a non-reentrant model
 20120 ;;
 20121                           
 20122                           
 20123                           ;psect for function ___aldiv
 20124  2BF7                     ___aldiv:	
 20125                           
 20126                           ;incstack = 0
 20127                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 20128  2BF7  0020               	movlb	0	; select bank0
 20129  2BF8  01AD               	clrf	___aldiv@sign
 20130  2BF9  1FA7               	btfss	___aldiv@divisor+3,7
 20131  2BFA  2C08               	goto	l912
 20132  2BFB  09A4               	comf	___aldiv@divisor,f
 20133  2BFC  09A5               	comf	___aldiv@divisor+1,f
 20134  2BFD  09A6               	comf	___aldiv@divisor+2,f
 20135  2BFE  09A7               	comf	___aldiv@divisor+3,f
 20136  2BFF  0AA4               	incf	___aldiv@divisor,f
 20137  2C00  1903               	skipnz
 20138  2C01  0AA5               	incf	___aldiv@divisor+1,f
 20139  2C02  1903               	skipnz
 20140  2C03  0AA6               	incf	___aldiv@divisor+2,f
 20141  2C04  1903               	skipnz
 20142  2C05  0AA7               	incf	___aldiv@divisor+3,f
 20143  2C06  01AD               	clrf	___aldiv@sign
 20144  2C07  0AAD               	incf	___aldiv@sign,f
 20145  2C08                     l912:	
 20146  2C08  1FAB               	btfss	___aldiv@dividend+3,7
 20147  2C09  2C19               	goto	l7878
 20148  2C0A  09A8               	comf	___aldiv@dividend,f
 20149  2C0B  09A9               	comf	___aldiv@dividend+1,f
 20150  2C0C  09AA               	comf	___aldiv@dividend+2,f
 20151  2C0D  09AB               	comf	___aldiv@dividend+3,f
 20152  2C0E  0AA8               	incf	___aldiv@dividend,f
 20153  2C0F  1903               	skipnz
 20154  2C10  0AA9               	incf	___aldiv@dividend+1,f
 20155  2C11  1903               	skipnz
 20156  2C12  0AAA               	incf	___aldiv@dividend+2,f
 20157  2C13  1903               	skipnz
 20158  2C14  0AAB               	incf	___aldiv@dividend+3,f
 20159  2C15  3001               	movlw	1
 20160  2C16  00F9               	movwf	??___aldiv
 20161  2C17  0879               	movf	??___aldiv,w
 20162  2C18  06AD               	xorwf	___aldiv@sign,f
 20163  2C19                     l7878:	
 20164  2C19  3000               	movlw	0
 20165  2C1A  00B1               	movwf	___aldiv@quotient+3
 20166  2C1B  3000               	movlw	0
 20167  2C1C  00B0               	movwf	___aldiv@quotient+2
 20168  2C1D  3000               	movlw	0
 20169  2C1E  00AF               	movwf	___aldiv@quotient+1
 20170  2C1F  3000               	movlw	0
 20171  2C20  00AE               	movwf	___aldiv@quotient
 20172  2C21  0827               	movf	___aldiv@divisor+3,w
 20173  2C22  0426               	iorwf	___aldiv@divisor+2,w
 20174  2C23  0425               	iorwf	___aldiv@divisor+1,w
 20175  2C24  0424               	iorwf	___aldiv@divisor,w
 20176  2C25  1903               	skipnz
 20177  2C26  2C62               	goto	l7900
 20178  2C27  01AC               	clrf	___aldiv@counter
 20179  2C28  0AAC               	incf	___aldiv@counter,f
 20180  2C29                     l7886:	
 20181  2C29  1BA7               	btfsc	___aldiv@divisor+3,7
 20182  2C2A  2C37               	goto	l7888
 20183  2C2B  3001               	movlw	1
 20184  2C2C                     u10855:	
 20185  2C2C  35A4               	lslf	___aldiv@divisor,f
 20186  2C2D  0DA5               	rlf	___aldiv@divisor+1,f
 20187  2C2E  0DA6               	rlf	___aldiv@divisor+2,f
 20188  2C2F  0DA7               	rlf	___aldiv@divisor+3,f
 20189  2C30  0B89               	decfsz	9,f
 20190  2C31  2C2C               	goto	u10855
 20191  2C32  3001               	movlw	1
 20192  2C33  00F9               	movwf	??___aldiv
 20193  2C34  0879               	movf	??___aldiv,w
 20194  2C35  07AC               	addwf	___aldiv@counter,f
 20195  2C36  2C29               	goto	l7886
 20196  2C37                     l7888:	
 20197  2C37  3001               	movlw	1
 20198  2C38                     u10875:	
 20199  2C38  35AE               	lslf	___aldiv@quotient,f
 20200  2C39  0DAF               	rlf	___aldiv@quotient+1,f
 20201  2C3A  0DB0               	rlf	___aldiv@quotient+2,f
 20202  2C3B  0DB1               	rlf	___aldiv@quotient+3,f
 20203  2C3C  0B89               	decfsz	9,f
 20204  2C3D  2C38               	goto	u10875
 20205  2C3E  0827               	movf	___aldiv@divisor+3,w
 20206  2C3F  022B               	subwf	___aldiv@dividend+3,w
 20207  2C40  1D03               	skipz
 20208  2C41  2C4C               	goto	u10885
 20209  2C42  0826               	movf	___aldiv@divisor+2,w
 20210  2C43  022A               	subwf	___aldiv@dividend+2,w
 20211  2C44  1D03               	skipz
 20212  2C45  2C4C               	goto	u10885
 20213  2C46  0825               	movf	___aldiv@divisor+1,w
 20214  2C47  0229               	subwf	___aldiv@dividend+1,w
 20215  2C48  1D03               	skipz
 20216  2C49  2C4C               	goto	u10885
 20217  2C4A  0824               	movf	___aldiv@divisor,w
 20218  2C4B  0228               	subwf	___aldiv@dividend,w
 20219  2C4C                     u10885:	
 20220  2C4C  1C03               	skipc
 20221  2C4D  2C57               	goto	l7896
 20222  2C4E  0824               	movf	___aldiv@divisor,w
 20223  2C4F  02A8               	subwf	___aldiv@dividend,f
 20224  2C50  0825               	movf	___aldiv@divisor+1,w
 20225  2C51  3BA9               	subwfb	___aldiv@dividend+1,f
 20226  2C52  0826               	movf	___aldiv@divisor+2,w
 20227  2C53  3BAA               	subwfb	___aldiv@dividend+2,f
 20228  2C54  0827               	movf	___aldiv@divisor+3,w
 20229  2C55  3BAB               	subwfb	___aldiv@dividend+3,f
 20230  2C56  142E               	bsf	___aldiv@quotient,0
 20231  2C57                     l7896:	
 20232  2C57  3001               	movlw	1
 20233  2C58                     u10895:	
 20234  2C58  36A7               	lsrf	___aldiv@divisor+3,f
 20235  2C59  0CA6               	rrf	___aldiv@divisor+2,f
 20236  2C5A  0CA5               	rrf	___aldiv@divisor+1,f
 20237  2C5B  0CA4               	rrf	___aldiv@divisor,f
 20238  2C5C  0B89               	decfsz	9,f
 20239  2C5D  2C58               	goto	u10895
 20240  2C5E  3001               	movlw	1
 20241  2C5F  02AC               	subwf	___aldiv@counter,f
 20242  2C60  1D03               	btfss	3,2
 20243  2C61  2C37               	goto	l7888
 20244  2C62                     l7900:	
 20245  2C62  082D               	movf	___aldiv@sign,w
 20246  2C63  1903               	btfsc	3,2
 20247  2C64  2C70               	goto	l7904
 20248  2C65  09AE               	comf	___aldiv@quotient,f
 20249  2C66  09AF               	comf	___aldiv@quotient+1,f
 20250  2C67  09B0               	comf	___aldiv@quotient+2,f
 20251  2C68  09B1               	comf	___aldiv@quotient+3,f
 20252  2C69  0AAE               	incf	___aldiv@quotient,f
 20253  2C6A  1903               	skipnz
 20254  2C6B  0AAF               	incf	___aldiv@quotient+1,f
 20255  2C6C  1903               	skipnz
 20256  2C6D  0AB0               	incf	___aldiv@quotient+2,f
 20257  2C6E  1903               	skipnz
 20258  2C6F  0AB1               	incf	___aldiv@quotient+3,f
 20259  2C70                     l7904:	
 20260  2C70  0831               	movf	___aldiv@quotient+3,w
 20261  2C71  00A7               	movwf	?___aldiv+3
 20262  2C72  0830               	movf	___aldiv@quotient+2,w
 20263  2C73  00A6               	movwf	?___aldiv+2
 20264  2C74  082F               	movf	___aldiv@quotient+1,w
 20265  2C75  00A5               	movwf	?___aldiv+1
 20266  2C76  082E               	movf	___aldiv@quotient,w
 20267  2C77  00A4               	movwf	?___aldiv
 20268  2C78  0008               	return
 20269  2C79                     __end_of___aldiv:	
 20270                           
 20271                           	psect	intentry
 20272  0004                     __pintentry:	
 20273 ;; *************** function _myIsr *****************
 20274 ;; Defined at:
 20275 ;;		line 54 in file "main.c"
 20276 ;; Parameters:    Size  Location     Type
 20277 ;;		None
 20278 ;; Auto vars:     Size  Location     Type
 20279 ;;		None
 20280 ;; Return value:  Size  Location     Type
 20281 ;;                  1    wreg      void 
 20282 ;; Registers used:
 20283 ;;		wreg, status,2, status,0
 20284 ;; Tracked objects:
 20285 ;;		On entry : 0/0
 20286 ;;		On exit  : 0/0
 20287 ;;		Unchanged: 0/0
 20288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20293 ;;Total ram usage:        1 bytes
 20294 ;; Hardware stack levels used:    1
 20295 ;; This function calls:
 20296 ;;		Nothing
 20297 ;; This function is called by:
 20298 ;;		Interrupt level 1
 20299 ;; This function uses a non-reentrant model
 20300 ;;
 20301                           
 20302  0004                     _myIsr:	
 20303                           
 20304                           ;incstack = 0
 20305  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20306                           
 20307                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 20308  0005  3180               	pagesel	$
 20309                           
 20310                           ;main.c: 56:     static uint8_t count = 0;;main.c: 58:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 20311  0006  0020               	movlb	0	; select bank0
 20312  0007  1C11               	btfss	17,0	;volatile
 20313  0008  281E               	goto	i1l145
 20314  0009  0021               	movlb	1	; select bank1
 20315  000A  1C11               	btfss	17,0	;volatile
 20316  000B  281E               	goto	i1l145
 20317                           
 20318                           ;main.c: 59:         PIR1bits.TMR1IF = 0;
 20319  000C  0020               	movlb	0	; select bank0
 20320  000D  1011               	bcf	17,0	;volatile
 20321                           
 20322                           ;main.c: 60:         count++;
 20323  000E  3001               	movlw	1
 20324  000F  00F0               	movwf	??_myIsr
 20325  0010  0870               	movf	??_myIsr,w
 20326  0011  0023               	movlb	3	; select bank3
 20327  0012  07D5               	addwf	myIsr@count^(0+384),f
 20328                           
 20329                           ;main.c: 63:         if (count == 61) {
 20330  0013  303D               	movlw	61
 20331  0014  0655               	xorwf	myIsr@count^(0+384),w
 20332  0015  1D03               	btfss	3,2
 20333  0016  281E               	goto	i1l145
 20334                           
 20335                           ;main.c: 64:             tmr1_flag = 1;
 20336  0017  3001               	movlw	1
 20337  0018  00F0               	movwf	??_myIsr
 20338  0019  0870               	movf	??_myIsr,w
 20339  001A  0021               	movlb	1	; select bank1
 20340  001B  00EF               	movwf	_tmr1_flag^(0+128)	;volatile
 20341                           
 20342                           ;main.c: 65:             count = 0;
 20343  001C  0023               	movlb	3	; select bank3
 20344  001D  01D5               	clrf	myIsr@count^(0+384)
 20345  001E                     i1l145:	
 20346  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20347  001F  0009               	retfie
 20348  0020                     __end_of_myIsr:	
 20349  007E                     btemp	set	126	;btemp
 20350  007E                     int$flags	set	126
 20351  007E                     wtemp0	set	126
 20352  2771                     
 20353                           	psect	text7_split_1
 20354  25F1                     l6886:	
 20355                           
 20356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 20357  25F1  0859               	movf	vfpfcnvrt@fmt,w
 20358  25F2  0086               	movwf	6
 20359  25F3  0187               	clrf	7
 20360  25F4  3F40               	moviw [0]fsr1
 20361  25F5  00F1               	movwf	strncmp@_l
 20362  25F6  3F41               	moviw [1]fsr1
 20363  25F7  00F2               	movwf	strncmp@_l+1
 20364  25F8  301D               	movlw	low (STR_22| (0+32768))
 20365  25F9  00F3               	movwf	strncmp@_r
 20366  25FA  30BA               	movlw	high (STR_22| (0+32768))
 20367  25FB  00F4               	movwf	strncmp@_r+1
 20368  25FC  3003               	movlw	3
 20369  25FD  00F5               	movwf	strncmp@n
 20370  25FE  3000               	movlw	0
 20371  25FF  00F6               	movwf	strncmp@n+1
 20372  2600  31A8  203F  31A5   	fcall	_strncmp
 20373  2603  0871               	movf	?_strncmp,w
 20374  2604  0472               	iorwf	?_strncmp+1,w
 20375  2605  1903               	btfsc	3,2
 20376  2606  2E1E               	goto	l6890
 20377  2607  0020               	movlb	0	; select bank0
 20378  2608  0859               	movf	vfpfcnvrt@fmt,w
 20379  2609  0086               	movwf	6
 20380  260A  0187               	clrf	7
 20381  260B  3F40               	moviw [0]fsr1
 20382  260C  00F1               	movwf	strncmp@_l
 20383  260D  3F41               	moviw [1]fsr1
 20384  260E  00F2               	movwf	strncmp@_l+1
 20385  260F  3021               	movlw	low (STR_26| (0+32768))
 20386  2610  00F3               	movwf	strncmp@_r
 20387  2611  30BA               	movlw	high (STR_26| (0+32768))
 20388  2612  00F4               	movwf	strncmp@_r+1
 20389  2613  3003               	movlw	3
 20390  2614  00F5               	movwf	strncmp@n
 20391  2615  3000               	movlw	0
 20392  2616  00F6               	movwf	strncmp@n+1
 20393  2617  31A8  203F  31A5   	fcall	_strncmp
 20394  261A  0871               	movf	?_strncmp,w
 20395  261B  0472               	iorwf	?_strncmp+1,w
 20396  261C  1D03               	btfss	3,2
 20397  261D  2E69               	goto	l6898
 20398  261E                     l6890:	
 20399                           
 20400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 20401  261E  0020               	movlb	0	; select bank0
 20402  261F  0859               	movf	vfpfcnvrt@fmt,w
 20403  2620  0086               	movwf	6
 20404  2621  0187               	clrf	7
 20405  2622  3003               	movlw	3
 20406  2623  0781               	addwf	1,f
 20407  2624  3141               	addfsr 1,1
 20408  2625  1803               	skipnc
 20409  2626  0A81               	incf	1,f
 20410                           
 20411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20412  2627  085A               	movf	vfpfcnvrt@ap,w
 20413  2628  0086               	movwf	6
 20414  2629  0187               	clrf	7
 20415  262A  0801               	movf	1,w
 20416  262B  0084               	movwf	4
 20417  262C  0185               	clrf	5
 20418  262D  3002               	movlw	2
 20419  262E  0781               	addwf	1,f
 20420  262F  0800               	movf	0,w
 20421  2630  0021               	movlb	1	; select bank1
 20422  2631  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20423  2632  3980               	andlw	128
 20424  2633  1D03               	skipz
 20425  2634  30FF               	movlw	255
 20426  2635  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20427  2636  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20428  2637  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20429  2638  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20430  2639  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20431  263A  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20432  263B  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20433                           
 20434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 20435  263C  0020               	movlb	0	; select bank0
 20436  263D  0858               	movf	vfpfcnvrt@fp+1,w
 20437  263E  00B1               	movwf	dtoa@fp+1
 20438  263F  0857               	movf	vfpfcnvrt@fp,w
 20439  2640  00B0               	movwf	dtoa@fp
 20440  2641  0021               	movlb	1	; select bank1
 20441  2642  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20442  2643  0020               	movlb	0	; select bank0
 20443  2644  00B2               	movwf	dtoa@d
 20444  2645  0021               	movlb	1	; select bank1
 20445  2646  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20446  2647  0020               	movlb	0	; select bank0
 20447  2648  00B3               	movwf	dtoa@d+1
 20448  2649  0021               	movlb	1	; select bank1
 20449  264A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20450  264B  0020               	movlb	0	; select bank0
 20451  264C  00B4               	movwf	dtoa@d+2
 20452  264D  0021               	movlb	1	; select bank1
 20453  264E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20454  264F  0020               	movlb	0	; select bank0
 20455  2650  00B5               	movwf	dtoa@d+3
 20456  2651  0021               	movlb	1	; select bank1
 20457  2652  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20458  2653  0020               	movlb	0	; select bank0
 20459  2654  00B6               	movwf	dtoa@d+4
 20460  2655  0021               	movlb	1	; select bank1
 20461  2656  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20462  2657  0020               	movlb	0	; select bank0
 20463  2658  00B7               	movwf	dtoa@d+5
 20464  2659  0021               	movlb	1	; select bank1
 20465  265A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20466  265B  0020               	movlb	0	; select bank0
 20467  265C  00B8               	movwf	dtoa@d+6
 20468  265D  0021               	movlb	1	; select bank1
 20469  265E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20470  265F  0020               	movlb	0	; select bank0
 20471  2660  00B9               	movwf	dtoa@d+7
 20472  2661  319A  2236         	fcall	_dtoa
 20473  2663  0020               	movlb	0	; select bank0
 20474  2664  0831               	movf	?_dtoa+1,w
 20475  2665  00D8               	movwf	?_vfpfcnvrt+1
 20476  2666  0830               	movf	?_dtoa,w
 20477  2667  00D7               	movwf	?_vfpfcnvrt
 20478  2668  0008               	return
 20479  2669                     l6898:	
 20480                           
 20481                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 20482  2669  0020               	movlb	0	; select bank0
 20483  266A  0859               	movf	vfpfcnvrt@fmt,w
 20484  266B  0086               	movwf	6
 20485  266C  0187               	clrf	7
 20486  266D  3F40               	moviw [0]fsr1
 20487  266E  00F1               	movwf	strncmp@_l
 20488  266F  3F41               	moviw [1]fsr1
 20489  2670  00F2               	movwf	strncmp@_l+1
 20490  2671  301E               	movlw	low ((STR_22+1)| (0+32768))
 20491  2672  00F3               	movwf	strncmp@_r
 20492  2673  30BA               	movlw	high ((STR_22+1)| (0+32768))
 20493  2674  00F4               	movwf	strncmp@_r+1
 20494  2675  3002               	movlw	2
 20495  2676  00F5               	movwf	strncmp@n
 20496  2677  3000               	movlw	0
 20497  2678  00F6               	movwf	strncmp@n+1
 20498  2679  31A8  203F  31A5   	fcall	_strncmp
 20499  267C  0871               	movf	?_strncmp,w
 20500  267D  0472               	iorwf	?_strncmp+1,w
 20501  267E  1903               	btfsc	3,2
 20502  267F  2E97               	goto	l6902
 20503  2680  0020               	movlb	0	; select bank0
 20504  2681  0859               	movf	vfpfcnvrt@fmt,w
 20505  2682  0086               	movwf	6
 20506  2683  0187               	clrf	7
 20507  2684  3F40               	moviw [0]fsr1
 20508  2685  00F1               	movwf	strncmp@_l
 20509  2686  3F41               	moviw [1]fsr1
 20510  2687  00F2               	movwf	strncmp@_l+1
 20511  2688  3022               	movlw	low ((STR_26+1)| (0+32768))
 20512  2689  00F3               	movwf	strncmp@_r
 20513  268A  30BA               	movlw	high ((STR_26+1)| (0+32768))
 20514  268B  00F4               	movwf	strncmp@_r+1
 20515  268C  3002               	movlw	2
 20516  268D  00F5               	movwf	strncmp@n
 20517  268E  3000               	movlw	0
 20518  268F  00F6               	movwf	strncmp@n+1
 20519  2690  31A8  203F  31A5   	fcall	_strncmp
 20520  2693  0871               	movf	?_strncmp,w
 20521  2694  0472               	iorwf	?_strncmp+1,w
 20522  2695  1D03               	btfss	3,2
 20523  2696  2EE9               	goto	L9
 20524  2697                     l6902:	
 20525                           
 20526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 20527  2697  0020               	movlb	0	; select bank0
 20528  2698  0859               	movf	vfpfcnvrt@fmt,w
 20529  2699  0086               	movwf	6
 20530  269A  0187               	clrf	7
 20531  269B  3002               	movlw	2
 20532  269C  0781               	addwf	1,f
 20533  269D  3141               	addfsr 1,1
 20534  269E  1803               	skipnc
 20535  269F  0A81               	incf	1,f
 20536                           
 20537                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 20538  26A0  085A               	movf	vfpfcnvrt@ap,w
 20539  26A1  0086               	movwf	6
 20540  26A2  0187               	clrf	7
 20541  26A3  0801               	movf	1,w
 20542  26A4  0084               	movwf	4
 20543  26A5  0185               	clrf	5
 20544  26A6  3002               	movlw	2
 20545  26A7  0781               	addwf	1,f
 20546  26A8  3F00               	moviw [0]fsr0
 20547  26A9  00DB               	movwf	??_vfpfcnvrt
 20548  26AA  3F01               	moviw [1]fsr0
 20549  26AB  00DC               	movwf	??_vfpfcnvrt+1
 20550  26AC  085B               	movf	??_vfpfcnvrt,w
 20551  26AD  0021               	movlb	1	; select bank1
 20552  26AE  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20553  26AF  0020               	movlb	0	; select bank0
 20554  26B0  085C               	movf	??_vfpfcnvrt+1,w
 20555  26B1  0021               	movlb	1	; select bank1
 20556  26B2  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20557  26B3  0D89               	rlf	9,f
 20558  26B4  3B89               	subwfb	9,f
 20559  26B5  0989               	comf	9,f
 20560  26B6  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20561  26B7  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20562  26B8  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20563  26B9  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20564  26BA  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20565  26BB  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20566                           
 20567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 20568  26BC  0020               	movlb	0	; select bank0
 20569  26BD  0858               	movf	vfpfcnvrt@fp+1,w
 20570  26BE  00B1               	movwf	dtoa@fp+1
 20571  26BF  0857               	movf	vfpfcnvrt@fp,w
 20572  26C0  00B0               	movwf	dtoa@fp
 20573  26C1  0021               	movlb	1	; select bank1
 20574  26C2  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20575  26C3  0020               	movlb	0	; select bank0
 20576  26C4  00B2               	movwf	dtoa@d
 20577  26C5  0021               	movlb	1	; select bank1
 20578  26C6  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20579  26C7  0020               	movlb	0	; select bank0
 20580  26C8  00B3               	movwf	dtoa@d+1
 20581  26C9  0021               	movlb	1	; select bank1
 20582  26CA  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20583  26CB  0020               	movlb	0	; select bank0
 20584  26CC  00B4               	movwf	dtoa@d+2
 20585  26CD  0021               	movlb	1	; select bank1
 20586  26CE  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20587  26CF  0020               	movlb	0	; select bank0
 20588  26D0  00B5               	movwf	dtoa@d+3
 20589  26D1  0021               	movlb	1	; select bank1
 20590  26D2  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20591  26D3  0020               	movlb	0	; select bank0
 20592  26D4  00B6               	movwf	dtoa@d+4
 20593  26D5  0021               	movlb	1	; select bank1
 20594  26D6  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20595  26D7  0020               	movlb	0	; select bank0
 20596  26D8  00B7               	movwf	dtoa@d+5
 20597  26D9  0021               	movlb	1	; select bank1
 20598  26DA  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20599  26DB  0020               	movlb	0	; select bank0
 20600  26DC  00B8               	movwf	dtoa@d+6
 20601  26DD  0021               	movlb	1	; select bank1
 20602  26DE  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20603  26DF  0020               	movlb	0	; select bank0
 20604  26E0  00B9               	movwf	dtoa@d+7
 20605  26E1  319A  2236         	fcall	_dtoa
 20606  26E3  0020               	movlb	0	; select bank0
 20607  26E4  0831               	movf	?_dtoa+1,w
 20608  26E5  00D8               	movwf	?_vfpfcnvrt+1
 20609  26E6  0830               	movf	?_dtoa,w
 20610  26E7  00D7               	movwf	?_vfpfcnvrt
 20611  26E8  0008               	return
 20612  26E9                     L9:	
 20613  26E9                     L8:	
 20614  26E9  3188  2843         	ljmp	l6910
 20615                           
 20616                           	psect	text7_split_2
 20617  0843                     l6910:	
 20618                           
 20619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 20620  0843  0020               	movlb	0	; select bank0
 20621  0844  0859               	movf	vfpfcnvrt@fmt,w
 20622  0845  0086               	movwf	6
 20623  0846  0187               	clrf	7
 20624  0847  3F40               	moviw [0]fsr1
 20625  0848  00DB               	movwf	??_vfpfcnvrt
 20626  0849  3F41               	moviw [1]fsr1
 20627  084A  00DC               	movwf	??_vfpfcnvrt+1
 20628  084B  085B               	movf	??_vfpfcnvrt,w
 20629  084C  0084               	movwf	4
 20630  084D  085C               	movf	??_vfpfcnvrt+1,w
 20631  084E  0085               	movwf	5
 20632  084F  0012               	moviw fsr0++
 20633  0850  3A64               	xorlw	100
 20634  0851  1903               	btfsc	3,2
 20635  0852  2862               	goto	l6914
 20636  0853  0859               	movf	vfpfcnvrt@fmt,w
 20637  0854  0086               	movwf	6
 20638  0855  0187               	clrf	7
 20639  0856  3F40               	moviw [0]fsr1
 20640  0857  00DB               	movwf	??_vfpfcnvrt
 20641  0858  3F41               	moviw [1]fsr1
 20642  0859  00DC               	movwf	??_vfpfcnvrt+1
 20643  085A  085B               	movf	??_vfpfcnvrt,w
 20644  085B  0084               	movwf	4
 20645  085C  085C               	movf	??_vfpfcnvrt+1,w
 20646  085D  0085               	movwf	5
 20647  085E  0012               	moviw fsr0++
 20648  085F  3A69               	xorlw	105
 20649  0860  1D03               	btfss	3,2
 20650  0861  28B3               	goto	l6922
 20651  0862                     l6914:	
 20652                           
 20653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 20654  0862  0859               	movf	vfpfcnvrt@fmt,w
 20655  0863  0086               	movwf	6
 20656  0864  0187               	clrf	7
 20657  0865  3001               	movlw	1
 20658  0866  0781               	addwf	1,f
 20659  0867  3141               	addfsr 1,1
 20660  0868  1803               	skipnc
 20661  0869  0A81               	incf	1,f
 20662                           
 20663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 20664  086A  085A               	movf	vfpfcnvrt@ap,w
 20665  086B  0086               	movwf	6
 20666  086C  0187               	clrf	7
 20667  086D  0801               	movf	1,w
 20668  086E  0084               	movwf	4
 20669  086F  0185               	clrf	5
 20670  0870  3002               	movlw	2
 20671  0871  0781               	addwf	1,f
 20672  0872  3F00               	moviw [0]fsr0
 20673  0873  00DB               	movwf	??_vfpfcnvrt
 20674  0874  3F01               	moviw [1]fsr0
 20675  0875  00DC               	movwf	??_vfpfcnvrt+1
 20676  0876  085B               	movf	??_vfpfcnvrt,w
 20677  0877  0021               	movlb	1	; select bank1
 20678  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20679  0879  0020               	movlb	0	; select bank0
 20680  087A  085C               	movf	??_vfpfcnvrt+1,w
 20681  087B  0021               	movlb	1	; select bank1
 20682  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20683  087D  0D89               	rlf	9,f
 20684  087E  3B89               	subwfb	9,f
 20685  087F  0989               	comf	9,f
 20686  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 20687  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 20688  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 20689  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 20690  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 20691  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 20692                           
 20693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 20694  0886  0020               	movlb	0	; select bank0
 20695  0887  0858               	movf	vfpfcnvrt@fp+1,w
 20696  0888  00B1               	movwf	dtoa@fp+1
 20697  0889  0857               	movf	vfpfcnvrt@fp,w
 20698  088A  00B0               	movwf	dtoa@fp
 20699  088B  0021               	movlb	1	; select bank1
 20700  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20701  088D  0020               	movlb	0	; select bank0
 20702  088E  00B2               	movwf	dtoa@d
 20703  088F  0021               	movlb	1	; select bank1
 20704  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20705  0891  0020               	movlb	0	; select bank0
 20706  0892  00B3               	movwf	dtoa@d+1
 20707  0893  0021               	movlb	1	; select bank1
 20708  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20709  0895  0020               	movlb	0	; select bank0
 20710  0896  00B4               	movwf	dtoa@d+2
 20711  0897  0021               	movlb	1	; select bank1
 20712  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20713  0899  0020               	movlb	0	; select bank0
 20714  089A  00B5               	movwf	dtoa@d+3
 20715  089B  0021               	movlb	1	; select bank1
 20716  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20717  089D  0020               	movlb	0	; select bank0
 20718  089E  00B6               	movwf	dtoa@d+4
 20719  089F  0021               	movlb	1	; select bank1
 20720  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20721  08A1  0020               	movlb	0	; select bank0
 20722  08A2  00B7               	movwf	dtoa@d+5
 20723  08A3  0021               	movlb	1	; select bank1
 20724  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20725  08A5  0020               	movlb	0	; select bank0
 20726  08A6  00B8               	movwf	dtoa@d+6
 20727  08A7  0021               	movlb	1	; select bank1
 20728  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20729  08A9  0020               	movlb	0	; select bank0
 20730  08AA  00B9               	movwf	dtoa@d+7
 20731  08AB  319A  2236         	fcall	_dtoa
 20732  08AD  0020               	movlb	0	; select bank0
 20733  08AE  0831               	movf	?_dtoa+1,w
 20734  08AF  00D8               	movwf	?_vfpfcnvrt+1
 20735  08B0  0830               	movf	?_dtoa,w
 20736  08B1  00D7               	movwf	?_vfpfcnvrt
 20737  08B2  0008               	return
 20738  08B3                     l6922:	
 20739                           
 20740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 20741  08B3  0859               	movf	vfpfcnvrt@fmt,w
 20742  08B4  0086               	movwf	6
 20743  08B5  0187               	clrf	7
 20744  08B6  3F40               	moviw [0]fsr1
 20745  08B7  00F1               	movwf	strncmp@_l
 20746  08B8  3F41               	moviw [1]fsr1
 20747  08B9  00F2               	movwf	strncmp@_l+1
 20748  08BA  3038               	movlw	low (STR_40| (0+32768))
 20749  08BB  00F3               	movwf	strncmp@_r
 20750  08BC  30BA               	movlw	high (STR_40| (0+32768))
 20751  08BD  00F4               	movwf	strncmp@_r+1
 20752  08BE  3002               	movlw	2
 20753  08BF  00F5               	movwf	strncmp@n
 20754  08C0  3000               	movlw	0
 20755  08C1  00F6               	movwf	strncmp@n+1
 20756  08C2  31A8  203F  3188   	fcall	_strncmp
 20757  08C5  0871               	movf	?_strncmp,w
 20758  08C6  0472               	iorwf	?_strncmp+1,w
 20759  08C7  1903               	btfsc	3,2
 20760  08C8  28E0               	goto	l6926
 20761  08C9  0020               	movlb	0	; select bank0
 20762  08CA  0859               	movf	vfpfcnvrt@fmt,w
 20763  08CB  0086               	movwf	6
 20764  08CC  0187               	clrf	7
 20765  08CD  3F40               	moviw [0]fsr1
 20766  08CE  00F1               	movwf	strncmp@_l
 20767  08CF  3F41               	moviw [1]fsr1
 20768  08D0  00F2               	movwf	strncmp@_l+1
 20769  08D1  303B               	movlw	low (STR_44| (0+32768))
 20770  08D2  00F3               	movwf	strncmp@_r
 20771  08D3  30BA               	movlw	high (STR_44| (0+32768))
 20772  08D4  00F4               	movwf	strncmp@_r+1
 20773  08D5  3002               	movlw	2
 20774  08D6  00F5               	movwf	strncmp@n
 20775  08D7  3000               	movlw	0
 20776  08D8  00F6               	movwf	strncmp@n+1
 20777  08D9  31A8  203F  3188   	fcall	_strncmp
 20778  08DC  0871               	movf	?_strncmp,w
 20779  08DD  0472               	iorwf	?_strncmp+1,w
 20780  08DE  1D03               	btfss	3,2
 20781  08DF  2929               	goto	l6934
 20782  08E0                     l6926:	
 20783                           
 20784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 20785  08E0  0020               	movlb	0	; select bank0
 20786  08E1  0859               	movf	vfpfcnvrt@fmt,w
 20787  08E2  0086               	movwf	6
 20788  08E3  0187               	clrf	7
 20789  08E4  3002               	movlw	2
 20790  08E5  0781               	addwf	1,f
 20791  08E6  3141               	addfsr 1,1
 20792  08E7  1803               	skipnc
 20793  08E8  0A81               	incf	1,f
 20794                           
 20795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 20796  08E9  085A               	movf	vfpfcnvrt@ap,w
 20797  08EA  0086               	movwf	6
 20798  08EB  0187               	clrf	7
 20799  08EC  0801               	movf	1,w
 20800  08ED  0084               	movwf	4
 20801  08EE  0185               	clrf	5
 20802  08EF  3002               	movlw	2
 20803  08F0  0781               	addwf	1,f
 20804  08F1  3F00               	moviw [0]fsr0
 20805  08F2  0021               	movlb	1	; select bank1
 20806  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 20807  08F4  3F01               	moviw [1]fsr0
 20808  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 20809  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 20810  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 20811  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 20812  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 20813  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 20814  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 20815                           
 20816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 20817  08FC  0020               	movlb	0	; select bank0
 20818  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 20819  08FE  00B1               	movwf	dtoa@fp+1
 20820  08FF  0857               	movf	vfpfcnvrt@fp,w
 20821  0900  00B0               	movwf	dtoa@fp
 20822  0901  0021               	movlb	1	; select bank1
 20823  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 20824  0903  0020               	movlb	0	; select bank0
 20825  0904  00B2               	movwf	dtoa@d
 20826  0905  0021               	movlb	1	; select bank1
 20827  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 20828  0907  0020               	movlb	0	; select bank0
 20829  0908  00B3               	movwf	dtoa@d+1
 20830  0909  0021               	movlb	1	; select bank1
 20831  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 20832  090B  0020               	movlb	0	; select bank0
 20833  090C  00B4               	movwf	dtoa@d+2
 20834  090D  0021               	movlb	1	; select bank1
 20835  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 20836  090F  0020               	movlb	0	; select bank0
 20837  0910  00B5               	movwf	dtoa@d+3
 20838  0911  0021               	movlb	1	; select bank1
 20839  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 20840  0913  0020               	movlb	0	; select bank0
 20841  0914  00B6               	movwf	dtoa@d+4
 20842  0915  0021               	movlb	1	; select bank1
 20843  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 20844  0917  0020               	movlb	0	; select bank0
 20845  0918  00B7               	movwf	dtoa@d+5
 20846  0919  0021               	movlb	1	; select bank1
 20847  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 20848  091B  0020               	movlb	0	; select bank0
 20849  091C  00B8               	movwf	dtoa@d+6
 20850  091D  0021               	movlb	1	; select bank1
 20851  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 20852  091F  0020               	movlb	0	; select bank0
 20853  0920  00B9               	movwf	dtoa@d+7
 20854  0921  319A  2236         	fcall	_dtoa
 20855  0923  0020               	movlb	0	; select bank0
 20856  0924  0831               	movf	?_dtoa+1,w
 20857  0925  00D8               	movwf	?_vfpfcnvrt+1
 20858  0926  0830               	movf	?_dtoa,w
 20859  0927  00D7               	movwf	?_vfpfcnvrt
 20860  0928  0008               	return
 20861  0929                     l6934:	
 20862                           
 20863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 20864  0929  0020               	movlb	0	; select bank0
 20865  092A  0859               	movf	vfpfcnvrt@fmt,w
 20866  092B  0086               	movwf	6
 20867  092C  0187               	clrf	7
 20868  092D  3F40               	moviw [0]fsr1
 20869  092E  00F1               	movwf	strncmp@_l
 20870  092F  3F41               	moviw [1]fsr1
 20871  0930  00F2               	movwf	strncmp@_l+1
 20872  0931  3029               	movlw	low (STR_49| (0+32768))
 20873  0932  00F3               	movwf	strncmp@_r
 20874  0933  30BA               	movlw	high (STR_49| (0+32768))
 20875  0934  00F4               	movwf	strncmp@_r+1
 20876  0935  3003               	movlw	3
 20877  0936  00F5               	movwf	strncmp@n
 20878  0937  3000               	movlw	0
 20879  0938  00F6               	movwf	strncmp@n+1
 20880  0939  31A8  203F  3188   	fcall	_strncmp
 20881  093C  0871               	movf	?_strncmp,w
 20882  093D  0472               	iorwf	?_strncmp+1,w
 20883  093E  1D03               	btfss	3,2
 20884  093F  2988               	goto	l6944
 20885                           
 20886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 20887  0940  0020               	movlb	0	; select bank0
 20888  0941  0859               	movf	vfpfcnvrt@fmt,w
 20889  0942  0086               	movwf	6
 20890  0943  0187               	clrf	7
 20891  0944  3003               	movlw	3
 20892  0945  0781               	addwf	1,f
 20893  0946  3141               	addfsr 1,1
 20894  0947  1803               	skipnc
 20895  0948  0A81               	incf	1,f
 20896                           
 20897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 20898  0949  085A               	movf	vfpfcnvrt@ap,w
 20899  094A  0086               	movwf	6
 20900  094B  0187               	clrf	7
 20901  094C  0801               	movf	1,w
 20902  094D  0084               	movwf	4
 20903  094E  0185               	clrf	5
 20904  094F  3002               	movlw	2
 20905  0950  0781               	addwf	1,f
 20906  0951  0800               	movf	0,w
 20907  0952  0021               	movlb	1	; select bank1
 20908  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 20909  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 20910  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 20911  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 20912  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 20913  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 20914  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 20915  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 20916                           
 20917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 20918  095B  0020               	movlb	0	; select bank0
 20919  095C  0858               	movf	vfpfcnvrt@fp+1,w
 20920  095D  00B1               	movwf	otoa@fp+1
 20921  095E  0857               	movf	vfpfcnvrt@fp,w
 20922  095F  00B0               	movwf	otoa@fp
 20923  0960  0021               	movlb	1	; select bank1
 20924  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 20925  0962  0020               	movlb	0	; select bank0
 20926  0963  00B2               	movwf	otoa@d
 20927  0964  0021               	movlb	1	; select bank1
 20928  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 20929  0966  0020               	movlb	0	; select bank0
 20930  0967  00B3               	movwf	otoa@d+1
 20931  0968  0021               	movlb	1	; select bank1
 20932  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 20933  096A  0020               	movlb	0	; select bank0
 20934  096B  00B4               	movwf	otoa@d+2
 20935  096C  0021               	movlb	1	; select bank1
 20936  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 20937  096E  0020               	movlb	0	; select bank0
 20938  096F  00B5               	movwf	otoa@d+3
 20939  0970  0021               	movlb	1	; select bank1
 20940  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 20941  0972  0020               	movlb	0	; select bank0
 20942  0973  00B6               	movwf	otoa@d+4
 20943  0974  0021               	movlb	1	; select bank1
 20944  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 20945  0976  0020               	movlb	0	; select bank0
 20946  0977  00B7               	movwf	otoa@d+5
 20947  0978  0021               	movlb	1	; select bank1
 20948  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 20949  097A  0020               	movlb	0	; select bank0
 20950  097B  00B8               	movwf	otoa@d+6
 20951  097C  0021               	movlb	1	; select bank1
 20952  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 20953  097E  0020               	movlb	0	; select bank0
 20954  097F  00B9               	movwf	otoa@d+7
 20955  0980  31A4  240D         	fcall	_otoa
 20956  0982  0020               	movlb	0	; select bank0
 20957  0983  0831               	movf	?_otoa+1,w
 20958  0984  00D8               	movwf	?_vfpfcnvrt+1
 20959  0985  0830               	movf	?_otoa,w
 20960  0986  00D7               	movwf	?_vfpfcnvrt
 20961  0987  0008               	return
 20962  0988                     l6944:	
 20963                           
 20964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 20965  0988  0020               	movlb	0	; select bank0
 20966  0989  0859               	movf	vfpfcnvrt@fmt,w
 20967  098A  0086               	movwf	6
 20968  098B  0187               	clrf	7
 20969  098C  3F40               	moviw [0]fsr1
 20970  098D  00F1               	movwf	strncmp@_l
 20971  098E  3F41               	moviw [1]fsr1
 20972  098F  00F2               	movwf	strncmp@_l+1
 20973  0990  302A               	movlw	low ((STR_49+1)| (0+32768))
 20974  0991  00F3               	movwf	strncmp@_r
 20975  0992  30BA               	movlw	high ((STR_49+1)| (0+32768))
 20976  0993  00F4               	movwf	strncmp@_r+1
 20977  0994  3002               	movlw	2
 20978  0995  00F5               	movwf	strncmp@n
 20979  0996  3000               	movlw	0
 20980  0997  00F6               	movwf	strncmp@n+1
 20981  0998  31A8  203F  3188   	fcall	_strncmp
 20982  099B  0871               	movf	?_strncmp,w
 20983  099C  0472               	iorwf	?_strncmp+1,w
 20984  099D  1D03               	btfss	3,2
 20985  099E  29E8               	goto	l6954
 20986                           
 20987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 20988  099F  0020               	movlb	0	; select bank0
 20989  09A0  0859               	movf	vfpfcnvrt@fmt,w
 20990  09A1  0086               	movwf	6
 20991  09A2  0187               	clrf	7
 20992  09A3  3002               	movlw	2
 20993  09A4  0781               	addwf	1,f
 20994  09A5  3141               	addfsr 1,1
 20995  09A6  1803               	skipnc
 20996  09A7  0A81               	incf	1,f
 20997                           
 20998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 20999  09A8  085A               	movf	vfpfcnvrt@ap,w
 21000  09A9  0086               	movwf	6
 21001  09AA  0187               	clrf	7
 21002  09AB  0801               	movf	1,w
 21003  09AC  0084               	movwf	4
 21004  09AD  0185               	clrf	5
 21005  09AE  3002               	movlw	2
 21006  09AF  0781               	addwf	1,f
 21007  09B0  3F00               	moviw [0]fsr0
 21008  09B1  0021               	movlb	1	; select bank1
 21009  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21010  09B3  3F01               	moviw [1]fsr0
 21011  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21012  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21013  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21014  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21015  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21016  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21017  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21018                           
 21019                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 21020  09BB  0020               	movlb	0	; select bank0
 21021  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 21022  09BD  00B1               	movwf	otoa@fp+1
 21023  09BE  0857               	movf	vfpfcnvrt@fp,w
 21024  09BF  00B0               	movwf	otoa@fp
 21025  09C0  0021               	movlb	1	; select bank1
 21026  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21027  09C2  0020               	movlb	0	; select bank0
 21028  09C3  00B2               	movwf	otoa@d
 21029  09C4  0021               	movlb	1	; select bank1
 21030  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21031  09C6  0020               	movlb	0	; select bank0
 21032  09C7  00B3               	movwf	otoa@d+1
 21033  09C8  0021               	movlb	1	; select bank1
 21034  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21035  09CA  0020               	movlb	0	; select bank0
 21036  09CB  00B4               	movwf	otoa@d+2
 21037  09CC  0021               	movlb	1	; select bank1
 21038  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21039  09CE  0020               	movlb	0	; select bank0
 21040  09CF  00B5               	movwf	otoa@d+3
 21041  09D0  0021               	movlb	1	; select bank1
 21042  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21043  09D2  0020               	movlb	0	; select bank0
 21044  09D3  00B6               	movwf	otoa@d+4
 21045  09D4  0021               	movlb	1	; select bank1
 21046  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21047  09D6  0020               	movlb	0	; select bank0
 21048  09D7  00B7               	movwf	otoa@d+5
 21049  09D8  0021               	movlb	1	; select bank1
 21050  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21051  09DA  0020               	movlb	0	; select bank0
 21052  09DB  00B8               	movwf	otoa@d+6
 21053  09DC  0021               	movlb	1	; select bank1
 21054  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21055  09DE  0020               	movlb	0	; select bank0
 21056  09DF  00B9               	movwf	otoa@d+7
 21057  09E0  31A4  240D         	fcall	_otoa
 21058  09E2  0020               	movlb	0	; select bank0
 21059  09E3  0831               	movf	?_otoa+1,w
 21060  09E4  00D8               	movwf	?_vfpfcnvrt+1
 21061  09E5  0830               	movf	?_otoa,w
 21062  09E6  00D7               	movwf	?_vfpfcnvrt
 21063  09E7  0008               	return
 21064  09E8                     l6954:	
 21065                           
 21066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 21067  09E8  0020               	movlb	0	; select bank0
 21068  09E9  0859               	movf	vfpfcnvrt@fmt,w
 21069  09EA  0086               	movwf	6
 21070  09EB  0187               	clrf	7
 21071  09EC  3F40               	moviw [0]fsr1
 21072  09ED  00DB               	movwf	??_vfpfcnvrt
 21073  09EE  3F41               	moviw [1]fsr1
 21074  09EF  00DC               	movwf	??_vfpfcnvrt+1
 21075  09F0  085B               	movf	??_vfpfcnvrt,w
 21076  09F1  0084               	movwf	4
 21077  09F2  085C               	movf	??_vfpfcnvrt+1,w
 21078  09F3  0085               	movwf	5
 21079  09F4  0012               	moviw fsr0++
 21080  09F5  3A6F               	xorlw	111
 21081  09F6  1D03               	btfss	3,2
 21082  09F7  2A40               	goto	l6964
 21083                           
 21084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 21085  09F8  0859               	movf	vfpfcnvrt@fmt,w
 21086  09F9  0086               	movwf	6
 21087  09FA  0187               	clrf	7
 21088  09FB  3001               	movlw	1
 21089  09FC  0781               	addwf	1,f
 21090  09FD  3141               	addfsr 1,1
 21091  09FE  1803               	skipnc
 21092  09FF  0A81               	incf	1,f
 21093                           
 21094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 21095  0A00  085A               	movf	vfpfcnvrt@ap,w
 21096  0A01  0086               	movwf	6
 21097  0A02  0187               	clrf	7
 21098  0A03  0801               	movf	1,w
 21099  0A04  0084               	movwf	4
 21100  0A05  0185               	clrf	5
 21101  0A06  3002               	movlw	2
 21102  0A07  0781               	addwf	1,f
 21103  0A08  3F00               	moviw [0]fsr0
 21104  0A09  0021               	movlb	1	; select bank1
 21105  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21106  0A0B  3F01               	moviw [1]fsr0
 21107  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21108  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21109  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21110  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21111  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21112  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21113  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21114                           
 21115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 21116  0A13  0020               	movlb	0	; select bank0
 21117  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 21118  0A15  00B1               	movwf	otoa@fp+1
 21119  0A16  0857               	movf	vfpfcnvrt@fp,w
 21120  0A17  00B0               	movwf	otoa@fp
 21121  0A18  0021               	movlb	1	; select bank1
 21122  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21123  0A1A  0020               	movlb	0	; select bank0
 21124  0A1B  00B2               	movwf	otoa@d
 21125  0A1C  0021               	movlb	1	; select bank1
 21126  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21127  0A1E  0020               	movlb	0	; select bank0
 21128  0A1F  00B3               	movwf	otoa@d+1
 21129  0A20  0021               	movlb	1	; select bank1
 21130  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21131  0A22  0020               	movlb	0	; select bank0
 21132  0A23  00B4               	movwf	otoa@d+2
 21133  0A24  0021               	movlb	1	; select bank1
 21134  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21135  0A26  0020               	movlb	0	; select bank0
 21136  0A27  00B5               	movwf	otoa@d+3
 21137  0A28  0021               	movlb	1	; select bank1
 21138  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21139  0A2A  0020               	movlb	0	; select bank0
 21140  0A2B  00B6               	movwf	otoa@d+4
 21141  0A2C  0021               	movlb	1	; select bank1
 21142  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21143  0A2E  0020               	movlb	0	; select bank0
 21144  0A2F  00B7               	movwf	otoa@d+5
 21145  0A30  0021               	movlb	1	; select bank1
 21146  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21147  0A32  0020               	movlb	0	; select bank0
 21148  0A33  00B8               	movwf	otoa@d+6
 21149  0A34  0021               	movlb	1	; select bank1
 21150  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21151  0A36  0020               	movlb	0	; select bank0
 21152  0A37  00B9               	movwf	otoa@d+7
 21153  0A38  31A4  240D         	fcall	_otoa
 21154  0A3A  0020               	movlb	0	; select bank0
 21155  0A3B  0831               	movf	?_otoa+1,w
 21156  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 21157  0A3D  0830               	movf	?_otoa,w
 21158  0A3E  00D7               	movwf	?_vfpfcnvrt
 21159  0A3F  0008               	return
 21160  0A40                     l6964:	
 21161                           
 21162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 21163  0A40  0859               	movf	vfpfcnvrt@fmt,w
 21164  0A41  0086               	movwf	6
 21165  0A42  0187               	clrf	7
 21166  0A43  3F40               	moviw [0]fsr1
 21167  0A44  00F1               	movwf	strncmp@_l
 21168  0A45  3F41               	moviw [1]fsr1
 21169  0A46  00F2               	movwf	strncmp@_l+1
 21170  0A47  3041               	movlw	low (STR_59| (0+32768))
 21171  0A48  00F3               	movwf	strncmp@_r
 21172  0A49  30BA               	movlw	high (STR_59| (0+32768))
 21173  0A4A  00F4               	movwf	strncmp@_r+1
 21174  0A4B  3002               	movlw	2
 21175  0A4C  00F5               	movwf	strncmp@n
 21176  0A4D  3000               	movlw	0
 21177  0A4E  00F6               	movwf	strncmp@n+1
 21178  0A4F  31A8  203F  3188   	fcall	_strncmp
 21179  0A52  0871               	movf	?_strncmp,w
 21180  0A53  0472               	iorwf	?_strncmp+1,w
 21181  0A54  1D03               	btfss	3,2
 21182  0A55  2A9F               	goto	l6974
 21183                           
 21184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 21185  0A56  0020               	movlb	0	; select bank0
 21186  0A57  0859               	movf	vfpfcnvrt@fmt,w
 21187  0A58  0086               	movwf	6
 21188  0A59  0187               	clrf	7
 21189  0A5A  3002               	movlw	2
 21190  0A5B  0781               	addwf	1,f
 21191  0A5C  3141               	addfsr 1,1
 21192  0A5D  1803               	skipnc
 21193  0A5E  0A81               	incf	1,f
 21194                           
 21195                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21196  0A5F  085A               	movf	vfpfcnvrt@ap,w
 21197  0A60  0086               	movwf	6
 21198  0A61  0187               	clrf	7
 21199  0A62  0801               	movf	1,w
 21200  0A63  0084               	movwf	4
 21201  0A64  0185               	clrf	5
 21202  0A65  3002               	movlw	2
 21203  0A66  0781               	addwf	1,f
 21204  0A67  3F00               	moviw [0]fsr0
 21205  0A68  0021               	movlb	1	; select bank1
 21206  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21207  0A6A  3F01               	moviw [1]fsr0
 21208  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21209  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21210  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21211  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21212  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21213  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21214  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21215                           
 21216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 21217  0A72  0020               	movlb	0	; select bank0
 21218  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 21219  0A74  00B1               	movwf	otoa@fp+1
 21220  0A75  0857               	movf	vfpfcnvrt@fp,w
 21221  0A76  00B0               	movwf	otoa@fp
 21222  0A77  0021               	movlb	1	; select bank1
 21223  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21224  0A79  0020               	movlb	0	; select bank0
 21225  0A7A  00B2               	movwf	otoa@d
 21226  0A7B  0021               	movlb	1	; select bank1
 21227  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21228  0A7D  0020               	movlb	0	; select bank0
 21229  0A7E  00B3               	movwf	otoa@d+1
 21230  0A7F  0021               	movlb	1	; select bank1
 21231  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21232  0A81  0020               	movlb	0	; select bank0
 21233  0A82  00B4               	movwf	otoa@d+2
 21234  0A83  0021               	movlb	1	; select bank1
 21235  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21236  0A85  0020               	movlb	0	; select bank0
 21237  0A86  00B5               	movwf	otoa@d+3
 21238  0A87  0021               	movlb	1	; select bank1
 21239  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21240  0A89  0020               	movlb	0	; select bank0
 21241  0A8A  00B6               	movwf	otoa@d+4
 21242  0A8B  0021               	movlb	1	; select bank1
 21243  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21244  0A8D  0020               	movlb	0	; select bank0
 21245  0A8E  00B7               	movwf	otoa@d+5
 21246  0A8F  0021               	movlb	1	; select bank1
 21247  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21248  0A91  0020               	movlb	0	; select bank0
 21249  0A92  00B8               	movwf	otoa@d+6
 21250  0A93  0021               	movlb	1	; select bank1
 21251  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21252  0A95  0020               	movlb	0	; select bank0
 21253  0A96  00B9               	movwf	otoa@d+7
 21254  0A97  31A4  240D         	fcall	_otoa
 21255  0A99  0020               	movlb	0	; select bank0
 21256  0A9A  0831               	movf	?_otoa+1,w
 21257  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 21258  0A9C  0830               	movf	?_otoa,w
 21259  0A9D  00D7               	movwf	?_vfpfcnvrt
 21260  0A9E  0008               	return
 21261  0A9F                     l6974:	
 21262                           
 21263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 21264  0A9F  0020               	movlb	0	; select bank0
 21265  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 21266  0AA1  0086               	movwf	6
 21267  0AA2  0187               	clrf	7
 21268  0AA3  3F40               	moviw [0]fsr1
 21269  0AA4  00F1               	movwf	strncmp@_l
 21270  0AA5  3F41               	moviw [1]fsr1
 21271  0AA6  00F2               	movwf	strncmp@_l+1
 21272  0AA7  3025               	movlw	low (STR_64| (0+32768))
 21273  0AA8  00F3               	movwf	strncmp@_r
 21274  0AA9  30BA               	movlw	high (STR_64| (0+32768))
 21275  0AAA  00F4               	movwf	strncmp@_r+1
 21276  0AAB  3003               	movlw	3
 21277  0AAC  00F5               	movwf	strncmp@n
 21278  0AAD  3000               	movlw	0
 21279  0AAE  00F6               	movwf	strncmp@n+1
 21280  0AAF  31A8  203F  3188   	fcall	_strncmp
 21281  0AB2  0871               	movf	?_strncmp,w
 21282  0AB3  0472               	iorwf	?_strncmp+1,w
 21283  0AB4  1D03               	btfss	3,2
 21284  0AB5  2B36               	goto	l6986
 21285                           
 21286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 21287  0AB6  0020               	movlb	0	; select bank0
 21288  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 21289  0AB8  0086               	movwf	6
 21290  0AB9  0187               	clrf	7
 21291  0ABA  3003               	movlw	3
 21292  0ABB  0781               	addwf	1,f
 21293  0ABC  3141               	addfsr 1,1
 21294  0ABD  1803               	skipnc
 21295  0ABE  0A81               	incf	1,f
 21296                           
 21297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21298  0ABF  085A               	movf	vfpfcnvrt@ap,w
 21299  0AC0  0086               	movwf	6
 21300  0AC1  0187               	clrf	7
 21301  0AC2  0801               	movf	1,w
 21302  0AC3  0084               	movwf	4
 21303  0AC4  0185               	clrf	5
 21304  0AC5  3002               	movlw	2
 21305  0AC6  0781               	addwf	1,f
 21306  0AC7  3F00               	moviw [0]fsr0
 21307  0AC8  0021               	movlb	1	; select bank1
 21308  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21309  0ACA  3F01               	moviw [1]fsr0
 21310  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21311                           
 21312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 21313  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21314  0ACD  0086               	movwf	6
 21315  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21316  0ACF  0087               	movwf	7
 21317  0AD0  0023               	movlb	3	; select bank3
 21318  0AD1  0844               	movf	_nout^(0+384),w
 21319  0AD2  0081               	movwf	1
 21320  0AD3  2B32               	goto	l6982
 21321  0AD4                     l6988:	
 21322                           
 21323                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 21324  0AD4  0020               	movlb	0	; select bank0
 21325  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 21326  0AD6  0086               	movwf	6
 21327  0AD7  0187               	clrf	7
 21328  0AD8  3002               	movlw	2
 21329  0AD9  0781               	addwf	1,f
 21330  0ADA  3141               	addfsr 1,1
 21331  0ADB  1803               	skipnc
 21332  0ADC  0A81               	incf	1,f
 21333                           
 21334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 21335  0ADD  085A               	movf	vfpfcnvrt@ap,w
 21336  0ADE  0086               	movwf	6
 21337  0ADF  0187               	clrf	7
 21338  0AE0  0801               	movf	1,w
 21339  0AE1  0084               	movwf	4
 21340  0AE2  0185               	clrf	5
 21341  0AE3  3002               	movlw	2
 21342  0AE4  0781               	addwf	1,f
 21343  0AE5  3F00               	moviw [0]fsr0
 21344  0AE6  0021               	movlb	1	; select bank1
 21345  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21346  0AE8  3F01               	moviw [1]fsr0
 21347  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21348                           
 21349                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 21350  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21351  0AEB  0086               	movwf	6
 21352  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21353  0AED  0087               	movwf	7
 21354  0AEE  0023               	movlb	3	; select bank3
 21355  0AEF  0844               	movf	_nout^(0+384),w
 21356  0AF0  3FC0               	movwi [0]fsr1
 21357  0AF1  0845               	movf	(_nout+1)^(0+384),w
 21358  0AF2  3FC1               	movwi [1]fsr1
 21359  0AF3  2B32               	goto	l6982
 21360  0AF4                     l7000:	
 21361                           
 21362                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 21363  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 21364  0AF5  0086               	movwf	6
 21365  0AF6  0187               	clrf	7
 21366  0AF7  3001               	movlw	1
 21367  0AF8  0781               	addwf	1,f
 21368  0AF9  3141               	addfsr 1,1
 21369  0AFA  1803               	skipnc
 21370  0AFB  0A81               	incf	1,f
 21371                           
 21372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 21373  0AFC  085A               	movf	vfpfcnvrt@ap,w
 21374  0AFD  0086               	movwf	6
 21375  0AFE  0187               	clrf	7
 21376  0AFF  0801               	movf	1,w
 21377  0B00  0084               	movwf	4
 21378  0B01  0185               	clrf	5
 21379  0B02  3002               	movlw	2
 21380  0B03  0781               	addwf	1,f
 21381  0B04  3F00               	moviw [0]fsr0
 21382  0B05  0021               	movlb	1	; select bank1
 21383  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21384  0B07  3F01               	moviw [1]fsr0
 21385  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21386                           
 21387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 21388  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21389  0B0A  0086               	movwf	6
 21390  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21391  0B0C  0087               	movwf	7
 21392  0B0D  0023               	movlb	3	; select bank3
 21393  0B0E  0844               	movf	_nout^(0+384),w
 21394  0B0F  3FC0               	movwi [0]fsr1
 21395  0B10  0845               	movf	(_nout+1)^(0+384),w
 21396  0B11  3FC1               	movwi [1]fsr1
 21397  0B12  2B32               	goto	l6982
 21398  0B13                     l7012:	
 21399                           
 21400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 21401  0B13  0020               	movlb	0	; select bank0
 21402  0B14  0859               	movf	vfpfcnvrt@fmt,w
 21403  0B15  0086               	movwf	6
 21404  0B16  0187               	clrf	7
 21405  0B17  3002               	movlw	2
 21406  0B18  0781               	addwf	1,f
 21407  0B19  3141               	addfsr 1,1
 21408  0B1A  1803               	skipnc
 21409  0B1B  0A81               	incf	1,f
 21410                           
 21411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 21412  0B1C  085A               	movf	vfpfcnvrt@ap,w
 21413  0B1D  0086               	movwf	6
 21414  0B1E  0187               	clrf	7
 21415  0B1F  0801               	movf	1,w
 21416  0B20  0084               	movwf	4
 21417  0B21  0185               	clrf	5
 21418  0B22  3002               	movlw	2
 21419  0B23  0781               	addwf	1,f
 21420  0B24  3F00               	moviw [0]fsr0
 21421  0B25  0021               	movlb	1	; select bank1
 21422  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 21423  0B27  3F01               	moviw [1]fsr0
 21424  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 21425                           
 21426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 21427  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 21428  0B2A  0086               	movwf	6
 21429  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 21430  0B2C  0087               	movwf	7
 21431  0B2D  0023               	movlb	3	; select bank3
 21432  0B2E  0844               	movf	_nout^(0+384),w
 21433  0B2F  3FC0               	movwi [0]fsr1
 21434  0B30  0845               	movf	(_nout+1)^(0+384),w
 21435  0B31  3FC1               	movwi [1]fsr1
 21436  0B32                     l6982:	
 21437                           
 21438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 21439  0B32  0020               	movlb	0	; select bank0
 21440  0B33  01D7               	clrf	?_vfpfcnvrt
 21441  0B34  01D8               	clrf	?_vfpfcnvrt+1
 21442  0B35  0008               	return
 21443  0B36                     l6986:	
 21444                           
 21445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 21446  0B36  0020               	movlb	0	; select bank0
 21447  0B37  0859               	movf	vfpfcnvrt@fmt,w
 21448  0B38  0086               	movwf	6
 21449  0B39  0187               	clrf	7
 21450  0B3A  3F40               	moviw [0]fsr1
 21451  0B3B  00F1               	movwf	strncmp@_l
 21452  0B3C  3F41               	moviw [1]fsr1
 21453  0B3D  00F2               	movwf	strncmp@_l+1
 21454  0B3E  3026               	movlw	low ((STR_64+1)| (0+32768))
 21455  0B3F  00F3               	movwf	strncmp@_r
 21456  0B40  30BA               	movlw	high ((STR_64+1)| (0+32768))
 21457  0B41  00F4               	movwf	strncmp@_r+1
 21458  0B42  3002               	movlw	2
 21459  0B43  00F5               	movwf	strncmp@n
 21460  0B44  3000               	movlw	0
 21461  0B45  00F6               	movwf	strncmp@n+1
 21462  0B46  31A8  203F  3188   	fcall	_strncmp
 21463  0B49  0871               	movf	?_strncmp,w
 21464  0B4A  0472               	iorwf	?_strncmp+1,w
 21465  0B4B  1903               	btfsc	3,2
 21466  0B4C  2AD4               	goto	l6988
 21467                           
 21468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 21469  0B4D  0020               	movlb	0	; select bank0
 21470  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 21471  0B4F  0086               	movwf	6
 21472  0B50  0187               	clrf	7
 21473  0B51  3F40               	moviw [0]fsr1
 21474  0B52  00DB               	movwf	??_vfpfcnvrt
 21475  0B53  3F41               	moviw [1]fsr1
 21476  0B54  00DC               	movwf	??_vfpfcnvrt+1
 21477  0B55  085B               	movf	??_vfpfcnvrt,w
 21478  0B56  0084               	movwf	4
 21479  0B57  085C               	movf	??_vfpfcnvrt+1,w
 21480  0B58  0085               	movwf	5
 21481  0B59  0012               	moviw fsr0++
 21482  0B5A  3A6E               	xorlw	110
 21483  0B5B  1903               	btfsc	3,2
 21484  0B5C  2AF4               	goto	l7000
 21485                           
 21486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 21487  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 21488  0B5E  0086               	movwf	6
 21489  0B5F  0187               	clrf	7
 21490  0B60  3F40               	moviw [0]fsr1
 21491  0B61  00F1               	movwf	strncmp@_l
 21492  0B62  3F41               	moviw [1]fsr1
 21493  0B63  00F2               	movwf	strncmp@_l+1
 21494  0B64  303E               	movlw	low (STR_74| (0+32768))
 21495  0B65  00F3               	movwf	strncmp@_r
 21496  0B66  30BA               	movlw	high (STR_74| (0+32768))
 21497  0B67  00F4               	movwf	strncmp@_r+1
 21498  0B68  3002               	movlw	2
 21499  0B69  00F5               	movwf	strncmp@n
 21500  0B6A  3000               	movlw	0
 21501  0B6B  00F6               	movwf	strncmp@n+1
 21502  0B6C  31A8  203F  3188   	fcall	_strncmp
 21503  0B6F  0871               	movf	?_strncmp,w
 21504  0B70  0472               	iorwf	?_strncmp+1,w
 21505  0B71  1903               	btfsc	3,2
 21506  0B72  2B13               	goto	l7012
 21507                           
 21508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 21509  0B73  0020               	movlb	0	; select bank0
 21510  0B74  0859               	movf	vfpfcnvrt@fmt,w
 21511  0B75  0086               	movwf	6
 21512  0B76  0187               	clrf	7
 21513  0B77  3F40               	moviw [0]fsr1
 21514  0B78  00DB               	movwf	??_vfpfcnvrt
 21515  0B79  3F41               	moviw [1]fsr1
 21516  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 21517  0B7B  085B               	movf	??_vfpfcnvrt,w
 21518  0B7C  0084               	movwf	4
 21519  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 21520  0B7E  0085               	movwf	5
 21521  0B7F  0012               	moviw fsr0++
 21522  0B80  3A70               	xorlw	112
 21523  0B81  1D03               	btfss	3,2
 21524  0B82  2BCF               	goto	l7032
 21525                           
 21526                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 21527  0B83  0859               	movf	vfpfcnvrt@fmt,w
 21528  0B84  0086               	movwf	6
 21529  0B85  0187               	clrf	7
 21530  0B86  3001               	movlw	1
 21531  0B87  0781               	addwf	1,f
 21532  0B88  3141               	addfsr 1,1
 21533  0B89  1803               	skipnc
 21534  0B8A  0A81               	incf	1,f
 21535                           
 21536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 21537  0B8B  085A               	movf	vfpfcnvrt@ap,w
 21538  0B8C  0086               	movwf	6
 21539  0B8D  0187               	clrf	7
 21540  0B8E  0801               	movf	1,w
 21541  0B8F  0084               	movwf	4
 21542  0B90  0185               	clrf	5
 21543  0B91  3002               	movlw	2
 21544  0B92  0781               	addwf	1,f
 21545  0B93  3F00               	moviw [0]fsr0
 21546  0B94  0021               	movlb	1	; select bank1
 21547  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21548  0B96  3F01               	moviw [1]fsr0
 21549  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21550  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21551  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21552  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21553  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21554  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21555  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21556                           
 21557                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 21558  0B9E  0020               	movlb	0	; select bank0
 21559  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 21560  0BA0  00B1               	movwf	xtoa@fp+1
 21561  0BA1  0857               	movf	vfpfcnvrt@fp,w
 21562  0BA2  00B0               	movwf	xtoa@fp
 21563  0BA3  0021               	movlb	1	; select bank1
 21564  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21565  0BA5  0020               	movlb	0	; select bank0
 21566  0BA6  00B2               	movwf	xtoa@d
 21567  0BA7  0021               	movlb	1	; select bank1
 21568  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21569  0BA9  0020               	movlb	0	; select bank0
 21570  0BAA  00B3               	movwf	xtoa@d+1
 21571  0BAB  0021               	movlb	1	; select bank1
 21572  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21573  0BAD  0020               	movlb	0	; select bank0
 21574  0BAE  00B4               	movwf	xtoa@d+2
 21575  0BAF  0021               	movlb	1	; select bank1
 21576  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21577  0BB1  0020               	movlb	0	; select bank0
 21578  0BB2  00B5               	movwf	xtoa@d+3
 21579  0BB3  0021               	movlb	1	; select bank1
 21580  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21581  0BB5  0020               	movlb	0	; select bank0
 21582  0BB6  00B6               	movwf	xtoa@d+4
 21583  0BB7  0021               	movlb	1	; select bank1
 21584  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21585  0BB9  0020               	movlb	0	; select bank0
 21586  0BBA  00B7               	movwf	xtoa@d+5
 21587  0BBB  0021               	movlb	1	; select bank1
 21588  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21589  0BBD  0020               	movlb	0	; select bank0
 21590  0BBE  00B8               	movwf	xtoa@d+6
 21591  0BBF  0021               	movlb	1	; select bank1
 21592  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21593  0BC1  0020               	movlb	0	; select bank0
 21594  0BC2  00B9               	movwf	xtoa@d+7
 21595  0BC3  3078               	movlw	120
 21596  0BC4  00DB               	movwf	??_vfpfcnvrt
 21597  0BC5  085B               	movf	??_vfpfcnvrt,w
 21598  0BC6  00BA               	movwf	xtoa@x
 21599  0BC7  319B  2389         	fcall	_xtoa
 21600  0BC9  0020               	movlb	0	; select bank0
 21601  0BCA  0831               	movf	?_xtoa+1,w
 21602  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 21603  0BCC  0830               	movf	?_xtoa,w
 21604  0BCD  00D7               	movwf	?_vfpfcnvrt
 21605  0BCE  0008               	return
 21606  0BCF                     l7032:	
 21607                           
 21608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 21609  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 21610  0BD0  0086               	movwf	6
 21611  0BD1  0187               	clrf	7
 21612  0BD2  3F40               	moviw [0]fsr1
 21613  0BD3  00DB               	movwf	??_vfpfcnvrt
 21614  0BD4  3F41               	moviw [1]fsr1
 21615  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 21616  0BD6  085B               	movf	??_vfpfcnvrt,w
 21617  0BD7  0084               	movwf	4
 21618  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 21619  0BD9  0085               	movwf	5
 21620  0BDA  0012               	moviw fsr0++
 21621  0BDB  3A73               	xorlw	115
 21622  0BDC  1D03               	btfss	3,2
 21623  0BDD  2C08               	goto	l7042
 21624                           
 21625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 21626  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 21627  0BDF  0086               	movwf	6
 21628  0BE0  0187               	clrf	7
 21629  0BE1  3001               	movlw	1
 21630  0BE2  0781               	addwf	1,f
 21631  0BE3  3141               	addfsr 1,1
 21632  0BE4  1803               	skipnc
 21633  0BE5  0A81               	incf	1,f
 21634                           
 21635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 21636  0BE6  085A               	movf	vfpfcnvrt@ap,w
 21637  0BE7  0086               	movwf	6
 21638  0BE8  0187               	clrf	7
 21639  0BE9  0801               	movf	1,w
 21640  0BEA  0084               	movwf	4
 21641  0BEB  0185               	clrf	5
 21642  0BEC  3002               	movlw	2
 21643  0BED  0781               	addwf	1,f
 21644  0BEE  3F00               	moviw [0]fsr0
 21645  0BEF  0021               	movlb	1	; select bank1
 21646  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 21647  0BF1  3F01               	moviw [1]fsr0
 21648  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 21649                           
 21650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 21651  0BF3  0020               	movlb	0	; select bank0
 21652  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 21653  0BF5  00A1               	movwf	stoa@fp+1
 21654  0BF6  0857               	movf	vfpfcnvrt@fp,w
 21655  0BF7  00A0               	movwf	stoa@fp
 21656  0BF8  0021               	movlb	1	; select bank1
 21657  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 21658  0BFA  0020               	movlb	0	; select bank0
 21659  0BFB  00A3               	movwf	stoa@s+1
 21660  0BFC  0021               	movlb	1	; select bank1
 21661  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 21662  0BFE  0020               	movlb	0	; select bank0
 21663  0BFF  00A2               	movwf	stoa@s
 21664  0C00  31AF  273B         	fcall	_stoa
 21665  0C02  0020               	movlb	0	; select bank0
 21666  0C03  0821               	movf	?_stoa+1,w
 21667  0C04  00D8               	movwf	?_vfpfcnvrt+1
 21668  0C05  0820               	movf	?_stoa,w
 21669  0C06  00D7               	movwf	?_vfpfcnvrt
 21670  0C07  0008               	return
 21671  0C08                     l7042:	
 21672                           
 21673                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 21674  0C08  0859               	movf	vfpfcnvrt@fmt,w
 21675  0C09  0086               	movwf	6
 21676  0C0A  0187               	clrf	7
 21677  0C0B  3F40               	moviw [0]fsr1
 21678  0C0C  00F1               	movwf	strncmp@_l
 21679  0C0D  3F41               	moviw [1]fsr1
 21680  0C0E  00F2               	movwf	strncmp@_l+1
 21681  0C0F  302D               	movlw	low (STR_79| (0+32768))
 21682  0C10  00F3               	movwf	strncmp@_r
 21683  0C11  30BA               	movlw	high (STR_79| (0+32768))
 21684  0C12  00F4               	movwf	strncmp@_r+1
 21685  0C13  3003               	movlw	3
 21686  0C14  00F5               	movwf	strncmp@n
 21687  0C15  3000               	movlw	0
 21688  0C16  00F6               	movwf	strncmp@n+1
 21689  0C17  31A8  203F  3188   	fcall	_strncmp
 21690  0C1A  0871               	movf	?_strncmp,w
 21691  0C1B  0472               	iorwf	?_strncmp+1,w
 21692  0C1C  1D03               	btfss	3,2
 21693  0C1D  2C66               	goto	l7052
 21694                           
 21695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 21696  0C1E  0020               	movlb	0	; select bank0
 21697  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 21698  0C20  0086               	movwf	6
 21699  0C21  0187               	clrf	7
 21700  0C22  3003               	movlw	3
 21701  0C23  0781               	addwf	1,f
 21702  0C24  3141               	addfsr 1,1
 21703  0C25  1803               	skipnc
 21704  0C26  0A81               	incf	1,f
 21705                           
 21706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21707  0C27  085A               	movf	vfpfcnvrt@ap,w
 21708  0C28  0086               	movwf	6
 21709  0C29  0187               	clrf	7
 21710  0C2A  0801               	movf	1,w
 21711  0C2B  0084               	movwf	4
 21712  0C2C  0185               	clrf	5
 21713  0C2D  3002               	movlw	2
 21714  0C2E  0781               	addwf	1,f
 21715  0C2F  0800               	movf	0,w
 21716  0C30  0021               	movlb	1	; select bank1
 21717  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21718  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21719  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21720  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21721  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21722  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21723  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21724  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21725                           
 21726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 21727  0C39  0020               	movlb	0	; select bank0
 21728  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 21729  0C3B  00B1               	movwf	utoa@fp+1
 21730  0C3C  0857               	movf	vfpfcnvrt@fp,w
 21731  0C3D  00B0               	movwf	utoa@fp
 21732  0C3E  0021               	movlb	1	; select bank1
 21733  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21734  0C40  0020               	movlb	0	; select bank0
 21735  0C41  00B2               	movwf	utoa@d
 21736  0C42  0021               	movlb	1	; select bank1
 21737  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21738  0C44  0020               	movlb	0	; select bank0
 21739  0C45  00B3               	movwf	utoa@d+1
 21740  0C46  0021               	movlb	1	; select bank1
 21741  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21742  0C48  0020               	movlb	0	; select bank0
 21743  0C49  00B4               	movwf	utoa@d+2
 21744  0C4A  0021               	movlb	1	; select bank1
 21745  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21746  0C4C  0020               	movlb	0	; select bank0
 21747  0C4D  00B5               	movwf	utoa@d+3
 21748  0C4E  0021               	movlb	1	; select bank1
 21749  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21750  0C50  0020               	movlb	0	; select bank0
 21751  0C51  00B6               	movwf	utoa@d+4
 21752  0C52  0021               	movlb	1	; select bank1
 21753  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21754  0C54  0020               	movlb	0	; select bank0
 21755  0C55  00B7               	movwf	utoa@d+5
 21756  0C56  0021               	movlb	1	; select bank1
 21757  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21758  0C58  0020               	movlb	0	; select bank0
 21759  0C59  00B8               	movwf	utoa@d+6
 21760  0C5A  0021               	movlb	1	; select bank1
 21761  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21762  0C5C  0020               	movlb	0	; select bank0
 21763  0C5D  00B9               	movwf	utoa@d+7
 21764  0C5E  31A3  232C         	fcall	_utoa
 21765  0C60  0020               	movlb	0	; select bank0
 21766  0C61  0831               	movf	?_utoa+1,w
 21767  0C62  00D8               	movwf	?_vfpfcnvrt+1
 21768  0C63  0830               	movf	?_utoa,w
 21769  0C64  00D7               	movwf	?_vfpfcnvrt
 21770  0C65  0008               	return
 21771  0C66                     l7052:	
 21772                           
 21773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 21774  0C66  0020               	movlb	0	; select bank0
 21775  0C67  0859               	movf	vfpfcnvrt@fmt,w
 21776  0C68  0086               	movwf	6
 21777  0C69  0187               	clrf	7
 21778  0C6A  3F40               	moviw [0]fsr1
 21779  0C6B  00F1               	movwf	strncmp@_l
 21780  0C6C  3F41               	moviw [1]fsr1
 21781  0C6D  00F2               	movwf	strncmp@_l+1
 21782  0C6E  302E               	movlw	low ((STR_79+1)| (0+32768))
 21783  0C6F  00F3               	movwf	strncmp@_r
 21784  0C70  30BA               	movlw	high ((STR_79+1)| (0+32768))
 21785  0C71  00F4               	movwf	strncmp@_r+1
 21786  0C72  3002               	movlw	2
 21787  0C73  00F5               	movwf	strncmp@n
 21788  0C74  3000               	movlw	0
 21789  0C75  00F6               	movwf	strncmp@n+1
 21790  0C76  31A8  203F  3188   	fcall	_strncmp
 21791  0C79  0871               	movf	?_strncmp,w
 21792  0C7A  0472               	iorwf	?_strncmp+1,w
 21793  0C7B  1D03               	btfss	3,2
 21794  0C7C  2CC6               	goto	l7062
 21795                           
 21796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 21797  0C7D  0020               	movlb	0	; select bank0
 21798  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 21799  0C7F  0086               	movwf	6
 21800  0C80  0187               	clrf	7
 21801  0C81  3002               	movlw	2
 21802  0C82  0781               	addwf	1,f
 21803  0C83  3141               	addfsr 1,1
 21804  0C84  1803               	skipnc
 21805  0C85  0A81               	incf	1,f
 21806                           
 21807                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 21808  0C86  085A               	movf	vfpfcnvrt@ap,w
 21809  0C87  0086               	movwf	6
 21810  0C88  0187               	clrf	7
 21811  0C89  0801               	movf	1,w
 21812  0C8A  0084               	movwf	4
 21813  0C8B  0185               	clrf	5
 21814  0C8C  3002               	movlw	2
 21815  0C8D  0781               	addwf	1,f
 21816  0C8E  3F00               	moviw [0]fsr0
 21817  0C8F  0021               	movlb	1	; select bank1
 21818  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21819  0C91  3F01               	moviw [1]fsr0
 21820  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21821  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21822  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21823  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21824  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21825  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21826  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21827                           
 21828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 21829  0C99  0020               	movlb	0	; select bank0
 21830  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 21831  0C9B  00B1               	movwf	utoa@fp+1
 21832  0C9C  0857               	movf	vfpfcnvrt@fp,w
 21833  0C9D  00B0               	movwf	utoa@fp
 21834  0C9E  0021               	movlb	1	; select bank1
 21835  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21836  0CA0  0020               	movlb	0	; select bank0
 21837  0CA1  00B2               	movwf	utoa@d
 21838  0CA2  0021               	movlb	1	; select bank1
 21839  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21840  0CA4  0020               	movlb	0	; select bank0
 21841  0CA5  00B3               	movwf	utoa@d+1
 21842  0CA6  0021               	movlb	1	; select bank1
 21843  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21844  0CA8  0020               	movlb	0	; select bank0
 21845  0CA9  00B4               	movwf	utoa@d+2
 21846  0CAA  0021               	movlb	1	; select bank1
 21847  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21848  0CAC  0020               	movlb	0	; select bank0
 21849  0CAD  00B5               	movwf	utoa@d+3
 21850  0CAE  0021               	movlb	1	; select bank1
 21851  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21852  0CB0  0020               	movlb	0	; select bank0
 21853  0CB1  00B6               	movwf	utoa@d+4
 21854  0CB2  0021               	movlb	1	; select bank1
 21855  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21856  0CB4  0020               	movlb	0	; select bank0
 21857  0CB5  00B7               	movwf	utoa@d+5
 21858  0CB6  0021               	movlb	1	; select bank1
 21859  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21860  0CB8  0020               	movlb	0	; select bank0
 21861  0CB9  00B8               	movwf	utoa@d+6
 21862  0CBA  0021               	movlb	1	; select bank1
 21863  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21864  0CBC  0020               	movlb	0	; select bank0
 21865  0CBD  00B9               	movwf	utoa@d+7
 21866  0CBE  31A3  232C         	fcall	_utoa
 21867  0CC0  0020               	movlb	0	; select bank0
 21868  0CC1  0831               	movf	?_utoa+1,w
 21869  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 21870  0CC3  0830               	movf	?_utoa,w
 21871  0CC4  00D7               	movwf	?_vfpfcnvrt
 21872  0CC5  0008               	return
 21873  0CC6                     l7062:	
 21874                           
 21875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 21876  0CC6  0020               	movlb	0	; select bank0
 21877  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 21878  0CC8  0086               	movwf	6
 21879  0CC9  0187               	clrf	7
 21880  0CCA  3F40               	moviw [0]fsr1
 21881  0CCB  00DB               	movwf	??_vfpfcnvrt
 21882  0CCC  3F41               	moviw [1]fsr1
 21883  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 21884  0CCE  085B               	movf	??_vfpfcnvrt,w
 21885  0CCF  0084               	movwf	4
 21886  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 21887  0CD1  0085               	movwf	5
 21888  0CD2  0012               	moviw fsr0++
 21889  0CD3  3A75               	xorlw	117
 21890  0CD4  1D03               	btfss	3,2
 21891  0CD5  2D1E               	goto	l7072
 21892                           
 21893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 21894  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 21895  0CD7  0086               	movwf	6
 21896  0CD8  0187               	clrf	7
 21897  0CD9  3001               	movlw	1
 21898  0CDA  0781               	addwf	1,f
 21899  0CDB  3141               	addfsr 1,1
 21900  0CDC  1803               	skipnc
 21901  0CDD  0A81               	incf	1,f
 21902                           
 21903                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 21904  0CDE  085A               	movf	vfpfcnvrt@ap,w
 21905  0CDF  0086               	movwf	6
 21906  0CE0  0187               	clrf	7
 21907  0CE1  0801               	movf	1,w
 21908  0CE2  0084               	movwf	4
 21909  0CE3  0185               	clrf	5
 21910  0CE4  3002               	movlw	2
 21911  0CE5  0781               	addwf	1,f
 21912  0CE6  3F00               	moviw [0]fsr0
 21913  0CE7  0021               	movlb	1	; select bank1
 21914  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21915  0CE9  3F01               	moviw [1]fsr0
 21916  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21917  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21918  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21919  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21920  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21921  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21922  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21923                           
 21924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 21925  0CF1  0020               	movlb	0	; select bank0
 21926  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 21927  0CF3  00B1               	movwf	utoa@fp+1
 21928  0CF4  0857               	movf	vfpfcnvrt@fp,w
 21929  0CF5  00B0               	movwf	utoa@fp
 21930  0CF6  0021               	movlb	1	; select bank1
 21931  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21932  0CF8  0020               	movlb	0	; select bank0
 21933  0CF9  00B2               	movwf	utoa@d
 21934  0CFA  0021               	movlb	1	; select bank1
 21935  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21936  0CFC  0020               	movlb	0	; select bank0
 21937  0CFD  00B3               	movwf	utoa@d+1
 21938  0CFE  0021               	movlb	1	; select bank1
 21939  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21940  0D00  0020               	movlb	0	; select bank0
 21941  0D01  00B4               	movwf	utoa@d+2
 21942  0D02  0021               	movlb	1	; select bank1
 21943  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21944  0D04  0020               	movlb	0	; select bank0
 21945  0D05  00B5               	movwf	utoa@d+3
 21946  0D06  0021               	movlb	1	; select bank1
 21947  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21948  0D08  0020               	movlb	0	; select bank0
 21949  0D09  00B6               	movwf	utoa@d+4
 21950  0D0A  0021               	movlb	1	; select bank1
 21951  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21952  0D0C  0020               	movlb	0	; select bank0
 21953  0D0D  00B7               	movwf	utoa@d+5
 21954  0D0E  0021               	movlb	1	; select bank1
 21955  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21956  0D10  0020               	movlb	0	; select bank0
 21957  0D11  00B8               	movwf	utoa@d+6
 21958  0D12  0021               	movlb	1	; select bank1
 21959  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21960  0D14  0020               	movlb	0	; select bank0
 21961  0D15  00B9               	movwf	utoa@d+7
 21962  0D16  31A3  232C         	fcall	_utoa
 21963  0D18  0020               	movlb	0	; select bank0
 21964  0D19  0831               	movf	?_utoa+1,w
 21965  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 21966  0D1B  0830               	movf	?_utoa,w
 21967  0D1C  00D7               	movwf	?_vfpfcnvrt
 21968  0D1D  0008               	return
 21969  0D1E                     l7072:	
 21970                           
 21971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 21972  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 21973  0D1F  0086               	movwf	6
 21974  0D20  0187               	clrf	7
 21975  0D21  3F40               	moviw [0]fsr1
 21976  0D22  00F1               	movwf	strncmp@_l
 21977  0D23  3F41               	moviw [1]fsr1
 21978  0D24  00F2               	movwf	strncmp@_l+1
 21979  0D25  3044               	movlw	low (STR_89| (0+32768))
 21980  0D26  00F3               	movwf	strncmp@_r
 21981  0D27  30BA               	movlw	high (STR_89| (0+32768))
 21982  0D28  00F4               	movwf	strncmp@_r+1
 21983  0D29  3002               	movlw	2
 21984  0D2A  00F5               	movwf	strncmp@n
 21985  0D2B  3000               	movlw	0
 21986  0D2C  00F6               	movwf	strncmp@n+1
 21987  0D2D  31A8  203F  3188   	fcall	_strncmp
 21988  0D30  0871               	movf	?_strncmp,w
 21989  0D31  0472               	iorwf	?_strncmp+1,w
 21990  0D32  1D03               	btfss	3,2
 21991  0D33  2D7D               	goto	l7082
 21992                           
 21993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 21994  0D34  0020               	movlb	0	; select bank0
 21995  0D35  0859               	movf	vfpfcnvrt@fmt,w
 21996  0D36  0086               	movwf	6
 21997  0D37  0187               	clrf	7
 21998  0D38  3002               	movlw	2
 21999  0D39  0781               	addwf	1,f
 22000  0D3A  3141               	addfsr 1,1
 22001  0D3B  1803               	skipnc
 22002  0D3C  0A81               	incf	1,f
 22003                           
 22004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22005  0D3D  085A               	movf	vfpfcnvrt@ap,w
 22006  0D3E  0086               	movwf	6
 22007  0D3F  0187               	clrf	7
 22008  0D40  0801               	movf	1,w
 22009  0D41  0084               	movwf	4
 22010  0D42  0185               	clrf	5
 22011  0D43  3002               	movlw	2
 22012  0D44  0781               	addwf	1,f
 22013  0D45  3F00               	moviw [0]fsr0
 22014  0D46  0021               	movlb	1	; select bank1
 22015  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22016  0D48  3F01               	moviw [1]fsr0
 22017  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22018  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22019  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22020  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22021  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22022  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22023  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22024                           
 22025                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 22026  0D50  0020               	movlb	0	; select bank0
 22027  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 22028  0D52  00B1               	movwf	utoa@fp+1
 22029  0D53  0857               	movf	vfpfcnvrt@fp,w
 22030  0D54  00B0               	movwf	utoa@fp
 22031  0D55  0021               	movlb	1	; select bank1
 22032  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22033  0D57  0020               	movlb	0	; select bank0
 22034  0D58  00B2               	movwf	utoa@d
 22035  0D59  0021               	movlb	1	; select bank1
 22036  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22037  0D5B  0020               	movlb	0	; select bank0
 22038  0D5C  00B3               	movwf	utoa@d+1
 22039  0D5D  0021               	movlb	1	; select bank1
 22040  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22041  0D5F  0020               	movlb	0	; select bank0
 22042  0D60  00B4               	movwf	utoa@d+2
 22043  0D61  0021               	movlb	1	; select bank1
 22044  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22045  0D63  0020               	movlb	0	; select bank0
 22046  0D64  00B5               	movwf	utoa@d+3
 22047  0D65  0021               	movlb	1	; select bank1
 22048  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22049  0D67  0020               	movlb	0	; select bank0
 22050  0D68  00B6               	movwf	utoa@d+4
 22051  0D69  0021               	movlb	1	; select bank1
 22052  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22053  0D6B  0020               	movlb	0	; select bank0
 22054  0D6C  00B7               	movwf	utoa@d+5
 22055  0D6D  0021               	movlb	1	; select bank1
 22056  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22057  0D6F  0020               	movlb	0	; select bank0
 22058  0D70  00B8               	movwf	utoa@d+6
 22059  0D71  0021               	movlb	1	; select bank1
 22060  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22061  0D73  0020               	movlb	0	; select bank0
 22062  0D74  00B9               	movwf	utoa@d+7
 22063  0D75  31A3  232C         	fcall	_utoa
 22064  0D77  0020               	movlb	0	; select bank0
 22065  0D78  0831               	movf	?_utoa+1,w
 22066  0D79  00D8               	movwf	?_vfpfcnvrt+1
 22067  0D7A  0830               	movf	?_utoa,w
 22068  0D7B  00D7               	movwf	?_vfpfcnvrt
 22069  0D7C  0008               	return
 22070  0D7D                     l7082:	
 22071                           
 22072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 22073  0D7D  0020               	movlb	0	; select bank0
 22074  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 22075  0D7F  0086               	movwf	6
 22076  0D80  0187               	clrf	7
 22077  0D81  3F40               	moviw [0]fsr1
 22078  0D82  00F1               	movwf	strncmp@_l
 22079  0D83  3F41               	moviw [1]fsr1
 22080  0D84  00F2               	movwf	strncmp@_l+1
 22081  0D85  3031               	movlw	low (STR_94| (0+32768))
 22082  0D86  00F3               	movwf	strncmp@_r
 22083  0D87  30BA               	movlw	high (STR_94| (0+32768))
 22084  0D88  00F4               	movwf	strncmp@_r+1
 22085  0D89  3003               	movlw	3
 22086  0D8A  00F5               	movwf	strncmp@n
 22087  0D8B  3000               	movlw	0
 22088  0D8C  00F6               	movwf	strncmp@n+1
 22089  0D8D  31A8  203F  3188   	fcall	_strncmp
 22090  0D90  0871               	movf	?_strncmp,w
 22091  0D91  0472               	iorwf	?_strncmp+1,w
 22092  0D92  1903               	btfsc	3,2
 22093  0D93  2DAB               	goto	l7086
 22094  0D94  0020               	movlb	0	; select bank0
 22095  0D95  0859               	movf	vfpfcnvrt@fmt,w
 22096  0D96  0086               	movwf	6
 22097  0D97  0187               	clrf	7
 22098  0D98  3F40               	moviw [0]fsr1
 22099  0D99  00F1               	movwf	strncmp@_l
 22100  0D9A  3F41               	moviw [1]fsr1
 22101  0D9B  00F2               	movwf	strncmp@_l+1
 22102  0D9C  3019               	movlw	low (STR_98| (0+32768))
 22103  0D9D  00F3               	movwf	strncmp@_r
 22104  0D9E  30BA               	movlw	high (STR_98| (0+32768))
 22105  0D9F  00F4               	movwf	strncmp@_r+1
 22106  0DA0  3003               	movlw	3
 22107  0DA1  00F5               	movwf	strncmp@n
 22108  0DA2  3000               	movlw	0
 22109  0DA3  00F6               	movwf	strncmp@n+1
 22110  0DA4  31A8  203F  3188   	fcall	_strncmp
 22111  0DA7  0871               	movf	?_strncmp,w
 22112  0DA8  0472               	iorwf	?_strncmp+1,w
 22113  0DA9  1D03               	btfss	3,2
 22114  0DAA  2E0D               	goto	l7096
 22115  0DAB                     l7086:	
 22116                           
 22117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 22118  0DAB  0020               	movlb	0	; select bank0
 22119  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 22120  0DAD  0086               	movwf	6
 22121  0DAE  0187               	clrf	7
 22122  0DAF  3F40               	moviw [0]fsr1
 22123  0DB0  00DB               	movwf	??_vfpfcnvrt
 22124  0DB1  3F41               	moviw [1]fsr1
 22125  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 22126  0DB3  3002               	movlw	2
 22127  0DB4  075B               	addwf	??_vfpfcnvrt,w
 22128  0DB5  0084               	movwf	4
 22129  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 22130  0DB7  1803               	skipnc
 22131  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 22132  0DB9  0085               	movwf	5
 22133  0DBA  0800               	movf	0,w	;code access
 22134  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 22135  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 22136  0DBD  0021               	movlb	1	; select bank1
 22137  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22138                           
 22139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 22140  0DBF  0020               	movlb	0	; select bank0
 22141  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 22142  0DC1  0086               	movwf	6
 22143  0DC2  0187               	clrf	7
 22144  0DC3  3003               	movlw	3
 22145  0DC4  0781               	addwf	1,f
 22146  0DC5  3141               	addfsr 1,1
 22147  0DC6  1803               	skipnc
 22148  0DC7  0A81               	incf	1,f
 22149                           
 22150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22151  0DC8  085A               	movf	vfpfcnvrt@ap,w
 22152  0DC9  0086               	movwf	6
 22153  0DCA  0187               	clrf	7
 22154  0DCB  0801               	movf	1,w
 22155  0DCC  0084               	movwf	4
 22156  0DCD  0185               	clrf	5
 22157  0DCE  3002               	movlw	2
 22158  0DCF  0781               	addwf	1,f
 22159  0DD0  0800               	movf	0,w
 22160  0DD1  0021               	movlb	1	; select bank1
 22161  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22162  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22163  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22164  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22165  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22166  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22167  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22168  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22169                           
 22170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 22171  0DDA  0020               	movlb	0	; select bank0
 22172  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 22173  0DDC  00B1               	movwf	xtoa@fp+1
 22174  0DDD  0857               	movf	vfpfcnvrt@fp,w
 22175  0DDE  00B0               	movwf	xtoa@fp
 22176  0DDF  0021               	movlb	1	; select bank1
 22177  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22178  0DE1  0020               	movlb	0	; select bank0
 22179  0DE2  00B2               	movwf	xtoa@d
 22180  0DE3  0021               	movlb	1	; select bank1
 22181  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22182  0DE5  0020               	movlb	0	; select bank0
 22183  0DE6  00B3               	movwf	xtoa@d+1
 22184  0DE7  0021               	movlb	1	; select bank1
 22185  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22186  0DE9  0020               	movlb	0	; select bank0
 22187  0DEA  00B4               	movwf	xtoa@d+2
 22188  0DEB  0021               	movlb	1	; select bank1
 22189  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22190  0DED  0020               	movlb	0	; select bank0
 22191  0DEE  00B5               	movwf	xtoa@d+3
 22192  0DEF  0021               	movlb	1	; select bank1
 22193  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22194  0DF1  0020               	movlb	0	; select bank0
 22195  0DF2  00B6               	movwf	xtoa@d+4
 22196  0DF3  0021               	movlb	1	; select bank1
 22197  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22198  0DF5  0020               	movlb	0	; select bank0
 22199  0DF6  00B7               	movwf	xtoa@d+5
 22200  0DF7  0021               	movlb	1	; select bank1
 22201  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22202  0DF9  0020               	movlb	0	; select bank0
 22203  0DFA  00B8               	movwf	xtoa@d+6
 22204  0DFB  0021               	movlb	1	; select bank1
 22205  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22206  0DFD  0020               	movlb	0	; select bank0
 22207  0DFE  00B9               	movwf	xtoa@d+7
 22208  0DFF  0021               	movlb	1	; select bank1
 22209  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 22210  0E01  0020               	movlb	0	; select bank0
 22211  0E02  00DB               	movwf	??_vfpfcnvrt
 22212  0E03  085B               	movf	??_vfpfcnvrt,w
 22213  0E04  00BA               	movwf	xtoa@x
 22214  0E05  319B  2389         	fcall	_xtoa
 22215  0E07  0020               	movlb	0	; select bank0
 22216  0E08  0831               	movf	?_xtoa+1,w
 22217  0E09  00D8               	movwf	?_vfpfcnvrt+1
 22218  0E0A  0830               	movf	?_xtoa,w
 22219  0E0B  00D7               	movwf	?_vfpfcnvrt
 22220  0E0C  0008               	return
 22221  0E0D                     l7096:	
 22222                           
 22223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 22224  0E0D  0020               	movlb	0	; select bank0
 22225  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 22226  0E0F  0086               	movwf	6
 22227  0E10  0187               	clrf	7
 22228  0E11  3F40               	moviw [0]fsr1
 22229  0E12  00F1               	movwf	strncmp@_l
 22230  0E13  3F41               	moviw [1]fsr1
 22231  0E14  00F2               	movwf	strncmp@_l+1
 22232  0E15  3032               	movlw	low ((STR_94+1)| (0+32768))
 22233  0E16  00F3               	movwf	strncmp@_r
 22234  0E17  30BA               	movlw	high ((STR_94+1)| (0+32768))
 22235  0E18  00F4               	movwf	strncmp@_r+1
 22236  0E19  3002               	movlw	2
 22237  0E1A  00F5               	movwf	strncmp@n
 22238  0E1B  3000               	movlw	0
 22239  0E1C  00F6               	movwf	strncmp@n+1
 22240  0E1D  31A8  203F  3188   	fcall	_strncmp
 22241  0E20  0871               	movf	?_strncmp,w
 22242  0E21  0472               	iorwf	?_strncmp+1,w
 22243  0E22  1903               	btfsc	3,2
 22244  0E23  2E3B               	goto	l7100
 22245  0E24  0020               	movlb	0	; select bank0
 22246  0E25  0859               	movf	vfpfcnvrt@fmt,w
 22247  0E26  0086               	movwf	6
 22248  0E27  0187               	clrf	7
 22249  0E28  3F40               	moviw [0]fsr1
 22250  0E29  00F1               	movwf	strncmp@_l
 22251  0E2A  3F41               	moviw [1]fsr1
 22252  0E2B  00F2               	movwf	strncmp@_l+1
 22253  0E2C  301A               	movlw	low ((STR_98+1)| (0+32768))
 22254  0E2D  00F3               	movwf	strncmp@_r
 22255  0E2E  30BA               	movlw	high ((STR_98+1)| (0+32768))
 22256  0E2F  00F4               	movwf	strncmp@_r+1
 22257  0E30  3002               	movlw	2
 22258  0E31  00F5               	movwf	strncmp@n
 22259  0E32  3000               	movlw	0
 22260  0E33  00F6               	movwf	strncmp@n+1
 22261  0E34  31A8  203F  3188   	fcall	_strncmp
 22262  0E37  0871               	movf	?_strncmp,w
 22263  0E38  0472               	iorwf	?_strncmp+1,w
 22264  0E39  1D03               	btfss	3,2
 22265  0E3A  2E9E               	goto	l7110
 22266  0E3B                     l7100:	
 22267                           
 22268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 22269  0E3B  0020               	movlb	0	; select bank0
 22270  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 22271  0E3D  0086               	movwf	6
 22272  0E3E  0187               	clrf	7
 22273  0E3F  3F40               	moviw [0]fsr1
 22274  0E40  00DB               	movwf	??_vfpfcnvrt
 22275  0E41  3F41               	moviw [1]fsr1
 22276  0E42  00DC               	movwf	??_vfpfcnvrt+1
 22277  0E43  3001               	movlw	1
 22278  0E44  075B               	addwf	??_vfpfcnvrt,w
 22279  0E45  0084               	movwf	4
 22280  0E46  085C               	movf	??_vfpfcnvrt+1,w
 22281  0E47  1803               	skipnc
 22282  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 22283  0E49  0085               	movwf	5
 22284  0E4A  0800               	movf	0,w	;code access
 22285  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 22286  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 22287  0E4D  0021               	movlb	1	; select bank1
 22288  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22289                           
 22290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 22291  0E4F  0020               	movlb	0	; select bank0
 22292  0E50  0859               	movf	vfpfcnvrt@fmt,w
 22293  0E51  0086               	movwf	6
 22294  0E52  0187               	clrf	7
 22295  0E53  3002               	movlw	2
 22296  0E54  0781               	addwf	1,f
 22297  0E55  3141               	addfsr 1,1
 22298  0E56  1803               	skipnc
 22299  0E57  0A81               	incf	1,f
 22300                           
 22301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22302  0E58  085A               	movf	vfpfcnvrt@ap,w
 22303  0E59  0086               	movwf	6
 22304  0E5A  0187               	clrf	7
 22305  0E5B  0801               	movf	1,w
 22306  0E5C  0084               	movwf	4
 22307  0E5D  0185               	clrf	5
 22308  0E5E  3002               	movlw	2
 22309  0E5F  0781               	addwf	1,f
 22310  0E60  3F00               	moviw [0]fsr0
 22311  0E61  0021               	movlb	1	; select bank1
 22312  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22313  0E63  3F01               	moviw [1]fsr0
 22314  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22315  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22316  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22317  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22318  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22319  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22320  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22321                           
 22322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 22323  0E6B  0020               	movlb	0	; select bank0
 22324  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 22325  0E6D  00B1               	movwf	xtoa@fp+1
 22326  0E6E  0857               	movf	vfpfcnvrt@fp,w
 22327  0E6F  00B0               	movwf	xtoa@fp
 22328  0E70  0021               	movlb	1	; select bank1
 22329  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22330  0E72  0020               	movlb	0	; select bank0
 22331  0E73  00B2               	movwf	xtoa@d
 22332  0E74  0021               	movlb	1	; select bank1
 22333  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22334  0E76  0020               	movlb	0	; select bank0
 22335  0E77  00B3               	movwf	xtoa@d+1
 22336  0E78  0021               	movlb	1	; select bank1
 22337  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22338  0E7A  0020               	movlb	0	; select bank0
 22339  0E7B  00B4               	movwf	xtoa@d+2
 22340  0E7C  0021               	movlb	1	; select bank1
 22341  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22342  0E7E  0020               	movlb	0	; select bank0
 22343  0E7F  00B5               	movwf	xtoa@d+3
 22344  0E80  0021               	movlb	1	; select bank1
 22345  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22346  0E82  0020               	movlb	0	; select bank0
 22347  0E83  00B6               	movwf	xtoa@d+4
 22348  0E84  0021               	movlb	1	; select bank1
 22349  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22350  0E86  0020               	movlb	0	; select bank0
 22351  0E87  00B7               	movwf	xtoa@d+5
 22352  0E88  0021               	movlb	1	; select bank1
 22353  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22354  0E8A  0020               	movlb	0	; select bank0
 22355  0E8B  00B8               	movwf	xtoa@d+6
 22356  0E8C  0021               	movlb	1	; select bank1
 22357  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22358  0E8E  0020               	movlb	0	; select bank0
 22359  0E8F  00B9               	movwf	xtoa@d+7
 22360  0E90  0021               	movlb	1	; select bank1
 22361  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 22362  0E92  0020               	movlb	0	; select bank0
 22363  0E93  00DB               	movwf	??_vfpfcnvrt
 22364  0E94  085B               	movf	??_vfpfcnvrt,w
 22365  0E95  00BA               	movwf	xtoa@x
 22366  0E96  319B  2389         	fcall	_xtoa
 22367  0E98  0020               	movlb	0	; select bank0
 22368  0E99  0831               	movf	?_xtoa+1,w
 22369  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 22370  0E9B  0830               	movf	?_xtoa,w
 22371  0E9C  00D7               	movwf	?_vfpfcnvrt
 22372  0E9D  0008               	return
 22373  0E9E                     l7110:	
 22374                           
 22375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 22376  0E9E  0020               	movlb	0	; select bank0
 22377  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 22378  0EA0  0086               	movwf	6
 22379  0EA1  0187               	clrf	7
 22380  0EA2  3F40               	moviw [0]fsr1
 22381  0EA3  00DB               	movwf	??_vfpfcnvrt
 22382  0EA4  3F41               	moviw [1]fsr1
 22383  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 22384  0EA6  085B               	movf	??_vfpfcnvrt,w
 22385  0EA7  0084               	movwf	4
 22386  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 22387  0EA9  0085               	movwf	5
 22388  0EAA  0012               	moviw fsr0++
 22389  0EAB  3A78               	xorlw	120
 22390  0EAC  1903               	btfsc	3,2
 22391  0EAD  2EBD               	goto	l7114
 22392  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 22393  0EAF  0086               	movwf	6
 22394  0EB0  0187               	clrf	7
 22395  0EB1  3F40               	moviw [0]fsr1
 22396  0EB2  00DB               	movwf	??_vfpfcnvrt
 22397  0EB3  3F41               	moviw [1]fsr1
 22398  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 22399  0EB5  085B               	movf	??_vfpfcnvrt,w
 22400  0EB6  0084               	movwf	4
 22401  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 22402  0EB8  0085               	movwf	5
 22403  0EB9  0012               	moviw fsr0++
 22404  0EBA  3A58               	xorlw	88
 22405  0EBB  1D03               	btfss	3,2
 22406  0EBC  2F1C               	goto	l7124
 22407  0EBD                     l7114:	
 22408                           
 22409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 22410  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 22411  0EBE  0086               	movwf	6
 22412  0EBF  0187               	clrf	7
 22413  0EC0  3F40               	moviw [0]fsr1
 22414  0EC1  00DB               	movwf	??_vfpfcnvrt
 22415  0EC2  3F41               	moviw [1]fsr1
 22416  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 22417  0EC4  085B               	movf	??_vfpfcnvrt,w
 22418  0EC5  0084               	movwf	4
 22419  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 22420  0EC7  0085               	movwf	5
 22421  0EC8  0800               	movf	0,w	;code access
 22422  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 22423  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 22424  0ECB  0021               	movlb	1	; select bank1
 22425  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22426                           
 22427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 22428  0ECD  0020               	movlb	0	; select bank0
 22429  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 22430  0ECF  0086               	movwf	6
 22431  0ED0  0187               	clrf	7
 22432  0ED1  3001               	movlw	1
 22433  0ED2  0781               	addwf	1,f
 22434  0ED3  3141               	addfsr 1,1
 22435  0ED4  1803               	skipnc
 22436  0ED5  0A81               	incf	1,f
 22437                           
 22438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22439  0ED6  085A               	movf	vfpfcnvrt@ap,w
 22440  0ED7  0086               	movwf	6
 22441  0ED8  0187               	clrf	7
 22442  0ED9  0801               	movf	1,w
 22443  0EDA  0084               	movwf	4
 22444  0EDB  0185               	clrf	5
 22445  0EDC  3002               	movlw	2
 22446  0EDD  0781               	addwf	1,f
 22447  0EDE  3F00               	moviw [0]fsr0
 22448  0EDF  0021               	movlb	1	; select bank1
 22449  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22450  0EE1  3F01               	moviw [1]fsr0
 22451  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22452  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22453  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22454  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22455  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22456  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22457  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22458                           
 22459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 22460  0EE9  0020               	movlb	0	; select bank0
 22461  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 22462  0EEB  00B1               	movwf	xtoa@fp+1
 22463  0EEC  0857               	movf	vfpfcnvrt@fp,w
 22464  0EED  00B0               	movwf	xtoa@fp
 22465  0EEE  0021               	movlb	1	; select bank1
 22466  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22467  0EF0  0020               	movlb	0	; select bank0
 22468  0EF1  00B2               	movwf	xtoa@d
 22469  0EF2  0021               	movlb	1	; select bank1
 22470  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22471  0EF4  0020               	movlb	0	; select bank0
 22472  0EF5  00B3               	movwf	xtoa@d+1
 22473  0EF6  0021               	movlb	1	; select bank1
 22474  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22475  0EF8  0020               	movlb	0	; select bank0
 22476  0EF9  00B4               	movwf	xtoa@d+2
 22477  0EFA  0021               	movlb	1	; select bank1
 22478  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22479  0EFC  0020               	movlb	0	; select bank0
 22480  0EFD  00B5               	movwf	xtoa@d+3
 22481  0EFE  0021               	movlb	1	; select bank1
 22482  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22483  0F00  0020               	movlb	0	; select bank0
 22484  0F01  00B6               	movwf	xtoa@d+4
 22485  0F02  0021               	movlb	1	; select bank1
 22486  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22487  0F04  0020               	movlb	0	; select bank0
 22488  0F05  00B7               	movwf	xtoa@d+5
 22489  0F06  0021               	movlb	1	; select bank1
 22490  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22491  0F08  0020               	movlb	0	; select bank0
 22492  0F09  00B8               	movwf	xtoa@d+6
 22493  0F0A  0021               	movlb	1	; select bank1
 22494  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22495  0F0C  0020               	movlb	0	; select bank0
 22496  0F0D  00B9               	movwf	xtoa@d+7
 22497  0F0E  0021               	movlb	1	; select bank1
 22498  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 22499  0F10  0020               	movlb	0	; select bank0
 22500  0F11  00DB               	movwf	??_vfpfcnvrt
 22501  0F12  085B               	movf	??_vfpfcnvrt,w
 22502  0F13  00BA               	movwf	xtoa@x
 22503  0F14  319B  2389         	fcall	_xtoa
 22504  0F16  0020               	movlb	0	; select bank0
 22505  0F17  0831               	movf	?_xtoa+1,w
 22506  0F18  00D8               	movwf	?_vfpfcnvrt+1
 22507  0F19  0830               	movf	?_xtoa,w
 22508  0F1A  00D7               	movwf	?_vfpfcnvrt
 22509  0F1B  0008               	return
 22510  0F1C                     l7124:	
 22511                           
 22512                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 22513  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 22514  0F1D  0086               	movwf	6
 22515  0F1E  0187               	clrf	7
 22516  0F1F  3F40               	moviw [0]fsr1
 22517  0F20  00F1               	movwf	strncmp@_l
 22518  0F21  3F41               	moviw [1]fsr1
 22519  0F22  00F2               	movwf	strncmp@_l+1
 22520  0F23  3047               	movlw	low (STR_112| (0+32768))
 22521  0F24  00F3               	movwf	strncmp@_r
 22522  0F25  30BA               	movlw	high (STR_112| (0+32768))
 22523  0F26  00F4               	movwf	strncmp@_r+1
 22524  0F27  3002               	movlw	2
 22525  0F28  00F5               	movwf	strncmp@n
 22526  0F29  3000               	movlw	0
 22527  0F2A  00F6               	movwf	strncmp@n+1
 22528  0F2B  31A8  203F  3188   	fcall	_strncmp
 22529  0F2E  0871               	movf	?_strncmp,w
 22530  0F2F  0472               	iorwf	?_strncmp+1,w
 22531  0F30  1903               	btfsc	3,2
 22532  0F31  2F49               	goto	l7128
 22533  0F32  0020               	movlb	0	; select bank0
 22534  0F33  0859               	movf	vfpfcnvrt@fmt,w
 22535  0F34  0086               	movwf	6
 22536  0F35  0187               	clrf	7
 22537  0F36  3F40               	moviw [0]fsr1
 22538  0F37  00F1               	movwf	strncmp@_l
 22539  0F38  3F41               	moviw [1]fsr1
 22540  0F39  00F2               	movwf	strncmp@_l+1
 22541  0F3A  3035               	movlw	low (STR_116| (0+32768))
 22542  0F3B  00F3               	movwf	strncmp@_r
 22543  0F3C  30BA               	movlw	high (STR_116| (0+32768))
 22544  0F3D  00F4               	movwf	strncmp@_r+1
 22545  0F3E  3002               	movlw	2
 22546  0F3F  00F5               	movwf	strncmp@n
 22547  0F40  3000               	movlw	0
 22548  0F41  00F6               	movwf	strncmp@n+1
 22549  0F42  31A8  203F  3188   	fcall	_strncmp
 22550  0F45  0871               	movf	?_strncmp,w
 22551  0F46  0472               	iorwf	?_strncmp+1,w
 22552  0F47  1D03               	btfss	3,2
 22553  0F48  2FAC               	goto	l7138
 22554  0F49                     l7128:	
 22555                           
 22556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 22557  0F49  0020               	movlb	0	; select bank0
 22558  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 22559  0F4B  0086               	movwf	6
 22560  0F4C  0187               	clrf	7
 22561  0F4D  3F40               	moviw [0]fsr1
 22562  0F4E  00DB               	movwf	??_vfpfcnvrt
 22563  0F4F  3F41               	moviw [1]fsr1
 22564  0F50  00DC               	movwf	??_vfpfcnvrt+1
 22565  0F51  3001               	movlw	1
 22566  0F52  075B               	addwf	??_vfpfcnvrt,w
 22567  0F53  0084               	movwf	4
 22568  0F54  085C               	movf	??_vfpfcnvrt+1,w
 22569  0F55  1803               	skipnc
 22570  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 22571  0F57  0085               	movwf	5
 22572  0F58  0800               	movf	0,w	;code access
 22573  0F59  00DD               	movwf	??_vfpfcnvrt+2
 22574  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 22575  0F5B  0021               	movlb	1	; select bank1
 22576  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22577                           
 22578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 22579  0F5D  0020               	movlb	0	; select bank0
 22580  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 22581  0F5F  0086               	movwf	6
 22582  0F60  0187               	clrf	7
 22583  0F61  3002               	movlw	2
 22584  0F62  0781               	addwf	1,f
 22585  0F63  3141               	addfsr 1,1
 22586  0F64  1803               	skipnc
 22587  0F65  0A81               	incf	1,f
 22588                           
 22589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22590  0F66  085A               	movf	vfpfcnvrt@ap,w
 22591  0F67  0086               	movwf	6
 22592  0F68  0187               	clrf	7
 22593  0F69  0801               	movf	1,w
 22594  0F6A  0084               	movwf	4
 22595  0F6B  0185               	clrf	5
 22596  0F6C  3002               	movlw	2
 22597  0F6D  0781               	addwf	1,f
 22598  0F6E  3F00               	moviw [0]fsr0
 22599  0F6F  0021               	movlb	1	; select bank1
 22600  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22601  0F71  3F01               	moviw [1]fsr0
 22602  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22603  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22604  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22605  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22606  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22607  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22608  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22609                           
 22610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 22611  0F79  0020               	movlb	0	; select bank0
 22612  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 22613  0F7B  00B1               	movwf	xtoa@fp+1
 22614  0F7C  0857               	movf	vfpfcnvrt@fp,w
 22615  0F7D  00B0               	movwf	xtoa@fp
 22616  0F7E  0021               	movlb	1	; select bank1
 22617  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22618  0F80  0020               	movlb	0	; select bank0
 22619  0F81  00B2               	movwf	xtoa@d
 22620  0F82  0021               	movlb	1	; select bank1
 22621  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22622  0F84  0020               	movlb	0	; select bank0
 22623  0F85  00B3               	movwf	xtoa@d+1
 22624  0F86  0021               	movlb	1	; select bank1
 22625  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22626  0F88  0020               	movlb	0	; select bank0
 22627  0F89  00B4               	movwf	xtoa@d+2
 22628  0F8A  0021               	movlb	1	; select bank1
 22629  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22630  0F8C  0020               	movlb	0	; select bank0
 22631  0F8D  00B5               	movwf	xtoa@d+3
 22632  0F8E  0021               	movlb	1	; select bank1
 22633  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22634  0F90  0020               	movlb	0	; select bank0
 22635  0F91  00B6               	movwf	xtoa@d+4
 22636  0F92  0021               	movlb	1	; select bank1
 22637  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22638  0F94  0020               	movlb	0	; select bank0
 22639  0F95  00B7               	movwf	xtoa@d+5
 22640  0F96  0021               	movlb	1	; select bank1
 22641  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22642  0F98  0020               	movlb	0	; select bank0
 22643  0F99  00B8               	movwf	xtoa@d+6
 22644  0F9A  0021               	movlb	1	; select bank1
 22645  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22646  0F9C  0020               	movlb	0	; select bank0
 22647  0F9D  00B9               	movwf	xtoa@d+7
 22648  0F9E  0021               	movlb	1	; select bank1
 22649  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 22650  0FA0  0020               	movlb	0	; select bank0
 22651  0FA1  00DB               	movwf	??_vfpfcnvrt
 22652  0FA2  085B               	movf	??_vfpfcnvrt,w
 22653  0FA3  00BA               	movwf	xtoa@x
 22654  0FA4  319B  2389         	fcall	_xtoa
 22655  0FA6  0020               	movlb	0	; select bank0
 22656  0FA7  0831               	movf	?_xtoa+1,w
 22657  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 22658  0FA9  0830               	movf	?_xtoa,w
 22659  0FAA  00D7               	movwf	?_vfpfcnvrt
 22660  0FAB  0008               	return
 22661  0FAC                     l7138:	
 22662                           
 22663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 22664  0FAC  0020               	movlb	0	; select bank0
 22665  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 22666  0FAE  0086               	movwf	6
 22667  0FAF  0187               	clrf	7
 22668  0FB0  3F40               	moviw [0]fsr1
 22669  0FB1  00DB               	movwf	??_vfpfcnvrt
 22670  0FB2  3F41               	moviw [1]fsr1
 22671  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 22672  0FB4  085B               	movf	??_vfpfcnvrt,w
 22673  0FB5  0084               	movwf	4
 22674  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 22675  0FB7  0085               	movwf	5
 22676  0FB8  0012               	moviw fsr0++
 22677  0FB9  3A25               	xorlw	37
 22678  0FBA  1D03               	btfss	3,2
 22679  0FBB  2FD4               	goto	l7148
 22680                           
 22681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 22682  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 22683  0FBD  0086               	movwf	6
 22684  0FBE  0187               	clrf	7
 22685  0FBF  3001               	movlw	1
 22686  0FC0  0781               	addwf	1,f
 22687  0FC1  3141               	addfsr 1,1
 22688  0FC2  1803               	skipnc
 22689  0FC3  0A81               	incf	1,f
 22690                           
 22691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 22692  0FC4  3025               	movlw	37
 22693  0FC5  00F1               	movwf	fputc@c
 22694  0FC6  3000               	movlw	0
 22695  0FC7  00F2               	movwf	fputc@c+1
 22696  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 22697  0FC9  00F4               	movwf	fputc@fp+1
 22698  0FCA  0857               	movf	vfpfcnvrt@fp,w
 22699  0FCB  00F3               	movwf	fputc@fp
 22700  0FCC  31A8  2091         	fcall	_fputc
 22701  0FCE                     l7144:	
 22702                           
 22703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 22704  0FCE  3001               	movlw	1
 22705  0FCF  0020               	movlb	0	; select bank0
 22706  0FD0  00D7               	movwf	?_vfpfcnvrt
 22707  0FD1  3000               	movlw	0
 22708  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 22709  0FD3  0008               	return
 22710  0FD4                     l7148:	
 22711                           
 22712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 22713  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 22714  0FD5  0086               	movwf	6
 22715  0FD6  0187               	clrf	7
 22716  0FD7  3001               	movlw	1
 22717  0FD8  0781               	addwf	1,f
 22718  0FD9  3141               	addfsr 1,1
 22719  0FDA  1803               	skipnc
 22720  0FDB  0A81               	incf	1,f
 22721  0FDC  2B32               	goto	l6982
 22722  0FDD                     l7154:	
 22723                           
 22724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 22725  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 22726  0FDE  0086               	movwf	6
 22727  0FDF  0187               	clrf	7
 22728  0FE0  3F40               	moviw [0]fsr1
 22729  0FE1  00DB               	movwf	??_vfpfcnvrt
 22730  0FE2  3F41               	moviw [1]fsr1
 22731  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 22732  0FE4  085B               	movf	??_vfpfcnvrt,w
 22733  0FE5  0084               	movwf	4
 22734  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 22735  0FE7  0085               	movwf	5
 22736  0FE8  0800               	movf	0,w	;code access
 22737  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 22738  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 22739  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 22740  0FEC  00F1               	movwf	fputc@c
 22741  0FED  085E               	movf	??_vfpfcnvrt+3,w
 22742  0FEE  00F2               	movwf	fputc@c+1
 22743  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 22744  0FF0  00F4               	movwf	fputc@fp+1
 22745  0FF1  0857               	movf	vfpfcnvrt@fp,w
 22746  0FF2  00F3               	movwf	fputc@fp
 22747  0FF3  31A8  2091  3188   	fcall	_fputc
 22748                           
 22749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 22750  0FF6  0020               	movlb	0	; select bank0
 22751  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 22752  0FF8  0086               	movwf	6
 22753  0FF9  0187               	clrf	7
 22754  0FFA  3001               	movlw	1
 22755  0FFB  0781               	addwf	1,f
 22756  0FFC  3141               	addfsr 1,1
 22757  0FFD  1803               	skipnc
 22758  0FFE  0A81               	incf	1,f
 22759  0FFF  2FCE               	goto	l7144
 22760  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     472
    Constant    114
    Data        9
    BSS         102
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     79      80
    BANK2            80     69      79
    BANK3            80      2      69
    BANK4            80      0      32
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_20(CODE[18]), STR_19(CODE[18]), STR_18(CODE[19]), STR_17(CODE[20]), 
		 -> STR_16(CODE[20]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[22]), STR_11(CODE[22]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_118(CODE[3]), STR_114(CODE[3]), STR_109(CODE[3]), STR_105(CODE[3]), 
		 -> STR_100(CODE[4]), STR_96(CODE[4]), STR_91(CODE[3]), STR_86(CODE[3]), 
		 -> STR_81(CODE[4]), STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[4]), 
		 -> STR_61(CODE[3]), STR_56(CODE[3]), STR_51(CODE[4]), STR_46(CODE[3]), 
		 -> STR_42(CODE[3]), STR_37(CODE[3]), STR_33(CODE[3]), STR_28(CODE[4]), 
		 -> STR_24(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_118(CODE[3]), STR_114(CODE[3]), STR_109(CODE[3]), STR_105(CODE[3]), 
		 -> STR_100(CODE[4]), STR_96(CODE[4]), STR_91(CODE[3]), STR_86(CODE[3]), 
		 -> STR_81(CODE[4]), STR_76(CODE[3]), STR_71(CODE[3]), STR_66(CODE[4]), 
		 -> STR_61(CODE[3]), STR_56(CODE[3]), STR_51(CODE[4]), STR_46(CODE[3]), 
		 -> STR_42(CODE[3]), STR_37(CODE[3]), STR_33(CODE[3]), STR_28(CODE[4]), 
		 -> STR_24(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_20(CODE[18]), STR_19(CODE[18]), STR_18(CODE[19]), STR_17(CODE[20]), 
		 -> STR_16(CODE[20]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[22]), STR_11(CODE[22]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_20(CODE[18]), STR_19(CODE[18]), STR_18(CODE[19]), STR_17(CODE[20]), 
		 -> STR_16(CODE[20]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[22]), STR_11(CODE[22]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_20(CODE[18]), STR_19(CODE[18]), STR_18(CODE[19]), STR_17(CODE[20]), 
		 -> STR_16(CODE[20]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[22]), STR_11(CODE[22]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1718_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_20(CODE[18]), STR_19(CODE[18]), STR_18(CODE[19]), STR_17(CODE[20]), 
		 -> STR_16(CODE[20]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[22]), STR_11(CODE[22]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 71
		 -> STR_20(CODE[18]), STR_19(CODE[18]), STR_18(CODE[19]), STR_17(CODE[20]), 
		 -> STR_16(CODE[20]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[22]), STR_11(CODE[22]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 71
		 -> STR_20(CODE[18]), STR_19(CODE[18]), STR_18(CODE[19]), STR_17(CODE[20]), 
		 -> STR_16(CODE[20]), STR_15(CODE[21]), STR_14(CODE[21]), STR_13(CODE[21]), 
		 -> STR_12(CODE[22]), STR_11(CODE[22]), STR_10(CODE[21]), STR_9(CODE[21]), 
		 -> STR_6(CODE[15]), STR_5(CODE[15]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[71]), STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_21(CODE[3]), STR_8(CODE[3]), STR_7(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _updateCurrent->___fltol
    ___flmul->__Umul8_16
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->___fladd
    ___flneg->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    _updateCurrent->___fltol
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  375740
                                              0 BANK3      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     481
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  372881
                                             66 BANK2      3     3      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   71504
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            34     4     30   61223
                                             76 BANK0      4     4      0
                                             44 BANK1     30     0     30
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   56076
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   55039
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   54264
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    8411
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     191
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7272
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     412
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     421
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5995
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2652
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6544
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    8126
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     613
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     625
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5656
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5396
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     242
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1969
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1577
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2319
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     259
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     371
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2051
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   74986
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1520
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    1036
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   19764
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     626
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   16910
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   16907
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   13142
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     481
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     481
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  148979
                     _enableCharging
                  _enableDischarging
                      _updateCurrent
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   32153
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  59    59      0   62482
                                             20 BANK1     59    59      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   27318
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6067
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    5462
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        6     6      0   27960
                                             17 BANK1      6     6      0
                  _I2C_writeRegister
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2096
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     967
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     155
                                             58 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    8033
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     980
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3663
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   13192
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   13192
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    8230
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateCurrent
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     45      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      2      45      11       86.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      20      13       40.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     161      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     161      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar 07 23:31:57 2020

          __end_of_setShortCircuitProtection 191C                               _maxCellVoltage 01C8  
                      __end_of_send_I2C_data 33F5                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124F  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                        ___wmul@multiplicand 0073                        _setShuntResistorValue 3412  
                        __Umul8_16@word_mpld 0077                                          l320 33FA  
                                        l243 0801                                          l308 2804  
                                        l164 2A81                                          l342 35C1  
                    enableDischarging@enable 0020                                          l344 35C6  
                                        l345 35CB                                          l290 3404  
                                        l346 35E0                                          l284 3447  
                                        l278 33F1                                          l702 2F7D  
                                        l447 2E71                                          l711 2FD8  
                                        l296 33DF                                          l642 37E5  
                                        l723 234E                                          l660 1AB1  
                                        l654 1A7B                                          l734 1B90  
                                        l639 37C5                                          l663 1B47  
                                        l655 1A82                                          l719 2333  
                                        l912 2C08                                          l680 2414  
                                        l738 1BAB                                          l770 1E8D  
                                        l659 1A9D                                          l691 24CF  
                                        l771 1E90                                          l684 242F  
                                        l772 1E93                                          l685 24C4  
                                        l773 1E96                                          l847 3501  
                                        l759 1CAE                                          l775 1EC9  
                                        l960 231A                                          l768 1E81  
                                        l947 25DF                                          _Lg1 3A0D  
                                        _Lg2 3A09                                          _Lg3 3A05  
                                        _Lg4 3A01                          __size_of_AFE_UPDATE 0019  
                                        _abs 3481                               RGB_color@color 0071  
                                        _pad 37AF                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0034                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 2A0A  
                               __CFG_LVP$OFF 0000                                 ___fltol@exp1 007B  
                                       l1025 2A9D                                         ?_abs 0074  
                                       l1204 1D2B                                         l1028 2AEB  
                                       l1048 2985                                         l1152 06D5  
                                       l1080 2B69                                         l1225 1E32  
                                       l1226 1E4A                                         l1154 06B8  
                                       l1322 2CE2                                         l1090 29F9  
                                       l1228 1E57                                         l1148 0642  
                                       l1190 07CF                                         l1182 07B7  
                                       l1256 1242                                         l1169 0758  
                                       l1282 2027                                         l1295 2071  
                                       l1296 207B                                         l1288 205D  
                                       l1449 35B1                                         l7000 0AF4  
                                       l7100 0E3B                                         l7012 0B13  
                                       l6302 37C7                                         l7110 0E9E  
                                       ?_pad 0026                                         l7032 0BCF  
                                       l8000 2BF2                                         l6306 37F1  
                                       l7114 0EBD                                         l7042 0C08  
                                       l7204 0637                                         l6260 28C4  
                                       l6412 22ED                                         l6500 1AAC  
                                       l7124 0F1C                                         l7052 0C66  
                                       l7214 064C                                         l8102 27E0  
                                       l6254 2899                                         l6406 22AE  
                                       l6414 22F9                                         l6430 2B24  
                                       l7062 0CC6                                         l7320 077E  
                                       l7208 063A                                         l8008 35D0  
                                       l6256 289D                                         l6272 07DB  
                                       l6280 347A                                         l6360 254F  
                                       l6408 22BD                                         l6504 1ADE  
                                       l7144 0FCE                                         l7128 0F49  
                                       l7072 0D1E                                         l7400 363C  
                                       l7314 0777                                         l7306 076A  
                                       l7322 0780                                         l8042 1814  
                                       l6338 34FB                                         l8026 34E1  
                                       l6362 2553                                         l6514 1AB9  
                                       l6522 1B53                                         l6610 2F9F  
                                       l6450 29BD                                         l7138 0FAC  
                                       l7082 0D7D                                         l7154 0FDD  
                                       l7402 365C                                         l7332 078B  
                                       l7252 06C0                                         l7244 0688  
                                       l7180 060F                                         l8132 2230  
                                       l8060 18D2                                         l6292 37BB  
                                       l6372 256A                                         l6356 2528  
                                       l6532 1B66                                         l6620 2FAF  
                                       l6612 2FAC                                         l6428 2B15  
                                       l7148 0FD4                                         l7510 1DC1  
                                       l7430 1CFF                                         l7350 07C7  
                                       l7270 06E3                                         l7254 06C2  
                                       l7262 06D0                                         l6278 346E  
                                       l6382 25B2                                         l6374 2579  
                                       l6526 1B5B                                         l6630 2FFA  
                                       l6606 2F8E                                         l6438 2B5D  
                                       l6454 29ED                                         l7086 0DAB  
                                       l7512 1DD8                                         l7432 1D07  
                                       l7328 0789                                         l7280 06F7  
                                       l7184 0612                                         l8128 2208  
                                       l8080 26FA                                         l8064 18FC  
                                       l8048 18C0                                         l6464 355E  
                                       l6296 37C3                                         l6472 3610  
                                       l6384 25BE                                         l6536 1B73  
                                       l6624 2FDC                                         l6448 29AE  
                                       l6640 2346                                         l7096 0E0D  
                                       l7522 1DF1                                         l7450 1D23  
                                       l7426 1CFC                                         l7354 07CB  
                                       l7186 061A                                         l8154 212C  
                                       l6474 3619                                         l6394 227A  
                                       l6554 2476                                         l6546 2427  
                                       l6730 1CCC                                         l6706 1C3B  
                                       l6714 1C7D                                         l8332 2DB0  
                                       l8260 3758                                         l8252 282C  
                                       l7532 1E1A                                         l7460 1D4A  
                                       l7364 35AB                                         l6580 24E8  
                                       l6564 2451                                         l6628 2FED  
                                       l6812 1E83                                         l7518 1DEF  
                                       l7446 1D20                                         l7710 204A  
                                       l8174 2F16                                         l7278 06F5  
                                       l8158 2154                                         l8086 27A6  
                                       l6398 22A1                                         l6494 1A95  
                                       l6646 2391                                         l6910 0843  
                                       l6902 2697                                         l6822 1E99  
                                       l7720 2062                                         l7704 2036  
                                       l8176 2F25                                         l7288 0706  
                                       l6760 2CE6                                         l6752 2CAA  
                                       l6592 2F56                                         l6656 23F2  
                                       l6832 1ED0                                         l8360 2A0B  
                                       l7546 1E53                                         l7466 1D56  
                                       l7650 11C1                                         l7570 1047  
                                       l8178 2F2D                                         l7298 0750  
                                       l8098 27B8                                         l6770 2D15  
                                       l6754 2CAF                                         l6746 2C9A  
                                       l6738 2C7E                                         l6658 236D  
                                       l6666 23F7                                         l6690 1BED  
                                       l6682 1BBB                                         l6922 08B3  
                                       l6914 0862                                         l8418 36B8  
                                       l7900 2C62                                         l7492 1DB6  
                                       l7660 11DA                                         l7732 2096  
                                       l7708 203A                                         l8268 35F3  
                                       l6756 2CC3                                         l6676 1BA3  
                                       l6844 1EFE                                         l6828 1E9E  
                                       l7486 1D9D                                         l7494 1D7F  
                                       l7670 1203                                         l7566 103D  
                                       l7718 206F                                         l8278 2DC8  
                                       l6790 2879                                         l6686 1BD3  
                                       l6934 0929                                         l6926 08E0  
                                       l6870 1F9B                                         l6846 1F0E  
                                       l6854 1F41                                         l8382 2A3E  
                                       l7904 2C70                                         l7496 1DBB  
                                       l7680 122F                                         l7656 11D8  
                                       l7648 11AA                                         l7584 1060  
                                       l7568 103F                                         l7808 01DB  
                                       l6792 2854                                         l6944 0988  
                                       l6848 1F17                                         l7674 1218  
                                       l7586 1062                                         l7914 2AB7  
                                       l6954 09E8                                         l6890 261E  
                                       l6866 1F82                                         l8378 2A2E  
                                       l8394 2A69                                         l7596 1078  
                                       l7588 106A                                         l7860 3679  
                                       l6964 0A40                                         l6868 1F92  
                                       l6876 1FC5                                         l8388 2A52  
                                       l7942 294E                                         l7782 011B  
                                       l7774 009C                                         l7918 2AD1  
                                       l8590 2CBB                                         l6798 2880  
                                       l6982 0B32                                         l6974 0A9F  
                                       l6886 25F1                                         l7960 2981  
                                       l7776 00B8                                         l7856 366E  
                                       l8592 35D5                                         l7938 2945  
                                       l7698 201F                                         l6986 0B36  
                                       l6898 2669                                         l8586 2A73  
                                       l7788 0178                                         l7796 01C1  
                                       l6988 0AD4                                         l8588 1EB7  
                                       l7886 2C29                                         l7878 2C19  
                                       l7958 2973                                         l7896 2C57  
                                       l7888 2C37                                         l7968 2992  
                                       l7984 2BA1                                         l7986 2BA9  
                                       l7978 2B8D                                         l7996 2BE7  
                                       l7998 2BEB                                         STR_1 3849  
                               __CFG_WDTE$ON 0000                                         STR_2 3802  
                                       STR_3 38CD                                         STR_4 3937  
                                       STR_5 39CB                                         STR_6 39DA  
                                       STR_7 3871                                         _BRGH 0CF2  
                                       _CREN 0CEC                                         u8000 255A  
                 enableDischarging@sys_ctrl2 007B                                         _SCS0 04C8  
                                       u8035 259F                                         _SCS1 04C9  
                                       u8300 1A52                                         u9100 1FB7  
                                       u8205 2B4A                                         u9110 1FB8  
                                       u8135 22DB                                         u8170 2B05  
                                       u9050 1F33                                         u9060 1F34  
                                       u8405 1AD9                                         u8245 29DB  
                                       u8345 1A8D                                         u8505 2465  
                                       u8290 1A51                                         u8515 2471  
                                       u7900 3462                                         u7805 37D1  
                                       u8605 2FAA                                         u7910 3463  
                                       u8550 2F45                                         u7830 34A7  
                                       u7735 28C2                                         u8375 1B51  
                                       u8615 2FB9                                         u7840 34A8  
                                       u7760 34BE                                         u7825 348A  
                                       u8465 241F                                         u7850 357B  
                                       u7770 34BF                                         u8395 1ACD  
                                       u8475 24A8                                         u8635 2FF8  
                                       u7860 357C                                         u8485 24CD  
                                       u8725 1B9B                                         u9550 06A7  
                                       u8910 2CFA                                         u7870 1011  
                                       u8750 1C04                                         u7935 3502  
                                       u8655 233E                                         u8815 1C61  
                                       u9560 06A8                                         u8920 2CFB  
                                       u7880 1012                                         u8760 1C05  
                                       u9545 069C                                         u7945 3507  
                                       u8585 2F76                                         u8825 1C87  
                                       u8745 1BE7                                         u9715 076B  
                                       u8780 1C24                                         u8685 2380  
                                       u8845 1C9D                                         u8790 1C25  
                                       u9815 07A2                                         u8695 238C  
                                       u8855 1CA9                                         u9673 0718  
                                       u9665 06FB                                         u9595 06C6  
                                       _TMR1 0016                                         u9895 35B2  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 0220                               ?_updateCurrent 0070  
                                       _atoi 2C79                                         _ctoa 3603  
                                       _main 3697                                         _dtoa 1A36  
                                       _logf 006B                                         _prec 0167  
                                       _otoa 240D                                         _nout 01C4  
                                       pad@i 002C                                         pad@p 0029  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       pad@w 002E                                         _stoa 2F3B  
                                       btemp 007E                                         _utoa 232C  
                                       _xtoa 1B89                                         start 0020  
                            ___fldiv@new_exp 0052                       __end_of_updateVoltages 1527  
                   __end_of_send_I2C_stopBit 2808                            _enableDischarging 2808  
                                      ??_abs 0076                                        ??_pad 002B  
                       _send_I2C_controlByte 33FE                                ?_EUSART_Write 0070  
                         ?_enableDischarging 0020                                ___fltol@sign1 007A  
                            __end_of___aldiv 2C79                              __end_of___aodiv 25F1  
                                      ?_atoi 0077                                        ?_ctoa 0030  
                            __end_of___fladd 07D7                                        ?_main 0070  
                                      ?_dtoa 0030                              __end_of___aomod 232C  
              I2C_writeRegister@slaveAddress 0075                                        ?_logf 00A8  
                            __end_of___fldiv 1E5C                              __end_of___flneg 3412  
                                      STR_10 38E3                                        STR_11 38B7  
                                      STR_20 3999                                        STR_13 38F8  
                                      STR_22 3A1D                                        STR_14 390D  
                                      STR_15 3922                                        STR_24 3A1D  
                                      STR_40 3A38                                        STR_16 394C  
                                      STR_33 3A1E                                        STR_17 3960  
                                      STR_42 3A38                                        STR_26 3A21  
                                      STR_18 3974                                        STR_51 3A29  
                                      STR_19 3987                                        STR_28 3A21  
                                      STR_44 3A3B                                        STR_37 3A22  
                                      STR_61 3A41                                        STR_46 3A3B  
                                      STR_71 3A26                                        STR_56 3A2A  
                                      STR_64 3A25                                        STR_81 3A2D  
                                      STR_49 3A29                                        STR_66 3A25  
                                      STR_74 3A3E                                        STR_91 3A44  
                                      STR_59 3A41                                        STR_76 3A3E  
                                      STR_86 3A2E                                        STR_94 3A31  
                                      STR_79 3A2D                                        STR_96 3A31  
                            __end_of___flmul 124F                                        STR_89 3A44  
                                      STR_98 3A19                                        ?_otoa 0030  
                            __end_of___flsub 36FE                              __end_of___fltol 29A1  
                                      ?_stoa 0020                                        ?_utoa 0030  
                                      u10105 1D97                                        u10115 1DAB  
                                      u10145 1DC4                                        u11025 2974  
                                      u10235 1E08                                        u10075 1D87  
                                      u10245 1E23                                        u10165 1DCD  
                                      u10085 1D8E                                        u10405 11AD  
                                      u11205 27D1                                        u11125 2BDE  
                                      u10255 1E3C                                        u11055 2989  
                                      u10505 120C                                        u10425 11B6  
                                      u11225 21E2                                        u11330 35E9  
                                      u10515 1222                                        u10355 10EE  
                                      u11235 2220                              __end_of___lodiv 2B7A  
                                      u11340 35EA                                        u11405 2D24  
                                      u10365 111D                                        u10605 2069  
                                      u11165 18EB                                        u11350 35F8  
                                      u11415 2D3B                                        u10375 1173  
                                      u11255 210D                                        ?_xtoa 0030  
                                      u11360 35F9                                        u10385 118A  
                                      u11265 2144                                        u11435 2D71  
                                      u10395 1199                                        u10715 00C9  
                                      u11507 353D                                        u11445 2D88  
                                      u10645 2083                                        u10565 2043  
                                      u10805 3681                                        u11517 2A4B  
                                      u11527 343E                                        u10495 11F1  
                                      u10735 012C                                        u11375 2DDE  
                                      u10585 2057                                        u11395 2E44  
                                      u10855 2C2C                                        u10775 01F3  
                                      u10695 00AC                                        u11497 36C1  
                                      u10875 2C38                                        u10795 367A  
                                      u10885 2C4C                                        u10895 2C58  
                            __end_of___lomod 2A0A                                        u10995 2957  
                                      _IRCF0 04CB                                        _IRCF1 04CC  
                                      _IRCF2 04CD                                        _IRCF3 04CE  
                     __size_of_read_I2C_data 0010                                        i1l145 001E  
                               vfpfcnvrt@fmt 0059                                 vfpfcnvrt@llu 00B3  
                                      _SPBRG 019B                           __size_of_RGB_color 0021  
                        ___lmul@multiplicand 0075                          ??_enableDischarging 0022  
                             __CFG_FCMEN$OFF 0000                              __end_of_initWDT 33DB  
                                      _flags 0169                                        _errno 01C2  
                                      _fputc 2891                              __end_of_isalpha 3583  
                                      _fputs 07D7                                        _myIsr 0004  
                            __end_of_isdigit 346A                                        atoi@n 002B  
                                      pad@fp 0026                                        atoi@s 0077  
                                      _width 0165                                        ctoa@c 0032  
                                      _putch 0003                                        ctoa@w 0034  
                                      dtoa@d 0032                                        dtoa@i 004D  
                                      dtoa@n 0045                                        dtoa@p 003F  
                                      dtoa@s 0043                                        dtoa@w 0041  
                            __end_of_islower 34C6                              __end_of_isspace 3566  
                                      logf@R 0120                                        logf@f 015A  
                                      logf@k 013C                                        logf@s 0146  
                                      logf@u 0156                                        logf@w 014E  
                                      logf@x 00A8                                        logf@z 014A  
                             __CFG_BOREN$OFF 0000                              __end_of_isupper 34AF  
                                      otoa@d 0032                                        otoa@i 0050  
                                      otoa@n 0048                                        otoa@p 0042  
                                      otoa@t 0044                                        otoa@w 0046  
                    enableCharging@sys_ctrl2 007B                                        stoa@i 002B  
                                      stoa@l 0033                                        stoa@p 0031  
                                      stoa@s 0022                                        stoa@w 002D  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 39F9                              __end_of_strncmp 2891  
                            __end_of_toupper 1023                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                                 _toupper$1785 0079  
                             __CFG_MCLRE$OFF 0000                    __end_of_enableDischarging 283F  
                            __initialization 0022                              ?_updateVoltages 0070  
                   updateTemperatures@adcVal 00E7        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 2D1A                                 __end_of_ctoa 3634  
                               __end_of_main 36C9                                 __end_of_dtoa 1B89  
                               __end_of_logf 05F5                                 __end_of_otoa 24FE  
                               __end_of_stoa 3000                                 __end_of_utoa 240D  
                               __end_of_xtoa 1CE2                     __end_of_UV_delay_setting 39F9  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 352F                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 3800                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 01E3  
                                     ??_dtoa 003A                                       ??_logf 00AC  
                                     ??_otoa 003A                                       ??_stoa 007A  
                                     ??_utoa 003A                                       ??_xtoa 003B  
                __end_of_printcellParameters 1A36                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_100 3A19  
                                     ?_fputs 007A                                       STR_112 3A47  
                                     STR_105 3A32                                       STR_114 3A47  
                                     ?_myIsr 0070                                       STR_116 3A35  
                                     STR_109 3A1A                                       STR_118 3A35  
                             __CFG_ZCDDIS$ON 0000                                       ?_putch 0070  
              __end_of_OCD_threshold_setting 38B7                              ??_updateCurrent 00B1  
                                     _RC1REG 0199                    __end_of_SCD_delay_setting 3A01  
                              vfpfcnvrt@done 00A2                                 ??_AFE_UPDATE 007C  
                                     _TX1REG 019A                                       _SPLLEN 04CF  
     setOverCurrentDischargeProtection@i_981 00AA                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                       u808lld 2278  
                              _read_I2C_data 3443                             __end_of___xxtofl 209F  
                                     u797lld 2526                               __CFG_PWRTE$OFF 0000  
                          __end_of_RGB_color 35E1                                 vfprintf@cfmt 0068  
                                     ___flge 2A82                                       ___lmul 3665  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01C6                                    ??___fladd 0062  
                                  ??___aomod 0071                                       ___wmul 34F9  
                                     _ln2_hi 3A15                                    ??___fldiv 0048  
                                     _ln2_lo 3A11                                    ??___flneg 007A  
                             __CFG_STVREN$ON 0000                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 00AC  
                                  ??___lodiv 0071                             __end_of_init_I2C 3443  
                                  ??___lomod 0071                             __end_of_init_AFE 293B  
                           __end_of_init_RGB 1805                    __end_of_ATmega328_address 3802  
                      _beginAFEcommunication 2DC3                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strlen 346A                                       logf@t1 0124  
                                     logf@t2 0128                                    ??_initWDT 0071  
                                     logf@dk 0142                                       logf@ix 015E  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 34DF                           __size_of__Umul8_16 001F  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2028 00B4                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002F                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 3665  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 352F                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                                 ___flge@ff1 005A                                   ___flge@ff2 005E  
                               ___xxtofl@arg 0022                                 ___xxtofl@exp 0021  
                               ___xxtofl@val 0071                      __end_of__initialization 0067  
                             ?_read_I2C_data 0071                                   ___flneg@f1 005A  
                                 ___fltol@f1 00A8                     ?_setTemperatureLimitsint 0020  
                 __size_of_enableDischarging 0037     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK3 2000                                __end_of_fputc 28E5  
                              __end_of_fputs 07FD                                __end_of_myIsr 0020  
                               _cellVoltages 01A0                                __end_of_putch 0004  
                                 _batCurrent 01BA                           _RGB_AWAIT_AFE_CONN 35E1  
                     updateTemperatures@vtsx 00E9                  __size_of_updateTemperatures 02D9  
                                 _batVoltage 01BE                          ?_RGB_AWAIT_AFE_CONN 0070  
                    __size_of_enableCharging 0037                                      ??_fputc 0075  
                                    ??_fputs 0020                                      ??_myIsr 0070  
                                    ??_putch 0071            setShortCircuitProtection@delay_us 006A  
                                 __pbssBANK1 00EF                                   __pbssBANK2 0165  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                       __end_of_EUSART_Write 0808                           __size_of_init_GPIO 003B  
                         __size_of_initClock 0003                           __size_of_init_TMR1 000B  
                        statemachine@success 0164                            __end_of__Umul8_16 35C0  
                                 __pmaintext 3697                         ??_RGB_AWAIT_AFE_CONN 0073  
                       __size_of_internal_16 0009              setShortCircuitProtection@scaler 00A0  
                                    ?___flge 005A                            ?_send_I2C_stopBit 0070  
                                    ?___lmul 0071                                      ?___wmul 0071  
      setTemperatureLimitsint@minCharge_degC 0024                              __CFG_PPS1WAY$ON 0000  
                 ?_setShortCircuitProtection 0066                                   __pintentry 0004  
                     ?_beginAFEcommunication 0020                           ??_send_I2C_stopBit 0071  
                             ___lmul@product 0020                                      ?_strlen 0071  
                    _shuntResistorValue_mOhm 01B2                                    ?___xxtofl 0071  
             setShortCircuitProtection@i_972 00AA                           __size_of_vfpfcnvrt F1A4  
         __size_of_watchdog_timeout_shutdown 001B                                      _PPSLOCK 0E0F  
                     __size_of_send_I2C_NACK 0009                             ___lomod@dividend 0028  
                            ??_read_I2C_data 0073                       __size_of_send_I2C_data 0009  
                                  ?_init_I2C 0070                                    ?_init_AFE 0070  
                                  ?_init_RGB 0070         __end_of_setCellOvervoltageProtection 2174  
      __size_of_setCellOvervoltageProtection 00D5                 _setCellOvervoltageProtection 209F  
                           ??_updateVoltages 00B1        __end_of_setCellUndervoltageProtection 2250  
     __size_of_setCellUndervoltageProtection 00DC                _setCellUndervoltageProtection 2174  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                         __size_of_vsnprintf 007D                         __end_of_readRegister 3734  
                                    ___aldiv 2BF7                                      _adcGain 016D  
                            __size_of___flge 007C                                      ___aodiv 24FE  
                                    ___fladd 05F5                                      ___aomod 2250  
                                    ___fldiv 1CE2                                      ___flneg 3408  
                            __size_of___lmul 0032                                      ___flmul 1023  
                                    ___flsub 36C9                                      ___fltol 293B  
                            __size_of___wmul 001B                                      ___lodiv 2AFE  
                                    ___lomod 29A1                                    ?_vfprintf 0061  
                                  ?_snprintf 00CC                                _messageBuffer 2771  
                                    __ptext1 352F                                      __ptext2 2A0A  
                                    __ptext3 191C                                      __ptext4 3514  
                                    __ptext5 2B7A                                      __ptext6 3634  
                                    __ptext7 1E5C                                      __ptext8 1B89  
                                    __ptext9 1001                            __end_of_init_GPIO 0843  
                          __end_of_initClock 0800                            __end_of_init_TMR1 3427  
                            __size_of_strlen 0017                                    _T1CONbits 0018  
                                    _initWDT 33D5                                 __size_of_abs 0017  
                               __size_of_pad 0051                                      _isalpha 3566  
                                    _isdigit 3453                                   ??___xxtofl 0075  
                           ___aldiv@dividend 0028                                      _islower 34AF  
                                    _isspace 354A    __end_of_setOverCurrentDischargeProtection 2800  
 __size_of_setOverCurrentDischargeProtection 0115          ??_setOverCurrentDischargeProtection 006C  
         ?_setOverCurrentDischargeProtection 0066            _setOverCurrentDischargeProtection 26EB  
                                    _isupper 3498                                      atoi@neg 0024  
                                    clrloop0 3428            __end_of_watchdog_timeout_shutdown 354A  
                                    _strncmp 283F                                      _toupper 1001  
                       end_of_initialization 0067                                   ??_init_I2C 0071  
                                 ??_init_AFE 007B                                   ??_init_RGB 0071  
                                    fputc@fp 0073                                      fputs@fp 007A  
              ?_setCellOvervoltageProtection 0032                            _EUSART_Initialize 2D1A  
                         ?_EUSART_Initialize 0032                            __end_of_vfpfcnvrt 1000  
                              _send_I2C_NACK 33F5                             ___aldiv@quotient 002E  
                 send_I2C_controlByte@RW_bit 0073                                      psplit$0 43008C  
                                    psplit$1 8C008D                                _send_I2C_data 33EC  
                                  _RGB_color 35C0                                   ??_vfprintf 0066  
                         EUSART_Initialize@x 007A                                   ??_snprintf 006C  
                                    strlen@a 0073                                      strlen@s 0071  
                        ??_EUSART_Initialize 0036                                  ___fladd@grs 006D  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                                    _TRISBbits 008D  
                                  _TRISCbits 008E                                    _TRISEbits 0090  
                      __size_of_EUSART_Write 0008                               _enableCharging 3734  
                          __end_of_vsnprintf 2BF7                                  ___fldiv@grs 0054  
                                ___fldiv@rem 004D                 __size_of_printcellParameters 011A  
              __end_of_SCD_threshold_setting 39CB                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 3583                                  ___flmul@grs 0035  
                  __end_of_EUSART_Initialize 2DC3                        __end_of_updateCurrent 2F3B  
                      _OCD_threshold_setting 3897                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                          ??_I2C_writeRegister 007B  
                                 ?_RGB_color 0071                               __end_of___flge 2AFE  
                             __end_of___lmul 3697                                  vfpfcnvrt@ap 005A  
                                vfpfcnvrt@cp 00A0                                  vfpfcnvrt@fp 0057  
                                vfpfcnvrt@ll 00A8                               __end_of___wmul 3514  
                                vfpfcnvrt@vp 00B0                               __end_of_ln2_hi 3A19  
                             __end_of_ln2_lo 3A15                                 _EUSART_Write 0800  
                I2C_writeRegister@regAddress 0077                setShuntResistorValue@res_mOhm 0071  
                     __end_of_enableCharging 376B             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strlen 3481                          start_initialization 0022  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                        _thermistorBetaValue 01E1                                  __end_of_Lg1 3A11  
                                __end_of_Lg2 3A0D                                  __end_of_Lg3 3A09  
                                __end_of_Lg4 3A05                                ?_statemachine 0070  
                                __end_of_abs 3498                                  __end_of_pad 3800  
                          _minCellTempCharge 01D0                setCellOvervoltageProtection@i 0045  
                       _maxCellTempDischarge 01CA                         updateVoltages@adcVal 00B8  
                       _minCellTempDischarge 01CE                            pnum$text7_split_1 008C  
                          pnum$text7_split_2 008D                    __end_of_I2C_writeRegister 35A1  
     _setOverCurrentDischargeProtection$2027 00A4          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 34DF  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 0063  
                                   ??___flge 0062                                     ??___lmul 0079  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                                    __Umul8_16 35A1  
                ??_setShortCircuitProtection 006C                                  __pdataBANK3 01DA  
                        ??_EUSART_Write_Text 0074                __size_of_send_I2C_controlByte 000A  
       setCellUndervoltageProtection@uv_trip 0044                   __end_of_updateTemperatures 1800  
                                   ??_strlen 0073                                    ___fladd@a 005E  
                                  ___fladd@b 005A                                 vsnprintf@cnt 00C4  
                               vsnprintf@fmt 00BF                                    ___fldiv@a 0040  
                                  ___fldiv@b 0044                                  __pbssBIGRAM 2771  
                            ?_enableCharging 0020                         enableCharging@enable 0020  
                                  _adcOffset 016B                                    ___flmul@a 002A  
                                  ___flmul@b 0026                                  __pbssCOMMON 007C  
                                  ___flsub@a 00A0                                    ___flsub@b 00A4  
                             ??_statemachine 0162                                    ___latbits 0003  
           send_I2C_controlByte@BlockAddress 0071                                   myIsr@count 01D5  
                              __pcstackBANK0 0020                                __pcstackBANK1 00A0  
                              __pcstackBANK2 0120                                __pcstackBANK3 01E3  
                           ___aodiv@dividend 0028                    __size_of_send_I2C_stopBit 0008  
                                snprintf@fmt 00D0                            __size_of___xxtofl 0096  
                               _readRegister 36FE     setTemperatureLimitsint@maxDischarge_degC 0022  
                      updateTemperatures@tmp 00E3                        updateTemperatures@rts 00EB  
                  __end_of_EUSART_Write_Text 34F9                   __size_of_EUSART_Initialize 00A9  
                              ??_internal_16 0071                                    _atoi$1650 0026  
                                  _atoi$1651 002A                                    _atoi$1652 0028  
                           _OV_delay_setting 39E9                            __size_of_init_I2C 0010  
                      I2C_writeRegister@data 0079                              ??_send_I2C_NACK 0071  
                          __size_of_init_AFE 0056                            __size_of_init_RGB 0005  
                          _send_I2C_startBit 33DB                              ??_send_I2C_data 0073  
                                  _dtoa$1199 003D                  __size_of_RGB_AWAIT_AFE_CONN 0022  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0024  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 005A                __end_of_setShuntResistorValue 341C  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___flneg 005A                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                                     ?___flsub 00A0  
                                   ?___fltol 00A8                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0032  
                                  _logf$2040 0152                                    _logf$2041 012C  
                                  _logf$2042 0130                                    _logf$2043 0134  
                                  _logf$2044 0138                            __size_of_vfprintf 0031  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 001B  
             BQ76920@shuntResistorValue_mOhm 01AE                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                                  _init_GPIO 0808                                     ?_isupper 0071  
                                  _initClock 07FD                                    _init_TMR1 341C  
                                  _currState 01D9                    _setShortCircuitProtection 1805  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001C  
                                   ?_strncmp 0071                                     ?_toupper 0077  
                             __size_of_putch 0001                              ___aldiv@divisor 0024  
                      __end_of_read_I2C_data 3453                              ___aldiv@counter 002C  
                             ___wmul@product 0075                              BQ76920@protect1 01D4  
                            BQ76920@protect2 01D3                              BQ76920@protect3 01D2  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 33E3                                    clear_ram0 3427  
                                  _tmr1_flag 00EF                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 33EC  
                        _printcellParameters 191C                                    _vfpfcnvrt 1E5C  
                                  _xtoa$1235 0043                                    _xtoa$1236 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 376B  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                        send_I2C_data@databyte 0071  
                               _isspace$1677 0075                                   vfpfcnvrt@c 00B2  
                          ___lmul@multiplier 0071                         ?_printcellParameters 0070  
                      _temperatureThermistor 01B6                   __size_of_EUSART_Write_Text 001A  
                 ?_watchdog_timeout_shutdown 0070                                    _vsnprintf 2B7A  
                                 _AFE_UPDATE 34C6                            _OCD_delay_setting 39AB  
                       __end_of_statemachine 2A82                                   vfprintf@ap 0065  
                                 vfprintf@fp 0061                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                      __size_of_updateVoltages 02D8  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
             _setShortCircuitProtection$2026 00A4                             __size_of___flneg 000A  
                                vsnprintf@ap 00C1                             __size_of___flmul 022C  
                           __size_of___flsub 0035                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 0057  
                                 snprintf@ap 006F                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                                     ___xxtofl 2009  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
                           _send_I2C_stopBit 2800                             __size_of_islower 0017  
                           __size_of_isspace 001C                                     __ptext10 34AF  
                                   __ptext11 3498                                     __ptext20 3481  
                                   __ptext12 3566                                     __ptext21 2250  
                                   __ptext13 232C                                     __ptext30 354A  
                                   __ptext22 24FE                                     __ptext14 29A1  
                                   __ptext31 3453                                     __ptext23 3603  
                                   __ptext15 2AFE                                     __ptext40 2A82  
                                   __ptext32 34DF                                     __ptext24 37AF  
                                   __ptext16 283F                                     __ptext41 2174  
                                   __ptext33 0800                                     __ptext25 346A  
                                   __ptext17 2F3B                                     __ptext50 006B  
                                   __ptext42 209F                                     __ptext34 28E5  
                                   __ptext26 07D7                                     __ptext18 240D  
                                   __ptext51 36C9                                     __ptext43 2DC3  
                                   __ptext35 376B                                     __ptext27 2891  
                                   __ptext19 1A36                                     __ptext60 2808  
                                   __ptext52 05F5                                     __ptext44 35E1  
                                   __ptext36 34F9                                     __ptext28 0003  
                                   __ptext61 3734                                     __ptext53 2E77  
                                   __ptext45 35C0                                     __ptext37 3412  
                                   __ptext29 2C79                                     __ptext70 341C  
                                   __ptext62 36FE                                     __ptext54 2009  
                                   __ptext46 34C6                                     __ptext38 1805  
                                   __ptext71 1800                                     __ptext63 33F5  
                                   __ptext55 293B                                     __ptext47 124F  
                                   __ptext39 26EB                                     __ptext72 3433  
                                   __ptext64 3443                                     __ptext56 3408  
                                   __ptext48 3665                                     __ptext73 0808  
                                   __ptext65 3583                                     __ptext57 1023  
                                   __ptext49 1527                                     __ptext74 33D5  
                                   __ptext66 2800                                     __ptext58 35A1  
                                   __ptext75 07FD                                     __ptext67 33DB  
                                   __ptext59 1CE2                                     __ptext76 33E3  
                                   __ptext68 33EC                                     __ptext77 2D1A  
                                   __ptext69 33FE                                     __ptext78 2BF7  
                           __size_of_isupper 0017                        ??_printcellParameters 007C  
             setCellUndervoltageProtection@i 0045                    __end_of_OCD_delay_setting 39BB  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 00BB                          updateCurrent@adcVal 00B5  
                                   _init_I2C 3433                                     _init_AFE 28E5  
                                   _init_RGB 1800                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0032  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text7 0043                                __size_of_logf 058A  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 39BB  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 33E3                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                    stoa@F1152 01DA  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 2E77  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 01D8                                     _protect2 01D7  
                                   _protect3 01D6                    ??_setTemperatureLimitsint 0077  
                                   _vfprintf 3634                             ??_enableCharging 0022  
                                   _snprintf 3514                             ___aomod@dividend 0028  
                                   logf@F469 01AA                       __size_of_updateCurrent 00C4  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 39F1  
                             _vfpfcnvrt$1250 00A4                               _vfpfcnvrt$1251 00A6  
                                 _INTCONbits 000B                                  ??_init_GPIO 0071  
                                ??_initClock 0071                                  ??_init_TMR1 0071  
                                   logf@hfsq 013E                               __pstringtext10 3A0D  
                             __pstringtext11 3A11                               __pstringtext20 390D  
                             __pstringtext12 3A15                               __pstringtext21 3922  
                             __pstringtext13 3800                               __pstringtext30 3A19  
                             __pstringtext22 3937                               __pstringtext14 3849  
                             __pstringtext31 3A1D                               __pstringtext23 394C  
                             __pstringtext15 3871                               __pstringtext40 3A3E  
                             __pstringtext32 3A21                               __pstringtext24 3960  
                             __pstringtext16 38B7                               __pstringtext41 3A41  
                             __pstringtext33 3A25                               __pstringtext25 3974  
                             __pstringtext17 38CD                               __pstringtext42 3A44  
                             __pstringtext34 3A29                               __pstringtext26 3987  
                             __pstringtext18 38E3                               __pstringtext43 3A47  
                             __pstringtext35 3A2D                               __pstringtext27 3999  
                             __pstringtext19 38F8                               __pstringtext44 0000  
                             __pstringtext36 3A31                               __pstringtext28 39CB  
                             __pstringtext37 3A35                               __pstringtext29 39DA  
                             __pstringtext38 3A38                               __pstringtext39 3A3B  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 00C6                                   vsnprintf@n 00BD  
                                 vsnprintf@s 00BB                           _updateTemperatures 1527  
                           _UV_delay_setting 39F1                                    snprintf@n 00CE  
                                  snprintf@s 00CC                 __end_of_send_I2C_controlByte 3408  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                          ?_updateTemperatures 0070  
                          __CFG_CLKOUTEN$OFF 0000                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0117  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                          _maxCellTempCharge 01CC                              ___aomod@divisor 0020  
                                ??_vfpfcnvrt 005B                                     stoa@nuls 0024  
                            ___aomod@counter 0072                                __pstringtext1 3897  
                              __pstringtext2 39AB                                __pstringtext3 39BB  
                              __pstringtext4 39E9                                __pstringtext5 39F1  
                              __pstringtext6 39F9                                __pstringtext7 3A01  
                              __pstringtext8 3A05                                __pstringtext9 3A09  
                       ??_updateTemperatures 00B4                       __Umul8_16@multiplicand 0071  
                             _vsnprintf$1822 00C2                                     strncmp@l 0078  
                                   strncmp@n 0075                                     strncmp@r 007A  
                                   toupper@c 0077                        EUSART_Write_Text@text 0072  
                               ___aldiv@sign 002D                                  _SSPCON2bits 0216  
                                 _WDTCONbits 0097                                ___fladd@signs 006A  
            __end_of_setTemperatureLimitsint 37AF                           EUSART_Write@txData 0071  
                               ___aodiv@sign 0073      setOverCurrentDischargeProtection@scaler 00A0  
                                ??_vsnprintf 006A                      _updateTemperatures$2030 00BB  
                    _updateTemperatures$2031 00BF                      _updateTemperatures$2032 00C3  
                    _updateTemperatures$2033 00C7                      _updateTemperatures$2034 00CB  
                    _updateTemperatures$2035 00CF                      _updateTemperatures$2036 00D3  
                    _updateTemperatures$2037 00D7                      _updateTemperatures$2029 00B7  
                    _updateTemperatures$2038 00DB                      _updateTemperatures$2039 00DF  
                               ___fladd@aexp 006B                                 ___fladd@bexp 006C  
                      __size_of_statemachine 0078                                   _STATUSbits 0003  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                              _updateCurrent 2E77                                   _SSPCONbits 0215  
                 __end_of_RGB_AWAIT_AFE_CONN 3603                                 ___aomod@sign 0073  
                         EUSART_Write_Text@i 0075                        __end_of_send_I2C_NACK 33FE  
                          __Umul8_16@product 0075  
