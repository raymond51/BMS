

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 16 00:33:15 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	stringtext45,global,class=STRCODE,delta=2
    50                           	psect	stringtext46,global,class=STRCODE,delta=2
    51                           	psect	cinit,global,class=CODE,merge=1,delta=2
    52                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    53                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    54                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    55                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    56                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    57                           	psect	inittext,global,class=CODE,delta=2
    58                           	psect	clrtext,global,class=CODE,delta=2
    59                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    60                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    61                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    62                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    63                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    64                           	psect	text1,local,class=CODE,merge=1,delta=2
    65                           	psect	text2,local,class=CODE,merge=1,delta=2
    66                           	psect	text3,local,class=CODE,merge=1,delta=2
    67                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text6,local,class=CODE,merge=1,delta=2
    70                           	psect	text7,local,class=CODE,merge=1,delta=2
    71                           	psect	text8,local,class=CODE,merge=1,delta=2
    72                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text13,local,class=CODE,merge=1,delta=2
    77                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text17,local,class=CODE,merge=1,delta=2
    81                           	psect	text18,local,class=CODE,merge=1,delta=2
    82                           	psect	text19,local,class=CODE,merge=1,delta=2
    83                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    86                           	psect	text23,local,class=CODE,merge=1,delta=2
    87                           	psect	text24,local,class=CODE,merge=1,delta=2
    88                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text32,local,class=CODE,merge=1,delta=2
    96                           	psect	text33,local,class=CODE,merge=1,delta=2
    97                           	psect	text34,local,class=CODE,merge=1,delta=2
    98                           	psect	text35,local,class=CODE,merge=1,delta=2
    99                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text37,local,class=CODE,merge=1,delta=2
   101                           	psect	text38,local,class=CODE,merge=1,delta=2
   102                           	psect	text39,local,class=CODE,merge=1,delta=2
   103                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text41,local,class=CODE,merge=1,delta=2
   105                           	psect	text42,local,class=CODE,merge=1,delta=2
   106                           	psect	text43,local,class=CODE,merge=1,delta=2
   107                           	psect	text44,local,class=CODE,merge=1,delta=2
   108                           	psect	text45,local,class=CODE,merge=1,delta=2
   109                           	psect	text46,local,class=CODE,merge=1,delta=2
   110                           	psect	text47,local,class=CODE,merge=1,delta=2
   111                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   112                           	psect	text49,local,class=CODE,merge=1,delta=2
   113                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   114                           	psect	text51,local,class=CODE,merge=1,delta=2
   115                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   116                           	psect	text53,local,class=CODE,merge=1,delta=2
   117                           	psect	text54,local,class=CODE,merge=1,delta=2
   118                           	psect	text55,local,class=CODE,merge=1,delta=2
   119                           	psect	text56,local,class=CODE,merge=1,delta=2
   120                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text59,local,class=CODE,merge=1,delta=2
   123                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
   124                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
   126                           	psect	text63,local,class=CODE,merge=1,delta=2,group=1
   127                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
   128                           	psect	text65,local,class=CODE,merge=1,delta=2
   129                           	psect	text66,local,class=CODE,merge=1,delta=2
   130                           	psect	text67,local,class=CODE,merge=1,delta=2
   131                           	psect	text68,local,class=CODE,merge=1,delta=2
   132                           	psect	text69,local,class=CODE,merge=1,delta=2
   133                           	psect	text70,local,class=CODE,merge=1,delta=2
   134                           	psect	text71,local,class=CODE,merge=1,delta=2
   135                           	psect	text72,local,class=CODE,merge=1,delta=2
   136                           	psect	text73,local,class=CODE,merge=1,delta=2
   137                           	psect	text74,local,class=CODE,merge=1,delta=2
   138                           	psect	text75,local,class=CODE,merge=1,delta=2
   139                           	psect	text76,local,class=CODE,merge=1,delta=2
   140                           	psect	text77,local,class=CODE,merge=1,delta=2
   141                           	psect	text78,local,class=CODE,merge=1,delta=2
   142                           	psect	text79,local,class=CODE,merge=1,delta=2
   143                           	psect	text80,local,class=CODE,merge=1,delta=2
   144                           	psect	text81,local,class=CODE,merge=1,delta=2
   145                           	psect	text82,local,class=CODE,merge=1,delta=2,group=1
   146                           	psect	intentry,global,class=CODE,delta=2
   147                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   148                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   149                           	dabs	1,0xCA0,32
   150                           	dabs	1,0xC20,80
   151                           	dabs	1,0xBE1,15
   152                           	dabs	1,0x2771,0,_messageBuffer
   153                           	dabs	1,0x7E,2
   154  0000                     
   155                           ; Version 2.05
   156                           ; Generated 20/12/2018 GMT
   157                           ; 
   158                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   159                           ; All rights reserved.
   160                           ; 
   161                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   162                           ; 
   163                           ; Redistribution and use in source and binary forms, with or without modification, are
   164                           ; permitted provided that the following conditions are met:
   165                           ; 
   166                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   167                           ;        conditions and the following disclaimer.
   168                           ; 
   169                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   170                           ;        of conditions and the following disclaimer in the documentation and/or other
   171                           ;        materials provided with the distribution.
   172                           ; 
   173                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   174                           ;        software without specific prior written permission.
   175                           ; 
   176                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   177                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   178                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   179                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   180                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   181                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   182                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   183                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   184                           ; 
   185                           ; 
   186                           ; Code-generator required, PIC16F1719 Definitions
   187                           ; 
   188                           ; SFR Addresses
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000F                     	;# 
   205  0010                     	;# 
   206  0011                     	;# 
   207  0012                     	;# 
   208  0013                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  008F                     	;# 
   222  0090                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0095                     	;# 
   227  0096                     	;# 
   228  0097                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009B                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0110                     	;# 
   243  0111                     	;# 
   244  0112                     	;# 
   245  0113                     	;# 
   246  0114                     	;# 
   247  0115                     	;# 
   248  0116                     	;# 
   249  0117                     	;# 
   250  0118                     	;# 
   251  0119                     	;# 
   252  011A                     	;# 
   253  011B                     	;# 
   254  011B                     	;# 
   255  011C                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258  018E                     	;# 
   259  018F                     	;# 
   260  0190                     	;# 
   261  0191                     	;# 
   262  0191                     	;# 
   263  0192                     	;# 
   264  0193                     	;# 
   265  0193                     	;# 
   266  0194                     	;# 
   267  0195                     	;# 
   268  0196                     	;# 
   269  0197                     	;# 
   270  0199                     	;# 
   271  0199                     	;# 
   272  0199                     	;# 
   273  019A                     	;# 
   274  019A                     	;# 
   275  019A                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019C                     	;# 
   282  019C                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019D                     	;# 
   286  019D                     	;# 
   287  019E                     	;# 
   288  019E                     	;# 
   289  019E                     	;# 
   290  019F                     	;# 
   291  019F                     	;# 
   292  019F                     	;# 
   293  019F                     	;# 
   294  019F                     	;# 
   295  020C                     	;# 
   296  020D                     	;# 
   297  020E                     	;# 
   298  020F                     	;# 
   299  0210                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0216                     	;# 
   313  0216                     	;# 
   314  0217                     	;# 
   315  0217                     	;# 
   316  028C                     	;# 
   317  028D                     	;# 
   318  028E                     	;# 
   319  028F                     	;# 
   320  0290                     	;# 
   321  0291                     	;# 
   322  0291                     	;# 
   323  0292                     	;# 
   324  0293                     	;# 
   325  0293                     	;# 
   326  0298                     	;# 
   327  0298                     	;# 
   328  0299                     	;# 
   329  029A                     	;# 
   330  029A                     	;# 
   331  029E                     	;# 
   332  030C                     	;# 
   333  030D                     	;# 
   334  030E                     	;# 
   335  030F                     	;# 
   336  0310                     	;# 
   337  038C                     	;# 
   338  038D                     	;# 
   339  038E                     	;# 
   340  038F                     	;# 
   341  0390                     	;# 
   342  0391                     	;# 
   343  0392                     	;# 
   344  0393                     	;# 
   345  0394                     	;# 
   346  0395                     	;# 
   347  0396                     	;# 
   348  0397                     	;# 
   349  0398                     	;# 
   350  0399                     	;# 
   351  039D                     	;# 
   352  039E                     	;# 
   353  039F                     	;# 
   354  0415                     	;# 
   355  0416                     	;# 
   356  0417                     	;# 
   357  041C                     	;# 
   358  041D                     	;# 
   359  041E                     	;# 
   360  0498                     	;# 
   361  0498                     	;# 
   362  0499                     	;# 
   363  049A                     	;# 
   364  049B                     	;# 
   365  049B                     	;# 
   366  049C                     	;# 
   367  049D                     	;# 
   368  049E                     	;# 
   369  049F                     	;# 
   370  0511                     	;# 
   371  0515                     	;# 
   372  0617                     	;# 
   373  0618                     	;# 
   374  0619                     	;# 
   375  0619                     	;# 
   376  061A                     	;# 
   377  061B                     	;# 
   378  061C                     	;# 
   379  061C                     	;# 
   380  0691                     	;# 
   381  0692                     	;# 
   382  0693                     	;# 
   383  0694                     	;# 
   384  0695                     	;# 
   385  0696                     	;# 
   386  0697                     	;# 
   387  0698                     	;# 
   388  0699                     	;# 
   389  069A                     	;# 
   390  069B                     	;# 
   391  069C                     	;# 
   392  069D                     	;# 
   393  069E                     	;# 
   394  069F                     	;# 
   395  0E0F                     	;# 
   396  0E10                     	;# 
   397  0E11                     	;# 
   398  0E12                     	;# 
   399  0E13                     	;# 
   400  0E14                     	;# 
   401  0E15                     	;# 
   402  0E17                     	;# 
   403  0E20                     	;# 
   404  0E21                     	;# 
   405  0E22                     	;# 
   406  0E24                     	;# 
   407  0E25                     	;# 
   408  0E28                     	;# 
   409  0E29                     	;# 
   410  0E2A                     	;# 
   411  0E2B                     	;# 
   412  0E90                     	;# 
   413  0E91                     	;# 
   414  0E92                     	;# 
   415  0E93                     	;# 
   416  0E94                     	;# 
   417  0E95                     	;# 
   418  0E96                     	;# 
   419  0E97                     	;# 
   420  0E98                     	;# 
   421  0E99                     	;# 
   422  0E9A                     	;# 
   423  0E9B                     	;# 
   424  0E9C                     	;# 
   425  0E9D                     	;# 
   426  0E9E                     	;# 
   427  0E9F                     	;# 
   428  0EA0                     	;# 
   429  0EA1                     	;# 
   430  0EA2                     	;# 
   431  0EA3                     	;# 
   432  0EA4                     	;# 
   433  0EA5                     	;# 
   434  0EA6                     	;# 
   435  0EA7                     	;# 
   436  0EA8                     	;# 
   437  0EA9                     	;# 
   438  0EAA                     	;# 
   439  0EAB                     	;# 
   440  0EAC                     	;# 
   441  0EAD                     	;# 
   442  0EAE                     	;# 
   443  0EAF                     	;# 
   444  0EB0                     	;# 
   445  0EB1                     	;# 
   446  0EB2                     	;# 
   447  0F0F                     	;# 
   448  0F10                     	;# 
   449  0F11                     	;# 
   450  0F12                     	;# 
   451  0F13                     	;# 
   452  0F14                     	;# 
   453  0F15                     	;# 
   454  0F16                     	;# 
   455  0F17                     	;# 
   456  0F18                     	;# 
   457  0F19                     	;# 
   458  0F1A                     	;# 
   459  0F1B                     	;# 
   460  0F1C                     	;# 
   461  0F1D                     	;# 
   462  0F1E                     	;# 
   463  0F1F                     	;# 
   464  0F20                     	;# 
   465  0F21                     	;# 
   466  0F22                     	;# 
   467  0F23                     	;# 
   468  0F24                     	;# 
   469  0F25                     	;# 
   470  0F26                     	;# 
   471  0F27                     	;# 
   472  0F28                     	;# 
   473  0F29                     	;# 
   474  0F2A                     	;# 
   475  0F2B                     	;# 
   476  0F2C                     	;# 
   477  0F2D                     	;# 
   478  0F2E                     	;# 
   479  0F2F                     	;# 
   480  0F30                     	;# 
   481  0F31                     	;# 
   482  0F32                     	;# 
   483  0F33                     	;# 
   484  0F34                     	;# 
   485  0F35                     	;# 
   486  0F36                     	;# 
   487  0F37                     	;# 
   488  0FE4                     	;# 
   489  0FE5                     	;# 
   490  0FE6                     	;# 
   491  0FE7                     	;# 
   492  0FE8                     	;# 
   493  0FE9                     	;# 
   494  0FEA                     	;# 
   495  0FEB                     	;# 
   496  0FED                     	;# 
   497  0FEE                     	;# 
   498  0FEF                     	;# 
   499  0000                     	;# 
   500  0001                     	;# 
   501  0002                     	;# 
   502  0003                     	;# 
   503  0004                     	;# 
   504  0005                     	;# 
   505  0006                     	;# 
   506  0007                     	;# 
   507  0008                     	;# 
   508  0009                     	;# 
   509  000A                     	;# 
   510  000B                     	;# 
   511  000C                     	;# 
   512  000D                     	;# 
   513  000E                     	;# 
   514  000F                     	;# 
   515  0010                     	;# 
   516  0011                     	;# 
   517  0012                     	;# 
   518  0013                     	;# 
   519  0015                     	;# 
   520  0016                     	;# 
   521  0016                     	;# 
   522  0017                     	;# 
   523  0018                     	;# 
   524  0019                     	;# 
   525  001A                     	;# 
   526  001B                     	;# 
   527  001C                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  008F                     	;# 
   532  0090                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0095                     	;# 
   537  0096                     	;# 
   538  0097                     	;# 
   539  0098                     	;# 
   540  0099                     	;# 
   541  009A                     	;# 
   542  009B                     	;# 
   543  009B                     	;# 
   544  009C                     	;# 
   545  009D                     	;# 
   546  009E                     	;# 
   547  009F                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010E                     	;# 
   551  010F                     	;# 
   552  0110                     	;# 
   553  0111                     	;# 
   554  0112                     	;# 
   555  0113                     	;# 
   556  0114                     	;# 
   557  0115                     	;# 
   558  0116                     	;# 
   559  0117                     	;# 
   560  0118                     	;# 
   561  0119                     	;# 
   562  011A                     	;# 
   563  011B                     	;# 
   564  011B                     	;# 
   565  011C                     	;# 
   566  018C                     	;# 
   567  018D                     	;# 
   568  018E                     	;# 
   569  018F                     	;# 
   570  0190                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0194                     	;# 
   577  0195                     	;# 
   578  0196                     	;# 
   579  0197                     	;# 
   580  0199                     	;# 
   581  0199                     	;# 
   582  0199                     	;# 
   583  019A                     	;# 
   584  019A                     	;# 
   585  019A                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019C                     	;# 
   592  019C                     	;# 
   593  019C                     	;# 
   594  019D                     	;# 
   595  019D                     	;# 
   596  019D                     	;# 
   597  019E                     	;# 
   598  019E                     	;# 
   599  019E                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  020C                     	;# 
   606  020D                     	;# 
   607  020E                     	;# 
   608  020F                     	;# 
   609  0210                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0216                     	;# 
   623  0216                     	;# 
   624  0217                     	;# 
   625  0217                     	;# 
   626  028C                     	;# 
   627  028D                     	;# 
   628  028E                     	;# 
   629  028F                     	;# 
   630  0290                     	;# 
   631  0291                     	;# 
   632  0291                     	;# 
   633  0292                     	;# 
   634  0293                     	;# 
   635  0293                     	;# 
   636  0298                     	;# 
   637  0298                     	;# 
   638  0299                     	;# 
   639  029A                     	;# 
   640  029A                     	;# 
   641  029E                     	;# 
   642  030C                     	;# 
   643  030D                     	;# 
   644  030E                     	;# 
   645  030F                     	;# 
   646  0310                     	;# 
   647  038C                     	;# 
   648  038D                     	;# 
   649  038E                     	;# 
   650  038F                     	;# 
   651  0390                     	;# 
   652  0391                     	;# 
   653  0392                     	;# 
   654  0393                     	;# 
   655  0394                     	;# 
   656  0395                     	;# 
   657  0396                     	;# 
   658  0397                     	;# 
   659  0398                     	;# 
   660  0399                     	;# 
   661  039D                     	;# 
   662  039E                     	;# 
   663  039F                     	;# 
   664  0415                     	;# 
   665  0416                     	;# 
   666  0417                     	;# 
   667  041C                     	;# 
   668  041D                     	;# 
   669  041E                     	;# 
   670  0498                     	;# 
   671  0498                     	;# 
   672  0499                     	;# 
   673  049A                     	;# 
   674  049B                     	;# 
   675  049B                     	;# 
   676  049C                     	;# 
   677  049D                     	;# 
   678  049E                     	;# 
   679  049F                     	;# 
   680  0511                     	;# 
   681  0515                     	;# 
   682  0617                     	;# 
   683  0618                     	;# 
   684  0619                     	;# 
   685  0619                     	;# 
   686  061A                     	;# 
   687  061B                     	;# 
   688  061C                     	;# 
   689  061C                     	;# 
   690  0691                     	;# 
   691  0692                     	;# 
   692  0693                     	;# 
   693  0694                     	;# 
   694  0695                     	;# 
   695  0696                     	;# 
   696  0697                     	;# 
   697  0698                     	;# 
   698  0699                     	;# 
   699  069A                     	;# 
   700  069B                     	;# 
   701  069C                     	;# 
   702  069D                     	;# 
   703  069E                     	;# 
   704  069F                     	;# 
   705  0E0F                     	;# 
   706  0E10                     	;# 
   707  0E11                     	;# 
   708  0E12                     	;# 
   709  0E13                     	;# 
   710  0E14                     	;# 
   711  0E15                     	;# 
   712  0E17                     	;# 
   713  0E20                     	;# 
   714  0E21                     	;# 
   715  0E22                     	;# 
   716  0E24                     	;# 
   717  0E25                     	;# 
   718  0E28                     	;# 
   719  0E29                     	;# 
   720  0E2A                     	;# 
   721  0E2B                     	;# 
   722  0E90                     	;# 
   723  0E91                     	;# 
   724  0E92                     	;# 
   725  0E93                     	;# 
   726  0E94                     	;# 
   727  0E95                     	;# 
   728  0E96                     	;# 
   729  0E97                     	;# 
   730  0E98                     	;# 
   731  0E99                     	;# 
   732  0E9A                     	;# 
   733  0E9B                     	;# 
   734  0E9C                     	;# 
   735  0E9D                     	;# 
   736  0E9E                     	;# 
   737  0E9F                     	;# 
   738  0EA0                     	;# 
   739  0EA1                     	;# 
   740  0EA2                     	;# 
   741  0EA3                     	;# 
   742  0EA4                     	;# 
   743  0EA5                     	;# 
   744  0EA6                     	;# 
   745  0EA7                     	;# 
   746  0EA8                     	;# 
   747  0EA9                     	;# 
   748  0EAA                     	;# 
   749  0EAB                     	;# 
   750  0EAC                     	;# 
   751  0EAD                     	;# 
   752  0EAE                     	;# 
   753  0EAF                     	;# 
   754  0EB0                     	;# 
   755  0EB1                     	;# 
   756  0EB2                     	;# 
   757  0F0F                     	;# 
   758  0F10                     	;# 
   759  0F11                     	;# 
   760  0F12                     	;# 
   761  0F13                     	;# 
   762  0F14                     	;# 
   763  0F15                     	;# 
   764  0F16                     	;# 
   765  0F17                     	;# 
   766  0F18                     	;# 
   767  0F19                     	;# 
   768  0F1A                     	;# 
   769  0F1B                     	;# 
   770  0F1C                     	;# 
   771  0F1D                     	;# 
   772  0F1E                     	;# 
   773  0F1F                     	;# 
   774  0F20                     	;# 
   775  0F21                     	;# 
   776  0F22                     	;# 
   777  0F23                     	;# 
   778  0F24                     	;# 
   779  0F25                     	;# 
   780  0F26                     	;# 
   781  0F27                     	;# 
   782  0F28                     	;# 
   783  0F29                     	;# 
   784  0F2A                     	;# 
   785  0F2B                     	;# 
   786  0F2C                     	;# 
   787  0F2D                     	;# 
   788  0F2E                     	;# 
   789  0F2F                     	;# 
   790  0F30                     	;# 
   791  0F31                     	;# 
   792  0F32                     	;# 
   793  0F33                     	;# 
   794  0F34                     	;# 
   795  0F35                     	;# 
   796  0F36                     	;# 
   797  0F37                     	;# 
   798  0FE4                     	;# 
   799  0FE5                     	;# 
   800  0FE6                     	;# 
   801  0FE7                     	;# 
   802  0FE8                     	;# 
   803  0FE9                     	;# 
   804  0FEA                     	;# 
   805  0FEB                     	;# 
   806  0FED                     	;# 
   807  0FEE                     	;# 
   808  0FEF                     	;# 
   809  0000                     	;# 
   810  0001                     	;# 
   811  0002                     	;# 
   812  0003                     	;# 
   813  0004                     	;# 
   814  0005                     	;# 
   815  0006                     	;# 
   816  0007                     	;# 
   817  0008                     	;# 
   818  0009                     	;# 
   819  000A                     	;# 
   820  000B                     	;# 
   821  000C                     	;# 
   822  000D                     	;# 
   823  000E                     	;# 
   824  000F                     	;# 
   825  0010                     	;# 
   826  0011                     	;# 
   827  0012                     	;# 
   828  0013                     	;# 
   829  0015                     	;# 
   830  0016                     	;# 
   831  0016                     	;# 
   832  0017                     	;# 
   833  0018                     	;# 
   834  0019                     	;# 
   835  001A                     	;# 
   836  001B                     	;# 
   837  001C                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  008F                     	;# 
   842  0090                     	;# 
   843  0091                     	;# 
   844  0092                     	;# 
   845  0093                     	;# 
   846  0095                     	;# 
   847  0096                     	;# 
   848  0097                     	;# 
   849  0098                     	;# 
   850  0099                     	;# 
   851  009A                     	;# 
   852  009B                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  009F                     	;# 
   858  010C                     	;# 
   859  010D                     	;# 
   860  010E                     	;# 
   861  010F                     	;# 
   862  0110                     	;# 
   863  0111                     	;# 
   864  0112                     	;# 
   865  0113                     	;# 
   866  0114                     	;# 
   867  0115                     	;# 
   868  0116                     	;# 
   869  0117                     	;# 
   870  0118                     	;# 
   871  0119                     	;# 
   872  011A                     	;# 
   873  011B                     	;# 
   874  011B                     	;# 
   875  011C                     	;# 
   876  018C                     	;# 
   877  018D                     	;# 
   878  018E                     	;# 
   879  018F                     	;# 
   880  0190                     	;# 
   881  0191                     	;# 
   882  0191                     	;# 
   883  0192                     	;# 
   884  0193                     	;# 
   885  0193                     	;# 
   886  0194                     	;# 
   887  0195                     	;# 
   888  0196                     	;# 
   889  0197                     	;# 
   890  0199                     	;# 
   891  0199                     	;# 
   892  0199                     	;# 
   893  019A                     	;# 
   894  019A                     	;# 
   895  019A                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019C                     	;# 
   902  019C                     	;# 
   903  019C                     	;# 
   904  019D                     	;# 
   905  019D                     	;# 
   906  019D                     	;# 
   907  019E                     	;# 
   908  019E                     	;# 
   909  019E                     	;# 
   910  019F                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  020C                     	;# 
   916  020D                     	;# 
   917  020E                     	;# 
   918  020F                     	;# 
   919  0210                     	;# 
   920  0211                     	;# 
   921  0211                     	;# 
   922  0212                     	;# 
   923  0212                     	;# 
   924  0213                     	;# 
   925  0213                     	;# 
   926  0214                     	;# 
   927  0214                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0215                     	;# 
   932  0216                     	;# 
   933  0216                     	;# 
   934  0217                     	;# 
   935  0217                     	;# 
   936  028C                     	;# 
   937  028D                     	;# 
   938  028E                     	;# 
   939  028F                     	;# 
   940  0290                     	;# 
   941  0291                     	;# 
   942  0291                     	;# 
   943  0292                     	;# 
   944  0293                     	;# 
   945  0293                     	;# 
   946  0298                     	;# 
   947  0298                     	;# 
   948  0299                     	;# 
   949  029A                     	;# 
   950  029A                     	;# 
   951  029E                     	;# 
   952  030C                     	;# 
   953  030D                     	;# 
   954  030E                     	;# 
   955  030F                     	;# 
   956  0310                     	;# 
   957  038C                     	;# 
   958  038D                     	;# 
   959  038E                     	;# 
   960  038F                     	;# 
   961  0390                     	;# 
   962  0391                     	;# 
   963  0392                     	;# 
   964  0393                     	;# 
   965  0394                     	;# 
   966  0395                     	;# 
   967  0396                     	;# 
   968  0397                     	;# 
   969  0398                     	;# 
   970  0399                     	;# 
   971  039D                     	;# 
   972  039E                     	;# 
   973  039F                     	;# 
   974  0415                     	;# 
   975  0416                     	;# 
   976  0417                     	;# 
   977  041C                     	;# 
   978  041D                     	;# 
   979  041E                     	;# 
   980  0498                     	;# 
   981  0498                     	;# 
   982  0499                     	;# 
   983  049A                     	;# 
   984  049B                     	;# 
   985  049B                     	;# 
   986  049C                     	;# 
   987  049D                     	;# 
   988  049E                     	;# 
   989  049F                     	;# 
   990  0511                     	;# 
   991  0515                     	;# 
   992  0617                     	;# 
   993  0618                     	;# 
   994  0619                     	;# 
   995  0619                     	;# 
   996  061A                     	;# 
   997  061B                     	;# 
   998  061C                     	;# 
   999  061C                     	;# 
  1000  0691                     	;# 
  1001  0692                     	;# 
  1002  0693                     	;# 
  1003  0694                     	;# 
  1004  0695                     	;# 
  1005  0696                     	;# 
  1006  0697                     	;# 
  1007  0698                     	;# 
  1008  0699                     	;# 
  1009  069A                     	;# 
  1010  069B                     	;# 
  1011  069C                     	;# 
  1012  069D                     	;# 
  1013  069E                     	;# 
  1014  069F                     	;# 
  1015  0E0F                     	;# 
  1016  0E10                     	;# 
  1017  0E11                     	;# 
  1018  0E12                     	;# 
  1019  0E13                     	;# 
  1020  0E14                     	;# 
  1021  0E15                     	;# 
  1022  0E17                     	;# 
  1023  0E20                     	;# 
  1024  0E21                     	;# 
  1025  0E22                     	;# 
  1026  0E24                     	;# 
  1027  0E25                     	;# 
  1028  0E28                     	;# 
  1029  0E29                     	;# 
  1030  0E2A                     	;# 
  1031  0E2B                     	;# 
  1032  0E90                     	;# 
  1033  0E91                     	;# 
  1034  0E92                     	;# 
  1035  0E93                     	;# 
  1036  0E94                     	;# 
  1037  0E95                     	;# 
  1038  0E96                     	;# 
  1039  0E97                     	;# 
  1040  0E98                     	;# 
  1041  0E99                     	;# 
  1042  0E9A                     	;# 
  1043  0E9B                     	;# 
  1044  0E9C                     	;# 
  1045  0E9D                     	;# 
  1046  0E9E                     	;# 
  1047  0E9F                     	;# 
  1048  0EA0                     	;# 
  1049  0EA1                     	;# 
  1050  0EA2                     	;# 
  1051  0EA3                     	;# 
  1052  0EA4                     	;# 
  1053  0EA5                     	;# 
  1054  0EA6                     	;# 
  1055  0EA7                     	;# 
  1056  0EA8                     	;# 
  1057  0EA9                     	;# 
  1058  0EAA                     	;# 
  1059  0EAB                     	;# 
  1060  0EAC                     	;# 
  1061  0EAD                     	;# 
  1062  0EAE                     	;# 
  1063  0EAF                     	;# 
  1064  0EB0                     	;# 
  1065  0EB1                     	;# 
  1066  0EB2                     	;# 
  1067  0F0F                     	;# 
  1068  0F10                     	;# 
  1069  0F11                     	;# 
  1070  0F12                     	;# 
  1071  0F13                     	;# 
  1072  0F14                     	;# 
  1073  0F15                     	;# 
  1074  0F16                     	;# 
  1075  0F17                     	;# 
  1076  0F18                     	;# 
  1077  0F19                     	;# 
  1078  0F1A                     	;# 
  1079  0F1B                     	;# 
  1080  0F1C                     	;# 
  1081  0F1D                     	;# 
  1082  0F1E                     	;# 
  1083  0F1F                     	;# 
  1084  0F20                     	;# 
  1085  0F21                     	;# 
  1086  0F22                     	;# 
  1087  0F23                     	;# 
  1088  0F24                     	;# 
  1089  0F25                     	;# 
  1090  0F26                     	;# 
  1091  0F27                     	;# 
  1092  0F28                     	;# 
  1093  0F29                     	;# 
  1094  0F2A                     	;# 
  1095  0F2B                     	;# 
  1096  0F2C                     	;# 
  1097  0F2D                     	;# 
  1098  0F2E                     	;# 
  1099  0F2F                     	;# 
  1100  0F30                     	;# 
  1101  0F31                     	;# 
  1102  0F32                     	;# 
  1103  0F33                     	;# 
  1104  0F34                     	;# 
  1105  0F35                     	;# 
  1106  0F36                     	;# 
  1107  0F37                     	;# 
  1108  0FE4                     	;# 
  1109  0FE5                     	;# 
  1110  0FE6                     	;# 
  1111  0FE7                     	;# 
  1112  0FE8                     	;# 
  1113  0FE9                     	;# 
  1114  0FEA                     	;# 
  1115  0FEB                     	;# 
  1116  0FED                     	;# 
  1117  0FEE                     	;# 
  1118  0FEF                     	;# 
  1119  0000                     	;# 
  1120  0001                     	;# 
  1121  0002                     	;# 
  1122  0003                     	;# 
  1123  0004                     	;# 
  1124  0005                     	;# 
  1125  0006                     	;# 
  1126  0007                     	;# 
  1127  0008                     	;# 
  1128  0009                     	;# 
  1129  000A                     	;# 
  1130  000B                     	;# 
  1131  000C                     	;# 
  1132  000D                     	;# 
  1133  000E                     	;# 
  1134  000F                     	;# 
  1135  0010                     	;# 
  1136  0011                     	;# 
  1137  0012                     	;# 
  1138  0013                     	;# 
  1139  0015                     	;# 
  1140  0016                     	;# 
  1141  0016                     	;# 
  1142  0017                     	;# 
  1143  0018                     	;# 
  1144  0019                     	;# 
  1145  001A                     	;# 
  1146  001B                     	;# 
  1147  001C                     	;# 
  1148  008C                     	;# 
  1149  008D                     	;# 
  1150  008E                     	;# 
  1151  008F                     	;# 
  1152  0090                     	;# 
  1153  0091                     	;# 
  1154  0092                     	;# 
  1155  0093                     	;# 
  1156  0095                     	;# 
  1157  0096                     	;# 
  1158  0097                     	;# 
  1159  0098                     	;# 
  1160  0099                     	;# 
  1161  009A                     	;# 
  1162  009B                     	;# 
  1163  009B                     	;# 
  1164  009C                     	;# 
  1165  009D                     	;# 
  1166  009E                     	;# 
  1167  009F                     	;# 
  1168  010C                     	;# 
  1169  010D                     	;# 
  1170  010E                     	;# 
  1171  010F                     	;# 
  1172  0110                     	;# 
  1173  0111                     	;# 
  1174  0112                     	;# 
  1175  0113                     	;# 
  1176  0114                     	;# 
  1177  0115                     	;# 
  1178  0116                     	;# 
  1179  0117                     	;# 
  1180  0118                     	;# 
  1181  0119                     	;# 
  1182  011A                     	;# 
  1183  011B                     	;# 
  1184  011B                     	;# 
  1185  011C                     	;# 
  1186  018C                     	;# 
  1187  018D                     	;# 
  1188  018E                     	;# 
  1189  018F                     	;# 
  1190  0190                     	;# 
  1191  0191                     	;# 
  1192  0191                     	;# 
  1193  0192                     	;# 
  1194  0193                     	;# 
  1195  0193                     	;# 
  1196  0194                     	;# 
  1197  0195                     	;# 
  1198  0196                     	;# 
  1199  0197                     	;# 
  1200  0199                     	;# 
  1201  0199                     	;# 
  1202  0199                     	;# 
  1203  019A                     	;# 
  1204  019A                     	;# 
  1205  019A                     	;# 
  1206  019B                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019B                     	;# 
  1211  019C                     	;# 
  1212  019C                     	;# 
  1213  019C                     	;# 
  1214  019D                     	;# 
  1215  019D                     	;# 
  1216  019D                     	;# 
  1217  019E                     	;# 
  1218  019E                     	;# 
  1219  019E                     	;# 
  1220  019F                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  019F                     	;# 
  1225  020C                     	;# 
  1226  020D                     	;# 
  1227  020E                     	;# 
  1228  020F                     	;# 
  1229  0210                     	;# 
  1230  0211                     	;# 
  1231  0211                     	;# 
  1232  0212                     	;# 
  1233  0212                     	;# 
  1234  0213                     	;# 
  1235  0213                     	;# 
  1236  0214                     	;# 
  1237  0214                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0215                     	;# 
  1242  0216                     	;# 
  1243  0216                     	;# 
  1244  0217                     	;# 
  1245  0217                     	;# 
  1246  028C                     	;# 
  1247  028D                     	;# 
  1248  028E                     	;# 
  1249  028F                     	;# 
  1250  0290                     	;# 
  1251  0291                     	;# 
  1252  0291                     	;# 
  1253  0292                     	;# 
  1254  0293                     	;# 
  1255  0293                     	;# 
  1256  0298                     	;# 
  1257  0298                     	;# 
  1258  0299                     	;# 
  1259  029A                     	;# 
  1260  029A                     	;# 
  1261  029E                     	;# 
  1262  030C                     	;# 
  1263  030D                     	;# 
  1264  030E                     	;# 
  1265  030F                     	;# 
  1266  0310                     	;# 
  1267  038C                     	;# 
  1268  038D                     	;# 
  1269  038E                     	;# 
  1270  038F                     	;# 
  1271  0390                     	;# 
  1272  0391                     	;# 
  1273  0392                     	;# 
  1274  0393                     	;# 
  1275  0394                     	;# 
  1276  0395                     	;# 
  1277  0396                     	;# 
  1278  0397                     	;# 
  1279  0398                     	;# 
  1280  0399                     	;# 
  1281  039D                     	;# 
  1282  039E                     	;# 
  1283  039F                     	;# 
  1284  0415                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  041C                     	;# 
  1288  041D                     	;# 
  1289  041E                     	;# 
  1290  0498                     	;# 
  1291  0498                     	;# 
  1292  0499                     	;# 
  1293  049A                     	;# 
  1294  049B                     	;# 
  1295  049B                     	;# 
  1296  049C                     	;# 
  1297  049D                     	;# 
  1298  049E                     	;# 
  1299  049F                     	;# 
  1300  0511                     	;# 
  1301  0515                     	;# 
  1302  0617                     	;# 
  1303  0618                     	;# 
  1304  0619                     	;# 
  1305  0619                     	;# 
  1306  061A                     	;# 
  1307  061B                     	;# 
  1308  061C                     	;# 
  1309  061C                     	;# 
  1310  0691                     	;# 
  1311  0692                     	;# 
  1312  0693                     	;# 
  1313  0694                     	;# 
  1314  0695                     	;# 
  1315  0696                     	;# 
  1316  0697                     	;# 
  1317  0698                     	;# 
  1318  0699                     	;# 
  1319  069A                     	;# 
  1320  069B                     	;# 
  1321  069C                     	;# 
  1322  069D                     	;# 
  1323  069E                     	;# 
  1324  069F                     	;# 
  1325  0E0F                     	;# 
  1326  0E10                     	;# 
  1327  0E11                     	;# 
  1328  0E12                     	;# 
  1329  0E13                     	;# 
  1330  0E14                     	;# 
  1331  0E15                     	;# 
  1332  0E17                     	;# 
  1333  0E20                     	;# 
  1334  0E21                     	;# 
  1335  0E22                     	;# 
  1336  0E24                     	;# 
  1337  0E25                     	;# 
  1338  0E28                     	;# 
  1339  0E29                     	;# 
  1340  0E2A                     	;# 
  1341  0E2B                     	;# 
  1342  0E90                     	;# 
  1343  0E91                     	;# 
  1344  0E92                     	;# 
  1345  0E93                     	;# 
  1346  0E94                     	;# 
  1347  0E95                     	;# 
  1348  0E96                     	;# 
  1349  0E97                     	;# 
  1350  0E98                     	;# 
  1351  0E99                     	;# 
  1352  0E9A                     	;# 
  1353  0E9B                     	;# 
  1354  0E9C                     	;# 
  1355  0E9D                     	;# 
  1356  0E9E                     	;# 
  1357  0E9F                     	;# 
  1358  0EA0                     	;# 
  1359  0EA1                     	;# 
  1360  0EA2                     	;# 
  1361  0EA3                     	;# 
  1362  0EA4                     	;# 
  1363  0EA5                     	;# 
  1364  0EA6                     	;# 
  1365  0EA7                     	;# 
  1366  0EA8                     	;# 
  1367  0EA9                     	;# 
  1368  0EAA                     	;# 
  1369  0EAB                     	;# 
  1370  0EAC                     	;# 
  1371  0EAD                     	;# 
  1372  0EAE                     	;# 
  1373  0EAF                     	;# 
  1374  0EB0                     	;# 
  1375  0EB1                     	;# 
  1376  0EB2                     	;# 
  1377  0F0F                     	;# 
  1378  0F10                     	;# 
  1379  0F11                     	;# 
  1380  0F12                     	;# 
  1381  0F13                     	;# 
  1382  0F14                     	;# 
  1383  0F15                     	;# 
  1384  0F16                     	;# 
  1385  0F17                     	;# 
  1386  0F18                     	;# 
  1387  0F19                     	;# 
  1388  0F1A                     	;# 
  1389  0F1B                     	;# 
  1390  0F1C                     	;# 
  1391  0F1D                     	;# 
  1392  0F1E                     	;# 
  1393  0F1F                     	;# 
  1394  0F20                     	;# 
  1395  0F21                     	;# 
  1396  0F22                     	;# 
  1397  0F23                     	;# 
  1398  0F24                     	;# 
  1399  0F25                     	;# 
  1400  0F26                     	;# 
  1401  0F27                     	;# 
  1402  0F28                     	;# 
  1403  0F29                     	;# 
  1404  0F2A                     	;# 
  1405  0F2B                     	;# 
  1406  0F2C                     	;# 
  1407  0F2D                     	;# 
  1408  0F2E                     	;# 
  1409  0F2F                     	;# 
  1410  0F30                     	;# 
  1411  0F31                     	;# 
  1412  0F32                     	;# 
  1413  0F33                     	;# 
  1414  0F34                     	;# 
  1415  0F35                     	;# 
  1416  0F36                     	;# 
  1417  0F37                     	;# 
  1418  0FE4                     	;# 
  1419  0FE5                     	;# 
  1420  0FE6                     	;# 
  1421  0FE7                     	;# 
  1422  0FE8                     	;# 
  1423  0FE9                     	;# 
  1424  0FEA                     	;# 
  1425  0FEB                     	;# 
  1426  0FED                     	;# 
  1427  0FEE                     	;# 
  1428  0FEF                     	;# 
  1429  0000                     	;# 
  1430  0001                     	;# 
  1431  0002                     	;# 
  1432  0003                     	;# 
  1433  0004                     	;# 
  1434  0005                     	;# 
  1435  0006                     	;# 
  1436  0007                     	;# 
  1437  0008                     	;# 
  1438  0009                     	;# 
  1439  000A                     	;# 
  1440  000B                     	;# 
  1441  000C                     	;# 
  1442  000D                     	;# 
  1443  000E                     	;# 
  1444  000F                     	;# 
  1445  0010                     	;# 
  1446  0011                     	;# 
  1447  0012                     	;# 
  1448  0013                     	;# 
  1449  0015                     	;# 
  1450  0016                     	;# 
  1451  0016                     	;# 
  1452  0017                     	;# 
  1453  0018                     	;# 
  1454  0019                     	;# 
  1455  001A                     	;# 
  1456  001B                     	;# 
  1457  001C                     	;# 
  1458  008C                     	;# 
  1459  008D                     	;# 
  1460  008E                     	;# 
  1461  008F                     	;# 
  1462  0090                     	;# 
  1463  0091                     	;# 
  1464  0092                     	;# 
  1465  0093                     	;# 
  1466  0095                     	;# 
  1467  0096                     	;# 
  1468  0097                     	;# 
  1469  0098                     	;# 
  1470  0099                     	;# 
  1471  009A                     	;# 
  1472  009B                     	;# 
  1473  009B                     	;# 
  1474  009C                     	;# 
  1475  009D                     	;# 
  1476  009E                     	;# 
  1477  009F                     	;# 
  1478  010C                     	;# 
  1479  010D                     	;# 
  1480  010E                     	;# 
  1481  010F                     	;# 
  1482  0110                     	;# 
  1483  0111                     	;# 
  1484  0112                     	;# 
  1485  0113                     	;# 
  1486  0114                     	;# 
  1487  0115                     	;# 
  1488  0116                     	;# 
  1489  0117                     	;# 
  1490  0118                     	;# 
  1491  0119                     	;# 
  1492  011A                     	;# 
  1493  011B                     	;# 
  1494  011B                     	;# 
  1495  011C                     	;# 
  1496  018C                     	;# 
  1497  018D                     	;# 
  1498  018E                     	;# 
  1499  018F                     	;# 
  1500  0190                     	;# 
  1501  0191                     	;# 
  1502  0191                     	;# 
  1503  0192                     	;# 
  1504  0193                     	;# 
  1505  0193                     	;# 
  1506  0194                     	;# 
  1507  0195                     	;# 
  1508  0196                     	;# 
  1509  0197                     	;# 
  1510  0199                     	;# 
  1511  0199                     	;# 
  1512  0199                     	;# 
  1513  019A                     	;# 
  1514  019A                     	;# 
  1515  019A                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019B                     	;# 
  1521  019C                     	;# 
  1522  019C                     	;# 
  1523  019C                     	;# 
  1524  019D                     	;# 
  1525  019D                     	;# 
  1526  019D                     	;# 
  1527  019E                     	;# 
  1528  019E                     	;# 
  1529  019E                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  019F                     	;# 
  1535  020C                     	;# 
  1536  020D                     	;# 
  1537  020E                     	;# 
  1538  020F                     	;# 
  1539  0210                     	;# 
  1540  0211                     	;# 
  1541  0211                     	;# 
  1542  0212                     	;# 
  1543  0212                     	;# 
  1544  0213                     	;# 
  1545  0213                     	;# 
  1546  0214                     	;# 
  1547  0214                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0216                     	;# 
  1553  0216                     	;# 
  1554  0217                     	;# 
  1555  0217                     	;# 
  1556  028C                     	;# 
  1557  028D                     	;# 
  1558  028E                     	;# 
  1559  028F                     	;# 
  1560  0290                     	;# 
  1561  0291                     	;# 
  1562  0291                     	;# 
  1563  0292                     	;# 
  1564  0293                     	;# 
  1565  0293                     	;# 
  1566  0298                     	;# 
  1567  0298                     	;# 
  1568  0299                     	;# 
  1569  029A                     	;# 
  1570  029A                     	;# 
  1571  029E                     	;# 
  1572  030C                     	;# 
  1573  030D                     	;# 
  1574  030E                     	;# 
  1575  030F                     	;# 
  1576  0310                     	;# 
  1577  038C                     	;# 
  1578  038D                     	;# 
  1579  038E                     	;# 
  1580  038F                     	;# 
  1581  0390                     	;# 
  1582  0391                     	;# 
  1583  0392                     	;# 
  1584  0393                     	;# 
  1585  0394                     	;# 
  1586  0395                     	;# 
  1587  0396                     	;# 
  1588  0397                     	;# 
  1589  0398                     	;# 
  1590  0399                     	;# 
  1591  039D                     	;# 
  1592  039E                     	;# 
  1593  039F                     	;# 
  1594  0415                     	;# 
  1595  0416                     	;# 
  1596  0417                     	;# 
  1597  041C                     	;# 
  1598  041D                     	;# 
  1599  041E                     	;# 
  1600  0498                     	;# 
  1601  0498                     	;# 
  1602  0499                     	;# 
  1603  049A                     	;# 
  1604  049B                     	;# 
  1605  049B                     	;# 
  1606  049C                     	;# 
  1607  049D                     	;# 
  1608  049E                     	;# 
  1609  049F                     	;# 
  1610  0511                     	;# 
  1611  0515                     	;# 
  1612  0617                     	;# 
  1613  0618                     	;# 
  1614  0619                     	;# 
  1615  0619                     	;# 
  1616  061A                     	;# 
  1617  061B                     	;# 
  1618  061C                     	;# 
  1619  061C                     	;# 
  1620  0691                     	;# 
  1621  0692                     	;# 
  1622  0693                     	;# 
  1623  0694                     	;# 
  1624  0695                     	;# 
  1625  0696                     	;# 
  1626  0697                     	;# 
  1627  0698                     	;# 
  1628  0699                     	;# 
  1629  069A                     	;# 
  1630  069B                     	;# 
  1631  069C                     	;# 
  1632  069D                     	;# 
  1633  069E                     	;# 
  1634  069F                     	;# 
  1635  0E0F                     	;# 
  1636  0E10                     	;# 
  1637  0E11                     	;# 
  1638  0E12                     	;# 
  1639  0E13                     	;# 
  1640  0E14                     	;# 
  1641  0E15                     	;# 
  1642  0E17                     	;# 
  1643  0E20                     	;# 
  1644  0E21                     	;# 
  1645  0E22                     	;# 
  1646  0E24                     	;# 
  1647  0E25                     	;# 
  1648  0E28                     	;# 
  1649  0E29                     	;# 
  1650  0E2A                     	;# 
  1651  0E2B                     	;# 
  1652  0E90                     	;# 
  1653  0E91                     	;# 
  1654  0E92                     	;# 
  1655  0E93                     	;# 
  1656  0E94                     	;# 
  1657  0E95                     	;# 
  1658  0E96                     	;# 
  1659  0E97                     	;# 
  1660  0E98                     	;# 
  1661  0E99                     	;# 
  1662  0E9A                     	;# 
  1663  0E9B                     	;# 
  1664  0E9C                     	;# 
  1665  0E9D                     	;# 
  1666  0E9E                     	;# 
  1667  0E9F                     	;# 
  1668  0EA0                     	;# 
  1669  0EA1                     	;# 
  1670  0EA2                     	;# 
  1671  0EA3                     	;# 
  1672  0EA4                     	;# 
  1673  0EA5                     	;# 
  1674  0EA6                     	;# 
  1675  0EA7                     	;# 
  1676  0EA8                     	;# 
  1677  0EA9                     	;# 
  1678  0EAA                     	;# 
  1679  0EAB                     	;# 
  1680  0EAC                     	;# 
  1681  0EAD                     	;# 
  1682  0EAE                     	;# 
  1683  0EAF                     	;# 
  1684  0EB0                     	;# 
  1685  0EB1                     	;# 
  1686  0EB2                     	;# 
  1687  0F0F                     	;# 
  1688  0F10                     	;# 
  1689  0F11                     	;# 
  1690  0F12                     	;# 
  1691  0F13                     	;# 
  1692  0F14                     	;# 
  1693  0F15                     	;# 
  1694  0F16                     	;# 
  1695  0F17                     	;# 
  1696  0F18                     	;# 
  1697  0F19                     	;# 
  1698  0F1A                     	;# 
  1699  0F1B                     	;# 
  1700  0F1C                     	;# 
  1701  0F1D                     	;# 
  1702  0F1E                     	;# 
  1703  0F1F                     	;# 
  1704  0F20                     	;# 
  1705  0F21                     	;# 
  1706  0F22                     	;# 
  1707  0F23                     	;# 
  1708  0F24                     	;# 
  1709  0F25                     	;# 
  1710  0F26                     	;# 
  1711  0F27                     	;# 
  1712  0F28                     	;# 
  1713  0F29                     	;# 
  1714  0F2A                     	;# 
  1715  0F2B                     	;# 
  1716  0F2C                     	;# 
  1717  0F2D                     	;# 
  1718  0F2E                     	;# 
  1719  0F2F                     	;# 
  1720  0F30                     	;# 
  1721  0F31                     	;# 
  1722  0F32                     	;# 
  1723  0F33                     	;# 
  1724  0F34                     	;# 
  1725  0F35                     	;# 
  1726  0F36                     	;# 
  1727  0F37                     	;# 
  1728  0FE4                     	;# 
  1729  0FE5                     	;# 
  1730  0FE6                     	;# 
  1731  0FE7                     	;# 
  1732  0FE8                     	;# 
  1733  0FE9                     	;# 
  1734  0FEA                     	;# 
  1735  0FEB                     	;# 
  1736  0FED                     	;# 
  1737  0FEE                     	;# 
  1738  0FEF                     	;# 
  1739  0000                     	;# 
  1740  0001                     	;# 
  1741  0002                     	;# 
  1742  0003                     	;# 
  1743  0004                     	;# 
  1744  0005                     	;# 
  1745  0006                     	;# 
  1746  0007                     	;# 
  1747  0008                     	;# 
  1748  0009                     	;# 
  1749  000A                     	;# 
  1750  000B                     	;# 
  1751  000C                     	;# 
  1752  000D                     	;# 
  1753  000E                     	;# 
  1754  000F                     	;# 
  1755  0010                     	;# 
  1756  0011                     	;# 
  1757  0012                     	;# 
  1758  0013                     	;# 
  1759  0015                     	;# 
  1760  0016                     	;# 
  1761  0016                     	;# 
  1762  0017                     	;# 
  1763  0018                     	;# 
  1764  0019                     	;# 
  1765  001A                     	;# 
  1766  001B                     	;# 
  1767  001C                     	;# 
  1768  008C                     	;# 
  1769  008D                     	;# 
  1770  008E                     	;# 
  1771  008F                     	;# 
  1772  0090                     	;# 
  1773  0091                     	;# 
  1774  0092                     	;# 
  1775  0093                     	;# 
  1776  0095                     	;# 
  1777  0096                     	;# 
  1778  0097                     	;# 
  1779  0098                     	;# 
  1780  0099                     	;# 
  1781  009A                     	;# 
  1782  009B                     	;# 
  1783  009B                     	;# 
  1784  009C                     	;# 
  1785  009D                     	;# 
  1786  009E                     	;# 
  1787  009F                     	;# 
  1788  010C                     	;# 
  1789  010D                     	;# 
  1790  010E                     	;# 
  1791  010F                     	;# 
  1792  0110                     	;# 
  1793  0111                     	;# 
  1794  0112                     	;# 
  1795  0113                     	;# 
  1796  0114                     	;# 
  1797  0115                     	;# 
  1798  0116                     	;# 
  1799  0117                     	;# 
  1800  0118                     	;# 
  1801  0119                     	;# 
  1802  011A                     	;# 
  1803  011B                     	;# 
  1804  011B                     	;# 
  1805  011C                     	;# 
  1806  018C                     	;# 
  1807  018D                     	;# 
  1808  018E                     	;# 
  1809  018F                     	;# 
  1810  0190                     	;# 
  1811  0191                     	;# 
  1812  0191                     	;# 
  1813  0192                     	;# 
  1814  0193                     	;# 
  1815  0193                     	;# 
  1816  0194                     	;# 
  1817  0195                     	;# 
  1818  0196                     	;# 
  1819  0197                     	;# 
  1820  0199                     	;# 
  1821  0199                     	;# 
  1822  0199                     	;# 
  1823  019A                     	;# 
  1824  019A                     	;# 
  1825  019A                     	;# 
  1826  019B                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019B                     	;# 
  1830  019B                     	;# 
  1831  019C                     	;# 
  1832  019C                     	;# 
  1833  019C                     	;# 
  1834  019D                     	;# 
  1835  019D                     	;# 
  1836  019D                     	;# 
  1837  019E                     	;# 
  1838  019E                     	;# 
  1839  019E                     	;# 
  1840  019F                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  019F                     	;# 
  1844  019F                     	;# 
  1845  020C                     	;# 
  1846  020D                     	;# 
  1847  020E                     	;# 
  1848  020F                     	;# 
  1849  0210                     	;# 
  1850  0211                     	;# 
  1851  0211                     	;# 
  1852  0212                     	;# 
  1853  0212                     	;# 
  1854  0213                     	;# 
  1855  0213                     	;# 
  1856  0214                     	;# 
  1857  0214                     	;# 
  1858  0215                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0216                     	;# 
  1863  0216                     	;# 
  1864  0217                     	;# 
  1865  0217                     	;# 
  1866  028C                     	;# 
  1867  028D                     	;# 
  1868  028E                     	;# 
  1869  028F                     	;# 
  1870  0290                     	;# 
  1871  0291                     	;# 
  1872  0291                     	;# 
  1873  0292                     	;# 
  1874  0293                     	;# 
  1875  0293                     	;# 
  1876  0298                     	;# 
  1877  0298                     	;# 
  1878  0299                     	;# 
  1879  029A                     	;# 
  1880  029A                     	;# 
  1881  029E                     	;# 
  1882  030C                     	;# 
  1883  030D                     	;# 
  1884  030E                     	;# 
  1885  030F                     	;# 
  1886  0310                     	;# 
  1887  038C                     	;# 
  1888  038D                     	;# 
  1889  038E                     	;# 
  1890  038F                     	;# 
  1891  0390                     	;# 
  1892  0391                     	;# 
  1893  0392                     	;# 
  1894  0393                     	;# 
  1895  0394                     	;# 
  1896  0395                     	;# 
  1897  0396                     	;# 
  1898  0397                     	;# 
  1899  0398                     	;# 
  1900  0399                     	;# 
  1901  039D                     	;# 
  1902  039E                     	;# 
  1903  039F                     	;# 
  1904  0415                     	;# 
  1905  0416                     	;# 
  1906  0417                     	;# 
  1907  041C                     	;# 
  1908  041D                     	;# 
  1909  041E                     	;# 
  1910  0498                     	;# 
  1911  0498                     	;# 
  1912  0499                     	;# 
  1913  049A                     	;# 
  1914  049B                     	;# 
  1915  049B                     	;# 
  1916  049C                     	;# 
  1917  049D                     	;# 
  1918  049E                     	;# 
  1919  049F                     	;# 
  1920  0511                     	;# 
  1921  0515                     	;# 
  1922  0617                     	;# 
  1923  0618                     	;# 
  1924  0619                     	;# 
  1925  0619                     	;# 
  1926  061A                     	;# 
  1927  061B                     	;# 
  1928  061C                     	;# 
  1929  061C                     	;# 
  1930  0691                     	;# 
  1931  0692                     	;# 
  1932  0693                     	;# 
  1933  0694                     	;# 
  1934  0695                     	;# 
  1935  0696                     	;# 
  1936  0697                     	;# 
  1937  0698                     	;# 
  1938  0699                     	;# 
  1939  069A                     	;# 
  1940  069B                     	;# 
  1941  069C                     	;# 
  1942  069D                     	;# 
  1943  069E                     	;# 
  1944  069F                     	;# 
  1945  0E0F                     	;# 
  1946  0E10                     	;# 
  1947  0E11                     	;# 
  1948  0E12                     	;# 
  1949  0E13                     	;# 
  1950  0E14                     	;# 
  1951  0E15                     	;# 
  1952  0E17                     	;# 
  1953  0E20                     	;# 
  1954  0E21                     	;# 
  1955  0E22                     	;# 
  1956  0E24                     	;# 
  1957  0E25                     	;# 
  1958  0E28                     	;# 
  1959  0E29                     	;# 
  1960  0E2A                     	;# 
  1961  0E2B                     	;# 
  1962  0E90                     	;# 
  1963  0E91                     	;# 
  1964  0E92                     	;# 
  1965  0E93                     	;# 
  1966  0E94                     	;# 
  1967  0E95                     	;# 
  1968  0E96                     	;# 
  1969  0E97                     	;# 
  1970  0E98                     	;# 
  1971  0E99                     	;# 
  1972  0E9A                     	;# 
  1973  0E9B                     	;# 
  1974  0E9C                     	;# 
  1975  0E9D                     	;# 
  1976  0E9E                     	;# 
  1977  0E9F                     	;# 
  1978  0EA0                     	;# 
  1979  0EA1                     	;# 
  1980  0EA2                     	;# 
  1981  0EA3                     	;# 
  1982  0EA4                     	;# 
  1983  0EA5                     	;# 
  1984  0EA6                     	;# 
  1985  0EA7                     	;# 
  1986  0EA8                     	;# 
  1987  0EA9                     	;# 
  1988  0EAA                     	;# 
  1989  0EAB                     	;# 
  1990  0EAC                     	;# 
  1991  0EAD                     	;# 
  1992  0EAE                     	;# 
  1993  0EAF                     	;# 
  1994  0EB0                     	;# 
  1995  0EB1                     	;# 
  1996  0EB2                     	;# 
  1997  0F0F                     	;# 
  1998  0F10                     	;# 
  1999  0F11                     	;# 
  2000  0F12                     	;# 
  2001  0F13                     	;# 
  2002  0F14                     	;# 
  2003  0F15                     	;# 
  2004  0F16                     	;# 
  2005  0F17                     	;# 
  2006  0F18                     	;# 
  2007  0F19                     	;# 
  2008  0F1A                     	;# 
  2009  0F1B                     	;# 
  2010  0F1C                     	;# 
  2011  0F1D                     	;# 
  2012  0F1E                     	;# 
  2013  0F1F                     	;# 
  2014  0F20                     	;# 
  2015  0F21                     	;# 
  2016  0F22                     	;# 
  2017  0F23                     	;# 
  2018  0F24                     	;# 
  2019  0F25                     	;# 
  2020  0F26                     	;# 
  2021  0F27                     	;# 
  2022  0F28                     	;# 
  2023  0F29                     	;# 
  2024  0F2A                     	;# 
  2025  0F2B                     	;# 
  2026  0F2C                     	;# 
  2027  0F2D                     	;# 
  2028  0F2E                     	;# 
  2029  0F2F                     	;# 
  2030  0F30                     	;# 
  2031  0F31                     	;# 
  2032  0F32                     	;# 
  2033  0F33                     	;# 
  2034  0F34                     	;# 
  2035  0F35                     	;# 
  2036  0F36                     	;# 
  2037  0F37                     	;# 
  2038  0FE4                     	;# 
  2039  0FE5                     	;# 
  2040  0FE6                     	;# 
  2041  0FE7                     	;# 
  2042  0FE8                     	;# 
  2043  0FE9                     	;# 
  2044  0FEA                     	;# 
  2045  0FEB                     	;# 
  2046  0FED                     	;# 
  2047  0FEE                     	;# 
  2048  0FEF                     	;# 
  2049  0000                     	;# 
  2050  0001                     	;# 
  2051  0002                     	;# 
  2052  0003                     	;# 
  2053  0004                     	;# 
  2054  0005                     	;# 
  2055  0006                     	;# 
  2056  0007                     	;# 
  2057  0008                     	;# 
  2058  0009                     	;# 
  2059  000A                     	;# 
  2060  000B                     	;# 
  2061  000C                     	;# 
  2062  000D                     	;# 
  2063  000E                     	;# 
  2064  000F                     	;# 
  2065  0010                     	;# 
  2066  0011                     	;# 
  2067  0012                     	;# 
  2068  0013                     	;# 
  2069  0015                     	;# 
  2070  0016                     	;# 
  2071  0016                     	;# 
  2072  0017                     	;# 
  2073  0018                     	;# 
  2074  0019                     	;# 
  2075  001A                     	;# 
  2076  001B                     	;# 
  2077  001C                     	;# 
  2078  008C                     	;# 
  2079  008D                     	;# 
  2080  008E                     	;# 
  2081  008F                     	;# 
  2082  0090                     	;# 
  2083  0091                     	;# 
  2084  0092                     	;# 
  2085  0093                     	;# 
  2086  0095                     	;# 
  2087  0096                     	;# 
  2088  0097                     	;# 
  2089  0098                     	;# 
  2090  0099                     	;# 
  2091  009A                     	;# 
  2092  009B                     	;# 
  2093  009B                     	;# 
  2094  009C                     	;# 
  2095  009D                     	;# 
  2096  009E                     	;# 
  2097  009F                     	;# 
  2098  010C                     	;# 
  2099  010D                     	;# 
  2100  010E                     	;# 
  2101  010F                     	;# 
  2102  0110                     	;# 
  2103  0111                     	;# 
  2104  0112                     	;# 
  2105  0113                     	;# 
  2106  0114                     	;# 
  2107  0115                     	;# 
  2108  0116                     	;# 
  2109  0117                     	;# 
  2110  0118                     	;# 
  2111  0119                     	;# 
  2112  011A                     	;# 
  2113  011B                     	;# 
  2114  011B                     	;# 
  2115  011C                     	;# 
  2116  018C                     	;# 
  2117  018D                     	;# 
  2118  018E                     	;# 
  2119  018F                     	;# 
  2120  0190                     	;# 
  2121  0191                     	;# 
  2122  0191                     	;# 
  2123  0192                     	;# 
  2124  0193                     	;# 
  2125  0193                     	;# 
  2126  0194                     	;# 
  2127  0195                     	;# 
  2128  0196                     	;# 
  2129  0197                     	;# 
  2130  0199                     	;# 
  2131  0199                     	;# 
  2132  0199                     	;# 
  2133  019A                     	;# 
  2134  019A                     	;# 
  2135  019A                     	;# 
  2136  019B                     	;# 
  2137  019B                     	;# 
  2138  019B                     	;# 
  2139  019B                     	;# 
  2140  019B                     	;# 
  2141  019C                     	;# 
  2142  019C                     	;# 
  2143  019C                     	;# 
  2144  019D                     	;# 
  2145  019D                     	;# 
  2146  019D                     	;# 
  2147  019E                     	;# 
  2148  019E                     	;# 
  2149  019E                     	;# 
  2150  019F                     	;# 
  2151  019F                     	;# 
  2152  019F                     	;# 
  2153  019F                     	;# 
  2154  019F                     	;# 
  2155  020C                     	;# 
  2156  020D                     	;# 
  2157  020E                     	;# 
  2158  020F                     	;# 
  2159  0210                     	;# 
  2160  0211                     	;# 
  2161  0211                     	;# 
  2162  0212                     	;# 
  2163  0212                     	;# 
  2164  0213                     	;# 
  2165  0213                     	;# 
  2166  0214                     	;# 
  2167  0214                     	;# 
  2168  0215                     	;# 
  2169  0215                     	;# 
  2170  0215                     	;# 
  2171  0215                     	;# 
  2172  0216                     	;# 
  2173  0216                     	;# 
  2174  0217                     	;# 
  2175  0217                     	;# 
  2176  028C                     	;# 
  2177  028D                     	;# 
  2178  028E                     	;# 
  2179  028F                     	;# 
  2180  0290                     	;# 
  2181  0291                     	;# 
  2182  0291                     	;# 
  2183  0292                     	;# 
  2184  0293                     	;# 
  2185  0293                     	;# 
  2186  0298                     	;# 
  2187  0298                     	;# 
  2188  0299                     	;# 
  2189  029A                     	;# 
  2190  029A                     	;# 
  2191  029E                     	;# 
  2192  030C                     	;# 
  2193  030D                     	;# 
  2194  030E                     	;# 
  2195  030F                     	;# 
  2196  0310                     	;# 
  2197  038C                     	;# 
  2198  038D                     	;# 
  2199  038E                     	;# 
  2200  038F                     	;# 
  2201  0390                     	;# 
  2202  0391                     	;# 
  2203  0392                     	;# 
  2204  0393                     	;# 
  2205  0394                     	;# 
  2206  0395                     	;# 
  2207  0396                     	;# 
  2208  0397                     	;# 
  2209  0398                     	;# 
  2210  0399                     	;# 
  2211  039D                     	;# 
  2212  039E                     	;# 
  2213  039F                     	;# 
  2214  0415                     	;# 
  2215  0416                     	;# 
  2216  0417                     	;# 
  2217  041C                     	;# 
  2218  041D                     	;# 
  2219  041E                     	;# 
  2220  0498                     	;# 
  2221  0498                     	;# 
  2222  0499                     	;# 
  2223  049A                     	;# 
  2224  049B                     	;# 
  2225  049B                     	;# 
  2226  049C                     	;# 
  2227  049D                     	;# 
  2228  049E                     	;# 
  2229  049F                     	;# 
  2230  0511                     	;# 
  2231  0515                     	;# 
  2232  0617                     	;# 
  2233  0618                     	;# 
  2234  0619                     	;# 
  2235  0619                     	;# 
  2236  061A                     	;# 
  2237  061B                     	;# 
  2238  061C                     	;# 
  2239  061C                     	;# 
  2240  0691                     	;# 
  2241  0692                     	;# 
  2242  0693                     	;# 
  2243  0694                     	;# 
  2244  0695                     	;# 
  2245  0696                     	;# 
  2246  0697                     	;# 
  2247  0698                     	;# 
  2248  0699                     	;# 
  2249  069A                     	;# 
  2250  069B                     	;# 
  2251  069C                     	;# 
  2252  069D                     	;# 
  2253  069E                     	;# 
  2254  069F                     	;# 
  2255  0E0F                     	;# 
  2256  0E10                     	;# 
  2257  0E11                     	;# 
  2258  0E12                     	;# 
  2259  0E13                     	;# 
  2260  0E14                     	;# 
  2261  0E15                     	;# 
  2262  0E17                     	;# 
  2263  0E20                     	;# 
  2264  0E21                     	;# 
  2265  0E22                     	;# 
  2266  0E24                     	;# 
  2267  0E25                     	;# 
  2268  0E28                     	;# 
  2269  0E29                     	;# 
  2270  0E2A                     	;# 
  2271  0E2B                     	;# 
  2272  0E90                     	;# 
  2273  0E91                     	;# 
  2274  0E92                     	;# 
  2275  0E93                     	;# 
  2276  0E94                     	;# 
  2277  0E95                     	;# 
  2278  0E96                     	;# 
  2279  0E97                     	;# 
  2280  0E98                     	;# 
  2281  0E99                     	;# 
  2282  0E9A                     	;# 
  2283  0E9B                     	;# 
  2284  0E9C                     	;# 
  2285  0E9D                     	;# 
  2286  0E9E                     	;# 
  2287  0E9F                     	;# 
  2288  0EA0                     	;# 
  2289  0EA1                     	;# 
  2290  0EA2                     	;# 
  2291  0EA3                     	;# 
  2292  0EA4                     	;# 
  2293  0EA5                     	;# 
  2294  0EA6                     	;# 
  2295  0EA7                     	;# 
  2296  0EA8                     	;# 
  2297  0EA9                     	;# 
  2298  0EAA                     	;# 
  2299  0EAB                     	;# 
  2300  0EAC                     	;# 
  2301  0EAD                     	;# 
  2302  0EAE                     	;# 
  2303  0EAF                     	;# 
  2304  0EB0                     	;# 
  2305  0EB1                     	;# 
  2306  0EB2                     	;# 
  2307  0F0F                     	;# 
  2308  0F10                     	;# 
  2309  0F11                     	;# 
  2310  0F12                     	;# 
  2311  0F13                     	;# 
  2312  0F14                     	;# 
  2313  0F15                     	;# 
  2314  0F16                     	;# 
  2315  0F17                     	;# 
  2316  0F18                     	;# 
  2317  0F19                     	;# 
  2318  0F1A                     	;# 
  2319  0F1B                     	;# 
  2320  0F1C                     	;# 
  2321  0F1D                     	;# 
  2322  0F1E                     	;# 
  2323  0F1F                     	;# 
  2324  0F20                     	;# 
  2325  0F21                     	;# 
  2326  0F22                     	;# 
  2327  0F23                     	;# 
  2328  0F24                     	;# 
  2329  0F25                     	;# 
  2330  0F26                     	;# 
  2331  0F27                     	;# 
  2332  0F28                     	;# 
  2333  0F29                     	;# 
  2334  0F2A                     	;# 
  2335  0F2B                     	;# 
  2336  0F2C                     	;# 
  2337  0F2D                     	;# 
  2338  0F2E                     	;# 
  2339  0F2F                     	;# 
  2340  0F30                     	;# 
  2341  0F31                     	;# 
  2342  0F32                     	;# 
  2343  0F33                     	;# 
  2344  0F34                     	;# 
  2345  0F35                     	;# 
  2346  0F36                     	;# 
  2347  0F37                     	;# 
  2348  0FE4                     	;# 
  2349  0FE5                     	;# 
  2350  0FE6                     	;# 
  2351  0FE7                     	;# 
  2352  0FE8                     	;# 
  2353  0FE9                     	;# 
  2354  0FEA                     	;# 
  2355  0FEB                     	;# 
  2356  0FED                     	;# 
  2357  0FEE                     	;# 
  2358  0FEF                     	;_messageBuffer
  2359                           
  2360                           	psect	idataBANK3
  2361  3199                     __pidataBANK3:	
  2362                           
  2363                           ;initializer for stoa@F1152
  2364  3199  3428               	retlw	40
  2365  319A  346E               	retlw	110
  2366  319B  3475               	retlw	117
  2367  319C  346C               	retlw	108
  2368  319D  346C               	retlw	108
  2369  319E  3429               	retlw	41
  2370  319F  3400               	retlw	0
  2371                           
  2372                           ;initializer for _samsung_cell_max_charge
  2373  31A0  34C4               	retlw	196
  2374  31A1  3409               	retlw	9
  2375                           
  2376                           ;initializer for _thermistorBetaValue
  2377  31A2  346B               	retlw	107
  2378  31A3  340D               	retlw	13
  2379                           
  2380                           	psect	stringtext1
  2381  3800                     __pstringtext1:	
  2382  3800                     _lookupTableSamsung_SOC:	
  2383  3800  3464               	retlw	100
  2384  3801  3400               	retlw	0
  2385  3802  3462               	retlw	98
  2386  3803  3400               	retlw	0
  2387  3804  3460               	retlw	96
  2388  3805  3400               	retlw	0
  2389  3806  345D               	retlw	93
  2390  3807  3400               	retlw	0
  2391  3808  345B               	retlw	91
  2392  3809  3400               	retlw	0
  2393  380A  3457               	retlw	87
  2394  380B  3400               	retlw	0
  2395  380C  3454               	retlw	84
  2396  380D  3400               	retlw	0
  2397  380E  3452               	retlw	82
  2398  380F  3400               	retlw	0
  2399  3810  3450               	retlw	80
  2400  3811  3400               	retlw	0
  2401  3812  344E               	retlw	78
  2402  3813  3400               	retlw	0
  2403  3814  344C               	retlw	76
  2404  3815  3400               	retlw	0
  2405  3816  3449               	retlw	73
  2406  3817  3400               	retlw	0
  2407  3818  3447               	retlw	71
  2408  3819  3400               	retlw	0
  2409  381A  3445               	retlw	69
  2410  381B  3400               	retlw	0
  2411  381C  3443               	retlw	67
  2412  381D  3400               	retlw	0
  2413  381E  3440               	retlw	64
  2414  381F  3400               	retlw	0
  2415  3820  343E               	retlw	62
  2416  3821  3400               	retlw	0
  2417  3822  343C               	retlw	60
  2418  3823  3400               	retlw	0
  2419  3824  343A               	retlw	58
  2420  3825  3400               	retlw	0
  2421  3826  3438               	retlw	56
  2422  3827  3400               	retlw	0
  2423  3828  3435               	retlw	53
  2424  3829  3400               	retlw	0
  2425  382A  3433               	retlw	51
  2426  382B  3400               	retlw	0
  2427  382C  3431               	retlw	49
  2428  382D  3400               	retlw	0
  2429  382E  342F               	retlw	47
  2430  382F  3400               	retlw	0
  2431  3830  342C               	retlw	44
  2432  3831  3400               	retlw	0
  2433  3832  342A               	retlw	42
  2434  3833  3400               	retlw	0
  2435  3834  3428               	retlw	40
  2436  3835  3400               	retlw	0
  2437  3836  3426               	retlw	38
  2438  3837  3400               	retlw	0
  2439  3838  3424               	retlw	36
  2440  3839  3400               	retlw	0
  2441  383A  3421               	retlw	33
  2442  383B  3400               	retlw	0
  2443  383C  341F               	retlw	31
  2444  383D  3400               	retlw	0
  2445  383E  341D               	retlw	29
  2446  383F  3400               	retlw	0
  2447  3840  341B               	retlw	27
  2448  3841  3400               	retlw	0
  2449  3842  3418               	retlw	24
  2450  3843  3400               	retlw	0
  2451  3844  3416               	retlw	22
  2452  3845  3400               	retlw	0
  2453  3846  3414               	retlw	20
  2454  3847  3400               	retlw	0
  2455  3848  3412               	retlw	18
  2456  3849  3400               	retlw	0
  2457  384A  3410               	retlw	16
  2458  384B  3400               	retlw	0
  2459  384C  340D               	retlw	13
  2460  384D  3400               	retlw	0
  2461  384E  340B               	retlw	11
  2462  384F  3400               	retlw	0
  2463  3850  3409               	retlw	9
  2464  3851  3400               	retlw	0
  2465  3852  3407               	retlw	7
  2466  3853  3400               	retlw	0
  2467  3854  3404               	retlw	4
  2468  3855  3400               	retlw	0
  2469  3856  3402               	retlw	2
  2470  3857  3400               	retlw	0
  2471  3858  3400               	retlw	0
  2472  3859  3400               	retlw	0
  2473  385A  3400               	retlw	0
  2474  385B  3400               	retlw	0
  2475  385C                     __end_of_lookupTableSamsung_SOC:	
  2476                           
  2477                           	psect	stringtext2
  2478  385C                     __pstringtext2:	
  2479  385C                     _lookupTableSamsung_voltage:	
  2480  385C  3451               	retlw	81
  2481  385D  3410               	retlw	16
  2482  385E  345B               	retlw	91
  2483  385F  340F               	retlw	15
  2484  3860  341F               	retlw	31
  2485  3861  340F               	retlw	15
  2486  3862  340F               	retlw	15
  2487  3863  340F               	retlw	15
  2488  3864  340A               	retlw	10
  2489  3865  340F               	retlw	15
  2490  3866  3406               	retlw	6
  2491  3867  340F               	retlw	15
  2492  3868  3405               	retlw	5
  2493  3869  340F               	retlw	15
  2494  386A  3403               	retlw	3
  2495  386B  340F               	retlw	15
  2496  386C  3401               	retlw	1
  2497  386D  340F               	retlw	15
  2498  386E  3400               	retlw	0
  2499  386F  340F               	retlw	15
  2500  3870  34FE               	retlw	254
  2501  3871  340E               	retlw	14
  2502  3872  34FC               	retlw	252
  2503  3873  340E               	retlw	14
  2504  3874  34FA               	retlw	250
  2505  3875  340E               	retlw	14
  2506  3876  34F8               	retlw	248
  2507  3877  340E               	retlw	14
  2508  3878  34F6               	retlw	246
  2509  3879  340E               	retlw	14
  2510  387A  34F3               	retlw	243
  2511  387B  340E               	retlw	14
  2512  387C  34F1               	retlw	241
  2513  387D  340E               	retlw	14
  2514  387E  34EE               	retlw	238
  2515  387F  340E               	retlw	14
  2516  3880  34EB               	retlw	235
  2517  3881  340E               	retlw	14
  2518  3882  34E8               	retlw	232
  2519  3883  340E               	retlw	14
  2520  3884  34E5               	retlw	229
  2521  3885  340E               	retlw	14
  2522  3886  34E1               	retlw	225
  2523  3887  340E               	retlw	14
  2524  3888  34DD               	retlw	221
  2525  3889  340E               	retlw	14
  2526  388A  34D9               	retlw	217
  2527  388B  340E               	retlw	14
  2528  388C  34D4               	retlw	212
  2529  388D  340E               	retlw	14
  2530  388E  34CF               	retlw	207
  2531  388F  340E               	retlw	14
  2532  3890  34C9               	retlw	201
  2533  3891  340E               	retlw	14
  2534  3892  34C3               	retlw	195
  2535  3893  340E               	retlw	14
  2536  3894  34BB               	retlw	187
  2537  3895  340E               	retlw	14
  2538  3896  34B4               	retlw	180
  2539  3897  340E               	retlw	14
  2540  3898  34AB               	retlw	171
  2541  3899  340E               	retlw	14
  2542  389A  34A0               	retlw	160
  2543  389B  340E               	retlw	14
  2544  389C  3495               	retlw	149
  2545  389D  340E               	retlw	14
  2546  389E  3487               	retlw	135
  2547  389F  340E               	retlw	14
  2548  38A0  3477               	retlw	119
  2549  38A1  340E               	retlw	14
  2550  38A2  3464               	retlw	100
  2551  38A3  340E               	retlw	14
  2552  38A4  344D               	retlw	77
  2553  38A5  340E               	retlw	14
  2554  38A6  3431               	retlw	49
  2555  38A7  340E               	retlw	14
  2556  38A8  340D               	retlw	13
  2557  38A9  340E               	retlw	14
  2558  38AA  34DE               	retlw	222
  2559  38AB  340D               	retlw	13
  2560  38AC  349F               	retlw	159
  2561  38AD  340D               	retlw	13
  2562  38AE  3443               	retlw	67
  2563  38AF  340D               	retlw	13
  2564  38B0  34B3               	retlw	179
  2565  38B1  340C               	retlw	12
  2566  38B2  34B1               	retlw	177
  2567  38B3  340B               	retlw	11
  2568  38B4  345E               	retlw	94
  2569  38B5  3409               	retlw	9
  2570  38B6  3400               	retlw	0
  2571  38B7  3400               	retlw	0
  2572  38B8                     __end_of_lookupTableSamsung_voltage:	
  2573                           
  2574                           	psect	stringtext3
  2575  3908                     __pstringtext3:	
  2576  3908                     _OCD_threshold_setting:	
  2577  3908  3411               	retlw	17
  2578  3909  3400               	retlw	0
  2579  390A  3416               	retlw	22
  2580  390B  3400               	retlw	0
  2581  390C  341C               	retlw	28
  2582  390D  3400               	retlw	0
  2583  390E  3421               	retlw	33
  2584  390F  3400               	retlw	0
  2585  3910  3427               	retlw	39
  2586  3911  3400               	retlw	0
  2587  3912  342C               	retlw	44
  2588  3913  3400               	retlw	0
  2589  3914  3432               	retlw	50
  2590  3915  3400               	retlw	0
  2591  3916  3438               	retlw	56
  2592  3917  3400               	retlw	0
  2593  3918  343D               	retlw	61
  2594  3919  3400               	retlw	0
  2595  391A  3443               	retlw	67
  2596  391B  3400               	retlw	0
  2597  391C  3448               	retlw	72
  2598  391D  3400               	retlw	0
  2599  391E  344E               	retlw	78
  2600  391F  3400               	retlw	0
  2601  3920  3453               	retlw	83
  2602  3921  3400               	retlw	0
  2603  3922  3459               	retlw	89
  2604  3923  3400               	retlw	0
  2605  3924  345E               	retlw	94
  2606  3925  3400               	retlw	0
  2607  3926  3464               	retlw	100
  2608  3927  3400               	retlw	0
  2609  3928                     __end_of_OCD_threshold_setting:	
  2610                           
  2611                           	psect	stringtext4
  2612  3A36                     __pstringtext4:	
  2613  3A36                     _OCD_delay_setting:	
  2614  3A36  3408               	retlw	8
  2615  3A37  3400               	retlw	0
  2616  3A38  3414               	retlw	20
  2617  3A39  3400               	retlw	0
  2618  3A3A  3428               	retlw	40
  2619  3A3B  3400               	retlw	0
  2620  3A3C  3450               	retlw	80
  2621  3A3D  3400               	retlw	0
  2622  3A3E  34A0               	retlw	160
  2623  3A3F  3400               	retlw	0
  2624  3A40  3440               	retlw	64
  2625  3A41  3401               	retlw	1
  2626  3A42  3480               	retlw	128
  2627  3A43  3402               	retlw	2
  2628  3A44  3400               	retlw	0
  2629  3A45  3405               	retlw	5
  2630  3A46                     __end_of_OCD_delay_setting:	
  2631                           
  2632                           	psect	stringtext5
  2633  3A46                     __pstringtext5:	
  2634  3A46                     _SCD_threshold_setting:	
  2635  3A46  342C               	retlw	44
  2636  3A47  3400               	retlw	0
  2637  3A48  3443               	retlw	67
  2638  3A49  3400               	retlw	0
  2639  3A4A  3459               	retlw	89
  2640  3A4B  3400               	retlw	0
  2641  3A4C  346F               	retlw	111
  2642  3A4D  3400               	retlw	0
  2643  3A4E  3485               	retlw	133
  2644  3A4F  3400               	retlw	0
  2645  3A50  349B               	retlw	155
  2646  3A51  3400               	retlw	0
  2647  3A52  34B2               	retlw	178
  2648  3A53  3400               	retlw	0
  2649  3A54  34C8               	retlw	200
  2650  3A55  3400               	retlw	0
  2651  3A56                     __end_of_SCD_threshold_setting:	
  2652                           
  2653                           	psect	stringtext6
  2654  3A66                     __pstringtext6:	
  2655  3A66                     _OV_delay_setting:	
  2656  3A66  3401               	retlw	1
  2657  3A67  3400               	retlw	0
  2658  3A68  3402               	retlw	2
  2659  3A69  3400               	retlw	0
  2660  3A6A  3404               	retlw	4
  2661  3A6B  3400               	retlw	0
  2662  3A6C  3408               	retlw	8
  2663  3A6D  3400               	retlw	0
  2664  3A6E                     __end_of_OV_delay_setting:	
  2665                           
  2666                           	psect	stringtext7
  2667  3A6E                     __pstringtext7:	
  2668  3A6E                     _UV_delay_setting:	
  2669  3A6E  3401               	retlw	1
  2670  3A6F  3400               	retlw	0
  2671  3A70  3404               	retlw	4
  2672  3A71  3400               	retlw	0
  2673  3A72  3408               	retlw	8
  2674  3A73  3400               	retlw	0
  2675  3A74  3410               	retlw	16
  2676  3A75  3400               	retlw	0
  2677  3A76                     __end_of_UV_delay_setting:	
  2678                           
  2679                           	psect	stringtext8
  2680  3A76                     __pstringtext8:	
  2681  3A76                     _SCD_delay_setting:	
  2682  3A76  3446               	retlw	70
  2683  3A77  3400               	retlw	0
  2684  3A78  3464               	retlw	100
  2685  3A79  3400               	retlw	0
  2686  3A7A  34C8               	retlw	200
  2687  3A7B  3400               	retlw	0
  2688  3A7C  3490               	retlw	144
  2689  3A7D  3401               	retlw	1
  2690  3A7E                     __end_of_SCD_delay_setting:	
  2691                           
  2692                           	psect	stringtext9
  2693  3A7E                     __pstringtext9:	
  2694  3A7E                     _Lg4:	
  2695  3A7E  3426               	retlw	38
  2696  3A7F  349E               	retlw	158
  2697  3A80  3478               	retlw	120
  2698  3A81  343E               	retlw	62
  2699  3A82                     __end_of_Lg4:	
  2700                           
  2701                           	psect	stringtext10
  2702  3A82                     __pstringtext10:	
  2703  3A82                     _Lg3:	
  2704  3A82  34EE               	retlw	238
  2705  3A83  34E9               	retlw	233
  2706  3A84  3491               	retlw	145
  2707  3A85  343E               	retlw	62
  2708  3A86                     __end_of_Lg3:	
  2709                           
  2710                           	psect	stringtext11
  2711  3A86                     __pstringtext11:	
  2712  3A86                     _Lg2:	
  2713  3A86  3413               	retlw	19
  2714  3A87  34CE               	retlw	206
  2715  3A88  34CC               	retlw	204
  2716  3A89  343E               	retlw	62
  2717  3A8A                     __end_of_Lg2:	
  2718                           
  2719                           	psect	stringtext12
  2720  3A8A                     __pstringtext12:	
  2721  3A8A                     _Lg1:	
  2722  3A8A  34AA               	retlw	170
  2723  3A8B  34AA               	retlw	170
  2724  3A8C  342A               	retlw	42
  2725  3A8D  343F               	retlw	63
  2726  3A8E                     __end_of_Lg1:	
  2727                           
  2728                           	psect	stringtext13
  2729  3A8E                     __pstringtext13:	
  2730  3A8E                     _ln2_lo:	
  2731  3A8E  34D1               	retlw	209
  2732  3A8F  34F7               	retlw	247
  2733  3A90  3417               	retlw	23
  2734  3A91  3437               	retlw	55
  2735  3A92                     __end_of_ln2_lo:	
  2736                           
  2737                           	psect	stringtext14
  2738  3A92                     __pstringtext14:	
  2739  3A92                     _ln2_hi:	
  2740  3A92  3480               	retlw	128
  2741  3A93  3471               	retlw	113
  2742  3A94  3431               	retlw	49
  2743  3A95  343F               	retlw	63
  2744  3A96                     __end_of_ln2_hi:	
  2745                           
  2746                           	psect	stringtext15
  2747  38B8                     __pstringtext15:	
  2748  38B8                     _ATmega328_address:	
  2749  38B8  3402               	retlw	2
  2750  38B9  3400               	retlw	0
  2751  38BA                     __end_of_ATmega328_address:	
  2752  0016                     _TMR1	set	22
  2753  0003                     _STATUSbits	set	3
  2754  000B                     _INTCONbits	set	11
  2755  0018                     _T1CONbits	set	24
  2756  0011                     _PIR1bits	set	17
  2757  0097                     _WDTCONbits	set	151
  2758  0090                     _TRISEbits	set	144
  2759  008C                     _TRISAbits	set	140
  2760  008E                     _TRISCbits	set	142
  2761  008D                     _TRISBbits	set	141
  2762  0091                     _PIE1bits	set	145
  2763  0476                     _TRISC6	set	1142
  2764  0477                     _TRISC7	set	1143
  2765  04CF                     _SPLLEN	set	1231
  2766  04CE                     _IRCF3	set	1230
  2767  04CD                     _IRCF2	set	1229
  2768  04CC                     _IRCF1	set	1228
  2769  04CB                     _IRCF0	set	1227
  2770  04C9                     _SCS1	set	1225
  2771  04C8                     _SCS0	set	1224
  2772  0110                     _LATEbits	set	272
  2773  010C                     _LATAbits	set	268
  2774  019A                     _TX1REG	set	410
  2775  0199                     _RC1REG	set	409
  2776  019D                     _RC1STAbits	set	413
  2777  019B                     _SPBRG	set	411
  2778  018E                     _ANSELCbits	set	398
  2779  018D                     _ANSELBbits	set	397
  2780  0CF5                     _TXEN	set	3317
  2781  0CEC                     _CREN	set	3308
  2782  0CEF                     _SPEN	set	3311
  2783  0CF4                     _SYNC	set	3316
  2784  0CF2                     _BRGH	set	3314
  2785  0216                     _SSPCON2bits	set	534
  2786  0211                     _SSPBUF	set	529
  2787  0212                     _SSPADD	set	530
  2788  0215                     _SSPCONbits	set	533
  2789  0E24                     _RXPPSbits	set	3620
  2790  0E20                     _SSPCLKPPSbits	set	3616
  2791  0E21                     _SSPDATPPSbits	set	3617
  2792  0E0F                     _PPSLOCKbits	set	3599
  2793  0E0F                     _PPSLOCK	set	3599
  2794  0E9A                     _RB2PPSbits	set	3738
  2795  0EA5                     _RC5PPSbits	set	3749
  2796  0EA4                     _RC4PPSbits	set	3748
  2797  38BA                     STR_1:	
  2798  38BA  3457               	retlw	87	;'W'
  2799  38BB  3441               	retlw	65	;'A'
  2800  38BC  3454               	retlw	84	;'T'
  2801  38BD  3443               	retlw	67	;'C'
  2802  38BE  3448               	retlw	72	;'H'
  2803  38BF  3444               	retlw	68	;'D'
  2804  38C0  344F               	retlw	79	;'O'
  2805  38C1  3447               	retlw	71	;'G'
  2806  38C2  3420               	retlw	32	;' '
  2807  38C3  344E               	retlw	78	;'N'
  2808  38C4  344F               	retlw	79	;'O'
  2809  38C5  3454               	retlw	84	;'T'
  2810  38C6  3420               	retlw	32	;' '
  2811  38C7  344B               	retlw	75	;'K'
  2812  38C8  3449               	retlw	73	;'I'
  2813  38C9  3443               	retlw	67	;'C'
  2814  38CA  344B               	retlw	75	;'K'
  2815  38CB  3445               	retlw	69	;'E'
  2816  38CC  3444               	retlw	68	;'D'
  2817  38CD  343A               	retlw	58	;':'
  2818  38CE  3420               	retlw	32	;' '
  2819  38CF  3441               	retlw	65	;'A'
  2820  38D0  3446               	retlw	70	;'F'
  2821  38D1  3445               	retlw	69	;'E'
  2822  38D2  3420               	retlw	32	;' '
  2823  38D3  3463               	retlw	99	;'c'
  2824  38D4  346F               	retlw	111	;'o'
  2825  38D5  346D               	retlw	109	;'m'
  2826  38D6  346D               	retlw	109	;'m'
  2827  38D7  3473               	retlw	115	;'s'
  2828  38D8  3420               	retlw	32	;' '
  2829  38D9  3465               	retlw	101	;'e'
  2830  38DA  3472               	retlw	114	;'r'
  2831  38DB  3472               	retlw	114	;'r'
  2832  38DC  346F               	retlw	111	;'o'
  2833  38DD  3472               	retlw	114	;'r'
  2834  38DE  3420               	retlw	32	;' '
  2835  38DF  340A               	retlw	10
  2836  38E0  340D               	retlw	13
  2837  38E1  3400               	retlw	0
  2838                           
  2839                           	psect	stringtext16
  2840  38E2                     __pstringtext16:	
  2841  38E2                     STR_9:	
  2842  38E2  3450               	retlw	80	;'P'
  2843  38E3  3472               	retlw	114	;'r'
  2844  38E4  3469               	retlw	105	;'i'
  2845  38E5  346E               	retlw	110	;'n'
  2846  38E6  3474               	retlw	116	;'t'
  2847  38E7  3469               	retlw	105	;'i'
  2848  38E8  346E               	retlw	110	;'n'
  2849  38E9  3467               	retlw	103	;'g'
  2850  38EA  3420               	retlw	32	;' '
  2851  38EB  346F               	retlw	111	;'o'
  2852  38EC  3475               	retlw	117	;'u'
  2853  38ED  3474               	retlw	116	;'t'
  2854  38EE  3420               	retlw	32	;' '
  2855  38EF  3441               	retlw	65	;'A'
  2856  38F0  3446               	retlw	70	;'F'
  2857  38F1  3445               	retlw	69	;'E'
  2858  38F2  3420               	retlw	32	;' '
  2859  38F3  3472               	retlw	114	;'r'
  2860  38F4  3465               	retlw	101	;'e'
  2861  38F5  3467               	retlw	103	;'g'
  2862  38F6  3469               	retlw	105	;'i'
  2863  38F7  3473               	retlw	115	;'s'
  2864  38F8  3474               	retlw	116	;'t'
  2865  38F9  3465               	retlw	101	;'e'
  2866  38FA  3472               	retlw	114	;'r'
  2867  38FB  3420               	retlw	32	;' '
  2868  38FC  3476               	retlw	118	;'v'
  2869  38FD  3461               	retlw	97	;'a'
  2870  38FE  346C               	retlw	108	;'l'
  2871  38FF  3475               	retlw	117	;'u'
  2872  3900  3465               	retlw	101	;'e'
  2873  3901  3473               	retlw	115	;'s'
  2874  3902  342E               	retlw	46	;'.'
  2875  3903  342E               	retlw	46	;'.'
  2876  3904  342E               	retlw	46	;'.'
  2877  3905  340A               	retlw	10
  2878  3906  340D               	retlw	13
  2879  3907  3400               	retlw	0
  2880                           
  2881                           	psect	stringtext17
  2882  3928                     __pstringtext17:	
  2883  3928                     STR_8:	
  2884  3928  3425               	retlw	37	;'%'
  2885  3929  3464               	retlw	100	;'d'
  2886  392A  342C               	retlw	44	;','
  2887  392B  3425               	retlw	37	;'%'
  2888  392C  3464               	retlw	100	;'d'
  2889  392D  342C               	retlw	44	;','
  2890  392E  3425               	retlw	37	;'%'
  2891  392F  3464               	retlw	100	;'d'
  2892  3930  342C               	retlw	44	;','
  2893  3931  3425               	retlw	37	;'%'
  2894  3932  3464               	retlw	100	;'d'
  2895  3933  342C               	retlw	44	;','
  2896  3934  3425               	retlw	37	;'%'
  2897  3935  3464               	retlw	100	;'d'
  2898  3936  342C               	retlw	44	;','
  2899  3937  3425               	retlw	37	;'%'
  2900  3938  3464               	retlw	100	;'d'
  2901  3939  342C               	retlw	44	;','
  2902  393A  3425               	retlw	37	;'%'
  2903  393B  3464               	retlw	100	;'d'
  2904  393C  342C               	retlw	44	;','
  2905  393D  3425               	retlw	37	;'%'
  2906  393E  3464               	retlw	100	;'d'
  2907  393F  340A               	retlw	10
  2908  3940  340D               	retlw	13
  2909  3941  3400               	retlw	0
  2910                           
  2911                           	psect	stringtext18
  2912  3942                     __pstringtext18:	
  2913  3942                     STR_13:	
  2914  3942  3430               	retlw	48	;'0'
  2915  3943  3478               	retlw	120	;'x'
  2916  3944  3430               	retlw	48	;'0'
  2917  3945  3434               	retlw	52	;'4'
  2918  3946  3420               	retlw	32	;' '
  2919  3947  3453               	retlw	83	;'S'
  2920  3948  3459               	retlw	89	;'Y'
  2921  3949  3453               	retlw	83	;'S'
  2922  394A  345F               	retlw	95	;'_'
  2923  394B  3443               	retlw	67	;'C'
  2924  394C  3454               	retlw	84	;'T'
  2925  394D  3452               	retlw	82	;'R'
  2926  394E  344C               	retlw	76	;'L'
  2927  394F  3431               	retlw	49	;'1'
  2928  3950  343A               	retlw	58	;':'
  2929  3951  3420               	retlw	32	;' '
  2930  3952  3425               	retlw	37	;'%'
  2931  3953  3469               	retlw	105	;'i'
  2932  3954  3420               	retlw	32	;' '
  2933  3955  340A               	retlw	10
  2934  3956  340D               	retlw	13
  2935  3957  3400               	retlw	0
  2936                           
  2937                           	psect	stringtext19
  2938  3958                     __pstringtext19:	
  2939  3958                     STR_14:	
  2940  3958  3430               	retlw	48	;'0'
  2941  3959  3478               	retlw	120	;'x'
  2942  395A  3430               	retlw	48	;'0'
  2943  395B  3435               	retlw	53	;'5'
  2944  395C  3420               	retlw	32	;' '
  2945  395D  3453               	retlw	83	;'S'
  2946  395E  3459               	retlw	89	;'Y'
  2947  395F  3453               	retlw	83	;'S'
  2948  3960  345F               	retlw	95	;'_'
  2949  3961  3443               	retlw	67	;'C'
  2950  3962  3454               	retlw	84	;'T'
  2951  3963  3452               	retlw	82	;'R'
  2952  3964  344C               	retlw	76	;'L'
  2953  3965  3432               	retlw	50	;'2'
  2954  3966  343A               	retlw	58	;':'
  2955  3967  3420               	retlw	32	;' '
  2956  3968  3425               	retlw	37	;'%'
  2957  3969  3469               	retlw	105	;'i'
  2958  396A  3420               	retlw	32	;' '
  2959  396B  340A               	retlw	10
  2960  396C  340D               	retlw	13
  2961  396D  3400               	retlw	0
  2962                           
  2963                           	psect	stringtext20
  2964  396E                     __pstringtext20:	
  2965  396E                     STR_12:	
  2966  396E  3430               	retlw	48	;'0'
  2967  396F  3478               	retlw	120	;'x'
  2968  3970  3430               	retlw	48	;'0'
  2969  3971  3431               	retlw	49	;'1'
  2970  3972  3420               	retlw	32	;' '
  2971  3973  3443               	retlw	67	;'C'
  2972  3974  3445               	retlw	69	;'E'
  2973  3975  344C               	retlw	76	;'L'
  2974  3976  344C               	retlw	76	;'L'
  2975  3977  3442               	retlw	66	;'B'
  2976  3978  3441               	retlw	65	;'A'
  2977  3979  344C               	retlw	76	;'L'
  2978  397A  3431               	retlw	49	;'1'
  2979  397B  343A               	retlw	58	;':'
  2980  397C  3420               	retlw	32	;' '
  2981  397D  3425               	retlw	37	;'%'
  2982  397E  3469               	retlw	105	;'i'
  2983  397F  3420               	retlw	32	;' '
  2984  3980  340A               	retlw	10
  2985  3981  340D               	retlw	13
  2986  3982  3400               	retlw	0
  2987                           
  2988                           	psect	stringtext21
  2989  3983                     __pstringtext21:	
  2990  3983                     STR_15:	
  2991  3983  3430               	retlw	48	;'0'
  2992  3984  3478               	retlw	120	;'x'
  2993  3985  3430               	retlw	48	;'0'
  2994  3986  3436               	retlw	54	;'6'
  2995  3987  3420               	retlw	32	;' '
  2996  3988  3450               	retlw	80	;'P'
  2997  3989  3452               	retlw	82	;'R'
  2998  398A  344F               	retlw	79	;'O'
  2999  398B  3454               	retlw	84	;'T'
  3000  398C  3445               	retlw	69	;'E'
  3001  398D  3443               	retlw	67	;'C'
  3002  398E  3454               	retlw	84	;'T'
  3003  398F  3431               	retlw	49	;'1'
  3004  3990  343A               	retlw	58	;':'
  3005  3991  3420               	retlw	32	;' '
  3006  3992  3425               	retlw	37	;'%'
  3007  3993  3469               	retlw	105	;'i'
  3008  3994  3420               	retlw	32	;' '
  3009  3995  340A               	retlw	10
  3010  3996  340D               	retlw	13
  3011  3997  3400               	retlw	0
  3012                           
  3013                           	psect	stringtext22
  3014  3998                     __pstringtext22:	
  3015  3998                     STR_16:	
  3016  3998  3430               	retlw	48	;'0'
  3017  3999  3478               	retlw	120	;'x'
  3018  399A  3430               	retlw	48	;'0'
  3019  399B  3437               	retlw	55	;'7'
  3020  399C  3420               	retlw	32	;' '
  3021  399D  3450               	retlw	80	;'P'
  3022  399E  3452               	retlw	82	;'R'
  3023  399F  344F               	retlw	79	;'O'
  3024  39A0  3454               	retlw	84	;'T'
  3025  39A1  3445               	retlw	69	;'E'
  3026  39A2  3443               	retlw	67	;'C'
  3027  39A3  3454               	retlw	84	;'T'
  3028  39A4  3432               	retlw	50	;'2'
  3029  39A5  343A               	retlw	58	;':'
  3030  39A6  3420               	retlw	32	;' '
  3031  39A7  3425               	retlw	37	;'%'
  3032  39A8  3469               	retlw	105	;'i'
  3033  39A9  3420               	retlw	32	;' '
  3034  39AA  340A               	retlw	10
  3035  39AB  340D               	retlw	13
  3036  39AC  3400               	retlw	0
  3037                           
  3038                           	psect	stringtext23
  3039  39AD                     __pstringtext23:	
  3040  39AD                     STR_17:	
  3041  39AD  3430               	retlw	48	;'0'
  3042  39AE  3478               	retlw	120	;'x'
  3043  39AF  3430               	retlw	48	;'0'
  3044  39B0  3438               	retlw	56	;'8'
  3045  39B1  3420               	retlw	32	;' '
  3046  39B2  3450               	retlw	80	;'P'
  3047  39B3  3452               	retlw	82	;'R'
  3048  39B4  344F               	retlw	79	;'O'
  3049  39B5  3454               	retlw	84	;'T'
  3050  39B6  3445               	retlw	69	;'E'
  3051  39B7  3443               	retlw	67	;'C'
  3052  39B8  3454               	retlw	84	;'T'
  3053  39B9  3433               	retlw	51	;'3'
  3054  39BA  343A               	retlw	58	;':'
  3055  39BB  3420               	retlw	32	;' '
  3056  39BC  3425               	retlw	37	;'%'
  3057  39BD  3469               	retlw	105	;'i'
  3058  39BE  3420               	retlw	32	;' '
  3059  39BF  340A               	retlw	10
  3060  39C0  340D               	retlw	13
  3061  39C1  3400               	retlw	0
  3062                           
  3063                           	psect	stringtext24
  3064  39C2                     __pstringtext24:	
  3065  39C2                     STR_11:	
  3066  39C2  3430               	retlw	48	;'0'
  3067  39C3  3478               	retlw	120	;'x'
  3068  39C4  3430               	retlw	48	;'0'
  3069  39C5  3430               	retlw	48	;'0'
  3070  39C6  3420               	retlw	32	;' '
  3071  39C7  3453               	retlw	83	;'S'
  3072  39C8  3459               	retlw	89	;'Y'
  3073  39C9  3453               	retlw	83	;'S'
  3074  39CA  345F               	retlw	95	;'_'
  3075  39CB  3453               	retlw	83	;'S'
  3076  39CC  3454               	retlw	84	;'T'
  3077  39CD  3441               	retlw	65	;'A'
  3078  39CE  3454               	retlw	84	;'T'
  3079  39CF  343A               	retlw	58	;':'
  3080  39D0  3420               	retlw	32	;' '
  3081  39D1  3425               	retlw	37	;'%'
  3082  39D2  3469               	retlw	105	;'i'
  3083  39D3  3420               	retlw	32	;' '
  3084  39D4  340A               	retlw	10
  3085  39D5  340D               	retlw	13
  3086  39D6  3400               	retlw	0
  3087                           
  3088                           	psect	stringtext25
  3089  39D7                     __pstringtext25:	
  3090  39D7                     STR_18:	
  3091  39D7  3430               	retlw	48	;'0'
  3092  39D8  3478               	retlw	120	;'x'
  3093  39D9  3430               	retlw	48	;'0'
  3094  39DA  3439               	retlw	57	;'9'
  3095  39DB  3420               	retlw	32	;' '
  3096  39DC  344F               	retlw	79	;'O'
  3097  39DD  3456               	retlw	86	;'V'
  3098  39DE  345F               	retlw	95	;'_'
  3099  39DF  3454               	retlw	84	;'T'
  3100  39E0  3452               	retlw	82	;'R'
  3101  39E1  3449               	retlw	73	;'I'
  3102  39E2  3450               	retlw	80	;'P'
  3103  39E3  343A               	retlw	58	;':'
  3104  39E4  3420               	retlw	32	;' '
  3105  39E5  3425               	retlw	37	;'%'
  3106  39E6  3469               	retlw	105	;'i'
  3107  39E7  3420               	retlw	32	;' '
  3108  39E8  340A               	retlw	10
  3109  39E9  340D               	retlw	13
  3110  39EA  3400               	retlw	0
  3111                           
  3112                           	psect	stringtext26
  3113  39EB                     __pstringtext26:	
  3114  39EB                     STR_19:	
  3115  39EB  3430               	retlw	48	;'0'
  3116  39EC  3478               	retlw	120	;'x'
  3117  39ED  3430               	retlw	48	;'0'
  3118  39EE  3441               	retlw	65	;'A'
  3119  39EF  3420               	retlw	32	;' '
  3120  39F0  3455               	retlw	85	;'U'
  3121  39F1  3456               	retlw	86	;'V'
  3122  39F2  345F               	retlw	95	;'_'
  3123  39F3  3454               	retlw	84	;'T'
  3124  39F4  3452               	retlw	82	;'R'
  3125  39F5  3449               	retlw	73	;'I'
  3126  39F6  3450               	retlw	80	;'P'
  3127  39F7  343A               	retlw	58	;':'
  3128  39F8  3420               	retlw	32	;' '
  3129  39F9  3425               	retlw	37	;'%'
  3130  39FA  3469               	retlw	105	;'i'
  3131  39FB  3420               	retlw	32	;' '
  3132  39FC  340A               	retlw	10
  3133  39FD  340D               	retlw	13
  3134  39FE  3400               	retlw	0
  3135                           
  3136                           	psect	stringtext27
  3137  39FF                     __pstringtext27:	
  3138  39FF                     STR_20:	
  3139  39FF  3430               	retlw	48	;'0'
  3140  3A00  3478               	retlw	120	;'x'
  3141  3A01  3430               	retlw	48	;'0'
  3142  3A02  3442               	retlw	66	;'B'
  3143  3A03  3420               	retlw	32	;' '
  3144  3A04  3443               	retlw	67	;'C'
  3145  3A05  3443               	retlw	67	;'C'
  3146  3A06  345F               	retlw	95	;'_'
  3147  3A07  3443               	retlw	67	;'C'
  3148  3A08  3446               	retlw	70	;'F'
  3149  3A09  3447               	retlw	71	;'G'
  3150  3A0A  343A               	retlw	58	;':'
  3151  3A0B  3420               	retlw	32	;' '
  3152  3A0C  3425               	retlw	37	;'%'
  3153  3A0D  3469               	retlw	105	;'i'
  3154  3A0E  3420               	retlw	32	;' '
  3155  3A0F  340A               	retlw	10
  3156  3A10  340D               	retlw	13
  3157  3A11  3400               	retlw	0
  3158                           
  3159                           	psect	stringtext28
  3160  3A12                     __pstringtext28:	
  3161  3A12                     STR_21:	
  3162  3A12  3430               	retlw	48	;'0'
  3163  3A13  3478               	retlw	120	;'x'
  3164  3A14  3433               	retlw	51	;'3'
  3165  3A15  3432               	retlw	50	;'2'
  3166  3A16  3420               	retlw	32	;' '
  3167  3A17  3443               	retlw	67	;'C'
  3168  3A18  3443               	retlw	67	;'C'
  3169  3A19  345F               	retlw	95	;'_'
  3170  3A1A  3448               	retlw	72	;'H'
  3171  3A1B  3449               	retlw	73	;'I'
  3172  3A1C  343A               	retlw	58	;':'
  3173  3A1D  3420               	retlw	32	;' '
  3174  3A1E  3425               	retlw	37	;'%'
  3175  3A1F  3469               	retlw	105	;'i'
  3176  3A20  3420               	retlw	32	;' '
  3177  3A21  340A               	retlw	10
  3178  3A22  340D               	retlw	13
  3179  3A23  3400               	retlw	0
  3180                           
  3181                           	psect	stringtext29
  3182  3A24                     __pstringtext29:	
  3183  3A24                     STR_22:	
  3184  3A24  3430               	retlw	48	;'0'
  3185  3A25  3478               	retlw	120	;'x'
  3186  3A26  3433               	retlw	51	;'3'
  3187  3A27  3433               	retlw	51	;'3'
  3188  3A28  3420               	retlw	32	;' '
  3189  3A29  3443               	retlw	67	;'C'
  3190  3A2A  3443               	retlw	67	;'C'
  3191  3A2B  345F               	retlw	95	;'_'
  3192  3A2C  344C               	retlw	76	;'L'
  3193  3A2D  344F               	retlw	79	;'O'
  3194  3A2E  343A               	retlw	58	;':'
  3195  3A2F  3420               	retlw	32	;' '
  3196  3A30  3425               	retlw	37	;'%'
  3197  3A31  3469               	retlw	105	;'i'
  3198  3A32  3420               	retlw	32	;' '
  3199  3A33  340A               	retlw	10
  3200  3A34  340D               	retlw	13
  3201  3A35  3400               	retlw	0
  3202                           
  3203                           	psect	stringtext30
  3204  3A56                     __pstringtext30:	
  3205  3A56                     STR_6:	
  3206  3A56  3425               	retlw	37	;'%'
  3207  3A57  3464               	retlw	100	;'d'
  3208  3A58  342C               	retlw	44	;','
  3209  3A59  3425               	retlw	37	;'%'
  3210  3A5A  3464               	retlw	100	;'d'
  3211  3A5B  342C               	retlw	44	;','
  3212  3A5C  3425               	retlw	37	;'%'
  3213  3A5D  3464               	retlw	100	;'d'
  3214  3A5E  342C               	retlw	44	;','
  3215  3A5F  3425               	retlw	37	;'%'
  3216  3A60  3464               	retlw	100	;'d'
  3217  3A61  342C               	retlw	44	;','
  3218  3A62  3425               	retlw	37	;'%'
  3219  3A63  3464               	retlw	100	;'d'
  3220  3A64  342C               	retlw	44	;','
  3221  3A65  3400               	retlw	0
  3222                           
  3223                           	psect	stringtext31
  3224  3A96                     __pstringtext31:	
  3225  3A96                     STR_100:	
  3226  3A96  3468               	retlw	104	;'h'
  3227  3A97  3468               	retlw	104	;'h'
  3228  3A98  3458               	retlw	88	;'X'
  3229  3A99  3400               	retlw	0
  3230                           
  3231                           	psect	stringtext32
  3232  3A9A                     __pstringtext32:	
  3233  3A9A                     STR_24:	
  3234  3A9A  3468               	retlw	104	;'h'
  3235  3A9B  3468               	retlw	104	;'h'
  3236  3A9C  3464               	retlw	100	;'d'
  3237  3A9D  3400               	retlw	0
  3238                           
  3239                           	psect	stringtext33
  3240  3A9E                     __pstringtext33:	
  3241  3A9E                     STR_28:	
  3242  3A9E  3468               	retlw	104	;'h'
  3243  3A9F  3468               	retlw	104	;'h'
  3244  3AA0  3469               	retlw	105	;'i'
  3245  3AA1  3400               	retlw	0
  3246                           
  3247                           	psect	stringtext34
  3248  3AA2                     __pstringtext34:	
  3249  3AA2                     STR_66:	
  3250  3AA2  3468               	retlw	104	;'h'
  3251  3AA3  3468               	retlw	104	;'h'
  3252  3AA4  346E               	retlw	110	;'n'
  3253  3AA5  3400               	retlw	0
  3254                           
  3255                           	psect	stringtext35
  3256  3AA6                     __pstringtext35:	
  3257  3AA6                     STR_51:	
  3258  3AA6  3468               	retlw	104	;'h'
  3259  3AA7  3468               	retlw	104	;'h'
  3260  3AA8  346F               	retlw	111	;'o'
  3261  3AA9  3400               	retlw	0
  3262                           
  3263                           	psect	stringtext36
  3264  3AAA                     __pstringtext36:	
  3265  3AAA                     STR_81:	
  3266  3AAA  3468               	retlw	104	;'h'
  3267  3AAB  3468               	retlw	104	;'h'
  3268  3AAC  3475               	retlw	117	;'u'
  3269  3AAD  3400               	retlw	0
  3270                           
  3271                           	psect	stringtext37
  3272  3AAE                     __pstringtext37:	
  3273  3AAE                     STR_96:	
  3274  3AAE  3468               	retlw	104	;'h'
  3275  3AAF  3468               	retlw	104	;'h'
  3276  3AB0  3478               	retlw	120	;'x'
  3277  3AB1  3400               	retlw	0
  3278                           
  3279                           	psect	stringtext38
  3280  3AB2                     __pstringtext38:	
  3281  3AB2                     STR_118:	
  3282  3AB2  347A               	retlw	122	;'z'
  3283  3AB3  3458               	retlw	88	;'X'
  3284  3AB4  3400               	retlw	0
  3285                           
  3286                           	psect	stringtext39
  3287  3AB5                     __pstringtext39:	
  3288  3AB5                     STR_42:	
  3289  3AB5  347A               	retlw	122	;'z'
  3290  3AB6  3464               	retlw	100	;'d'
  3291  3AB7  3400               	retlw	0
  3292                           
  3293                           	psect	stringtext40
  3294  3AB8                     __pstringtext40:	
  3295  3AB8                     STR_46:	
  3296  3AB8  347A               	retlw	122	;'z'
  3297  3AB9  3469               	retlw	105	;'i'
  3298  3ABA  3400               	retlw	0
  3299                           
  3300                           	psect	stringtext41
  3301  3ABB                     __pstringtext41:	
  3302  3ABB                     STR_76:	
  3303  3ABB  347A               	retlw	122	;'z'
  3304  3ABC  346E               	retlw	110	;'n'
  3305  3ABD  3400               	retlw	0
  3306                           
  3307                           	psect	stringtext42
  3308  3ABE                     __pstringtext42:	
  3309  3ABE                     STR_61:	
  3310  3ABE  347A               	retlw	122	;'z'
  3311  3ABF  346F               	retlw	111	;'o'
  3312  3AC0  3400               	retlw	0
  3313                           
  3314                           	psect	stringtext43
  3315  3AC1                     __pstringtext43:	
  3316  3AC1                     STR_91:	
  3317  3AC1  347A               	retlw	122	;'z'
  3318  3AC2  3475               	retlw	117	;'u'
  3319  3AC3  3400               	retlw	0
  3320                           
  3321                           	psect	stringtext44
  3322  3AC4                     __pstringtext44:	
  3323  3AC4                     STR_114:	
  3324  3AC4  347A               	retlw	122	;'z'
  3325  3AC5  3478               	retlw	120	;'x'
  3326  3AC6  3400               	retlw	0
  3327                           
  3328                           	psect	stringtext45
  3329  3AC7                     __pstringtext45:	
  3330  3AC7                     STR_5:	
  3331  3AC7  3430               	retlw	48	;'0'
  3332  3AC8  342C               	retlw	44	;','
  3333  3AC9  3400               	retlw	0
  3334                           
  3335                           	psect	stringtext46
  3336  0000                     __pstringtext46:	
  3337  3980                     
  3338                           ; #config settings
  3339  0000                     
  3340                           	psect	cinit
  3341  0020                     start_initialization:	
  3342  0020                     __initialization:		;BIGRAM
  3343                           
  3344                           ; Initialize objects allocated to BANK3
  3345  0020  3099               	movlw	low __pidataBANK3
  3346  0021  0084               	movwf	4
  3347  0022  30B1               	movlw	(high __pidataBANK3)| (0+128)
  3348  0023  0085               	movwf	5
  3349  0024  30E4               	movlw	low __pdataBANK3
  3350  0025  0086               	movwf	6
  3351  0026  3001               	movlw	high __pdataBANK3
  3352  0027  0087               	movwf	7
  3353  0028  3000               	movlw	0
  3354  0029  00FF               	movwf	btemp+1
  3355  002A  300B               	movlw	11
  3356  002B  31B1  21B0  3180   	fcall	init_ram
  3357                           
  3358                           ; Clear objects allocated to BIGRAM
  3359  002E  3071               	movlw	low (0+10097)
  3360  002F  0084               	movwf	4
  3361  0030  3027               	movlw	high (0+10097)
  3362  0031  0085               	movwf	5
  3363  0032  307F               	movlw	127
  3364  0033  00FE               	movwf	btemp
  3365  0034  3000               	movlw	0
  3366  0035  00FF               	movwf	btemp+1
  3367  0036  31B1  21A4  3180   	fcall	clear_ram0
  3368                           
  3369                           ; Clear objects allocated to COMMON
  3370  0039  01FC               	clrf	__pbssCOMMON& (0+127)
  3371                           
  3372                           ; Clear objects allocated to BANK2
  3373  003A  3066               	movlw	low __pbssBANK2
  3374  003B  0084               	movwf	4
  3375  003C  3001               	movlw	high __pbssBANK2
  3376  003D  0085               	movwf	5
  3377  003E  300A               	movlw	10
  3378  003F  00FE               	movwf	btemp
  3379  0040  3000               	movlw	0
  3380  0041  00FF               	movwf	btemp+1
  3381  0042  31B1  21A4  3180   	fcall	clear_ram0
  3382                           
  3383                           ; Clear objects allocated to BANK3
  3384  0045  30A0               	movlw	low __pbssBANK3
  3385  0046  0084               	movwf	4
  3386  0047  3001               	movlw	high __pbssBANK3
  3387  0048  0085               	movwf	5
  3388  0049  3044               	movlw	68
  3389  004A  00FE               	movwf	btemp
  3390  004B  3000               	movlw	0
  3391  004C  00FF               	movwf	btemp+1
  3392  004D  31B1  21A4  3180   	fcall	clear_ram0
  3393                           
  3394                           ; Clear objects allocated to BANK4
  3395  0050  3020               	movlw	low __pbssBANK4
  3396  0051  0084               	movwf	4
  3397  0052  3002               	movlw	high __pbssBANK4
  3398  0053  0085               	movwf	5
  3399  0054  3034               	movlw	52
  3400  0055  00FE               	movwf	btemp
  3401  0056  3000               	movlw	0
  3402  0057  00FF               	movwf	btemp+1
  3403  0058  31B1  21A4         	fcall	clear_ram0
  3404  005A                     end_of_initialization:	
  3405                           ;End of C runtime variable initialization code
  3406                           
  3407  005A                     __end_of__initialization:	
  3408  005A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3409  005B  0020               	movlb	0
  3410  005C  31B4  2C53         	ljmp	_main	;jump to C main() function
  3411                           
  3412                           	psect	bssCOMMON
  3413  007C                     __pbssCOMMON:	
  3414  007C                     _toggleColor:	
  3415  007C                     	ds	1
  3416                           
  3417                           	psect	bssBANK2
  3418  0166                     __pbssBANK2:	
  3419  0166                     _width:	
  3420  0166                     	ds	2
  3421  0168                     _prec:	
  3422  0168                     	ds	2
  3423  016A                     _flags:	
  3424  016A                     	ds	2
  3425  016C                     _adcOffset:	
  3426  016C                     	ds	2
  3427  016E                     _adcGain:	
  3428  016E                     	ds	2
  3429                           
  3430                           	psect	bssBANK3
  3431  01A0                     __pbssBANK3:	
  3432  01A0                     _cellVoltages:	
  3433  01A0                     	ds	10
  3434  01AA                     logf@F469:	
  3435  01AA                     	ds	4
  3436  01AE                     _shuntResistorValue_mOhm:	
  3437  01AE                     	ds	4
  3438  01B2                     _temperatureThermistor:	
  3439  01B2                     	ds	4
  3440  01B6                     _batCurrent:	
  3441  01B6                     	ds	4
  3442  01BA                     _batVoltage:	
  3443  01BA                     	ds	4
  3444  01BE                     _errno:	
  3445  01BE                     	ds	2
  3446  01C0                     _nout:	
  3447  01C0                     	ds	2
  3448  01C2                     _minCellVoltage:	
  3449  01C2                     	ds	2
  3450  01C4                     _maxCellVoltage:	
  3451  01C4                     	ds	2
  3452  01C6                     _dschg_fet_enable:	
  3453  01C6                     	ds	2
  3454  01C8                     _chg_fet_enable:	
  3455  01C8                     	ds	2
  3456  01CA                     _ocd_error:	
  3457  01CA                     	ds	2
  3458  01CC                     _scd_error:	
  3459  01CC                     	ds	2
  3460  01CE                     _ov_error:	
  3461  01CE                     	ds	2
  3462  01D0                     _uv_error:	
  3463  01D0                     	ds	2
  3464  01D2                     _alert_error:	
  3465  01D2                     	ds	2
  3466  01D4                     _XR_error:	
  3467  01D4                     	ds	2
  3468  01D6                     _maxCellTempDischarge:	
  3469  01D6                     	ds	2
  3470  01D8                     _maxCellTempCharge:	
  3471  01D8                     	ds	2
  3472  01DA                     _minCellTempDischarge:	
  3473  01DA                     	ds	2
  3474  01DC                     _minCellTempCharge:	
  3475  01DC                     	ds	2
  3476  01DE                     myIsr@count:	
  3477  01DE                     	ds	1
  3478  01DF                     _tmr1_flag:	
  3479  01DF                     	ds	1
  3480  01E0                     _protect3:	
  3481  01E0                     	ds	1
  3482  01E1                     _protect2:	
  3483  01E1                     	ds	1
  3484  01E2                     _protect1:	
  3485  01E2                     	ds	1
  3486  01E3                     _currState:	
  3487  01E3                     	ds	1
  3488                           
  3489                           	psect	dataBANK3
  3490  01E4                     __pdataBANK3:	
  3491  01E4                     stoa@F1152:	
  3492  01E4                     	ds	7
  3493  01EB                     _samsung_cell_max_charge:	
  3494  01EB                     	ds	2
  3495  01ED                     _thermistorBetaValue:	
  3496  01ED                     	ds	2
  3497                           
  3498                           	psect	bssBANK4
  3499  0220                     __pbssBANK4:	
  3500  0220                     _cellCharge:	
  3501  0220                     	ds	10
  3502  022A                     _cellSOC:	
  3503  022A                     	ds	10
  3504  0234                     _dbuf:	
  3505  0234                     	ds	32
  3506                           
  3507                           	psect	inittext
  3508  31B0                     init_ram:	
  3509  31B0  00FE               	movwf	126
  3510  31B1                     initloop:	
  3511  31B1  0012               	moviw fsr0++
  3512  31B2  001E               	movwi fsr1++
  3513  31B3  3001               	movlw	1
  3514  31B4  02FE               	subwf	126,f
  3515  31B5  3000               	movlw	0
  3516  31B6  3BFF               	subwfb	127,f
  3517  31B7  087F               	movf	127,w
  3518  31B8  047E               	iorwf	126,w
  3519  31B9  1903               	btfsc	3,2
  3520  31BA  3400               	retlw	0
  3521  31BB  29B1               	goto	initloop
  3522                           
  3523                           	psect	clrtext
  3524  31A4                     clear_ram0:	
  3525                           ;	Called with FSR0 containing the base address, and
  3526                           ;	btemp/btemp+1 has the size to clear
  3527                           
  3528  31A4  0064               	clrwdt	;clear the watchdog before getting into this loop
  3529  31A5                     clrloop0:	
  3530  31A5  0180               	clrf	0	;clear RAM location pointed to by FSR
  3531  31A6  3101               	addfsr 0,1
  3532  31A7  3001               	movlw	1
  3533  31A8  02FE               	subwf	126,f
  3534  31A9  3000               	movlw	0
  3535  31AA  3BFF               	subwfb	127,f
  3536  31AB  087F               	movf	127,w
  3537  31AC  047E               	iorwf	126,w
  3538  31AD  1903               	btfsc	3,2
  3539  31AE  3400               	retlw	0	;all done for this memory range, return
  3540  31AF  29A5               	goto	clrloop0	;have we reached the end yet?
  3541                           
  3542                           	psect	cstackBANK2
  3543  0120                     __pcstackBANK2:	
  3544  0120                     logf@R:	
  3545                           
  3546                           ; 4 bytes @ 0x0
  3547  0120                     	ds	4
  3548  0124                     logf@t1:	
  3549                           
  3550                           ; 4 bytes @ 0x4
  3551  0124                     	ds	4
  3552  0128                     logf@t2:	
  3553                           
  3554                           ; 4 bytes @ 0x8
  3555  0128                     	ds	4
  3556  012C                     _logf$2162:	
  3557                           
  3558                           ; 4 bytes @ 0xC
  3559  012C                     	ds	4
  3560  0130                     _logf$2163:	
  3561                           
  3562                           ; 4 bytes @ 0x10
  3563  0130                     	ds	4
  3564  0134                     _logf$2164:	
  3565                           
  3566                           ; 4 bytes @ 0x14
  3567  0134                     	ds	4
  3568  0138                     _logf$2165:	
  3569                           
  3570                           ; 4 bytes @ 0x18
  3571  0138                     	ds	4
  3572  013C                     logf@k:	
  3573                           
  3574                           ; 2 bytes @ 0x1C
  3575  013C                     	ds	2
  3576  013E                     logf@hfsq:	
  3577                           
  3578                           ; 4 bytes @ 0x1E
  3579  013E                     	ds	4
  3580  0142                     logf@dk:	
  3581                           
  3582                           ; 4 bytes @ 0x22
  3583  0142                     	ds	4
  3584  0146                     logf@s:	
  3585                           
  3586                           ; 4 bytes @ 0x26
  3587  0146                     	ds	4
  3588  014A                     logf@z:	
  3589                           
  3590                           ; 4 bytes @ 0x2A
  3591  014A                     	ds	4
  3592  014E                     logf@w:	
  3593                           
  3594                           ; 4 bytes @ 0x2E
  3595  014E                     	ds	4
  3596  0152                     _logf$2161:	
  3597                           
  3598                           ; 4 bytes @ 0x32
  3599  0152                     	ds	4
  3600  0156                     logf@u:	
  3601                           
  3602                           ; 4 bytes @ 0x36
  3603  0156                     	ds	4
  3604  015A                     logf@f:	
  3605                           
  3606                           ; 4 bytes @ 0x3A
  3607  015A                     	ds	4
  3608  015E                     logf@ix:	
  3609                           
  3610                           ; 4 bytes @ 0x3E
  3611  015E                     	ds	4
  3612  0162                     ??_statemachine:	
  3613                           
  3614                           ; 1 bytes @ 0x42
  3615  0162                     	ds	2
  3616  0164                     ??_main:	
  3617                           
  3618                           ; 1 bytes @ 0x44
  3619  0164                     	ds	2
  3620                           
  3621                           	psect	cstackBANK1
  3622  00A0                     __pcstackBANK1:	
  3623  00A0                     ?___flsub:	
  3624  00A0                     vfpfcnvrt@cp:	
  3625                           ; 4 bytes @ 0x0
  3626                           
  3627  00A0                     setShortCircuitProtection@scaler:	
  3628                           ; 2 bytes @ 0x0
  3629                           
  3630  00A0                     setOverCurrentDischargeProtection@scaler:	
  3631                           ; 4 bytes @ 0x0
  3632                           
  3633  00A0                     ___flsub@a:	
  3634                           ; 4 bytes @ 0x0
  3635                           
  3636                           
  3637                           ; 4 bytes @ 0x0
  3638  00A0                     	ds	2
  3639  00A2                     vfpfcnvrt@done:	
  3640                           
  3641                           ; 2 bytes @ 0x2
  3642  00A2                     	ds	2
  3643  00A4                     _vfpfcnvrt$1371:	
  3644  00A4                     ___flsub@b:	
  3645                           ; 2 bytes @ 0x4
  3646                           
  3647  00A4                     _setShortCircuitProtection$2147:	
  3648                           ; 4 bytes @ 0x4
  3649                           
  3650  00A4                     _setOverCurrentDischargeProtection$2148:	
  3651                           ; 4 bytes @ 0x4
  3652                           
  3653                           
  3654                           ; 4 bytes @ 0x4
  3655  00A4                     	ds	2
  3656  00A6                     _vfpfcnvrt$1372:	
  3657                           
  3658                           ; 2 bytes @ 0x6
  3659  00A6                     	ds	2
  3660  00A8                     ?_logf:	
  3661  00A8                     ?___fltol:	
  3662                           ; 4 bytes @ 0x8
  3663                           
  3664  00A8                     setShortCircuitProtection@i:	
  3665                           ; 4 bytes @ 0x8
  3666                           
  3667  00A8                     setOverCurrentDischargeProtection@i:	
  3668                           ; 2 bytes @ 0x8
  3669                           
  3670  00A8                     ___fltol@f1:	
  3671                           ; 2 bytes @ 0x8
  3672                           
  3673  00A8                     logf@x:	
  3674                           ; 4 bytes @ 0x8
  3675                           
  3676  00A8                     vfpfcnvrt@ll:	
  3677                           ; 4 bytes @ 0x8
  3678                           
  3679                           
  3680                           ; 8 bytes @ 0x8
  3681  00A8                     	ds	2
  3682  00AA                     setShortCircuitProtection@i_998:	
  3683  00AA                     setOverCurrentDischargeProtection@i_1007:	
  3684                           ; 2 bytes @ 0xA
  3685                           
  3686                           
  3687                           ; 2 bytes @ 0xA
  3688  00AA                     	ds	2
  3689  00AC                     ??_logf:	
  3690  00AC                     ??___fltol:	
  3691                           ; 1 bytes @ 0xC
  3692                           
  3693                           
  3694                           ; 1 bytes @ 0xC
  3695  00AC                     	ds	4
  3696  00B0                     vfpfcnvrt@vp:	
  3697                           
  3698                           ; 2 bytes @ 0x10
  3699  00B0                     	ds	1
  3700  00B1                     ??_updateVoltages:	
  3701  00B1                     ??_calibrate_BATTSOC:	
  3702                           ; 1 bytes @ 0x11
  3703                           
  3704  00B1                     ??_updateCurrent:	
  3705                           ; 1 bytes @ 0x11
  3706                           
  3707  00B1                     coulomb_counter@i:	
  3708                           ; 1 bytes @ 0x11
  3709                           
  3710                           
  3711                           ; 2 bytes @ 0x11
  3712  00B1                     	ds	1
  3713  00B2                     vfpfcnvrt@c:	
  3714                           
  3715                           ; 1 bytes @ 0x12
  3716  00B2                     	ds	1
  3717  00B3                     vfpfcnvrt@llu:	
  3718                           
  3719                           ; 8 bytes @ 0x13
  3720  00B3                     	ds	1
  3721  00B4                     ??_updateTemperatures:	
  3722  00B4                     _updateVoltages$2149:	
  3723                           ; 1 bytes @ 0x14
  3724                           
  3725                           
  3726                           ; 4 bytes @ 0x14
  3727  00B4                     	ds	1
  3728  00B5                     updateCurrent@adcVal:	
  3729                           
  3730                           ; 2 bytes @ 0x15
  3731  00B5                     	ds	1
  3732  00B6                     calibrate_BATTSOC@i:	
  3733                           
  3734                           ; 2 bytes @ 0x16
  3735  00B6                     	ds	1
  3736  00B7                     _updateTemperatures$2150:	
  3737                           
  3738                           ; 4 bytes @ 0x17
  3739  00B7                     	ds	1
  3740  00B8                     calibrate_BATTSOC@j:	
  3741  00B8                     updateVoltages@adcVal:	
  3742                           ; 2 bytes @ 0x18
  3743                           
  3744                           
  3745                           ; 4 bytes @ 0x18
  3746  00B8                     	ds	3
  3747  00BB                     ?_vsnprintf:	
  3748  00BB                     vsnprintf@s:	
  3749                           ; 2 bytes @ 0x1B
  3750                           
  3751  00BB                     _updateTemperatures$2151:	
  3752                           ; 2 bytes @ 0x1B
  3753                           
  3754                           
  3755                           ; 4 bytes @ 0x1B
  3756  00BB                     	ds	2
  3757  00BD                     vsnprintf@n:	
  3758                           
  3759                           ; 2 bytes @ 0x1D
  3760  00BD                     	ds	2
  3761  00BF                     vsnprintf@fmt:	
  3762  00BF                     _updateTemperatures$2152:	
  3763                           ; 2 bytes @ 0x1F
  3764                           
  3765                           
  3766                           ; 4 bytes @ 0x1F
  3767  00BF                     	ds	2
  3768  00C1                     vsnprintf@ap:	
  3769                           
  3770                           ; 1 bytes @ 0x21
  3771  00C1                     	ds	1
  3772  00C2                     _vsnprintf$1943:	
  3773                           
  3774                           ; 2 bytes @ 0x22
  3775  00C2                     	ds	1
  3776  00C3                     _updateTemperatures$2153:	
  3777                           
  3778                           ; 4 bytes @ 0x23
  3779  00C3                     	ds	1
  3780  00C4                     vsnprintf@cnt:	
  3781                           
  3782                           ; 2 bytes @ 0x24
  3783  00C4                     	ds	2
  3784  00C6                     vsnprintf@f:	
  3785                           
  3786                           ; 6 bytes @ 0x26
  3787  00C6                     	ds	1
  3788  00C7                     _updateTemperatures$2154:	
  3789                           
  3790                           ; 4 bytes @ 0x27
  3791  00C7                     	ds	4
  3792  00CB                     _updateTemperatures$2155:	
  3793                           
  3794                           ; 4 bytes @ 0x2B
  3795  00CB                     	ds	1
  3796  00CC                     ?_snprintf:	
  3797  00CC                     snprintf@s:	
  3798                           ; 2 bytes @ 0x2C
  3799                           
  3800                           
  3801                           ; 2 bytes @ 0x2C
  3802  00CC                     	ds	2
  3803  00CE                     snprintf@n:	
  3804                           
  3805                           ; 2 bytes @ 0x2E
  3806  00CE                     	ds	1
  3807  00CF                     _updateTemperatures$2156:	
  3808                           
  3809                           ; 4 bytes @ 0x2F
  3810  00CF                     	ds	1
  3811  00D0                     snprintf@fmt:	
  3812                           
  3813                           ; 2 bytes @ 0x30
  3814  00D0                     	ds	3
  3815  00D3                     _updateTemperatures$2157:	
  3816                           
  3817                           ; 4 bytes @ 0x33
  3818  00D3                     	ds	4
  3819  00D7                     _updateTemperatures$2158:	
  3820                           
  3821                           ; 4 bytes @ 0x37
  3822  00D7                     	ds	4
  3823  00DB                     _updateTemperatures$2159:	
  3824                           
  3825                           ; 4 bytes @ 0x3B
  3826  00DB                     	ds	4
  3827  00DF                     _updateTemperatures$2160:	
  3828                           
  3829                           ; 4 bytes @ 0x3F
  3830  00DF                     	ds	4
  3831  00E3                     updateTemperatures@tmp:	
  3832                           
  3833                           ; 4 bytes @ 0x43
  3834  00E3                     	ds	4
  3835  00E7                     updateTemperatures@adcVal:	
  3836                           
  3837                           ; 2 bytes @ 0x47
  3838  00E7                     	ds	2
  3839  00E9                     updateTemperatures@vtsx:	
  3840                           
  3841                           ; 2 bytes @ 0x49
  3842  00E9                     	ds	2
  3843  00EB                     updateTemperatures@rts:	
  3844                           
  3845                           ; 4 bytes @ 0x4B
  3846  00EB                     	ds	4
  3847  00EF                     statemachine@success:	
  3848                           
  3849                           ; 1 bytes @ 0x4F
  3850  00EF                     	ds	1
  3851                           
  3852                           	psect	cstackCOMMON
  3853  0070                     __pcstackCOMMON:	
  3854  0070                     ?_initClock:	
  3855  0070                     ?_init_GPIO:	
  3856                           ; 1 bytes @ 0x0
  3857                           
  3858  0070                     ?_initWDT:	
  3859                           ; 1 bytes @ 0x0
  3860                           
  3861  0070                     ?_init_I2C:	
  3862                           ; 1 bytes @ 0x0
  3863                           
  3864  0070                     ?_init_TMR1:	
  3865                           ; 1 bytes @ 0x0
  3866                           
  3867  0070                     ?_init_RGB:	
  3868                           ; 1 bytes @ 0x0
  3869                           
  3870  0070                     ?_watchdog_timeout_shutdown:	
  3871                           ; 1 bytes @ 0x0
  3872                           
  3873  0070                     ?_statemachine:	
  3874                           ; 1 bytes @ 0x0
  3875                           
  3876  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3877                           ; 1 bytes @ 0x0
  3878                           
  3879  0070                     ?_init_AFE:	
  3880                           ; 1 bytes @ 0x0
  3881                           
  3882  0070                     ?_AFE_UPDATE:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885  0070                     ?_printcellParameters:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888  0070                     ?_internal_16:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891  0070                     ?_updateVoltages:	
  3892                           ; 1 bytes @ 0x0
  3893                           
  3894  0070                     ?_calibrate_BATTSOC:	
  3895                           ; 1 bytes @ 0x0
  3896                           
  3897  0070                     ?_coulomb_counter:	
  3898                           ; 1 bytes @ 0x0
  3899                           
  3900  0070                     ?_updateCurrent:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903  0070                     ?_updateTemperatures:	
  3904                           ; 1 bytes @ 0x0
  3905                           
  3906  0070                     ?_AFE_FET_Status:	
  3907                           ; 1 bytes @ 0x0
  3908                           
  3909  0070                     ?_putch:	
  3910                           ; 1 bytes @ 0x0
  3911                           
  3912  0070                     ?_myIsr:	
  3913                           ; 1 bytes @ 0x0
  3914                           
  3915  0070                     ??_myIsr:	
  3916                           ; 1 bytes @ 0x0
  3917                           
  3918  0070                     ?_main:	
  3919                           ; 1 bytes @ 0x0
  3920                           
  3921  0070                     ?_EUSART_Write:	
  3922                           ; 1 bytes @ 0x0
  3923                           
  3924  0070                     ?_send_I2C_startBit:	
  3925                           ; 1 bytes @ 0x0
  3926                           
  3927  0070                     ?_send_I2C_stopBit:	
  3928                           ; 1 bytes @ 0x0
  3929                           
  3930  0070                     ?_send_I2C_NACK:	
  3931                           ; 1 bytes @ 0x0
  3932                           
  3933  0070                     putch@c:	
  3934                           ; 1 bytes @ 0x0
  3935                           
  3936                           
  3937                           ; 1 bytes @ 0x0
  3938  0070                     	ds	1
  3939  0071                     ??_initClock:	
  3940  0071                     ??_init_GPIO:	
  3941                           ; 1 bytes @ 0x1
  3942                           
  3943  0071                     ??_initWDT:	
  3944                           ; 1 bytes @ 0x1
  3945                           
  3946  0071                     ??_init_I2C:	
  3947                           ; 1 bytes @ 0x1
  3948                           
  3949  0071                     ??_init_TMR1:	
  3950                           ; 1 bytes @ 0x1
  3951                           
  3952  0071                     ??_init_RGB:	
  3953                           ; 1 bytes @ 0x1
  3954                           
  3955  0071                     ?_RGB_color:	
  3956                           ; 1 bytes @ 0x1
  3957                           
  3958  0071                     ??_internal_16:	
  3959                           ; 1 bytes @ 0x1
  3960                           
  3961  0071                     ?_setShuntResistorValue:	
  3962                           ; 1 bytes @ 0x1
  3963                           
  3964  0071                     ??_putch:	
  3965                           ; 1 bytes @ 0x1
  3966                           
  3967  0071                     ??_EUSART_Write:	
  3968                           ; 1 bytes @ 0x1
  3969                           
  3970  0071                     ?_send_I2C_data:	
  3971                           ; 1 bytes @ 0x1
  3972                           
  3973  0071                     ?_send_I2C_controlByte:	
  3974                           ; 1 bytes @ 0x1
  3975                           
  3976  0071                     ??_send_I2C_startBit:	
  3977                           ; 1 bytes @ 0x1
  3978                           
  3979  0071                     ??_send_I2C_stopBit:	
  3980                           ; 1 bytes @ 0x1
  3981                           
  3982  0071                     ??_send_I2C_NACK:	
  3983                           ; 1 bytes @ 0x1
  3984                           
  3985  0071                     ??___aodiv:	
  3986                           ; 1 bytes @ 0x1
  3987                           
  3988  0071                     ??___aomod:	
  3989                           ; 1 bytes @ 0x1
  3990                           
  3991  0071                     ??___lodiv:	
  3992                           ; 1 bytes @ 0x1
  3993                           
  3994  0071                     ??___lomod:	
  3995                           ; 1 bytes @ 0x1
  3996                           
  3997  0071                     ?_fputc:	
  3998                           ; 1 bytes @ 0x1
  3999                           
  4000  0071                     ?_strlen:	
  4001                           ; 2 bytes @ 0x1
  4002                           
  4003  0071                     ?_isupper:	
  4004                           ; 2 bytes @ 0x1
  4005                           
  4006  0071                     ?_isalpha:	
  4007                           ; 2 bytes @ 0x1
  4008                           
  4009  0071                     ?_isdigit:	
  4010                           ; 2 bytes @ 0x1
  4011                           
  4012  0071                     ?_strncmp:	
  4013                           ; 2 bytes @ 0x1
  4014                           
  4015  0071                     ?__Umul8_16:	
  4016                           ; 2 bytes @ 0x1
  4017                           
  4018  0071                     ?_isspace:	
  4019                           ; 2 bytes @ 0x1
  4020                           
  4021  0071                     ?_islower:	
  4022                           ; 2 bytes @ 0x1
  4023                           
  4024  0071                     ?_read_I2C_data:	
  4025                           ; 2 bytes @ 0x1
  4026                           
  4027  0071                     ?___wmul:	
  4028                           ; 2 bytes @ 0x1
  4029                           
  4030  0071                     ?___lmul:	
  4031                           ; 2 bytes @ 0x1
  4032                           
  4033  0071                     ?___xxtofl:	
  4034                           ; 4 bytes @ 0x1
  4035                           
  4036  0071                     EUSART_Write@txData:	
  4037                           ; 4 bytes @ 0x1
  4038                           
  4039  0071                     __Umul8_16@multiplicand:	
  4040                           ; 1 bytes @ 0x1
  4041                           
  4042  0071                     send_I2C_data@databyte:	
  4043                           ; 1 bytes @ 0x1
  4044                           
  4045  0071                     send_I2C_controlByte@BlockAddress:	
  4046                           ; 2 bytes @ 0x1
  4047                           
  4048  0071                     RGB_color@color:	
  4049                           ; 2 bytes @ 0x1
  4050                           
  4051  0071                     ___wmul@multiplier:	
  4052                           ; 2 bytes @ 0x1
  4053                           
  4054  0071                     isalpha@c:	
  4055                           ; 2 bytes @ 0x1
  4056                           
  4057  0071                     isdigit@c:	
  4058                           ; 2 bytes @ 0x1
  4059                           
  4060  0071                     isspace@c:	
  4061                           ; 2 bytes @ 0x1
  4062                           
  4063  0071                     isupper@c:	
  4064                           ; 2 bytes @ 0x1
  4065                           
  4066  0071                     fputc@c:	
  4067                           ; 2 bytes @ 0x1
  4068                           
  4069  0071                     strlen@s:	
  4070                           ; 2 bytes @ 0x1
  4071                           
  4072  0071                     strncmp@_l:	
  4073                           ; 2 bytes @ 0x1
  4074                           
  4075  0071                     islower@c:	
  4076                           ; 2 bytes @ 0x1
  4077                           
  4078  0071                     setShuntResistorValue@res_mOhm:	
  4079                           ; 2 bytes @ 0x1
  4080                           
  4081  0071                     ___lmul@multiplier:	
  4082                           ; 4 bytes @ 0x1
  4083                           
  4084  0071                     ___xxtofl@val:	
  4085                           ; 4 bytes @ 0x1
  4086                           
  4087                           
  4088                           ; 4 bytes @ 0x1
  4089  0071                     	ds	1
  4090  0072                     ?_EUSART_Write_Text:	
  4091  0072                     ___aodiv@counter:	
  4092                           ; 1 bytes @ 0x2
  4093                           
  4094  0072                     ___aomod@counter:	
  4095                           ; 1 bytes @ 0x2
  4096                           
  4097  0072                     ___lomod@counter:	
  4098                           ; 1 bytes @ 0x2
  4099                           
  4100  0072                     EUSART_Write_Text@text:	
  4101                           ; 1 bytes @ 0x2
  4102                           
  4103  0072                     ___lodiv@quotient:	
  4104                           ; 2 bytes @ 0x2
  4105                           
  4106                           
  4107                           ; 8 bytes @ 0x2
  4108  0072                     	ds	1
  4109  0073                     ??_watchdog_timeout_shutdown:	
  4110  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4111                           ; 1 bytes @ 0x3
  4112                           
  4113  0073                     ??_RGB_color:	
  4114                           ; 1 bytes @ 0x3
  4115                           
  4116  0073                     ??_strlen:	
  4117                           ; 1 bytes @ 0x3
  4118                           
  4119  0073                     ??_isupper:	
  4120                           ; 1 bytes @ 0x3
  4121                           
  4122  0073                     ??_isalpha:	
  4123                           ; 1 bytes @ 0x3
  4124                           
  4125  0073                     ??_isdigit:	
  4126                           ; 1 bytes @ 0x3
  4127                           
  4128  0073                     ??__Umul8_16:	
  4129                           ; 1 bytes @ 0x3
  4130                           
  4131  0073                     ??_isspace:	
  4132                           ; 1 bytes @ 0x3
  4133                           
  4134  0073                     ??_islower:	
  4135                           ; 1 bytes @ 0x3
  4136                           
  4137  0073                     ??_send_I2C_data:	
  4138                           ; 1 bytes @ 0x3
  4139                           
  4140  0073                     ??_read_I2C_data:	
  4141                           ; 1 bytes @ 0x3
  4142                           
  4143  0073                     ___aodiv@sign:	
  4144                           ; 1 bytes @ 0x3
  4145                           
  4146  0073                     ___aomod@sign:	
  4147                           ; 1 bytes @ 0x3
  4148                           
  4149  0073                     send_I2C_controlByte@RW_bit:	
  4150                           ; 1 bytes @ 0x3
  4151                           
  4152  0073                     ___wmul@multiplicand:	
  4153                           ; 2 bytes @ 0x3
  4154                           
  4155  0073                     fputc@fp:	
  4156                           ; 2 bytes @ 0x3
  4157                           
  4158  0073                     strlen@a:	
  4159                           ; 2 bytes @ 0x3
  4160                           
  4161  0073                     strncmp@_r:	
  4162                           ; 2 bytes @ 0x3
  4163                           
  4164                           
  4165                           ; 2 bytes @ 0x3
  4166  0073                     	ds	1
  4167  0074                     ??_EUSART_Write_Text:	
  4168  0074                     ?_abs:	
  4169                           ; 1 bytes @ 0x4
  4170                           
  4171  0074                     abs@a:	
  4172                           ; 2 bytes @ 0x4
  4173                           
  4174  0074                     ___aodiv@quotient:	
  4175                           ; 2 bytes @ 0x4
  4176                           
  4177                           
  4178                           ; 8 bytes @ 0x4
  4179  0074                     	ds	1
  4180  0075                     ??_setShuntResistorValue:	
  4181  0075                     ??_fputc:	
  4182                           ; 1 bytes @ 0x5
  4183                           
  4184  0075                     ??_send_I2C_controlByte:	
  4185                           ; 1 bytes @ 0x5
  4186                           
  4187  0075                     ?_I2C_writeRegister:	
  4188                           ; 1 bytes @ 0x5
  4189                           
  4190  0075                     ??___wmul:	
  4191                           ; 1 bytes @ 0x5
  4192                           
  4193  0075                     ??___xxtofl:	
  4194                           ; 1 bytes @ 0x5
  4195                           
  4196  0075                     ?_readRegister:	
  4197                           ; 1 bytes @ 0x5
  4198                           
  4199  0075                     _isspace$1798:	
  4200                           ; 2 bytes @ 0x5
  4201                           
  4202  0075                     EUSART_Write_Text@i:	
  4203                           ; 1 bytes @ 0x5
  4204                           
  4205  0075                     I2C_writeRegister@slaveAddress:	
  4206                           ; 2 bytes @ 0x5
  4207                           
  4208  0075                     readRegister@slaveAddress:	
  4209                           ; 2 bytes @ 0x5
  4210                           
  4211  0075                     ___wmul@product:	
  4212                           ; 2 bytes @ 0x5
  4213                           
  4214  0075                     strncmp@n:	
  4215                           ; 2 bytes @ 0x5
  4216                           
  4217  0075                     __Umul8_16@product:	
  4218                           ; 2 bytes @ 0x5
  4219                           
  4220  0075                     ___lmul@multiplicand:	
  4221                           ; 2 bytes @ 0x5
  4222                           
  4223                           
  4224                           ; 4 bytes @ 0x5
  4225  0075                     	ds	1
  4226  0076                     ??_abs:	
  4227                           
  4228                           ; 1 bytes @ 0x6
  4229  0076                     	ds	1
  4230  0077                     ??_setTemperatureLimitsint:	
  4231  0077                     ??_strncmp:	
  4232                           ; 1 bytes @ 0x7
  4233                           
  4234  0077                     ?_toupper:	
  4235                           ; 1 bytes @ 0x7
  4236                           
  4237  0077                     ?_atoi:	
  4238                           ; 2 bytes @ 0x7
  4239                           
  4240  0077                     I2C_writeRegister@regAddress:	
  4241                           ; 2 bytes @ 0x7
  4242                           
  4243  0077                     readRegister@regAddress:	
  4244                           ; 2 bytes @ 0x7
  4245                           
  4246  0077                     atoi@s:	
  4247                           ; 2 bytes @ 0x7
  4248                           
  4249  0077                     toupper@c:	
  4250                           ; 2 bytes @ 0x7
  4251                           
  4252  0077                     __Umul8_16@word_mpld:	
  4253                           ; 2 bytes @ 0x7
  4254                           
  4255                           
  4256                           ; 2 bytes @ 0x7
  4257  0077                     	ds	1
  4258  0078                     strncmp@l:	
  4259                           
  4260                           ; 2 bytes @ 0x8
  4261  0078                     	ds	1
  4262  0079                     ??_readRegister:	
  4263  0079                     ??___lmul:	
  4264                           ; 1 bytes @ 0x9
  4265                           
  4266  0079                     ??___aldiv:	
  4267                           ; 1 bytes @ 0x9
  4268                           
  4269  0079                     __Umul8_16@multiplier:	
  4270                           ; 1 bytes @ 0x9
  4271                           
  4272  0079                     I2C_writeRegister@data:	
  4273                           ; 1 bytes @ 0x9
  4274                           
  4275  0079                     readRegister@recievedData:	
  4276                           ; 2 bytes @ 0x9
  4277                           
  4278  0079                     _toupper$1906:	
  4279                           ; 2 bytes @ 0x9
  4280                           
  4281                           
  4282                           ; 2 bytes @ 0x9
  4283  0079                     	ds	1
  4284  007A                     ??_stoa:	
  4285  007A                     ??___flneg:	
  4286                           ; 1 bytes @ 0xA
  4287                           
  4288  007A                     ??___flsub:	
  4289                           ; 1 bytes @ 0xA
  4290                           
  4291  007A                     ?_fputs:	
  4292                           ; 1 bytes @ 0xA
  4293                           
  4294  007A                     ___fltol@sign1:	
  4295                           ; 2 bytes @ 0xA
  4296                           
  4297  007A                     ___lodiv@counter:	
  4298                           ; 1 bytes @ 0xA
  4299                           
  4300  007A                     EUSART_Initialize@x:	
  4301                           ; 1 bytes @ 0xA
  4302                           
  4303  007A                     fputs@fp:	
  4304                           ; 2 bytes @ 0xA
  4305                           
  4306  007A                     strncmp@r:	
  4307                           ; 2 bytes @ 0xA
  4308                           
  4309                           
  4310                           ; 2 bytes @ 0xA
  4311  007A                     	ds	1
  4312  007B                     ??_init_AFE:	
  4313  007B                     ??_AFE_FET_Status:	
  4314                           ; 1 bytes @ 0xB
  4315                           
  4316  007B                     ??_AFE_Status:	
  4317                           ; 1 bytes @ 0xB
  4318                           
  4319  007B                     ??_I2C_writeRegister:	
  4320                           ; 1 bytes @ 0xB
  4321                           
  4322  007B                     enableDischarging@sys_ctrl2:	
  4323                           ; 1 bytes @ 0xB
  4324                           
  4325  007B                     enableCharging@sys_ctrl2:	
  4326                           ; 1 bytes @ 0xB
  4327                           
  4328  007B                     ___fltol@exp1:	
  4329                           ; 1 bytes @ 0xB
  4330                           
  4331                           
  4332                           ; 1 bytes @ 0xB
  4333  007B                     	ds	1
  4334  007C                     ??_AFE_UPDATE:	
  4335  007C                     ??_printcellParameters:	
  4336                           ; 1 bytes @ 0xC
  4337                           
  4338                           
  4339                           	psect	cstackBANK0
  4340  0020                     __pcstackBANK0:	
  4341                           ; 1 bytes @ 0xC
  4342                           
  4343  0020                     ?_setTemperatureLimitsint:	
  4344  0020                     ?_enableDischarging:	
  4345                           ; 1 bytes @ 0x0
  4346                           
  4347  0020                     ?_enableCharging:	
  4348                           ; 1 bytes @ 0x0
  4349                           
  4350  0020                     ??_fputs:	
  4351                           ; 1 bytes @ 0x0
  4352                           
  4353  0020                     ??_toupper:	
  4354                           ; 1 bytes @ 0x0
  4355                           
  4356  0020                     ??_atoi:	
  4357                           ; 1 bytes @ 0x0
  4358                           
  4359  0020                     ?_beginAFEcommunication:	
  4360                           ; 1 bytes @ 0x0
  4361                           
  4362  0020                     ?_AFE_Status:	
  4363                           ; 2 bytes @ 0x0
  4364                           
  4365  0020                     ?_stoa:	
  4366                           ; 2 bytes @ 0x0
  4367                           
  4368  0020                     ?___aodiv:	
  4369                           ; 2 bytes @ 0x0
  4370                           
  4371  0020                     ?___aomod:	
  4372                           ; 8 bytes @ 0x0
  4373                           
  4374  0020                     ?___lodiv:	
  4375                           ; 8 bytes @ 0x0
  4376                           
  4377  0020                     ?___lomod:	
  4378                           ; 8 bytes @ 0x0
  4379                           
  4380  0020                     AFE_FET_Status@sys_ctrl2:	
  4381                           ; 8 bytes @ 0x0
  4382                           
  4383  0020                     ___xxtofl@sign:	
  4384                           ; 1 bytes @ 0x0
  4385                           
  4386  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4387                           ; 1 bytes @ 0x0
  4388                           
  4389  0020                     enableDischarging@enable:	
  4390                           ; 2 bytes @ 0x0
  4391                           
  4392  0020                     enableCharging@enable:	
  4393                           ; 2 bytes @ 0x0
  4394                           
  4395  0020                     stoa@fp:	
  4396                           ; 2 bytes @ 0x0
  4397                           
  4398  0020                     ___lmul@product:	
  4399                           ; 2 bytes @ 0x0
  4400                           
  4401  0020                     ___aodiv@divisor:	
  4402                           ; 4 bytes @ 0x0
  4403                           
  4404  0020                     ___aomod@divisor:	
  4405                           ; 8 bytes @ 0x0
  4406                           
  4407  0020                     ___lodiv@divisor:	
  4408                           ; 8 bytes @ 0x0
  4409                           
  4410  0020                     ___lomod@divisor:	
  4411                           ; 8 bytes @ 0x0
  4412                           
  4413                           
  4414                           ; 8 bytes @ 0x0
  4415  0020                     	ds	1
  4416  0021                     ___xxtofl@exp:	
  4417                           
  4418                           ; 1 bytes @ 0x1
  4419  0021                     	ds	1
  4420  0022                     ??_beginAFEcommunication:	
  4421  0022                     ??_enableDischarging:	
  4422                           ; 1 bytes @ 0x2
  4423                           
  4424  0022                     ??_enableCharging:	
  4425                           ; 1 bytes @ 0x2
  4426                           
  4427  0022                     fputs@c:	
  4428                           ; 1 bytes @ 0x2
  4429                           
  4430  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4431                           ; 1 bytes @ 0x2
  4432                           
  4433  0022                     AFE_Status@error_flag:	
  4434                           ; 2 bytes @ 0x2
  4435                           
  4436  0022                     stoa@s:	
  4437                           ; 2 bytes @ 0x2
  4438                           
  4439  0022                     ___xxtofl@arg:	
  4440                           ; 2 bytes @ 0x2
  4441                           
  4442                           
  4443                           ; 4 bytes @ 0x2
  4444  0022                     	ds	1
  4445  0023                     fputs@i:	
  4446                           
  4447                           ; 2 bytes @ 0x3
  4448  0023                     	ds	1
  4449  0024                     ?___aldiv:	
  4450  0024                     AFE_Status@sys_stat:	
  4451                           ; 4 bytes @ 0x4
  4452                           
  4453  0024                     setTemperatureLimitsint@minCharge_degC:	
  4454                           ; 1 bytes @ 0x4
  4455                           
  4456  0024                     atoi@neg:	
  4457                           ; 2 bytes @ 0x4
  4458                           
  4459  0024                     ___aldiv@divisor:	
  4460                           ; 2 bytes @ 0x4
  4461                           
  4462  0024                     stoa@nuls:	
  4463                           ; 4 bytes @ 0x4
  4464                           
  4465                           
  4466                           ; 7 bytes @ 0x4
  4467  0024                     	ds	1
  4468  0025                     fputs@s:	
  4469                           
  4470                           ; 1 bytes @ 0x5
  4471  0025                     	ds	1
  4472  0026                     ?_pad:	
  4473  0026                     ?___flmul:	
  4474                           ; 2 bytes @ 0x6
  4475                           
  4476  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4477                           ; 4 bytes @ 0x6
  4478                           
  4479  0026                     pad@fp:	
  4480                           ; 2 bytes @ 0x6
  4481                           
  4482  0026                     _atoi$1771:	
  4483                           ; 2 bytes @ 0x6
  4484                           
  4485  0026                     ___flmul@b:	
  4486                           ; 2 bytes @ 0x6
  4487                           
  4488                           
  4489                           ; 4 bytes @ 0x6
  4490  0026                     	ds	2
  4491  0028                     pad@buf:	
  4492  0028                     _atoi$1773:	
  4493                           ; 1 bytes @ 0x8
  4494                           
  4495  0028                     ___aldiv@dividend:	
  4496                           ; 2 bytes @ 0x8
  4497                           
  4498  0028                     ___aodiv@dividend:	
  4499                           ; 4 bytes @ 0x8
  4500                           
  4501  0028                     ___aomod@dividend:	
  4502                           ; 8 bytes @ 0x8
  4503                           
  4504  0028                     ___lodiv@dividend:	
  4505                           ; 8 bytes @ 0x8
  4506                           
  4507  0028                     ___lomod@dividend:	
  4508                           ; 8 bytes @ 0x8
  4509                           
  4510                           
  4511                           ; 8 bytes @ 0x8
  4512  0028                     	ds	1
  4513  0029                     pad@p:	
  4514                           
  4515                           ; 2 bytes @ 0x9
  4516  0029                     	ds	1
  4517  002A                     _atoi$1772:	
  4518  002A                     ___flmul@a:	
  4519                           ; 1 bytes @ 0xA
  4520                           
  4521                           
  4522                           ; 4 bytes @ 0xA
  4523  002A                     	ds	1
  4524  002B                     ??_pad:	
  4525  002B                     beginAFEcommunication@commSuccess:	
  4526                           ; 1 bytes @ 0xB
  4527                           
  4528  002B                     stoa@i:	
  4529                           ; 2 bytes @ 0xB
  4530                           
  4531  002B                     atoi@n:	
  4532                           ; 2 bytes @ 0xB
  4533                           
  4534                           
  4535                           ; 2 bytes @ 0xB
  4536  002B                     	ds	1
  4537  002C                     ___aldiv@counter:	
  4538  002C                     pad@i:	
  4539                           ; 1 bytes @ 0xC
  4540                           
  4541                           
  4542                           ; 2 bytes @ 0xC
  4543  002C                     	ds	1
  4544  002D                     ___aldiv@sign:	
  4545  002D                     beginAFEcommunication@i:	
  4546                           ; 1 bytes @ 0xD
  4547                           
  4548  002D                     stoa@w:	
  4549                           ; 2 bytes @ 0xD
  4550                           
  4551                           
  4552                           ; 2 bytes @ 0xD
  4553  002D                     	ds	1
  4554  002E                     ??___flmul:	
  4555  002E                     pad@w:	
  4556                           ; 1 bytes @ 0xE
  4557                           
  4558  002E                     ___aldiv@quotient:	
  4559                           ; 2 bytes @ 0xE
  4560                           
  4561                           
  4562                           ; 4 bytes @ 0xE
  4563  002E                     	ds	1
  4564  002F                     stoa@cp:	
  4565                           
  4566                           ; 2 bytes @ 0xF
  4567  002F                     	ds	1
  4568  0030                     ?_ctoa:	
  4569  0030                     ?_dtoa:	
  4570                           ; 2 bytes @ 0x10
  4571                           
  4572  0030                     ?_otoa:	
  4573                           ; 2 bytes @ 0x10
  4574                           
  4575  0030                     ?_utoa:	
  4576                           ; 2 bytes @ 0x10
  4577                           
  4578  0030                     ?_xtoa:	
  4579                           ; 2 bytes @ 0x10
  4580                           
  4581  0030                     ctoa@fp:	
  4582                           ; 2 bytes @ 0x10
  4583                           
  4584  0030                     dtoa@fp:	
  4585                           ; 2 bytes @ 0x10
  4586                           
  4587  0030                     otoa@fp:	
  4588                           ; 2 bytes @ 0x10
  4589                           
  4590  0030                     utoa@fp:	
  4591                           ; 2 bytes @ 0x10
  4592                           
  4593  0030                     xtoa@fp:	
  4594                           ; 2 bytes @ 0x10
  4595                           
  4596                           
  4597                           ; 2 bytes @ 0x10
  4598  0030                     	ds	1
  4599  0031                     stoa@p:	
  4600                           
  4601                           ; 2 bytes @ 0x11
  4602  0031                     	ds	1
  4603  0032                     ?_EUSART_Initialize:	
  4604  0032                     ?_setCellUndervoltageProtection:	
  4605                           ; 1 bytes @ 0x12
  4606                           
  4607  0032                     ?_setCellOvervoltageProtection:	
  4608                           ; 1 bytes @ 0x12
  4609                           
  4610  0032                     ctoa@c:	
  4611                           ; 1 bytes @ 0x12
  4612                           
  4613  0032                     setCellUndervoltageProtection@voltage_mV:	
  4614                           ; 1 bytes @ 0x12
  4615                           
  4616  0032                     setCellOvervoltageProtection@voltage_mV:	
  4617                           ; 2 bytes @ 0x12
  4618                           
  4619  0032                     EUSART_Initialize@baudrate:	
  4620                           ; 2 bytes @ 0x12
  4621                           
  4622  0032                     dtoa@d:	
  4623                           ; 4 bytes @ 0x12
  4624                           
  4625  0032                     otoa@d:	
  4626                           ; 8 bytes @ 0x12
  4627                           
  4628  0032                     utoa@d:	
  4629                           ; 8 bytes @ 0x12
  4630                           
  4631  0032                     xtoa@d:	
  4632                           ; 8 bytes @ 0x12
  4633                           
  4634                           
  4635                           ; 8 bytes @ 0x12
  4636  0032                     	ds	1
  4637  0033                     ??_ctoa:	
  4638  0033                     ___flmul@sign:	
  4639                           ; 1 bytes @ 0x13
  4640                           
  4641  0033                     stoa@l:	
  4642                           ; 1 bytes @ 0x13
  4643                           
  4644                           
  4645                           ; 2 bytes @ 0x13
  4646  0033                     	ds	1
  4647  0034                     setCellUndervoltageProtection@delay_s:	
  4648  0034                     setCellOvervoltageProtection@delay_s:	
  4649                           ; 2 bytes @ 0x14
  4650                           
  4651  0034                     ctoa@w:	
  4652                           ; 2 bytes @ 0x14
  4653                           
  4654  0034                     ___flmul@grs:	
  4655                           ; 2 bytes @ 0x14
  4656                           
  4657                           
  4658                           ; 4 bytes @ 0x14
  4659  0034                     	ds	2
  4660  0036                     ??_EUSART_Initialize:	
  4661  0036                     ??_setCellUndervoltageProtection:	
  4662                           ; 1 bytes @ 0x16
  4663                           
  4664  0036                     ??_setCellOvervoltageProtection:	
  4665                           ; 1 bytes @ 0x16
  4666                           
  4667                           
  4668                           ; 1 bytes @ 0x16
  4669  0036                     	ds	2
  4670  0038                     ___flmul@aexp:	
  4671                           
  4672                           ; 1 bytes @ 0x18
  4673  0038                     	ds	1
  4674  0039                     ___flmul@bexp:	
  4675                           
  4676                           ; 1 bytes @ 0x19
  4677  0039                     	ds	1
  4678  003A                     ??_dtoa:	
  4679  003A                     ??_otoa:	
  4680                           ; 1 bytes @ 0x1A
  4681                           
  4682  003A                     ??_utoa:	
  4683                           ; 1 bytes @ 0x1A
  4684                           
  4685  003A                     xtoa@x:	
  4686                           ; 1 bytes @ 0x1A
  4687                           
  4688  003A                     ___flmul@prod:	
  4689                           ; 1 bytes @ 0x1A
  4690                           
  4691                           
  4692                           ; 4 bytes @ 0x1A
  4693  003A                     	ds	1
  4694  003B                     ??_xtoa:	
  4695  003B                     utoa@p:	
  4696                           ; 1 bytes @ 0x1B
  4697                           
  4698                           
  4699                           ; 2 bytes @ 0x1B
  4700  003B                     	ds	2
  4701  003D                     _dtoa$1320:	
  4702  003D                     utoa@w:	
  4703                           ; 2 bytes @ 0x1D
  4704                           
  4705                           
  4706                           ; 2 bytes @ 0x1D
  4707  003D                     	ds	1
  4708  003E                     ___flmul@temp:	
  4709                           
  4710                           ; 2 bytes @ 0x1E
  4711  003E                     	ds	1
  4712  003F                     dtoa@p:	
  4713  003F                     utoa@n:	
  4714                           ; 2 bytes @ 0x1F
  4715                           
  4716                           
  4717                           ; 8 bytes @ 0x1F
  4718  003F                     	ds	1
  4719  0040                     ?___fldiv:	
  4720  0040                     ___fldiv@a:	
  4721                           ; 4 bytes @ 0x20
  4722                           
  4723                           
  4724                           ; 4 bytes @ 0x20
  4725  0040                     	ds	1
  4726  0041                     dtoa@w:	
  4727                           
  4728                           ; 2 bytes @ 0x21
  4729  0041                     	ds	1
  4730  0042                     otoa@p:	
  4731                           
  4732                           ; 2 bytes @ 0x22
  4733  0042                     	ds	1
  4734  0043                     dtoa@s:	
  4735  0043                     _xtoa$1356:	
  4736                           ; 2 bytes @ 0x23
  4737                           
  4738                           
  4739                           ; 2 bytes @ 0x23
  4740  0043                     	ds	1
  4741  0044                     setCellUndervoltageProtection@uv_trip:	
  4742  0044                     setCellOvervoltageProtection@ov_trip:	
  4743                           ; 1 bytes @ 0x24
  4744                           
  4745  0044                     otoa@t:	
  4746                           ; 1 bytes @ 0x24
  4747                           
  4748  0044                     ___fldiv@b:	
  4749                           ; 2 bytes @ 0x24
  4750                           
  4751                           
  4752                           ; 4 bytes @ 0x24
  4753  0044                     	ds	1
  4754  0045                     setCellUndervoltageProtection@i:	
  4755  0045                     setCellOvervoltageProtection@i:	
  4756                           ; 2 bytes @ 0x25
  4757                           
  4758  0045                     _xtoa$1357:	
  4759                           ; 2 bytes @ 0x25
  4760                           
  4761  0045                     dtoa@n:	
  4762                           ; 2 bytes @ 0x25
  4763                           
  4764                           
  4765                           ; 8 bytes @ 0x25
  4766  0045                     	ds	1
  4767  0046                     otoa@w:	
  4768                           
  4769                           ; 2 bytes @ 0x26
  4770  0046                     	ds	1
  4771  0047                     utoa@i:	
  4772  0047                     xtoa@p:	
  4773                           ; 2 bytes @ 0x27
  4774                           
  4775                           
  4776                           ; 2 bytes @ 0x27
  4777  0047                     	ds	1
  4778  0048                     ??___fldiv:	
  4779  0048                     otoa@n:	
  4780                           ; 1 bytes @ 0x28
  4781                           
  4782                           
  4783                           ; 8 bytes @ 0x28
  4784  0048                     	ds	1
  4785  0049                     xtoa@w:	
  4786                           
  4787                           ; 2 bytes @ 0x29
  4788  0049                     	ds	2
  4789  004B                     xtoa@n:	
  4790                           
  4791                           ; 8 bytes @ 0x2B
  4792  004B                     	ds	2
  4793  004D                     dtoa@i:	
  4794  004D                     ___fldiv@rem:	
  4795                           ; 2 bytes @ 0x2D
  4796                           
  4797                           
  4798                           ; 4 bytes @ 0x2D
  4799  004D                     	ds	3
  4800  0050                     otoa@i:	
  4801                           
  4802                           ; 2 bytes @ 0x30
  4803  0050                     	ds	1
  4804  0051                     ___fldiv@sign:	
  4805                           
  4806                           ; 1 bytes @ 0x31
  4807  0051                     	ds	1
  4808  0052                     ___fldiv@new_exp:	
  4809                           
  4810                           ; 2 bytes @ 0x32
  4811  0052                     	ds	1
  4812  0053                     xtoa@i:	
  4813                           
  4814                           ; 2 bytes @ 0x33
  4815  0053                     	ds	1
  4816  0054                     ___fldiv@grs:	
  4817                           
  4818                           ; 4 bytes @ 0x34
  4819  0054                     	ds	1
  4820  0055                     xtoa@c:	
  4821                           
  4822                           ; 2 bytes @ 0x35
  4823  0055                     	ds	2
  4824  0057                     ?_vfpfcnvrt:	
  4825  0057                     vfpfcnvrt@fp:	
  4826                           ; 2 bytes @ 0x37
  4827                           
  4828                           
  4829                           ; 2 bytes @ 0x37
  4830  0057                     	ds	1
  4831  0058                     ___fldiv@bexp:	
  4832                           
  4833                           ; 1 bytes @ 0x38
  4834  0058                     	ds	1
  4835  0059                     vfpfcnvrt@fmt:	
  4836  0059                     ___fldiv@aexp:	
  4837                           ; 1 bytes @ 0x39
  4838                           
  4839                           
  4840                           ; 1 bytes @ 0x39
  4841  0059                     	ds	1
  4842  005A                     ?___flge:	
  4843  005A                     ?___flneg:	
  4844                           ; 1 bit 
  4845                           
  4846  005A                     ?___fladd:	
  4847                           ; 4 bytes @ 0x3A
  4848                           
  4849  005A                     vfpfcnvrt@ap:	
  4850                           ; 4 bytes @ 0x3A
  4851                           
  4852  005A                     ___flge@ff1:	
  4853                           ; 1 bytes @ 0x3A
  4854                           
  4855  005A                     ___flneg@f1:	
  4856                           ; 4 bytes @ 0x3A
  4857                           
  4858  005A                     ___fladd@b:	
  4859                           ; 4 bytes @ 0x3A
  4860                           
  4861                           
  4862                           ; 4 bytes @ 0x3A
  4863  005A                     	ds	1
  4864  005B                     ??_vfpfcnvrt:	
  4865                           
  4866                           ; 1 bytes @ 0x3B
  4867  005B                     	ds	3
  4868  005E                     ___flge@ff2:	
  4869  005E                     ___fladd@a:	
  4870                           ; 4 bytes @ 0x3E
  4871                           
  4872                           
  4873                           ; 4 bytes @ 0x3E
  4874  005E                     	ds	3
  4875  0061                     ?_vfprintf:	
  4876  0061                     vfprintf@fp:	
  4877                           ; 2 bytes @ 0x41
  4878                           
  4879                           
  4880                           ; 2 bytes @ 0x41
  4881  0061                     	ds	1
  4882  0062                     ??___flge:	
  4883  0062                     ??___fladd:	
  4884                           ; 1 bytes @ 0x42
  4885                           
  4886                           
  4887                           ; 1 bytes @ 0x42
  4888  0062                     	ds	1
  4889  0063                     vfprintf@fmt:	
  4890                           
  4891                           ; 2 bytes @ 0x43
  4892  0063                     	ds	2
  4893  0065                     vfprintf@ap:	
  4894                           
  4895                           ; 1 bytes @ 0x45
  4896  0065                     	ds	1
  4897  0066                     ?_setShortCircuitProtection:	
  4898  0066                     ?_setOverCurrentDischargeProtection:	
  4899                           ; 1 bytes @ 0x46
  4900                           
  4901  0066                     ??_vfprintf:	
  4902                           ; 1 bytes @ 0x46
  4903                           
  4904  0066                     setShortCircuitProtection@current_mA:	
  4905                           ; 1 bytes @ 0x46
  4906                           
  4907  0066                     setOverCurrentDischargeProtection@current_mA:	
  4908                           ; 4 bytes @ 0x46
  4909                           
  4910                           
  4911                           ; 4 bytes @ 0x46
  4912  0066                     	ds	2
  4913  0068                     vfprintf@cfmt:	
  4914                           
  4915                           ; 2 bytes @ 0x48
  4916  0068                     	ds	2
  4917  006A                     ??_vsnprintf:	
  4918  006A                     ___fladd@signs:	
  4919                           ; 1 bytes @ 0x4A
  4920                           
  4921  006A                     setShortCircuitProtection@delay_us:	
  4922                           ; 1 bytes @ 0x4A
  4923                           
  4924  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4925                           ; 2 bytes @ 0x4A
  4926                           
  4927                           
  4928                           ; 2 bytes @ 0x4A
  4929  006A                     	ds	1
  4930  006B                     ___fladd@aexp:	
  4931                           
  4932                           ; 1 bytes @ 0x4B
  4933  006B                     	ds	1
  4934  006C                     ??_snprintf:	
  4935  006C                     ??_setShortCircuitProtection:	
  4936                           ; 1 bytes @ 0x4C
  4937                           
  4938  006C                     ??_setOverCurrentDischargeProtection:	
  4939                           ; 1 bytes @ 0x4C
  4940                           
  4941  006C                     ___fladd@bexp:	
  4942                           ; 1 bytes @ 0x4C
  4943                           
  4944                           
  4945                           ; 1 bytes @ 0x4C
  4946  006C                     	ds	1
  4947  006D                     ___fladd@grs:	
  4948                           
  4949                           ; 1 bytes @ 0x4D
  4950  006D                     	ds	1
  4951  006E                     ??_coulomb_counter:	
  4952                           
  4953                           ; 1 bytes @ 0x4E
  4954  006E                     	ds	1
  4955  006F                     snprintf@ap:	
  4956                           
  4957                           ; 1 bytes @ 0x4F
  4958  006F                     	ds	1
  4959                           
  4960                           	psect	maintext
  4961  3453                     __pmaintext:	
  4962 ;;
  4963 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4964 ;;
  4965 ;; *************** function _main *****************
  4966 ;; Defined at:
  4967 ;;		line 72 in file "main.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  1    wreg      void 
  4974 ;; Registers used:
  4975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : B1F/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4983 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4984 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4985 ;;Total ram usage:        2 bytes
  4986 ;; Hardware stack levels required when called:   12
  4987 ;; This function calls:
  4988 ;;		_EUSART_Initialize
  4989 ;;		_initClock
  4990 ;;		_initWDT
  4991 ;;		_init_GPIO
  4992 ;;		_init_I2C
  4993 ;;		_init_RGB
  4994 ;;		_init_TMR1
  4995 ;;		_statemachine
  4996 ;;		_watchdog_timeout_shutdown
  4997 ;; This function is called by:
  4998 ;;		Startup code after reset
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002                           
  5003                           ;psect for function _main
  5004  3453                     _main:	
  5005                           
  5006                           ;main.c: 75:     initClock();
  5007                           
  5008                           ;incstack = 0
  5009                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5010  3453  31B1  2142  31B4   	fcall	_initClock
  5011                           
  5012                           ;main.c: 76:     init_GPIO();
  5013  3456  3188  2008  31B4   	fcall	_init_GPIO
  5014                           
  5015                           ;main.c: 77:     initWDT();
  5016  3459  31A0  2000  31B4   	fcall	_initWDT
  5017                           
  5018                           ;main.c: 78:     init_I2C();
  5019  345C  31B1  21BC  31B4   	fcall	_init_I2C
  5020                           
  5021                           ;main.c: 79:     EUSART_Initialize(9600);
  5022  345F  3000               	movlw	0
  5023  3460  0020               	movlb	0	; select bank0
  5024  3461  00B5               	movwf	EUSART_Initialize@baudrate+3
  5025  3462  3000               	movlw	0
  5026  3463  00B4               	movwf	EUSART_Initialize@baudrate+2
  5027  3464  3025               	movlw	37
  5028  3465  00B3               	movwf	EUSART_Initialize@baudrate+1
  5029  3466  3080               	movlw	128
  5030  3467  00B2               	movwf	EUSART_Initialize@baudrate
  5031  3468  31AB  2378  31B4   	fcall	_EUSART_Initialize
  5032                           
  5033                           ;main.c: 80:     init_TMR1();
  5034  346B  31B1  218E  31B4   	fcall	_init_TMR1
  5035                           
  5036                           ;main.c: 81:     init_RGB();
  5037  346E  31A8  2001  31B4   	fcall	_init_RGB
  5038                           
  5039                           ;main.c: 84:     watchdog_timeout_shutdown();
  5040  3471  31B2  229F  31B4   	fcall	_watchdog_timeout_shutdown
  5041  3474                     l7860:	
  5042                           
  5043                           ;main.c: 88:         statemachine();
  5044  3474  31B7  2787  31B4   	fcall	_statemachine
  5045                           
  5046                           ;main.c: 90:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5047  3477  3015               	movlw	21
  5048  3478  0022               	movlb	2	; select bank2
  5049  3479  00E5               	movwf	(??_main^(0+256)+1)
  5050  347A  304B               	movlw	75
  5051  347B  00E4               	movwf	??_main^(0+256)
  5052  347C  30BE               	movlw	190
  5053  347D                     u9757:	
  5054  347D  0B89               	decfsz	9,f
  5055  347E  2C7D               	goto	u9757
  5056  347F  0BE4               	decfsz	??_main^(0+256),f
  5057  3480  2C7D               	goto	u9757
  5058  3481  0BE5               	decfsz	(??_main^(0+256)+1),f
  5059  3482  2C7D               	goto	u9757
  5060  3483  0000               	nop
  5061  3484  2C74               	goto	l7860
  5062  3485                     __end_of_main:	
  5063                           
  5064                           	psect	text1
  5065  329F                     __ptext1:	
  5066 ;; *************** function _watchdog_timeout_shutdown *****************
  5067 ;; Defined at:
  5068 ;;		line 3 in file "algorithms.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;		None
  5071 ;; Auto vars:     Size  Location     Type
  5072 ;;		None
  5073 ;; Return value:  Size  Location     Type
  5074 ;;                  1    wreg      void 
  5075 ;; Registers used:
  5076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5077 ;; Tracked objects:
  5078 ;;		On entry : 0/0
  5079 ;;		On exit  : 0/0
  5080 ;;		Unchanged: 0/0
  5081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5085 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5086 ;;Total ram usage:        2 bytes
  5087 ;; Hardware stack levels used:    1
  5088 ;; Hardware stack levels required when called:    2
  5089 ;; This function calls:
  5090 ;;		_RGB_color
  5091 ;; This function is called by:
  5092 ;;		_main
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           
  5097                           ;psect for function _watchdog_timeout_shutdown
  5098  329F                     _watchdog_timeout_shutdown:	
  5099                           
  5100                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5101                           
  5102                           ;incstack = 0
  5103                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5104  329F  0020               	movlb	0	; select bank0
  5105  32A0  1A03               	btfsc	3,4	;volatile
  5106  32A1  0008               	return
  5107                           
  5108                           ;algorithms.c: 6:         RGB_color(0);
  5109  32A2  3000               	movlw	0
  5110  32A3  00F1               	movwf	RGB_color@color
  5111  32A4  00F2               	movwf	RGB_color@color+1
  5112  32A5  31B3  2330  31B2   	fcall	_RGB_color
  5113                           
  5114                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5115  32A8  3029               	movlw	41
  5116  32A9  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5117  32AA  3096               	movlw	150
  5118  32AB  00F3               	movwf	??_watchdog_timeout_shutdown
  5119  32AC  307F               	movlw	127
  5120  32AD                     u9767:	
  5121  32AD  0B89               	decfsz	9,f
  5122  32AE  2AAD               	goto	u9767
  5123  32AF  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5124  32B0  2AAD               	goto	u9767
  5125  32B1  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5126  32B2  2AAD               	goto	u9767
  5127  32B3  0000               	nop
  5128                           
  5129                           ;algorithms.c: 8:          currState = 3;
  5130  32B4  3003               	movlw	3
  5131  32B5  00F3               	movwf	??_watchdog_timeout_shutdown
  5132  32B6  0873               	movf	??_watchdog_timeout_shutdown,w
  5133  32B7  0023               	movlb	3	; select bank3
  5134  32B8  00E3               	movwf	_currState^(0+384)
  5135  32B9  0008               	return
  5136  32BA                     __end_of_watchdog_timeout_shutdown:	
  5137                           
  5138                           	psect	text2
  5139  3787                     __ptext2:	
  5140 ;; *************** function _statemachine *****************
  5141 ;; Defined at:
  5142 ;;		line 96 in file "main.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;		None
  5145 ;; Auto vars:     Size  Location     Type
  5146 ;;  success         1   79[BANK1 ] unsigned char 
  5147 ;; Return value:  Size  Location     Type
  5148 ;;                  1    wreg      void 
  5149 ;; Registers used:
  5150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5151 ;; Tracked objects:
  5152 ;;		On entry : 0/0
  5153 ;;		On exit  : 0/0
  5154 ;;		Unchanged: 0/0
  5155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5157 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5158 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5159 ;;      Totals:         0       0       1       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5160 ;;Total ram usage:        3 bytes
  5161 ;; Hardware stack levels used:    1
  5162 ;; Hardware stack levels required when called:   11
  5163 ;; This function calls:
  5164 ;;		_AFE_UPDATE
  5165 ;;		_EUSART_Write_Text
  5166 ;;		_RGB_AWAIT_AFE_CONN
  5167 ;;		_RGB_color
  5168 ;;		_beginAFEcommunication
  5169 ;;		_init_AFE
  5170 ;;		_printcellParameters
  5171 ;;		_snprintf
  5172 ;; This function is called by:
  5173 ;;		_main
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           
  5178                           ;psect for function _statemachine
  5179  3787                     _statemachine:	
  5180                           
  5181                           ;main.c: 98:     switch (currState) {
  5182                           
  5183                           ;incstack = 0
  5184                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5185  3787  2FE7               	goto	l7836
  5186  3788                     l7804:	
  5187                           
  5188                           ;main.c: 101:             if (tmr1_flag) {
  5189  3788  0023               	movlb	3	; select bank3
  5190  3789  085F               	movf	_tmr1_flag^(0+384),w	;volatile
  5191  378A  1903               	btfsc	3,2
  5192  378B  0008               	return
  5193                           
  5194                           ;main.c: 102:                 tmr1_flag = 0;
  5195  378C  01DF               	clrf	_tmr1_flag^(0+384)	;volatile
  5196                           
  5197                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  5198  378D  31B3  2351  31B7   	fcall	_RGB_AWAIT_AFE_CONN
  5199                           
  5200                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  5201  3790  31AC  2421  31B7   	fcall	_beginAFEcommunication
  5202  3793  0020               	movlb	0	; select bank0
  5203  3794  0820               	movf	?_beginAFEcommunication,w
  5204  3795  0022               	movlb	2	; select bank2
  5205  3796  00E2               	movwf	??_statemachine^(0+256)
  5206  3797  0862               	movf	??_statemachine^(0+256),w
  5207  3798  0021               	movlb	1	; select bank1
  5208  3799  00EF               	movwf	statemachine@success^(0+128)
  5209                           
  5210                           ;main.c: 109:                 if (success) {
  5211  379A  086F               	movf	statemachine@success^(0+128),w
  5212  379B  1903               	btfsc	3,2
  5213  379C  0008               	return
  5214                           
  5215                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  5216  379D  0020               	movlb	0	; select bank0
  5217  379E  1018               	bcf	24,0	;volatile
  5218                           
  5219                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  5220  379F  0021               	movlb	1	; select bank1
  5221  37A0  1011               	bcf	17,0	;volatile
  5222                           
  5223                           ;main.c: 112:                     RGB_color(0);
  5224  37A1  3000               	movlw	0
  5225  37A2  00F1               	movwf	RGB_color@color
  5226  37A3  00F2               	movwf	RGB_color@color+1
  5227  37A4  31B3  2330         	fcall	_RGB_color
  5228                           
  5229                           ;main.c: 113:                     tmr1_flag = 0;
  5230  37A6  0023               	movlb	3	; select bank3
  5231  37A7  01DF               	clrf	_tmr1_flag^(0+384)	;volatile
  5232                           
  5233                           ;main.c: 126:                     currState = 1;
  5234  37A8  01E3               	clrf	_currState^(0+384)
  5235  37A9  0AE3               	incf	_currState^(0+384),f
  5236  37AA  0008               	return
  5237  37AB                     l7822:	
  5238                           
  5239                           ;main.c: 135:             init_AFE();
  5240  37AB  31A0  2006  31B7   	fcall	_init_AFE
  5241                           
  5242                           ;main.c: 154:             RGB_color(1);
  5243  37AE  3001               	movlw	1
  5244  37AF  00F1               	movwf	RGB_color@color
  5245  37B0  3000               	movlw	0
  5246  37B1  00F2               	movwf	RGB_color@color+1
  5247  37B2  31B3  2330         	fcall	_RGB_color
  5248                           
  5249                           ;main.c: 155:             currState = 2;
  5250  37B4  3002               	movlw	2
  5251  37B5  0022               	movlb	2	; select bank2
  5252  37B6  00E2               	movwf	??_statemachine^(0+256)
  5253  37B7  0862               	movf	??_statemachine^(0+256),w
  5254  37B8  0023               	movlb	3	; select bank3
  5255  37B9  00E3               	movwf	_currState^(0+384)
  5256                           
  5257                           ;main.c: 156:             break;
  5258  37BA  0008               	return
  5259  37BB                     l7826:	
  5260                           
  5261                           ;main.c: 160:             AFE_UPDATE();
  5262  37BB  31B5  2528  31B7   	fcall	_AFE_UPDATE
  5263  37BE  0064               	clrwdt	;# 
  5264                           
  5265                           ;main.c: 164:             printcellParameters();
  5266  37BF  319B  2381  31B7   	fcall	_printcellParameters
  5267                           
  5268                           ;main.c: 166:             _delay((unsigned long)((500)*(16000000/4000.0)));
  5269  37C2  300B               	movlw	11
  5270  37C3  0022               	movlb	2	; select bank2
  5271  37C4  00E3               	movwf	(??_statemachine^(0+256)+1)
  5272  37C5  3026               	movlw	38
  5273  37C6  00E2               	movwf	??_statemachine^(0+256)
  5274  37C7  305D               	movlw	93
  5275  37C8                     u9777:	
  5276  37C8  0B89               	decfsz	9,f
  5277  37C9  2FC8               	goto	u9777
  5278  37CA  0BE2               	decfsz	??_statemachine^(0+256),f
  5279  37CB  2FC8               	goto	u9777
  5280  37CC  0BE3               	decfsz	(??_statemachine^(0+256)+1),f
  5281  37CD  2FC8               	goto	u9777
  5282  37CE  3200               	nop2
  5283                           
  5284                           ;main.c: 168:             break;
  5285  37CF  0008               	return
  5286  37D0                     l7830:	
  5287                           
  5288                           ;main.c: 172:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5289  37D0  3071               	movlw	113
  5290  37D1  0021               	movlb	1	; select bank1
  5291  37D2  00CC               	movwf	snprintf@s^(0+128)
  5292  37D3  3027               	movlw	39
  5293  37D4  00CD               	movwf	(snprintf@s^(0+128)+1)
  5294  37D5  307F               	movlw	127
  5295  37D6  00CE               	movwf	snprintf@n^(0+128)
  5296  37D7  3000               	movlw	0
  5297  37D8  00CF               	movwf	(snprintf@n^(0+128)+1)
  5298  37D9  30BA               	movlw	low (STR_1| (0+32768))
  5299  37DA  00D0               	movwf	snprintf@fmt^(0+128)
  5300  37DB  30B8               	movlw	high (STR_1| (0+32768))
  5301  37DC  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5302  37DD  31B2  2284  31B7   	fcall	_snprintf
  5303                           
  5304                           ;main.c: 173:              EUSART_Write_Text(messageBuffer);
  5305  37E0  3071               	movlw	113
  5306  37E1  00F2               	movwf	EUSART_Write_Text@text
  5307  37E2  3027               	movlw	39
  5308  37E3  00F3               	movwf	EUSART_Write_Text@text+1
  5309  37E4  31B2  224F         	fcall	_EUSART_Write_Text
  5310                           
  5311                           ;main.c: 174:             break;
  5312  37E6  0008               	return
  5313  37E7                     l7836:	
  5314  37E7  0023               	movlb	3	; select bank3
  5315  37E8  0863               	movf	_currState^(0+384),w
  5316  37E9  0022               	movlb	2	; select bank2
  5317  37EA  00E2               	movwf	??_statemachine^(0+256)
  5318  37EB  01E3               	clrf	(??_statemachine^(0+256)+1)
  5319                           
  5320                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5321                           ; Switch size 1, requested type "simple"
  5322                           ; Number of cases is 1, Range of values is 0 to 0
  5323                           ; switch strategies available:
  5324                           ; Name         Instructions Cycles
  5325                           ; simple_byte            4     3 (average)
  5326                           ; direct_byte            8     6 (fixed)
  5327                           ; jumptable            260     6 (fixed)
  5328                           ;	Chosen strategy is simple_byte
  5329  37EC  0863               	movf	(??_statemachine+1)^(0+256),w
  5330  37ED  3A00               	xorlw	0	; case 0
  5331  37EE  1903               	skipnz
  5332  37EF  2FF1               	goto	l8020
  5333  37F0  2FFF               	goto	l190
  5334  37F1                     l8020:	
  5335                           
  5336                           ; Switch size 1, requested type "simple"
  5337                           ; Number of cases is 4, Range of values is 0 to 3
  5338                           ; switch strategies available:
  5339                           ; Name         Instructions Cycles
  5340                           ; simple_byte           13     7 (average)
  5341                           ; direct_byte           14     6 (fixed)
  5342                           ; jumptable            260     6 (fixed)
  5343                           ;	Chosen strategy is simple_byte
  5344  37F1  0862               	movf	??_statemachine^(0+256),w
  5345  37F2  3A00               	xorlw	0	; case 0
  5346  37F3  1903               	skipnz
  5347  37F4  2F88               	goto	l7804
  5348  37F5  3A01               	xorlw	1	; case 1
  5349  37F6  1903               	skipnz
  5350  37F7  2FAB               	goto	l7822
  5351  37F8  3A03               	xorlw	3	; case 2
  5352  37F9  1903               	skipnz
  5353  37FA  2FBB               	goto	l7826
  5354  37FB  3A01               	xorlw	1	; case 3
  5355  37FC  1903               	skipnz
  5356  37FD  2FD0               	goto	l7830
  5357  37FE  2FFF               	goto	l190
  5358  37FF                     l190:	
  5359  37FF  0008               	return
  5360  3800                     __end_of_statemachine:	
  5361                           
  5362                           	psect	text3
  5363  1B81                     __ptext3:	
  5364 ;; *************** function _printcellParameters *****************
  5365 ;; Defined at:
  5366 ;;		line 328 in file "BQ76920.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;		None
  5371 ;; Return value:  Size  Location     Type
  5372 ;;                  1    wreg      void 
  5373 ;; Registers used:
  5374 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5375 ;; Tracked objects:
  5376 ;;		On entry : 0/0
  5377 ;;		On exit  : 0/0
  5378 ;;		Unchanged: 0/0
  5379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5384 ;;Total ram usage:        0 bytes
  5385 ;; Hardware stack levels used:    1
  5386 ;; Hardware stack levels required when called:   10
  5387 ;; This function calls:
  5388 ;;		_EUSART_Write_Text
  5389 ;;		_snprintf
  5390 ;; This function is called by:
  5391 ;;		_statemachine
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           
  5396                           ;psect for function _printcellParameters
  5397  1B81                     _printcellParameters:	
  5398                           
  5399                           ;BQ76920.c: 353:     snprintf(messageBuffer, 127, "%d,",batVoltage);
  5400                           
  5401                           ;incstack = 0
  5402                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5403  1B81  3071               	movlw	113
  5404  1B82  0021               	movlb	1	; select bank1
  5405  1B83  00CC               	movwf	snprintf@s^(0+128)
  5406  1B84  3027               	movlw	39
  5407  1B85  00CD               	movwf	(snprintf@s^(0+128)+1)
  5408  1B86  307F               	movlw	127
  5409  1B87  00CE               	movwf	snprintf@n^(0+128)
  5410  1B88  3000               	movlw	0
  5411  1B89  00CF               	movwf	(snprintf@n^(0+128)+1)
  5412  1B8A  3062               	movlw	low ((STR_6+12)| (0+32768))
  5413  1B8B  00D0               	movwf	snprintf@fmt^(0+128)
  5414  1B8C  30BA               	movlw	high ((STR_6+12)| (0+32768))
  5415  1B8D  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5416  1B8E  0023               	movlb	3	; select bank3
  5417  1B8F  083D               	movf	(_batVoltage+3)^(0+384),w
  5418  1B90  0021               	movlb	1	; select bank1
  5419  1B91  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5420  1B92  0023               	movlb	3	; select bank3
  5421  1B93  083C               	movf	(_batVoltage+2)^(0+384),w
  5422  1B94  0021               	movlb	1	; select bank1
  5423  1B95  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5424  1B96  0023               	movlb	3	; select bank3
  5425  1B97  083B               	movf	(_batVoltage+1)^(0+384),w
  5426  1B98  0021               	movlb	1	; select bank1
  5427  1B99  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5428  1B9A  0023               	movlb	3	; select bank3
  5429  1B9B  083A               	movf	_batVoltage^(0+384),w
  5430  1B9C  0021               	movlb	1	; select bank1
  5431  1B9D  00D2               	movwf	(?_snprintf^(0+128)+6)
  5432  1B9E  31B2  2284  319B   	fcall	_snprintf
  5433                           
  5434                           ;BQ76920.c: 354:     EUSART_Write_Text(messageBuffer);
  5435  1BA1  3071               	movlw	113
  5436  1BA2  00F2               	movwf	EUSART_Write_Text@text
  5437  1BA3  3027               	movlw	39
  5438  1BA4  00F3               	movwf	EUSART_Write_Text@text+1
  5439  1BA5  31B2  224F  319B   	fcall	_EUSART_Write_Text
  5440                           
  5441                           ;BQ76920.c: 355:     snprintf(messageBuffer, 127, "%d,",batCurrent);
  5442  1BA8  3071               	movlw	113
  5443  1BA9  0021               	movlb	1	; select bank1
  5444  1BAA  00CC               	movwf	snprintf@s^(0+128)
  5445  1BAB  3027               	movlw	39
  5446  1BAC  00CD               	movwf	(snprintf@s^(0+128)+1)
  5447  1BAD  307F               	movlw	127
  5448  1BAE  00CE               	movwf	snprintf@n^(0+128)
  5449  1BAF  3000               	movlw	0
  5450  1BB0  00CF               	movwf	(snprintf@n^(0+128)+1)
  5451  1BB1  3062               	movlw	low ((STR_6+12)| (0+32768))
  5452  1BB2  00D0               	movwf	snprintf@fmt^(0+128)
  5453  1BB3  30BA               	movlw	high ((STR_6+12)| (0+32768))
  5454  1BB4  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5455  1BB5  0023               	movlb	3	; select bank3
  5456  1BB6  0839               	movf	(_batCurrent+3)^(0+384),w
  5457  1BB7  0021               	movlb	1	; select bank1
  5458  1BB8  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5459  1BB9  0023               	movlb	3	; select bank3
  5460  1BBA  0838               	movf	(_batCurrent+2)^(0+384),w
  5461  1BBB  0021               	movlb	1	; select bank1
  5462  1BBC  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5463  1BBD  0023               	movlb	3	; select bank3
  5464  1BBE  0837               	movf	(_batCurrent+1)^(0+384),w
  5465  1BBF  0021               	movlb	1	; select bank1
  5466  1BC0  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5467  1BC1  0023               	movlb	3	; select bank3
  5468  1BC2  0836               	movf	_batCurrent^(0+384),w
  5469  1BC3  0021               	movlb	1	; select bank1
  5470  1BC4  00D2               	movwf	(?_snprintf^(0+128)+6)
  5471  1BC5  31B2  2284  319B   	fcall	_snprintf
  5472                           
  5473                           ;BQ76920.c: 356:     EUSART_Write_Text(messageBuffer);
  5474  1BC8  3071               	movlw	113
  5475  1BC9  00F2               	movwf	EUSART_Write_Text@text
  5476  1BCA  3027               	movlw	39
  5477  1BCB  00F3               	movwf	EUSART_Write_Text@text+1
  5478  1BCC  31B2  224F  319B   	fcall	_EUSART_Write_Text
  5479                           
  5480                           ;BQ76920.c: 357:     snprintf(messageBuffer, 127, "%d,",temperatureThermistor);
  5481  1BCF  3071               	movlw	113
  5482  1BD0  0021               	movlb	1	; select bank1
  5483  1BD1  00CC               	movwf	snprintf@s^(0+128)
  5484  1BD2  3027               	movlw	39
  5485  1BD3  00CD               	movwf	(snprintf@s^(0+128)+1)
  5486  1BD4  307F               	movlw	127
  5487  1BD5  00CE               	movwf	snprintf@n^(0+128)
  5488  1BD6  3000               	movlw	0
  5489  1BD7  00CF               	movwf	(snprintf@n^(0+128)+1)
  5490  1BD8  3062               	movlw	low ((STR_6+12)| (0+32768))
  5491  1BD9  00D0               	movwf	snprintf@fmt^(0+128)
  5492  1BDA  30BA               	movlw	high ((STR_6+12)| (0+32768))
  5493  1BDB  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5494  1BDC  0023               	movlb	3	; select bank3
  5495  1BDD  0835               	movf	(_temperatureThermistor+3)^(0+384),w
  5496  1BDE  0021               	movlb	1	; select bank1
  5497  1BDF  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5498  1BE0  0023               	movlb	3	; select bank3
  5499  1BE1  0834               	movf	(_temperatureThermistor+2)^(0+384),w
  5500  1BE2  0021               	movlb	1	; select bank1
  5501  1BE3  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5502  1BE4  0023               	movlb	3	; select bank3
  5503  1BE5  0833               	movf	(_temperatureThermistor+1)^(0+384),w
  5504  1BE6  0021               	movlb	1	; select bank1
  5505  1BE7  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5506  1BE8  0023               	movlb	3	; select bank3
  5507  1BE9  0832               	movf	_temperatureThermistor^(0+384),w
  5508  1BEA  0021               	movlb	1	; select bank1
  5509  1BEB  00D2               	movwf	(?_snprintf^(0+128)+6)
  5510  1BEC  31B2  2284  319B   	fcall	_snprintf
  5511                           
  5512                           ;BQ76920.c: 358:     EUSART_Write_Text(messageBuffer);
  5513  1BEF  3071               	movlw	113
  5514  1BF0  00F2               	movwf	EUSART_Write_Text@text
  5515  1BF1  3027               	movlw	39
  5516  1BF2  00F3               	movwf	EUSART_Write_Text@text+1
  5517  1BF3  31B2  224F  319B   	fcall	_EUSART_Write_Text
  5518                           
  5519                           ;BQ76920.c: 359:     snprintf(messageBuffer, 127, "0,");
  5520  1BF6  3071               	movlw	113
  5521  1BF7  0021               	movlb	1	; select bank1
  5522  1BF8  00CC               	movwf	snprintf@s^(0+128)
  5523  1BF9  3027               	movlw	39
  5524  1BFA  00CD               	movwf	(snprintf@s^(0+128)+1)
  5525  1BFB  307F               	movlw	127
  5526  1BFC  00CE               	movwf	snprintf@n^(0+128)
  5527  1BFD  3000               	movlw	0
  5528  1BFE  00CF               	movwf	(snprintf@n^(0+128)+1)
  5529  1BFF  30C7               	movlw	low (STR_5| (0+32768))
  5530  1C00  00D0               	movwf	snprintf@fmt^(0+128)
  5531  1C01  30BA               	movlw	high (STR_5| (0+32768))
  5532  1C02  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5533  1C03  31B2  2284  319B   	fcall	_snprintf
  5534                           
  5535                           ;BQ76920.c: 360:     EUSART_Write_Text(messageBuffer);
  5536  1C06  3071               	movlw	113
  5537  1C07  00F2               	movwf	EUSART_Write_Text@text
  5538  1C08  3027               	movlw	39
  5539  1C09  00F3               	movwf	EUSART_Write_Text@text+1
  5540  1C0A  31B2  224F  319B   	fcall	_EUSART_Write_Text
  5541                           
  5542                           ;BQ76920.c: 361:     snprintf(messageBuffer, 127, "%d,%d,%d,%d,%d,",cellVoltages[0],cell
      +                          Voltages[1],cellVoltages[2],cellVoltages[3],cellVoltages[4]);
  5543  1C0D  3071               	movlw	113
  5544  1C0E  0021               	movlb	1	; select bank1
  5545  1C0F  00CC               	movwf	snprintf@s^(0+128)
  5546  1C10  3027               	movlw	39
  5547  1C11  00CD               	movwf	(snprintf@s^(0+128)+1)
  5548  1C12  307F               	movlw	127
  5549  1C13  00CE               	movwf	snprintf@n^(0+128)
  5550  1C14  3000               	movlw	0
  5551  1C15  00CF               	movwf	(snprintf@n^(0+128)+1)
  5552  1C16  3056               	movlw	low (STR_6| (0+32768))
  5553  1C17  00D0               	movwf	snprintf@fmt^(0+128)
  5554  1C18  30BA               	movlw	high (STR_6| (0+32768))
  5555  1C19  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5556  1C1A  0023               	movlb	3	; select bank3
  5557  1C1B  0821               	movf	(_cellVoltages+1)^(0+384),w
  5558  1C1C  0021               	movlb	1	; select bank1
  5559  1C1D  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5560  1C1E  0023               	movlb	3	; select bank3
  5561  1C1F  0820               	movf	_cellVoltages^(0+384),w
  5562  1C20  0021               	movlb	1	; select bank1
  5563  1C21  00D2               	movwf	(?_snprintf^(0+128)+6)
  5564  1C22  0023               	movlb	3	; select bank3
  5565  1C23  0823               	movf	((_cellVoltages+1)^(0+384)+2),w
  5566  1C24  0021               	movlb	1	; select bank1
  5567  1C25  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5568  1C26  0023               	movlb	3	; select bank3
  5569  1C27  0822               	movf	(_cellVoltages^(0+384)+2),w
  5570  1C28  0021               	movlb	1	; select bank1
  5571  1C29  00D4               	movwf	(?_snprintf^(0+128)+8)
  5572  1C2A  0023               	movlb	3	; select bank3
  5573  1C2B  0825               	movf	((_cellVoltages+1)^(0+384)+4),w
  5574  1C2C  0021               	movlb	1	; select bank1
  5575  1C2D  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5576  1C2E  0023               	movlb	3	; select bank3
  5577  1C2F  0824               	movf	(_cellVoltages^(0+384)+4),w
  5578  1C30  0021               	movlb	1	; select bank1
  5579  1C31  00D6               	movwf	(?_snprintf^(0+128)+10)
  5580  1C32  0023               	movlb	3	; select bank3
  5581  1C33  0827               	movf	((_cellVoltages+1)^(0+384)+6),w
  5582  1C34  0021               	movlb	1	; select bank1
  5583  1C35  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5584  1C36  0023               	movlb	3	; select bank3
  5585  1C37  0826               	movf	(_cellVoltages^(0+384)+6),w
  5586  1C38  0021               	movlb	1	; select bank1
  5587  1C39  00D8               	movwf	(?_snprintf^(0+128)+12)
  5588  1C3A  0023               	movlb	3	; select bank3
  5589  1C3B  0829               	movf	((_cellVoltages+1)^(0+384)+8),w
  5590  1C3C  0021               	movlb	1	; select bank1
  5591  1C3D  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5592  1C3E  0023               	movlb	3	; select bank3
  5593  1C3F  0828               	movf	(_cellVoltages^(0+384)+8),w
  5594  1C40  0021               	movlb	1	; select bank1
  5595  1C41  00DA               	movwf	(?_snprintf^(0+128)+14)
  5596  1C42  31B2  2284  319B   	fcall	_snprintf
  5597                           
  5598                           ;BQ76920.c: 362:     EUSART_Write_Text(messageBuffer);
  5599  1C45  3071               	movlw	113
  5600  1C46  00F2               	movwf	EUSART_Write_Text@text
  5601  1C47  3027               	movlw	39
  5602  1C48  00F3               	movwf	EUSART_Write_Text@text+1
  5603  1C49  31B2  224F  319B   	fcall	_EUSART_Write_Text
  5604                           
  5605                           ;BQ76920.c: 363:     snprintf(messageBuffer, 127, "%d,%d,%d,%d,%d,",cellSOC[0],cellSOC[1
      +                          ],cellSOC[2],cellSOC[3],cellSOC[4]);
  5606  1C4C  3071               	movlw	113
  5607  1C4D  0021               	movlb	1	; select bank1
  5608  1C4E  00CC               	movwf	snprintf@s^(0+128)
  5609  1C4F  3027               	movlw	39
  5610  1C50  00CD               	movwf	(snprintf@s^(0+128)+1)
  5611  1C51  307F               	movlw	127
  5612  1C52  00CE               	movwf	snprintf@n^(0+128)
  5613  1C53  3000               	movlw	0
  5614  1C54  00CF               	movwf	(snprintf@n^(0+128)+1)
  5615  1C55  3056               	movlw	low (STR_6| (0+32768))
  5616  1C56  00D0               	movwf	snprintf@fmt^(0+128)
  5617  1C57  30BA               	movlw	high (STR_6| (0+32768))
  5618  1C58  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5619  1C59  0024               	movlb	4	; select bank4
  5620  1C5A  082B               	movf	(_cellSOC+1)^(0+512),w
  5621  1C5B  0021               	movlb	1	; select bank1
  5622  1C5C  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5623  1C5D  0024               	movlb	4	; select bank4
  5624  1C5E  082A               	movf	_cellSOC^(0+512),w
  5625  1C5F  0021               	movlb	1	; select bank1
  5626  1C60  00D2               	movwf	(?_snprintf^(0+128)+6)
  5627  1C61  0024               	movlb	4	; select bank4
  5628  1C62  082D               	movf	((_cellSOC+1)^(0+512)+2),w
  5629  1C63  0021               	movlb	1	; select bank1
  5630  1C64  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5631  1C65  0024               	movlb	4	; select bank4
  5632  1C66  082C               	movf	(_cellSOC^(0+512)+2),w
  5633  1C67  0021               	movlb	1	; select bank1
  5634  1C68  00D4               	movwf	(?_snprintf^(0+128)+8)
  5635  1C69  0024               	movlb	4	; select bank4
  5636  1C6A  082F               	movf	((_cellSOC+1)^(0+512)+4),w
  5637  1C6B  0021               	movlb	1	; select bank1
  5638  1C6C  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5639  1C6D  0024               	movlb	4	; select bank4
  5640  1C6E  082E               	movf	(_cellSOC^(0+512)+4),w
  5641  1C6F  0021               	movlb	1	; select bank1
  5642  1C70  00D6               	movwf	(?_snprintf^(0+128)+10)
  5643  1C71  0024               	movlb	4	; select bank4
  5644  1C72  0831               	movf	((_cellSOC+1)^(0+512)+6),w
  5645  1C73  0021               	movlb	1	; select bank1
  5646  1C74  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5647  1C75  0024               	movlb	4	; select bank4
  5648  1C76  0830               	movf	(_cellSOC^(0+512)+6),w
  5649  1C77  0021               	movlb	1	; select bank1
  5650  1C78  00D8               	movwf	(?_snprintf^(0+128)+12)
  5651  1C79  0024               	movlb	4	; select bank4
  5652  1C7A  0833               	movf	((_cellSOC+1)^(0+512)+8),w
  5653  1C7B  0021               	movlb	1	; select bank1
  5654  1C7C  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5655  1C7D  0024               	movlb	4	; select bank4
  5656  1C7E  0832               	movf	(_cellSOC^(0+512)+8),w
  5657  1C7F  0021               	movlb	1	; select bank1
  5658  1C80  00DA               	movwf	(?_snprintf^(0+128)+14)
  5659  1C81  31B2  2284  319B   	fcall	_snprintf
  5660                           
  5661                           ;BQ76920.c: 364:     EUSART_Write_Text(messageBuffer);
  5662  1C84  3071               	movlw	113
  5663  1C85  00F2               	movwf	EUSART_Write_Text@text
  5664  1C86  3027               	movlw	39
  5665  1C87  00F3               	movwf	EUSART_Write_Text@text+1
  5666  1C88  31B2  224F  319B   	fcall	_EUSART_Write_Text
  5667                           
  5668                           ;BQ76920.c: 365:     snprintf(messageBuffer, 127, "%d,%d,%d,%d,%d,%d,%d,%d\n\r",XR_error
      +                          ,alert_error,uv_error,ov_error,scd_error,ocd_error,chg_fet_enable,dschg_fet_enable);
  5669  1C8B  3071               	movlw	113
  5670  1C8C  0021               	movlb	1	; select bank1
  5671  1C8D  00CC               	movwf	snprintf@s^(0+128)
  5672  1C8E  3027               	movlw	39
  5673  1C8F  00CD               	movwf	(snprintf@s^(0+128)+1)
  5674  1C90  307F               	movlw	127
  5675  1C91  00CE               	movwf	snprintf@n^(0+128)
  5676  1C92  3000               	movlw	0
  5677  1C93  00CF               	movwf	(snprintf@n^(0+128)+1)
  5678  1C94  3028               	movlw	low (STR_8| (0+32768))
  5679  1C95  00D0               	movwf	snprintf@fmt^(0+128)
  5680  1C96  30B9               	movlw	high (STR_8| (0+32768))
  5681  1C97  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5682  1C98  0023               	movlb	3	; select bank3
  5683  1C99  0855               	movf	(_XR_error+1)^(0+384),w
  5684  1C9A  0021               	movlb	1	; select bank1
  5685  1C9B  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5686  1C9C  0023               	movlb	3	; select bank3
  5687  1C9D  0854               	movf	_XR_error^(0+384),w
  5688  1C9E  0021               	movlb	1	; select bank1
  5689  1C9F  00D2               	movwf	(?_snprintf^(0+128)+6)
  5690  1CA0  0023               	movlb	3	; select bank3
  5691  1CA1  0853               	movf	(_alert_error+1)^(0+384),w
  5692  1CA2  0021               	movlb	1	; select bank1
  5693  1CA3  00D5               	movwf	((?_snprintf+1)^(0+128)+8)
  5694  1CA4  0023               	movlb	3	; select bank3
  5695  1CA5  0852               	movf	_alert_error^(0+384),w
  5696  1CA6  0021               	movlb	1	; select bank1
  5697  1CA7  00D4               	movwf	(?_snprintf^(0+128)+8)
  5698  1CA8  0023               	movlb	3	; select bank3
  5699  1CA9  0851               	movf	(_uv_error+1)^(0+384),w
  5700  1CAA  0021               	movlb	1	; select bank1
  5701  1CAB  00D7               	movwf	((?_snprintf+1)^(0+128)+10)
  5702  1CAC  0023               	movlb	3	; select bank3
  5703  1CAD  0850               	movf	_uv_error^(0+384),w
  5704  1CAE  0021               	movlb	1	; select bank1
  5705  1CAF  00D6               	movwf	(?_snprintf^(0+128)+10)
  5706  1CB0  0023               	movlb	3	; select bank3
  5707  1CB1  084F               	movf	(_ov_error+1)^(0+384),w
  5708  1CB2  0021               	movlb	1	; select bank1
  5709  1CB3  00D9               	movwf	((?_snprintf+1)^(0+128)+12)
  5710  1CB4  0023               	movlb	3	; select bank3
  5711  1CB5  084E               	movf	_ov_error^(0+384),w
  5712  1CB6  0021               	movlb	1	; select bank1
  5713  1CB7  00D8               	movwf	(?_snprintf^(0+128)+12)
  5714  1CB8  0023               	movlb	3	; select bank3
  5715  1CB9  084D               	movf	(_scd_error+1)^(0+384),w
  5716  1CBA  0021               	movlb	1	; select bank1
  5717  1CBB  00DB               	movwf	((?_snprintf+1)^(0+128)+14)
  5718  1CBC  0023               	movlb	3	; select bank3
  5719  1CBD  084C               	movf	_scd_error^(0+384),w
  5720  1CBE  0021               	movlb	1	; select bank1
  5721  1CBF  00DA               	movwf	(?_snprintf^(0+128)+14)
  5722  1CC0  0023               	movlb	3	; select bank3
  5723  1CC1  084B               	movf	(_ocd_error+1)^(0+384),w
  5724  1CC2  0021               	movlb	1	; select bank1
  5725  1CC3  00DD               	movwf	((?_snprintf+1)^(0+128)+16)
  5726  1CC4  0023               	movlb	3	; select bank3
  5727  1CC5  084A               	movf	_ocd_error^(0+384),w
  5728  1CC6  0021               	movlb	1	; select bank1
  5729  1CC7  00DC               	movwf	(?_snprintf^(0+128)+16)
  5730  1CC8  0023               	movlb	3	; select bank3
  5731  1CC9  0849               	movf	(_chg_fet_enable+1)^(0+384),w
  5732  1CCA  0021               	movlb	1	; select bank1
  5733  1CCB  00DF               	movwf	((?_snprintf+1)^(0+128)+18)
  5734  1CCC  0023               	movlb	3	; select bank3
  5735  1CCD  0848               	movf	_chg_fet_enable^(0+384),w
  5736  1CCE  0021               	movlb	1	; select bank1
  5737  1CCF  00DE               	movwf	(?_snprintf^(0+128)+18)
  5738  1CD0  0023               	movlb	3	; select bank3
  5739  1CD1  0847               	movf	(_dschg_fet_enable+1)^(0+384),w
  5740  1CD2  0021               	movlb	1	; select bank1
  5741  1CD3  00E1               	movwf	((?_snprintf+1)^(0+128)+20)
  5742  1CD4  0023               	movlb	3	; select bank3
  5743  1CD5  0846               	movf	_dschg_fet_enable^(0+384),w
  5744  1CD6  0021               	movlb	1	; select bank1
  5745  1CD7  00E0               	movwf	(?_snprintf^(0+128)+20)
  5746  1CD8  31B2  2284  319B   	fcall	_snprintf
  5747                           
  5748                           ;BQ76920.c: 366:     EUSART_Write_Text(messageBuffer);
  5749  1CDB  3071               	movlw	113
  5750  1CDC  00F2               	movwf	EUSART_Write_Text@text
  5751  1CDD  3027               	movlw	39
  5752  1CDE  00F3               	movwf	EUSART_Write_Text@text+1
  5753  1CDF  31B2  224F         	fcall	_EUSART_Write_Text
  5754  1CE1  0008               	return
  5755  1CE2                     __end_of_printcellParameters:	
  5756                           
  5757                           	psect	text4
  5758  3284                     __ptext4:	
  5759 ;; *************** function _snprintf *****************
  5760 ;; Defined at:
  5761 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5762 ;; Parameters:    Size  Location     Type
  5763 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5764 ;;		 -> messageBuffer(127), 
  5765 ;;  n               2   46[BANK1 ] unsigned int 
  5766 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5767 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  5768 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  5769 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  5770 ;;		 -> STR_8(26), STR_7(16), STR_6(16), STR_5(3), 
  5771 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  ret             2    0        int 
  5774 ;;  ap              1   79[BANK0 ] PTR void [1]
  5775 ;;		 -> ?_snprintf(2), 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  2   44[BANK1 ] int 
  5778 ;; Registers used:
  5779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5785 ;;      Params:         0       0      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5786 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5788 ;;      Totals:         0       4      22       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5789 ;;Total ram usage:       26 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    9
  5792 ;; This function calls:
  5793 ;;		_vsnprintf
  5794 ;; This function is called by:
  5795 ;;		_statemachine
  5796 ;;		_printcellParameters
  5797 ;;		_printotAFERegisters
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           
  5802                           ;psect for function _snprintf
  5803  3284                     _snprintf:	
  5804                           
  5805                           ;incstack = 0
  5806                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5807  3284  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5808  3285  0020               	movlb	0	; select bank0
  5809  3286  00EC               	movwf	??_snprintf
  5810  3287  086C               	movf	??_snprintf,w
  5811  3288  00EF               	movwf	snprintf@ap
  5812  3289  0021               	movlb	1	; select bank1
  5813  328A  084D               	movf	(snprintf@s+1)^(0+128),w
  5814  328B  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5815  328C  084C               	movf	snprintf@s^(0+128),w
  5816  328D  00BB               	movwf	vsnprintf@s^(0+128)
  5817  328E  084F               	movf	(snprintf@n+1)^(0+128),w
  5818  328F  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5819  3290  084E               	movf	snprintf@n^(0+128),w
  5820  3291  00BD               	movwf	vsnprintf@n^(0+128)
  5821  3292  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5822  3293  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5823  3294  0850               	movf	snprintf@fmt^(0+128),w
  5824  3295  00BF               	movwf	vsnprintf@fmt^(0+128)
  5825  3296  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5826  3297  0020               	movlb	0	; select bank0
  5827  3298  00EC               	movwf	??_snprintf
  5828  3299  086C               	movf	??_snprintf,w
  5829  329A  0021               	movlb	1	; select bank1
  5830  329B  00C1               	movwf	vsnprintf@ap^(0+128)
  5831  329C  31A9  2142         	fcall	_vsnprintf
  5832  329E  0008               	return
  5833  329F                     __end_of_snprintf:	
  5834                           
  5835                           	psect	text5
  5836  2942                     __ptext5:	
  5837 ;; *************** function _vsnprintf *****************
  5838 ;; Defined at:
  5839 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5842 ;;		 -> messageBuffer(127), 
  5843 ;;  n               2   29[BANK1 ] unsigned int 
  5844 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5845 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  5846 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  5847 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  5848 ;;		 -> STR_8(26), STR_7(16), STR_6(16), STR_5(3), 
  5849 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  5850 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5851 ;;		 -> snprintf@ap(1), 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5854 ;;  cnt             2   36[BANK1 ] int 
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  2   27[BANK1 ] int 
  5857 ;; Registers used:
  5858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5864 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5865 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5866 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5867 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5868 ;;Total ram usage:       19 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    8
  5871 ;; This function calls:
  5872 ;;		_vfprintf
  5873 ;; This function is called by:
  5874 ;;		_snprintf
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           
  5879                           ;psect for function _vsnprintf
  5880  2942                     _vsnprintf:	
  5881                           
  5882                           ;incstack = 0
  5883                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5884  2942  3080               	movlw	128
  5885  2943  0021               	movlb	1	; select bank1
  5886  2944  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5887  2945  3000               	movlw	0
  5888  2946  1903               	skipnz
  5889  2947  023D               	subwf	vsnprintf@n^(0+128),w
  5890  2948  1C03               	skipc
  5891  2949  2955               	goto	l7396
  5892  294A  304B               	movlw	75
  5893  294B  0023               	movlb	3	; select bank3
  5894  294C  00BE               	movwf	_errno^(0+384)
  5895  294D  3000               	movlw	0
  5896  294E  00BF               	movwf	(_errno^(0+384)+1)
  5897  294F  30FF               	movlw	255
  5898  2950  0021               	movlb	1	; select bank1
  5899  2951  00BB               	movwf	?_vsnprintf^(0+128)
  5900  2952  30FF               	movlw	255
  5901  2953  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5902  2954  0008               	return
  5903  2955                     l7396:	
  5904  2955  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5905  2956  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5906  2957  083B               	movf	vsnprintf@s^(0+128),w
  5907  2958  00C6               	movwf	vsnprintf@f^(0+128)
  5908  2959  3000               	movlw	0
  5909  295A  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5910  295B  3002               	movlw	2
  5911  295C  1903               	skipnz
  5912  295D  023D               	subwf	vsnprintf@n^(0+128),w
  5913  295E  1C03               	skipc
  5914  295F  2969               	goto	l7402
  5915  2960  083D               	movf	vsnprintf@n^(0+128),w
  5916  2961  3EFF               	addlw	255
  5917  2962  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5918  2963  30FF               	movlw	255
  5919  2964  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5920  2965  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5921  2966  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5922  2967  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5923  2968  2971               	goto	l7404
  5924  2969                     l7402:	
  5925  2969  3001               	movlw	1
  5926  296A  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5927  296B  3000               	movlw	0
  5928  296C  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5929  296D  3001               	movlw	1
  5930  296E  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5931  296F  3000               	movlw	0
  5932  2970  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5933  2971                     l7404:	
  5934  2971  30C6               	movlw	low vsnprintf@f
  5935  2972  0020               	movlb	0	; select bank0
  5936  2973  00E1               	movwf	vfprintf@fp
  5937  2974  3000               	movlw	high vsnprintf@f
  5938  2975  00E2               	movwf	vfprintf@fp+1
  5939  2976  0021               	movlb	1	; select bank1
  5940  2977  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  5941  2978  0020               	movlb	0	; select bank0
  5942  2979  00E4               	movwf	vfprintf@fmt+1
  5943  297A  0021               	movlb	1	; select bank1
  5944  297B  083F               	movf	vsnprintf@fmt^(0+128),w
  5945  297C  0020               	movlb	0	; select bank0
  5946  297D  00E3               	movwf	vfprintf@fmt
  5947  297E  0021               	movlb	1	; select bank1
  5948  297F  0841               	movf	vsnprintf@ap^(0+128),w
  5949  2980  0020               	movlb	0	; select bank0
  5950  2981  00EA               	movwf	??_vsnprintf
  5951  2982  086A               	movf	??_vsnprintf,w
  5952  2983  00E5               	movwf	vfprintf@ap
  5953  2984  31B3  23F0  31A9   	fcall	_vfprintf
  5954  2987  0020               	movlb	0	; select bank0
  5955  2988  0862               	movf	?_vfprintf+1,w
  5956  2989  0021               	movlb	1	; select bank1
  5957  298A  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  5958  298B  0020               	movlb	0	; select bank0
  5959  298C  0861               	movf	?_vfprintf,w
  5960  298D  0021               	movlb	1	; select bank1
  5961  298E  00C4               	movwf	vsnprintf@cnt^(0+128)
  5962  298F  083D               	movf	vsnprintf@n^(0+128),w
  5963  2990  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  5964  2991  1D03               	btfss	3,2
  5965  2992  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  5966  2993  29BA               	goto	l7418
  5967  2994  083D               	movf	vsnprintf@n^(0+128),w
  5968  2995  3EFF               	addlw	255
  5969  2996  0020               	movlb	0	; select bank0
  5970  2997  00EA               	movwf	??_vsnprintf
  5971  2998  30FF               	movlw	255
  5972  2999  0021               	movlb	1	; select bank1
  5973  299A  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5974  299B  0020               	movlb	0	; select bank0
  5975  299C  00EB               	movwf	??_vsnprintf+1
  5976  299D  086B               	movf	??_vsnprintf+1,w
  5977  299E  0021               	movlb	1	; select bank1
  5978  299F  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  5979  29A0  1D03               	skipz
  5980  29A1  29A6               	goto	u9355
  5981  29A2  0020               	movlb	0	; select bank0
  5982  29A3  086A               	movf	??_vsnprintf,w
  5983  29A4  0021               	movlb	1	; select bank1
  5984  29A5  0244               	subwf	vsnprintf@cnt^(0+128),w
  5985  29A6                     u9355:	
  5986  29A6  1C03               	skipc
  5987  29A7  29AF               	goto	l7414
  5988  29A8  083D               	movf	vsnprintf@n^(0+128),w
  5989  29A9  3EFF               	addlw	255
  5990  29AA  00C2               	movwf	_vsnprintf$1943^(0+128)
  5991  29AB  30FF               	movlw	255
  5992  29AC  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5993  29AD  00C3               	movwf	(_vsnprintf$1943+1)^(0+128)
  5994  29AE  29B3               	goto	l7416
  5995  29AF                     l7414:	
  5996  29AF  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5997  29B0  00C3               	movwf	(_vsnprintf$1943+1)^(0+128)
  5998  29B1  0844               	movf	vsnprintf@cnt^(0+128),w
  5999  29B2  00C2               	movwf	_vsnprintf$1943^(0+128)
  6000  29B3                     l7416:	
  6001  29B3  0842               	movf	_vsnprintf$1943^(0+128),w
  6002  29B4  073B               	addwf	vsnprintf@s^(0+128),w
  6003  29B5  0086               	movwf	6
  6004  29B6  0843               	movf	(_vsnprintf$1943+1)^(0+128),w
  6005  29B7  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  6006  29B8  0087               	movwf	7
  6007  29B9  0181               	clrf	1
  6008  29BA                     l7418:	
  6009  29BA  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  6010  29BB  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  6011  29BC  0844               	movf	vsnprintf@cnt^(0+128),w
  6012  29BD  00BB               	movwf	?_vsnprintf^(0+128)
  6013  29BE  0008               	return
  6014  29BF                     __end_of_vsnprintf:	
  6015                           
  6016                           	psect	text6
  6017  33F0                     __ptext6:	
  6018 ;; *************** function _vfprintf *****************
  6019 ;; Defined at:
  6020 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6021 ;; Parameters:    Size  Location     Type
  6022 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  6023 ;;		 -> vsnprintf@f(6), 
  6024 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  6025 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  6026 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  6027 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  6028 ;;		 -> STR_8(26), STR_7(16), STR_6(16), STR_5(3), 
  6029 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  6030 ;;  ap              1   69[BANK0 ] PTR PTR void 
  6031 ;;		 -> snprintf@ap(1), 
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  6034 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  6035 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  6036 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  6037 ;;		 -> STR_8(26), STR_7(16), STR_6(16), STR_5(3), 
  6038 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  6039 ;; Return value:  Size  Location     Type
  6040 ;;                  2   65[BANK0 ] int 
  6041 ;; Registers used:
  6042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6043 ;; Tracked objects:
  6044 ;;		On entry : 0/0
  6045 ;;		On exit  : 0/0
  6046 ;;		Unchanged: 0/0
  6047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6048 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6049 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6050 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6051 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6052 ;;Total ram usage:        9 bytes
  6053 ;; Hardware stack levels used:    1
  6054 ;; Hardware stack levels required when called:    7
  6055 ;; This function calls:
  6056 ;;		_vfpfcnvrt
  6057 ;; This function is called by:
  6058 ;;		_vsnprintf
  6059 ;; This function uses a non-reentrant model
  6060 ;;
  6061                           
  6062                           
  6063                           ;psect for function _vfprintf
  6064  33F0                     _vfprintf:	
  6065                           
  6066                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6067                           
  6068                           ;incstack = 0
  6069                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6070  33F0  0020               	movlb	0	; select bank0
  6071  33F1  0864               	movf	vfprintf@fmt+1,w
  6072  33F2  00E9               	movwf	vfprintf@cfmt+1
  6073  33F3  0863               	movf	vfprintf@fmt,w
  6074  33F4  00E8               	movwf	vfprintf@cfmt
  6075                           
  6076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6077  33F5  0023               	movlb	3	; select bank3
  6078  33F6  01C0               	clrf	_nout^(0+384)
  6079  33F7  01C1               	clrf	(_nout+1)^(0+384)
  6080  33F8                     l7302:	
  6081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6082                           
  6083                           
  6084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6085  33F8  0020               	movlb	0	; select bank0
  6086  33F9  0868               	movf	vfprintf@cfmt,w
  6087  33FA  0084               	movwf	4
  6088  33FB  0869               	movf	vfprintf@cfmt+1,w
  6089  33FC  0085               	movwf	5
  6090  33FD  0012               	moviw fsr0++
  6091  33FE  1903               	btfsc	3,2
  6092  33FF  2C18               	goto	l7304
  6093                           
  6094                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6095  3400  0862               	movf	vfprintf@fp+1,w
  6096  3401  00D8               	movwf	vfpfcnvrt@fp+1
  6097  3402  0861               	movf	vfprintf@fp,w
  6098  3403  00D7               	movwf	vfpfcnvrt@fp
  6099  3404  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  6100  3405  00E6               	movwf	??_vfprintf
  6101  3406  0866               	movf	??_vfprintf,w
  6102  3407  00D9               	movwf	vfpfcnvrt@fmt
  6103  3408  0865               	movf	vfprintf@ap,w
  6104  3409  00E7               	movwf	??_vfprintf+1
  6105  340A  0867               	movf	??_vfprintf+1,w
  6106  340B  00DA               	movwf	vfpfcnvrt@ap
  6107  340C  319E  265C  31B3   	fcall	_vfpfcnvrt
  6108  340F  0020               	movlb	0	; select bank0
  6109  3410  0857               	movf	?_vfpfcnvrt,w
  6110  3411  0023               	movlb	3	; select bank3
  6111  3412  07C0               	addwf	_nout^(0+384),f
  6112  3413  0020               	movlb	0	; select bank0
  6113  3414  0858               	movf	?_vfpfcnvrt+1,w
  6114  3415  0023               	movlb	3	; select bank3
  6115  3416  3DC1               	addwfc	(_nout+1)^(0+384),f
  6116  3417  2BF8               	goto	l7302
  6117  3418                     l7304:	
  6118                           
  6119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6120  3418  0023               	movlb	3	; select bank3
  6121  3419  0841               	movf	(_nout+1)^(0+384),w
  6122  341A  0020               	movlb	0	; select bank0
  6123  341B  00E2               	movwf	?_vfprintf+1
  6124  341C  0023               	movlb	3	; select bank3
  6125  341D  0840               	movf	_nout^(0+384),w
  6126  341E  0020               	movlb	0	; select bank0
  6127  341F  00E1               	movwf	?_vfprintf
  6128  3420  0008               	return
  6129  3421                     __end_of_vfprintf:	
  6130                           
  6131                           	psect	text7
  6132  1E5C                     __ptext7:	
  6133 ;; *************** function _vfpfcnvrt *****************
  6134 ;; Defined at:
  6135 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  6138 ;;		 -> vsnprintf@f(6), 
  6139 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  6140 ;;		 -> vfprintf@cfmt(2), 
  6141 ;;  ap              1   58[BANK0 ] PTR PTR void 
  6142 ;;		 -> snprintf@ap(1), 
  6143 ;; Auto vars:     Size  Location     Type
  6144 ;;  llu             8   19[BANK1 ] unsigned long long 
  6145 ;;  ll              8    8[BANK1 ] long long 
  6146 ;;  f               4    0        long long 
  6147 ;;  ct              3    0        unsigned char [3]
  6148 ;;  vp              2   16[BANK1 ] PTR void 
  6149 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6150 ;;  done            2    2[BANK1 ] int 
  6151 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  6152 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  6153 ;;  i               2    0        int 
  6154 ;;  c               1   18[BANK1 ] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  2   55[BANK0 ] int 
  6157 ;; Registers used:
  6158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6164 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6165 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6166 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6167 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6168 ;;Total ram usage:       37 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    6
  6171 ;; This function calls:
  6172 ;;		_atoi
  6173 ;;		_ctoa
  6174 ;;		_dtoa
  6175 ;;		_fputc
  6176 ;;		_isdigit
  6177 ;;		_otoa
  6178 ;;		_stoa
  6179 ;;		_strncmp
  6180 ;;		_utoa
  6181 ;;		_xtoa
  6182 ;; This function is called by:
  6183 ;;		_vfprintf
  6184 ;; This function uses a non-reentrant model
  6185 ;;
  6186                           
  6187                           
  6188                           ;psect for function _vfpfcnvrt
  6189  1E5C                     _vfpfcnvrt:	
  6190                           
  6191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6192                           
  6193                           ;incstack = 0
  6194                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6195  1E5C  0020               	movlb	0	; select bank0
  6196  1E5D  0859               	movf	vfpfcnvrt@fmt,w
  6197  1E5E  0086               	movwf	6
  6198  1E5F  0187               	clrf	7
  6199  1E60  3F40               	moviw [0]fsr1
  6200  1E61  00DB               	movwf	??_vfpfcnvrt
  6201  1E62  3F41               	moviw [1]fsr1
  6202  1E63  00DC               	movwf	??_vfpfcnvrt+1
  6203  1E64  085B               	movf	??_vfpfcnvrt,w
  6204  1E65  0084               	movwf	4
  6205  1E66  085C               	movf	??_vfpfcnvrt+1,w
  6206  1E67  0085               	movwf	5
  6207  1E68  0012               	moviw fsr0++
  6208  1E69  3A25               	xorlw	37
  6209  1E6A  1D03               	btfss	3,2
  6210  1E6B  2FFE               	goto	L7
  6211                           
  6212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6213  1E6C  0859               	movf	vfpfcnvrt@fmt,w
  6214  1E6D  0086               	movwf	6
  6215  1E6E  0187               	clrf	7
  6216  1E6F  3001               	movlw	1
  6217  1E70  0781               	addwf	1,f
  6218  1E71  3141               	addfsr 1,1
  6219  1E72  1803               	skipnc
  6220  1E73  0A81               	incf	1,f
  6221                           
  6222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6223  1E74  0022               	movlb	2	; select bank2
  6224  1E75  01E6               	clrf	_width^(0+256)
  6225  1E76  01E7               	clrf	(_width+1)^(0+256)
  6226  1E77  01EA               	clrf	_flags^(0+256)
  6227  1E78  01EB               	clrf	(_flags+1)^(0+256)
  6228                           
  6229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6230  1E79  30FF               	movlw	255
  6231  1E7A  00E8               	movwf	_prec^(0+256)
  6232  1E7B  30FF               	movlw	255
  6233  1E7C  00E9               	movwf	(_prec^(0+256)+1)
  6234                           
  6235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  6236  1E7D  0021               	movlb	1	; select bank1
  6237  1E7E  01A2               	clrf	vfpfcnvrt@done^(0+128)
  6238  1E7F  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  6239                           
  6240                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6241  1E80  2E9E               	goto	l6938
  6242  1E81                     l936:	
  6243                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  6244                           
  6245                           
  6246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  6247  1E81  0022               	movlb	2	; select bank2
  6248  1E82  146A               	bsf	_flags^(0+256),0
  6249  1E83                     l6922:	
  6250                           
  6251                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  6252  1E83  0020               	movlb	0	; select bank0
  6253  1E84  0859               	movf	vfpfcnvrt@fmt,w
  6254  1E85  0086               	movwf	6
  6255  1E86  0187               	clrf	7
  6256  1E87  3001               	movlw	1
  6257  1E88  0781               	addwf	1,f
  6258  1E89  3141               	addfsr 1,1
  6259  1E8A  1803               	skipnc
  6260  1E8B  0A81               	incf	1,f
  6261                           
  6262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  6263  1E8C  2E9E               	goto	l6938
  6264  1E8D                     l938:	
  6265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  6266                           
  6267                           
  6268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  6269  1E8D  0022               	movlb	2	; select bank2
  6270  1E8E  14EA               	bsf	_flags^(0+256),1
  6271  1E8F  2E83               	goto	l6922
  6272  1E90                     l939:	
  6273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  6274                           
  6275                           
  6276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  6277  1E90  0022               	movlb	2	; select bank2
  6278  1E91  156A               	bsf	_flags^(0+256),2
  6279  1E92  2E83               	goto	l6922
  6280  1E93                     l940:	
  6281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  6282                           
  6283                           
  6284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  6285  1E93  0022               	movlb	2	; select bank2
  6286  1E94  15EA               	bsf	_flags^(0+256),3
  6287  1E95  2E83               	goto	l6922
  6288  1E96                     l941:	
  6289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  6290                           
  6291                           
  6292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  6293  1E96  0022               	movlb	2	; select bank2
  6294  1E97  166A               	bsf	_flags^(0+256),4
  6295  1E98  2E83               	goto	l6922
  6296  1E99                     l6932:	
  6297                           
  6298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  6299  1E99  3001               	movlw	1
  6300  1E9A  0021               	movlb	1	; select bank1
  6301  1E9B  00A2               	movwf	vfpfcnvrt@done^(0+128)
  6302  1E9C  3000               	movlw	0
  6303  1E9D  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  6304  1E9E                     l6938:	
  6305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  6306                           
  6307                           
  6308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  6309  1E9E  0021               	movlb	1	; select bank1
  6310  1E9F  0822               	movf	vfpfcnvrt@done^(0+128),w
  6311  1EA0  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  6312  1EA1  1D03               	btfss	3,2
  6313  1EA2  2EC9               	goto	l943
  6314  1EA3  0020               	movlb	0	; select bank0
  6315  1EA4  0859               	movf	vfpfcnvrt@fmt,w
  6316  1EA5  0086               	movwf	6
  6317  1EA6  0187               	clrf	7
  6318  1EA7  3F40               	moviw [0]fsr1
  6319  1EA8  00DB               	movwf	??_vfpfcnvrt
  6320  1EA9  3F41               	moviw [1]fsr1
  6321  1EAA  00DC               	movwf	??_vfpfcnvrt+1
  6322  1EAB  085B               	movf	??_vfpfcnvrt,w
  6323  1EAC  0084               	movwf	4
  6324  1EAD  085C               	movf	??_vfpfcnvrt+1,w
  6325  1EAE  0085               	movwf	5
  6326  1EAF  0800               	movf	0,w	;code access
  6327  1EB0  00DD               	movwf	??_vfpfcnvrt+2
  6328  1EB1  01DE               	clrf	??_vfpfcnvrt+3
  6329                           
  6330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6331                           ; Switch size 1, requested type "simple"
  6332                           ; Number of cases is 1, Range of values is 0 to 0
  6333                           ; switch strategies available:
  6334                           ; Name         Instructions Cycles
  6335                           ; simple_byte            4     3 (average)
  6336                           ; direct_byte            8     6 (fixed)
  6337                           ; jumptable            260     6 (fixed)
  6338                           ;	Chosen strategy is simple_byte
  6339  1EB2  085E               	movf	??_vfpfcnvrt+3,w
  6340  1EB3  3A00               	xorlw	0	; case 0
  6341  1EB4  1903               	skipnz
  6342  1EB5  2EB7               	goto	l8022
  6343  1EB6  2E99               	goto	l6932
  6344  1EB7                     l8022:	
  6345                           
  6346                           ; Switch size 1, requested type "simple"
  6347                           ; Number of cases is 5, Range of values is 32 to 48
  6348                           ; switch strategies available:
  6349                           ; Name         Instructions Cycles
  6350                           ; simple_byte           16     9 (average)
  6351                           ; direct_byte           43     9 (fixed)
  6352                           ; jumptable            263     9 (fixed)
  6353                           ;	Chosen strategy is simple_byte
  6354  1EB7  085D               	movf	??_vfpfcnvrt+2,w
  6355  1EB8  3A20               	xorlw	32	; case 32
  6356  1EB9  1903               	skipnz
  6357  1EBA  2E93               	goto	l940
  6358  1EBB  3A03               	xorlw	3	; case 35
  6359  1EBC  1903               	skipnz
  6360  1EBD  2E96               	goto	l941
  6361  1EBE  3A08               	xorlw	8	; case 43
  6362  1EBF  1903               	skipnz
  6363  1EC0  2E90               	goto	l939
  6364  1EC1  3A06               	xorlw	6	; case 45
  6365  1EC2  1903               	skipnz
  6366  1EC3  2E81               	goto	l936
  6367  1EC4  3A1D               	xorlw	29	; case 48
  6368  1EC5  1903               	skipnz
  6369  1EC6  2E8D               	goto	l938
  6370  1EC7  2E99               	goto	l6932
  6371  1EC8  2E9E               	goto	l6938
  6372  1EC9                     l943:	
  6373                           
  6374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6375  1EC9  0022               	movlb	2	; select bank2
  6376  1ECA  1C6A               	btfss	_flags^(0+256),0
  6377  1ECB  2ED0               	goto	l6942
  6378                           
  6379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6380  1ECC  30FD               	movlw	253
  6381  1ECD  05EA               	andwf	_flags^(0+256),f
  6382  1ECE  30FF               	movlw	255
  6383  1ECF  05EB               	andwf	(_flags+1)^(0+256),f
  6384  1ED0                     l6942:	
  6385                           
  6386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6387  1ED0  0020               	movlb	0	; select bank0
  6388  1ED1  0859               	movf	vfpfcnvrt@fmt,w
  6389  1ED2  0086               	movwf	6
  6390  1ED3  0187               	clrf	7
  6391  1ED4  3F40               	moviw [0]fsr1
  6392  1ED5  00DB               	movwf	??_vfpfcnvrt
  6393  1ED6  3F41               	moviw [1]fsr1
  6394  1ED7  00DC               	movwf	??_vfpfcnvrt+1
  6395  1ED8  085B               	movf	??_vfpfcnvrt,w
  6396  1ED9  0084               	movwf	4
  6397  1EDA  085C               	movf	??_vfpfcnvrt+1,w
  6398  1EDB  0085               	movwf	5
  6399  1EDC  0012               	moviw fsr0++
  6400  1EDD  3A2A               	xorlw	42
  6401  1EDE  1D03               	btfss	3,2
  6402  1EDF  2EFE               	goto	l6954
  6403                           
  6404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6405  1EE0  0859               	movf	vfpfcnvrt@fmt,w
  6406  1EE1  0086               	movwf	6
  6407  1EE2  0187               	clrf	7
  6408  1EE3  3001               	movlw	1
  6409  1EE4  0781               	addwf	1,f
  6410  1EE5  3141               	addfsr 1,1
  6411  1EE6  1803               	skipnc
  6412  1EE7  0A81               	incf	1,f
  6413                           
  6414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6415  1EE8  085A               	movf	vfpfcnvrt@ap,w
  6416  1EE9  0086               	movwf	6
  6417  1EEA  0187               	clrf	7
  6418  1EEB  0801               	movf	1,w
  6419  1EEC  0084               	movwf	4
  6420  1EED  0185               	clrf	5
  6421  1EEE  3002               	movlw	2
  6422  1EEF  0781               	addwf	1,f
  6423  1EF0  3F00               	moviw [0]fsr0
  6424  1EF1  0022               	movlb	2	; select bank2
  6425  1EF2  00E6               	movwf	_width^(0+256)
  6426  1EF3  3F01               	moviw [1]fsr0
  6427  1EF4  00E7               	movwf	(_width+1)^(0+256)
  6428                           
  6429                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6430  1EF5  1FE7               	btfss	(_width+1)^(0+256),7
  6431  1EF6  2F41               	goto	l6964
  6432                           
  6433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6434  1EF7  146A               	bsf	_flags^(0+256),0
  6435                           
  6436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6437  1EF8  09E6               	comf	_width^(0+256),f
  6438  1EF9  09E7               	comf	(_width+1)^(0+256),f
  6439  1EFA  0AE6               	incf	_width^(0+256),f
  6440  1EFB  1903               	skipnz
  6441  1EFC  0AE7               	incf	(_width+1)^(0+256),f
  6442  1EFD  2F41               	goto	l6964
  6443  1EFE                     l6954:	
  6444                           
  6445                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6446  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  6447  1EFF  0086               	movwf	6
  6448  1F00  0187               	clrf	7
  6449  1F01  3F40               	moviw [0]fsr1
  6450  1F02  00F7               	movwf	atoi@s
  6451  1F03  3F41               	moviw [1]fsr1
  6452  1F04  00F8               	movwf	atoi@s+1
  6453  1F05  31AA  22D7  319E   	fcall	_atoi
  6454  1F08  0878               	movf	?_atoi+1,w
  6455  1F09  0022               	movlb	2	; select bank2
  6456  1F0A  00E7               	movwf	(_width+1)^(0+256)
  6457  1F0B  0877               	movf	?_atoi,w
  6458  1F0C  00E6               	movwf	_width^(0+256)
  6459                           
  6460                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6461  1F0D  2F17               	goto	l6958
  6462  1F0E                     l6956:	
  6463                           
  6464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6465  1F0E  0020               	movlb	0	; select bank0
  6466  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  6467  1F10  0086               	movwf	6
  6468  1F11  0187               	clrf	7
  6469  1F12  3001               	movlw	1
  6470  1F13  0781               	addwf	1,f
  6471  1F14  3141               	addfsr 1,1
  6472  1F15  1803               	skipnc
  6473  1F16  0A81               	incf	1,f
  6474  1F17                     l6958:	
  6475  1F17  0020               	movlb	0	; select bank0
  6476  1F18  0859               	movf	vfpfcnvrt@fmt,w
  6477  1F19  0086               	movwf	6
  6478  1F1A  0187               	clrf	7
  6479  1F1B  3F40               	moviw [0]fsr1
  6480  1F1C  00DB               	movwf	??_vfpfcnvrt
  6481  1F1D  3F41               	moviw [1]fsr1
  6482  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  6483  1F1F  085B               	movf	??_vfpfcnvrt,w
  6484  1F20  0084               	movwf	4
  6485  1F21  085C               	movf	??_vfpfcnvrt+1,w
  6486  1F22  0085               	movwf	5
  6487  1F23  0800               	movf	0,w	;code access
  6488  1F24  3ED0               	addlw	208
  6489  1F25  00DD               	movwf	??_vfpfcnvrt+2
  6490  1F26  30FF               	movlw	255
  6491  1F27  1803               	skipnc
  6492  1F28  3000               	movlw	0
  6493  1F29  00DE               	movwf	??_vfpfcnvrt+3
  6494  1F2A  3000               	movlw	0
  6495  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  6496  1F2C  300A               	movlw	10
  6497  1F2D  1903               	skipnz
  6498  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  6499  1F2F  1803               	btfsc	3,0
  6500  1F30  2F33               	goto	u8700
  6501  1F31  3001               	movlw	1
  6502  1F32  2F34               	goto	u8710
  6503  1F33                     u8700:	
  6504  1F33  3000               	movlw	0
  6505  1F34                     u8710:	
  6506  1F34  00DF               	movwf	??_vfpfcnvrt+4
  6507  1F35  01E0               	clrf	??_vfpfcnvrt+5
  6508  1F36  085F               	movf	??_vfpfcnvrt+4,w
  6509  1F37  0021               	movlb	1	; select bank1
  6510  1F38  00A4               	movwf	_vfpfcnvrt$1371^(0+128)
  6511  1F39  0020               	movlb	0	; select bank0
  6512  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  6513  1F3B  0021               	movlb	1	; select bank1
  6514  1F3C  00A5               	movwf	(_vfpfcnvrt$1371+1)^(0+128)
  6515  1F3D  0824               	movf	_vfpfcnvrt$1371^(0+128),w
  6516  1F3E  0425               	iorwf	(_vfpfcnvrt$1371+1)^(0+128),w
  6517  1F3F  1D03               	btfss	3,2
  6518  1F40  2F0E               	goto	l6956
  6519  1F41                     l6964:	
  6520                           
  6521                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6522  1F41  0020               	movlb	0	; select bank0
  6523  1F42  0859               	movf	vfpfcnvrt@fmt,w
  6524  1F43  0086               	movwf	6
  6525  1F44  0187               	clrf	7
  6526  1F45  3F40               	moviw [0]fsr1
  6527  1F46  00DB               	movwf	??_vfpfcnvrt
  6528  1F47  3F41               	moviw [1]fsr1
  6529  1F48  00DC               	movwf	??_vfpfcnvrt+1
  6530  1F49  085B               	movf	??_vfpfcnvrt,w
  6531  1F4A  0084               	movwf	4
  6532  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  6533  1F4C  0085               	movwf	5
  6534  1F4D  0012               	moviw fsr0++
  6535  1F4E  3A2E               	xorlw	46
  6536  1F4F  1D03               	btfss	3,2
  6537  1F50  2FC5               	goto	l6986
  6538                           
  6539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6540  1F51  0022               	movlb	2	; select bank2
  6541  1F52  01E8               	clrf	_prec^(0+256)
  6542  1F53  01E9               	clrf	(_prec+1)^(0+256)
  6543                           
  6544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6545  1F54  0020               	movlb	0	; select bank0
  6546  1F55  0859               	movf	vfpfcnvrt@fmt,w
  6547  1F56  0086               	movwf	6
  6548  1F57  0187               	clrf	7
  6549  1F58  3001               	movlw	1
  6550  1F59  0781               	addwf	1,f
  6551  1F5A  3141               	addfsr 1,1
  6552  1F5B  1803               	skipnc
  6553  1F5C  0A81               	incf	1,f
  6554                           
  6555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6556  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  6557  1F5E  0086               	movwf	6
  6558  1F5F  0187               	clrf	7
  6559  1F60  3F40               	moviw [0]fsr1
  6560  1F61  00DB               	movwf	??_vfpfcnvrt
  6561  1F62  3F41               	moviw [1]fsr1
  6562  1F63  00DC               	movwf	??_vfpfcnvrt+1
  6563  1F64  085B               	movf	??_vfpfcnvrt,w
  6564  1F65  0084               	movwf	4
  6565  1F66  085C               	movf	??_vfpfcnvrt+1,w
  6566  1F67  0085               	movwf	5
  6567  1F68  0012               	moviw fsr0++
  6568  1F69  3A2A               	xorlw	42
  6569  1F6A  1D03               	btfss	3,2
  6570  1F6B  2F82               	goto	l6976
  6571                           
  6572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6573  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  6574  1F6D  0086               	movwf	6
  6575  1F6E  0187               	clrf	7
  6576  1F6F  3001               	movlw	1
  6577  1F70  0781               	addwf	1,f
  6578  1F71  3141               	addfsr 1,1
  6579  1F72  1803               	skipnc
  6580  1F73  0A81               	incf	1,f
  6581                           
  6582                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6583  1F74  085A               	movf	vfpfcnvrt@ap,w
  6584  1F75  0086               	movwf	6
  6585  1F76  0187               	clrf	7
  6586  1F77  0801               	movf	1,w
  6587  1F78  0084               	movwf	4
  6588  1F79  0185               	clrf	5
  6589  1F7A  3002               	movlw	2
  6590  1F7B  0781               	addwf	1,f
  6591  1F7C  3F00               	moviw [0]fsr0
  6592  1F7D  0022               	movlb	2	; select bank2
  6593  1F7E  00E8               	movwf	_prec^(0+256)
  6594  1F7F  3F01               	moviw [1]fsr0
  6595  1F80  00E9               	movwf	(_prec+1)^(0+256)
  6596                           
  6597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6598  1F81  2FC5               	goto	l6986
  6599  1F82                     l6976:	
  6600                           
  6601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6602  1F82  0859               	movf	vfpfcnvrt@fmt,w
  6603  1F83  0086               	movwf	6
  6604  1F84  0187               	clrf	7
  6605  1F85  3F40               	moviw [0]fsr1
  6606  1F86  00F7               	movwf	atoi@s
  6607  1F87  3F41               	moviw [1]fsr1
  6608  1F88  00F8               	movwf	atoi@s+1
  6609  1F89  31AA  22D7  319E   	fcall	_atoi
  6610  1F8C  0878               	movf	?_atoi+1,w
  6611  1F8D  0022               	movlb	2	; select bank2
  6612  1F8E  00E9               	movwf	(_prec+1)^(0+256)
  6613  1F8F  0877               	movf	?_atoi,w
  6614  1F90  00E8               	movwf	_prec^(0+256)
  6615                           
  6616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6617  1F91  2F9B               	goto	l6980
  6618  1F92                     l6978:	
  6619                           
  6620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6621  1F92  0020               	movlb	0	; select bank0
  6622  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6623  1F94  0086               	movwf	6
  6624  1F95  0187               	clrf	7
  6625  1F96  3001               	movlw	1
  6626  1F97  0781               	addwf	1,f
  6627  1F98  3141               	addfsr 1,1
  6628  1F99  1803               	skipnc
  6629  1F9A  0A81               	incf	1,f
  6630  1F9B                     l6980:	
  6631  1F9B  0020               	movlb	0	; select bank0
  6632  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6633  1F9D  0086               	movwf	6
  6634  1F9E  0187               	clrf	7
  6635  1F9F  3F40               	moviw [0]fsr1
  6636  1FA0  00DB               	movwf	??_vfpfcnvrt
  6637  1FA1  3F41               	moviw [1]fsr1
  6638  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6639  1FA3  085B               	movf	??_vfpfcnvrt,w
  6640  1FA4  0084               	movwf	4
  6641  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6642  1FA6  0085               	movwf	5
  6643  1FA7  0800               	movf	0,w	;code access
  6644  1FA8  3ED0               	addlw	208
  6645  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6646  1FAA  30FF               	movlw	255
  6647  1FAB  1803               	skipnc
  6648  1FAC  3000               	movlw	0
  6649  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6650  1FAE  3000               	movlw	0
  6651  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6652  1FB0  300A               	movlw	10
  6653  1FB1  1903               	skipnz
  6654  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6655  1FB3  1803               	btfsc	3,0
  6656  1FB4  2FB7               	goto	u8750
  6657  1FB5  3001               	movlw	1
  6658  1FB6  2FB8               	goto	u8760
  6659  1FB7                     u8750:	
  6660  1FB7  3000               	movlw	0
  6661  1FB8                     u8760:	
  6662  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6663  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6664  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6665  1FBB  0021               	movlb	1	; select bank1
  6666  1FBC  00A6               	movwf	_vfpfcnvrt$1372^(0+128)
  6667  1FBD  0020               	movlb	0	; select bank0
  6668  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6669  1FBF  0021               	movlb	1	; select bank1
  6670  1FC0  00A7               	movwf	(_vfpfcnvrt$1372+1)^(0+128)
  6671  1FC1  0826               	movf	_vfpfcnvrt$1372^(0+128),w
  6672  1FC2  0427               	iorwf	(_vfpfcnvrt$1372+1)^(0+128),w
  6673  1FC3  1D03               	btfss	3,2
  6674  1FC4  2F92               	goto	l6978
  6675  1FC5                     l6986:	
  6676                           
  6677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6678  1FC5  0020               	movlb	0	; select bank0
  6679  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6680  1FC7  0086               	movwf	6
  6681  1FC8  0187               	clrf	7
  6682  1FC9  3F40               	moviw [0]fsr1
  6683  1FCA  00DB               	movwf	??_vfpfcnvrt
  6684  1FCB  3F41               	moviw [1]fsr1
  6685  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6686  1FCD  085B               	movf	??_vfpfcnvrt,w
  6687  1FCE  0084               	movwf	4
  6688  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6689  1FD0  0085               	movwf	5
  6690  1FD1  0012               	moviw fsr0++
  6691  1FD2  3A63               	xorlw	99
  6692  1FD3  31A4  1D03         	btfss	3,2
  6693  1FD5  2CD9               	goto	l6996
  6694                           
  6695                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6696  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6697  1FD7  0086               	movwf	6
  6698  1FD8  0187               	clrf	7
  6699  1FD9  3001               	movlw	1
  6700  1FDA  0781               	addwf	1,f
  6701  1FDB  3141               	addfsr 1,1
  6702  1FDC  1803               	skipnc
  6703  1FDD  0A81               	incf	1,f
  6704                           
  6705                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6706  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6707  1FDF  0086               	movwf	6
  6708  1FE0  0187               	clrf	7
  6709  1FE1  0801               	movf	1,w
  6710  1FE2  0084               	movwf	4
  6711  1FE3  0185               	clrf	5
  6712  1FE4  3002               	movlw	2
  6713  1FE5  0781               	addwf	1,f
  6714  1FE6  0800               	movf	0,w
  6715  1FE7  00DB               	movwf	??_vfpfcnvrt
  6716  1FE8  085B               	movf	??_vfpfcnvrt,w
  6717  1FE9  0021               	movlb	1	; select bank1
  6718  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6719                           
  6720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6721  1FEB  0020               	movlb	0	; select bank0
  6722  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6723  1FED  00B1               	movwf	ctoa@fp+1
  6724  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6725  1FEF  00B0               	movwf	ctoa@fp
  6726  1FF0  0021               	movlb	1	; select bank1
  6727  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6728  1FF2  0020               	movlb	0	; select bank0
  6729  1FF3  00DB               	movwf	??_vfpfcnvrt
  6730  1FF4  085B               	movf	??_vfpfcnvrt,w
  6731  1FF5  00B2               	movwf	ctoa@c
  6732  1FF6  31B3  23BF         	fcall	_ctoa
  6733  1FF8  0020               	movlb	0	; select bank0
  6734  1FF9  0831               	movf	?_ctoa+1,w
  6735  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6736  1FFB  0830               	movf	?_ctoa,w
  6737  1FFC  00D7               	movwf	?_vfpfcnvrt
  6738  1FFD  0008               	return
  6739  1FFE                     L7:	
  6740  1FFE                     L6:	
  6741  1FFE  318F  2FDD         	ljmp	l7264
  6742                           
  6743                           	psect	text8
  6744  1A28                     __ptext8:	
  6745 ;; *************** function _xtoa *****************
  6746 ;; Defined at:
  6747 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6748 ;; Parameters:    Size  Location     Type
  6749 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6750 ;;		 -> vsnprintf@f(6), 
  6751 ;;  d               8   18[BANK0 ] unsigned long long 
  6752 ;;  x               1   26[BANK0 ] unsigned char 
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  n               8   43[BANK0 ] unsigned long long 
  6755 ;;  c               2   53[BANK0 ] int 
  6756 ;;  i               2   51[BANK0 ] int 
  6757 ;;  w               2   41[BANK0 ] int 
  6758 ;;  p               2   39[BANK0 ] int 
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  2   16[BANK0 ] int 
  6761 ;; Registers used:
  6762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6768 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6769 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6770 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6771 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6772 ;;Total ram usage:       39 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:    5
  6775 ;; This function calls:
  6776 ;;		_isalpha
  6777 ;;		_isupper
  6778 ;;		_pad
  6779 ;;		_toupper
  6780 ;; This function is called by:
  6781 ;;		_vfpfcnvrt
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           
  6786                           ;psect for function _xtoa
  6787  1A28                     _xtoa:	
  6788                           
  6789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6790                           
  6791                           ;incstack = 0
  6792                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6793  1A28  0022               	movlb	2	; select bank2
  6794  1A29  1BE9               	btfsc	(_prec+1)^(0+256),7
  6795  1A2A  2A2F               	goto	l902
  6796                           
  6797                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6798  1A2B  30FD               	movlw	253
  6799  1A2C  05EA               	andwf	_flags^(0+256),f
  6800  1A2D  30FF               	movlw	255
  6801  1A2E  05EB               	andwf	(_flags+1)^(0+256),f
  6802  1A2F                     l902:	
  6803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6804                           
  6805                           
  6806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6807  1A2F  0869               	movf	(_prec+1)^(0+256),w
  6808  1A30  3A80               	xorlw	128
  6809  1A31  0020               	movlb	0	; select bank0
  6810  1A32  00BB               	movwf	??_xtoa
  6811  1A33  3080               	movlw	128
  6812  1A34  023B               	subwf	??_xtoa,w
  6813  1A35  1D03               	skipz
  6814  1A36  2A3A               	goto	u8425
  6815  1A37  3001               	movlw	1
  6816  1A38  0022               	movlb	2	; select bank2
  6817  1A39  0268               	subwf	_prec^(0+256),w
  6818  1A3A                     u8425:	
  6819  1A3A  1803               	skipnc
  6820  1A3B  2A42               	goto	l6808
  6821  1A3C  3001               	movlw	1
  6822  1A3D  0020               	movlb	0	; select bank0
  6823  1A3E  00C7               	movwf	xtoa@p
  6824  1A3F  3000               	movlw	0
  6825  1A40  00C8               	movwf	xtoa@p+1
  6826  1A41  2A4A               	goto	l906
  6827  1A42                     l6808:	
  6828  1A42  0022               	movlb	2	; select bank2
  6829  1A43  0869               	movf	(_prec+1)^(0+256),w
  6830  1A44  0020               	movlb	0	; select bank0
  6831  1A45  00C8               	movwf	xtoa@p+1
  6832  1A46  0022               	movlb	2	; select bank2
  6833  1A47  0868               	movf	_prec^(0+256),w
  6834  1A48  0020               	movlb	0	; select bank0
  6835  1A49  00C7               	movwf	xtoa@p
  6836  1A4A                     l906:	
  6837                           
  6838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6839  1A4A  0022               	movlb	2	; select bank2
  6840  1A4B  0867               	movf	(_width+1)^(0+256),w
  6841  1A4C  0020               	movlb	0	; select bank0
  6842  1A4D  00CA               	movwf	xtoa@w+1
  6843  1A4E  0022               	movlb	2	; select bank2
  6844  1A4F  0866               	movf	_width^(0+256),w
  6845  1A50  0020               	movlb	0	; select bank0
  6846  1A51  00C9               	movwf	xtoa@w
  6847                           
  6848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6849  1A52  0022               	movlb	2	; select bank2
  6850  1A53  1E6A               	btfss	_flags^(0+256),4
  6851  1A54  2A5A               	goto	l6814
  6852                           
  6853                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6854  1A55  30FE               	movlw	254
  6855  1A56  0020               	movlb	0	; select bank0
  6856  1A57  07C9               	addwf	xtoa@w,f
  6857  1A58  30FF               	movlw	255
  6858  1A59  3DCA               	addwfc	xtoa@w+1,f
  6859  1A5A                     l6814:	
  6860                           
  6861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6862  1A5A  0020               	movlb	0	; select bank0
  6863  1A5B  0832               	movf	xtoa@d,w
  6864  1A5C  00CB               	movwf	xtoa@n
  6865  1A5D  0833               	movf	xtoa@d+1,w
  6866  1A5E  00CC               	movwf	xtoa@n+1
  6867  1A5F  0834               	movf	xtoa@d+2,w
  6868  1A60  00CD               	movwf	xtoa@n+2
  6869  1A61  0835               	movf	xtoa@d+3,w
  6870  1A62  00CE               	movwf	xtoa@n+3
  6871  1A63  0836               	movf	xtoa@d+4,w
  6872  1A64  00CF               	movwf	xtoa@n+4
  6873  1A65  0837               	movf	xtoa@d+5,w
  6874  1A66  00D0               	movwf	xtoa@n+5
  6875  1A67  0838               	movf	xtoa@d+6,w
  6876  1A68  00D1               	movwf	xtoa@n+6
  6877  1A69  0839               	movf	xtoa@d+7,w
  6878  1A6A  00D2               	movwf	xtoa@n+7
  6879                           
  6880                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6881  1A6B  301F               	movlw	31
  6882  1A6C  00D3               	movwf	xtoa@i
  6883  1A6D  3000               	movlw	0
  6884  1A6E  00D4               	movwf	xtoa@i+1
  6885                           
  6886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6887  1A6F  0024               	movlb	4	; select bank4
  6888  1A70  01D3               	clrf	(_dbuf^(0+512)+31)
  6889                           
  6890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6891  1A71  2B1C               	goto	l6846
  6892  1A72                     l6818:	
  6893                           
  6894                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6895  1A72  30FF               	movlw	255
  6896  1A73  0020               	movlb	0	; select bank0
  6897  1A74  07D3               	addwf	xtoa@i,f
  6898  1A75  30FF               	movlw	255
  6899  1A76  3DD4               	addwfc	xtoa@i+1,f
  6900                           
  6901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6902  1A77  300F               	movlw	15
  6903  1A78  054B               	andwf	xtoa@n,w
  6904  1A79  00D5               	movwf	xtoa@c
  6905  1A7A  3000               	movlw	0
  6906  1A7B  054C               	andwf	xtoa@n+1,w
  6907  1A7C  00D6               	movwf	xtoa@c+1
  6908                           
  6909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6910  1A7D  0856               	movf	xtoa@c+1,w
  6911  1A7E  3A80               	xorlw	128
  6912  1A7F  00BB               	movwf	??_xtoa
  6913  1A80  3080               	movlw	128
  6914  1A81  023B               	subwf	??_xtoa,w
  6915  1A82  1D03               	skipz
  6916  1A83  2A86               	goto	u8445
  6917  1A84  300A               	movlw	10
  6918  1A85  0255               	subwf	xtoa@c,w
  6919  1A86                     u8445:	
  6920  1A86  1C03               	skipc
  6921  1A87  2A8C               	goto	l6822
  6922  1A88  0020               	movlb	0	; select bank0
  6923  1A89  0855               	movf	xtoa@c,w
  6924  1A8A  3E57               	addlw	87
  6925  1A8B  2A8F               	goto	L1
  6926  1A8C                     l6822:	
  6927  1A8C  0020               	movlb	0	; select bank0
  6928  1A8D  0855               	movf	xtoa@c,w
  6929  1A8E  3E30               	addlw	48
  6930  1A8F                     L1:	
  6931  1A8F  00D5               	movwf	xtoa@c
  6932  1A90  3000               	movlw	0
  6933  1A91  3D56               	addwfc	xtoa@c+1,w
  6934  1A92  00D6               	movwf	xtoa@c+1
  6935  1A93  083A               	movf	xtoa@x,w
  6936  1A94  3EBF               	addlw	191
  6937  1A95  00BB               	movwf	??_xtoa
  6938  1A96  30FF               	movlw	255
  6939  1A97  1803               	skipnc
  6940  1A98  3000               	movlw	0
  6941  1A99  00BC               	movwf	??_xtoa+1
  6942  1A9A  3000               	movlw	0
  6943  1A9B  023C               	subwf	??_xtoa+1,w
  6944  1A9C  301A               	movlw	26
  6945  1A9D  1903               	skipnz
  6946  1A9E  023B               	subwf	??_xtoa,w
  6947  1A9F  1803               	btfsc	3,0
  6948  1AA0  2AA3               	goto	u8450
  6949  1AA1  3001               	movlw	1
  6950  1AA2  2AA4               	goto	u8460
  6951  1AA3                     u8450:	
  6952  1AA3  3000               	movlw	0
  6953  1AA4                     u8460:	
  6954  1AA4  00BD               	movwf	??_xtoa+2
  6955  1AA5  01BE               	clrf	??_xtoa+3
  6956  1AA6  083D               	movf	??_xtoa+2,w
  6957  1AA7  00C3               	movwf	_xtoa$1356
  6958  1AA8  083E               	movf	??_xtoa+3,w
  6959  1AA9  00C4               	movwf	_xtoa$1356+1
  6960  1AAA  0843               	movf	_xtoa$1356,w
  6961  1AAB  0444               	iorwf	_xtoa$1356+1,w
  6962  1AAC  1903               	btfsc	3,2
  6963  1AAD  2ADA               	goto	l6838
  6964  1AAE  3020               	movlw	32
  6965  1AAF  0455               	iorwf	xtoa@c,w
  6966  1AB0  00BB               	movwf	??_xtoa
  6967  1AB1  3000               	movlw	0
  6968  1AB2  0456               	iorwf	xtoa@c+1,w
  6969  1AB3  00BC               	movwf	??_xtoa+1
  6970  1AB4  083B               	movf	??_xtoa,w
  6971  1AB5  3E9F               	addlw	159
  6972  1AB6  00BD               	movwf	??_xtoa+2
  6973  1AB7  30FF               	movlw	255
  6974  1AB8  3D3C               	addwfc	??_xtoa+1,w
  6975  1AB9  00BE               	movwf	??_xtoa+3
  6976  1ABA  3000               	movlw	0
  6977  1ABB  023E               	subwf	??_xtoa+3,w
  6978  1ABC  301A               	movlw	26
  6979  1ABD  1903               	skipnz
  6980  1ABE  023D               	subwf	??_xtoa+2,w
  6981  1ABF  1803               	btfsc	3,0
  6982  1AC0  2AC3               	goto	u8480
  6983  1AC1  3001               	movlw	1
  6984  1AC2  2AC4               	goto	u8490
  6985  1AC3                     u8480:	
  6986  1AC3  3000               	movlw	0
  6987  1AC4                     u8490:	
  6988  1AC4  00BF               	movwf	??_xtoa+4
  6989  1AC5  01C0               	clrf	??_xtoa+5
  6990  1AC6  083F               	movf	??_xtoa+4,w
  6991  1AC7  00C5               	movwf	_xtoa$1357
  6992  1AC8  0840               	movf	??_xtoa+5,w
  6993  1AC9  00C6               	movwf	_xtoa$1357+1
  6994  1ACA  0845               	movf	_xtoa$1357,w
  6995  1ACB  0446               	iorwf	_xtoa$1357+1,w
  6996  1ACC  1903               	btfsc	3,2
  6997  1ACD  2ADA               	goto	l6838
  6998                           
  6999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7000  1ACE  0856               	movf	xtoa@c+1,w
  7001  1ACF  00F8               	movwf	toupper@c+1
  7002  1AD0  0855               	movf	xtoa@c,w
  7003  1AD1  00F7               	movwf	toupper@c
  7004  1AD2  3190  2001  319A   	fcall	_toupper
  7005  1AD5  0878               	movf	?_toupper+1,w
  7006  1AD6  0020               	movlb	0	; select bank0
  7007  1AD7  00D6               	movwf	xtoa@c+1
  7008  1AD8  0877               	movf	?_toupper,w
  7009  1AD9  00D5               	movwf	xtoa@c
  7010  1ADA                     l6838:	
  7011                           
  7012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7013  1ADA  0855               	movf	xtoa@c,w
  7014  1ADB  00BB               	movwf	??_xtoa
  7015  1ADC  0853               	movf	xtoa@i,w
  7016  1ADD  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7017  1ADE  0086               	movwf	6
  7018  1ADF  3002               	movlw	2	; select bank4/5
  7019  1AE0  0087               	movwf	7
  7020  1AE1  083B               	movf	??_xtoa,w
  7021  1AE2  0081               	movwf	1
  7022                           
  7023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7024  1AE3  30FF               	movlw	255
  7025  1AE4  07C7               	addwf	xtoa@p,f
  7026  1AE5  30FF               	movlw	255
  7027  1AE6  3DC8               	addwfc	xtoa@p+1,f
  7028                           
  7029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7030  1AE7  30FF               	movlw	255
  7031  1AE8  07C9               	addwf	xtoa@w,f
  7032  1AE9  30FF               	movlw	255
  7033  1AEA  3DCA               	addwfc	xtoa@w+1,f
  7034                           
  7035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7036  1AEB  304B               	movlw	low xtoa@n
  7037  1AEC  0086               	movwf	6
  7038  1AED  3000               	movlw	high xtoa@n
  7039  1AEE  0087               	movwf	7
  7040  1AEF  3F40               	moviw [0]fsr1
  7041  1AF0  00BB               	movwf	??_xtoa
  7042  1AF1  3F41               	moviw [1]fsr1
  7043  1AF2  00BC               	movwf	??_xtoa+1
  7044  1AF3  3F42               	moviw [2]fsr1
  7045  1AF4  00BD               	movwf	??_xtoa+2
  7046  1AF5  3F43               	moviw [3]fsr1
  7047  1AF6  00BE               	movwf	??_xtoa+3
  7048  1AF7  3F44               	moviw [4]fsr1
  7049  1AF8  00BF               	movwf	??_xtoa+4
  7050  1AF9  3F45               	moviw [5]fsr1
  7051  1AFA  00C0               	movwf	??_xtoa+5
  7052  1AFB  3F46               	moviw [6]fsr1
  7053  1AFC  00C1               	movwf	??_xtoa+6
  7054  1AFD  3F47               	moviw [7]fsr1
  7055  1AFE  00C2               	movwf	??_xtoa+7
  7056  1AFF  3004               	movlw	4
  7057  1B00                     u8515:	
  7058  1B00  0020               	movlb	0	; select bank0
  7059  1B01  36C2               	lsrf	??_xtoa+7,f
  7060  1B02  0CC1               	rrf	??_xtoa+6,f
  7061  1B03  0CC0               	rrf	??_xtoa+5,f
  7062  1B04  0CBF               	rrf	??_xtoa+4,f
  7063  1B05  0CBE               	rrf	??_xtoa+3,f
  7064  1B06  0CBD               	rrf	??_xtoa+2,f
  7065  1B07  0CBC               	rrf	??_xtoa+1,f
  7066  1B08  0CBB               	rrf	??_xtoa,f
  7067  1B09  0B89               	decfsz	9,f
  7068  1B0A  2B00               	goto	u8515
  7069  1B0B  0020               	movlb	0	; select bank0
  7070  1B0C  0842               	movf	??_xtoa+7,w
  7071  1B0D  00D2               	movwf	xtoa@n+7
  7072  1B0E  0841               	movf	??_xtoa+6,w
  7073  1B0F  00D1               	movwf	xtoa@n+6
  7074  1B10  0840               	movf	??_xtoa+5,w
  7075  1B11  00D0               	movwf	xtoa@n+5
  7076  1B12  083F               	movf	??_xtoa+4,w
  7077  1B13  00CF               	movwf	xtoa@n+4
  7078  1B14  083E               	movf	??_xtoa+3,w
  7079  1B15  00CE               	movwf	xtoa@n+3
  7080  1B16  083D               	movf	??_xtoa+2,w
  7081  1B17  00CD               	movwf	xtoa@n+2
  7082  1B18  083C               	movf	??_xtoa+1,w
  7083  1B19  00CC               	movwf	xtoa@n+1
  7084  1B1A  083B               	movf	??_xtoa,w
  7085  1B1B  00CB               	movwf	xtoa@n
  7086  1B1C                     l6846:	
  7087                           
  7088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7089  1B1C  0020               	movlb	0	; select bank0
  7090  1B1D  0854               	movf	xtoa@i+1,w
  7091  1B1E  3A80               	xorlw	128
  7092  1B1F  00BB               	movwf	??_xtoa
  7093  1B20  3080               	movlw	128
  7094  1B21  023B               	subwf	??_xtoa,w
  7095  1B22  1D03               	skipz
  7096  1B23  2B26               	goto	u8525
  7097  1B24  3002               	movlw	2
  7098  1B25  0253               	subwf	xtoa@i,w
  7099  1B26                     u8525:	
  7100  1B26  1C03               	skipc
  7101  1B27  2B4D               	goto	l927
  7102  1B28  0020               	movlb	0	; select bank0
  7103  1B29  084B               	movf	xtoa@n,w
  7104  1B2A  044C               	iorwf	xtoa@n+1,w
  7105  1B2B  044D               	iorwf	xtoa@n+2,w
  7106  1B2C  044E               	iorwf	xtoa@n+3,w
  7107  1B2D  044F               	iorwf	xtoa@n+4,w
  7108  1B2E  0450               	iorwf	xtoa@n+5,w
  7109  1B2F  0451               	iorwf	xtoa@n+6,w
  7110  1B30  0452               	iorwf	xtoa@n+7,w
  7111  1B31  1D03               	skipz
  7112  1B32  2A72               	goto	l6818
  7113  1B33  0848               	movf	xtoa@p+1,w
  7114  1B34  3A80               	xorlw	128
  7115  1B35  00BB               	movwf	??_xtoa
  7116  1B36  3080               	movlw	128
  7117  1B37  023B               	subwf	??_xtoa,w
  7118  1B38  1D03               	skipz
  7119  1B39  2B3C               	goto	u8545
  7120  1B3A  3001               	movlw	1
  7121  1B3B  0247               	subwf	xtoa@p,w
  7122  1B3C                     u8545:	
  7123  1B3C  1803               	skipnc
  7124  1B3D  2A72               	goto	l6818
  7125  1B3E  0020               	movlb	0	; select bank0
  7126  1B3F  084A               	movf	xtoa@w+1,w
  7127  1B40  3A80               	xorlw	128
  7128  1B41  00BB               	movwf	??_xtoa
  7129  1B42  3080               	movlw	128
  7130  1B43  023B               	subwf	??_xtoa,w
  7131  1B44  1D03               	skipz
  7132  1B45  2B48               	goto	u8555
  7133  1B46  3001               	movlw	1
  7134  1B47  0249               	subwf	xtoa@w,w
  7135  1B48                     u8555:	
  7136  1B48  1C03               	skipc
  7137  1B49  2B4D               	goto	l927
  7138  1B4A  0022               	movlb	2	; select bank2
  7139  1B4B  18EA               	btfsc	_flags^(0+256),1
  7140  1B4C  2A72               	goto	l6818
  7141  1B4D                     l927:	
  7142                           
  7143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  7144  1B4D  0022               	movlb	2	; select bank2
  7145  1B4E  1E6A               	btfss	_flags^(0+256),4
  7146  1B4F  2B6B               	goto	l6862
  7147                           
  7148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  7149  1B50  30FF               	movlw	255
  7150  1B51  0020               	movlb	0	; select bank0
  7151  1B52  07D3               	addwf	xtoa@i,f
  7152  1B53  30FF               	movlw	255
  7153  1B54  3DD4               	addwfc	xtoa@i+1,f
  7154                           
  7155                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  7156  1B55  083A               	movf	xtoa@x,w
  7157  1B56  00BB               	movwf	??_xtoa
  7158  1B57  0853               	movf	xtoa@i,w
  7159  1B58  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7160  1B59  0086               	movwf	6
  7161  1B5A  3002               	movlw	2	; select bank4/5
  7162  1B5B  0087               	movwf	7
  7163  1B5C  083B               	movf	??_xtoa,w
  7164  1B5D  0081               	movwf	1
  7165                           
  7166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  7167  1B5E  30FF               	movlw	255
  7168  1B5F  07D3               	addwf	xtoa@i,f
  7169  1B60  30FF               	movlw	255
  7170  1B61  3DD4               	addwfc	xtoa@i+1,f
  7171                           
  7172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  7173  1B62  3030               	movlw	48
  7174  1B63  00BB               	movwf	??_xtoa
  7175  1B64  0853               	movf	xtoa@i,w
  7176  1B65  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7177  1B66  0086               	movwf	6
  7178  1B67  3002               	movlw	2	; select bank4/5
  7179  1B68  0087               	movwf	7
  7180  1B69  083B               	movf	??_xtoa,w
  7181  1B6A  0081               	movwf	1
  7182  1B6B                     l6862:	
  7183                           
  7184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  7185  1B6B  0020               	movlb	0	; select bank0
  7186  1B6C  0831               	movf	xtoa@fp+1,w
  7187  1B6D  00A7               	movwf	pad@fp+1
  7188  1B6E  0830               	movf	xtoa@fp,w
  7189  1B6F  00A6               	movwf	pad@fp
  7190  1B70  0853               	movf	xtoa@i,w
  7191  1B71  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7192  1B72  00BB               	movwf	??_xtoa
  7193  1B73  083B               	movf	??_xtoa,w
  7194  1B74  00A8               	movwf	pad@buf
  7195  1B75  084A               	movf	xtoa@w+1,w
  7196  1B76  00AA               	movwf	pad@p+1
  7197  1B77  0849               	movf	xtoa@w,w
  7198  1B78  00A9               	movwf	pad@p
  7199  1B79  31B5  2562         	fcall	_pad
  7200  1B7B  0020               	movlb	0	; select bank0
  7201  1B7C  0827               	movf	?_pad+1,w
  7202  1B7D  00B1               	movwf	?_xtoa+1
  7203  1B7E  0826               	movf	?_pad,w
  7204  1B7F  00B0               	movwf	?_xtoa
  7205  1B80  0008               	return
  7206  1B81                     __end_of_xtoa:	
  7207                           
  7208                           	psect	text9
  7209  1001                     __ptext9:	
  7210 ;; *************** function _toupper *****************
  7211 ;; Defined at:
  7212 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  7213 ;; Parameters:    Size  Location     Type
  7214 ;;  c               2    7[COMMON] int 
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;		None
  7217 ;; Return value:  Size  Location     Type
  7218 ;;                  2    7[COMMON] int 
  7219 ;; Registers used:
  7220 ;;		wreg, status,2, status,0
  7221 ;; Tracked objects:
  7222 ;;		On entry : 0/0
  7223 ;;		On exit  : 0/0
  7224 ;;		Unchanged: 0/0
  7225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7228 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7229 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7230 ;;Total ram usage:        8 bytes
  7231 ;; Hardware stack levels used:    1
  7232 ;; Hardware stack levels required when called:    2
  7233 ;; This function calls:
  7234 ;;		_islower
  7235 ;; This function is called by:
  7236 ;;		_xtoa
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           
  7241                           ;psect for function _toupper
  7242  1001                     _toupper:	
  7243                           
  7244                           ;incstack = 0
  7245                           ; Regs used in _toupper: [wreg+status,2+status,0]
  7246  1001  0877               	movf	toupper@c,w
  7247  1002  3E9F               	addlw	159
  7248  1003  0020               	movlb	0	; select bank0
  7249  1004  00A0               	movwf	??_toupper
  7250  1005  30FF               	movlw	255
  7251  1006  3D78               	addwfc	toupper@c+1,w
  7252  1007  00A1               	movwf	??_toupper+1
  7253  1008  3000               	movlw	0
  7254  1009  0221               	subwf	??_toupper+1,w
  7255  100A  301A               	movlw	26
  7256  100B  1903               	skipnz
  7257  100C  0220               	subwf	??_toupper,w
  7258  100D  1803               	btfsc	3,0
  7259  100E  2811               	goto	u8040
  7260  100F  3001               	movlw	1
  7261  1010  2812               	goto	u8050
  7262  1011                     u8040:	
  7263  1011  3000               	movlw	0
  7264  1012                     u8050:	
  7265  1012  00A2               	movwf	??_toupper+2
  7266  1013  01A3               	clrf	??_toupper+3
  7267  1014  0822               	movf	??_toupper+2,w
  7268  1015  00F9               	movwf	_toupper$1906
  7269  1016  0823               	movf	??_toupper+3,w
  7270  1017  00FA               	movwf	_toupper$1906+1
  7271  1018  0879               	movf	_toupper$1906,w
  7272  1019  047A               	iorwf	_toupper$1906+1,w
  7273  101A  1903               	btfsc	3,2
  7274  101B  0008               	return
  7275  101C  305F               	movlw	95
  7276  101D  0577               	andwf	toupper@c,w
  7277  101E  00F7               	movwf	?_toupper
  7278  101F  3000               	movlw	0
  7279  1020  0578               	andwf	toupper@c+1,w
  7280  1021  00F8               	movwf	?_toupper+1
  7281  1022  0008               	return
  7282  1023                     __end_of_toupper:	
  7283                           
  7284                           	psect	text10
  7285  3238                     __ptext10:	
  7286 ;; *************** function _islower *****************
  7287 ;; Defined at:
  7288 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  c               2    1[COMMON] int 
  7291 ;; Auto vars:     Size  Location     Type
  7292 ;;		None
  7293 ;; Return value:  Size  Location     Type
  7294 ;;                  2    1[COMMON] int 
  7295 ;; Registers used:
  7296 ;;		wreg, status,2, status,0
  7297 ;; Tracked objects:
  7298 ;;		On entry : 0/0
  7299 ;;		On exit  : 0/0
  7300 ;;		Unchanged: 0/0
  7301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7302 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7304 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7305 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7306 ;;Total ram usage:        6 bytes
  7307 ;; Hardware stack levels used:    1
  7308 ;; Hardware stack levels required when called:    1
  7309 ;; This function calls:
  7310 ;;		Nothing
  7311 ;; This function is called by:
  7312 ;;		_toupper
  7313 ;; This function uses a non-reentrant model
  7314 ;;
  7315                           
  7316                           
  7317                           ;psect for function _islower
  7318  3238                     _islower:	
  7319                           
  7320                           ;incstack = 0
  7321                           ; Regs used in _islower: [wreg+status,2+status,0]
  7322  3238  0871               	movf	islower@c,w
  7323  3239  3E9F               	addlw	159
  7324  323A  00F3               	movwf	??_islower
  7325  323B  30FF               	movlw	255
  7326  323C  3D72               	addwfc	islower@c+1,w
  7327  323D  00F4               	movwf	??_islower+1
  7328  323E  3000               	movlw	0
  7329  323F  0274               	subwf	??_islower+1,w
  7330  3240  301A               	movlw	26
  7331  3241  1903               	skipnz
  7332  3242  0273               	subwf	??_islower,w
  7333  3243  1803               	btfsc	3,0
  7334  3244  2A47               	goto	u7980
  7335  3245  3001               	movlw	1
  7336  3246  2A48               	goto	u7990
  7337  3247                     u7980:	
  7338  3247  3000               	movlw	0
  7339  3248                     u7990:	
  7340  3248  00F5               	movwf	??_islower+2
  7341  3249  01F6               	clrf	??_islower+3
  7342  324A  0875               	movf	??_islower+2,w
  7343  324B  00F1               	movwf	?_islower
  7344  324C  0876               	movf	??_islower+3,w
  7345  324D  00F2               	movwf	?_islower+1
  7346  324E  0008               	return
  7347  324F                     __end_of_islower:	
  7348                           
  7349                           	psect	text11
  7350  3221                     __ptext11:	
  7351 ;; *************** function _isupper *****************
  7352 ;; Defined at:
  7353 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;  c               2    1[COMMON] int 
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;		None
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  2    1[COMMON] int 
  7360 ;; Registers used:
  7361 ;;		wreg, status,2, status,0
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7369 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7370 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7371 ;;Total ram usage:        6 bytes
  7372 ;; Hardware stack levels used:    1
  7373 ;; Hardware stack levels required when called:    1
  7374 ;; This function calls:
  7375 ;;		Nothing
  7376 ;; This function is called by:
  7377 ;;		_xtoa
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           
  7382                           ;psect for function _isupper
  7383  3221                     _isupper:	
  7384                           
  7385                           ;incstack = 0
  7386                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7387  3221  0871               	movf	isupper@c,w
  7388  3222  3EBF               	addlw	191
  7389  3223  00F3               	movwf	??_isupper
  7390  3224  30FF               	movlw	255
  7391  3225  3D72               	addwfc	isupper@c+1,w
  7392  3226  00F4               	movwf	??_isupper+1
  7393  3227  3000               	movlw	0
  7394  3228  0274               	subwf	??_isupper+1,w
  7395  3229  301A               	movlw	26
  7396  322A  1903               	skipnz
  7397  322B  0273               	subwf	??_isupper,w
  7398  322C  1803               	btfsc	3,0
  7399  322D  2A30               	goto	u4150
  7400  322E  3001               	movlw	1
  7401  322F  2A31               	goto	u4160
  7402  3230                     u4150:	
  7403  3230  3000               	movlw	0
  7404  3231                     u4160:	
  7405  3231  00F5               	movwf	??_isupper+2
  7406  3232  01F6               	clrf	??_isupper+3
  7407  3233  0875               	movf	??_isupper+2,w
  7408  3234  00F1               	movwf	?_isupper
  7409  3235  0876               	movf	??_isupper+3,w
  7410  3236  00F2               	movwf	?_isupper+1
  7411  3237  0008               	return
  7412  3238                     __end_of_isupper:	
  7413                           
  7414                           	psect	text12
  7415  32D6                     __ptext12:	
  7416 ;; *************** function _isalpha *****************
  7417 ;; Defined at:
  7418 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7419 ;; Parameters:    Size  Location     Type
  7420 ;;  c               2    1[COMMON] int 
  7421 ;; Auto vars:     Size  Location     Type
  7422 ;;		None
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  2    1[COMMON] int 
  7425 ;; Registers used:
  7426 ;;		wreg, status,2, status,0
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7432 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7434 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7435 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7436 ;;Total ram usage:        8 bytes
  7437 ;; Hardware stack levels used:    1
  7438 ;; Hardware stack levels required when called:    1
  7439 ;; This function calls:
  7440 ;;		Nothing
  7441 ;; This function is called by:
  7442 ;;		_xtoa
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           
  7447                           ;psect for function _isalpha
  7448  32D6                     _isalpha:	
  7449                           
  7450                           ;incstack = 0
  7451                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7452  32D6  3020               	movlw	32
  7453  32D7  0471               	iorwf	isalpha@c,w
  7454  32D8  00F3               	movwf	??_isalpha
  7455  32D9  3000               	movlw	0
  7456  32DA  0472               	iorwf	isalpha@c+1,w
  7457  32DB  00F4               	movwf	??_isalpha+1
  7458  32DC  0873               	movf	??_isalpha,w
  7459  32DD  3E9F               	addlw	159
  7460  32DE  00F5               	movwf	??_isalpha+2
  7461  32DF  30FF               	movlw	255
  7462  32E0  3D74               	addwfc	??_isalpha+1,w
  7463  32E1  00F6               	movwf	??_isalpha+3
  7464  32E2  3000               	movlw	0
  7465  32E3  0276               	subwf	??_isalpha+3,w
  7466  32E4  301A               	movlw	26
  7467  32E5  1903               	skipnz
  7468  32E6  0275               	subwf	??_isalpha+2,w
  7469  32E7  1803               	btfsc	3,0
  7470  32E8  2AEB               	goto	u4170
  7471  32E9  3001               	movlw	1
  7472  32EA  2AEC               	goto	u4180
  7473  32EB                     u4170:	
  7474  32EB  3000               	movlw	0
  7475  32EC                     u4180:	
  7476  32EC  00F7               	movwf	??_isalpha+4
  7477  32ED  01F8               	clrf	??_isalpha+5
  7478  32EE  0877               	movf	??_isalpha+4,w
  7479  32EF  00F1               	movwf	?_isalpha
  7480  32F0  0878               	movf	??_isalpha+5,w
  7481  32F1  00F2               	movwf	?_isalpha+1
  7482  32F2  0008               	return
  7483  32F3                     __end_of_isalpha:	
  7484                           
  7485                           	psect	text13
  7486  2214                     __ptext13:	
  7487 ;; *************** function _utoa *****************
  7488 ;; Defined at:
  7489 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7490 ;; Parameters:    Size  Location     Type
  7491 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7492 ;;		 -> vsnprintf@f(6), 
  7493 ;;  d               8   18[BANK0 ] unsigned long long 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  n               8   31[BANK0 ] unsigned long long 
  7496 ;;  i               2   39[BANK0 ] int 
  7497 ;;  w               2   29[BANK0 ] int 
  7498 ;;  p               2   27[BANK0 ] int 
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  2   16[BANK0 ] int 
  7501 ;; Registers used:
  7502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7508 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7509 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7510 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7511 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7512 ;;Total ram usage:       25 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:    5
  7515 ;; This function calls:
  7516 ;;		___lodiv
  7517 ;;		___lomod
  7518 ;;		_pad
  7519 ;; This function is called by:
  7520 ;;		_vfpfcnvrt
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           
  7525                           ;psect for function _utoa
  7526  2214                     _utoa:	
  7527                           
  7528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7529                           
  7530                           ;incstack = 0
  7531                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7532  2214  0022               	movlb	2	; select bank2
  7533  2215  1BE9               	btfsc	(_prec+1)^(0+256),7
  7534  2216  2A1B               	goto	l887
  7535                           
  7536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7537  2217  30FD               	movlw	253
  7538  2218  05EA               	andwf	_flags^(0+256),f
  7539  2219  30FF               	movlw	255
  7540  221A  05EB               	andwf	(_flags+1)^(0+256),f
  7541  221B                     l887:	
  7542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7543                           
  7544                           
  7545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7546  221B  0869               	movf	(_prec+1)^(0+256),w
  7547  221C  3A80               	xorlw	128
  7548  221D  0020               	movlb	0	; select bank0
  7549  221E  00BA               	movwf	??_utoa
  7550  221F  3080               	movlw	128
  7551  2220  023A               	subwf	??_utoa,w
  7552  2221  1D03               	skipz
  7553  2222  2A26               	goto	u8355
  7554  2223  3001               	movlw	1
  7555  2224  0022               	movlb	2	; select bank2
  7556  2225  0268               	subwf	_prec^(0+256),w
  7557  2226                     u8355:	
  7558  2226  1803               	skipnc
  7559  2227  2A2E               	goto	l6772
  7560  2228  3001               	movlw	1
  7561  2229  0020               	movlb	0	; select bank0
  7562  222A  00BB               	movwf	utoa@p
  7563  222B  3000               	movlw	0
  7564  222C  00BC               	movwf	utoa@p+1
  7565  222D  2A36               	goto	l891
  7566  222E                     l6772:	
  7567  222E  0022               	movlb	2	; select bank2
  7568  222F  0869               	movf	(_prec+1)^(0+256),w
  7569  2230  0020               	movlb	0	; select bank0
  7570  2231  00BC               	movwf	utoa@p+1
  7571  2232  0022               	movlb	2	; select bank2
  7572  2233  0868               	movf	_prec^(0+256),w
  7573  2234  0020               	movlb	0	; select bank0
  7574  2235  00BB               	movwf	utoa@p
  7575  2236                     l891:	
  7576                           
  7577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7578  2236  0022               	movlb	2	; select bank2
  7579  2237  0867               	movf	(_width+1)^(0+256),w
  7580  2238  0020               	movlb	0	; select bank0
  7581  2239  00BE               	movwf	utoa@w+1
  7582  223A  0022               	movlb	2	; select bank2
  7583  223B  0866               	movf	_width^(0+256),w
  7584  223C  0020               	movlb	0	; select bank0
  7585  223D  00BD               	movwf	utoa@w
  7586                           
  7587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7588  223E  0832               	movf	utoa@d,w
  7589  223F  00BF               	movwf	utoa@n
  7590  2240  0833               	movf	utoa@d+1,w
  7591  2241  00C0               	movwf	utoa@n+1
  7592  2242  0834               	movf	utoa@d+2,w
  7593  2243  00C1               	movwf	utoa@n+2
  7594  2244  0835               	movf	utoa@d+3,w
  7595  2245  00C2               	movwf	utoa@n+3
  7596  2246  0836               	movf	utoa@d+4,w
  7597  2247  00C3               	movwf	utoa@n+4
  7598  2248  0837               	movf	utoa@d+5,w
  7599  2249  00C4               	movwf	utoa@n+5
  7600  224A  0838               	movf	utoa@d+6,w
  7601  224B  00C5               	movwf	utoa@n+6
  7602  224C  0839               	movf	utoa@d+7,w
  7603  224D  00C6               	movwf	utoa@n+7
  7604                           
  7605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7606  224E  301F               	movlw	31
  7607  224F  00C7               	movwf	utoa@i
  7608  2250  3000               	movlw	0
  7609  2251  00C8               	movwf	utoa@i+1
  7610                           
  7611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7612  2252  0024               	movlb	4	; select bank4
  7613  2253  01D3               	clrf	(_dbuf^(0+512)+31)
  7614                           
  7615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7616  2254  2ADA               	goto	l6788
  7617  2255                     l6790:	
  7618  2255  083F               	movf	utoa@n,w
  7619  2256  0440               	iorwf	utoa@n+1,w
  7620  2257  0441               	iorwf	utoa@n+2,w
  7621  2258  0442               	iorwf	utoa@n+3,w
  7622  2259  0443               	iorwf	utoa@n+4,w
  7623  225A  0444               	iorwf	utoa@n+5,w
  7624  225B  0445               	iorwf	utoa@n+6,w
  7625  225C  0446               	iorwf	utoa@n+7,w
  7626  225D  1D03               	skipz
  7627  225E  2A79               	goto	l6778
  7628  225F  083C               	movf	utoa@p+1,w
  7629  2260  3A80               	xorlw	128
  7630  2261  00BA               	movwf	??_utoa
  7631  2262  3080               	movlw	128
  7632  2263  023A               	subwf	??_utoa,w
  7633  2264  1D03               	skipz
  7634  2265  2A68               	goto	u8385
  7635  2266  3001               	movlw	1
  7636  2267  023B               	subwf	utoa@p,w
  7637  2268                     u8385:	
  7638  2268  1803               	skipnc
  7639  2269  2A79               	goto	l6778
  7640  226A  0020               	movlb	0	; select bank0
  7641  226B  083E               	movf	utoa@w+1,w
  7642  226C  3A80               	xorlw	128
  7643  226D  00BA               	movwf	??_utoa
  7644  226E  3080               	movlw	128
  7645  226F  023A               	subwf	??_utoa,w
  7646  2270  1D03               	skipz
  7647  2271  2A74               	goto	u8395
  7648  2272  3001               	movlw	1
  7649  2273  023D               	subwf	utoa@w,w
  7650  2274                     u8395:	
  7651  2274  1C03               	skipc
  7652  2275  2ADF               	goto	l6798
  7653  2276  0022               	movlb	2	; select bank2
  7654  2277  1CEA               	btfss	_flags^(0+256),1
  7655  2278  2ADF               	goto	l6798
  7656  2279                     l6778:	
  7657                           
  7658                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7659  2279  30FF               	movlw	255
  7660  227A  0020               	movlb	0	; select bank0
  7661  227B  07C7               	addwf	utoa@i,f
  7662  227C  30FF               	movlw	255
  7663  227D  3DC8               	addwfc	utoa@i+1,f
  7664                           
  7665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7666  227E  300A               	movlw	10
  7667  227F  00A0               	movwf	___lomod@divisor
  7668  2280  01A1               	clrf	___lomod@divisor+1
  7669  2281  01A2               	clrf	___lomod@divisor+2
  7670  2282  01A3               	clrf	___lomod@divisor+3
  7671  2283  01A4               	clrf	___lomod@divisor+4
  7672  2284  01A5               	clrf	___lomod@divisor+5
  7673  2285  01A6               	clrf	___lomod@divisor+6
  7674  2286  01A7               	clrf	___lomod@divisor+7
  7675  2287  083F               	movf	utoa@n,w
  7676  2288  00A8               	movwf	___lomod@dividend
  7677  2289  0840               	movf	utoa@n+1,w
  7678  228A  00A9               	movwf	___lomod@dividend+1
  7679  228B  0841               	movf	utoa@n+2,w
  7680  228C  00AA               	movwf	___lomod@dividend+2
  7681  228D  0842               	movf	utoa@n+3,w
  7682  228E  00AB               	movwf	___lomod@dividend+3
  7683  228F  0843               	movf	utoa@n+4,w
  7684  2290  00AC               	movwf	___lomod@dividend+4
  7685  2291  0844               	movf	utoa@n+5,w
  7686  2292  00AD               	movwf	___lomod@dividend+5
  7687  2293  0845               	movf	utoa@n+6,w
  7688  2294  00AE               	movwf	___lomod@dividend+6
  7689  2295  0846               	movf	utoa@n+7,w
  7690  2296  00AF               	movwf	___lomod@dividend+7
  7691  2297  31B7  271E  31A2   	fcall	___lomod
  7692  229A  0020               	movlb	0	; select bank0
  7693  229B  0820               	movf	?___lomod,w
  7694  229C  3E30               	addlw	48
  7695  229D  00BA               	movwf	??_utoa
  7696  229E  0847               	movf	utoa@i,w
  7697  229F  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7698  22A0  0086               	movwf	6
  7699  22A1  3002               	movlw	2	; select bank4/5
  7700  22A2  0087               	movwf	7
  7701  22A3  083A               	movf	??_utoa,w
  7702  22A4  0081               	movwf	1
  7703                           
  7704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7705  22A5  30FF               	movlw	255
  7706  22A6  07BB               	addwf	utoa@p,f
  7707  22A7  30FF               	movlw	255
  7708  22A8  3DBC               	addwfc	utoa@p+1,f
  7709                           
  7710                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7711  22A9  30FF               	movlw	255
  7712  22AA  07BD               	addwf	utoa@w,f
  7713  22AB  30FF               	movlw	255
  7714  22AC  3DBE               	addwfc	utoa@w+1,f
  7715                           
  7716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7717  22AD  300A               	movlw	10
  7718  22AE  00A0               	movwf	___lodiv@divisor
  7719  22AF  01A1               	clrf	___lodiv@divisor+1
  7720  22B0  01A2               	clrf	___lodiv@divisor+2
  7721  22B1  01A3               	clrf	___lodiv@divisor+3
  7722  22B2  01A4               	clrf	___lodiv@divisor+4
  7723  22B3  01A5               	clrf	___lodiv@divisor+5
  7724  22B4  01A6               	clrf	___lodiv@divisor+6
  7725  22B5  01A7               	clrf	___lodiv@divisor+7
  7726  22B6  083F               	movf	utoa@n,w
  7727  22B7  00A8               	movwf	___lodiv@dividend
  7728  22B8  0840               	movf	utoa@n+1,w
  7729  22B9  00A9               	movwf	___lodiv@dividend+1
  7730  22BA  0841               	movf	utoa@n+2,w
  7731  22BB  00AA               	movwf	___lodiv@dividend+2
  7732  22BC  0842               	movf	utoa@n+3,w
  7733  22BD  00AB               	movwf	___lodiv@dividend+3
  7734  22BE  0843               	movf	utoa@n+4,w
  7735  22BF  00AC               	movwf	___lodiv@dividend+4
  7736  22C0  0844               	movf	utoa@n+5,w
  7737  22C1  00AD               	movwf	___lodiv@dividend+5
  7738  22C2  0845               	movf	utoa@n+6,w
  7739  22C3  00AE               	movwf	___lodiv@dividend+6
  7740  22C4  0846               	movf	utoa@n+7,w
  7741  22C5  00AF               	movwf	___lodiv@dividend+7
  7742  22C6  31A8  20C6  31A2   	fcall	___lodiv
  7743  22C9  0020               	movlb	0	; select bank0
  7744  22CA  0820               	movf	?___lodiv,w
  7745  22CB  00BF               	movwf	utoa@n
  7746  22CC  0821               	movf	?___lodiv+1,w
  7747  22CD  00C0               	movwf	utoa@n+1
  7748  22CE  0822               	movf	?___lodiv+2,w
  7749  22CF  00C1               	movwf	utoa@n+2
  7750  22D0  0823               	movf	?___lodiv+3,w
  7751  22D1  00C2               	movwf	utoa@n+3
  7752  22D2  0824               	movf	?___lodiv+4,w
  7753  22D3  00C3               	movwf	utoa@n+4
  7754  22D4  0825               	movf	?___lodiv+5,w
  7755  22D5  00C4               	movwf	utoa@n+5
  7756  22D6  0826               	movf	?___lodiv+6,w
  7757  22D7  00C5               	movwf	utoa@n+6
  7758  22D8  0827               	movf	?___lodiv+7,w
  7759  22D9  00C6               	movwf	utoa@n+7
  7760  22DA                     l6788:	
  7761                           
  7762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7763  22DA  0020               	movlb	0	; select bank0
  7764  22DB  0847               	movf	utoa@i,w
  7765  22DC  0448               	iorwf	utoa@i+1,w
  7766  22DD  1D03               	btfss	3,2
  7767  22DE  2A55               	goto	l6790
  7768  22DF                     l6798:	
  7769                           
  7770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7771  22DF  0020               	movlb	0	; select bank0
  7772  22E0  0831               	movf	utoa@fp+1,w
  7773  22E1  00A7               	movwf	pad@fp+1
  7774  22E2  0830               	movf	utoa@fp,w
  7775  22E3  00A6               	movwf	pad@fp
  7776  22E4  0847               	movf	utoa@i,w
  7777  22E5  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7778  22E6  00BA               	movwf	??_utoa
  7779  22E7  083A               	movf	??_utoa,w
  7780  22E8  00A8               	movwf	pad@buf
  7781  22E9  083E               	movf	utoa@w+1,w
  7782  22EA  00AA               	movwf	pad@p+1
  7783  22EB  083D               	movf	utoa@w,w
  7784  22EC  00A9               	movwf	pad@p
  7785  22ED  31B5  2562         	fcall	_pad
  7786  22EF  0020               	movlb	0	; select bank0
  7787  22F0  0827               	movf	?_pad+1,w
  7788  22F1  00B1               	movwf	?_utoa+1
  7789  22F2  0826               	movf	?_pad,w
  7790  22F3  00B0               	movwf	?_utoa
  7791  22F4  0008               	return
  7792  22F5                     __end_of_utoa:	
  7793                           
  7794                           	psect	text14
  7795  371E                     __ptext14:	
  7796 ;; *************** function ___lomod *****************
  7797 ;; Defined at:
  7798 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7799 ;; Parameters:    Size  Location     Type
  7800 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7801 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;  counter         1    2[COMMON] unsigned char 
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  8    0[BANK0 ] unsigned long long 
  7806 ;; Registers used:
  7807 ;;		wreg, status,2, status,0
  7808 ;; Tracked objects:
  7809 ;;		On entry : 0/0
  7810 ;;		On exit  : 0/0
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7813 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7816 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7817 ;;Total ram usage:       18 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    1
  7820 ;; This function calls:
  7821 ;;		Nothing
  7822 ;; This function is called by:
  7823 ;;		_utoa
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827                           
  7828                           ;psect for function ___lomod
  7829  371E                     ___lomod:	
  7830                           
  7831                           ;incstack = 0
  7832                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7833  371E  0020               	movlb	0	; select bank0
  7834  371F  0820               	movf	___lomod@divisor,w
  7835  3720  0421               	iorwf	___lomod@divisor+1,w
  7836  3721  0422               	iorwf	___lomod@divisor+2,w
  7837  3722  0423               	iorwf	___lomod@divisor+3,w
  7838  3723  0424               	iorwf	___lomod@divisor+4,w
  7839  3724  0425               	iorwf	___lomod@divisor+5,w
  7840  3725  0426               	iorwf	___lomod@divisor+6,w
  7841  3726  0427               	iorwf	___lomod@divisor+7,w
  7842  3727  1903               	skipnz
  7843  3728  2F76               	goto	l1258
  7844  3729  01F2               	clrf	___lomod@counter
  7845  372A  0AF2               	incf	___lomod@counter,f
  7846  372B                     l4366:	
  7847  372B  1BA7               	btfsc	___lomod@divisor+7,7
  7848  372C  2F3A               	goto	l4368
  7849  372D  35A0               	lslf	___lomod@divisor,f
  7850  372E  0DA1               	rlf	___lomod@divisor+1,f
  7851  372F  0DA2               	rlf	___lomod@divisor+2,f
  7852  3730  0DA3               	rlf	___lomod@divisor+3,f
  7853  3731  0DA4               	rlf	___lomod@divisor+4,f
  7854  3732  0DA5               	rlf	___lomod@divisor+5,f
  7855  3733  0DA6               	rlf	___lomod@divisor+6,f
  7856  3734  0DA7               	rlf	___lomod@divisor+7,f
  7857  3735  3001               	movlw	1
  7858  3736  00F1               	movwf	??___lomod
  7859  3737  0871               	movf	??___lomod,w
  7860  3738  07F2               	addwf	___lomod@counter,f
  7861  3739  2F2B               	goto	l4366
  7862  373A                     l4368:	
  7863  373A  0827               	movf	___lomod@divisor+7,w
  7864  373B  022F               	subwf	___lomod@dividend+7,w
  7865  373C  1D03               	skipz
  7866  373D  2F58               	goto	u4565
  7867  373E  0826               	movf	___lomod@divisor+6,w
  7868  373F  022E               	subwf	___lomod@dividend+6,w
  7869  3740  1D03               	skipz
  7870  3741  2F58               	goto	u4565
  7871  3742  0825               	movf	___lomod@divisor+5,w
  7872  3743  022D               	subwf	___lomod@dividend+5,w
  7873  3744  1D03               	skipz
  7874  3745  2F58               	goto	u4565
  7875  3746  0824               	movf	___lomod@divisor+4,w
  7876  3747  022C               	subwf	___lomod@dividend+4,w
  7877  3748  1D03               	skipz
  7878  3749  2F58               	goto	u4565
  7879  374A  0823               	movf	___lomod@divisor+3,w
  7880  374B  022B               	subwf	___lomod@dividend+3,w
  7881  374C  1D03               	skipz
  7882  374D  2F58               	goto	u4565
  7883  374E  0822               	movf	___lomod@divisor+2,w
  7884  374F  022A               	subwf	___lomod@dividend+2,w
  7885  3750  1D03               	skipz
  7886  3751  2F58               	goto	u4565
  7887  3752  0821               	movf	___lomod@divisor+1,w
  7888  3753  0229               	subwf	___lomod@dividend+1,w
  7889  3754  1D03               	skipz
  7890  3755  2F58               	goto	u4565
  7891  3756  0820               	movf	___lomod@divisor,w
  7892  3757  0228               	subwf	___lomod@dividend,w
  7893  3758                     u4565:	
  7894  3758  1C03               	skipc
  7895  3759  2F6A               	goto	l4372
  7896  375A  0820               	movf	___lomod@divisor,w
  7897  375B  02A8               	subwf	___lomod@dividend,f
  7898  375C  0821               	movf	___lomod@divisor+1,w
  7899  375D  3BA9               	subwfb	___lomod@dividend+1,f
  7900  375E  0822               	movf	___lomod@divisor+2,w
  7901  375F  3BAA               	subwfb	___lomod@dividend+2,f
  7902  3760  0823               	movf	___lomod@divisor+3,w
  7903  3761  3BAB               	subwfb	___lomod@dividend+3,f
  7904  3762  0824               	movf	___lomod@divisor+4,w
  7905  3763  3BAC               	subwfb	___lomod@dividend+4,f
  7906  3764  0825               	movf	___lomod@divisor+5,w
  7907  3765  3BAD               	subwfb	___lomod@dividend+5,f
  7908  3766  0826               	movf	___lomod@divisor+6,w
  7909  3767  3BAE               	subwfb	___lomod@dividend+6,f
  7910  3768  0827               	movf	___lomod@divisor+7,w
  7911  3769  3BAF               	subwfb	___lomod@dividend+7,f
  7912  376A                     l4372:	
  7913  376A  36A7               	lsrf	___lomod@divisor+7,f
  7914  376B  0CA6               	rrf	___lomod@divisor+6,f
  7915  376C  0CA5               	rrf	___lomod@divisor+5,f
  7916  376D  0CA4               	rrf	___lomod@divisor+4,f
  7917  376E  0CA3               	rrf	___lomod@divisor+3,f
  7918  376F  0CA2               	rrf	___lomod@divisor+2,f
  7919  3770  0CA1               	rrf	___lomod@divisor+1,f
  7920  3771  0CA0               	rrf	___lomod@divisor,f
  7921  3772  3001               	movlw	1
  7922  3773  02F2               	subwf	___lomod@counter,f
  7923  3774  1D03               	btfss	3,2
  7924  3775  2F3A               	goto	l4368
  7925  3776                     l1258:	
  7926  3776  0828               	movf	___lomod@dividend,w
  7927  3777  00A0               	movwf	?___lomod
  7928  3778  0829               	movf	___lomod@dividend+1,w
  7929  3779  00A1               	movwf	?___lomod+1
  7930  377A  082A               	movf	___lomod@dividend+2,w
  7931  377B  00A2               	movwf	?___lomod+2
  7932  377C  082B               	movf	___lomod@dividend+3,w
  7933  377D  00A3               	movwf	?___lomod+3
  7934  377E  082C               	movf	___lomod@dividend+4,w
  7935  377F  00A4               	movwf	?___lomod+4
  7936  3780  082D               	movf	___lomod@dividend+5,w
  7937  3781  00A5               	movwf	?___lomod+5
  7938  3782  082E               	movf	___lomod@dividend+6,w
  7939  3783  00A6               	movwf	?___lomod+6
  7940  3784  082F               	movf	___lomod@dividend+7,w
  7941  3785  00A7               	movwf	?___lomod+7
  7942  3786  0008               	return
  7943  3787                     __end_of___lomod:	
  7944                           
  7945                           	psect	text15
  7946  28C6                     __ptext15:	
  7947 ;; *************** function ___lodiv *****************
  7948 ;; Defined at:
  7949 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7952 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  quotient        8    2[COMMON] unsigned long long 
  7955 ;;  counter         1   10[COMMON] unsigned char 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  8    0[BANK0 ] unsigned long long 
  7958 ;; Registers used:
  7959 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7965 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7966 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7968 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7969 ;;Total ram usage:       26 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    1
  7972 ;; This function calls:
  7973 ;;		Nothing
  7974 ;; This function is called by:
  7975 ;;		_utoa
  7976 ;; This function uses a non-reentrant model
  7977 ;;
  7978                           
  7979                           
  7980                           ;psect for function ___lodiv
  7981  28C6                     ___lodiv:	
  7982                           
  7983                           ;incstack = 0
  7984                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7985  28C6  3072               	movlw	low ___lodiv@quotient
  7986  28C7  0086               	movwf	6
  7987  28C8  3000               	movlw	high ___lodiv@quotient
  7988  28C9  0087               	movwf	7
  7989  28CA  3008               	movlw	8
  7990  28CB  00F1               	movwf	??___lodiv
  7991  28CC  3000               	movlw	0
  7992  28CD                     u4490:	
  7993  28CD  001E               	movwi fsr1++
  7994  28CE  0BF1               	decfsz	??___lodiv,f
  7995  28CF  28CD               	goto	u4490
  7996  28D0  0020               	movlb	0	; select bank0
  7997  28D1  0820               	movf	___lodiv@divisor,w
  7998  28D2  0421               	iorwf	___lodiv@divisor+1,w
  7999  28D3  0422               	iorwf	___lodiv@divisor+2,w
  8000  28D4  0423               	iorwf	___lodiv@divisor+3,w
  8001  28D5  0424               	iorwf	___lodiv@divisor+4,w
  8002  28D6  0425               	iorwf	___lodiv@divisor+5,w
  8003  28D7  0426               	iorwf	___lodiv@divisor+6,w
  8004  28D8  0427               	iorwf	___lodiv@divisor+7,w
  8005  28D9  1903               	skipnz
  8006  28DA  2931               	goto	l1248
  8007  28DB  01FA               	clrf	___lodiv@counter
  8008  28DC  0AFA               	incf	___lodiv@counter,f
  8009  28DD                     l4346:	
  8010  28DD  1BA7               	btfsc	___lodiv@divisor+7,7
  8011  28DE  28EC               	goto	l4348
  8012  28DF  35A0               	lslf	___lodiv@divisor,f
  8013  28E0  0DA1               	rlf	___lodiv@divisor+1,f
  8014  28E1  0DA2               	rlf	___lodiv@divisor+2,f
  8015  28E2  0DA3               	rlf	___lodiv@divisor+3,f
  8016  28E3  0DA4               	rlf	___lodiv@divisor+4,f
  8017  28E4  0DA5               	rlf	___lodiv@divisor+5,f
  8018  28E5  0DA6               	rlf	___lodiv@divisor+6,f
  8019  28E6  0DA7               	rlf	___lodiv@divisor+7,f
  8020  28E7  3001               	movlw	1
  8021  28E8  00F1               	movwf	??___lodiv
  8022  28E9  0871               	movf	??___lodiv,w
  8023  28EA  07FA               	addwf	___lodiv@counter,f
  8024  28EB  28DD               	goto	l4346
  8025  28EC                     l4348:	
  8026  28EC  35F2               	lslf	___lodiv@quotient,f
  8027  28ED  0DF3               	rlf	___lodiv@quotient+1,f
  8028  28EE  0DF4               	rlf	___lodiv@quotient+2,f
  8029  28EF  0DF5               	rlf	___lodiv@quotient+3,f
  8030  28F0  0DF6               	rlf	___lodiv@quotient+4,f
  8031  28F1  0DF7               	rlf	___lodiv@quotient+5,f
  8032  28F2  0DF8               	rlf	___lodiv@quotient+6,f
  8033  28F3  0DF9               	rlf	___lodiv@quotient+7,f
  8034  28F4  0827               	movf	___lodiv@divisor+7,w
  8035  28F5  022F               	subwf	___lodiv@dividend+7,w
  8036  28F6  1D03               	skipz
  8037  28F7  2912               	goto	u4525
  8038  28F8  0826               	movf	___lodiv@divisor+6,w
  8039  28F9  022E               	subwf	___lodiv@dividend+6,w
  8040  28FA  1D03               	skipz
  8041  28FB  2912               	goto	u4525
  8042  28FC  0825               	movf	___lodiv@divisor+5,w
  8043  28FD  022D               	subwf	___lodiv@dividend+5,w
  8044  28FE  1D03               	skipz
  8045  28FF  2912               	goto	u4525
  8046  2900  0824               	movf	___lodiv@divisor+4,w
  8047  2901  022C               	subwf	___lodiv@dividend+4,w
  8048  2902  1D03               	skipz
  8049  2903  2912               	goto	u4525
  8050  2904  0823               	movf	___lodiv@divisor+3,w
  8051  2905  022B               	subwf	___lodiv@dividend+3,w
  8052  2906  1D03               	skipz
  8053  2907  2912               	goto	u4525
  8054  2908  0822               	movf	___lodiv@divisor+2,w
  8055  2909  022A               	subwf	___lodiv@dividend+2,w
  8056  290A  1D03               	skipz
  8057  290B  2912               	goto	u4525
  8058  290C  0821               	movf	___lodiv@divisor+1,w
  8059  290D  0229               	subwf	___lodiv@dividend+1,w
  8060  290E  1D03               	skipz
  8061  290F  2912               	goto	u4525
  8062  2910  0820               	movf	___lodiv@divisor,w
  8063  2911  0228               	subwf	___lodiv@dividend,w
  8064  2912                     u4525:	
  8065  2912  1C03               	skipc
  8066  2913  2925               	goto	l4356
  8067  2914  0820               	movf	___lodiv@divisor,w
  8068  2915  02A8               	subwf	___lodiv@dividend,f
  8069  2916  0821               	movf	___lodiv@divisor+1,w
  8070  2917  3BA9               	subwfb	___lodiv@dividend+1,f
  8071  2918  0822               	movf	___lodiv@divisor+2,w
  8072  2919  3BAA               	subwfb	___lodiv@dividend+2,f
  8073  291A  0823               	movf	___lodiv@divisor+3,w
  8074  291B  3BAB               	subwfb	___lodiv@dividend+3,f
  8075  291C  0824               	movf	___lodiv@divisor+4,w
  8076  291D  3BAC               	subwfb	___lodiv@dividend+4,f
  8077  291E  0825               	movf	___lodiv@divisor+5,w
  8078  291F  3BAD               	subwfb	___lodiv@dividend+5,f
  8079  2920  0826               	movf	___lodiv@divisor+6,w
  8080  2921  3BAE               	subwfb	___lodiv@dividend+6,f
  8081  2922  0827               	movf	___lodiv@divisor+7,w
  8082  2923  3BAF               	subwfb	___lodiv@dividend+7,f
  8083  2924  1472               	bsf	___lodiv@quotient,0
  8084  2925                     l4356:	
  8085  2925  36A7               	lsrf	___lodiv@divisor+7,f
  8086  2926  0CA6               	rrf	___lodiv@divisor+6,f
  8087  2927  0CA5               	rrf	___lodiv@divisor+5,f
  8088  2928  0CA4               	rrf	___lodiv@divisor+4,f
  8089  2929  0CA3               	rrf	___lodiv@divisor+3,f
  8090  292A  0CA2               	rrf	___lodiv@divisor+2,f
  8091  292B  0CA1               	rrf	___lodiv@divisor+1,f
  8092  292C  0CA0               	rrf	___lodiv@divisor,f
  8093  292D  3001               	movlw	1
  8094  292E  02FA               	subwf	___lodiv@counter,f
  8095  292F  1D03               	btfss	3,2
  8096  2930  28EC               	goto	l4348
  8097  2931                     l1248:	
  8098  2931  0872               	movf	___lodiv@quotient,w
  8099  2932  00A0               	movwf	?___lodiv
  8100  2933  0873               	movf	___lodiv@quotient+1,w
  8101  2934  00A1               	movwf	?___lodiv+1
  8102  2935  0874               	movf	___lodiv@quotient+2,w
  8103  2936  00A2               	movwf	?___lodiv+2
  8104  2937  0875               	movf	___lodiv@quotient+3,w
  8105  2938  00A3               	movwf	?___lodiv+3
  8106  2939  0876               	movf	___lodiv@quotient+4,w
  8107  293A  00A4               	movwf	?___lodiv+4
  8108  293B  0877               	movf	___lodiv@quotient+5,w
  8109  293C  00A5               	movwf	?___lodiv+5
  8110  293D  0878               	movf	___lodiv@quotient+6,w
  8111  293E  00A6               	movwf	?___lodiv+6
  8112  293F  0879               	movf	___lodiv@quotient+7,w
  8113  2940  00A7               	movwf	?___lodiv+7
  8114  2941  0008               	return
  8115  2942                     __end_of___lodiv:	
  8116                           
  8117                           	psect	text16
  8118  35B3                     __ptext16:	
  8119 ;; *************** function _strncmp *****************
  8120 ;; Defined at:
  8121 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8122 ;; Parameters:    Size  Location     Type
  8123 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8124 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  8125 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  8126 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  8127 ;;		 -> STR_8(26), STR_7(16), STR_6(16), STR_5(3), 
  8128 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  8129 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8130 ;;		 -> STR_120(3), STR_116(3), STR_111(3), STR_107(3), 
  8131 ;;		 -> STR_102(4), STR_98(4), STR_93(3), STR_88(3), 
  8132 ;;		 -> STR_83(4), STR_78(3), STR_73(3), STR_68(4), 
  8133 ;;		 -> STR_63(3), STR_58(3), STR_53(4), STR_48(3), 
  8134 ;;		 -> STR_44(3), STR_39(3), STR_35(3), STR_30(4), 
  8135 ;;		 -> STR_26(4), 
  8136 ;;  n               2    5[COMMON] unsigned int 
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;  r               2   10[COMMON] PTR const unsigned char 
  8139 ;;		 -> STR_120(3), STR_116(3), STR_111(3), STR_107(3), 
  8140 ;;		 -> STR_102(4), STR_98(4), STR_93(3), STR_88(3), 
  8141 ;;		 -> STR_83(4), STR_78(3), STR_73(3), STR_68(4), 
  8142 ;;		 -> STR_63(3), STR_58(3), STR_53(4), STR_48(3), 
  8143 ;;		 -> STR_44(3), STR_39(3), STR_35(3), STR_30(4), 
  8144 ;;		 -> STR_26(4), 
  8145 ;;  l               2    8[COMMON] PTR const unsigned char 
  8146 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
  8147 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
  8148 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
  8149 ;;		 -> STR_8(26), STR_7(16), STR_6(16), STR_5(3), 
  8150 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
  8151 ;; Return value:  Size  Location     Type
  8152 ;;                  2    1[COMMON] int 
  8153 ;; Registers used:
  8154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8155 ;; Tracked objects:
  8156 ;;		On entry : 0/0
  8157 ;;		On exit  : 0/0
  8158 ;;		Unchanged: 0/0
  8159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8160 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8161 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8162 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8163 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8164 ;;Total ram usage:       11 bytes
  8165 ;; Hardware stack levels used:    1
  8166 ;; Hardware stack levels required when called:    1
  8167 ;; This function calls:
  8168 ;;		Nothing
  8169 ;; This function is called by:
  8170 ;;		_vfpfcnvrt
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           
  8175                           ;psect for function _strncmp
  8176  35B3                     _strncmp:	
  8177                           
  8178                           ;incstack = 0
  8179                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  8180  35B3  0872               	movf	strncmp@_l+1,w
  8181  35B4  00F9               	movwf	strncmp@l+1
  8182  35B5  0871               	movf	strncmp@_l,w
  8183  35B6  00F8               	movwf	strncmp@l
  8184  35B7  0874               	movf	strncmp@_r+1,w
  8185  35B8  00FB               	movwf	strncmp@r+1
  8186  35B9  0873               	movf	strncmp@_r,w
  8187  35BA  00FA               	movwf	strncmp@r
  8188  35BB  3001               	movlw	1
  8189  35BC  02F5               	subwf	strncmp@n,f
  8190  35BD  3000               	movlw	0
  8191  35BE  3BF6               	subwfb	strncmp@n+1,f
  8192  35BF  0A75               	incf	strncmp@n,w
  8193  35C0  1D03               	skipz
  8194  35C1  2DED               	goto	l4708
  8195  35C2  0A76               	incf	strncmp@n+1,w
  8196  35C3  1D03               	btfss	3,2
  8197  35C4  2DED               	goto	l4708
  8198  35C5  01F1               	clrf	?_strncmp
  8199  35C6  01F2               	clrf	?_strncmp+1
  8200  35C7  0008               	return
  8201  35C8                     l4710:	
  8202  35C8  087A               	movf	strncmp@r,w
  8203  35C9  0084               	movwf	4
  8204  35CA  087B               	movf	strncmp@r+1,w
  8205  35CB  0085               	movwf	5
  8206  35CC  0012               	moviw fsr0++
  8207  35CD  1903               	btfsc	3,2
  8208  35CE  2DF4               	goto	l4716
  8209  35CF  0875               	movf	strncmp@n,w
  8210  35D0  0476               	iorwf	strncmp@n+1,w
  8211  35D1  1903               	btfsc	3,2
  8212  35D2  2DF4               	goto	l4716
  8213  35D3  087A               	movf	strncmp@r,w
  8214  35D4  0084               	movwf	4
  8215  35D5  087B               	movf	strncmp@r+1,w
  8216  35D6  0085               	movwf	5
  8217  35D7  0800               	movf	0,w	;code access
  8218  35D8  00F7               	movwf	??_strncmp
  8219  35D9  0878               	movf	strncmp@l,w
  8220  35DA  0084               	movwf	4
  8221  35DB  0879               	movf	strncmp@l+1,w
  8222  35DC  0085               	movwf	5
  8223  35DD  0800               	movf	0,w	;code access
  8224  35DE  0677               	xorwf	??_strncmp,w
  8225  35DF  1D03               	btfss	3,2
  8226  35E0  2DF4               	goto	l4716
  8227  35E1  3001               	movlw	1
  8228  35E2  07F8               	addwf	strncmp@l,f
  8229  35E3  3000               	movlw	0
  8230  35E4  3DF9               	addwfc	strncmp@l+1,f
  8231  35E5  3001               	movlw	1
  8232  35E6  07FA               	addwf	strncmp@r,f
  8233  35E7  3000               	movlw	0
  8234  35E8  3DFB               	addwfc	strncmp@r+1,f
  8235  35E9  3001               	movlw	1
  8236  35EA  02F5               	subwf	strncmp@n,f
  8237  35EB  3000               	movlw	0
  8238  35EC  3BF6               	subwfb	strncmp@n+1,f
  8239  35ED                     l4708:	
  8240  35ED  0878               	movf	strncmp@l,w
  8241  35EE  0084               	movwf	4
  8242  35EF  0879               	movf	strncmp@l+1,w
  8243  35F0  0085               	movwf	5
  8244  35F1  0012               	moviw fsr0++
  8245  35F2  1D03               	btfss	3,2
  8246  35F3  2DC8               	goto	l4710
  8247  35F4                     l4716:	
  8248  35F4  0878               	movf	strncmp@l,w
  8249  35F5  0084               	movwf	4
  8250  35F6  0879               	movf	strncmp@l+1,w
  8251  35F7  0085               	movwf	5
  8252  35F8  0800               	movf	0,w	;code access
  8253  35F9  00F7               	movwf	??_strncmp
  8254  35FA  087A               	movf	strncmp@r,w
  8255  35FB  0084               	movwf	4
  8256  35FC  087B               	movf	strncmp@r+1,w
  8257  35FD  0085               	movwf	5
  8258  35FE  0800               	movf	0,w	;code access
  8259  35FF  0277               	subwf	??_strncmp,w
  8260  3600  00F1               	movwf	?_strncmp
  8261  3601  01F2               	clrf	?_strncmp+1
  8262  3602  1C03               	skipc
  8263  3603  03F2               	decf	?_strncmp+1,f
  8264  3604  0008               	return
  8265  3605                     __end_of_strncmp:	
  8266                           
  8267                           	psect	text17
  8268  2D99                     __ptext17:	
  8269 ;; *************** function _stoa *****************
  8270 ;; Defined at:
  8271 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8272 ;; Parameters:    Size  Location     Type
  8273 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  8274 ;;		 -> vsnprintf@f(6), 
  8275 ;;  s               2    2[BANK0 ] PTR unsigned char 
  8276 ;;		 -> ?_snprintf(2), sp__logf(4), adcGain(2), 
  8277 ;; Auto vars:     Size  Location     Type
  8278 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  8279 ;;  l               2   19[BANK0 ] int 
  8280 ;;  p               2   17[BANK0 ] int 
  8281 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  8282 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), adcGain(2), 
  8283 ;;  w               2   13[BANK0 ] int 
  8284 ;;  i               2   11[BANK0 ] int 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  2    0[BANK0 ] int 
  8287 ;; Registers used:
  8288 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8295 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8297 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8298 ;;Total ram usage:       23 bytes
  8299 ;; Hardware stack levels used:    1
  8300 ;; Hardware stack levels required when called:    3
  8301 ;; This function calls:
  8302 ;;		_fputc
  8303 ;;		_strlen
  8304 ;; This function is called by:
  8305 ;;		_vfpfcnvrt
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           
  8310                           ;psect for function _stoa
  8311  2D99                     _stoa:	
  8312                           
  8313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8314                           
  8315                           ;incstack = 0
  8316                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8317  2D99  30E4               	movlw	low stoa@F1152
  8318  2D9A  0086               	movwf	6
  8319  2D9B  3001               	movlw	high stoa@F1152
  8320  2D9C  0087               	movwf	7
  8321  2D9D  3024               	movlw	low stoa@nuls
  8322  2D9E  0084               	movwf	4
  8323  2D9F  3000               	movlw	high stoa@nuls
  8324  2DA0  0085               	movwf	5
  8325  2DA1  3007               	movlw	7
  8326  2DA2  00FA               	movwf	??_stoa
  8327  2DA3                     u4870:	
  8328  2DA3  0016               	moviw fsr1++
  8329  2DA4  001A               	movwi fsr0++
  8330  2DA5  0BFA               	decfsz	??_stoa,f
  8331  2DA6  2DA3               	goto	u4870
  8332                           
  8333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8334  2DA7  0020               	movlb	0	; select bank0
  8335  2DA8  0823               	movf	stoa@s+1,w
  8336  2DA9  00B0               	movwf	stoa@cp+1
  8337  2DAA  0822               	movf	stoa@s,w
  8338  2DAB  00AF               	movwf	stoa@cp
  8339                           
  8340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8341  2DAC  082F               	movf	stoa@cp,w
  8342  2DAD  0430               	iorwf	stoa@cp+1,w
  8343  2DAE  1D03               	btfss	3,2
  8344  2DAF  2DB4               	goto	l4510
  8345                           
  8346                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8347  2DB0  3024               	movlw	low stoa@nuls
  8348  2DB1  00AF               	movwf	stoa@cp
  8349  2DB2  3000               	movlw	high stoa@nuls
  8350  2DB3  00B0               	movwf	stoa@cp+1
  8351  2DB4                     l4510:	
  8352                           
  8353                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8354  2DB4  0830               	movf	stoa@cp+1,w
  8355  2DB5  00F2               	movwf	strlen@s+1
  8356  2DB6  082F               	movf	stoa@cp,w
  8357  2DB7  00F1               	movwf	strlen@s
  8358  2DB8  31B1  21F3  31AD   	fcall	_strlen
  8359  2DBB  0872               	movf	?_strlen+1,w
  8360  2DBC  0020               	movlb	0	; select bank0
  8361  2DBD  00B4               	movwf	stoa@l+1
  8362  2DBE  0871               	movf	?_strlen,w
  8363  2DBF  00B3               	movwf	stoa@l
  8364                           
  8365                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8366  2DC0  0022               	movlb	2	; select bank2
  8367  2DC1  0869               	movf	(_prec+1)^(0+256),w
  8368  2DC2  0020               	movlb	0	; select bank0
  8369  2DC3  00B2               	movwf	stoa@p+1
  8370  2DC4  0022               	movlb	2	; select bank2
  8371  2DC5  0868               	movf	_prec^(0+256),w
  8372  2DC6  0020               	movlb	0	; select bank0
  8373  2DC7  00B1               	movwf	stoa@p
  8374                           
  8375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8376  2DC8  1BB2               	btfsc	stoa@p+1,7
  8377  2DC9  2DDB               	goto	l870
  8378  2DCA  0832               	movf	stoa@p+1,w
  8379  2DCB  3A80               	xorlw	128
  8380  2DCC  00FA               	movwf	??_stoa
  8381  2DCD  0834               	movf	stoa@l+1,w
  8382  2DCE  3A80               	xorlw	128
  8383  2DCF  027A               	subwf	??_stoa,w
  8384  2DD0  1D03               	skipz
  8385  2DD1  2DD4               	goto	u4905
  8386  2DD2  0833               	movf	stoa@l,w
  8387  2DD3  0231               	subwf	stoa@p,w
  8388  2DD4                     u4905:	
  8389  2DD4  1803               	btfsc	3,0
  8390  2DD5  2DDB               	goto	l870
  8391  2DD6  0020               	movlb	0	; select bank0
  8392  2DD7  0832               	movf	stoa@p+1,w
  8393  2DD8  00B4               	movwf	stoa@l+1
  8394  2DD9  0831               	movf	stoa@p,w
  8395  2DDA  00B3               	movwf	stoa@l
  8396  2DDB                     l870:	
  8397                           
  8398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8399  2DDB  0020               	movlb	0	; select bank0
  8400  2DDC  0834               	movf	stoa@l+1,w
  8401  2DDD  00B2               	movwf	stoa@p+1
  8402  2DDE  0833               	movf	stoa@l,w
  8403  2DDF  00B1               	movwf	stoa@p
  8404                           
  8405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8406  2DE0  0022               	movlb	2	; select bank2
  8407  2DE1  0867               	movf	(_width+1)^(0+256),w
  8408  2DE2  0020               	movlb	0	; select bank0
  8409  2DE3  00AE               	movwf	stoa@w+1
  8410  2DE4  0022               	movlb	2	; select bank2
  8411  2DE5  0866               	movf	_width^(0+256),w
  8412  2DE6  0020               	movlb	0	; select bank0
  8413  2DE7  00AD               	movwf	stoa@w
  8414                           
  8415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8416  2DE8  0022               	movlb	2	; select bank2
  8417  2DE9  1C6A               	btfss	_flags^(0+256),0
  8418  2DEA  2DFD               	goto	l4528
  8419  2DEB  2E0A               	goto	l4530
  8420  2DEC                     l4524:	
  8421                           
  8422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8423  2DEC  3020               	movlw	32
  8424  2DED  00F1               	movwf	fputc@c
  8425  2DEE  3000               	movlw	0
  8426  2DEF  00F2               	movwf	fputc@c+1
  8427  2DF0  0020               	movlb	0	; select bank0
  8428  2DF1  0821               	movf	stoa@fp+1,w
  8429  2DF2  00F4               	movwf	fputc@fp+1
  8430  2DF3  0820               	movf	stoa@fp,w
  8431  2DF4  00F3               	movwf	fputc@fp
  8432  2DF5  31B6  2605  31AD   	fcall	_fputc
  8433                           
  8434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8435  2DF8  3001               	movlw	1
  8436  2DF9  0020               	movlb	0	; select bank0
  8437  2DFA  07B3               	addwf	stoa@l,f
  8438  2DFB  3000               	movlw	0
  8439  2DFC  3DB4               	addwfc	stoa@l+1,f
  8440  2DFD                     l4528:	
  8441                           
  8442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8443  2DFD  0020               	movlb	0	; select bank0
  8444  2DFE  0834               	movf	stoa@l+1,w
  8445  2DFF  3A80               	xorlw	128
  8446  2E00  00FA               	movwf	??_stoa
  8447  2E01  082E               	movf	stoa@w+1,w
  8448  2E02  3A80               	xorlw	128
  8449  2E03  027A               	subwf	??_stoa,w
  8450  2E04  1D03               	skipz
  8451  2E05  2E08               	goto	u4925
  8452  2E06  082D               	movf	stoa@w,w
  8453  2E07  0233               	subwf	stoa@l,w
  8454  2E08                     u4925:	
  8455  2E08  1C03               	skipc
  8456  2E09  2DEC               	goto	l4524
  8457  2E0A                     l4530:	
  8458                           
  8459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8460  2E0A  0020               	movlb	0	; select bank0
  8461  2E0B  01AB               	clrf	stoa@i
  8462  2E0C  01AC               	clrf	stoa@i+1
  8463  2E0D                     l4538:	
  8464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8465                           
  8466                           
  8467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8468  2E0D  082C               	movf	stoa@i+1,w
  8469  2E0E  3A80               	xorlw	128
  8470  2E0F  00FA               	movwf	??_stoa
  8471  2E10  0832               	movf	stoa@p+1,w
  8472  2E11  3A80               	xorlw	128
  8473  2E12  027A               	subwf	??_stoa,w
  8474  2E13  1D03               	skipz
  8475  2E14  2E17               	goto	u4935
  8476  2E15  0831               	movf	stoa@p,w
  8477  2E16  022B               	subwf	stoa@i,w
  8478  2E17                     u4935:	
  8479  2E17  1803               	btfsc	3,0
  8480  2E18  2E36               	goto	l879
  8481                           
  8482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8483  2E19  0020               	movlb	0	; select bank0
  8484  2E1A  082F               	movf	stoa@cp,w
  8485  2E1B  0086               	movwf	6
  8486  2E1C  0830               	movf	stoa@cp+1,w
  8487  2E1D  0087               	movwf	7
  8488  2E1E  0801               	movf	1,w
  8489  2E1F  00FA               	movwf	??_stoa
  8490  2E20  01FB               	clrf	??_stoa+1
  8491  2E21  087A               	movf	??_stoa,w
  8492  2E22  00F1               	movwf	fputc@c
  8493  2E23  087B               	movf	??_stoa+1,w
  8494  2E24  00F2               	movwf	fputc@c+1
  8495  2E25  0821               	movf	stoa@fp+1,w
  8496  2E26  00F4               	movwf	fputc@fp+1
  8497  2E27  0820               	movf	stoa@fp,w
  8498  2E28  00F3               	movwf	fputc@fp
  8499  2E29  31B6  2605  31AD   	fcall	_fputc
  8500                           
  8501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8502  2E2C  3001               	movlw	1
  8503  2E2D  0020               	movlb	0	; select bank0
  8504  2E2E  07AF               	addwf	stoa@cp,f
  8505  2E2F  3000               	movlw	0
  8506  2E30  3DB0               	addwfc	stoa@cp+1,f
  8507                           
  8508                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8509  2E31  3001               	movlw	1
  8510  2E32  07AB               	addwf	stoa@i,f
  8511  2E33  3000               	movlw	0
  8512  2E34  3DAC               	addwfc	stoa@i+1,f
  8513  2E35  2E0D               	goto	l4538
  8514  2E36                     l879:	
  8515                           
  8516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8517  2E36  0022               	movlb	2	; select bank2
  8518  2E37  186A               	btfsc	_flags^(0+256),0
  8519  2E38  2E4B               	goto	l4546
  8520  2E39  2E58               	goto	l4548
  8521  2E3A                     l4542:	
  8522                           
  8523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8524  2E3A  3020               	movlw	32
  8525  2E3B  00F1               	movwf	fputc@c
  8526  2E3C  3000               	movlw	0
  8527  2E3D  00F2               	movwf	fputc@c+1
  8528  2E3E  0020               	movlb	0	; select bank0
  8529  2E3F  0821               	movf	stoa@fp+1,w
  8530  2E40  00F4               	movwf	fputc@fp+1
  8531  2E41  0820               	movf	stoa@fp,w
  8532  2E42  00F3               	movwf	fputc@fp
  8533  2E43  31B6  2605  31AD   	fcall	_fputc
  8534                           
  8535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8536  2E46  3001               	movlw	1
  8537  2E47  0020               	movlb	0	; select bank0
  8538  2E48  07B3               	addwf	stoa@l,f
  8539  2E49  3000               	movlw	0
  8540  2E4A  3DB4               	addwfc	stoa@l+1,f
  8541  2E4B                     l4546:	
  8542                           
  8543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8544  2E4B  0020               	movlb	0	; select bank0
  8545  2E4C  0834               	movf	stoa@l+1,w
  8546  2E4D  3A80               	xorlw	128
  8547  2E4E  00FA               	movwf	??_stoa
  8548  2E4F  082E               	movf	stoa@w+1,w
  8549  2E50  3A80               	xorlw	128
  8550  2E51  027A               	subwf	??_stoa,w
  8551  2E52  1D03               	skipz
  8552  2E53  2E56               	goto	u4955
  8553  2E54  082D               	movf	stoa@w,w
  8554  2E55  0233               	subwf	stoa@l,w
  8555  2E56                     u4955:	
  8556  2E56  1C03               	skipc
  8557  2E57  2E3A               	goto	l4542
  8558  2E58                     l4548:	
  8559                           
  8560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8561  2E58  0020               	movlb	0	; select bank0
  8562  2E59  0834               	movf	stoa@l+1,w
  8563  2E5A  00A1               	movwf	?_stoa+1
  8564  2E5B  0833               	movf	stoa@l,w
  8565  2E5C  00A0               	movwf	?_stoa
  8566  2E5D  0008               	return
  8567  2E5E                     __end_of_stoa:	
  8568                           
  8569                           	psect	text18
  8570  22F5                     __ptext18:	
  8571 ;; *************** function _otoa *****************
  8572 ;; Defined at:
  8573 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8574 ;; Parameters:    Size  Location     Type
  8575 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8576 ;;		 -> vsnprintf@f(6), 
  8577 ;;  d               8   18[BANK0 ] unsigned long long 
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;  n               8   40[BANK0 ] unsigned long long 
  8580 ;;  i               2   48[BANK0 ] int 
  8581 ;;  w               2   38[BANK0 ] int 
  8582 ;;  t               2   36[BANK0 ] int 
  8583 ;;  p               2   34[BANK0 ] int 
  8584 ;; Return value:  Size  Location     Type
  8585 ;;                  2   16[BANK0 ] int 
  8586 ;; Registers used:
  8587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8588 ;; Tracked objects:
  8589 ;;		On entry : 0/0
  8590 ;;		On exit  : 0/0
  8591 ;;		Unchanged: 0/0
  8592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8593 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8594 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8595 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8596 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8597 ;;Total ram usage:       34 bytes
  8598 ;; Hardware stack levels used:    1
  8599 ;; Hardware stack levels required when called:    5
  8600 ;; This function calls:
  8601 ;;		_pad
  8602 ;; This function is called by:
  8603 ;;		_vfpfcnvrt
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           
  8608                           ;psect for function _otoa
  8609  22F5                     _otoa:	
  8610                           
  8611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8612                           
  8613                           ;incstack = 0
  8614                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8615  22F5  0022               	movlb	2	; select bank2
  8616  22F6  1BE9               	btfsc	(_prec+1)^(0+256),7
  8617  22F7  2AFC               	goto	l848
  8618                           
  8619                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8620  22F8  30FD               	movlw	253
  8621  22F9  05EA               	andwf	_flags^(0+256),f
  8622  22FA  30FF               	movlw	255
  8623  22FB  05EB               	andwf	(_flags+1)^(0+256),f
  8624  22FC                     l848:	
  8625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8626                           
  8627                           
  8628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8629  22FC  0869               	movf	(_prec+1)^(0+256),w
  8630  22FD  3A80               	xorlw	128
  8631  22FE  0020               	movlb	0	; select bank0
  8632  22FF  00BA               	movwf	??_otoa
  8633  2300  3080               	movlw	128
  8634  2301  023A               	subwf	??_otoa,w
  8635  2302  1D03               	skipz
  8636  2303  2B07               	goto	u8255
  8637  2304  3001               	movlw	1
  8638  2305  0022               	movlb	2	; select bank2
  8639  2306  0268               	subwf	_prec^(0+256),w
  8640  2307                     u8255:	
  8641  2307  1803               	skipnc
  8642  2308  2B0F               	goto	l6728
  8643  2309  3001               	movlw	1
  8644  230A  0020               	movlb	0	; select bank0
  8645  230B  00C2               	movwf	otoa@p
  8646  230C  3000               	movlw	0
  8647  230D  00C3               	movwf	otoa@p+1
  8648  230E  2B17               	goto	l852
  8649  230F                     l6728:	
  8650  230F  0022               	movlb	2	; select bank2
  8651  2310  0869               	movf	(_prec+1)^(0+256),w
  8652  2311  0020               	movlb	0	; select bank0
  8653  2312  00C3               	movwf	otoa@p+1
  8654  2313  0022               	movlb	2	; select bank2
  8655  2314  0868               	movf	_prec^(0+256),w
  8656  2315  0020               	movlb	0	; select bank0
  8657  2316  00C2               	movwf	otoa@p
  8658  2317                     l852:	
  8659                           
  8660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8661  2317  0022               	movlb	2	; select bank2
  8662  2318  0867               	movf	(_width+1)^(0+256),w
  8663  2319  0020               	movlb	0	; select bank0
  8664  231A  00C7               	movwf	otoa@w+1
  8665  231B  0022               	movlb	2	; select bank2
  8666  231C  0866               	movf	_width^(0+256),w
  8667  231D  0020               	movlb	0	; select bank0
  8668  231E  00C6               	movwf	otoa@w
  8669                           
  8670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8671  231F  0832               	movf	otoa@d,w
  8672  2320  00C8               	movwf	otoa@n
  8673  2321  0833               	movf	otoa@d+1,w
  8674  2322  00C9               	movwf	otoa@n+1
  8675  2323  0834               	movf	otoa@d+2,w
  8676  2324  00CA               	movwf	otoa@n+2
  8677  2325  0835               	movf	otoa@d+3,w
  8678  2326  00CB               	movwf	otoa@n+3
  8679  2327  0836               	movf	otoa@d+4,w
  8680  2328  00CC               	movwf	otoa@n+4
  8681  2329  0837               	movf	otoa@d+5,w
  8682  232A  00CD               	movwf	otoa@n+5
  8683  232B  0838               	movf	otoa@d+6,w
  8684  232C  00CE               	movwf	otoa@n+6
  8685  232D  0839               	movf	otoa@d+7,w
  8686  232E  00CF               	movwf	otoa@n+7
  8687                           
  8688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8689  232F  301F               	movlw	31
  8690  2330  00D0               	movwf	otoa@i
  8691  2331  3000               	movlw	0
  8692  2332  00D1               	movwf	otoa@i+1
  8693                           
  8694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8695  2333  0024               	movlb	4	; select bank4
  8696  2334  01D3               	clrf	(_dbuf^(0+512)+31)
  8697                           
  8698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8699  2335  0020               	movlb	0	; select bank0
  8700  2336  01C4               	clrf	otoa@t
  8701  2337  01C5               	clrf	otoa@t+1
  8702                           
  8703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8704  2338  2BAC               	goto	l853
  8705  2339                     l6746:	
  8706  2339  0020               	movlb	0	; select bank0
  8707  233A  0848               	movf	otoa@n,w
  8708  233B  0449               	iorwf	otoa@n+1,w
  8709  233C  044A               	iorwf	otoa@n+2,w
  8710  233D  044B               	iorwf	otoa@n+3,w
  8711  233E  044C               	iorwf	otoa@n+4,w
  8712  233F  044D               	iorwf	otoa@n+5,w
  8713  2340  044E               	iorwf	otoa@n+6,w
  8714  2341  044F               	iorwf	otoa@n+7,w
  8715  2342  1D03               	skipz
  8716  2343  2B5E               	goto	l6736
  8717  2344  0843               	movf	otoa@p+1,w
  8718  2345  3A80               	xorlw	128
  8719  2346  00BA               	movwf	??_otoa
  8720  2347  3080               	movlw	128
  8721  2348  023A               	subwf	??_otoa,w
  8722  2349  1D03               	skipz
  8723  234A  2B4D               	goto	u8295
  8724  234B  3001               	movlw	1
  8725  234C  0242               	subwf	otoa@p,w
  8726  234D                     u8295:	
  8727  234D  1803               	skipnc
  8728  234E  2B5E               	goto	l6736
  8729  234F  0020               	movlb	0	; select bank0
  8730  2350  0847               	movf	otoa@w+1,w
  8731  2351  3A80               	xorlw	128
  8732  2352  00BA               	movwf	??_otoa
  8733  2353  3080               	movlw	128
  8734  2354  023A               	subwf	??_otoa,w
  8735  2355  1D03               	skipz
  8736  2356  2B59               	goto	u8305
  8737  2357  3001               	movlw	1
  8738  2358  0246               	subwf	otoa@w,w
  8739  2359                     u8305:	
  8740  2359  1C03               	skipc
  8741  235A  2BB7               	goto	l859
  8742  235B  0022               	movlb	2	; select bank2
  8743  235C  1CEA               	btfss	_flags^(0+256),1
  8744  235D  2BB7               	goto	l859
  8745  235E                     l6736:	
  8746                           
  8747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8748  235E  30FF               	movlw	255
  8749  235F  0020               	movlb	0	; select bank0
  8750  2360  07D0               	addwf	otoa@i,f
  8751  2361  30FF               	movlw	255
  8752  2362  3DD1               	addwfc	otoa@i+1,f
  8753                           
  8754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8755  2363  3007               	movlw	7
  8756  2364  0548               	andwf	otoa@n,w
  8757  2365  00C4               	movwf	otoa@t
  8758  2366  3000               	movlw	0
  8759  2367  0549               	andwf	otoa@n+1,w
  8760  2368  00C5               	movwf	otoa@t+1
  8761                           
  8762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8763  2369  0844               	movf	otoa@t,w
  8764  236A  3E30               	addlw	48
  8765  236B  00BA               	movwf	??_otoa
  8766  236C  0850               	movf	otoa@i,w
  8767  236D  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8768  236E  0086               	movwf	6
  8769  236F  3002               	movlw	2	; select bank4/5
  8770  2370  0087               	movwf	7
  8771  2371  083A               	movf	??_otoa,w
  8772  2372  0081               	movwf	1
  8773                           
  8774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8775  2373  30FF               	movlw	255
  8776  2374  07C2               	addwf	otoa@p,f
  8777  2375  30FF               	movlw	255
  8778  2376  3DC3               	addwfc	otoa@p+1,f
  8779                           
  8780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8781  2377  30FF               	movlw	255
  8782  2378  07C6               	addwf	otoa@w,f
  8783  2379  30FF               	movlw	255
  8784  237A  3DC7               	addwfc	otoa@w+1,f
  8785                           
  8786                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8787  237B  3048               	movlw	low otoa@n
  8788  237C  0086               	movwf	6
  8789  237D  3000               	movlw	high otoa@n
  8790  237E  0087               	movwf	7
  8791  237F  3F40               	moviw [0]fsr1
  8792  2380  00BA               	movwf	??_otoa
  8793  2381  3F41               	moviw [1]fsr1
  8794  2382  00BB               	movwf	??_otoa+1
  8795  2383  3F42               	moviw [2]fsr1
  8796  2384  00BC               	movwf	??_otoa+2
  8797  2385  3F43               	moviw [3]fsr1
  8798  2386  00BD               	movwf	??_otoa+3
  8799  2387  3F44               	moviw [4]fsr1
  8800  2388  00BE               	movwf	??_otoa+4
  8801  2389  3F45               	moviw [5]fsr1
  8802  238A  00BF               	movwf	??_otoa+5
  8803  238B  3F46               	moviw [6]fsr1
  8804  238C  00C0               	movwf	??_otoa+6
  8805  238D  3F47               	moviw [7]fsr1
  8806  238E  00C1               	movwf	??_otoa+7
  8807  238F  3003               	movlw	3
  8808  2390                     u8265:	
  8809  2390  0020               	movlb	0	; select bank0
  8810  2391  36C1               	lsrf	??_otoa+7,f
  8811  2392  0CC0               	rrf	??_otoa+6,f
  8812  2393  0CBF               	rrf	??_otoa+5,f
  8813  2394  0CBE               	rrf	??_otoa+4,f
  8814  2395  0CBD               	rrf	??_otoa+3,f
  8815  2396  0CBC               	rrf	??_otoa+2,f
  8816  2397  0CBB               	rrf	??_otoa+1,f
  8817  2398  0CBA               	rrf	??_otoa,f
  8818  2399  0B89               	decfsz	9,f
  8819  239A  2B90               	goto	u8265
  8820  239B  0020               	movlb	0	; select bank0
  8821  239C  0841               	movf	??_otoa+7,w
  8822  239D  00CF               	movwf	otoa@n+7
  8823  239E  0840               	movf	??_otoa+6,w
  8824  239F  00CE               	movwf	otoa@n+6
  8825  23A0  083F               	movf	??_otoa+5,w
  8826  23A1  00CD               	movwf	otoa@n+5
  8827  23A2  083E               	movf	??_otoa+4,w
  8828  23A3  00CC               	movwf	otoa@n+4
  8829  23A4  083D               	movf	??_otoa+3,w
  8830  23A5  00CB               	movwf	otoa@n+3
  8831  23A6  083C               	movf	??_otoa+2,w
  8832  23A7  00CA               	movwf	otoa@n+2
  8833  23A8  083B               	movf	??_otoa+1,w
  8834  23A9  00C9               	movwf	otoa@n+1
  8835  23AA  083A               	movf	??_otoa,w
  8836  23AB  00C8               	movwf	otoa@n
  8837  23AC                     l853:	
  8838                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8839                           
  8840                           
  8841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8842  23AC  0851               	movf	otoa@i+1,w
  8843  23AD  3A80               	xorlw	128
  8844  23AE  00BA               	movwf	??_otoa
  8845  23AF  3080               	movlw	128
  8846  23B0  023A               	subwf	??_otoa,w
  8847  23B1  1D03               	skipz
  8848  23B2  2BB5               	goto	u8275
  8849  23B3  3001               	movlw	1
  8850  23B4  0250               	subwf	otoa@i,w
  8851  23B5                     u8275:	
  8852  23B5  1803               	btfsc	3,0
  8853  23B6  2B39               	goto	l6746
  8854  23B7                     l859:	
  8855                           
  8856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8857  23B7  0022               	movlb	2	; select bank2
  8858  23B8  1E6A               	btfss	_flags^(0+256),4
  8859  23B9  2BD0               	goto	l6762
  8860  23BA  0020               	movlb	0	; select bank0
  8861  23BB  0844               	movf	otoa@t,w
  8862  23BC  0445               	iorwf	otoa@t+1,w
  8863  23BD  1903               	btfsc	3,2
  8864  23BE  2BD0               	goto	l6762
  8865                           
  8866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8867  23BF  30FF               	movlw	255
  8868  23C0  07D0               	addwf	otoa@i,f
  8869  23C1  30FF               	movlw	255
  8870  23C2  3DD1               	addwfc	otoa@i+1,f
  8871                           
  8872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8873  23C3  3030               	movlw	48
  8874  23C4  00BA               	movwf	??_otoa
  8875  23C5  0850               	movf	otoa@i,w
  8876  23C6  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8877  23C7  0086               	movwf	6
  8878  23C8  3002               	movlw	2	; select bank4/5
  8879  23C9  0087               	movwf	7
  8880  23CA  083A               	movf	??_otoa,w
  8881  23CB  0081               	movwf	1
  8882                           
  8883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8884  23CC  30FF               	movlw	255
  8885  23CD  07C6               	addwf	otoa@w,f
  8886  23CE  30FF               	movlw	255
  8887  23CF  3DC7               	addwfc	otoa@w+1,f
  8888  23D0                     l6762:	
  8889                           
  8890                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8891  23D0  0020               	movlb	0	; select bank0
  8892  23D1  0831               	movf	otoa@fp+1,w
  8893  23D2  00A7               	movwf	pad@fp+1
  8894  23D3  0830               	movf	otoa@fp,w
  8895  23D4  00A6               	movwf	pad@fp
  8896  23D5  0850               	movf	otoa@i,w
  8897  23D6  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8898  23D7  00BA               	movwf	??_otoa
  8899  23D8  083A               	movf	??_otoa,w
  8900  23D9  00A8               	movwf	pad@buf
  8901  23DA  0847               	movf	otoa@w+1,w
  8902  23DB  00AA               	movwf	pad@p+1
  8903  23DC  0846               	movf	otoa@w,w
  8904  23DD  00A9               	movwf	pad@p
  8905  23DE  31B5  2562         	fcall	_pad
  8906  23E0  0020               	movlb	0	; select bank0
  8907  23E1  0827               	movf	?_pad+1,w
  8908  23E2  00B1               	movwf	?_otoa+1
  8909  23E3  0826               	movf	?_pad,w
  8910  23E4  00B0               	movwf	?_otoa
  8911  23E5  0008               	return
  8912  23E6                     __end_of_otoa:	
  8913                           
  8914                           	psect	text19
  8915  18D5                     __ptext19:	
  8916 ;; *************** function _dtoa *****************
  8917 ;; Defined at:
  8918 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8919 ;; Parameters:    Size  Location     Type
  8920 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8921 ;;		 -> vsnprintf@f(6), 
  8922 ;;  d               8   18[BANK0 ] long long 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  n               8   37[BANK0 ] long long 
  8925 ;;  i               2   45[BANK0 ] int 
  8926 ;;  s               2   35[BANK0 ] int 
  8927 ;;  w               2   33[BANK0 ] int 
  8928 ;;  p               2   31[BANK0 ] int 
  8929 ;; Return value:  Size  Location     Type
  8930 ;;                  2   16[BANK0 ] int 
  8931 ;; Registers used:
  8932 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8933 ;; Tracked objects:
  8934 ;;		On entry : 0/0
  8935 ;;		On exit  : 0/0
  8936 ;;		Unchanged: 0/0
  8937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8938 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8939 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8940 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8941 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8942 ;;Total ram usage:       31 bytes
  8943 ;; Hardware stack levels used:    1
  8944 ;; Hardware stack levels required when called:    5
  8945 ;; This function calls:
  8946 ;;		___aodiv
  8947 ;;		___aomod
  8948 ;;		_abs
  8949 ;;		_pad
  8950 ;; This function is called by:
  8951 ;;		_vfpfcnvrt
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           
  8956                           ;psect for function _dtoa
  8957  18D5                     _dtoa:	
  8958                           
  8959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8960                           
  8961                           ;incstack = 0
  8962                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8963  18D5  0020               	movlb	0	; select bank0
  8964  18D6  0832               	movf	dtoa@d,w
  8965  18D7  00C5               	movwf	dtoa@n
  8966  18D8  0833               	movf	dtoa@d+1,w
  8967  18D9  00C6               	movwf	dtoa@n+1
  8968  18DA  0834               	movf	dtoa@d+2,w
  8969  18DB  00C7               	movwf	dtoa@n+2
  8970  18DC  0835               	movf	dtoa@d+3,w
  8971  18DD  00C8               	movwf	dtoa@n+3
  8972  18DE  0836               	movf	dtoa@d+4,w
  8973  18DF  00C9               	movwf	dtoa@n+4
  8974  18E0  0837               	movf	dtoa@d+5,w
  8975  18E1  00CA               	movwf	dtoa@n+5
  8976  18E2  0838               	movf	dtoa@d+6,w
  8977  18E3  00CB               	movwf	dtoa@n+6
  8978  18E4  0839               	movf	dtoa@d+7,w
  8979  18E5  00CC               	movwf	dtoa@n+7
  8980                           
  8981                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8982  18E6  3045               	movlw	low dtoa@n
  8983  18E7  0086               	movwf	6
  8984  18E8  3000               	movlw	high dtoa@n
  8985  18E9  0087               	movwf	7
  8986  18EA  3F47               	moviw [7]fsr1
  8987  18EB  00BA               	movwf	??_dtoa
  8988  18EC  1FBA               	btfss	??_dtoa,7
  8989  18ED  28F0               	goto	u8080
  8990  18EE  3001               	movlw	1
  8991  18EF  28F1               	goto	u8090
  8992  18F0                     u8080:	
  8993  18F0  3000               	movlw	0
  8994  18F1                     u8090:	
  8995  18F1  0020               	movlb	0	; select bank0
  8996  18F2  00BB               	movwf	??_dtoa+1
  8997  18F3  01BC               	clrf	??_dtoa+2
  8998  18F4  083B               	movf	??_dtoa+1,w
  8999  18F5  00C3               	movwf	dtoa@s
  9000  18F6  083C               	movf	??_dtoa+2,w
  9001  18F7  00C4               	movwf	dtoa@s+1
  9002                           
  9003                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  9004  18F8  0843               	movf	dtoa@s,w
  9005  18F9  0444               	iorwf	dtoa@s+1,w
  9006  18FA  1903               	btfsc	3,2
  9007  18FB  291A               	goto	l822
  9008                           
  9009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  9010  18FC  09C5               	comf	dtoa@n,f
  9011  18FD  09C6               	comf	dtoa@n+1,f
  9012  18FE  09C7               	comf	dtoa@n+2,f
  9013  18FF  09C8               	comf	dtoa@n+3,f
  9014  1900  09C9               	comf	dtoa@n+4,f
  9015  1901  09CA               	comf	dtoa@n+5,f
  9016  1902  09CB               	comf	dtoa@n+6,f
  9017  1903  09CC               	comf	dtoa@n+7,f
  9018  1904  0AC5               	incf	dtoa@n,f
  9019  1905  1D03               	skipz
  9020  1906  291A               	goto	l822
  9021  1907  0AC6               	incf	dtoa@n+1,f
  9022  1908  1D03               	skipz
  9023  1909  291A               	goto	l822
  9024  190A  0AC7               	incf	dtoa@n+2,f
  9025  190B  1D03               	skipz
  9026  190C  291A               	goto	l822
  9027  190D  0AC8               	incf	dtoa@n+3,f
  9028  190E  1D03               	skipz
  9029  190F  291A               	goto	l822
  9030  1910  0AC9               	incf	dtoa@n+4,f
  9031  1911  1D03               	skipz
  9032  1912  291A               	goto	l822
  9033  1913  0ACA               	incf	dtoa@n+5,f
  9034  1914  1D03               	skipz
  9035  1915  291A               	goto	l822
  9036  1916  0ACB               	incf	dtoa@n+6,f
  9037  1917  1D03               	skipz
  9038  1918  291A               	goto	l822
  9039  1919  0ACC               	incf	dtoa@n+7,f
  9040  191A                     l822:	
  9041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  9042                           
  9043                           
  9044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  9045  191A  0022               	movlb	2	; select bank2
  9046  191B  1BE9               	btfsc	(_prec+1)^(0+256),7
  9047  191C  2921               	goto	l823
  9048                           
  9049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  9050  191D  30FD               	movlw	253
  9051  191E  05EA               	andwf	_flags^(0+256),f
  9052  191F  30FF               	movlw	255
  9053  1920  05EB               	andwf	(_flags+1)^(0+256),f
  9054  1921                     l823:	
  9055                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  9056                           
  9057                           
  9058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  9059  1921  0869               	movf	(_prec+1)^(0+256),w
  9060  1922  3A80               	xorlw	128
  9061  1923  0020               	movlb	0	; select bank0
  9062  1924  00BA               	movwf	??_dtoa
  9063  1925  3080               	movlw	128
  9064  1926  023A               	subwf	??_dtoa,w
  9065  1927  1D03               	skipz
  9066  1928  292C               	goto	u8135
  9067  1929  3001               	movlw	1
  9068  192A  0022               	movlb	2	; select bank2
  9069  192B  0268               	subwf	_prec^(0+256),w
  9070  192C                     u8135:	
  9071  192C  1803               	skipnc
  9072  192D  2934               	goto	l6676
  9073  192E  3001               	movlw	1
  9074  192F  0020               	movlb	0	; select bank0
  9075  1930  00BF               	movwf	dtoa@p
  9076  1931  3000               	movlw	0
  9077  1932  00C0               	movwf	dtoa@p+1
  9078  1933  293C               	goto	l827
  9079  1934                     l6676:	
  9080  1934  0022               	movlb	2	; select bank2
  9081  1935  0869               	movf	(_prec+1)^(0+256),w
  9082  1936  0020               	movlb	0	; select bank0
  9083  1937  00C0               	movwf	dtoa@p+1
  9084  1938  0022               	movlb	2	; select bank2
  9085  1939  0868               	movf	_prec^(0+256),w
  9086  193A  0020               	movlb	0	; select bank0
  9087  193B  00BF               	movwf	dtoa@p
  9088  193C                     l827:	
  9089                           
  9090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  9091  193C  0022               	movlb	2	; select bank2
  9092  193D  0867               	movf	(_width+1)^(0+256),w
  9093  193E  0020               	movlb	0	; select bank0
  9094  193F  00C2               	movwf	dtoa@w+1
  9095  1940  0022               	movlb	2	; select bank2
  9096  1941  0866               	movf	_width^(0+256),w
  9097  1942  0020               	movlb	0	; select bank0
  9098  1943  00C1               	movwf	dtoa@w
  9099                           
  9100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  9101  1944  0843               	movf	dtoa@s,w
  9102  1945  0444               	iorwf	dtoa@s+1,w
  9103  1946  1D03               	btfss	3,2
  9104  1947  294B               	goto	l6682
  9105  1948  0022               	movlb	2	; select bank2
  9106  1949  1D6A               	btfss	_flags^(0+256),2
  9107  194A  2950               	goto	l828
  9108  194B                     l6682:	
  9109                           
  9110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  9111  194B  30FF               	movlw	255
  9112  194C  0020               	movlb	0	; select bank0
  9113  194D  07C1               	addwf	dtoa@w,f
  9114  194E  30FF               	movlw	255
  9115  194F  3DC2               	addwfc	dtoa@w+1,f
  9116  1950                     l828:	
  9117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  9118                           
  9119                           
  9120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  9121  1950  301F               	movlw	31
  9122  1951  0020               	movlb	0	; select bank0
  9123  1952  00CD               	movwf	dtoa@i
  9124  1953  3000               	movlw	0
  9125  1954  00CE               	movwf	dtoa@i+1
  9126                           
  9127                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  9128  1955  0024               	movlb	4	; select bank4
  9129  1956  01D3               	clrf	(_dbuf^(0+512)+31)
  9130                           
  9131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9132  1957  29E6               	goto	l831
  9133  1958                     l6696:	
  9134  1958  0020               	movlb	0	; select bank0
  9135  1959  0845               	movf	dtoa@n,w
  9136  195A  0446               	iorwf	dtoa@n+1,w
  9137  195B  0447               	iorwf	dtoa@n+2,w
  9138  195C  0448               	iorwf	dtoa@n+3,w
  9139  195D  0449               	iorwf	dtoa@n+4,w
  9140  195E  044A               	iorwf	dtoa@n+5,w
  9141  195F  044B               	iorwf	dtoa@n+6,w
  9142  1960  044C               	iorwf	dtoa@n+7,w
  9143  1961  1D03               	skipz
  9144  1962  297D               	goto	l6686
  9145  1963  0840               	movf	dtoa@p+1,w
  9146  1964  3A80               	xorlw	128
  9147  1965  00BA               	movwf	??_dtoa
  9148  1966  3080               	movlw	128
  9149  1967  023A               	subwf	??_dtoa,w
  9150  1968  1D03               	skipz
  9151  1969  296C               	goto	u8185
  9152  196A  3001               	movlw	1
  9153  196B  023F               	subwf	dtoa@p,w
  9154  196C                     u8185:	
  9155  196C  1803               	skipnc
  9156  196D  297D               	goto	l6686
  9157  196E  0020               	movlb	0	; select bank0
  9158  196F  0842               	movf	dtoa@w+1,w
  9159  1970  3A80               	xorlw	128
  9160  1971  00BA               	movwf	??_dtoa
  9161  1972  3080               	movlw	128
  9162  1973  023A               	subwf	??_dtoa,w
  9163  1974  1D03               	skipz
  9164  1975  2978               	goto	u8195
  9165  1976  3001               	movlw	1
  9166  1977  0241               	subwf	dtoa@w,w
  9167  1978                     u8195:	
  9168  1978  1C03               	skipc
  9169  1979  29F2               	goto	l6704
  9170  197A  0022               	movlb	2	; select bank2
  9171  197B  1CEA               	btfss	_flags^(0+256),1
  9172  197C  29F2               	goto	l6704
  9173  197D                     l6686:	
  9174                           
  9175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  9176  197D  30FF               	movlw	255
  9177  197E  0020               	movlb	0	; select bank0
  9178  197F  07CD               	addwf	dtoa@i,f
  9179  1980  30FF               	movlw	255
  9180  1981  3DCE               	addwfc	dtoa@i+1,f
  9181                           
  9182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  9183  1982  300A               	movlw	10
  9184  1983  00A0               	movwf	___aomod@divisor
  9185  1984  01A1               	clrf	___aomod@divisor+1
  9186  1985  01A2               	clrf	___aomod@divisor+2
  9187  1986  01A3               	clrf	___aomod@divisor+3
  9188  1987  01A4               	clrf	___aomod@divisor+4
  9189  1988  01A5               	clrf	___aomod@divisor+5
  9190  1989  01A6               	clrf	___aomod@divisor+6
  9191  198A  01A7               	clrf	___aomod@divisor+7
  9192  198B  0845               	movf	dtoa@n,w
  9193  198C  00A8               	movwf	___aomod@dividend
  9194  198D  0846               	movf	dtoa@n+1,w
  9195  198E  00A9               	movwf	___aomod@dividend+1
  9196  198F  0847               	movf	dtoa@n+2,w
  9197  1990  00AA               	movwf	___aomod@dividend+2
  9198  1991  0848               	movf	dtoa@n+3,w
  9199  1992  00AB               	movwf	___aomod@dividend+3
  9200  1993  0849               	movf	dtoa@n+4,w
  9201  1994  00AC               	movwf	___aomod@dividend+4
  9202  1995  084A               	movf	dtoa@n+5,w
  9203  1996  00AD               	movwf	___aomod@dividend+5
  9204  1997  084B               	movf	dtoa@n+6,w
  9205  1998  00AE               	movwf	___aomod@dividend+6
  9206  1999  084C               	movf	dtoa@n+7,w
  9207  199A  00AF               	movwf	___aomod@dividend+7
  9208  199B  31A1  2138  3198   	fcall	___aomod
  9209  199E  0020               	movlb	0	; select bank0
  9210  199F  0821               	movf	?___aomod+1,w
  9211  19A0  00F5               	movwf	abs@a+1
  9212  19A1  0820               	movf	?___aomod,w
  9213  19A2  00F4               	movwf	abs@a
  9214  19A3  31B2  220A  3198   	fcall	_abs
  9215  19A6  0874               	movf	?_abs,w
  9216  19A7  3E30               	addlw	48
  9217  19A8  0020               	movlb	0	; select bank0
  9218  19A9  00BA               	movwf	??_dtoa
  9219  19AA  084D               	movf	dtoa@i,w
  9220  19AB  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9221  19AC  0086               	movwf	6
  9222  19AD  3002               	movlw	2	; select bank4/5
  9223  19AE  0087               	movwf	7
  9224  19AF  083A               	movf	??_dtoa,w
  9225  19B0  0081               	movwf	1
  9226                           
  9227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  9228  19B1  30FF               	movlw	255
  9229  19B2  07BF               	addwf	dtoa@p,f
  9230  19B3  30FF               	movlw	255
  9231  19B4  3DC0               	addwfc	dtoa@p+1,f
  9232                           
  9233                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  9234  19B5  30FF               	movlw	255
  9235  19B6  07C1               	addwf	dtoa@w,f
  9236  19B7  30FF               	movlw	255
  9237  19B8  3DC2               	addwfc	dtoa@w+1,f
  9238                           
  9239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  9240  19B9  300A               	movlw	10
  9241  19BA  00A0               	movwf	___aodiv@divisor
  9242  19BB  01A1               	clrf	___aodiv@divisor+1
  9243  19BC  01A2               	clrf	___aodiv@divisor+2
  9244  19BD  01A3               	clrf	___aodiv@divisor+3
  9245  19BE  01A4               	clrf	___aodiv@divisor+4
  9246  19BF  01A5               	clrf	___aodiv@divisor+5
  9247  19C0  01A6               	clrf	___aodiv@divisor+6
  9248  19C1  01A7               	clrf	___aodiv@divisor+7
  9249  19C2  0845               	movf	dtoa@n,w
  9250  19C3  00A8               	movwf	___aodiv@dividend
  9251  19C4  0846               	movf	dtoa@n+1,w
  9252  19C5  00A9               	movwf	___aodiv@dividend+1
  9253  19C6  0847               	movf	dtoa@n+2,w
  9254  19C7  00AA               	movwf	___aodiv@dividend+2
  9255  19C8  0848               	movf	dtoa@n+3,w
  9256  19C9  00AB               	movwf	___aodiv@dividend+3
  9257  19CA  0849               	movf	dtoa@n+4,w
  9258  19CB  00AC               	movwf	___aodiv@dividend+4
  9259  19CC  084A               	movf	dtoa@n+5,w
  9260  19CD  00AD               	movwf	___aodiv@dividend+5
  9261  19CE  084B               	movf	dtoa@n+6,w
  9262  19CF  00AE               	movwf	___aodiv@dividend+6
  9263  19D0  084C               	movf	dtoa@n+7,w
  9264  19D1  00AF               	movwf	___aodiv@dividend+7
  9265  19D2  31A3  23E6  3198   	fcall	___aodiv
  9266  19D5  0020               	movlb	0	; select bank0
  9267  19D6  0820               	movf	?___aodiv,w
  9268  19D7  00C5               	movwf	dtoa@n
  9269  19D8  0821               	movf	?___aodiv+1,w
  9270  19D9  00C6               	movwf	dtoa@n+1
  9271  19DA  0822               	movf	?___aodiv+2,w
  9272  19DB  00C7               	movwf	dtoa@n+2
  9273  19DC  0823               	movf	?___aodiv+3,w
  9274  19DD  00C8               	movwf	dtoa@n+3
  9275  19DE  0824               	movf	?___aodiv+4,w
  9276  19DF  00C9               	movwf	dtoa@n+4
  9277  19E0  0825               	movf	?___aodiv+5,w
  9278  19E1  00CA               	movwf	dtoa@n+5
  9279  19E2  0826               	movf	?___aodiv+6,w
  9280  19E3  00CB               	movwf	dtoa@n+6
  9281  19E4  0827               	movf	?___aodiv+7,w
  9282  19E5  00CC               	movwf	dtoa@n+7
  9283  19E6                     l831:	
  9284                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  9285                           
  9286                           
  9287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9288  19E6  0020               	movlb	0	; select bank0
  9289  19E7  084E               	movf	dtoa@i+1,w
  9290  19E8  3A80               	xorlw	128
  9291  19E9  00BA               	movwf	??_dtoa
  9292  19EA  3080               	movlw	128
  9293  19EB  023A               	subwf	??_dtoa,w
  9294  19EC  1D03               	skipz
  9295  19ED  29F0               	goto	u8165
  9296  19EE  3001               	movlw	1
  9297  19EF  024D               	subwf	dtoa@i,w
  9298  19F0                     u8165:	
  9299  19F0  1803               	btfsc	3,0
  9300  19F1  2958               	goto	l6696
  9301  19F2                     l6704:	
  9302                           
  9303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  9304  19F2  0020               	movlb	0	; select bank0
  9305  19F3  0843               	movf	dtoa@s,w
  9306  19F4  0444               	iorwf	dtoa@s+1,w
  9307  19F5  1D03               	btfss	3,2
  9308  19F6  29FA               	goto	l6708
  9309  19F7  0022               	movlb	2	; select bank2
  9310  19F8  1D6A               	btfss	_flags^(0+256),2
  9311  19F9  2A12               	goto	l6718
  9312  19FA                     l6708:	
  9313                           
  9314                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  9315  19FA  30FF               	movlw	255
  9316  19FB  0020               	movlb	0	; select bank0
  9317  19FC  07CD               	addwf	dtoa@i,f
  9318  19FD  30FF               	movlw	255
  9319  19FE  3DCE               	addwfc	dtoa@i+1,f
  9320                           
  9321                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9322  19FF  0843               	movf	dtoa@s,w
  9323  1A00  0444               	iorwf	dtoa@s+1,w
  9324  1A01  1D03               	btfss	3,2
  9325  1A02  2A05               	goto	l6714
  9326  1A03  302B               	movlw	43
  9327  1A04  2A06               	goto	L2
  9328  1A05                     l6714:	
  9329  1A05  302D               	movlw	45
  9330  1A06                     L2:	
  9331  1A06  00BD               	movwf	_dtoa$1320
  9332  1A07  3000               	movlw	0
  9333  1A08  00BE               	movwf	_dtoa$1320+1
  9334  1A09  083D               	movf	_dtoa$1320,w
  9335  1A0A  00BA               	movwf	??_dtoa
  9336  1A0B  084D               	movf	dtoa@i,w
  9337  1A0C  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9338  1A0D  0086               	movwf	6
  9339  1A0E  3002               	movlw	2	; select bank4/5
  9340  1A0F  0087               	movwf	7
  9341  1A10  083A               	movf	??_dtoa,w
  9342  1A11  0081               	movwf	1
  9343  1A12                     l6718:	
  9344                           
  9345                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9346  1A12  0020               	movlb	0	; select bank0
  9347  1A13  0831               	movf	dtoa@fp+1,w
  9348  1A14  00A7               	movwf	pad@fp+1
  9349  1A15  0830               	movf	dtoa@fp,w
  9350  1A16  00A6               	movwf	pad@fp
  9351  1A17  084D               	movf	dtoa@i,w
  9352  1A18  3E34               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9353  1A19  00BA               	movwf	??_dtoa
  9354  1A1A  083A               	movf	??_dtoa,w
  9355  1A1B  00A8               	movwf	pad@buf
  9356  1A1C  0842               	movf	dtoa@w+1,w
  9357  1A1D  00AA               	movwf	pad@p+1
  9358  1A1E  0841               	movf	dtoa@w,w
  9359  1A1F  00A9               	movwf	pad@p
  9360  1A20  31B5  2562         	fcall	_pad
  9361  1A22  0020               	movlb	0	; select bank0
  9362  1A23  0827               	movf	?_pad+1,w
  9363  1A24  00B1               	movwf	?_dtoa+1
  9364  1A25  0826               	movf	?_pad,w
  9365  1A26  00B0               	movwf	?_dtoa
  9366  1A27  0008               	return
  9367  1A28                     __end_of_dtoa:	
  9368                           
  9369                           	psect	text20
  9370  320A                     __ptext20:	
  9371 ;; *************** function _abs *****************
  9372 ;; Defined at:
  9373 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  a               2    4[COMMON] int 
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;		None
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  2    4[COMMON] int 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2, status,0
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9387 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9389 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9390 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9391 ;;Total ram usage:        4 bytes
  9392 ;; Hardware stack levels used:    1
  9393 ;; Hardware stack levels required when called:    1
  9394 ;; This function calls:
  9395 ;;		Nothing
  9396 ;; This function is called by:
  9397 ;;		_dtoa
  9398 ;; This function uses a non-reentrant model
  9399 ;;
  9400                           
  9401                           
  9402                           ;psect for function _abs
  9403  320A                     _abs:	
  9404                           
  9405                           ;incstack = 0
  9406                           ; Regs used in _abs: [wreg+status,2+status,0]
  9407  320A  0875               	movf	abs@a+1,w
  9408  320B  3A80               	xorlw	128
  9409  320C  00F6               	movwf	??_abs
  9410  320D  3080               	movlw	128
  9411  320E  0276               	subwf	??_abs,w
  9412  320F  1D03               	skipz
  9413  3210  2A13               	goto	u4145
  9414  3211  3001               	movlw	1
  9415  3212  0274               	subwf	abs@a,w
  9416  3213                     u4145:	
  9417  3213  1803               	skipnc
  9418  3214  0008               	return
  9419  3215  0974               	comf	abs@a,w
  9420  3216  00F6               	movwf	??_abs
  9421  3217  0975               	comf	abs@a+1,w
  9422  3218  00F7               	movwf	??_abs+1
  9423  3219  0AF6               	incf	??_abs,f
  9424  321A  1903               	skipnz
  9425  321B  0AF7               	incf	??_abs+1,f
  9426  321C  0876               	movf	??_abs,w
  9427  321D  00F4               	movwf	?_abs
  9428  321E  0877               	movf	??_abs+1,w
  9429  321F  00F5               	movwf	?_abs+1
  9430  3220  0008               	return
  9431  3221                     __end_of_abs:	
  9432                           
  9433                           	psect	text21
  9434  2138                     __ptext21:	
  9435 ;; *************** function ___aomod *****************
  9436 ;; Defined at:
  9437 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9438 ;; Parameters:    Size  Location     Type
  9439 ;;  divisor         8    0[BANK0 ] long long 
  9440 ;;  dividend        8    8[BANK0 ] long long 
  9441 ;; Auto vars:     Size  Location     Type
  9442 ;;  sign            1    3[COMMON] unsigned char 
  9443 ;;  counter         1    2[COMMON] unsigned char 
  9444 ;; Return value:  Size  Location     Type
  9445 ;;                  8    0[BANK0 ] long long 
  9446 ;; Registers used:
  9447 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9448 ;; Tracked objects:
  9449 ;;		On entry : 0/0
  9450 ;;		On exit  : 0/0
  9451 ;;		Unchanged: 0/0
  9452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9453 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9456 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9457 ;;Total ram usage:       19 bytes
  9458 ;; Hardware stack levels used:    1
  9459 ;; Hardware stack levels required when called:    1
  9460 ;; This function calls:
  9461 ;;		Nothing
  9462 ;; This function is called by:
  9463 ;;		_dtoa
  9464 ;; This function uses a non-reentrant model
  9465 ;;
  9466                           
  9467                           
  9468                           ;psect for function ___aomod
  9469  2138                     ___aomod:	
  9470                           
  9471                           ;incstack = 0
  9472                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9473  2138  01F3               	clrf	___aomod@sign
  9474  2139  3028               	movlw	low ___aomod@dividend
  9475  213A  0086               	movwf	6
  9476  213B  3000               	movlw	high ___aomod@dividend
  9477  213C  0087               	movwf	7
  9478  213D  3F47               	moviw [7]fsr1
  9479  213E  00F1               	movwf	??___aomod
  9480  213F  1FF1               	btfss	??___aomod,7
  9481  2140  2962               	goto	l4312
  9482  2141  0020               	movlb	0	; select bank0
  9483  2142  09A8               	comf	___aomod@dividend,f
  9484  2143  09A9               	comf	___aomod@dividend+1,f
  9485  2144  09AA               	comf	___aomod@dividend+2,f
  9486  2145  09AB               	comf	___aomod@dividend+3,f
  9487  2146  09AC               	comf	___aomod@dividend+4,f
  9488  2147  09AD               	comf	___aomod@dividend+5,f
  9489  2148  09AE               	comf	___aomod@dividend+6,f
  9490  2149  09AF               	comf	___aomod@dividend+7,f
  9491  214A  0AA8               	incf	___aomod@dividend,f
  9492  214B  1D03               	skipz
  9493  214C  2960               	goto	u440lld
  9494  214D  0AA9               	incf	___aomod@dividend+1,f
  9495  214E  1D03               	skipz
  9496  214F  2960               	goto	u440lld
  9497  2150  0AAA               	incf	___aomod@dividend+2,f
  9498  2151  1D03               	skipz
  9499  2152  2960               	goto	u440lld
  9500  2153  0AAB               	incf	___aomod@dividend+3,f
  9501  2154  1D03               	skipz
  9502  2155  2960               	goto	u440lld
  9503  2156  0AAC               	incf	___aomod@dividend+4,f
  9504  2157  1D03               	skipz
  9505  2158  2960               	goto	u440lld
  9506  2159  0AAD               	incf	___aomod@dividend+5,f
  9507  215A  1D03               	skipz
  9508  215B  2960               	goto	u440lld
  9509  215C  0AAE               	incf	___aomod@dividend+6,f
  9510  215D  1D03               	skipz
  9511  215E  2960               	goto	u440lld
  9512  215F  0AAF               	incf	___aomod@dividend+7,f
  9513  2160                     u440lld:	
  9514  2160  01F3               	clrf	___aomod@sign
  9515  2161  0AF3               	incf	___aomod@sign,f
  9516  2162                     l4312:	
  9517  2162  3020               	movlw	low ___aomod@divisor
  9518  2163  0086               	movwf	6
  9519  2164  3000               	movlw	high ___aomod@divisor
  9520  2165  0087               	movwf	7
  9521  2166  3F47               	moviw [7]fsr1
  9522  2167  00F1               	movwf	??___aomod
  9523  2168  1FF1               	btfss	??___aomod,7
  9524  2169  2989               	goto	l4316
  9525  216A  0020               	movlb	0	; select bank0
  9526  216B  09A0               	comf	___aomod@divisor,f
  9527  216C  09A1               	comf	___aomod@divisor+1,f
  9528  216D  09A2               	comf	___aomod@divisor+2,f
  9529  216E  09A3               	comf	___aomod@divisor+3,f
  9530  216F  09A4               	comf	___aomod@divisor+4,f
  9531  2170  09A5               	comf	___aomod@divisor+5,f
  9532  2171  09A6               	comf	___aomod@divisor+6,f
  9533  2172  09A7               	comf	___aomod@divisor+7,f
  9534  2173  0AA0               	incf	___aomod@divisor,f
  9535  2174  1D03               	skipz
  9536  2175  2989               	goto	l4316
  9537  2176  0AA1               	incf	___aomod@divisor+1,f
  9538  2177  1D03               	skipz
  9539  2178  2989               	goto	l4316
  9540  2179  0AA2               	incf	___aomod@divisor+2,f
  9541  217A  1D03               	skipz
  9542  217B  2989               	goto	l4316
  9543  217C  0AA3               	incf	___aomod@divisor+3,f
  9544  217D  1D03               	skipz
  9545  217E  2989               	goto	l4316
  9546  217F  0AA4               	incf	___aomod@divisor+4,f
  9547  2180  1D03               	skipz
  9548  2181  2989               	goto	l4316
  9549  2182  0AA5               	incf	___aomod@divisor+5,f
  9550  2183  1D03               	skipz
  9551  2184  2989               	goto	l4316
  9552  2185  0AA6               	incf	___aomod@divisor+6,f
  9553  2186  1D03               	skipz
  9554  2187  2989               	goto	l4316
  9555  2188  0AA7               	incf	___aomod@divisor+7,f
  9556  2189                     l4316:	
  9557  2189  0020               	movlb	0	; select bank0
  9558  218A  0820               	movf	___aomod@divisor,w
  9559  218B  0421               	iorwf	___aomod@divisor+1,w
  9560  218C  0422               	iorwf	___aomod@divisor+2,w
  9561  218D  0423               	iorwf	___aomod@divisor+3,w
  9562  218E  0424               	iorwf	___aomod@divisor+4,w
  9563  218F  0425               	iorwf	___aomod@divisor+5,w
  9564  2190  0426               	iorwf	___aomod@divisor+6,w
  9565  2191  0427               	iorwf	___aomod@divisor+7,w
  9566  2192  1903               	skipnz
  9567  2193  29E1               	goto	l4332
  9568  2194  01F2               	clrf	___aomod@counter
  9569  2195  0AF2               	incf	___aomod@counter,f
  9570  2196                     l4324:	
  9571  2196  1BA7               	btfsc	___aomod@divisor+7,7
  9572  2197  29A5               	goto	l4326
  9573  2198  35A0               	lslf	___aomod@divisor,f
  9574  2199  0DA1               	rlf	___aomod@divisor+1,f
  9575  219A  0DA2               	rlf	___aomod@divisor+2,f
  9576  219B  0DA3               	rlf	___aomod@divisor+3,f
  9577  219C  0DA4               	rlf	___aomod@divisor+4,f
  9578  219D  0DA5               	rlf	___aomod@divisor+5,f
  9579  219E  0DA6               	rlf	___aomod@divisor+6,f
  9580  219F  0DA7               	rlf	___aomod@divisor+7,f
  9581  21A0  3001               	movlw	1
  9582  21A1  00F1               	movwf	??___aomod
  9583  21A2  0871               	movf	??___aomod,w
  9584  21A3  07F2               	addwf	___aomod@counter,f
  9585  21A4  2996               	goto	l4324
  9586  21A5                     l4326:	
  9587  21A5  0827               	movf	___aomod@divisor+7,w
  9588  21A6  022F               	subwf	___aomod@dividend+7,w
  9589  21A7  1D03               	skipz
  9590  21A8  29C3               	goto	u4455
  9591  21A9  0826               	movf	___aomod@divisor+6,w
  9592  21AA  022E               	subwf	___aomod@dividend+6,w
  9593  21AB  1D03               	skipz
  9594  21AC  29C3               	goto	u4455
  9595  21AD  0825               	movf	___aomod@divisor+5,w
  9596  21AE  022D               	subwf	___aomod@dividend+5,w
  9597  21AF  1D03               	skipz
  9598  21B0  29C3               	goto	u4455
  9599  21B1  0824               	movf	___aomod@divisor+4,w
  9600  21B2  022C               	subwf	___aomod@dividend+4,w
  9601  21B3  1D03               	skipz
  9602  21B4  29C3               	goto	u4455
  9603  21B5  0823               	movf	___aomod@divisor+3,w
  9604  21B6  022B               	subwf	___aomod@dividend+3,w
  9605  21B7  1D03               	skipz
  9606  21B8  29C3               	goto	u4455
  9607  21B9  0822               	movf	___aomod@divisor+2,w
  9608  21BA  022A               	subwf	___aomod@dividend+2,w
  9609  21BB  1D03               	skipz
  9610  21BC  29C3               	goto	u4455
  9611  21BD  0821               	movf	___aomod@divisor+1,w
  9612  21BE  0229               	subwf	___aomod@dividend+1,w
  9613  21BF  1D03               	skipz
  9614  21C0  29C3               	goto	u4455
  9615  21C1  0820               	movf	___aomod@divisor,w
  9616  21C2  0228               	subwf	___aomod@dividend,w
  9617  21C3                     u4455:	
  9618  21C3  1C03               	skipc
  9619  21C4  29D5               	goto	l4330
  9620  21C5  0820               	movf	___aomod@divisor,w
  9621  21C6  02A8               	subwf	___aomod@dividend,f
  9622  21C7  0821               	movf	___aomod@divisor+1,w
  9623  21C8  3BA9               	subwfb	___aomod@dividend+1,f
  9624  21C9  0822               	movf	___aomod@divisor+2,w
  9625  21CA  3BAA               	subwfb	___aomod@dividend+2,f
  9626  21CB  0823               	movf	___aomod@divisor+3,w
  9627  21CC  3BAB               	subwfb	___aomod@dividend+3,f
  9628  21CD  0824               	movf	___aomod@divisor+4,w
  9629  21CE  3BAC               	subwfb	___aomod@dividend+4,f
  9630  21CF  0825               	movf	___aomod@divisor+5,w
  9631  21D0  3BAD               	subwfb	___aomod@dividend+5,f
  9632  21D1  0826               	movf	___aomod@divisor+6,w
  9633  21D2  3BAE               	subwfb	___aomod@dividend+6,f
  9634  21D3  0827               	movf	___aomod@divisor+7,w
  9635  21D4  3BAF               	subwfb	___aomod@dividend+7,f
  9636  21D5                     l4330:	
  9637  21D5  36A7               	lsrf	___aomod@divisor+7,f
  9638  21D6  0CA6               	rrf	___aomod@divisor+6,f
  9639  21D7  0CA5               	rrf	___aomod@divisor+5,f
  9640  21D8  0CA4               	rrf	___aomod@divisor+4,f
  9641  21D9  0CA3               	rrf	___aomod@divisor+3,f
  9642  21DA  0CA2               	rrf	___aomod@divisor+2,f
  9643  21DB  0CA1               	rrf	___aomod@divisor+1,f
  9644  21DC  0CA0               	rrf	___aomod@divisor,f
  9645  21DD  3001               	movlw	1
  9646  21DE  02F2               	subwf	___aomod@counter,f
  9647  21DF  1D03               	btfss	3,2
  9648  21E0  29A5               	goto	l4326
  9649  21E1                     l4332:	
  9650  21E1  0873               	movf	___aomod@sign,w
  9651  21E2  1903               	btfsc	3,2
  9652  21E3  2A02               	goto	l1128
  9653  21E4  09A8               	comf	___aomod@dividend,f
  9654  21E5  09A9               	comf	___aomod@dividend+1,f
  9655  21E6  09AA               	comf	___aomod@dividend+2,f
  9656  21E7  09AB               	comf	___aomod@dividend+3,f
  9657  21E8  09AC               	comf	___aomod@dividend+4,f
  9658  21E9  09AD               	comf	___aomod@dividend+5,f
  9659  21EA  09AE               	comf	___aomod@dividend+6,f
  9660  21EB  09AF               	comf	___aomod@dividend+7,f
  9661  21EC  0AA8               	incf	___aomod@dividend,f
  9662  21ED  1D03               	skipz
  9663  21EE  2A02               	goto	l1128
  9664  21EF  0AA9               	incf	___aomod@dividend+1,f
  9665  21F0  1D03               	skipz
  9666  21F1  2A02               	goto	l1128
  9667  21F2  0AAA               	incf	___aomod@dividend+2,f
  9668  21F3  1D03               	skipz
  9669  21F4  2A02               	goto	l1128
  9670  21F5  0AAB               	incf	___aomod@dividend+3,f
  9671  21F6  1D03               	skipz
  9672  21F7  2A02               	goto	l1128
  9673  21F8  0AAC               	incf	___aomod@dividend+4,f
  9674  21F9  1D03               	skipz
  9675  21FA  2A02               	goto	l1128
  9676  21FB  0AAD               	incf	___aomod@dividend+5,f
  9677  21FC  1D03               	skipz
  9678  21FD  2A02               	goto	l1128
  9679  21FE  0AAE               	incf	___aomod@dividend+6,f
  9680  21FF  1D03               	skipz
  9681  2200  2A02               	goto	l1128
  9682  2201  0AAF               	incf	___aomod@dividend+7,f
  9683  2202                     l1128:	
  9684  2202  0020               	movlb	0	; select bank0
  9685  2203  0828               	movf	___aomod@dividend,w
  9686  2204  00A0               	movwf	?___aomod
  9687  2205  0829               	movf	___aomod@dividend+1,w
  9688  2206  00A1               	movwf	?___aomod+1
  9689  2207  082A               	movf	___aomod@dividend+2,w
  9690  2208  00A2               	movwf	?___aomod+2
  9691  2209  082B               	movf	___aomod@dividend+3,w
  9692  220A  00A3               	movwf	?___aomod+3
  9693  220B  082C               	movf	___aomod@dividend+4,w
  9694  220C  00A4               	movwf	?___aomod+4
  9695  220D  082D               	movf	___aomod@dividend+5,w
  9696  220E  00A5               	movwf	?___aomod+5
  9697  220F  082E               	movf	___aomod@dividend+6,w
  9698  2210  00A6               	movwf	?___aomod+6
  9699  2211  082F               	movf	___aomod@dividend+7,w
  9700  2212  00A7               	movwf	?___aomod+7
  9701  2213  0008               	return
  9702  2214                     __end_of___aomod:	
  9703                           
  9704                           	psect	text22
  9705  23E6                     __ptext22:	
  9706 ;; *************** function ___aodiv *****************
  9707 ;; Defined at:
  9708 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;  divisor         8    0[BANK0 ] long long 
  9711 ;;  dividend        8    8[BANK0 ] long long 
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  quotient        8    4[COMMON] long long 
  9714 ;;  sign            1    3[COMMON] unsigned char 
  9715 ;;  counter         1    2[COMMON] unsigned char 
  9716 ;; Return value:  Size  Location     Type
  9717 ;;                  8    0[BANK0 ] long long 
  9718 ;; Registers used:
  9719 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9725 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9726 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9728 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9729 ;;Total ram usage:       27 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; Hardware stack levels required when called:    1
  9732 ;; This function calls:
  9733 ;;		Nothing
  9734 ;; This function is called by:
  9735 ;;		_dtoa
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           
  9740                           ;psect for function ___aodiv
  9741  23E6                     ___aodiv:	
  9742                           
  9743                           ;incstack = 0
  9744                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9745  23E6  01F3               	clrf	___aodiv@sign
  9746  23E7  3020               	movlw	low ___aodiv@divisor
  9747  23E8  0086               	movwf	6
  9748  23E9  3000               	movlw	high ___aodiv@divisor
  9749  23EA  0087               	movwf	7
  9750  23EB  3F47               	moviw [7]fsr1
  9751  23EC  00F1               	movwf	??___aodiv
  9752  23ED  1FF1               	btfss	??___aodiv,7
  9753  23EE  2C10               	goto	l4274
  9754  23EF  0020               	movlb	0	; select bank0
  9755  23F0  09A0               	comf	___aodiv@divisor,f
  9756  23F1  09A1               	comf	___aodiv@divisor+1,f
  9757  23F2  09A2               	comf	___aodiv@divisor+2,f
  9758  23F3  09A3               	comf	___aodiv@divisor+3,f
  9759  23F4  09A4               	comf	___aodiv@divisor+4,f
  9760  23F5  09A5               	comf	___aodiv@divisor+5,f
  9761  23F6  09A6               	comf	___aodiv@divisor+6,f
  9762  23F7  09A7               	comf	___aodiv@divisor+7,f
  9763  23F8  0AA0               	incf	___aodiv@divisor,f
  9764  23F9  1D03               	skipz
  9765  23FA  2C0E               	goto	u429lld
  9766  23FB  0AA1               	incf	___aodiv@divisor+1,f
  9767  23FC  1D03               	skipz
  9768  23FD  2C0E               	goto	u429lld
  9769  23FE  0AA2               	incf	___aodiv@divisor+2,f
  9770  23FF  1D03               	skipz
  9771  2400  2C0E               	goto	u429lld
  9772  2401  0AA3               	incf	___aodiv@divisor+3,f
  9773  2402  1D03               	skipz
  9774  2403  2C0E               	goto	u429lld
  9775  2404  0AA4               	incf	___aodiv@divisor+4,f
  9776  2405  1D03               	skipz
  9777  2406  2C0E               	goto	u429lld
  9778  2407  0AA5               	incf	___aodiv@divisor+5,f
  9779  2408  1D03               	skipz
  9780  2409  2C0E               	goto	u429lld
  9781  240A  0AA6               	incf	___aodiv@divisor+6,f
  9782  240B  1D03               	skipz
  9783  240C  2C0E               	goto	u429lld
  9784  240D  0AA7               	incf	___aodiv@divisor+7,f
  9785  240E                     u429lld:	
  9786  240E  01F3               	clrf	___aodiv@sign
  9787  240F  0AF3               	incf	___aodiv@sign,f
  9788  2410                     l4274:	
  9789  2410  3028               	movlw	low ___aodiv@dividend
  9790  2411  0086               	movwf	6
  9791  2412  3000               	movlw	high ___aodiv@dividend
  9792  2413  0087               	movwf	7
  9793  2414  3F47               	moviw [7]fsr1
  9794  2415  00F1               	movwf	??___aodiv
  9795  2416  1FF1               	btfss	??___aodiv,7
  9796  2417  2C3B               	goto	l4280
  9797  2418  0020               	movlb	0	; select bank0
  9798  2419  09A8               	comf	___aodiv@dividend,f
  9799  241A  09A9               	comf	___aodiv@dividend+1,f
  9800  241B  09AA               	comf	___aodiv@dividend+2,f
  9801  241C  09AB               	comf	___aodiv@dividend+3,f
  9802  241D  09AC               	comf	___aodiv@dividend+4,f
  9803  241E  09AD               	comf	___aodiv@dividend+5,f
  9804  241F  09AE               	comf	___aodiv@dividend+6,f
  9805  2420  09AF               	comf	___aodiv@dividend+7,f
  9806  2421  0AA8               	incf	___aodiv@dividend,f
  9807  2422  1D03               	skipz
  9808  2423  2C37               	goto	l4278
  9809  2424  0AA9               	incf	___aodiv@dividend+1,f
  9810  2425  1D03               	skipz
  9811  2426  2C37               	goto	l4278
  9812  2427  0AAA               	incf	___aodiv@dividend+2,f
  9813  2428  1D03               	skipz
  9814  2429  2C37               	goto	l4278
  9815  242A  0AAB               	incf	___aodiv@dividend+3,f
  9816  242B  1D03               	skipz
  9817  242C  2C37               	goto	l4278
  9818  242D  0AAC               	incf	___aodiv@dividend+4,f
  9819  242E  1D03               	skipz
  9820  242F  2C37               	goto	l4278
  9821  2430  0AAD               	incf	___aodiv@dividend+5,f
  9822  2431  1D03               	skipz
  9823  2432  2C37               	goto	l4278
  9824  2433  0AAE               	incf	___aodiv@dividend+6,f
  9825  2434  1D03               	skipz
  9826  2435  2C37               	goto	l4278
  9827  2436  0AAF               	incf	___aodiv@dividend+7,f
  9828  2437                     l4278:	
  9829  2437  3001               	movlw	1
  9830  2438  00F1               	movwf	??___aodiv
  9831  2439  0871               	movf	??___aodiv,w
  9832  243A  06F3               	xorwf	___aodiv@sign,f
  9833  243B                     l4280:	
  9834  243B  3074               	movlw	low ___aodiv@quotient
  9835  243C  0086               	movwf	6
  9836  243D  3000               	movlw	high ___aodiv@quotient
  9837  243E  0087               	movwf	7
  9838  243F  3008               	movlw	8
  9839  2440  00F1               	movwf	??___aodiv
  9840  2441  3000               	movlw	0
  9841  2442                     u4320:	
  9842  2442  001E               	movwi fsr1++
  9843  2443  0BF1               	decfsz	??___aodiv,f
  9844  2444  2C42               	goto	u4320
  9845  2445  0020               	movlb	0	; select bank0
  9846  2446  0820               	movf	___aodiv@divisor,w
  9847  2447  0421               	iorwf	___aodiv@divisor+1,w
  9848  2448  0422               	iorwf	___aodiv@divisor+2,w
  9849  2449  0423               	iorwf	___aodiv@divisor+3,w
  9850  244A  0424               	iorwf	___aodiv@divisor+4,w
  9851  244B  0425               	iorwf	___aodiv@divisor+5,w
  9852  244C  0426               	iorwf	___aodiv@divisor+6,w
  9853  244D  0427               	iorwf	___aodiv@divisor+7,w
  9854  244E  1903               	skipnz
  9855  244F  2CA6               	goto	l4302
  9856  2450  01F2               	clrf	___aodiv@counter
  9857  2451  0AF2               	incf	___aodiv@counter,f
  9858  2452                     l4290:	
  9859  2452  1BA7               	btfsc	___aodiv@divisor+7,7
  9860  2453  2C61               	goto	l4292
  9861  2454  35A0               	lslf	___aodiv@divisor,f
  9862  2455  0DA1               	rlf	___aodiv@divisor+1,f
  9863  2456  0DA2               	rlf	___aodiv@divisor+2,f
  9864  2457  0DA3               	rlf	___aodiv@divisor+3,f
  9865  2458  0DA4               	rlf	___aodiv@divisor+4,f
  9866  2459  0DA5               	rlf	___aodiv@divisor+5,f
  9867  245A  0DA6               	rlf	___aodiv@divisor+6,f
  9868  245B  0DA7               	rlf	___aodiv@divisor+7,f
  9869  245C  3001               	movlw	1
  9870  245D  00F1               	movwf	??___aodiv
  9871  245E  0871               	movf	??___aodiv,w
  9872  245F  07F2               	addwf	___aodiv@counter,f
  9873  2460  2C52               	goto	l4290
  9874  2461                     l4292:	
  9875  2461  35F4               	lslf	___aodiv@quotient,f
  9876  2462  0DF5               	rlf	___aodiv@quotient+1,f
  9877  2463  0DF6               	rlf	___aodiv@quotient+2,f
  9878  2464  0DF7               	rlf	___aodiv@quotient+3,f
  9879  2465  0DF8               	rlf	___aodiv@quotient+4,f
  9880  2466  0DF9               	rlf	___aodiv@quotient+5,f
  9881  2467  0DFA               	rlf	___aodiv@quotient+6,f
  9882  2468  0DFB               	rlf	___aodiv@quotient+7,f
  9883  2469  0827               	movf	___aodiv@divisor+7,w
  9884  246A  022F               	subwf	___aodiv@dividend+7,w
  9885  246B  1D03               	skipz
  9886  246C  2C87               	goto	u4355
  9887  246D  0826               	movf	___aodiv@divisor+6,w
  9888  246E  022E               	subwf	___aodiv@dividend+6,w
  9889  246F  1D03               	skipz
  9890  2470  2C87               	goto	u4355
  9891  2471  0825               	movf	___aodiv@divisor+5,w
  9892  2472  022D               	subwf	___aodiv@dividend+5,w
  9893  2473  1D03               	skipz
  9894  2474  2C87               	goto	u4355
  9895  2475  0824               	movf	___aodiv@divisor+4,w
  9896  2476  022C               	subwf	___aodiv@dividend+4,w
  9897  2477  1D03               	skipz
  9898  2478  2C87               	goto	u4355
  9899  2479  0823               	movf	___aodiv@divisor+3,w
  9900  247A  022B               	subwf	___aodiv@dividend+3,w
  9901  247B  1D03               	skipz
  9902  247C  2C87               	goto	u4355
  9903  247D  0822               	movf	___aodiv@divisor+2,w
  9904  247E  022A               	subwf	___aodiv@dividend+2,w
  9905  247F  1D03               	skipz
  9906  2480  2C87               	goto	u4355
  9907  2481  0821               	movf	___aodiv@divisor+1,w
  9908  2482  0229               	subwf	___aodiv@dividend+1,w
  9909  2483  1D03               	skipz
  9910  2484  2C87               	goto	u4355
  9911  2485  0820               	movf	___aodiv@divisor,w
  9912  2486  0228               	subwf	___aodiv@dividend,w
  9913  2487                     u4355:	
  9914  2487  1C03               	skipc
  9915  2488  2C9A               	goto	l4300
  9916  2489  0820               	movf	___aodiv@divisor,w
  9917  248A  02A8               	subwf	___aodiv@dividend,f
  9918  248B  0821               	movf	___aodiv@divisor+1,w
  9919  248C  3BA9               	subwfb	___aodiv@dividend+1,f
  9920  248D  0822               	movf	___aodiv@divisor+2,w
  9921  248E  3BAA               	subwfb	___aodiv@dividend+2,f
  9922  248F  0823               	movf	___aodiv@divisor+3,w
  9923  2490  3BAB               	subwfb	___aodiv@dividend+3,f
  9924  2491  0824               	movf	___aodiv@divisor+4,w
  9925  2492  3BAC               	subwfb	___aodiv@dividend+4,f
  9926  2493  0825               	movf	___aodiv@divisor+5,w
  9927  2494  3BAD               	subwfb	___aodiv@dividend+5,f
  9928  2495  0826               	movf	___aodiv@divisor+6,w
  9929  2496  3BAE               	subwfb	___aodiv@dividend+6,f
  9930  2497  0827               	movf	___aodiv@divisor+7,w
  9931  2498  3BAF               	subwfb	___aodiv@dividend+7,f
  9932  2499  1474               	bsf	___aodiv@quotient,0
  9933  249A                     l4300:	
  9934  249A  36A7               	lsrf	___aodiv@divisor+7,f
  9935  249B  0CA6               	rrf	___aodiv@divisor+6,f
  9936  249C  0CA5               	rrf	___aodiv@divisor+5,f
  9937  249D  0CA4               	rrf	___aodiv@divisor+4,f
  9938  249E  0CA3               	rrf	___aodiv@divisor+3,f
  9939  249F  0CA2               	rrf	___aodiv@divisor+2,f
  9940  24A0  0CA1               	rrf	___aodiv@divisor+1,f
  9941  24A1  0CA0               	rrf	___aodiv@divisor,f
  9942  24A2  3001               	movlw	1
  9943  24A3  02F2               	subwf	___aodiv@counter,f
  9944  24A4  1D03               	btfss	3,2
  9945  24A5  2C61               	goto	l4292
  9946  24A6                     l4302:	
  9947  24A6  0873               	movf	___aodiv@sign,w
  9948  24A7  1903               	btfsc	3,2
  9949  24A8  2CC7               	goto	l1115
  9950  24A9  09F4               	comf	___aodiv@quotient,f
  9951  24AA  09F5               	comf	___aodiv@quotient+1,f
  9952  24AB  09F6               	comf	___aodiv@quotient+2,f
  9953  24AC  09F7               	comf	___aodiv@quotient+3,f
  9954  24AD  09F8               	comf	___aodiv@quotient+4,f
  9955  24AE  09F9               	comf	___aodiv@quotient+5,f
  9956  24AF  09FA               	comf	___aodiv@quotient+6,f
  9957  24B0  09FB               	comf	___aodiv@quotient+7,f
  9958  24B1  0AF4               	incf	___aodiv@quotient,f
  9959  24B2  1D03               	skipz
  9960  24B3  2CC7               	goto	l1115
  9961  24B4  0AF5               	incf	___aodiv@quotient+1,f
  9962  24B5  1D03               	skipz
  9963  24B6  2CC7               	goto	l1115
  9964  24B7  0AF6               	incf	___aodiv@quotient+2,f
  9965  24B8  1D03               	skipz
  9966  24B9  2CC7               	goto	l1115
  9967  24BA  0AF7               	incf	___aodiv@quotient+3,f
  9968  24BB  1D03               	skipz
  9969  24BC  2CC7               	goto	l1115
  9970  24BD  0AF8               	incf	___aodiv@quotient+4,f
  9971  24BE  1D03               	skipz
  9972  24BF  2CC7               	goto	l1115
  9973  24C0  0AF9               	incf	___aodiv@quotient+5,f
  9974  24C1  1D03               	skipz
  9975  24C2  2CC7               	goto	l1115
  9976  24C3  0AFA               	incf	___aodiv@quotient+6,f
  9977  24C4  1D03               	skipz
  9978  24C5  2CC7               	goto	l1115
  9979  24C6  0AFB               	incf	___aodiv@quotient+7,f
  9980  24C7                     l1115:	
  9981  24C7  0874               	movf	___aodiv@quotient,w
  9982  24C8  0020               	movlb	0	; select bank0
  9983  24C9  00A0               	movwf	?___aodiv
  9984  24CA  0875               	movf	___aodiv@quotient+1,w
  9985  24CB  00A1               	movwf	?___aodiv+1
  9986  24CC  0876               	movf	___aodiv@quotient+2,w
  9987  24CD  00A2               	movwf	?___aodiv+2
  9988  24CE  0877               	movf	___aodiv@quotient+3,w
  9989  24CF  00A3               	movwf	?___aodiv+3
  9990  24D0  0878               	movf	___aodiv@quotient+4,w
  9991  24D1  00A4               	movwf	?___aodiv+4
  9992  24D2  0879               	movf	___aodiv@quotient+5,w
  9993  24D3  00A5               	movwf	?___aodiv+5
  9994  24D4  087A               	movf	___aodiv@quotient+6,w
  9995  24D5  00A6               	movwf	?___aodiv+6
  9996  24D6  087B               	movf	___aodiv@quotient+7,w
  9997  24D7  00A7               	movwf	?___aodiv+7
  9998  24D8  0008               	return
  9999  24D9                     __end_of___aodiv:	
 10000                           
 10001                           	psect	text23
 10002  33BF                     __ptext23:	
 10003 ;; *************** function _ctoa *****************
 10004 ;; Defined at:
 10005 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 10008 ;;		 -> vsnprintf@f(6), 
 10009 ;;  c               1   18[BANK0 ] unsigned char 
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;  w               2   20[BANK0 ] int 
 10012 ;;  l               2    0        int 
 10013 ;; Return value:  Size  Location     Type
 10014 ;;                  2   16[BANK0 ] int 
 10015 ;; Registers used:
 10016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10017 ;; Tracked objects:
 10018 ;;		On entry : 0/0
 10019 ;;		On exit  : 0/0
 10020 ;;		Unchanged: 0/0
 10021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10022 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10023 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10024 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10025 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10026 ;;Total ram usage:        6 bytes
 10027 ;; Hardware stack levels used:    1
 10028 ;; Hardware stack levels required when called:    5
 10029 ;; This function calls:
 10030 ;;		_pad
 10031 ;; This function is called by:
 10032 ;;		_vfpfcnvrt
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           
 10037                           ;psect for function _ctoa
 10038  33BF                     _ctoa:	
 10039                           
 10040                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 10041                           
 10042                           ;incstack = 0
 10043                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10044  33BF  0022               	movlb	2	; select bank2
 10045  33C0  0866               	movf	_width^(0+256),w
 10046  33C1  0467               	iorwf	(_width+1)^(0+256),w
 10047  33C2  1D03               	btfss	3,2
 10048  33C3  2BCC               	goto	l6654
 10049  33C4  0867               	movf	(_width+1)^(0+256),w
 10050  33C5  0020               	movlb	0	; select bank0
 10051  33C6  00B5               	movwf	ctoa@w+1
 10052  33C7  0022               	movlb	2	; select bank2
 10053  33C8  0866               	movf	_width^(0+256),w
 10054  33C9  0020               	movlb	0	; select bank0
 10055  33CA  00B4               	movwf	ctoa@w
 10056  33CB  2BD5               	goto	l6656
 10057  33CC                     l6654:	
 10058  33CC  0866               	movf	_width^(0+256),w
 10059  33CD  3EFF               	addlw	255
 10060  33CE  0020               	movlb	0	; select bank0
 10061  33CF  00B4               	movwf	ctoa@w
 10062  33D0  30FF               	movlw	255
 10063  33D1  0022               	movlb	2	; select bank2
 10064  33D2  3D67               	addwfc	(_width+1)^(0+256),w
 10065  33D3  0020               	movlb	0	; select bank0
 10066  33D4  00B5               	movwf	ctoa@w+1
 10067  33D5                     l6656:	
 10068                           
 10069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 10070  33D5  0832               	movf	ctoa@c,w
 10071  33D6  00B3               	movwf	??_ctoa
 10072  33D7  0833               	movf	??_ctoa,w
 10073  33D8  0024               	movlb	4	; select bank4
 10074  33D9  00B4               	movwf	_dbuf^(0+512)
 10075                           
 10076                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 10077  33DA  01B5               	clrf	(_dbuf^(0+512)+1)
 10078                           
 10079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 10080  33DB  0020               	movlb	0	; select bank0
 10081  33DC  0831               	movf	ctoa@fp+1,w
 10082  33DD  00A7               	movwf	pad@fp+1
 10083  33DE  0830               	movf	ctoa@fp,w
 10084  33DF  00A6               	movwf	pad@fp
 10085  33E0  3034               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10086  33E1  00B3               	movwf	??_ctoa
 10087  33E2  0833               	movf	??_ctoa,w
 10088  33E3  00A8               	movwf	pad@buf
 10089  33E4  0835               	movf	ctoa@w+1,w
 10090  33E5  00AA               	movwf	pad@p+1
 10091  33E6  0834               	movf	ctoa@w,w
 10092  33E7  00A9               	movwf	pad@p
 10093  33E8  31B5  2562         	fcall	_pad
 10094  33EA  0020               	movlb	0	; select bank0
 10095  33EB  0827               	movf	?_pad+1,w
 10096  33EC  00B1               	movwf	?_ctoa+1
 10097  33ED  0826               	movf	?_pad,w
 10098  33EE  00B0               	movwf	?_ctoa
 10099  33EF  0008               	return
 10100  33F0                     __end_of_ctoa:	
 10101                           
 10102                           	psect	text24
 10103  3562                     __ptext24:	
 10104 ;; *************** function _pad *****************
 10105 ;; Defined at:
 10106 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 10109 ;;		 -> vsnprintf@f(6), 
 10110 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 10111 ;;		 -> dbuf(32), 
 10112 ;;  p               2    9[BANK0 ] int 
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;  w               2   14[BANK0 ] int 
 10115 ;;  i               2   12[BANK0 ] int 
 10116 ;; Return value:  Size  Location     Type
 10117 ;;                  2    6[BANK0 ] int 
 10118 ;; Registers used:
 10119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10120 ;; Tracked objects:
 10121 ;;		On entry : 0/0
 10122 ;;		On exit  : 0/0
 10123 ;;		Unchanged: 0/0
 10124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10125 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10126 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10127 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10128 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10129 ;;Total ram usage:       10 bytes
 10130 ;; Hardware stack levels used:    1
 10131 ;; Hardware stack levels required when called:    4
 10132 ;; This function calls:
 10133 ;;		_fputc
 10134 ;;		_fputs
 10135 ;;		_strlen
 10136 ;; This function is called by:
 10137 ;;		_ctoa
 10138 ;;		_dtoa
 10139 ;;		_otoa
 10140 ;;		_utoa
 10141 ;;		_xtoa
 10142 ;; This function uses a non-reentrant model
 10143 ;;
 10144                           
 10145                           
 10146                           ;psect for function _pad
 10147  3562                     _pad:	
 10148                           
 10149                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 10150                           
 10151                           ;incstack = 0
 10152                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10153  3562  0022               	movlb	2	; select bank2
 10154  3563  1C6A               	btfss	_flags^(0+256),0
 10155  3564  2D6E               	goto	l6622
 10156                           
 10157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 10158  3565  0020               	movlb	0	; select bank0
 10159  3566  0827               	movf	pad@fp+1,w
 10160  3567  00FB               	movwf	fputs@fp+1
 10161  3568  0826               	movf	pad@fp,w
 10162  3569  00FA               	movwf	fputs@fp
 10163  356A  0828               	movf	pad@buf,w
 10164  356B  31B3  2399  31B5   	fcall	_fputs
 10165  356E                     l6622:	
 10166                           
 10167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 10168  356E  0020               	movlb	0	; select bank0
 10169  356F  1BAA               	btfsc	pad@p+1,7
 10170  3570  2D76               	goto	l6626
 10171  3571  082A               	movf	pad@p+1,w
 10172  3572  00AF               	movwf	pad@w+1
 10173  3573  0829               	movf	pad@p,w
 10174  3574  00AE               	movwf	pad@w
 10175  3575  2D78               	goto	l807
 10176  3576                     l6626:	
 10177  3576  01AE               	clrf	pad@w
 10178  3577  01AF               	clrf	pad@w+1
 10179  3578                     l807:	
 10180                           
 10181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 10182  3578  01AC               	clrf	pad@i
 10183  3579  01AD               	clrf	pad@i+1
 10184  357A                     l6632:	
 10185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10186                           
 10187                           
 10188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 10189  357A  082D               	movf	pad@i+1,w
 10190  357B  3A80               	xorlw	128
 10191  357C  00AB               	movwf	??_pad
 10192  357D  082F               	movf	pad@w+1,w
 10193  357E  3A80               	xorlw	128
 10194  357F  022B               	subwf	??_pad,w
 10195  3580  1D03               	skipz
 10196  3581  2D84               	goto	u8025
 10197  3582  082E               	movf	pad@w,w
 10198  3583  022C               	subwf	pad@i,w
 10199  3584                     u8025:	
 10200  3584  1803               	btfsc	3,0
 10201  3585  2D98               	goto	l810
 10202                           
 10203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 10204  3586  3020               	movlw	32
 10205  3587  00F1               	movwf	fputc@c
 10206  3588  3000               	movlw	0
 10207  3589  00F2               	movwf	fputc@c+1
 10208  358A  0020               	movlb	0	; select bank0
 10209  358B  0827               	movf	pad@fp+1,w
 10210  358C  00F4               	movwf	fputc@fp+1
 10211  358D  0826               	movf	pad@fp,w
 10212  358E  00F3               	movwf	fputc@fp
 10213  358F  31B6  2605  31B5   	fcall	_fputc
 10214                           
 10215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 10216  3592  3001               	movlw	1
 10217  3593  0020               	movlb	0	; select bank0
 10218  3594  07AC               	addwf	pad@i,f
 10219  3595  3000               	movlw	0
 10220  3596  3DAD               	addwfc	pad@i+1,f
 10221  3597  2D7A               	goto	l6632
 10222  3598                     l810:	
 10223                           
 10224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 10225  3598  0022               	movlb	2	; select bank2
 10226  3599  186A               	btfsc	_flags^(0+256),0
 10227  359A  2DA4               	goto	l6636
 10228                           
 10229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 10230  359B  0020               	movlb	0	; select bank0
 10231  359C  0827               	movf	pad@fp+1,w
 10232  359D  00FB               	movwf	fputs@fp+1
 10233  359E  0826               	movf	pad@fp,w
 10234  359F  00FA               	movwf	fputs@fp
 10235  35A0  0828               	movf	pad@buf,w
 10236  35A1  31B3  2399  31B5   	fcall	_fputs
 10237  35A4                     l6636:	
 10238                           
 10239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 10240  35A4  0020               	movlb	0	; select bank0
 10241  35A5  0828               	movf	pad@buf,w
 10242  35A6  00F1               	movwf	strlen@s
 10243  35A7  3002               	movlw	2
 10244  35A8  00F2               	movwf	strlen@s+1
 10245  35A9  31B1  21F3         	fcall	_strlen
 10246  35AB  0020               	movlb	0	; select bank0
 10247  35AC  082E               	movf	pad@w,w
 10248  35AD  0771               	addwf	?_strlen,w
 10249  35AE  00A6               	movwf	?_pad
 10250  35AF  082F               	movf	pad@w+1,w
 10251  35B0  3D72               	addwfc	?_strlen+1,w
 10252  35B1  00A7               	movwf	?_pad+1
 10253  35B2  0008               	return
 10254  35B3                     __end_of_pad:	
 10255                           
 10256                           	psect	text25
 10257  31F3                     __ptext25:	
 10258 ;; *************** function _strlen *****************
 10259 ;; Defined at:
 10260 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 10261 ;; Parameters:    Size  Location     Type
 10262 ;;  s               2    1[COMMON] PTR const unsigned char 
 10263 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10264 ;;		 -> adcGain(2), 
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;  a               2    3[COMMON] PTR const unsigned char 
 10267 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
 10268 ;;		 -> adcGain(2), 
 10269 ;; Return value:  Size  Location     Type
 10270 ;;                  2    1[COMMON] unsigned int 
 10271 ;; Registers used:
 10272 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10273 ;; Tracked objects:
 10274 ;;		On entry : 0/0
 10275 ;;		On exit  : 0/0
 10276 ;;		Unchanged: 0/0
 10277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10281 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10282 ;;Total ram usage:        4 bytes
 10283 ;; Hardware stack levels used:    1
 10284 ;; Hardware stack levels required when called:    1
 10285 ;; This function calls:
 10286 ;;		Nothing
 10287 ;; This function is called by:
 10288 ;;		_pad
 10289 ;;		_stoa
 10290 ;; This function uses a non-reentrant model
 10291 ;;
 10292                           
 10293                           
 10294                           ;psect for function _strlen
 10295  31F3                     _strlen:	
 10296                           
 10297                           ;incstack = 0
 10298                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 10299  31F3  0872               	movf	strlen@s+1,w
 10300  31F4  00F4               	movwf	strlen@a+1
 10301  31F5  0871               	movf	strlen@s,w
 10302  31F6  00F3               	movwf	strlen@a
 10303  31F7                     l4196:	
 10304  31F7  0871               	movf	strlen@s,w
 10305  31F8  0086               	movwf	6
 10306  31F9  0872               	movf	strlen@s+1,w
 10307  31FA  0087               	movwf	7
 10308  31FB  0801               	movf	1,w
 10309  31FC  1903               	btfsc	3,2
 10310  31FD  2A03               	goto	l4198
 10311  31FE  3001               	movlw	1
 10312  31FF  07F1               	addwf	strlen@s,f
 10313  3200  3000               	movlw	0
 10314  3201  3DF2               	addwfc	strlen@s+1,f
 10315  3202  29F7               	goto	l4196
 10316  3203                     l4198:	
 10317  3203  0873               	movf	strlen@a,w
 10318  3204  0271               	subwf	strlen@s,w
 10319  3205  00F1               	movwf	?_strlen
 10320  3206  0874               	movf	strlen@a+1,w
 10321  3207  3B72               	subwfb	strlen@s+1,w
 10322  3208  00F2               	movwf	?_strlen+1
 10323  3209  0008               	return
 10324  320A                     __end_of_strlen:	
 10325                           
 10326                           	psect	text26
 10327  3399                     __ptext26:	
 10328 ;; *************** function _fputs *****************
 10329 ;; Defined at:
 10330 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10331 ;; Parameters:    Size  Location     Type
 10332 ;;  s               1    wreg     PTR const unsigned char 
 10333 ;;		 -> dbuf(32), 
 10334 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 10335 ;;		 -> vsnprintf@f(6), 
 10336 ;; Auto vars:     Size  Location     Type
 10337 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 10338 ;;		 -> dbuf(32), 
 10339 ;;  i               2    3[BANK0 ] int 
 10340 ;;  c               1    2[BANK0 ] unsigned char 
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  2   10[COMMON] int 
 10343 ;; Registers used:
 10344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10345 ;; Tracked objects:
 10346 ;;		On entry : 0/0
 10347 ;;		On exit  : 0/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10351 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10352 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10353 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10354 ;;Total ram usage:        8 bytes
 10355 ;; Hardware stack levels used:    1
 10356 ;; Hardware stack levels required when called:    3
 10357 ;; This function calls:
 10358 ;;		_fputc
 10359 ;; This function is called by:
 10360 ;;		_pad
 10361 ;; This function uses a non-reentrant model
 10362 ;;
 10363                           
 10364                           
 10365                           ;psect for function _fputs
 10366  3399                     _fputs:	
 10367                           
 10368                           ;incstack = 0
 10369                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10370                           ;fputs@s stored from wreg
 10371  3399  0020               	movlb	0	; select bank0
 10372  339A  00A5               	movwf	fputs@s
 10373  339B  01A3               	clrf	fputs@i
 10374  339C  01A4               	clrf	fputs@i+1
 10375  339D                     l4190:	
 10376  339D  0823               	movf	fputs@i,w
 10377  339E  0725               	addwf	fputs@s,w
 10378  339F  00A0               	movwf	??_fputs
 10379  33A0  0820               	movf	??_fputs,w
 10380  33A1  0086               	movwf	6
 10381  33A2  3002               	movlw	2	; select bank4/5
 10382  33A3  0087               	movwf	7
 10383  33A4  0801               	movf	1,w
 10384  33A5  00A1               	movwf	??_fputs+1
 10385  33A6  0821               	movf	??_fputs+1,w
 10386  33A7  00A2               	movwf	fputs@c
 10387  33A8  0822               	movf	fputs@c,w
 10388  33A9  1903               	btfsc	3,2
 10389  33AA  0008               	return
 10390  33AB  0822               	movf	fputs@c,w
 10391  33AC  00A0               	movwf	??_fputs
 10392  33AD  01A1               	clrf	??_fputs+1
 10393  33AE  0820               	movf	??_fputs,w
 10394  33AF  00F1               	movwf	fputc@c
 10395  33B0  0821               	movf	??_fputs+1,w
 10396  33B1  00F2               	movwf	fputc@c+1
 10397  33B2  087B               	movf	fputs@fp+1,w
 10398  33B3  00F4               	movwf	fputc@fp+1
 10399  33B4  087A               	movf	fputs@fp,w
 10400  33B5  00F3               	movwf	fputc@fp
 10401  33B6  31B6  2605  31B3   	fcall	_fputc
 10402  33B9  3001               	movlw	1
 10403  33BA  0020               	movlb	0	; select bank0
 10404  33BB  07A3               	addwf	fputs@i,f
 10405  33BC  3000               	movlw	0
 10406  33BD  3DA4               	addwfc	fputs@i+1,f
 10407  33BE  2B9D               	goto	l4190
 10408  33BF                     __end_of_fputs:	
 10409                           
 10410                           	psect	text27
 10411  3605                     __ptext27:	
 10412 ;; *************** function _fputc *****************
 10413 ;; Defined at:
 10414 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10415 ;; Parameters:    Size  Location     Type
 10416 ;;  c               2    1[COMMON] int 
 10417 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10418 ;;		 -> vsnprintf@f(6), 
 10419 ;; Auto vars:     Size  Location     Type
 10420 ;;		None
 10421 ;; Return value:  Size  Location     Type
 10422 ;;                  2    1[COMMON] int 
 10423 ;; Registers used:
 10424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10425 ;; Tracked objects:
 10426 ;;		On entry : 0/0
 10427 ;;		On exit  : 0/0
 10428 ;;		Unchanged: 0/0
 10429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10430 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10432 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10433 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10434 ;;Total ram usage:        9 bytes
 10435 ;; Hardware stack levels used:    1
 10436 ;; Hardware stack levels required when called:    2
 10437 ;; This function calls:
 10438 ;;		_putch
 10439 ;; This function is called by:
 10440 ;;		_pad
 10441 ;;		_stoa
 10442 ;;		_vfpfcnvrt
 10443 ;;		_fputs
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           
 10448                           ;psect for function _fputc
 10449  3605                     _fputc:	
 10450                           
 10451                           ;incstack = 0
 10452                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10453  3605  0873               	movf	fputc@fp,w
 10454  3606  0474               	iorwf	fputc@fp+1,w
 10455  3607  1903               	btfsc	3,2
 10456  3608  2E0D               	goto	l4172
 10457  3609  0873               	movf	fputc@fp,w
 10458  360A  0474               	iorwf	fputc@fp+1,w
 10459  360B  1D03               	btfss	3,2
 10460  360C  2E11               	goto	l4174
 10461  360D                     l4172:	
 10462  360D  0871               	movf	fputc@c,w
 10463  360E  3180  2003         	fcall	_putch
 10464  3610  0008               	return
 10465  3611                     l4174:	
 10466  3611  0873               	movf	fputc@fp,w
 10467  3612  0086               	movwf	6
 10468  3613  0874               	movf	fputc@fp+1,w
 10469  3614  0087               	movwf	7
 10470  3615  3144               	addfsr 1,4
 10471  3616  0016               	moviw fsr1++
 10472  3617  0401               	iorwf	1,w
 10473  3618  1903               	btfsc	3,2
 10474  3619  2E38               	goto	l4178
 10475  361A  0873               	movf	fputc@fp,w
 10476  361B  0086               	movwf	6
 10477  361C  0874               	movf	fputc@fp+1,w
 10478  361D  0087               	movwf	7
 10479  361E  3144               	addfsr 1,4
 10480  361F  3F40               	moviw [0]fsr1
 10481  3620  00F5               	movwf	??_fputc
 10482  3621  3F41               	moviw [1]fsr1
 10483  3622  00F6               	movwf	??_fputc+1
 10484  3623  0873               	movf	fputc@fp,w
 10485  3624  0086               	movwf	6
 10486  3625  0874               	movf	fputc@fp+1,w
 10487  3626  0087               	movwf	7
 10488  3627  3142               	addfsr 1,2
 10489  3628  3F40               	moviw [0]fsr1
 10490  3629  00F7               	movwf	??_fputc+2
 10491  362A  3F41               	moviw [1]fsr1
 10492  362B  00F8               	movwf	??_fputc+3
 10493  362C  0878               	movf	??_fputc+3,w
 10494  362D  3A80               	xorlw	128
 10495  362E  00F9               	movwf	??_fputc+4
 10496  362F  0876               	movf	??_fputc+1,w
 10497  3630  3A80               	xorlw	128
 10498  3631  0279               	subwf	??_fputc+4,w
 10499  3632  1D03               	skipz
 10500  3633  2E36               	goto	u4055
 10501  3634  0875               	movf	??_fputc,w
 10502  3635  0277               	subwf	??_fputc+2,w
 10503  3636                     u4055:	
 10504  3636  1803               	skipnc
 10505  3637  0008               	return
 10506  3638                     l4178:	
 10507  3638  0873               	movf	fputc@fp,w
 10508  3639  0086               	movwf	6
 10509  363A  0874               	movf	fputc@fp+1,w
 10510  363B  0087               	movwf	7
 10511  363C  3142               	addfsr 1,2
 10512  363D  0873               	movf	fputc@fp,w
 10513  363E  0084               	movwf	4
 10514  363F  0874               	movf	fputc@fp+1,w
 10515  3640  0085               	movwf	5
 10516  3641  3F40               	moviw [0]fsr1
 10517  3642  0700               	addwf	0,w
 10518  3643  00F5               	movwf	??_fputc
 10519  3644  3101               	addfsr 0,1
 10520  3645  3F41               	moviw [1]fsr1
 10521  3646  3D00               	addwfc	0,w
 10522  3647  00F6               	movwf	??_fputc+1
 10523  3648  0875               	movf	??_fputc,w
 10524  3649  0086               	movwf	6
 10525  364A  0876               	movf	??_fputc+1,w
 10526  364B  0087               	movwf	7
 10527  364C  0871               	movf	fputc@c,w
 10528  364D  0081               	movwf	1
 10529  364E  0873               	movf	fputc@fp,w
 10530  364F  0086               	movwf	6
 10531  3650  0874               	movf	fputc@fp+1,w
 10532  3651  0087               	movwf	7
 10533  3652  3142               	addfsr 1,2
 10534  3653  3001               	movlw	1
 10535  3654  0781               	addwf	1,f
 10536  3655  3141               	addfsr 1,1
 10537  3656  1803               	skipnc
 10538  3657  0A81               	incf	1,f
 10539  3658  0008               	return
 10540  3659                     __end_of_fputc:	
 10541                           
 10542                           	psect	text28
 10543  0003                     __ptext28:	
 10544 ;; *************** function _putch *****************
 10545 ;; Defined at:
 10546 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10547 ;; Parameters:    Size  Location     Type
 10548 ;;  c               1    wreg     unsigned char 
 10549 ;; Auto vars:     Size  Location     Type
 10550 ;;  c               1    0[COMMON] unsigned char 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  1    wreg      void 
 10553 ;; Registers used:
 10554 ;;		wreg
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10564 ;;Total ram usage:        0 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:    1
 10567 ;; This function calls:
 10568 ;;		Nothing
 10569 ;; This function is called by:
 10570 ;;		_fputc
 10571 ;; This function uses a non-reentrant model
 10572 ;;
 10573                           
 10574                           
 10575                           ;psect for function _putch
 10576  0003                     _putch:	
 10577                           
 10578                           ;incstack = 0
 10579                           ; Regs used in _putch: [wreg]
 10580  0003  0008               	return
 10581  0004                     __end_of_putch:	
 10582                           
 10583                           	psect	text29
 10584  2AD7                     __ptext29:	
 10585 ;; *************** function _atoi *****************
 10586 ;; Defined at:
 10587 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10588 ;; Parameters:    Size  Location     Type
 10589 ;;  s               2    7[COMMON] PTR const unsigned char 
 10590 ;;		 -> STR_22(18), STR_21(18), STR_20(19), STR_19(20), 
 10591 ;;		 -> STR_18(20), STR_17(21), STR_16(21), STR_15(21), 
 10592 ;;		 -> STR_14(22), STR_13(22), STR_12(21), STR_11(21), 
 10593 ;;		 -> STR_8(26), STR_7(16), STR_6(16), STR_5(3), 
 10594 ;;		 -> STR_4(4), STR_3(4), STR_2(4), STR_1(40), 
 10595 ;; Auto vars:     Size  Location     Type
 10596 ;;  n               2   11[BANK0 ] int 
 10597 ;;  neg             2    4[BANK0 ] int 
 10598 ;; Return value:  Size  Location     Type
 10599 ;;                  2    7[COMMON] int 
 10600 ;; Registers used:
 10601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10602 ;; Tracked objects:
 10603 ;;		On entry : 0/0
 10604 ;;		On exit  : 0/0
 10605 ;;		Unchanged: 0/0
 10606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10608 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10609 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10610 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10611 ;;Total ram usage:       15 bytes
 10612 ;; Hardware stack levels used:    1
 10613 ;; Hardware stack levels required when called:    2
 10614 ;; This function calls:
 10615 ;;		___wmul
 10616 ;;		_isdigit
 10617 ;;		_isspace
 10618 ;; This function is called by:
 10619 ;;		_vfpfcnvrt
 10620 ;; This function uses a non-reentrant model
 10621 ;;
 10622                           
 10623                           
 10624                           ;psect for function _atoi
 10625  2AD7                     _atoi:	
 10626                           
 10627                           ;incstack = 0
 10628                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10629  2AD7  0020               	movlb	0	; select bank0
 10630  2AD8  01AB               	clrf	atoi@n
 10631  2AD9  01AC               	clrf	atoi@n+1
 10632  2ADA  01A4               	clrf	atoi@neg
 10633  2ADB  01A5               	clrf	atoi@neg+1
 10634  2ADC                     l6870:	
 10635  2ADC  01AA               	clrf	_atoi$1772
 10636  2ADD  0AAA               	incf	_atoi$1772,f
 10637  2ADE  0877               	movf	atoi@s,w
 10638  2ADF  0084               	movwf	4
 10639  2AE0  0878               	movf	atoi@s+1,w
 10640  2AE1  0085               	movwf	5
 10641  2AE2  0012               	moviw fsr0++
 10642  2AE3  3A20               	xorlw	32
 10643  2AE4  1903               	btfsc	3,2
 10644  2AE5  2AF8               	goto	l6878
 10645  2AE6  0877               	movf	atoi@s,w
 10646  2AE7  0084               	movwf	4
 10647  2AE8  0878               	movf	atoi@s+1,w
 10648  2AE9  0085               	movwf	5
 10649  2AEA  0800               	movf	0,w	;code access
 10650  2AEB  3EF7               	addlw	247
 10651  2AEC  00A0               	movwf	??_atoi
 10652  2AED  30FF               	movlw	255
 10653  2AEE  1803               	skipnc
 10654  2AEF  3000               	movlw	0
 10655  2AF0  00A1               	movwf	??_atoi+1
 10656  2AF1  3000               	movlw	0
 10657  2AF2  0221               	subwf	??_atoi+1,w
 10658  2AF3  3005               	movlw	5
 10659  2AF4  1903               	skipnz
 10660  2AF5  0220               	subwf	??_atoi,w
 10661  2AF6  1803               	btfsc	3,0
 10662  2AF7  01AA               	clrf	_atoi$1772
 10663  2AF8                     l6878:	
 10664  2AF8  082A               	movf	_atoi$1772,w
 10665  2AF9  00A0               	movwf	??_atoi
 10666  2AFA  01A1               	clrf	??_atoi+1
 10667  2AFB  0820               	movf	??_atoi,w
 10668  2AFC  00A6               	movwf	_atoi$1771
 10669  2AFD  0821               	movf	??_atoi+1,w
 10670  2AFE  00A7               	movwf	_atoi$1771+1
 10671  2AFF  0826               	movf	_atoi$1771,w
 10672  2B00  0427               	iorwf	_atoi$1771+1,w
 10673  2B01  1903               	btfsc	3,2
 10674  2B02  2B0D               	goto	l6886
 10675  2B03  3001               	movlw	1
 10676  2B04  07F7               	addwf	atoi@s,f
 10677  2B05  3000               	movlw	0
 10678  2B06  3DF8               	addwfc	atoi@s+1,f
 10679  2B07  2ADC               	goto	l6870
 10680  2B08                     l6884:	
 10681  2B08  3001               	movlw	1
 10682  2B09  00A4               	movwf	atoi@neg
 10683  2B0A  3000               	movlw	0
 10684  2B0B  00A5               	movwf	atoi@neg+1
 10685  2B0C  2B40               	goto	l1490
 10686  2B0D                     l6886:	
 10687  2B0D  0877               	movf	atoi@s,w
 10688  2B0E  0084               	movwf	4
 10689  2B0F  0878               	movf	atoi@s+1,w
 10690  2B10  0085               	movwf	5
 10691  2B11  0800               	movf	0,w	;code access
 10692  2B12  00A0               	movwf	??_atoi
 10693  2B13  01A1               	clrf	??_atoi+1
 10694                           
 10695                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10696                           ; Switch size 1, requested type "simple"
 10697                           ; Number of cases is 1, Range of values is 0 to 0
 10698                           ; switch strategies available:
 10699                           ; Name         Instructions Cycles
 10700                           ; simple_byte            4     3 (average)
 10701                           ; direct_byte            8     6 (fixed)
 10702                           ; jumptable            260     6 (fixed)
 10703                           ;	Chosen strategy is simple_byte
 10704  2B14  0821               	movf	??_atoi+1,w
 10705  2B15  3A00               	xorlw	0	; case 0
 10706  2B16  1903               	skipnz
 10707  2B17  2B19               	goto	l8024
 10708  2B18  2B44               	goto	l6892
 10709  2B19                     l8024:	
 10710                           
 10711                           ; Switch size 1, requested type "simple"
 10712                           ; Number of cases is 2, Range of values is 43 to 45
 10713                           ; switch strategies available:
 10714                           ; Name         Instructions Cycles
 10715                           ; simple_byte            7     4 (average)
 10716                           ; direct_byte           15     9 (fixed)
 10717                           ; jumptable            263     9 (fixed)
 10718                           ;	Chosen strategy is simple_byte
 10719  2B19  0820               	movf	??_atoi,w
 10720  2B1A  3A2B               	xorlw	43	; case 43
 10721  2B1B  1903               	skipnz
 10722  2B1C  2B40               	goto	l1490
 10723  2B1D  3A06               	xorlw	6	; case 45
 10724  2B1E  1903               	skipnz
 10725  2B1F  2B08               	goto	l6884
 10726  2B20  2B44               	goto	l6892
 10727  2B21                     l6888:	
 10728  2B21  0877               	movf	atoi@s,w
 10729  2B22  0084               	movwf	4
 10730  2B23  0878               	movf	atoi@s+1,w
 10731  2B24  0085               	movwf	5
 10732  2B25  0800               	movf	0,w	;code access
 10733  2B26  00A0               	movwf	??_atoi
 10734  2B27  082C               	movf	atoi@n+1,w
 10735  2B28  00F2               	movwf	___wmul@multiplier+1
 10736  2B29  082B               	movf	atoi@n,w
 10737  2B2A  00F1               	movwf	___wmul@multiplier
 10738  2B2B  300A               	movlw	10
 10739  2B2C  00F3               	movwf	___wmul@multiplicand
 10740  2B2D  3000               	movlw	0
 10741  2B2E  00F4               	movwf	___wmul@multiplicand+1
 10742  2B2F  31B2  2269  31AA   	fcall	___wmul
 10743  2B32  0872               	movf	?___wmul+1,w
 10744  2B33  0020               	movlb	0	; select bank0
 10745  2B34  00A2               	movwf	??_atoi+2
 10746  2B35  0820               	movf	??_atoi,w
 10747  2B36  0271               	subwf	?___wmul,w
 10748  2B37  00A1               	movwf	??_atoi+1
 10749  2B38  1C03               	skipc
 10750  2B39  03A2               	decf	??_atoi+2,f
 10751  2B3A  0821               	movf	??_atoi+1,w
 10752  2B3B  3E30               	addlw	48
 10753  2B3C  00AB               	movwf	atoi@n
 10754  2B3D  3000               	movlw	0
 10755  2B3E  3D22               	addwfc	??_atoi+2,w
 10756  2B3F  00AC               	movwf	atoi@n+1
 10757  2B40                     l1490:	
 10758  2B40  3001               	movlw	1
 10759  2B41  07F7               	addwf	atoi@s,f
 10760  2B42  3000               	movlw	0
 10761  2B43  3DF8               	addwfc	atoi@s+1,f
 10762  2B44                     l6892:	
 10763  2B44  0877               	movf	atoi@s,w
 10764  2B45  0084               	movwf	4
 10765  2B46  0878               	movf	atoi@s+1,w
 10766  2B47  0085               	movwf	5
 10767  2B48  0800               	movf	0,w	;code access
 10768  2B49  3ED0               	addlw	208
 10769  2B4A  00A0               	movwf	??_atoi
 10770  2B4B  30FF               	movlw	255
 10771  2B4C  1803               	skipnc
 10772  2B4D  3000               	movlw	0
 10773  2B4E  00A1               	movwf	??_atoi+1
 10774  2B4F  3000               	movlw	0
 10775  2B50  0221               	subwf	??_atoi+1,w
 10776  2B51  300A               	movlw	10
 10777  2B52  1903               	skipnz
 10778  2B53  0220               	subwf	??_atoi,w
 10779  2B54  1803               	btfsc	3,0
 10780  2B55  2B58               	goto	u8610
 10781  2B56  3001               	movlw	1
 10782  2B57  2B59               	goto	u8620
 10783  2B58                     u8610:	
 10784  2B58  3000               	movlw	0
 10785  2B59                     u8620:	
 10786  2B59  00A2               	movwf	??_atoi+2
 10787  2B5A  01A3               	clrf	??_atoi+3
 10788  2B5B  0822               	movf	??_atoi+2,w
 10789  2B5C  00A8               	movwf	_atoi$1773
 10790  2B5D  0823               	movf	??_atoi+3,w
 10791  2B5E  00A9               	movwf	_atoi$1773+1
 10792  2B5F  0828               	movf	_atoi$1773,w
 10793  2B60  0429               	iorwf	_atoi$1773+1,w
 10794  2B61  1D03               	btfss	3,2
 10795  2B62  2B21               	goto	l6888
 10796  2B63  0824               	movf	atoi@neg,w
 10797  2B64  0425               	iorwf	atoi@neg+1,w
 10798  2B65  1D03               	btfss	3,2
 10799  2B66  2B73               	goto	l6902
 10800  2B67  092B               	comf	atoi@n,w
 10801  2B68  00A0               	movwf	??_atoi
 10802  2B69  092C               	comf	atoi@n+1,w
 10803  2B6A  00A1               	movwf	??_atoi+1
 10804  2B6B  0AA0               	incf	??_atoi,f
 10805  2B6C  1903               	skipnz
 10806  2B6D  0AA1               	incf	??_atoi+1,f
 10807  2B6E  0820               	movf	??_atoi,w
 10808  2B6F  00F7               	movwf	?_atoi
 10809  2B70  0821               	movf	??_atoi+1,w
 10810  2B71  00F8               	movwf	?_atoi+1
 10811  2B72  0008               	return
 10812  2B73                     l6902:	
 10813  2B73  082C               	movf	atoi@n+1,w
 10814  2B74  00F8               	movwf	?_atoi+1
 10815  2B75  082B               	movf	atoi@n,w
 10816  2B76  00F7               	movwf	?_atoi
 10817  2B77  0008               	return
 10818  2B78                     __end_of_atoi:	
 10819                           
 10820                           	psect	text30
 10821  32BA                     __ptext30:	
 10822 ;; *************** function _isspace *****************
 10823 ;; Defined at:
 10824 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10825 ;; Parameters:    Size  Location     Type
 10826 ;;  c               2    1[COMMON] int 
 10827 ;; Auto vars:     Size  Location     Type
 10828 ;;		None
 10829 ;; Return value:  Size  Location     Type
 10830 ;;                  2    1[COMMON] int 
 10831 ;; Registers used:
 10832 ;;		wreg, status,2, status,0
 10833 ;; Tracked objects:
 10834 ;;		On entry : 0/0
 10835 ;;		On exit  : 0/0
 10836 ;;		Unchanged: 0/0
 10837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10838 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10840 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10841 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10842 ;;Total ram usage:        5 bytes
 10843 ;; Hardware stack levels used:    1
 10844 ;; Hardware stack levels required when called:    1
 10845 ;; This function calls:
 10846 ;;		Nothing
 10847 ;; This function is called by:
 10848 ;;		_atoi
 10849 ;; This function uses a non-reentrant model
 10850 ;;
 10851                           
 10852                           
 10853                           ;psect for function _isspace
 10854  32BA                     _isspace:	
 10855                           
 10856                           ;incstack = 0
 10857                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10858  32BA  01F5               	clrf	_isspace$1798
 10859  32BB  0AF5               	incf	_isspace$1798,f
 10860  32BC  3020               	movlw	32
 10861  32BD  0671               	xorwf	isspace@c,w
 10862  32BE  0472               	iorwf	isspace@c+1,w
 10863  32BF  1903               	btfsc	3,2
 10864  32C0  2ACE               	goto	l4382
 10865  32C1  0871               	movf	isspace@c,w
 10866  32C2  3EF7               	addlw	247
 10867  32C3  00F3               	movwf	??_isspace
 10868  32C4  30FF               	movlw	255
 10869  32C5  3D72               	addwfc	isspace@c+1,w
 10870  32C6  00F4               	movwf	??_isspace+1
 10871  32C7  3000               	movlw	0
 10872  32C8  0274               	subwf	??_isspace+1,w
 10873  32C9  3005               	movlw	5
 10874  32CA  1903               	skipnz
 10875  32CB  0273               	subwf	??_isspace,w
 10876  32CC  1803               	btfsc	3,0
 10877  32CD  01F5               	clrf	_isspace$1798
 10878  32CE                     l4382:	
 10879  32CE  0875               	movf	_isspace$1798,w
 10880  32CF  00F3               	movwf	??_isspace
 10881  32D0  01F4               	clrf	??_isspace+1
 10882  32D1  0873               	movf	??_isspace,w
 10883  32D2  00F1               	movwf	?_isspace
 10884  32D3  0874               	movf	??_isspace+1,w
 10885  32D4  00F2               	movwf	?_isspace+1
 10886  32D5  0008               	return
 10887  32D6                     __end_of_isspace:	
 10888                           
 10889                           	psect	text31
 10890  31DC                     __ptext31:	
 10891 ;; *************** function _isdigit *****************
 10892 ;; Defined at:
 10893 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10894 ;; Parameters:    Size  Location     Type
 10895 ;;  c               2    1[COMMON] int 
 10896 ;; Auto vars:     Size  Location     Type
 10897 ;;		None
 10898 ;; Return value:  Size  Location     Type
 10899 ;;                  2    1[COMMON] int 
 10900 ;; Registers used:
 10901 ;;		wreg, status,2, status,0
 10902 ;; Tracked objects:
 10903 ;;		On entry : 0/0
 10904 ;;		On exit  : 0/0
 10905 ;;		Unchanged: 0/0
 10906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10909 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10910 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10911 ;;Total ram usage:        6 bytes
 10912 ;; Hardware stack levels used:    1
 10913 ;; Hardware stack levels required when called:    1
 10914 ;; This function calls:
 10915 ;;		Nothing
 10916 ;; This function is called by:
 10917 ;;		_vfpfcnvrt
 10918 ;;		_atoi
 10919 ;; This function uses a non-reentrant model
 10920 ;;
 10921                           
 10922                           
 10923                           ;psect for function _isdigit
 10924  31DC                     _isdigit:	
 10925                           
 10926                           ;incstack = 0
 10927                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10928  31DC  0871               	movf	isdigit@c,w
 10929  31DD  3ED0               	addlw	208
 10930  31DE  00F3               	movwf	??_isdigit
 10931  31DF  30FF               	movlw	255
 10932  31E0  3D72               	addwfc	isdigit@c+1,w
 10933  31E1  00F4               	movwf	??_isdigit+1
 10934  31E2  3000               	movlw	0
 10935  31E3  0274               	subwf	??_isdigit+1,w
 10936  31E4  300A               	movlw	10
 10937  31E5  1903               	skipnz
 10938  31E6  0273               	subwf	??_isdigit,w
 10939  31E7  1803               	btfsc	3,0
 10940  31E8  29EB               	goto	u4220
 10941  31E9  3001               	movlw	1
 10942  31EA  29EC               	goto	u4230
 10943  31EB                     u4220:	
 10944  31EB  3000               	movlw	0
 10945  31EC                     u4230:	
 10946  31EC  00F5               	movwf	??_isdigit+2
 10947  31ED  01F6               	clrf	??_isdigit+3
 10948  31EE  0875               	movf	??_isdigit+2,w
 10949  31EF  00F1               	movwf	?_isdigit
 10950  31F0  0876               	movf	??_isdigit+3,w
 10951  31F1  00F2               	movwf	?_isdigit+1
 10952  31F2  0008               	return
 10953  31F3                     __end_of_isdigit:	
 10954                           
 10955                           	psect	text32
 10956  324F                     __ptext32:	
 10957 ;; *************** function _EUSART_Write_Text *****************
 10958 ;; Defined at:
 10959 ;;		line 75 in file "EUSART.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;  text            2    2[COMMON] PTR unsigned char 
 10962 ;;		 -> STR_23(3), STR_10(3), STR_9(38), messageBuffer(127), 
 10963 ;; Auto vars:     Size  Location     Type
 10964 ;;  i               2    5[COMMON] int 
 10965 ;; Return value:  Size  Location     Type
 10966 ;;                  1    wreg      void 
 10967 ;; Registers used:
 10968 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10969 ;; Tracked objects:
 10970 ;;		On entry : 0/0
 10971 ;;		On exit  : 0/0
 10972 ;;		Unchanged: 0/0
 10973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10974 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10975 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10977 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10978 ;;Total ram usage:        5 bytes
 10979 ;; Hardware stack levels used:    1
 10980 ;; Hardware stack levels required when called:    2
 10981 ;; This function calls:
 10982 ;;		_EUSART_Write
 10983 ;; This function is called by:
 10984 ;;		_statemachine
 10985 ;;		_printcellParameters
 10986 ;;		_printotAFERegisters
 10987 ;; This function uses a non-reentrant model
 10988 ;;
 10989                           
 10990                           
 10991                           ;psect for function _EUSART_Write_Text
 10992  324F                     _EUSART_Write_Text:	
 10993                           
 10994                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10995                           
 10996                           ;incstack = 0
 10997                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10998  324F  01F5               	clrf	EUSART_Write_Text@i
 10999  3250  01F6               	clrf	EUSART_Write_Text@i+1
 11000  3251                     l5944:	
 11001  3251  0872               	movf	EUSART_Write_Text@text,w
 11002  3252  0775               	addwf	EUSART_Write_Text@i,w
 11003  3253  0084               	movwf	4
 11004  3254  0873               	movf	EUSART_Write_Text@text+1,w
 11005  3255  3D76               	addwfc	EUSART_Write_Text@i+1,w
 11006  3256  0085               	movwf	5
 11007  3257  0012               	moviw fsr0++
 11008  3258  1903               	btfsc	3,2
 11009  3259  0008               	return
 11010                           
 11011                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 11012  325A  0872               	movf	EUSART_Write_Text@text,w
 11013  325B  0775               	addwf	EUSART_Write_Text@i,w
 11014  325C  0084               	movwf	4
 11015  325D  0873               	movf	EUSART_Write_Text@text+1,w
 11016  325E  3D76               	addwfc	EUSART_Write_Text@i+1,w
 11017  325F  0085               	movwf	5
 11018  3260  0800               	movf	0,w	;code access
 11019  3261  3188  2000  31B2   	fcall	_EUSART_Write
 11020  3264  3001               	movlw	1
 11021  3265  07F5               	addwf	EUSART_Write_Text@i,f
 11022  3266  3000               	movlw	0
 11023  3267  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 11024  3268  2A51               	goto	l5944
 11025  3269                     __end_of_EUSART_Write_Text:	
 11026                           
 11027                           	psect	text33
 11028  0800                     __ptext33:	
 11029 ;; *************** function _EUSART_Write *****************
 11030 ;; Defined at:
 11031 ;;		line 56 in file "EUSART.c"
 11032 ;; Parameters:    Size  Location     Type
 11033 ;;  txData          1    wreg     unsigned char 
 11034 ;; Auto vars:     Size  Location     Type
 11035 ;;  txData          1    1[COMMON] unsigned char 
 11036 ;; Return value:  Size  Location     Type
 11037 ;;                  1    wreg      void 
 11038 ;; Registers used:
 11039 ;;		wreg
 11040 ;; Tracked objects:
 11041 ;;		On entry : 0/0
 11042 ;;		On exit  : 0/0
 11043 ;;		Unchanged: 0/0
 11044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11046 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11048 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11049 ;;Total ram usage:        1 bytes
 11050 ;; Hardware stack levels used:    1
 11051 ;; Hardware stack levels required when called:    1
 11052 ;; This function calls:
 11053 ;;		Nothing
 11054 ;; This function is called by:
 11055 ;;		_EUSART_Write_Text
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           
 11060                           ;psect for function _EUSART_Write
 11061  0800                     _EUSART_Write:	
 11062                           
 11063                           ;incstack = 0
 11064                           ; Regs used in _EUSART_Write: [wreg]
 11065                           ;EUSART_Write@txData stored from wreg
 11066  0800  00F1               	movwf	EUSART_Write@txData
 11067  0801                     l269:	
 11068                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 11069                           
 11070                           
 11071                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 11072  0801  0020               	movlb	0	; select bank0
 11073  0802  1E11               	btfss	17,4	;volatile
 11074  0803  2801               	goto	l269
 11075                           
 11076                           ;EUSART.c: 62:     TX1REG = txData;
 11077  0804  0871               	movf	EUSART_Write@txData,w
 11078  0805  0023               	movlb	3	; select bank3
 11079  0806  009A               	movwf	26	;volatile
 11080  0807  0008               	return
 11081  0808                     __end_of_EUSART_Write:	
 11082                           
 11083                           	psect	text34
 11084  2006                     __ptext34:	
 11085 ;; *************** function _init_AFE *****************
 11086 ;; Defined at:
 11087 ;;		line 3 in file "BQ76920.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;		None
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;		None
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  1    wreg      void 
 11094 ;; Registers used:
 11095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11105 ;;Total ram usage:        0 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    4
 11108 ;; This function calls:
 11109 ;;		_setCellOvervoltageProtection
 11110 ;;		_setCellUndervoltageProtection
 11111 ;;		_setOverCurrentDischargeProtection
 11112 ;;		_setShortCircuitProtection
 11113 ;;		_setShuntResistorValue
 11114 ;;		_setTemperatureLimitsint
 11115 ;; This function is called by:
 11116 ;;		_statemachine
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           
 11121                           ;psect for function _init_AFE
 11122  2006                     _init_AFE:	
 11123                           
 11124                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 11125                           
 11126                           ;incstack = 0
 11127                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11128  2006  30EC               	movlw	236
 11129  2007  0020               	movlb	0	; select bank0
 11130  2008  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 11131  2009  30FF               	movlw	255
 11132  200A  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 11133  200B  302D               	movlw	45
 11134  200C  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 11135  200D  3000               	movlw	0
 11136  200E  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 11137  200F  3000               	movlw	0
 11138  2010  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 11139  2011  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 11140  2012  302D               	movlw	45
 11141  2013  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 11142  2014  3000               	movlw	0
 11143  2015  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 11144  2016  31A8  2006  31A0   	fcall	_setTemperatureLimitsint
 11145                           
 11146                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 11147  2019  303C               	movlw	60
 11148  201A  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 11149  201B  30A3               	movlw	163
 11150  201C  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 11151  201D  30D7               	movlw	215
 11152  201E  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 11153  201F  300A               	movlw	10
 11154  2020  00F1               	movwf	setShuntResistorValue@res_mOhm
 11155  2021  31B1  2184  31A0   	fcall	_setShuntResistorValue
 11156                           
 11157                           ;BQ76920.c: 9:     setShortCircuitProtection(500, 200);
 11158  2024  3000               	movlw	0
 11159  2025  0020               	movlb	0	; select bank0
 11160  2026  00E9               	movwf	setShortCircuitProtection@current_mA+3
 11161  2027  3000               	movlw	0
 11162  2028  00E8               	movwf	setShortCircuitProtection@current_mA+2
 11163  2029  3001               	movlw	1
 11164  202A  00E7               	movwf	setShortCircuitProtection@current_mA+1
 11165  202B  30F4               	movlw	244
 11166  202C  00E6               	movwf	setShortCircuitProtection@current_mA
 11167  202D  30C8               	movlw	200
 11168  202E  00EA               	movwf	setShortCircuitProtection@delay_us
 11169  202F  3000               	movlw	0
 11170  2030  00EB               	movwf	setShortCircuitProtection@delay_us+1
 11171  2031  31A6  26E8  31A0   	fcall	_setShortCircuitProtection
 11172                           
 11173                           ;BQ76920.c: 14:     setOverCurrentDischargeProtection(10, 320);
 11174  2034  3000               	movlw	0
 11175  2035  0020               	movlb	0	; select bank0
 11176  2036  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 11177  2037  3000               	movlw	0
 11178  2038  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 11179  2039  3000               	movlw	0
 11180  203A  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 11181  203B  300A               	movlw	10
 11182  203C  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 11183  203D  3040               	movlw	64
 11184  203E  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 11185  203F  3001               	movlw	1
 11186  2040  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 11187  2041  31A5  25D3  31A0   	fcall	_setOverCurrentDischargeProtection
 11188                           
 11189                           ;BQ76920.c: 15:     setCellUndervoltageProtection(2900, 2);
 11190  2044  3054               	movlw	84
 11191  2045  0020               	movlb	0	; select bank0
 11192  2046  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 11193  2047  300B               	movlw	11
 11194  2048  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 11195  2049  3002               	movlw	2
 11196  204A  00B4               	movwf	setCellUndervoltageProtection@delay_s
 11197  204B  3000               	movlw	0
 11198  204C  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 11199  204D  31A0  205C  31A0   	fcall	_setCellUndervoltageProtection
 11200                           
 11201                           ;BQ76920.c: 16:     setCellOvervoltageProtection(4100,2);
 11202  2050  3004               	movlw	4
 11203  2051  0020               	movlb	0	; select bank0
 11204  2052  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 11205  2053  3010               	movlw	16
 11206  2054  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 11207  2055  3002               	movlw	2
 11208  2056  00B4               	movwf	setCellOvervoltageProtection@delay_s
 11209  2057  3000               	movlw	0
 11210  2058  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 11211  2059  3198  2000         	fcall	_setCellOvervoltageProtection
 11212  205B  0008               	return
 11213  205C                     __end_of_init_AFE:	
 11214                           
 11215                           	psect	text35
 11216  2806                     __ptext35:	
 11217 ;; *************** function _setTemperatureLimitsint *****************
 11218 ;; Defined at:
 11219 ;;		line 61 in file "BQ76920.c"
 11220 ;; Parameters:    Size  Location     Type
 11221 ;;  minDischarge    2    0[BANK0 ] int 
 11222 ;;  maxDischarge    2    2[BANK0 ] int 
 11223 ;;  minCharge_de    2    4[BANK0 ] int 
 11224 ;;  maxCharge_de    2    6[BANK0 ] int 
 11225 ;; Auto vars:     Size  Location     Type
 11226 ;;		None
 11227 ;; Return value:  Size  Location     Type
 11228 ;;                  1    wreg      void 
 11229 ;; Registers used:
 11230 ;;		wreg, status,2, status,0, pclath, cstack
 11231 ;; Tracked objects:
 11232 ;;		On entry : 0/0
 11233 ;;		On exit  : 0/0
 11234 ;;		Unchanged: 0/0
 11235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11236 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11239 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11240 ;;Total ram usage:        8 bytes
 11241 ;; Hardware stack levels used:    1
 11242 ;; Hardware stack levels required when called:    2
 11243 ;; This function calls:
 11244 ;;		___wmul
 11245 ;; This function is called by:
 11246 ;;		_init_AFE
 11247 ;; This function uses a non-reentrant model
 11248 ;;
 11249                           
 11250                           
 11251                           ;psect for function _setTemperatureLimitsint
 11252  2806                     _setTemperatureLimitsint:	
 11253                           
 11254                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 11255                           
 11256                           ;incstack = 0
 11257                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 11258  2806  0020               	movlb	0	; select bank0
 11259  2807  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 11260  2808  00F2               	movwf	___wmul@multiplier+1
 11261  2809  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 11262  280A  00F1               	movwf	___wmul@multiplier
 11263  280B  300A               	movlw	10
 11264  280C  00F3               	movwf	___wmul@multiplicand
 11265  280D  3000               	movlw	0
 11266  280E  00F4               	movwf	___wmul@multiplicand+1
 11267  280F  31B2  2269  31A8   	fcall	___wmul
 11268  2812  0872               	movf	?___wmul+1,w
 11269  2813  0023               	movlb	3	; select bank3
 11270  2814  00DB               	movwf	(_minCellTempDischarge+1)^(0+384)
 11271  2815  0871               	movf	?___wmul,w
 11272  2816  00DA               	movwf	_minCellTempDischarge^(0+384)
 11273                           
 11274                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 11275  2817  0020               	movlb	0	; select bank0
 11276  2818  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 11277  2819  00F2               	movwf	___wmul@multiplier+1
 11278  281A  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 11279  281B  00F1               	movwf	___wmul@multiplier
 11280  281C  300A               	movlw	10
 11281  281D  00F3               	movwf	___wmul@multiplicand
 11282  281E  3000               	movlw	0
 11283  281F  00F4               	movwf	___wmul@multiplicand+1
 11284  2820  31B2  2269  31A8   	fcall	___wmul
 11285  2823  0872               	movf	?___wmul+1,w
 11286  2824  0023               	movlb	3	; select bank3
 11287  2825  00D7               	movwf	(_maxCellTempDischarge+1)^(0+384)
 11288  2826  0871               	movf	?___wmul,w
 11289  2827  00D6               	movwf	_maxCellTempDischarge^(0+384)
 11290                           
 11291                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 11292  2828  0020               	movlb	0	; select bank0
 11293  2829  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 11294  282A  00F2               	movwf	___wmul@multiplier+1
 11295  282B  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 11296  282C  00F1               	movwf	___wmul@multiplier
 11297  282D  300A               	movlw	10
 11298  282E  00F3               	movwf	___wmul@multiplicand
 11299  282F  3000               	movlw	0
 11300  2830  00F4               	movwf	___wmul@multiplicand+1
 11301  2831  31B2  2269  31A8   	fcall	___wmul
 11302  2834  0872               	movf	?___wmul+1,w
 11303  2835  0023               	movlb	3	; select bank3
 11304  2836  00DD               	movwf	(_minCellTempCharge+1)^(0+384)
 11305  2837  0871               	movf	?___wmul,w
 11306  2838  00DC               	movwf	_minCellTempCharge^(0+384)
 11307                           
 11308                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 11309  2839  0020               	movlb	0	; select bank0
 11310  283A  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 11311  283B  00F2               	movwf	___wmul@multiplier+1
 11312  283C  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 11313  283D  00F1               	movwf	___wmul@multiplier
 11314  283E  300A               	movlw	10
 11315  283F  00F3               	movwf	___wmul@multiplicand
 11316  2840  3000               	movlw	0
 11317  2841  00F4               	movwf	___wmul@multiplicand+1
 11318  2842  31B2  2269         	fcall	___wmul
 11319  2844  0872               	movf	?___wmul+1,w
 11320  2845  0023               	movlb	3	; select bank3
 11321  2846  00D9               	movwf	(_maxCellTempCharge+1)^(0+384)
 11322  2847  0871               	movf	?___wmul,w
 11323  2848  00D8               	movwf	_maxCellTempCharge^(0+384)
 11324  2849  0008               	return
 11325  284A                     __end_of_setTemperatureLimitsint:	
 11326                           
 11327                           	psect	text36
 11328  3269                     __ptext36:	
 11329 ;; *************** function ___wmul *****************
 11330 ;; Defined at:
 11331 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11332 ;; Parameters:    Size  Location     Type
 11333 ;;  multiplier      2    1[COMMON] unsigned int 
 11334 ;;  multiplicand    2    3[COMMON] unsigned int 
 11335 ;; Auto vars:     Size  Location     Type
 11336 ;;  product         2    5[COMMON] unsigned int 
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  2    1[COMMON] unsigned int 
 11339 ;; Registers used:
 11340 ;;		wreg, status,2, status,0
 11341 ;; Tracked objects:
 11342 ;;		On entry : 0/0
 11343 ;;		On exit  : 0/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11346 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11349 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11350 ;;Total ram usage:        6 bytes
 11351 ;; Hardware stack levels used:    1
 11352 ;; Hardware stack levels required when called:    1
 11353 ;; This function calls:
 11354 ;;		Nothing
 11355 ;; This function is called by:
 11356 ;;		_setTemperatureLimitsint
 11357 ;;		_atoi
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           
 11362                           ;psect for function ___wmul
 11363  3269                     ___wmul:	
 11364                           
 11365                           ;incstack = 0
 11366                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11367  3269  01F5               	clrf	___wmul@product
 11368  326A  01F6               	clrf	___wmul@product+1
 11369  326B                     l4256:	
 11370  326B  1C71               	btfss	___wmul@multiplier,0
 11371  326C  2A71               	goto	l1015
 11372  326D  0873               	movf	___wmul@multiplicand,w
 11373  326E  07F5               	addwf	___wmul@product,f
 11374  326F  0874               	movf	___wmul@multiplicand+1,w
 11375  3270  3DF6               	addwfc	___wmul@product+1,f
 11376  3271                     l1015:	
 11377  3271  3001               	movlw	1
 11378  3272                     u4255:	
 11379  3272  35F3               	lslf	___wmul@multiplicand,f
 11380  3273  0DF4               	rlf	___wmul@multiplicand+1,f
 11381  3274  0B89               	decfsz	9,f
 11382  3275  2A72               	goto	u4255
 11383  3276  3001               	movlw	1
 11384  3277                     u4265:	
 11385  3277  36F2               	lsrf	___wmul@multiplier+1,f
 11386  3278  0CF1               	rrf	___wmul@multiplier,f
 11387  3279  0B89               	decfsz	9,f
 11388  327A  2A77               	goto	u4265
 11389  327B  0871               	movf	___wmul@multiplier,w
 11390  327C  0472               	iorwf	___wmul@multiplier+1,w
 11391  327D  1D03               	btfss	3,2
 11392  327E  2A6B               	goto	l4256
 11393  327F  0876               	movf	___wmul@product+1,w
 11394  3280  00F2               	movwf	?___wmul+1
 11395  3281  0875               	movf	___wmul@product,w
 11396  3282  00F1               	movwf	?___wmul
 11397  3283  0008               	return
 11398  3284                     __end_of___wmul:	
 11399                           
 11400                           	psect	text37
 11401  3184                     __ptext37:	
 11402 ;; *************** function _setShuntResistorValue *****************
 11403 ;; Defined at:
 11404 ;;		line 73 in file "BQ76920.c"
 11405 ;; Parameters:    Size  Location     Type
 11406 ;;  res_mOhm        4    1[COMMON] float 
 11407 ;; Auto vars:     Size  Location     Type
 11408 ;;		None
 11409 ;; Return value:  Size  Location     Type
 11410 ;;                  1    wreg      void 
 11411 ;; Registers used:
 11412 ;;		wreg
 11413 ;; Tracked objects:
 11414 ;;		On entry : 0/0
 11415 ;;		On exit  : 0/0
 11416 ;;		Unchanged: 0/0
 11417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11421 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11422 ;;Total ram usage:        4 bytes
 11423 ;; Hardware stack levels used:    1
 11424 ;; Hardware stack levels required when called:    1
 11425 ;; This function calls:
 11426 ;;		Nothing
 11427 ;; This function is called by:
 11428 ;;		_init_AFE
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           
 11432                           
 11433                           ;psect for function _setShuntResistorValue
 11434  3184                     _setShuntResistorValue:	
 11435                           
 11436                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 11437                           
 11438                           ;incstack = 0
 11439                           ; Regs used in _setShuntResistorValue: [wreg]
 11440  3184  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11441  3185  0023               	movlb	3	; select bank3
 11442  3186  00B1               	movwf	(_shuntResistorValue_mOhm+3)^(0+384)
 11443  3187  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11444  3188  00B0               	movwf	(_shuntResistorValue_mOhm+2)^(0+384)
 11445  3189  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11446  318A  00AF               	movwf	(_shuntResistorValue_mOhm+1)^(0+384)
 11447  318B  0871               	movf	setShuntResistorValue@res_mOhm,w
 11448  318C  00AE               	movwf	_shuntResistorValue_mOhm^(0+384)
 11449  318D  0008               	return
 11450  318E                     __end_of_setShuntResistorValue:	
 11451                           
 11452                           	psect	text38
 11453  26E8                     __ptext38:	
 11454 ;; *************** function _setShortCircuitProtection *****************
 11455 ;; Defined at:
 11456 ;;		line 81 in file "BQ76920.c"
 11457 ;; Parameters:    Size  Location     Type
 11458 ;;  current_mA      4   70[BANK0 ] long 
 11459 ;;  delay_us        2   74[BANK0 ] int 
 11460 ;; Auto vars:     Size  Location     Type
 11461 ;;  i               2   10[BANK1 ] int 
 11462 ;;  i               2    8[BANK1 ] int 
 11463 ;;  scaler          4    0[BANK1 ] float 
 11464 ;; Return value:  Size  Location     Type
 11465 ;;                  1    wreg      void 
 11466 ;; Registers used:
 11467 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11468 ;; Tracked objects:
 11469 ;;		On entry : 0/0
 11470 ;;		On exit  : 0/0
 11471 ;;		Unchanged: 0/0
 11472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11473 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11474 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11475 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11476 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11477 ;;Total ram usage:       21 bytes
 11478 ;; Hardware stack levels used:    1
 11479 ;; Hardware stack levels required when called:    3
 11480 ;; This function calls:
 11481 ;;		_I2C_writeRegister
 11482 ;;		___fldiv
 11483 ;;		___flge
 11484 ;;		___flmul
 11485 ;;		___xxtofl
 11486 ;; This function is called by:
 11487 ;;		_init_AFE
 11488 ;; This function uses a non-reentrant model
 11489 ;;
 11490                           
 11491                           
 11492                           ;psect for function _setShortCircuitProtection
 11493  26E8                     _setShortCircuitProtection:	
 11494                           
 11495                           ;BQ76920.c: 86:     float scaler = 1000.0;
 11496                           
 11497                           ;incstack = 0
 11498                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11499  26E8  3044               	movlw	68
 11500  26E9  0021               	movlb	1	; select bank1
 11501  26EA  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11502  26EB  307A               	movlw	122
 11503  26EC  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11504  26ED  3000               	movlw	0
 11505  26EE  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11506  26EF  3000               	movlw	0
 11507  26F0  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11508                           
 11509                           ;BQ76920.c: 87:     protect1.bits.SCD_THRESH = 0;
 11510  26F1  30F8               	movlw	-8
 11511  26F2  0023               	movlb	3	; select bank3
 11512  26F3  05E2               	andwf	_protect1^(0+384),f
 11513                           
 11514                           ;BQ76920.c: 88:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11515  26F4  0021               	movlb	1	; select bank1
 11516  26F5  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11517  26F6  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11518  26F7                     l7438:	
 11519                           
 11520                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11521  26F7  0023               	movlb	3	; select bank3
 11522  26F8  0831               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11523  26F9  0020               	movlb	0	; select bank0
 11524  26FA  00A9               	movwf	___flmul@b+3
 11525  26FB  0023               	movlb	3	; select bank3
 11526  26FC  0830               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11527  26FD  0020               	movlb	0	; select bank0
 11528  26FE  00A8               	movwf	___flmul@b+2
 11529  26FF  0023               	movlb	3	; select bank3
 11530  2700  082F               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11531  2701  0020               	movlb	0	; select bank0
 11532  2702  00A7               	movwf	___flmul@b+1
 11533  2703  0023               	movlb	3	; select bank3
 11534  2704  082E               	movf	_shuntResistorValue_mOhm^(0+384),w
 11535  2705  0020               	movlb	0	; select bank0
 11536  2706  00A6               	movwf	___flmul@b
 11537  2707  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11538  2708  00F4               	movwf	___xxtofl@val+3
 11539  2709  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11540  270A  00F3               	movwf	___xxtofl@val+2
 11541  270B  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11542  270C  00F2               	movwf	___xxtofl@val+1
 11543  270D  0866               	movf	setShortCircuitProtection@current_mA,w
 11544  270E  00F1               	movwf	___xxtofl@val
 11545  270F  3001               	movlw	1
 11546  2710  31AA  2241  31A6   	fcall	___xxtofl
 11547  2713  0874               	movf	?___xxtofl+3,w
 11548  2714  0020               	movlb	0	; select bank0
 11549  2715  00AD               	movwf	___flmul@a+3
 11550  2716  0873               	movf	?___xxtofl+2,w
 11551  2717  00AC               	movwf	___flmul@a+2
 11552  2718  0872               	movf	?___xxtofl+1,w
 11553  2719  00AB               	movwf	___flmul@a+1
 11554  271A  0871               	movf	?___xxtofl,w
 11555  271B  00AA               	movwf	___flmul@a
 11556  271C  3190  2023  31A6   	fcall	___flmul
 11557  271F  0020               	movlb	0	; select bank0
 11558  2720  0829               	movf	?___flmul+3,w
 11559  2721  0021               	movlb	1	; select bank1
 11560  2722  00A7               	movwf	(_setShortCircuitProtection$2147+3)^(0+128)
 11561  2723  0020               	movlb	0	; select bank0
 11562  2724  0828               	movf	?___flmul+2,w
 11563  2725  0021               	movlb	1	; select bank1
 11564  2726  00A6               	movwf	(_setShortCircuitProtection$2147+2)^(0+128)
 11565  2727  0020               	movlb	0	; select bank0
 11566  2728  0827               	movf	?___flmul+1,w
 11567  2729  0021               	movlb	1	; select bank1
 11568  272A  00A5               	movwf	(_setShortCircuitProtection$2147+1)^(0+128)
 11569  272B  0020               	movlb	0	; select bank0
 11570  272C  0826               	movf	?___flmul,w
 11571  272D  0021               	movlb	1	; select bank1
 11572  272E  00A4               	movwf	_setShortCircuitProtection$2147^(0+128)
 11573                           
 11574                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11575  272F  3044               	movlw	68
 11576  2730  0020               	movlb	0	; select bank0
 11577  2731  00C3               	movwf	___fldiv@a+3
 11578  2732  307A               	movlw	122
 11579  2733  00C2               	movwf	___fldiv@a+2
 11580  2734  3000               	movlw	0
 11581  2735  00C1               	movwf	___fldiv@a+1
 11582  2736  3000               	movlw	0
 11583  2737  00C0               	movwf	___fldiv@a
 11584  2738  0021               	movlb	1	; select bank1
 11585  2739  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11586  273A  0020               	movlb	0	; select bank0
 11587  273B  00A9               	movwf	___flmul@b+3
 11588  273C  0021               	movlb	1	; select bank1
 11589  273D  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11590  273E  0020               	movlb	0	; select bank0
 11591  273F  00A8               	movwf	___flmul@b+2
 11592  2740  0021               	movlb	1	; select bank1
 11593  2741  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11594  2742  0020               	movlb	0	; select bank0
 11595  2743  00A7               	movwf	___flmul@b+1
 11596  2744  0021               	movlb	1	; select bank1
 11597  2745  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11598  2746  0020               	movlb	0	; select bank0
 11599  2747  00A6               	movwf	___flmul@b
 11600  2748  0021               	movlb	1	; select bank1
 11601  2749  0827               	movf	(_setShortCircuitProtection$2147+3)^(0+128),w
 11602  274A  0020               	movlb	0	; select bank0
 11603  274B  00AD               	movwf	___flmul@a+3
 11604  274C  0021               	movlb	1	; select bank1
 11605  274D  0826               	movf	(_setShortCircuitProtection$2147+2)^(0+128),w
 11606  274E  0020               	movlb	0	; select bank0
 11607  274F  00AC               	movwf	___flmul@a+2
 11608  2750  0021               	movlb	1	; select bank1
 11609  2751  0825               	movf	(_setShortCircuitProtection$2147+1)^(0+128),w
 11610  2752  0020               	movlb	0	; select bank0
 11611  2753  00AB               	movwf	___flmul@a+1
 11612  2754  0021               	movlb	1	; select bank1
 11613  2755  0824               	movf	_setShortCircuitProtection$2147^(0+128),w
 11614  2756  0020               	movlb	0	; select bank0
 11615  2757  00AA               	movwf	___flmul@a
 11616  2758  3190  2023  31A6   	fcall	___flmul
 11617  275B  0020               	movlb	0	; select bank0
 11618  275C  0829               	movf	?___flmul+3,w
 11619  275D  00C7               	movwf	___fldiv@b+3
 11620  275E  0828               	movf	?___flmul+2,w
 11621  275F  00C6               	movwf	___fldiv@b+2
 11622  2760  0827               	movf	?___flmul+1,w
 11623  2761  00C5               	movwf	___fldiv@b+1
 11624  2762  0826               	movf	?___flmul,w
 11625  2763  00C4               	movwf	___fldiv@b
 11626  2764  319C  24E2  31A6   	fcall	___fldiv
 11627  2767  0020               	movlb	0	; select bank0
 11628  2768  0843               	movf	?___fldiv+3,w
 11629  2769  00DD               	movwf	___flge@ff1+3
 11630  276A  0842               	movf	?___fldiv+2,w
 11631  276B  00DC               	movwf	___flge@ff1+2
 11632  276C  0841               	movf	?___fldiv+1,w
 11633  276D  00DB               	movwf	___flge@ff1+1
 11634  276E  0840               	movf	?___fldiv,w
 11635  276F  00DA               	movwf	___flge@ff1
 11636  2770  0021               	movlb	1	; select bank1
 11637  2771  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11638  2772  0085               	movwf	5
 11639  2773  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11640  2774  0084               	movwf	4
 11641  2775  3584               	lslf	4,f
 11642  2776  0D85               	rlf	5,f
 11643  2777  3046               	movlw	low (_SCD_threshold_setting| (0+32768))
 11644  2778  0784               	addwf	4,f
 11645  2779  30BA               	movlw	high (_SCD_threshold_setting| (0+32768))
 11646  277A  3D85               	addwfc	5,f
 11647  277B  3F00               	moviw [0]fsr0
 11648  277C  0020               	movlb	0	; select bank0
 11649  277D  00EC               	movwf	??_setShortCircuitProtection
 11650  277E  3F01               	moviw [1]fsr0
 11651  277F  00ED               	movwf	??_setShortCircuitProtection+1
 11652  2780  086C               	movf	??_setShortCircuitProtection,w
 11653  2781  00F1               	movwf	___xxtofl@val
 11654  2782  086D               	movf	??_setShortCircuitProtection+1,w
 11655  2783  00F2               	movwf	___xxtofl@val+1
 11656  2784  0D89               	rlf	9,f
 11657  2785  3B89               	subwfb	9,f
 11658  2786  0989               	comf	9,f
 11659  2787  00F3               	movwf	___xxtofl@val+2
 11660  2788  00F4               	movwf	___xxtofl@val+3
 11661  2789  3001               	movlw	1
 11662  278A  31AA  2241  31A6   	fcall	___xxtofl
 11663  278D  0874               	movf	?___xxtofl+3,w
 11664  278E  0020               	movlb	0	; select bank0
 11665  278F  00E1               	movwf	___flge@ff2+3
 11666  2790  0873               	movf	?___xxtofl+2,w
 11667  2791  00E0               	movwf	___flge@ff2+2
 11668  2792  0872               	movf	?___xxtofl+1,w
 11669  2793  00DF               	movwf	___flge@ff2+1
 11670  2794  0871               	movf	?___xxtofl,w
 11671  2795  00DE               	movwf	___flge@ff2
 11672  2796  31A8  204A  31A6   	fcall	___flge
 11673  2799  1C03               	btfss	3,0
 11674  279A  2FA3               	goto	l7444
 11675                           
 11676                           ;BQ76920.c: 90:             protect1.bits.SCD_THRESH = i;
 11677  279B  0023               	movlb	3	; select bank3
 11678  279C  0862               	movf	_protect1^(0+384),w
 11679  279D  0021               	movlb	1	; select bank1
 11680  279E  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11681  279F  39F8               	andlw	-8
 11682  27A0  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11683  27A1  0023               	movlb	3	; select bank3
 11684  27A2  00E2               	movwf	_protect1^(0+384)
 11685  27A3                     l7444:	
 11686                           
 11687                           ;BQ76920.c: 92:     }
 11688  27A3  3001               	movlw	1
 11689  27A4  0021               	movlb	1	; select bank1
 11690  27A5  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11691  27A6  3000               	movlw	0
 11692  27A7  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11693  27A8  3000               	movlw	0
 11694  27A9  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11695  27AA  3007               	movlw	7
 11696  27AB  1903               	skipnz
 11697  27AC  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11698  27AD  1C03               	skipc
 11699  27AE  2EF7               	goto	l7438
 11700                           
 11701                           ;BQ76920.c: 94:     protect1.bits.SCD_DELAY = 0;
 11702  27AF  30E7               	movlw	-25
 11703  27B0  0023               	movlb	3	; select bank3
 11704  27B1  05E2               	andwf	_protect1^(0+384),f
 11705                           
 11706                           ;BQ76920.c: 95:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11707  27B2  0021               	movlb	1	; select bank1
 11708  27B3  01AA               	clrf	setShortCircuitProtection@i_998^(0+128)
 11709  27B4  01AB               	clrf	(setShortCircuitProtection@i_998+1)^(0+128)
 11710  27B5                     l7456:	
 11711                           
 11712                           ;BQ76920.c: 96:         if (delay_us >= SCD_delay_setting[i]) {
 11713  27B5  082B               	movf	(setShortCircuitProtection@i_998+1)^(0+128),w
 11714  27B6  0085               	movwf	5
 11715  27B7  082A               	movf	setShortCircuitProtection@i_998^(0+128),w
 11716  27B8  0084               	movwf	4
 11717  27B9  3584               	lslf	4,f
 11718  27BA  0D85               	rlf	5,f
 11719  27BB  3076               	movlw	low (_SCD_delay_setting| (0+32768))
 11720  27BC  0784               	addwf	4,f
 11721  27BD  30BA               	movlw	high (_SCD_delay_setting| (0+32768))
 11722  27BE  3D85               	addwfc	5,f
 11723  27BF  3F00               	moviw [0]fsr0
 11724  27C0  0020               	movlb	0	; select bank0
 11725  27C1  00EC               	movwf	??_setShortCircuitProtection
 11726  27C2  3F01               	moviw [1]fsr0
 11727  27C3  00ED               	movwf	??_setShortCircuitProtection+1
 11728  27C4  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11729  27C5  3A80               	xorlw	128
 11730  27C6  00EE               	movwf	??_setShortCircuitProtection+2
 11731  27C7  086D               	movf	??_setShortCircuitProtection+1,w
 11732  27C8  3A80               	xorlw	128
 11733  27C9  026E               	subwf	??_setShortCircuitProtection+2,w
 11734  27CA  1D03               	skipz
 11735  27CB  2FCE               	goto	u9385
 11736  27CC  086C               	movf	??_setShortCircuitProtection,w
 11737  27CD  026A               	subwf	setShortCircuitProtection@delay_us,w
 11738  27CE                     u9385:	
 11739  27CE  1C03               	skipc
 11740  27CF  2FDF               	goto	l7460
 11741                           
 11742                           ;BQ76920.c: 97:             protect1.bits.SCD_DELAY = i;
 11743  27D0  0021               	movlb	1	; select bank1
 11744  27D1  082A               	movf	setShortCircuitProtection@i_998^(0+128),w
 11745  27D2  0020               	movlb	0	; select bank0
 11746  27D3  00EC               	movwf	??_setShortCircuitProtection
 11747  27D4  0DEC               	rlf	??_setShortCircuitProtection,f
 11748  27D5  0DEC               	rlf	??_setShortCircuitProtection,f
 11749  27D6  0DEC               	rlf	??_setShortCircuitProtection,f
 11750  27D7  0023               	movlb	3	; select bank3
 11751  27D8  0862               	movf	_protect1^(0+384),w
 11752  27D9  0020               	movlb	0	; select bank0
 11753  27DA  066C               	xorwf	??_setShortCircuitProtection,w
 11754  27DB  39E7               	andlw	-25
 11755  27DC  066C               	xorwf	??_setShortCircuitProtection,w
 11756  27DD  0023               	movlb	3	; select bank3
 11757  27DE  00E2               	movwf	_protect1^(0+384)
 11758  27DF                     l7460:	
 11759                           
 11760                           ;BQ76920.c: 99:     }
 11761  27DF  3001               	movlw	1
 11762  27E0  0021               	movlb	1	; select bank1
 11763  27E1  07AA               	addwf	setShortCircuitProtection@i_998^(0+128),f
 11764  27E2  3000               	movlw	0
 11765  27E3  3DAB               	addwfc	(setShortCircuitProtection@i_998+1)^(0+128),f
 11766  27E4  3000               	movlw	0
 11767  27E5  022B               	subwf	(setShortCircuitProtection@i_998+1)^(0+128),w
 11768  27E6  3007               	movlw	7
 11769  27E7  1903               	skipnz
 11770  27E8  022A               	subwf	setShortCircuitProtection@i_998^(0+128),w
 11771  27E9  1C03               	skipc
 11772  27EA  2FB5               	goto	l7456
 11773                           
 11774                           ;BQ76920.c: 100:     protect1.bits.RSNS = 0;
 11775  27EB  0023               	movlb	3	; select bank3
 11776  27EC  13E2               	bcf	_protect1^(0+384),7
 11777                           
 11778                           ;BQ76920.c: 102:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11779  27ED  3018               	movlw	24
 11780  27EE  00F5               	movwf	I2C_writeRegister@slaveAddress
 11781  27EF  3000               	movlw	0
 11782  27F0  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11783  27F1  3006               	movlw	6
 11784  27F2  00F7               	movwf	I2C_writeRegister@regAddress
 11785  27F3  3000               	movlw	0
 11786  27F4  00F8               	movwf	I2C_writeRegister@regAddress+1
 11787  27F5  0862               	movf	_protect1^(0+384),w
 11788  27F6  0020               	movlb	0	; select bank0
 11789  27F7  00EC               	movwf	??_setShortCircuitProtection
 11790  27F8  01ED               	clrf	??_setShortCircuitProtection+1
 11791  27F9  086C               	movf	??_setShortCircuitProtection,w
 11792  27FA  00F9               	movwf	I2C_writeRegister@data
 11793  27FB  086D               	movf	??_setShortCircuitProtection+1,w
 11794  27FC  00FA               	movwf	I2C_writeRegister@data+1
 11795  27FD  31B2  22F3         	fcall	_I2C_writeRegister
 11796  27FF  0008               	return
 11797  2800                     __end_of_setShortCircuitProtection:	
 11798                           
 11799                           	psect	text39
 11800  25D3                     __ptext39:	
 11801 ;; *************** function _setOverCurrentDischargeProtection *****************
 11802 ;; Defined at:
 11803 ;;		line 109 in file "BQ76920.c"
 11804 ;; Parameters:    Size  Location     Type
 11805 ;;  current_mA      4   70[BANK0 ] long 
 11806 ;;  delay_ms        2   74[BANK0 ] int 
 11807 ;; Auto vars:     Size  Location     Type
 11808 ;;  i               2   10[BANK1 ] int 
 11809 ;;  i               2    8[BANK1 ] int 
 11810 ;;  scaler          4    0[BANK1 ] float 
 11811 ;; Return value:  Size  Location     Type
 11812 ;;                  1    wreg      void 
 11813 ;; Registers used:
 11814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11815 ;; Tracked objects:
 11816 ;;		On entry : 0/0
 11817 ;;		On exit  : 0/0
 11818 ;;		Unchanged: 0/0
 11819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11820 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11821 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11822 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11823 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11824 ;;Total ram usage:       21 bytes
 11825 ;; Hardware stack levels used:    1
 11826 ;; Hardware stack levels required when called:    3
 11827 ;; This function calls:
 11828 ;;		_I2C_writeRegister
 11829 ;;		___fldiv
 11830 ;;		___flge
 11831 ;;		___flmul
 11832 ;;		___xxtofl
 11833 ;; This function is called by:
 11834 ;;		_init_AFE
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           
 11839                           ;psect for function _setOverCurrentDischargeProtection
 11840  25D3                     _setOverCurrentDischargeProtection:	
 11841                           
 11842                           ;BQ76920.c: 112:     float scaler = 1000.0;
 11843                           
 11844                           ;incstack = 0
 11845                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11846  25D3  3044               	movlw	68
 11847  25D4  0021               	movlb	1	; select bank1
 11848  25D5  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11849  25D6  307A               	movlw	122
 11850  25D7  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11851  25D8  3000               	movlw	0
 11852  25D9  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11853  25DA  3000               	movlw	0
 11854  25DB  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11855                           
 11856                           ;BQ76920.c: 113:     protect2.bits.OCD_THRESH = 0;
 11857  25DC  30F0               	movlw	-16
 11858  25DD  0023               	movlb	3	; select bank3
 11859  25DE  05E1               	andwf	_protect2^(0+384),f
 11860                           
 11861                           ;BQ76920.c: 114:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11862  25DF  0021               	movlb	1	; select bank1
 11863  25E0  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11864  25E1  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11865  25E2                     l7476:	
 11866                           
 11867                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11868  25E2  0023               	movlb	3	; select bank3
 11869  25E3  0831               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11870  25E4  0020               	movlb	0	; select bank0
 11871  25E5  00A9               	movwf	___flmul@b+3
 11872  25E6  0023               	movlb	3	; select bank3
 11873  25E7  0830               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11874  25E8  0020               	movlb	0	; select bank0
 11875  25E9  00A8               	movwf	___flmul@b+2
 11876  25EA  0023               	movlb	3	; select bank3
 11877  25EB  082F               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11878  25EC  0020               	movlb	0	; select bank0
 11879  25ED  00A7               	movwf	___flmul@b+1
 11880  25EE  0023               	movlb	3	; select bank3
 11881  25EF  082E               	movf	_shuntResistorValue_mOhm^(0+384),w
 11882  25F0  0020               	movlb	0	; select bank0
 11883  25F1  00A6               	movwf	___flmul@b
 11884  25F2  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11885  25F3  00F4               	movwf	___xxtofl@val+3
 11886  25F4  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11887  25F5  00F3               	movwf	___xxtofl@val+2
 11888  25F6  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11889  25F7  00F2               	movwf	___xxtofl@val+1
 11890  25F8  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11891  25F9  00F1               	movwf	___xxtofl@val
 11892  25FA  3001               	movlw	1
 11893  25FB  31AA  2241  31A5   	fcall	___xxtofl
 11894  25FE  0874               	movf	?___xxtofl+3,w
 11895  25FF  0020               	movlb	0	; select bank0
 11896  2600  00AD               	movwf	___flmul@a+3
 11897  2601  0873               	movf	?___xxtofl+2,w
 11898  2602  00AC               	movwf	___flmul@a+2
 11899  2603  0872               	movf	?___xxtofl+1,w
 11900  2604  00AB               	movwf	___flmul@a+1
 11901  2605  0871               	movf	?___xxtofl,w
 11902  2606  00AA               	movwf	___flmul@a
 11903  2607  3190  2023  31A5   	fcall	___flmul
 11904  260A  0020               	movlb	0	; select bank0
 11905  260B  0829               	movf	?___flmul+3,w
 11906  260C  0021               	movlb	1	; select bank1
 11907  260D  00A7               	movwf	(_setOverCurrentDischargeProtection$2148+3)^(0+128)
 11908  260E  0020               	movlb	0	; select bank0
 11909  260F  0828               	movf	?___flmul+2,w
 11910  2610  0021               	movlb	1	; select bank1
 11911  2611  00A6               	movwf	(_setOverCurrentDischargeProtection$2148+2)^(0+128)
 11912  2612  0020               	movlb	0	; select bank0
 11913  2613  0827               	movf	?___flmul+1,w
 11914  2614  0021               	movlb	1	; select bank1
 11915  2615  00A5               	movwf	(_setOverCurrentDischargeProtection$2148+1)^(0+128)
 11916  2616  0020               	movlb	0	; select bank0
 11917  2617  0826               	movf	?___flmul,w
 11918  2618  0021               	movlb	1	; select bank1
 11919  2619  00A4               	movwf	_setOverCurrentDischargeProtection$2148^(0+128)
 11920                           
 11921                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11922  261A  3044               	movlw	68
 11923  261B  0020               	movlb	0	; select bank0
 11924  261C  00C3               	movwf	___fldiv@a+3
 11925  261D  307A               	movlw	122
 11926  261E  00C2               	movwf	___fldiv@a+2
 11927  261F  3000               	movlw	0
 11928  2620  00C1               	movwf	___fldiv@a+1
 11929  2621  3000               	movlw	0
 11930  2622  00C0               	movwf	___fldiv@a
 11931  2623  0021               	movlb	1	; select bank1
 11932  2624  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 11933  2625  0020               	movlb	0	; select bank0
 11934  2626  00A9               	movwf	___flmul@b+3
 11935  2627  0021               	movlb	1	; select bank1
 11936  2628  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 11937  2629  0020               	movlb	0	; select bank0
 11938  262A  00A8               	movwf	___flmul@b+2
 11939  262B  0021               	movlb	1	; select bank1
 11940  262C  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 11941  262D  0020               	movlb	0	; select bank0
 11942  262E  00A7               	movwf	___flmul@b+1
 11943  262F  0021               	movlb	1	; select bank1
 11944  2630  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 11945  2631  0020               	movlb	0	; select bank0
 11946  2632  00A6               	movwf	___flmul@b
 11947  2633  0021               	movlb	1	; select bank1
 11948  2634  0827               	movf	(_setOverCurrentDischargeProtection$2148+3)^(0+128),w
 11949  2635  0020               	movlb	0	; select bank0
 11950  2636  00AD               	movwf	___flmul@a+3
 11951  2637  0021               	movlb	1	; select bank1
 11952  2638  0826               	movf	(_setOverCurrentDischargeProtection$2148+2)^(0+128),w
 11953  2639  0020               	movlb	0	; select bank0
 11954  263A  00AC               	movwf	___flmul@a+2
 11955  263B  0021               	movlb	1	; select bank1
 11956  263C  0825               	movf	(_setOverCurrentDischargeProtection$2148+1)^(0+128),w
 11957  263D  0020               	movlb	0	; select bank0
 11958  263E  00AB               	movwf	___flmul@a+1
 11959  263F  0021               	movlb	1	; select bank1
 11960  2640  0824               	movf	_setOverCurrentDischargeProtection$2148^(0+128),w
 11961  2641  0020               	movlb	0	; select bank0
 11962  2642  00AA               	movwf	___flmul@a
 11963  2643  3190  2023  31A5   	fcall	___flmul
 11964  2646  0020               	movlb	0	; select bank0
 11965  2647  0829               	movf	?___flmul+3,w
 11966  2648  00C7               	movwf	___fldiv@b+3
 11967  2649  0828               	movf	?___flmul+2,w
 11968  264A  00C6               	movwf	___fldiv@b+2
 11969  264B  0827               	movf	?___flmul+1,w
 11970  264C  00C5               	movwf	___fldiv@b+1
 11971  264D  0826               	movf	?___flmul,w
 11972  264E  00C4               	movwf	___fldiv@b
 11973  264F  319C  24E2  31A5   	fcall	___fldiv
 11974  2652  0020               	movlb	0	; select bank0
 11975  2653  0843               	movf	?___fldiv+3,w
 11976  2654  00DD               	movwf	___flge@ff1+3
 11977  2655  0842               	movf	?___fldiv+2,w
 11978  2656  00DC               	movwf	___flge@ff1+2
 11979  2657  0841               	movf	?___fldiv+1,w
 11980  2658  00DB               	movwf	___flge@ff1+1
 11981  2659  0840               	movf	?___fldiv,w
 11982  265A  00DA               	movwf	___flge@ff1
 11983  265B  0021               	movlb	1	; select bank1
 11984  265C  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11985  265D  0085               	movwf	5
 11986  265E  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 11987  265F  0084               	movwf	4
 11988  2660  3584               	lslf	4,f
 11989  2661  0D85               	rlf	5,f
 11990  2662  3008               	movlw	low (_OCD_threshold_setting| (0+32768))
 11991  2663  0784               	addwf	4,f
 11992  2664  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 11993  2665  3D85               	addwfc	5,f
 11994  2666  3F00               	moviw [0]fsr0
 11995  2667  0020               	movlb	0	; select bank0
 11996  2668  00EC               	movwf	??_setOverCurrentDischargeProtection
 11997  2669  3F01               	moviw [1]fsr0
 11998  266A  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11999  266B  086C               	movf	??_setOverCurrentDischargeProtection,w
 12000  266C  00F1               	movwf	___xxtofl@val
 12001  266D  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12002  266E  00F2               	movwf	___xxtofl@val+1
 12003  266F  0D89               	rlf	9,f
 12004  2670  3B89               	subwfb	9,f
 12005  2671  0989               	comf	9,f
 12006  2672  00F3               	movwf	___xxtofl@val+2
 12007  2673  00F4               	movwf	___xxtofl@val+3
 12008  2674  3001               	movlw	1
 12009  2675  31AA  2241  31A5   	fcall	___xxtofl
 12010  2678  0874               	movf	?___xxtofl+3,w
 12011  2679  0020               	movlb	0	; select bank0
 12012  267A  00E1               	movwf	___flge@ff2+3
 12013  267B  0873               	movf	?___xxtofl+2,w
 12014  267C  00E0               	movwf	___flge@ff2+2
 12015  267D  0872               	movf	?___xxtofl+1,w
 12016  267E  00DF               	movwf	___flge@ff2+1
 12017  267F  0871               	movf	?___xxtofl,w
 12018  2680  00DE               	movwf	___flge@ff2
 12019  2681  31A8  204A  31A5   	fcall	___flge
 12020  2684  1C03               	btfss	3,0
 12021  2685  2E8E               	goto	l7482
 12022                           
 12023                           ;BQ76920.c: 116:             protect2.bits.OCD_THRESH = i;
 12024  2686  0023               	movlb	3	; select bank3
 12025  2687  0861               	movf	_protect2^(0+384),w
 12026  2688  0021               	movlb	1	; select bank1
 12027  2689  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 12028  268A  39F0               	andlw	-16
 12029  268B  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 12030  268C  0023               	movlb	3	; select bank3
 12031  268D  00E1               	movwf	_protect2^(0+384)
 12032  268E                     l7482:	
 12033                           
 12034                           ;BQ76920.c: 118:     }
 12035  268E  3001               	movlw	1
 12036  268F  0021               	movlb	1	; select bank1
 12037  2690  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 12038  2691  3000               	movlw	0
 12039  2692  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 12040  2693  3000               	movlw	0
 12041  2694  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 12042  2695  300F               	movlw	15
 12043  2696  1903               	skipnz
 12044  2697  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 12045  2698  1C03               	skipc
 12046  2699  2DE2               	goto	l7476
 12047                           
 12048                           ;BQ76920.c: 120:     protect2.bits.OCD_DELAY = 0;
 12049  269A  308F               	movlw	-113
 12050  269B  0023               	movlb	3	; select bank3
 12051  269C  05E1               	andwf	_protect2^(0+384),f
 12052                           
 12053                           ;BQ76920.c: 121:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 12054  269D  0021               	movlb	1	; select bank1
 12055  269E  01AA               	clrf	setOverCurrentDischargeProtection@i_1007^(0+128)
 12056  269F  01AB               	clrf	(setOverCurrentDischargeProtection@i_1007+1)^(0+128)
 12057  26A0                     l7494:	
 12058                           
 12059                           ;BQ76920.c: 122:         if (delay_ms >= OCD_delay_setting[i]) {
 12060  26A0  082B               	movf	(setOverCurrentDischargeProtection@i_1007+1)^(0+128),w
 12061  26A1  0085               	movwf	5
 12062  26A2  082A               	movf	setOverCurrentDischargeProtection@i_1007^(0+128),w
 12063  26A3  0084               	movwf	4
 12064  26A4  3584               	lslf	4,f
 12065  26A5  0D85               	rlf	5,f
 12066  26A6  3036               	movlw	low (_OCD_delay_setting| (0+32768))
 12067  26A7  0784               	addwf	4,f
 12068  26A8  30BA               	movlw	high (_OCD_delay_setting| (0+32768))
 12069  26A9  3D85               	addwfc	5,f
 12070  26AA  3F00               	moviw [0]fsr0
 12071  26AB  0020               	movlb	0	; select bank0
 12072  26AC  00EC               	movwf	??_setOverCurrentDischargeProtection
 12073  26AD  3F01               	moviw [1]fsr0
 12074  26AE  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 12075  26AF  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 12076  26B0  3A80               	xorlw	128
 12077  26B1  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 12078  26B2  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12079  26B3  3A80               	xorlw	128
 12080  26B4  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 12081  26B5  1D03               	skipz
 12082  26B6  2EB9               	goto	u9425
 12083  26B7  086C               	movf	??_setOverCurrentDischargeProtection,w
 12084  26B8  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 12085  26B9                     u9425:	
 12086  26B9  1C03               	skipc
 12087  26BA  2EC8               	goto	l7498
 12088                           
 12089                           ;BQ76920.c: 123:             protect2.bits.OCD_DELAY = i;
 12090  26BB  0021               	movlb	1	; select bank1
 12091  26BC  082A               	movf	setOverCurrentDischargeProtection@i_1007^(0+128),w
 12092  26BD  0020               	movlb	0	; select bank0
 12093  26BE  00EC               	movwf	??_setOverCurrentDischargeProtection
 12094  26BF  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 12095  26C0  0023               	movlb	3	; select bank3
 12096  26C1  0861               	movf	_protect2^(0+384),w
 12097  26C2  0020               	movlb	0	; select bank0
 12098  26C3  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 12099  26C4  398F               	andlw	-113
 12100  26C5  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 12101  26C6  0023               	movlb	3	; select bank3
 12102  26C7  00E1               	movwf	_protect2^(0+384)
 12103  26C8                     l7498:	
 12104                           
 12105                           ;BQ76920.c: 125:     }
 12106  26C8  3001               	movlw	1
 12107  26C9  0021               	movlb	1	; select bank1
 12108  26CA  07AA               	addwf	setOverCurrentDischargeProtection@i_1007^(0+128),f
 12109  26CB  3000               	movlw	0
 12110  26CC  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_1007+1)^(0+128),f
 12111  26CD  3000               	movlw	0
 12112  26CE  022B               	subwf	(setOverCurrentDischargeProtection@i_1007+1)^(0+128),w
 12113  26CF  3007               	movlw	7
 12114  26D0  1903               	skipnz
 12115  26D1  022A               	subwf	setOverCurrentDischargeProtection@i_1007^(0+128),w
 12116  26D2  1C03               	skipc
 12117  26D3  2EA0               	goto	l7494
 12118                           
 12119                           ;BQ76920.c: 127:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 12120  26D4  3018               	movlw	24
 12121  26D5  00F5               	movwf	I2C_writeRegister@slaveAddress
 12122  26D6  3000               	movlw	0
 12123  26D7  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12124  26D8  3007               	movlw	7
 12125  26D9  00F7               	movwf	I2C_writeRegister@regAddress
 12126  26DA  3000               	movlw	0
 12127  26DB  00F8               	movwf	I2C_writeRegister@regAddress+1
 12128  26DC  0023               	movlb	3	; select bank3
 12129  26DD  0861               	movf	_protect2^(0+384),w
 12130  26DE  0020               	movlb	0	; select bank0
 12131  26DF  00EC               	movwf	??_setOverCurrentDischargeProtection
 12132  26E0  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 12133  26E1  086C               	movf	??_setOverCurrentDischargeProtection,w
 12134  26E2  00F9               	movwf	I2C_writeRegister@data
 12135  26E3  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 12136  26E4  00FA               	movwf	I2C_writeRegister@data+1
 12137  26E5  31B2  22F3         	fcall	_I2C_writeRegister
 12138  26E7  0008               	return
 12139  26E8                     __end_of_setOverCurrentDischargeProtection:	
 12140                           
 12141                           	psect	text40
 12142  284A                     __ptext40:	
 12143 ;; *************** function ___flge *****************
 12144 ;; Defined at:
 12145 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 12146 ;; Parameters:    Size  Location     Type
 12147 ;;  ff1             4   58[BANK0 ] void 
 12148 ;;  ff2             4   62[BANK0 ] void 
 12149 ;; Auto vars:     Size  Location     Type
 12150 ;;		None
 12151 ;; Return value:  Size  Location     Type
 12152 ;;		None               void
 12153 ;; Registers used:
 12154 ;;		wreg, status,2, status,0
 12155 ;; Tracked objects:
 12156 ;;		On entry : 0/0
 12157 ;;		On exit  : 0/0
 12158 ;;		Unchanged: 0/0
 12159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12160 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12162 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12163 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12164 ;;Total ram usage:       12 bytes
 12165 ;; Hardware stack levels used:    1
 12166 ;; Hardware stack levels required when called:    1
 12167 ;; This function calls:
 12168 ;;		Nothing
 12169 ;; This function is called by:
 12170 ;;		_setShortCircuitProtection
 12171 ;;		_setOverCurrentDischargeProtection
 12172 ;; This function uses a non-reentrant model
 12173 ;;
 12174                           
 12175                           
 12176                           ;psect for function ___flge
 12177  284A                     ___flge:	
 12178                           
 12179                           ;incstack = 0
 12180                           ; Regs used in ___flge: [wreg+status,2+status,0]
 12181  284A  3000               	movlw	0
 12182  284B  0020               	movlb	0	; select bank0
 12183  284C  055A               	andwf	___flge@ff1,w
 12184  284D  00E2               	movwf	??___flge
 12185  284E  3000               	movlw	0
 12186  284F  055B               	andwf	___flge@ff1+1,w
 12187  2850  00E3               	movwf	??___flge+1
 12188  2851  3080               	movlw	128
 12189  2852  055C               	andwf	___flge@ff1+2,w
 12190  2853  00E4               	movwf	??___flge+2
 12191  2854  307F               	movlw	127
 12192  2855  055D               	andwf	___flge@ff1+3,w
 12193  2856  00E5               	movwf	??___flge+3
 12194  2857  0865               	movf	??___flge+3,w
 12195  2858  0464               	iorwf	??___flge+2,w
 12196  2859  0463               	iorwf	??___flge+1,w
 12197  285A  0462               	iorwf	??___flge,w
 12198  285B  1D03               	skipz
 12199  285C  2865               	goto	l1193
 12200  285D  3000               	movlw	0
 12201  285E  00DD               	movwf	___flge@ff1+3
 12202  285F  3000               	movlw	0
 12203  2860  00DC               	movwf	___flge@ff1+2
 12204  2861  3000               	movlw	0
 12205  2862  00DB               	movwf	___flge@ff1+1
 12206  2863  3000               	movlw	0
 12207  2864  00DA               	movwf	___flge@ff1
 12208  2865                     l1193:	
 12209  2865  3000               	movlw	0
 12210  2866  055E               	andwf	___flge@ff2,w
 12211  2867  00E2               	movwf	??___flge
 12212  2868  3000               	movlw	0
 12213  2869  055F               	andwf	___flge@ff2+1,w
 12214  286A  00E3               	movwf	??___flge+1
 12215  286B  3080               	movlw	128
 12216  286C  0560               	andwf	___flge@ff2+2,w
 12217  286D  00E4               	movwf	??___flge+2
 12218  286E  307F               	movlw	127
 12219  286F  0561               	andwf	___flge@ff2+3,w
 12220  2870  00E5               	movwf	??___flge+3
 12221  2871  0865               	movf	??___flge+3,w
 12222  2872  0464               	iorwf	??___flge+2,w
 12223  2873  0463               	iorwf	??___flge+1,w
 12224  2874  0462               	iorwf	??___flge,w
 12225  2875  1D03               	skipz
 12226  2876  287F               	goto	l5832
 12227  2877  3000               	movlw	0
 12228  2878  00E1               	movwf	___flge@ff2+3
 12229  2879  3000               	movlw	0
 12230  287A  00E0               	movwf	___flge@ff2+2
 12231  287B  3000               	movlw	0
 12232  287C  00DF               	movwf	___flge@ff2+1
 12233  287D  3000               	movlw	0
 12234  287E  00DE               	movwf	___flge@ff2
 12235  287F                     l5832:	
 12236  287F  1FDD               	btfss	___flge@ff1+3,7
 12237  2880  2899               	goto	l5836
 12238  2881  3000               	movlw	0
 12239  2882  00E2               	movwf	??___flge
 12240  2883  3000               	movlw	0
 12241  2884  00E3               	movwf	??___flge+1
 12242  2885  3000               	movlw	0
 12243  2886  00E4               	movwf	??___flge+2
 12244  2887  3080               	movlw	128
 12245  2888  00E5               	movwf	??___flge+3
 12246  2889  085A               	movf	___flge@ff1,w
 12247  288A  02E2               	subwf	??___flge,f
 12248  288B  085B               	movf	___flge@ff1+1,w
 12249  288C  3BE3               	subwfb	??___flge+1,f
 12250  288D  085C               	movf	___flge@ff1+2,w
 12251  288E  3BE4               	subwfb	??___flge+2,f
 12252  288F  085D               	movf	___flge@ff1+3,w
 12253  2890  3BE5               	subwfb	??___flge+3,f
 12254  2891  0865               	movf	??___flge+3,w
 12255  2892  00DD               	movwf	___flge@ff1+3
 12256  2893  0864               	movf	??___flge+2,w
 12257  2894  00DC               	movwf	___flge@ff1+2
 12258  2895  0863               	movf	??___flge+1,w
 12259  2896  00DB               	movwf	___flge@ff1+1
 12260  2897  0862               	movf	??___flge,w
 12261  2898  00DA               	movwf	___flge@ff1
 12262  2899                     l5836:	
 12263  2899  1FE1               	btfss	___flge@ff2+3,7
 12264  289A  28B3               	goto	l1196
 12265  289B  3000               	movlw	0
 12266  289C  00E2               	movwf	??___flge
 12267  289D  3000               	movlw	0
 12268  289E  00E3               	movwf	??___flge+1
 12269  289F  3000               	movlw	0
 12270  28A0  00E4               	movwf	??___flge+2
 12271  28A1  3080               	movlw	128
 12272  28A2  00E5               	movwf	??___flge+3
 12273  28A3  085E               	movf	___flge@ff2,w
 12274  28A4  02E2               	subwf	??___flge,f
 12275  28A5  085F               	movf	___flge@ff2+1,w
 12276  28A6  3BE3               	subwfb	??___flge+1,f
 12277  28A7  0860               	movf	___flge@ff2+2,w
 12278  28A8  3BE4               	subwfb	??___flge+2,f
 12279  28A9  0861               	movf	___flge@ff2+3,w
 12280  28AA  3BE5               	subwfb	??___flge+3,f
 12281  28AB  0865               	movf	??___flge+3,w
 12282  28AC  00E1               	movwf	___flge@ff2+3
 12283  28AD  0864               	movf	??___flge+2,w
 12284  28AE  00E0               	movwf	___flge@ff2+2
 12285  28AF  0863               	movf	??___flge+1,w
 12286  28B0  00DF               	movwf	___flge@ff2+1
 12287  28B1  0862               	movf	??___flge,w
 12288  28B2  00DE               	movwf	___flge@ff2
 12289  28B3                     l1196:	
 12290  28B3  3080               	movlw	128
 12291  28B4  06DD               	xorwf	___flge@ff1+3,f
 12292  28B5  3080               	movlw	128
 12293  28B6  06E1               	xorwf	___flge@ff2+3,f
 12294  28B7  0861               	movf	___flge@ff2+3,w
 12295  28B8  025D               	subwf	___flge@ff1+3,w
 12296  28B9  1D03               	skipz
 12297  28BA  0008               	return
 12298  28BB  0860               	movf	___flge@ff2+2,w
 12299  28BC  025C               	subwf	___flge@ff1+2,w
 12300  28BD  1D03               	skipz
 12301  28BE  0008               	return
 12302  28BF  085F               	movf	___flge@ff2+1,w
 12303  28C0  025B               	subwf	___flge@ff1+1,w
 12304  28C1  1D03               	skipz
 12305  28C2  0008               	return
 12306  28C3  085E               	movf	___flge@ff2,w
 12307  28C4  025A               	subwf	___flge@ff1,w
 12308  28C5  0008               	return
 12309  28C6                     __end_of___flge:	
 12310                           
 12311                           	psect	text41
 12312  205C                     __ptext41:	
 12313 ;; *************** function _setCellUndervoltageProtection *****************
 12314 ;; Defined at:
 12315 ;;		line 133 in file "BQ76920.c"
 12316 ;; Parameters:    Size  Location     Type
 12317 ;;  voltage_mV      2   18[BANK0 ] int 
 12318 ;;  delay_s         2   20[BANK0 ] int 
 12319 ;; Auto vars:     Size  Location     Type
 12320 ;;  i               2   37[BANK0 ] int 
 12321 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 12322 ;; Return value:  Size  Location     Type
 12323 ;;                  1    wreg      void 
 12324 ;; Registers used:
 12325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12326 ;; Tracked objects:
 12327 ;;		On entry : 0/0
 12328 ;;		On exit  : 0/0
 12329 ;;		Unchanged: 0/0
 12330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12331 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12332 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12333 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12334 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12335 ;;Total ram usage:       21 bytes
 12336 ;; Hardware stack levels used:    1
 12337 ;; Hardware stack levels required when called:    3
 12338 ;; This function calls:
 12339 ;;		_I2C_writeRegister
 12340 ;;		___aldiv
 12341 ;;		___lmul
 12342 ;;		_readRegister
 12343 ;; This function is called by:
 12344 ;;		_init_AFE
 12345 ;; This function uses a non-reentrant model
 12346 ;;
 12347                           
 12348                           
 12349                           ;psect for function _setCellUndervoltageProtection
 12350  205C                     _setCellUndervoltageProtection:	
 12351                           
 12352                           ;BQ76920.c: 135:     minCellVoltage = voltage_mV;
 12353                           
 12354                           ;incstack = 0
 12355                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 12356  205C  0020               	movlb	0	; select bank0
 12357  205D  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12358  205E  0023               	movlb	3	; select bank3
 12359  205F  00C3               	movwf	(_minCellVoltage+1)^(0+384)
 12360  2060  0020               	movlb	0	; select bank0
 12361  2061  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12362  2062  0023               	movlb	3	; select bank3
 12363  2063  00C2               	movwf	_minCellVoltage^(0+384)
 12364                           
 12365                           ;BQ76920.c: 137:     protect3.regByte = readRegister(0x18, 0x08);
 12366  2064  3018               	movlw	24
 12367  2065  00F5               	movwf	readRegister@slaveAddress
 12368  2066  3000               	movlw	0
 12369  2067  00F6               	movwf	readRegister@slaveAddress+1
 12370  2068  3008               	movlw	8
 12371  2069  00F7               	movwf	readRegister@regAddress
 12372  206A  3000               	movlw	0
 12373  206B  00F8               	movwf	readRegister@regAddress+1
 12374  206C  3187  27CA  31A0   	fcall	_readRegister
 12375  206F  0875               	movf	?_readRegister,w
 12376  2070  0020               	movlb	0	; select bank0
 12377  2071  00B6               	movwf	??_setCellUndervoltageProtection
 12378  2072  0836               	movf	??_setCellUndervoltageProtection,w
 12379  2073  0023               	movlb	3	; select bank3
 12380  2074  00E0               	movwf	_protect3^(0+384)
 12381                           
 12382                           ;BQ76920.c: 138:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12383  2075  0022               	movlb	2	; select bank2
 12384  2076  086E               	movf	_adcGain^(0+256),w
 12385  2077  0020               	movlb	0	; select bank0
 12386  2078  00A4               	movwf	___aldiv@divisor
 12387  2079  0022               	movlb	2	; select bank2
 12388  207A  086F               	movf	(_adcGain+1)^(0+256),w
 12389  207B  0020               	movlb	0	; select bank0
 12390  207C  00A5               	movwf	___aldiv@divisor+1
 12391  207D  0D89               	rlf	9,f
 12392  207E  3B89               	subwfb	9,f
 12393  207F  0989               	comf	9,f
 12394  2080  00A6               	movwf	___aldiv@divisor+2
 12395  2081  00A7               	movwf	___aldiv@divisor+3
 12396  2082  0022               	movlb	2	; select bank2
 12397  2083  086C               	movf	_adcOffset^(0+256),w
 12398  2084  0020               	movlb	0	; select bank0
 12399  2085  00B6               	movwf	??_setCellUndervoltageProtection
 12400  2086  0022               	movlb	2	; select bank2
 12401  2087  086D               	movf	(_adcOffset+1)^(0+256),w
 12402  2088  0020               	movlb	0	; select bank0
 12403  2089  00B7               	movwf	??_setCellUndervoltageProtection+1
 12404  208A  3000               	movlw	0
 12405  208B  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12406  208C  30FF               	movlw	255
 12407  208D  00B8               	movwf	??_setCellUndervoltageProtection+2
 12408  208E  00B9               	movwf	??_setCellUndervoltageProtection+3
 12409  208F  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12410  2090  00BA               	movwf	??_setCellUndervoltageProtection+4
 12411  2091  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12412  2092  00BB               	movwf	??_setCellUndervoltageProtection+5
 12413  2093  3000               	movlw	0
 12414  2094  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12415  2095  30FF               	movlw	255
 12416  2096  00BC               	movwf	??_setCellUndervoltageProtection+6
 12417  2097  00BD               	movwf	??_setCellUndervoltageProtection+7
 12418  2098  0836               	movf	??_setCellUndervoltageProtection,w
 12419  2099  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12420  209A  0837               	movf	??_setCellUndervoltageProtection+1,w
 12421  209B  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12422  209C  0838               	movf	??_setCellUndervoltageProtection+2,w
 12423  209D  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12424  209E  0839               	movf	??_setCellUndervoltageProtection+3,w
 12425  209F  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12426  20A0  083D               	movf	??_setCellUndervoltageProtection+7,w
 12427  20A1  00F4               	movwf	___lmul@multiplier+3
 12428  20A2  083C               	movf	??_setCellUndervoltageProtection+6,w
 12429  20A3  00F3               	movwf	___lmul@multiplier+2
 12430  20A4  083B               	movf	??_setCellUndervoltageProtection+5,w
 12431  20A5  00F2               	movwf	___lmul@multiplier+1
 12432  20A6  083A               	movf	??_setCellUndervoltageProtection+4,w
 12433  20A7  00F1               	movwf	___lmul@multiplier
 12434  20A8  3000               	movlw	0
 12435  20A9  00F8               	movwf	___lmul@multiplicand+3
 12436  20AA  3000               	movlw	0
 12437  20AB  00F7               	movwf	___lmul@multiplicand+2
 12438  20AC  3003               	movlw	3
 12439  20AD  00F6               	movwf	___lmul@multiplicand+1
 12440  20AE  30E8               	movlw	232
 12441  20AF  00F5               	movwf	___lmul@multiplicand
 12442  20B0  31B4  2421  31A0   	fcall	___lmul
 12443  20B3  0874               	movf	?___lmul+3,w
 12444  20B4  0020               	movlb	0	; select bank0
 12445  20B5  00AB               	movwf	___aldiv@dividend+3
 12446  20B6  0873               	movf	?___lmul+2,w
 12447  20B7  00AA               	movwf	___aldiv@dividend+2
 12448  20B8  0872               	movf	?___lmul+1,w
 12449  20B9  00A9               	movwf	___aldiv@dividend+1
 12450  20BA  0871               	movf	?___lmul,w
 12451  20BB  00A8               	movwf	___aldiv@dividend
 12452  20BC  31A9  21BF  31A0   	fcall	___aldiv
 12453  20BF  0020               	movlb	0	; select bank0
 12454  20C0  0824               	movf	?___aldiv,w
 12455  20C1  00BE               	movwf	??_setCellUndervoltageProtection+8
 12456  20C2  0825               	movf	?___aldiv+1,w
 12457  20C3  00BF               	movwf	??_setCellUndervoltageProtection+9
 12458  20C4  0826               	movf	?___aldiv+2,w
 12459  20C5  00C0               	movwf	??_setCellUndervoltageProtection+10
 12460  20C6  0827               	movf	?___aldiv+3,w
 12461  20C7  00C1               	movwf	??_setCellUndervoltageProtection+11
 12462  20C8  3004               	movlw	4
 12463  20C9  00C2               	movwf	??_setCellUndervoltageProtection+12
 12464  20CA                     u9445:	
 12465  20CA  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12466  20CB  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12467  20CC  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12468  20CD  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12469  20CE  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12470  20CF  28CA               	goto	u9445
 12471  20D0  083E               	movf	??_setCellUndervoltageProtection+8,w
 12472  20D1  00C3               	movwf	??_setCellUndervoltageProtection+13
 12473  20D2  0843               	movf	??_setCellUndervoltageProtection+13,w
 12474  20D3  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12475                           
 12476                           ;BQ76920.c: 139:     uv_trip += 1;
 12477  20D4  3001               	movlw	1
 12478  20D5  00B6               	movwf	??_setCellUndervoltageProtection
 12479  20D6  0836               	movf	??_setCellUndervoltageProtection,w
 12480  20D7  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12481                           
 12482                           ;BQ76920.c: 140:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12483  20D8  3018               	movlw	24
 12484  20D9  00F5               	movwf	I2C_writeRegister@slaveAddress
 12485  20DA  3000               	movlw	0
 12486  20DB  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12487  20DC  300A               	movlw	10
 12488  20DD  00F7               	movwf	I2C_writeRegister@regAddress
 12489  20DE  3000               	movlw	0
 12490  20DF  00F8               	movwf	I2C_writeRegister@regAddress+1
 12491  20E0  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12492  20E1  00B6               	movwf	??_setCellUndervoltageProtection
 12493  20E2  01B7               	clrf	??_setCellUndervoltageProtection+1
 12494  20E3  0836               	movf	??_setCellUndervoltageProtection,w
 12495  20E4  00F9               	movwf	I2C_writeRegister@data
 12496  20E5  0837               	movf	??_setCellUndervoltageProtection+1,w
 12497  20E6  00FA               	movwf	I2C_writeRegister@data+1
 12498  20E7  31B2  22F3  31A0   	fcall	_I2C_writeRegister
 12499                           
 12500                           ;BQ76920.c: 142:     protect3.bits.UV_DELAY = 0;
 12501  20EA  303F               	movlw	-193
 12502  20EB  0023               	movlb	3	; select bank3
 12503  20EC  05E0               	andwf	_protect3^(0+384),f
 12504                           
 12505                           ;BQ76920.c: 143:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12506  20ED  0020               	movlb	0	; select bank0
 12507  20EE  01C5               	clrf	setCellUndervoltageProtection@i
 12508  20EF  01C6               	clrf	setCellUndervoltageProtection@i+1
 12509  20F0                     l7524:	
 12510                           
 12511                           ;BQ76920.c: 144:         if (delay_s >= UV_delay_setting[i]) {
 12512  20F0  0846               	movf	setCellUndervoltageProtection@i+1,w
 12513  20F1  0085               	movwf	5
 12514  20F2  0845               	movf	setCellUndervoltageProtection@i,w
 12515  20F3  0084               	movwf	4
 12516  20F4  3584               	lslf	4,f
 12517  20F5  0D85               	rlf	5,f
 12518  20F6  306E               	movlw	low (_UV_delay_setting| (0+32768))
 12519  20F7  0784               	addwf	4,f
 12520  20F8  30BA               	movlw	high (_UV_delay_setting| (0+32768))
 12521  20F9  3D85               	addwfc	5,f
 12522  20FA  3F00               	moviw [0]fsr0
 12523  20FB  00B6               	movwf	??_setCellUndervoltageProtection
 12524  20FC  3F01               	moviw [1]fsr0
 12525  20FD  00B7               	movwf	??_setCellUndervoltageProtection+1
 12526  20FE  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12527  20FF  3A80               	xorlw	128
 12528  2100  00B8               	movwf	??_setCellUndervoltageProtection+2
 12529  2101  0837               	movf	??_setCellUndervoltageProtection+1,w
 12530  2102  3A80               	xorlw	128
 12531  2103  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12532  2104  1D03               	skipz
 12533  2105  2908               	goto	u9455
 12534  2106  0836               	movf	??_setCellUndervoltageProtection,w
 12535  2107  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12536  2108                     u9455:	
 12537  2108  1C03               	skipc
 12538  2109  2918               	goto	l7528
 12539                           
 12540                           ;BQ76920.c: 145:             protect3.bits.UV_DELAY = i;
 12541  210A  0020               	movlb	0	; select bank0
 12542  210B  0845               	movf	setCellUndervoltageProtection@i,w
 12543  210C  00B6               	movwf	??_setCellUndervoltageProtection
 12544  210D  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12545  210E  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12546  210F  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12547  2110  0023               	movlb	3	; select bank3
 12548  2111  0860               	movf	_protect3^(0+384),w
 12549  2112  0020               	movlb	0	; select bank0
 12550  2113  0636               	xorwf	??_setCellUndervoltageProtection,w
 12551  2114  393F               	andlw	-193
 12552  2115  0636               	xorwf	??_setCellUndervoltageProtection,w
 12553  2116  0023               	movlb	3	; select bank3
 12554  2117  00E0               	movwf	_protect3^(0+384)
 12555  2118                     l7528:	
 12556                           
 12557                           ;BQ76920.c: 147:     }
 12558  2118  3001               	movlw	1
 12559  2119  0020               	movlb	0	; select bank0
 12560  211A  07C5               	addwf	setCellUndervoltageProtection@i,f
 12561  211B  3000               	movlw	0
 12562  211C  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12563  211D  3000               	movlw	0
 12564  211E  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12565  211F  3003               	movlw	3
 12566  2120  1903               	skipnz
 12567  2121  0245               	subwf	setCellUndervoltageProtection@i,w
 12568  2122  1C03               	skipc
 12569  2123  28F0               	goto	l7524
 12570                           
 12571                           ;BQ76920.c: 148:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12572  2124  3018               	movlw	24
 12573  2125  00F5               	movwf	I2C_writeRegister@slaveAddress
 12574  2126  3000               	movlw	0
 12575  2127  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12576  2128  3008               	movlw	8
 12577  2129  00F7               	movwf	I2C_writeRegister@regAddress
 12578  212A  3000               	movlw	0
 12579  212B  00F8               	movwf	I2C_writeRegister@regAddress+1
 12580  212C  0023               	movlb	3	; select bank3
 12581  212D  0860               	movf	_protect3^(0+384),w
 12582  212E  0020               	movlb	0	; select bank0
 12583  212F  00B6               	movwf	??_setCellUndervoltageProtection
 12584  2130  01B7               	clrf	??_setCellUndervoltageProtection+1
 12585  2131  0836               	movf	??_setCellUndervoltageProtection,w
 12586  2132  00F9               	movwf	I2C_writeRegister@data
 12587  2133  0837               	movf	??_setCellUndervoltageProtection+1,w
 12588  2134  00FA               	movwf	I2C_writeRegister@data+1
 12589  2135  31B2  22F3         	fcall	_I2C_writeRegister
 12590  2137  0008               	return
 12591  2138                     __end_of_setCellUndervoltageProtection:	
 12592                           
 12593                           	psect	text42
 12594  1800                     __ptext42:	
 12595 ;; *************** function _setCellOvervoltageProtection *****************
 12596 ;; Defined at:
 12597 ;;		line 154 in file "BQ76920.c"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;  voltage_mV      2   18[BANK0 ] int 
 12600 ;;  delay_s         2   20[BANK0 ] int 
 12601 ;; Auto vars:     Size  Location     Type
 12602 ;;  i               2   37[BANK0 ] int 
 12603 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12604 ;; Return value:  Size  Location     Type
 12605 ;;                  1    wreg      void 
 12606 ;; Registers used:
 12607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12608 ;; Tracked objects:
 12609 ;;		On entry : 0/0
 12610 ;;		On exit  : 0/0
 12611 ;;		Unchanged: 0/0
 12612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12613 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12614 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12615 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12616 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12617 ;;Total ram usage:       21 bytes
 12618 ;; Hardware stack levels used:    1
 12619 ;; Hardware stack levels required when called:    3
 12620 ;; This function calls:
 12621 ;;		_I2C_writeRegister
 12622 ;;		___aldiv
 12623 ;;		___lmul
 12624 ;;		_readRegister
 12625 ;; This function is called by:
 12626 ;;		_init_AFE
 12627 ;; This function uses a non-reentrant model
 12628 ;;
 12629                           
 12630                           
 12631                           ;psect for function _setCellOvervoltageProtection
 12632  1800                     _setCellOvervoltageProtection:	
 12633                           
 12634                           ;BQ76920.c: 156:     maxCellVoltage = voltage_mV;
 12635                           
 12636                           ;incstack = 0
 12637                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12638  1800  0020               	movlb	0	; select bank0
 12639  1801  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12640  1802  0023               	movlb	3	; select bank3
 12641  1803  00C5               	movwf	(_maxCellVoltage+1)^(0+384)
 12642  1804  0020               	movlb	0	; select bank0
 12643  1805  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12644  1806  0023               	movlb	3	; select bank3
 12645  1807  00C4               	movwf	_maxCellVoltage^(0+384)
 12646                           
 12647                           ;BQ76920.c: 157:     protect3.regByte = readRegister(0x18, 0x08);
 12648  1808  3018               	movlw	24
 12649  1809  00F5               	movwf	readRegister@slaveAddress
 12650  180A  3000               	movlw	0
 12651  180B  00F6               	movwf	readRegister@slaveAddress+1
 12652  180C  3008               	movlw	8
 12653  180D  00F7               	movwf	readRegister@regAddress
 12654  180E  3000               	movlw	0
 12655  180F  00F8               	movwf	readRegister@regAddress+1
 12656  1810  3187  27CA  3198   	fcall	_readRegister
 12657  1813  0875               	movf	?_readRegister,w
 12658  1814  0020               	movlb	0	; select bank0
 12659  1815  00B6               	movwf	??_setCellOvervoltageProtection
 12660  1816  0836               	movf	??_setCellOvervoltageProtection,w
 12661  1817  0023               	movlb	3	; select bank3
 12662  1818  00E0               	movwf	_protect3^(0+384)
 12663                           
 12664                           ;BQ76920.c: 158:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12665  1819  0022               	movlb	2	; select bank2
 12666  181A  086E               	movf	_adcGain^(0+256),w
 12667  181B  0020               	movlb	0	; select bank0
 12668  181C  00A4               	movwf	___aldiv@divisor
 12669  181D  0022               	movlb	2	; select bank2
 12670  181E  086F               	movf	(_adcGain+1)^(0+256),w
 12671  181F  0020               	movlb	0	; select bank0
 12672  1820  00A5               	movwf	___aldiv@divisor+1
 12673  1821  0D89               	rlf	9,f
 12674  1822  3B89               	subwfb	9,f
 12675  1823  0989               	comf	9,f
 12676  1824  00A6               	movwf	___aldiv@divisor+2
 12677  1825  00A7               	movwf	___aldiv@divisor+3
 12678  1826  0022               	movlb	2	; select bank2
 12679  1827  086C               	movf	_adcOffset^(0+256),w
 12680  1828  0020               	movlb	0	; select bank0
 12681  1829  00B6               	movwf	??_setCellOvervoltageProtection
 12682  182A  0022               	movlb	2	; select bank2
 12683  182B  086D               	movf	(_adcOffset+1)^(0+256),w
 12684  182C  0020               	movlb	0	; select bank0
 12685  182D  00B7               	movwf	??_setCellOvervoltageProtection+1
 12686  182E  3000               	movlw	0
 12687  182F  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12688  1830  30FF               	movlw	255
 12689  1831  00B8               	movwf	??_setCellOvervoltageProtection+2
 12690  1832  00B9               	movwf	??_setCellOvervoltageProtection+3
 12691  1833  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12692  1834  00BA               	movwf	??_setCellOvervoltageProtection+4
 12693  1835  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12694  1836  00BB               	movwf	??_setCellOvervoltageProtection+5
 12695  1837  3000               	movlw	0
 12696  1838  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12697  1839  30FF               	movlw	255
 12698  183A  00BC               	movwf	??_setCellOvervoltageProtection+6
 12699  183B  00BD               	movwf	??_setCellOvervoltageProtection+7
 12700  183C  0836               	movf	??_setCellOvervoltageProtection,w
 12701  183D  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12702  183E  0837               	movf	??_setCellOvervoltageProtection+1,w
 12703  183F  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12704  1840  0838               	movf	??_setCellOvervoltageProtection+2,w
 12705  1841  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12706  1842  0839               	movf	??_setCellOvervoltageProtection+3,w
 12707  1843  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12708  1844  083D               	movf	??_setCellOvervoltageProtection+7,w
 12709  1845  00F4               	movwf	___lmul@multiplier+3
 12710  1846  083C               	movf	??_setCellOvervoltageProtection+6,w
 12711  1847  00F3               	movwf	___lmul@multiplier+2
 12712  1848  083B               	movf	??_setCellOvervoltageProtection+5,w
 12713  1849  00F2               	movwf	___lmul@multiplier+1
 12714  184A  083A               	movf	??_setCellOvervoltageProtection+4,w
 12715  184B  00F1               	movwf	___lmul@multiplier
 12716  184C  3000               	movlw	0
 12717  184D  00F8               	movwf	___lmul@multiplicand+3
 12718  184E  3000               	movlw	0
 12719  184F  00F7               	movwf	___lmul@multiplicand+2
 12720  1850  3003               	movlw	3
 12721  1851  00F6               	movwf	___lmul@multiplicand+1
 12722  1852  30E8               	movlw	232
 12723  1853  00F5               	movwf	___lmul@multiplicand
 12724  1854  31B4  2421  3198   	fcall	___lmul
 12725  1857  0874               	movf	?___lmul+3,w
 12726  1858  0020               	movlb	0	; select bank0
 12727  1859  00AB               	movwf	___aldiv@dividend+3
 12728  185A  0873               	movf	?___lmul+2,w
 12729  185B  00AA               	movwf	___aldiv@dividend+2
 12730  185C  0872               	movf	?___lmul+1,w
 12731  185D  00A9               	movwf	___aldiv@dividend+1
 12732  185E  0871               	movf	?___lmul,w
 12733  185F  00A8               	movwf	___aldiv@dividend
 12734  1860  31A9  21BF  3198   	fcall	___aldiv
 12735  1863  0020               	movlb	0	; select bank0
 12736  1864  0824               	movf	?___aldiv,w
 12737  1865  00BE               	movwf	??_setCellOvervoltageProtection+8
 12738  1866  0825               	movf	?___aldiv+1,w
 12739  1867  00BF               	movwf	??_setCellOvervoltageProtection+9
 12740  1868  0826               	movf	?___aldiv+2,w
 12741  1869  00C0               	movwf	??_setCellOvervoltageProtection+10
 12742  186A  0827               	movf	?___aldiv+3,w
 12743  186B  00C1               	movwf	??_setCellOvervoltageProtection+11
 12744  186C  3004               	movlw	4
 12745  186D  00C2               	movwf	??_setCellOvervoltageProtection+12
 12746  186E                     u9475:	
 12747  186E  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12748  186F  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12749  1870  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12750  1871  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12751  1872  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12752  1873  286E               	goto	u9475
 12753  1874  083E               	movf	??_setCellOvervoltageProtection+8,w
 12754  1875  00C3               	movwf	??_setCellOvervoltageProtection+13
 12755  1876  0843               	movf	??_setCellOvervoltageProtection+13,w
 12756  1877  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12757                           
 12758                           ;BQ76920.c: 159:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12759  1878  3018               	movlw	24
 12760  1879  00F5               	movwf	I2C_writeRegister@slaveAddress
 12761  187A  3000               	movlw	0
 12762  187B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12763  187C  3009               	movlw	9
 12764  187D  00F7               	movwf	I2C_writeRegister@regAddress
 12765  187E  3000               	movlw	0
 12766  187F  00F8               	movwf	I2C_writeRegister@regAddress+1
 12767  1880  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12768  1881  00B6               	movwf	??_setCellOvervoltageProtection
 12769  1882  01B7               	clrf	??_setCellOvervoltageProtection+1
 12770  1883  0836               	movf	??_setCellOvervoltageProtection,w
 12771  1884  00F9               	movwf	I2C_writeRegister@data
 12772  1885  0837               	movf	??_setCellOvervoltageProtection+1,w
 12773  1886  00FA               	movwf	I2C_writeRegister@data+1
 12774  1887  31B2  22F3  3198   	fcall	_I2C_writeRegister
 12775                           
 12776                           ;BQ76920.c: 161:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12777  188A  0020               	movlb	0	; select bank0
 12778  188B  01C5               	clrf	setCellOvervoltageProtection@i
 12779  188C  01C6               	clrf	setCellOvervoltageProtection@i+1
 12780  188D                     l7550:	
 12781                           
 12782                           ;BQ76920.c: 162:         if (delay_s >= OV_delay_setting[i]) {
 12783  188D  0846               	movf	setCellOvervoltageProtection@i+1,w
 12784  188E  0085               	movwf	5
 12785  188F  0845               	movf	setCellOvervoltageProtection@i,w
 12786  1890  0084               	movwf	4
 12787  1891  3584               	lslf	4,f
 12788  1892  0D85               	rlf	5,f
 12789  1893  3066               	movlw	low (_OV_delay_setting| (0+32768))
 12790  1894  0784               	addwf	4,f
 12791  1895  30BA               	movlw	high (_OV_delay_setting| (0+32768))
 12792  1896  3D85               	addwfc	5,f
 12793  1897  3F00               	moviw [0]fsr0
 12794  1898  00B6               	movwf	??_setCellOvervoltageProtection
 12795  1899  3F01               	moviw [1]fsr0
 12796  189A  00B7               	movwf	??_setCellOvervoltageProtection+1
 12797  189B  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12798  189C  3A80               	xorlw	128
 12799  189D  00B8               	movwf	??_setCellOvervoltageProtection+2
 12800  189E  0837               	movf	??_setCellOvervoltageProtection+1,w
 12801  189F  3A80               	xorlw	128
 12802  18A0  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12803  18A1  1D03               	skipz
 12804  18A2  28A5               	goto	u9485
 12805  18A3  0836               	movf	??_setCellOvervoltageProtection,w
 12806  18A4  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12807  18A5                     u9485:	
 12808  18A5  1C03               	skipc
 12809  18A6  28B5               	goto	l7554
 12810                           
 12811                           ;BQ76920.c: 163:             protect3.bits.UV_DELAY = i;
 12812  18A7  0020               	movlb	0	; select bank0
 12813  18A8  0845               	movf	setCellOvervoltageProtection@i,w
 12814  18A9  00B6               	movwf	??_setCellOvervoltageProtection
 12815  18AA  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12816  18AB  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12817  18AC  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12818  18AD  0023               	movlb	3	; select bank3
 12819  18AE  0860               	movf	_protect3^(0+384),w
 12820  18AF  0020               	movlb	0	; select bank0
 12821  18B0  0636               	xorwf	??_setCellOvervoltageProtection,w
 12822  18B1  393F               	andlw	-193
 12823  18B2  0636               	xorwf	??_setCellOvervoltageProtection,w
 12824  18B3  0023               	movlb	3	; select bank3
 12825  18B4  00E0               	movwf	_protect3^(0+384)
 12826  18B5                     l7554:	
 12827                           
 12828                           ;BQ76920.c: 165:     }
 12829  18B5  3001               	movlw	1
 12830  18B6  0020               	movlb	0	; select bank0
 12831  18B7  07C5               	addwf	setCellOvervoltageProtection@i,f
 12832  18B8  3000               	movlw	0
 12833  18B9  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12834  18BA  3000               	movlw	0
 12835  18BB  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12836  18BC  3003               	movlw	3
 12837  18BD  1903               	skipnz
 12838  18BE  0245               	subwf	setCellOvervoltageProtection@i,w
 12839  18BF  1C03               	skipc
 12840  18C0  288D               	goto	l7550
 12841                           
 12842                           ;BQ76920.c: 166:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12843  18C1  3018               	movlw	24
 12844  18C2  00F5               	movwf	I2C_writeRegister@slaveAddress
 12845  18C3  3000               	movlw	0
 12846  18C4  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12847  18C5  3008               	movlw	8
 12848  18C6  00F7               	movwf	I2C_writeRegister@regAddress
 12849  18C7  3000               	movlw	0
 12850  18C8  00F8               	movwf	I2C_writeRegister@regAddress+1
 12851  18C9  0023               	movlb	3	; select bank3
 12852  18CA  0860               	movf	_protect3^(0+384),w
 12853  18CB  0020               	movlb	0	; select bank0
 12854  18CC  00B6               	movwf	??_setCellOvervoltageProtection
 12855  18CD  01B7               	clrf	??_setCellOvervoltageProtection+1
 12856  18CE  0836               	movf	??_setCellOvervoltageProtection,w
 12857  18CF  00F9               	movwf	I2C_writeRegister@data
 12858  18D0  0837               	movf	??_setCellOvervoltageProtection+1,w
 12859  18D1  00FA               	movwf	I2C_writeRegister@data+1
 12860  18D2  31B2  22F3         	fcall	_I2C_writeRegister
 12861  18D4  0008               	return
 12862  18D5                     __end_of_setCellOvervoltageProtection:	
 12863                           
 12864                           	psect	text43
 12865  2C21                     __ptext43:	
 12866 ;; *************** function _beginAFEcommunication *****************
 12867 ;; Defined at:
 12868 ;;		line 28 in file "BQ76920.c"
 12869 ;; Parameters:    Size  Location     Type
 12870 ;;		None
 12871 ;; Auto vars:     Size  Location     Type
 12872 ;;  i               2   13[BANK0 ] int 
 12873 ;;  commSuccess     2   11[BANK0 ] int 
 12874 ;; Return value:  Size  Location     Type
 12875 ;;                  2    0[BANK0 ] int 
 12876 ;; Registers used:
 12877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12878 ;; Tracked objects:
 12879 ;;		On entry : 0/0
 12880 ;;		On exit  : 0/0
 12881 ;;		Unchanged: 0/0
 12882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12884 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12885 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12886 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12887 ;;Total ram usage:       15 bytes
 12888 ;; Hardware stack levels used:    1
 12889 ;; Hardware stack levels required when called:    3
 12890 ;; This function calls:
 12891 ;;		_I2C_writeRegister
 12892 ;;		_readRegister
 12893 ;; This function is called by:
 12894 ;;		_statemachine
 12895 ;; This function uses a non-reentrant model
 12896 ;;
 12897                           
 12898                           
 12899                           ;psect for function _beginAFEcommunication
 12900  2C21                     _beginAFEcommunication:	
 12901                           
 12902                           ;BQ76920.c: 30:     int commSuccess = 0;
 12903                           
 12904                           ;incstack = 0
 12905                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12906  2C21  0020               	movlb	0	; select bank0
 12907  2C22  01AB               	clrf	beginAFEcommunication@commSuccess
 12908  2C23  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12909                           
 12910                           ;BQ76920.c: 33:     for (int i = 0; i < 4; i++) {
 12911  2C24  01AD               	clrf	beginAFEcommunication@i
 12912  2C25  01AE               	clrf	beginAFEcommunication@i+1
 12913  2C26                     l7708:	
 12914                           
 12915                           ;BQ76920.c: 34:         cellVoltages[i] = 0;
 12916  2C26  0020               	movlb	0	; select bank0
 12917  2C27  352D               	lslf	beginAFEcommunication@i,w
 12918  2C28  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12919  2C29  0086               	movwf	6
 12920  2C2A  3001               	movlw	1	; select bank3/4
 12921  2C2B  0087               	movwf	7
 12922  2C2C  3000               	movlw	0
 12923  2C2D  3FC0               	movwi [0]fsr1
 12924  2C2E  3FC1               	movwi [1]fsr1
 12925                           
 12926                           ;BQ76920.c: 35:     }
 12927  2C2F  3001               	movlw	1
 12928  2C30  07AD               	addwf	beginAFEcommunication@i,f
 12929  2C31  3000               	movlw	0
 12930  2C32  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12931  2C33  082E               	movf	beginAFEcommunication@i+1,w
 12932  2C34  3A80               	xorlw	128
 12933  2C35  00A2               	movwf	??_beginAFEcommunication
 12934  2C36  3080               	movlw	128
 12935  2C37  0222               	subwf	??_beginAFEcommunication,w
 12936  2C38  1D03               	skipz
 12937  2C39  2C3C               	goto	u9625
 12938  2C3A  3004               	movlw	4
 12939  2C3B  022D               	subwf	beginAFEcommunication@i,w
 12940  2C3C                     u9625:	
 12941  2C3C  1C03               	skipc
 12942  2C3D  2C26               	goto	l7708
 12943                           
 12944                           ;BQ76920.c: 38:     I2C_writeRegister(0x18, 0x0B, 0x19);
 12945  2C3E  3018               	movlw	24
 12946  2C3F  00F5               	movwf	I2C_writeRegister@slaveAddress
 12947  2C40  3000               	movlw	0
 12948  2C41  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12949  2C42  300B               	movlw	11
 12950  2C43  00F7               	movwf	I2C_writeRegister@regAddress
 12951  2C44  3000               	movlw	0
 12952  2C45  00F8               	movwf	I2C_writeRegister@regAddress+1
 12953  2C46  3019               	movlw	25
 12954  2C47  00F9               	movwf	I2C_writeRegister@data
 12955  2C48  3000               	movlw	0
 12956  2C49  00FA               	movwf	I2C_writeRegister@data+1
 12957  2C4A  31B2  22F3  31AC   	fcall	_I2C_writeRegister
 12958                           
 12959                           ;BQ76920.c: 40:     if (readRegister(0x18, 0x0B) == 0x19) {
 12960  2C4D  3018               	movlw	24
 12961  2C4E  00F5               	movwf	readRegister@slaveAddress
 12962  2C4F  3000               	movlw	0
 12963  2C50  00F6               	movwf	readRegister@slaveAddress+1
 12964  2C51  300B               	movlw	11
 12965  2C52  00F7               	movwf	readRegister@regAddress
 12966  2C53  3000               	movlw	0
 12967  2C54  00F8               	movwf	readRegister@regAddress+1
 12968  2C55  3187  27CA  31AC   	fcall	_readRegister
 12969  2C58  3019               	movlw	25
 12970  2C59  0675               	xorwf	?_readRegister,w
 12971  2C5A  0476               	iorwf	?_readRegister+1,w
 12972  2C5B  1D03               	btfss	3,2
 12973  2C5C  2CCF               	goto	l507
 12974                           
 12975                           ;BQ76920.c: 41:         commSuccess = 1;
 12976  2C5D  3001               	movlw	1
 12977  2C5E  0020               	movlb	0	; select bank0
 12978  2C5F  00AB               	movwf	beginAFEcommunication@commSuccess
 12979  2C60  3000               	movlw	0
 12980  2C61  00AC               	movwf	beginAFEcommunication@commSuccess+1
 12981                           
 12982                           ;BQ76920.c: 45:         I2C_writeRegister(0x18, 0x04, 0x18);
 12983  2C62  3018               	movlw	24
 12984  2C63  00F5               	movwf	I2C_writeRegister@slaveAddress
 12985  2C64  3000               	movlw	0
 12986  2C65  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12987  2C66  3004               	movlw	4
 12988  2C67  00F7               	movwf	I2C_writeRegister@regAddress
 12989  2C68  3000               	movlw	0
 12990  2C69  00F8               	movwf	I2C_writeRegister@regAddress+1
 12991  2C6A  3018               	movlw	24
 12992  2C6B  00F9               	movwf	I2C_writeRegister@data
 12993  2C6C  3000               	movlw	0
 12994  2C6D  00FA               	movwf	I2C_writeRegister@data+1
 12995  2C6E  31B2  22F3  31AC   	fcall	_I2C_writeRegister
 12996                           
 12997                           ;BQ76920.c: 46:         I2C_writeRegister(0x18, 0x05, 0x40);
 12998  2C71  3018               	movlw	24
 12999  2C72  00F5               	movwf	I2C_writeRegister@slaveAddress
 13000  2C73  3000               	movlw	0
 13001  2C74  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 13002  2C75  3005               	movlw	5
 13003  2C76  00F7               	movwf	I2C_writeRegister@regAddress
 13004  2C77  3000               	movlw	0
 13005  2C78  00F8               	movwf	I2C_writeRegister@regAddress+1
 13006  2C79  3040               	movlw	64
 13007  2C7A  00F9               	movwf	I2C_writeRegister@data
 13008  2C7B  3000               	movlw	0
 13009  2C7C  00FA               	movwf	I2C_writeRegister@data+1
 13010  2C7D  31B2  22F3  31AC   	fcall	_I2C_writeRegister
 13011                           
 13012                           ;BQ76920.c: 49:         adcOffset = (signed int) readRegister(0x18, 0x51);
 13013  2C80  3018               	movlw	24
 13014  2C81  00F5               	movwf	readRegister@slaveAddress
 13015  2C82  3000               	movlw	0
 13016  2C83  00F6               	movwf	readRegister@slaveAddress+1
 13017  2C84  3051               	movlw	81
 13018  2C85  00F7               	movwf	readRegister@regAddress
 13019  2C86  3000               	movlw	0
 13020  2C87  00F8               	movwf	readRegister@regAddress+1
 13021  2C88  3187  27CA  31AC   	fcall	_readRegister
 13022  2C8B  0876               	movf	?_readRegister+1,w
 13023  2C8C  0022               	movlb	2	; select bank2
 13024  2C8D  00ED               	movwf	(_adcOffset+1)^(0+256)
 13025  2C8E  0875               	movf	?_readRegister,w
 13026  2C8F  00EC               	movwf	_adcOffset^(0+256)
 13027                           
 13028                           ;BQ76920.c: 50:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 13029  2C90  3018               	movlw	24
 13030  2C91  00F5               	movwf	readRegister@slaveAddress
 13031  2C92  3000               	movlw	0
 13032  2C93  00F6               	movwf	readRegister@slaveAddress+1
 13033  2C94  3059               	movlw	89
 13034  2C95  00F7               	movwf	readRegister@regAddress
 13035  2C96  3000               	movlw	0
 13036  2C97  00F8               	movwf	readRegister@regAddress+1
 13037  2C98  3187  27CA  31AC   	fcall	_readRegister
 13038  2C9B  0875               	movf	?_readRegister,w
 13039  2C9C  0020               	movlb	0	; select bank0
 13040  2C9D  00A2               	movwf	??_beginAFEcommunication
 13041  2C9E  0876               	movf	?_readRegister+1,w
 13042  2C9F  00A3               	movwf	??_beginAFEcommunication+1
 13043  2CA0  3005               	movlw	5
 13044  2CA1  00A4               	movwf	??_beginAFEcommunication+2
 13045  2CA2                     u9645:	
 13046  2CA2  0D23               	rlf	??_beginAFEcommunication+1,w
 13047  2CA3  0CA3               	rrf	??_beginAFEcommunication+1,f
 13048  2CA4  0CA2               	rrf	??_beginAFEcommunication,f
 13049  2CA5  0BA4               	decfsz	??_beginAFEcommunication+2,f
 13050  2CA6  2CA2               	goto	u9645
 13051  2CA7  3007               	movlw	7
 13052  2CA8  0522               	andwf	??_beginAFEcommunication,w
 13053  2CA9  00A5               	movwf	??_beginAFEcommunication+3
 13054  2CAA  3000               	movlw	0
 13055  2CAB  0523               	andwf	??_beginAFEcommunication+1,w
 13056  2CAC  00A6               	movwf	??_beginAFEcommunication+4
 13057  2CAD  3018               	movlw	24
 13058  2CAE  00F5               	movwf	readRegister@slaveAddress
 13059  2CAF  3000               	movlw	0
 13060  2CB0  00F6               	movwf	readRegister@slaveAddress+1
 13061  2CB1  3050               	movlw	80
 13062  2CB2  00F7               	movwf	readRegister@regAddress
 13063  2CB3  3000               	movlw	0
 13064  2CB4  00F8               	movwf	readRegister@regAddress+1
 13065  2CB5  3187  27CA         	fcall	_readRegister
 13066  2CB7  300C               	movlw	12
 13067  2CB8  0575               	andwf	?_readRegister,w
 13068  2CB9  0020               	movlb	0	; select bank0
 13069  2CBA  00A7               	movwf	??_beginAFEcommunication+5
 13070  2CBB  3000               	movlw	0
 13071  2CBC  0576               	andwf	?_readRegister+1,w
 13072  2CBD  00A8               	movwf	??_beginAFEcommunication+6
 13073  2CBE  35A7               	lslf	??_beginAFEcommunication+5,f
 13074  2CBF  0DA8               	rlf	??_beginAFEcommunication+6,f
 13075  2CC0  0825               	movf	??_beginAFEcommunication+3,w
 13076  2CC1  0427               	iorwf	??_beginAFEcommunication+5,w
 13077  2CC2  00A9               	movwf	??_beginAFEcommunication+7
 13078  2CC3  0826               	movf	??_beginAFEcommunication+4,w
 13079  2CC4  0428               	iorwf	??_beginAFEcommunication+6,w
 13080  2CC5  00AA               	movwf	??_beginAFEcommunication+8
 13081  2CC6  0829               	movf	??_beginAFEcommunication+7,w
 13082  2CC7  3E6D               	addlw	109
 13083  2CC8  0022               	movlb	2	; select bank2
 13084  2CC9  00EE               	movwf	_adcGain^(0+256)
 13085  2CCA  3001               	movlw	1
 13086  2CCB  0020               	movlb	0	; select bank0
 13087  2CCC  3D2A               	addwfc	??_beginAFEcommunication+8,w
 13088  2CCD  0022               	movlb	2	; select bank2
 13089  2CCE  00EF               	movwf	(_adcGain+1)^(0+256)
 13090  2CCF                     l507:	
 13091                           ;BQ76920.c: 53:     }
 13092                           
 13093                           
 13094                           ;BQ76920.c: 54:     return commSuccess;
 13095  2CCF  0020               	movlb	0	; select bank0
 13096  2CD0  082C               	movf	beginAFEcommunication@commSuccess+1,w
 13097  2CD1  00A1               	movwf	?_beginAFEcommunication+1
 13098  2CD2  082B               	movf	beginAFEcommunication@commSuccess,w
 13099  2CD3  00A0               	movwf	?_beginAFEcommunication
 13100  2CD4  0008               	return
 13101  2CD5                     __end_of_beginAFEcommunication:	
 13102                           
 13103                           	psect	text44
 13104  3351                     __ptext44:	
 13105 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 13106 ;; Defined at:
 13107 ;;		line 43 in file "RGB.c"
 13108 ;; Parameters:    Size  Location     Type
 13109 ;;		None
 13110 ;; Auto vars:     Size  Location     Type
 13111 ;;		None
 13112 ;; Return value:  Size  Location     Type
 13113 ;;                  1    wreg      void 
 13114 ;; Registers used:
 13115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13116 ;; Tracked objects:
 13117 ;;		On entry : 0/0
 13118 ;;		On exit  : 0/0
 13119 ;;		Unchanged: 0/0
 13120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13123 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13124 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13125 ;;Total ram usage:        1 bytes
 13126 ;; Hardware stack levels used:    1
 13127 ;; Hardware stack levels required when called:    2
 13128 ;; This function calls:
 13129 ;;		_RGB_color
 13130 ;; This function is called by:
 13131 ;;		_statemachine
 13132 ;; This function uses a non-reentrant model
 13133 ;;
 13134                           
 13135                           
 13136                           ;psect for function _RGB_AWAIT_AFE_CONN
 13137  3351                     _RGB_AWAIT_AFE_CONN:	
 13138                           
 13139                           ;RGB.c: 45:     if (toggleColor) {
 13140                           
 13141                           ;incstack = 0
 13142                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13143  3351  087C               	movf	_toggleColor,w
 13144  3352  1903               	btfsc	3,2
 13145  3353  2B63               	goto	l6264
 13146                           
 13147                           ;RGB.c: 46:         toggleColor = !toggleColor;
 13148  3354  087C               	movf	_toggleColor,w
 13149  3355  1D03               	btfss	3,2
 13150  3356  2B59               	goto	u7770
 13151  3357  3001               	movlw	1
 13152  3358  2B5A               	goto	u7780
 13153  3359                     u7770:	
 13154  3359  3000               	movlw	0
 13155  335A                     u7780:	
 13156  335A  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13157  335B  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13158  335C  00FC               	movwf	_toggleColor
 13159                           
 13160                           ;RGB.c: 47:         RGB_color(0);
 13161  335D  3000               	movlw	0
 13162  335E  00F1               	movwf	RGB_color@color
 13163  335F  00F2               	movwf	RGB_color@color+1
 13164  3360  31B3  2330         	fcall	_RGB_color
 13165                           
 13166                           ;RGB.c: 48:     } else {
 13167  3362  0008               	return
 13168  3363                     l6264:	
 13169                           
 13170                           ;RGB.c: 49:         toggleColor = !toggleColor;
 13171  3363  087C               	movf	_toggleColor,w
 13172  3364  1D03               	btfss	3,2
 13173  3365  2B68               	goto	u7790
 13174  3366  3001               	movlw	1
 13175  3367  2B69               	goto	u7800
 13176  3368                     u7790:	
 13177  3368  3000               	movlw	0
 13178  3369                     u7800:	
 13179  3369  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 13180  336A  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 13181  336B  00FC               	movwf	_toggleColor
 13182                           
 13183                           ;RGB.c: 50:         RGB_color(1);
 13184  336C  3001               	movlw	1
 13185  336D  00F1               	movwf	RGB_color@color
 13186  336E  3000               	movlw	0
 13187  336F  00F2               	movwf	RGB_color@color+1
 13188  3370  31B3  2330         	fcall	_RGB_color
 13189  3372  0008               	return
 13190  3373                     __end_of_RGB_AWAIT_AFE_CONN:	
 13191                           
 13192                           	psect	text45
 13193  3330                     __ptext45:	
 13194 ;; *************** function _RGB_color *****************
 13195 ;; Defined at:
 13196 ;;		line 17 in file "RGB.c"
 13197 ;; Parameters:    Size  Location     Type
 13198 ;;  color           2    1[COMMON] int 
 13199 ;; Auto vars:     Size  Location     Type
 13200 ;;		None
 13201 ;; Return value:  Size  Location     Type
 13202 ;;                  1    wreg      void 
 13203 ;; Registers used:
 13204 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13205 ;; Tracked objects:
 13206 ;;		On entry : 0/0
 13207 ;;		On exit  : 0/0
 13208 ;;		Unchanged: 0/0
 13209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13210 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13214 ;;Total ram usage:        2 bytes
 13215 ;; Hardware stack levels used:    1
 13216 ;; Hardware stack levels required when called:    1
 13217 ;; This function calls:
 13218 ;;		Nothing
 13219 ;; This function is called by:
 13220 ;;		_statemachine
 13221 ;;		_RGB_AWAIT_AFE_CONN
 13222 ;;		_watchdog_timeout_shutdown
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           
 13227                           ;psect for function _RGB_color
 13228  3330                     _RGB_color:	
 13229                           
 13230                           ;RGB.c: 19:     switch (color) {
 13231                           
 13232                           ;incstack = 0
 13233                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 13234  3330  2B40               	goto	l5926
 13235  3331                     l368:	
 13236                           ;RGB.c: 20:         case 0:
 13237                           
 13238                           
 13239                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 13240  3331  0022               	movlb	2	; select bank2
 13241  3332  120C               	bcf	12,4	;volatile
 13242                           
 13243                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 13244  3333  168C               	bsf	12,5	;volatile
 13245                           
 13246                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 13247  3334  1410               	bsf	16,0	;volatile
 13248                           
 13249                           ;RGB.c: 24:             break;
 13250  3335  0008               	return
 13251  3336                     l370:	
 13252                           ;RGB.c: 25:         case 1:
 13253                           
 13254                           
 13255                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 13256  3336  0022               	movlb	2	; select bank2
 13257  3337  160C               	bsf	12,4	;volatile
 13258                           
 13259                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 13260  3338  128C               	bcf	12,5	;volatile
 13261                           
 13262                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 13263  3339  1410               	bsf	16,0	;volatile
 13264                           
 13265                           ;RGB.c: 29:             break;
 13266  333A  0008               	return
 13267  333B                     l371:	
 13268                           ;RGB.c: 30:         case 2:
 13269                           
 13270                           
 13271                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 13272  333B  0022               	movlb	2	; select bank2
 13273  333C  160C               	bsf	12,4	;volatile
 13274                           
 13275                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 13276  333D  168C               	bsf	12,5	;volatile
 13277                           
 13278                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 13279  333E  1010               	bcf	16,0	;volatile
 13280                           
 13281                           ;RGB.c: 34:             break;
 13282  333F  0008               	return
 13283  3340                     l5926:	
 13284                           
 13285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13286                           ; Switch size 1, requested type "simple"
 13287                           ; Number of cases is 1, Range of values is 0 to 0
 13288                           ; switch strategies available:
 13289                           ; Name         Instructions Cycles
 13290                           ; simple_byte            4     3 (average)
 13291                           ; direct_byte            8     6 (fixed)
 13292                           ; jumptable            260     6 (fixed)
 13293                           ;	Chosen strategy is simple_byte
 13294  3340  0872               	movf	RGB_color@color+1,w
 13295  3341  3A00               	xorlw	0	; case 0
 13296  3342  1903               	skipnz
 13297  3343  2B45               	goto	l8026
 13298  3344  2B50               	goto	l372
 13299  3345                     l8026:	
 13300                           
 13301                           ; Switch size 1, requested type "simple"
 13302                           ; Number of cases is 3, Range of values is 0 to 2
 13303                           ; switch strategies available:
 13304                           ; Name         Instructions Cycles
 13305                           ; simple_byte           10     6 (average)
 13306                           ; direct_byte           12     6 (fixed)
 13307                           ; jumptable            260     6 (fixed)
 13308                           ;	Chosen strategy is simple_byte
 13309  3345  0871               	movf	RGB_color@color,w
 13310  3346  3A00               	xorlw	0	; case 0
 13311  3347  1903               	skipnz
 13312  3348  2B31               	goto	l368
 13313  3349  3A01               	xorlw	1	; case 1
 13314  334A  1903               	skipnz
 13315  334B  2B36               	goto	l370
 13316  334C  3A03               	xorlw	3	; case 2
 13317  334D  1903               	skipnz
 13318  334E  2B3B               	goto	l371
 13319  334F  2B50               	goto	l372
 13320  3350                     l372:	
 13321  3350  0008               	return
 13322  3351                     __end_of_RGB_color:	
 13323                           
 13324                           	psect	text46
 13325  3528                     __ptext46:	
 13326 ;; *************** function _AFE_UPDATE *****************
 13327 ;; Defined at:
 13328 ;;		line 172 in file "BQ76920.c"
 13329 ;; Parameters:    Size  Location     Type
 13330 ;;		None
 13331 ;; Auto vars:     Size  Location     Type
 13332 ;;		None
 13333 ;; Return value:  Size  Location     Type
 13334 ;;                  1    wreg      void 
 13335 ;; Registers used:
 13336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13337 ;; Tracked objects:
 13338 ;;		On entry : 0/0
 13339 ;;		On exit  : 0/0
 13340 ;;		Unchanged: 0/0
 13341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13346 ;;Total ram usage:        0 bytes
 13347 ;; Hardware stack levels used:    1
 13348 ;; Hardware stack levels required when called:    5
 13349 ;; This function calls:
 13350 ;;		_AFE_FET_Status
 13351 ;;		_AFE_Status
 13352 ;;		_calibrate_BATTSOC
 13353 ;;		_coulomb_counter
 13354 ;;		_enableCharging
 13355 ;;		_enableDischarging
 13356 ;;		_updateCurrent
 13357 ;;		_updateTemperatures
 13358 ;;		_updateVoltages
 13359 ;; This function is called by:
 13360 ;;		_statemachine
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364                           
 13365                           ;psect for function _AFE_UPDATE
 13366  3528                     _AFE_UPDATE:	
 13367                           
 13368                           ;BQ76920.c: 174:     updateVoltages();
 13369                           
 13370                           ;incstack = 0
 13371                           ; Regs used in _AFE_UPDATE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13372  3528  3192  224F  31B5   	fcall	_updateVoltages
 13373                           
 13374                           ;BQ76920.c: 176:     if(batCurrent<10){
 13375  352B  0023               	movlb	3	; select bank3
 13376  352C  1BB9               	btfsc	(_batCurrent+3)^(0+384),7
 13377  352D  2D3B               	goto	l7742
 13378  352E  0839               	movf	(_batCurrent+3)^(0+384),w
 13379  352F  1D03               	btfss	3,2
 13380  3530  2D3F               	goto	l7744
 13381  3531  0838               	movf	(_batCurrent+2)^(0+384),w
 13382  3532  1D03               	btfss	3,2
 13383  3533  2D3F               	goto	l7744
 13384  3534  0837               	movf	(_batCurrent+1)^(0+384),w
 13385  3535  1D03               	btfss	3,2
 13386  3536  2D3F               	goto	l7744
 13387  3537  300A               	movlw	10
 13388  3538  0236               	subwf	_batCurrent^(0+384),w
 13389  3539  1803               	btfsc	3,0
 13390  353A  2D3F               	goto	l7744
 13391  353B                     l7742:	
 13392                           
 13393                           ;BQ76920.c: 178:         calibrate_BATTSOC();
 13394  353B  31AE  265E  31B5   	fcall	_calibrate_BATTSOC
 13395                           
 13396                           ;BQ76920.c: 179:     }else{
 13397  353E  2D42               	goto	l7746
 13398  353F                     l7744:	
 13399                           
 13400                           ;BQ76920.c: 180:          coulomb_counter();
 13401  353F  31AF  2724  31B5   	fcall	_coulomb_counter
 13402  3542                     l7746:	
 13403                           
 13404                           ;BQ76920.c: 183:     updateCurrent();
 13405  3542  31AC  24D5  31B5   	fcall	_updateCurrent
 13406                           
 13407                           ;BQ76920.c: 184:     updateTemperatures();
 13408  3545  3195  2527  31B5   	fcall	_updateTemperatures
 13409                           
 13410                           ;BQ76920.c: 189:     AFE_FET_Status();
 13411  3548  31B3  2373  31B5   	fcall	_AFE_FET_Status
 13412                           
 13413                           ;BQ76920.c: 191:     if(AFE_Status()==0){
 13414  354B  31B6  2659  31B5   	fcall	_AFE_Status
 13415  354E  0020               	movlb	0	; select bank0
 13416  354F  0820               	movf	?_AFE_Status,w
 13417  3550  0421               	iorwf	?_AFE_Status+1,w
 13418  3551  1D03               	btfss	3,2
 13419  3552  0008               	return
 13420                           
 13421                           ;BQ76920.c: 192:     enableDischarging(1);
 13422  3553  3001               	movlw	1
 13423  3554  00A0               	movwf	enableDischarging@enable
 13424  3555  3000               	movlw	0
 13425  3556  00A1               	movwf	enableDischarging@enable+1
 13426  3557  31B4  24F1  31B5   	fcall	_enableDischarging
 13427                           
 13428                           ;BQ76920.c: 193:     enableCharging(1);
 13429  355A  3001               	movlw	1
 13430  355B  0020               	movlb	0	; select bank0
 13431  355C  00A0               	movwf	enableCharging@enable
 13432  355D  3000               	movlw	0
 13433  355E  00A1               	movwf	enableCharging@enable+1
 13434  355F  31B4  24BA         	fcall	_enableCharging
 13435  3561  0008               	return
 13436  3562                     __end_of_AFE_UPDATE:	
 13437                           
 13438                           	psect	text47
 13439  124F                     __ptext47:	
 13440 ;; *************** function _updateVoltages *****************
 13441 ;; Defined at:
 13442 ;;		line 223 in file "BQ76920.c"
 13443 ;; Parameters:    Size  Location     Type
 13444 ;;		None
 13445 ;; Auto vars:     Size  Location     Type
 13446 ;;  adcVal          4   24[BANK1 ] long 
 13447 ;; Return value:  Size  Location     Type
 13448 ;;                  1    wreg      void 
 13449 ;; Registers used:
 13450 ;;		wreg, status,2, status,0, pclath, cstack
 13451 ;; Tracked objects:
 13452 ;;		On entry : 0/0
 13453 ;;		On exit  : 0/0
 13454 ;;		Unchanged: 0/0
 13455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13457 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13458 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13459 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13460 ;;Total ram usage:       11 bytes
 13461 ;; Hardware stack levels used:    1
 13462 ;; Hardware stack levels required when called:    3
 13463 ;; This function calls:
 13464 ;;		___aldiv
 13465 ;;		___fladd
 13466 ;;		___fldiv
 13467 ;;		___flmul
 13468 ;;		___fltol
 13469 ;;		___lmul
 13470 ;;		___xxtofl
 13471 ;;		_readRegister
 13472 ;; This function is called by:
 13473 ;;		_AFE_UPDATE
 13474 ;; This function uses a non-reentrant model
 13475 ;;
 13476                           
 13477                           
 13478                           ;psect for function _updateVoltages
 13479  124F                     _updateVoltages:	
 13480                           
 13481                           ;BQ76920.c: 227:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13482                           
 13483                           ;incstack = 0
 13484                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13485  124F  3018               	movlw	24
 13486  1250  00F5               	movwf	readRegister@slaveAddress
 13487  1251  3000               	movlw	0
 13488  1252  00F6               	movwf	readRegister@slaveAddress+1
 13489  1253  302A               	movlw	42
 13490  1254  00F7               	movwf	readRegister@regAddress
 13491  1255  3000               	movlw	0
 13492  1256  00F8               	movwf	readRegister@regAddress+1
 13493  1257  3187  27CA  3192   	fcall	_readRegister
 13494  125A  0875               	movf	?_readRegister,w
 13495  125B  0021               	movlb	1	; select bank1
 13496  125C  00B1               	movwf	??_updateVoltages^(0+128)
 13497  125D  0876               	movf	?_readRegister+1,w
 13498  125E  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13499  125F  0831               	movf	??_updateVoltages^(0+128),w
 13500  1260  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13501  1261  01B1               	clrf	??_updateVoltages^(0+128)
 13502  1262  3018               	movlw	24
 13503  1263  00F5               	movwf	readRegister@slaveAddress
 13504  1264  3000               	movlw	0
 13505  1265  00F6               	movwf	readRegister@slaveAddress+1
 13506  1266  302B               	movlw	43
 13507  1267  00F7               	movwf	readRegister@regAddress
 13508  1268  3000               	movlw	0
 13509  1269  00F8               	movwf	readRegister@regAddress+1
 13510  126A  3187  27CA  3192   	fcall	_readRegister
 13511  126D  0875               	movf	?_readRegister,w
 13512  126E  0021               	movlb	1	; select bank1
 13513  126F  0431               	iorwf	??_updateVoltages^(0+128),w
 13514  1270  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13515  1271  0876               	movf	?_readRegister+1,w
 13516  1272  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13517  1273  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13518  1274  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13519  1275  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13520  1276  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13521  1277  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13522  1278  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13523                           
 13524                           ;BQ76920.c: 228:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13525  1279  0022               	movlb	2	; select bank2
 13526  127A  086E               	movf	_adcGain^(0+256),w
 13527  127B  00F1               	movwf	___xxtofl@val
 13528  127C  086F               	movf	(_adcGain+1)^(0+256),w
 13529  127D  00F2               	movwf	___xxtofl@val+1
 13530  127E  0D89               	rlf	9,f
 13531  127F  3B89               	subwfb	9,f
 13532  1280  0989               	comf	9,f
 13533  1281  00F3               	movwf	___xxtofl@val+2
 13534  1282  00F4               	movwf	___xxtofl@val+3
 13535  1283  3001               	movlw	1
 13536  1284  31AA  2241  3192   	fcall	___xxtofl
 13537  1287  0874               	movf	?___xxtofl+3,w
 13538  1288  0020               	movlb	0	; select bank0
 13539  1289  00AD               	movwf	___flmul@a+3
 13540  128A  0873               	movf	?___xxtofl+2,w
 13541  128B  00AC               	movwf	___flmul@a+2
 13542  128C  0872               	movf	?___xxtofl+1,w
 13543  128D  00AB               	movwf	___flmul@a+1
 13544  128E  0871               	movf	?___xxtofl,w
 13545  128F  00AA               	movwf	___flmul@a
 13546  1290  3040               	movlw	64
 13547  1291  00A9               	movwf	___flmul@b+3
 13548  1292  3080               	movlw	128
 13549  1293  00A8               	movwf	___flmul@b+2
 13550  1294  3000               	movlw	0
 13551  1295  00A7               	movwf	___flmul@b+1
 13552  1296  3000               	movlw	0
 13553  1297  00A6               	movwf	___flmul@b
 13554  1298  3190  2023  3192   	fcall	___flmul
 13555  129B  0020               	movlb	0	; select bank0
 13556  129C  0829               	movf	?___flmul+3,w
 13557  129D  0021               	movlb	1	; select bank1
 13558  129E  00B7               	movwf	(_updateVoltages$2149+3)^(0+128)
 13559  129F  0020               	movlb	0	; select bank0
 13560  12A0  0828               	movf	?___flmul+2,w
 13561  12A1  0021               	movlb	1	; select bank1
 13562  12A2  00B6               	movwf	(_updateVoltages$2149+2)^(0+128)
 13563  12A3  0020               	movlb	0	; select bank0
 13564  12A4  0827               	movf	?___flmul+1,w
 13565  12A5  0021               	movlb	1	; select bank1
 13566  12A6  00B5               	movwf	(_updateVoltages$2149+1)^(0+128)
 13567  12A7  0020               	movlb	0	; select bank0
 13568  12A8  0826               	movf	?___flmul,w
 13569  12A9  0021               	movlb	1	; select bank1
 13570  12AA  00B4               	movwf	_updateVoltages$2149^(0+128)
 13571                           
 13572                           ;BQ76920.c: 228:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13573  12AB  0837               	movf	(_updateVoltages$2149+3)^(0+128),w
 13574  12AC  0020               	movlb	0	; select bank0
 13575  12AD  00AD               	movwf	___flmul@a+3
 13576  12AE  0021               	movlb	1	; select bank1
 13577  12AF  0836               	movf	(_updateVoltages$2149+2)^(0+128),w
 13578  12B0  0020               	movlb	0	; select bank0
 13579  12B1  00AC               	movwf	___flmul@a+2
 13580  12B2  0021               	movlb	1	; select bank1
 13581  12B3  0835               	movf	(_updateVoltages$2149+1)^(0+128),w
 13582  12B4  0020               	movlb	0	; select bank0
 13583  12B5  00AB               	movwf	___flmul@a+1
 13584  12B6  0021               	movlb	1	; select bank1
 13585  12B7  0834               	movf	_updateVoltages$2149^(0+128),w
 13586  12B8  0020               	movlb	0	; select bank0
 13587  12B9  00AA               	movwf	___flmul@a
 13588  12BA  0021               	movlb	1	; select bank1
 13589  12BB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13590  12BC  00F4               	movwf	___xxtofl@val+3
 13591  12BD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13592  12BE  00F3               	movwf	___xxtofl@val+2
 13593  12BF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13594  12C0  00F2               	movwf	___xxtofl@val+1
 13595  12C1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13596  12C2  00F1               	movwf	___xxtofl@val
 13597  12C3  3001               	movlw	1
 13598  12C4  31AA  2241  3192   	fcall	___xxtofl
 13599  12C7  0874               	movf	?___xxtofl+3,w
 13600  12C8  0020               	movlb	0	; select bank0
 13601  12C9  00A9               	movwf	___flmul@b+3
 13602  12CA  0873               	movf	?___xxtofl+2,w
 13603  12CB  00A8               	movwf	___flmul@b+2
 13604  12CC  0872               	movf	?___xxtofl+1,w
 13605  12CD  00A7               	movwf	___flmul@b+1
 13606  12CE  0871               	movf	?___xxtofl,w
 13607  12CF  00A6               	movwf	___flmul@b
 13608  12D0  3190  2023  3192   	fcall	___flmul
 13609  12D3  0020               	movlb	0	; select bank0
 13610  12D4  0829               	movf	?___flmul+3,w
 13611  12D5  00C7               	movwf	___fldiv@b+3
 13612  12D6  0828               	movf	?___flmul+2,w
 13613  12D7  00C6               	movwf	___fldiv@b+2
 13614  12D8  0827               	movf	?___flmul+1,w
 13615  12D9  00C5               	movwf	___fldiv@b+1
 13616  12DA  0826               	movf	?___flmul,w
 13617  12DB  00C4               	movwf	___fldiv@b
 13618  12DC  3044               	movlw	68
 13619  12DD  00C3               	movwf	___fldiv@a+3
 13620  12DE  307A               	movlw	122
 13621  12DF  00C2               	movwf	___fldiv@a+2
 13622  12E0  3000               	movlw	0
 13623  12E1  00C1               	movwf	___fldiv@a+1
 13624  12E2  3000               	movlw	0
 13625  12E3  00C0               	movwf	___fldiv@a
 13626  12E4  319C  24E2  3192   	fcall	___fldiv
 13627  12E7  0020               	movlb	0	; select bank0
 13628  12E8  0843               	movf	?___fldiv+3,w
 13629  12E9  00E1               	movwf	___fladd@a+3
 13630  12EA  0842               	movf	?___fldiv+2,w
 13631  12EB  00E0               	movwf	___fladd@a+2
 13632  12EC  0841               	movf	?___fldiv+1,w
 13633  12ED  00DF               	movwf	___fladd@a+1
 13634  12EE  0840               	movf	?___fldiv,w
 13635  12EF  00DE               	movwf	___fladd@a
 13636  12F0  0022               	movlb	2	; select bank2
 13637  12F1  086D               	movf	(_adcOffset+1)^(0+256),w
 13638  12F2  0021               	movlb	1	; select bank1
 13639  12F3  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13640  12F4  0022               	movlb	2	; select bank2
 13641  12F5  086C               	movf	_adcOffset^(0+256),w
 13642  12F6  0021               	movlb	1	; select bank1
 13643  12F7  00B1               	movwf	??_updateVoltages^(0+128)
 13644  12F8  35B1               	lslf	??_updateVoltages^(0+128),f
 13645  12F9  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13646  12FA  35B1               	lslf	??_updateVoltages^(0+128),f
 13647  12FB  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13648  12FC  0831               	movf	??_updateVoltages^(0+128),w
 13649  12FD  00F1               	movwf	___xxtofl@val
 13650  12FE  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13651  12FF  00F2               	movwf	___xxtofl@val+1
 13652  1300  0D89               	rlf	9,f
 13653  1301  3B89               	subwfb	9,f
 13654  1302  0989               	comf	9,f
 13655  1303  00F3               	movwf	___xxtofl@val+2
 13656  1304  00F4               	movwf	___xxtofl@val+3
 13657  1305  3001               	movlw	1
 13658  1306  31AA  2241  3192   	fcall	___xxtofl
 13659  1309  0874               	movf	?___xxtofl+3,w
 13660  130A  0020               	movlb	0	; select bank0
 13661  130B  00DD               	movwf	___fladd@b+3
 13662  130C  0873               	movf	?___xxtofl+2,w
 13663  130D  00DC               	movwf	___fladd@b+2
 13664  130E  0872               	movf	?___xxtofl+1,w
 13665  130F  00DB               	movwf	___fladd@b+1
 13666  1310  0871               	movf	?___xxtofl,w
 13667  1311  00DA               	movwf	___fladd@b
 13668  1312  3185  25E8  3192   	fcall	___fladd
 13669  1315  0020               	movlb	0	; select bank0
 13670  1316  085D               	movf	?___fladd+3,w
 13671  1317  0021               	movlb	1	; select bank1
 13672  1318  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13673  1319  0020               	movlb	0	; select bank0
 13674  131A  085C               	movf	?___fladd+2,w
 13675  131B  0021               	movlb	1	; select bank1
 13676  131C  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13677  131D  0020               	movlb	0	; select bank0
 13678  131E  085B               	movf	?___fladd+1,w
 13679  131F  0021               	movlb	1	; select bank1
 13680  1320  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13681  1321  0020               	movlb	0	; select bank0
 13682  1322  085A               	movf	?___fladd,w
 13683  1323  0021               	movlb	1	; select bank1
 13684  1324  00A8               	movwf	___fltol@f1^(0+128)
 13685  1325  31B6  26B8  3192   	fcall	___fltol
 13686  1328  0021               	movlb	1	; select bank1
 13687  1329  082B               	movf	(?___fltol+3)^(0+128),w
 13688  132A  0023               	movlb	3	; select bank3
 13689  132B  00BD               	movwf	(_batVoltage+3)^(0+384)
 13690  132C  0021               	movlb	1	; select bank1
 13691  132D  082A               	movf	(?___fltol+2)^(0+128),w
 13692  132E  0023               	movlb	3	; select bank3
 13693  132F  00BC               	movwf	(_batVoltage+2)^(0+384)
 13694  1330  0021               	movlb	1	; select bank1
 13695  1331  0829               	movf	(?___fltol+1)^(0+128),w
 13696  1332  0023               	movlb	3	; select bank3
 13697  1333  00BB               	movwf	(_batVoltage+1)^(0+384)
 13698  1334  0021               	movlb	1	; select bank1
 13699  1335  0828               	movf	?___fltol^(0+128),w
 13700  1336  0023               	movlb	3	; select bank3
 13701  1337  00BA               	movwf	_batVoltage^(0+384)
 13702                           
 13703                           ;BQ76920.c: 251:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13704  1338  3018               	movlw	24
 13705  1339  00F5               	movwf	readRegister@slaveAddress
 13706  133A  3000               	movlw	0
 13707  133B  00F6               	movwf	readRegister@slaveAddress+1
 13708  133C  300C               	movlw	12
 13709  133D  00F7               	movwf	readRegister@regAddress
 13710  133E  3000               	movlw	0
 13711  133F  00F8               	movwf	readRegister@regAddress+1
 13712  1340  3187  27CA  3192   	fcall	_readRegister
 13713  1343  303F               	movlw	63
 13714  1344  0575               	andwf	?_readRegister,w
 13715  1345  0021               	movlb	1	; select bank1
 13716  1346  00B1               	movwf	??_updateVoltages^(0+128)
 13717  1347  3000               	movlw	0
 13718  1348  0576               	andwf	?_readRegister+1,w
 13719  1349  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13720  134A  0831               	movf	??_updateVoltages^(0+128),w
 13721  134B  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13722  134C  01B1               	clrf	??_updateVoltages^(0+128)
 13723  134D  3018               	movlw	24
 13724  134E  00F5               	movwf	readRegister@slaveAddress
 13725  134F  3000               	movlw	0
 13726  1350  00F6               	movwf	readRegister@slaveAddress+1
 13727  1351  300D               	movlw	13
 13728  1352  00F7               	movwf	readRegister@regAddress
 13729  1353  3000               	movlw	0
 13730  1354  00F8               	movwf	readRegister@regAddress+1
 13731  1355  3187  27CA  3192   	fcall	_readRegister
 13732  1358  0875               	movf	?_readRegister,w
 13733  1359  0021               	movlb	1	; select bank1
 13734  135A  0431               	iorwf	??_updateVoltages^(0+128),w
 13735  135B  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13736  135C  0876               	movf	?_readRegister+1,w
 13737  135D  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13738  135E  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13739  135F  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13740  1360  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13741  1361  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13742  1362  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13743  1363  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13744                           
 13745                           ;BQ76920.c: 252:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13746  1364  3000               	movlw	0
 13747  1365  0020               	movlb	0	; select bank0
 13748  1366  00A7               	movwf	___aldiv@divisor+3
 13749  1367  3000               	movlw	0
 13750  1368  00A6               	movwf	___aldiv@divisor+2
 13751  1369  3003               	movlw	3
 13752  136A  00A5               	movwf	___aldiv@divisor+1
 13753  136B  30E8               	movlw	232
 13754  136C  00A4               	movwf	___aldiv@divisor
 13755  136D  0022               	movlb	2	; select bank2
 13756  136E  086E               	movf	_adcGain^(0+256),w
 13757  136F  00F1               	movwf	___lmul@multiplier
 13758  1370  086F               	movf	(_adcGain+1)^(0+256),w
 13759  1371  00F2               	movwf	___lmul@multiplier+1
 13760  1372  0D89               	rlf	9,f
 13761  1373  3B89               	subwfb	9,f
 13762  1374  0989               	comf	9,f
 13763  1375  00F3               	movwf	___lmul@multiplier+2
 13764  1376  00F4               	movwf	___lmul@multiplier+3
 13765  1377  0021               	movlb	1	; select bank1
 13766  1378  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13767  1379  00F8               	movwf	___lmul@multiplicand+3
 13768  137A  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13769  137B  00F7               	movwf	___lmul@multiplicand+2
 13770  137C  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13771  137D  00F6               	movwf	___lmul@multiplicand+1
 13772  137E  0838               	movf	updateVoltages@adcVal^(0+128),w
 13773  137F  00F5               	movwf	___lmul@multiplicand
 13774  1380  31B4  2421  3192   	fcall	___lmul
 13775  1383  0874               	movf	?___lmul+3,w
 13776  1384  0020               	movlb	0	; select bank0
 13777  1385  00AB               	movwf	___aldiv@dividend+3
 13778  1386  0873               	movf	?___lmul+2,w
 13779  1387  00AA               	movwf	___aldiv@dividend+2
 13780  1388  0872               	movf	?___lmul+1,w
 13781  1389  00A9               	movwf	___aldiv@dividend+1
 13782  138A  0871               	movf	?___lmul,w
 13783  138B  00A8               	movwf	___aldiv@dividend
 13784  138C  31A9  21BF  3192   	fcall	___aldiv
 13785  138F  0022               	movlb	2	; select bank2
 13786  1390  086C               	movf	_adcOffset^(0+256),w
 13787  1391  0020               	movlb	0	; select bank0
 13788  1392  0724               	addwf	?___aldiv,w
 13789  1393  0023               	movlb	3	; select bank3
 13790  1394  00A0               	movwf	_cellVoltages^(0+384)
 13791  1395  0022               	movlb	2	; select bank2
 13792  1396  086D               	movf	(_adcOffset+1)^(0+256),w
 13793  1397  0020               	movlb	0	; select bank0
 13794  1398  3D25               	addwfc	?___aldiv+1,w
 13795  1399  0023               	movlb	3	; select bank3
 13796  139A  00A1               	movwf	(_cellVoltages+1)^(0+384)
 13797                           
 13798                           ;BQ76920.c: 253:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13799  139B  3018               	movlw	24
 13800  139C  00F5               	movwf	readRegister@slaveAddress
 13801  139D  3000               	movlw	0
 13802  139E  00F6               	movwf	readRegister@slaveAddress+1
 13803  139F  300E               	movlw	14
 13804  13A0  00F7               	movwf	readRegister@regAddress
 13805  13A1  3000               	movlw	0
 13806  13A2  00F8               	movwf	readRegister@regAddress+1
 13807  13A3  3187  27CA  3192   	fcall	_readRegister
 13808  13A6  303F               	movlw	63
 13809  13A7  0575               	andwf	?_readRegister,w
 13810  13A8  0021               	movlb	1	; select bank1
 13811  13A9  00B1               	movwf	??_updateVoltages^(0+128)
 13812  13AA  3000               	movlw	0
 13813  13AB  0576               	andwf	?_readRegister+1,w
 13814  13AC  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13815  13AD  0831               	movf	??_updateVoltages^(0+128),w
 13816  13AE  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13817  13AF  01B1               	clrf	??_updateVoltages^(0+128)
 13818  13B0  3018               	movlw	24
 13819  13B1  00F5               	movwf	readRegister@slaveAddress
 13820  13B2  3000               	movlw	0
 13821  13B3  00F6               	movwf	readRegister@slaveAddress+1
 13822  13B4  300F               	movlw	15
 13823  13B5  00F7               	movwf	readRegister@regAddress
 13824  13B6  3000               	movlw	0
 13825  13B7  00F8               	movwf	readRegister@regAddress+1
 13826  13B8  3187  27CA  3192   	fcall	_readRegister
 13827  13BB  0875               	movf	?_readRegister,w
 13828  13BC  0021               	movlb	1	; select bank1
 13829  13BD  0431               	iorwf	??_updateVoltages^(0+128),w
 13830  13BE  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13831  13BF  0876               	movf	?_readRegister+1,w
 13832  13C0  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13833  13C1  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13834  13C2  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13835  13C3  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13836  13C4  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13837  13C5  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13838  13C6  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13839                           
 13840                           ;BQ76920.c: 254:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13841  13C7  3000               	movlw	0
 13842  13C8  0020               	movlb	0	; select bank0
 13843  13C9  00A7               	movwf	___aldiv@divisor+3
 13844  13CA  3000               	movlw	0
 13845  13CB  00A6               	movwf	___aldiv@divisor+2
 13846  13CC  3003               	movlw	3
 13847  13CD  00A5               	movwf	___aldiv@divisor+1
 13848  13CE  30E8               	movlw	232
 13849  13CF  00A4               	movwf	___aldiv@divisor
 13850  13D0  0022               	movlb	2	; select bank2
 13851  13D1  086E               	movf	_adcGain^(0+256),w
 13852  13D2  00F1               	movwf	___lmul@multiplier
 13853  13D3  086F               	movf	(_adcGain+1)^(0+256),w
 13854  13D4  00F2               	movwf	___lmul@multiplier+1
 13855  13D5  0D89               	rlf	9,f
 13856  13D6  3B89               	subwfb	9,f
 13857  13D7  0989               	comf	9,f
 13858  13D8  00F3               	movwf	___lmul@multiplier+2
 13859  13D9  00F4               	movwf	___lmul@multiplier+3
 13860  13DA  0021               	movlb	1	; select bank1
 13861  13DB  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13862  13DC  00F8               	movwf	___lmul@multiplicand+3
 13863  13DD  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13864  13DE  00F7               	movwf	___lmul@multiplicand+2
 13865  13DF  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13866  13E0  00F6               	movwf	___lmul@multiplicand+1
 13867  13E1  0838               	movf	updateVoltages@adcVal^(0+128),w
 13868  13E2  00F5               	movwf	___lmul@multiplicand
 13869  13E3  31B4  2421  3192   	fcall	___lmul
 13870  13E6  0874               	movf	?___lmul+3,w
 13871  13E7  0020               	movlb	0	; select bank0
 13872  13E8  00AB               	movwf	___aldiv@dividend+3
 13873  13E9  0873               	movf	?___lmul+2,w
 13874  13EA  00AA               	movwf	___aldiv@dividend+2
 13875  13EB  0872               	movf	?___lmul+1,w
 13876  13EC  00A9               	movwf	___aldiv@dividend+1
 13877  13ED  0871               	movf	?___lmul,w
 13878  13EE  00A8               	movwf	___aldiv@dividend
 13879  13EF  31A9  21BF  3192   	fcall	___aldiv
 13880  13F2  0022               	movlb	2	; select bank2
 13881  13F3  086C               	movf	_adcOffset^(0+256),w
 13882  13F4  0020               	movlb	0	; select bank0
 13883  13F5  0724               	addwf	?___aldiv,w
 13884  13F6  0023               	movlb	3	; select bank3
 13885  13F7  00A2               	movwf	(_cellVoltages^(0+384)+2)
 13886  13F8  0022               	movlb	2	; select bank2
 13887  13F9  086D               	movf	(_adcOffset+1)^(0+256),w
 13888  13FA  0020               	movlb	0	; select bank0
 13889  13FB  3D25               	addwfc	?___aldiv+1,w
 13890  13FC  0023               	movlb	3	; select bank3
 13891  13FD  00A3               	movwf	((_cellVoltages+1)^(0+384)+2)
 13892                           
 13893                           ;BQ76920.c: 255:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13894  13FE  3018               	movlw	24
 13895  13FF  00F5               	movwf	readRegister@slaveAddress
 13896  1400  3000               	movlw	0
 13897  1401  00F6               	movwf	readRegister@slaveAddress+1
 13898  1402  3010               	movlw	16
 13899  1403  00F7               	movwf	readRegister@regAddress
 13900  1404  3000               	movlw	0
 13901  1405  00F8               	movwf	readRegister@regAddress+1
 13902  1406  3187  27CA  3192   	fcall	_readRegister
 13903  1409  303F               	movlw	63
 13904  140A  0575               	andwf	?_readRegister,w
 13905  140B  0021               	movlb	1	; select bank1
 13906  140C  00B1               	movwf	??_updateVoltages^(0+128)
 13907  140D  3000               	movlw	0
 13908  140E  0576               	andwf	?_readRegister+1,w
 13909  140F  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13910  1410  0831               	movf	??_updateVoltages^(0+128),w
 13911  1411  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13912  1412  01B1               	clrf	??_updateVoltages^(0+128)
 13913  1413  3018               	movlw	24
 13914  1414  00F5               	movwf	readRegister@slaveAddress
 13915  1415  3000               	movlw	0
 13916  1416  00F6               	movwf	readRegister@slaveAddress+1
 13917  1417  3011               	movlw	17
 13918  1418  00F7               	movwf	readRegister@regAddress
 13919  1419  3000               	movlw	0
 13920  141A  00F8               	movwf	readRegister@regAddress+1
 13921  141B  3187  27CA  3192   	fcall	_readRegister
 13922  141E  0875               	movf	?_readRegister,w
 13923  141F  0021               	movlb	1	; select bank1
 13924  1420  0431               	iorwf	??_updateVoltages^(0+128),w
 13925  1421  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13926  1422  0876               	movf	?_readRegister+1,w
 13927  1423  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13928  1424  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13929  1425  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13930  1426  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13931  1427  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13932  1428  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13933  1429  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13934                           
 13935                           ;BQ76920.c: 256:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13936  142A  3000               	movlw	0
 13937  142B  0020               	movlb	0	; select bank0
 13938  142C  00A7               	movwf	___aldiv@divisor+3
 13939  142D  3000               	movlw	0
 13940  142E  00A6               	movwf	___aldiv@divisor+2
 13941  142F  3003               	movlw	3
 13942  1430  00A5               	movwf	___aldiv@divisor+1
 13943  1431  30E8               	movlw	232
 13944  1432  00A4               	movwf	___aldiv@divisor
 13945  1433  0022               	movlb	2	; select bank2
 13946  1434  086E               	movf	_adcGain^(0+256),w
 13947  1435  00F1               	movwf	___lmul@multiplier
 13948  1436  086F               	movf	(_adcGain+1)^(0+256),w
 13949  1437  00F2               	movwf	___lmul@multiplier+1
 13950  1438  0D89               	rlf	9,f
 13951  1439  3B89               	subwfb	9,f
 13952  143A  0989               	comf	9,f
 13953  143B  00F3               	movwf	___lmul@multiplier+2
 13954  143C  00F4               	movwf	___lmul@multiplier+3
 13955  143D  0021               	movlb	1	; select bank1
 13956  143E  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13957  143F  00F8               	movwf	___lmul@multiplicand+3
 13958  1440  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13959  1441  00F7               	movwf	___lmul@multiplicand+2
 13960  1442  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13961  1443  00F6               	movwf	___lmul@multiplicand+1
 13962  1444  0838               	movf	updateVoltages@adcVal^(0+128),w
 13963  1445  00F5               	movwf	___lmul@multiplicand
 13964  1446  31B4  2421  3192   	fcall	___lmul
 13965  1449  0874               	movf	?___lmul+3,w
 13966  144A  0020               	movlb	0	; select bank0
 13967  144B  00AB               	movwf	___aldiv@dividend+3
 13968  144C  0873               	movf	?___lmul+2,w
 13969  144D  00AA               	movwf	___aldiv@dividend+2
 13970  144E  0872               	movf	?___lmul+1,w
 13971  144F  00A9               	movwf	___aldiv@dividend+1
 13972  1450  0871               	movf	?___lmul,w
 13973  1451  00A8               	movwf	___aldiv@dividend
 13974  1452  31A9  21BF  3192   	fcall	___aldiv
 13975  1455  0022               	movlb	2	; select bank2
 13976  1456  086C               	movf	_adcOffset^(0+256),w
 13977  1457  0020               	movlb	0	; select bank0
 13978  1458  0724               	addwf	?___aldiv,w
 13979  1459  0023               	movlb	3	; select bank3
 13980  145A  00A4               	movwf	(_cellVoltages^(0+384)+4)
 13981  145B  0022               	movlb	2	; select bank2
 13982  145C  086D               	movf	(_adcOffset+1)^(0+256),w
 13983  145D  0020               	movlb	0	; select bank0
 13984  145E  3D25               	addwfc	?___aldiv+1,w
 13985  145F  0023               	movlb	3	; select bank3
 13986  1460  00A5               	movwf	((_cellVoltages+1)^(0+384)+4)
 13987                           
 13988                           ;BQ76920.c: 257:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 13989  1461  3018               	movlw	24
 13990  1462  00F5               	movwf	readRegister@slaveAddress
 13991  1463  3000               	movlw	0
 13992  1464  00F6               	movwf	readRegister@slaveAddress+1
 13993  1465  3012               	movlw	18
 13994  1466  00F7               	movwf	readRegister@regAddress
 13995  1467  3000               	movlw	0
 13996  1468  00F8               	movwf	readRegister@regAddress+1
 13997  1469  3187  27CA  3192   	fcall	_readRegister
 13998  146C  303F               	movlw	63
 13999  146D  0575               	andwf	?_readRegister,w
 14000  146E  0021               	movlb	1	; select bank1
 14001  146F  00B1               	movwf	??_updateVoltages^(0+128)
 14002  1470  3000               	movlw	0
 14003  1471  0576               	andwf	?_readRegister+1,w
 14004  1472  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 14005  1473  0831               	movf	??_updateVoltages^(0+128),w
 14006  1474  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 14007  1475  01B1               	clrf	??_updateVoltages^(0+128)
 14008  1476  3018               	movlw	24
 14009  1477  00F5               	movwf	readRegister@slaveAddress
 14010  1478  3000               	movlw	0
 14011  1479  00F6               	movwf	readRegister@slaveAddress+1
 14012  147A  3013               	movlw	19
 14013  147B  00F7               	movwf	readRegister@regAddress
 14014  147C  3000               	movlw	0
 14015  147D  00F8               	movwf	readRegister@regAddress+1
 14016  147E  3187  27CA  3192   	fcall	_readRegister
 14017  1481  0875               	movf	?_readRegister,w
 14018  1482  0021               	movlb	1	; select bank1
 14019  1483  0431               	iorwf	??_updateVoltages^(0+128),w
 14020  1484  00B8               	movwf	updateVoltages@adcVal^(0+128)
 14021  1485  0876               	movf	?_readRegister+1,w
 14022  1486  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 14023  1487  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 14024  1488  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 14025  1489  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 14026  148A  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 14027  148B  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 14028  148C  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 14029                           
 14030                           ;BQ76920.c: 258:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 14031  148D  3000               	movlw	0
 14032  148E  0020               	movlb	0	; select bank0
 14033  148F  00A7               	movwf	___aldiv@divisor+3
 14034  1490  3000               	movlw	0
 14035  1491  00A6               	movwf	___aldiv@divisor+2
 14036  1492  3003               	movlw	3
 14037  1493  00A5               	movwf	___aldiv@divisor+1
 14038  1494  30E8               	movlw	232
 14039  1495  00A4               	movwf	___aldiv@divisor
 14040  1496  0022               	movlb	2	; select bank2
 14041  1497  086E               	movf	_adcGain^(0+256),w
 14042  1498  00F1               	movwf	___lmul@multiplier
 14043  1499  086F               	movf	(_adcGain+1)^(0+256),w
 14044  149A  00F2               	movwf	___lmul@multiplier+1
 14045  149B  0D89               	rlf	9,f
 14046  149C  3B89               	subwfb	9,f
 14047  149D  0989               	comf	9,f
 14048  149E  00F3               	movwf	___lmul@multiplier+2
 14049  149F  00F4               	movwf	___lmul@multiplier+3
 14050  14A0  0021               	movlb	1	; select bank1
 14051  14A1  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14052  14A2  00F8               	movwf	___lmul@multiplicand+3
 14053  14A3  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14054  14A4  00F7               	movwf	___lmul@multiplicand+2
 14055  14A5  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14056  14A6  00F6               	movwf	___lmul@multiplicand+1
 14057  14A7  0838               	movf	updateVoltages@adcVal^(0+128),w
 14058  14A8  00F5               	movwf	___lmul@multiplicand
 14059  14A9  31B4  2421  3192   	fcall	___lmul
 14060  14AC  0874               	movf	?___lmul+3,w
 14061  14AD  0020               	movlb	0	; select bank0
 14062  14AE  00AB               	movwf	___aldiv@dividend+3
 14063  14AF  0873               	movf	?___lmul+2,w
 14064  14B0  00AA               	movwf	___aldiv@dividend+2
 14065  14B1  0872               	movf	?___lmul+1,w
 14066  14B2  00A9               	movwf	___aldiv@dividend+1
 14067  14B3  0871               	movf	?___lmul,w
 14068  14B4  00A8               	movwf	___aldiv@dividend
 14069  14B5  31A9  21BF  3192   	fcall	___aldiv
 14070  14B8  0022               	movlb	2	; select bank2
 14071  14B9  086C               	movf	_adcOffset^(0+256),w
 14072  14BA  0020               	movlb	0	; select bank0
 14073  14BB  0724               	addwf	?___aldiv,w
 14074  14BC  0023               	movlb	3	; select bank3
 14075  14BD  00A6               	movwf	(_cellVoltages^(0+384)+6)
 14076  14BE  0022               	movlb	2	; select bank2
 14077  14BF  086D               	movf	(_adcOffset+1)^(0+256),w
 14078  14C0  0020               	movlb	0	; select bank0
 14079  14C1  3D25               	addwfc	?___aldiv+1,w
 14080  14C2  0023               	movlb	3	; select bank3
 14081  14C3  00A7               	movwf	((_cellVoltages+1)^(0+384)+6)
 14082                           
 14083                           ;BQ76920.c: 259:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 14084  14C4  3018               	movlw	24
 14085  14C5  00F5               	movwf	readRegister@slaveAddress
 14086  14C6  3000               	movlw	0
 14087  14C7  00F6               	movwf	readRegister@slaveAddress+1
 14088  14C8  3014               	movlw	20
 14089  14C9  00F7               	movwf	readRegister@regAddress
 14090  14CA  3000               	movlw	0
 14091  14CB  00F8               	movwf	readRegister@regAddress+1
 14092  14CC  3187  27CA  3192   	fcall	_readRegister
 14093  14CF  303F               	movlw	63
 14094  14D0  0575               	andwf	?_readRegister,w
 14095  14D1  0021               	movlb	1	; select bank1
 14096  14D2  00B1               	movwf	??_updateVoltages^(0+128)
 14097  14D3  3000               	movlw	0
 14098  14D4  0576               	andwf	?_readRegister+1,w
 14099  14D5  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 14100  14D6  0831               	movf	??_updateVoltages^(0+128),w
 14101  14D7  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 14102  14D8  01B1               	clrf	??_updateVoltages^(0+128)
 14103  14D9  3018               	movlw	24
 14104  14DA  00F5               	movwf	readRegister@slaveAddress
 14105  14DB  3000               	movlw	0
 14106  14DC  00F6               	movwf	readRegister@slaveAddress+1
 14107  14DD  3015               	movlw	21
 14108  14DE  00F7               	movwf	readRegister@regAddress
 14109  14DF  3000               	movlw	0
 14110  14E0  00F8               	movwf	readRegister@regAddress+1
 14111  14E1  3187  27CA  3192   	fcall	_readRegister
 14112  14E4  0875               	movf	?_readRegister,w
 14113  14E5  0021               	movlb	1	; select bank1
 14114  14E6  0431               	iorwf	??_updateVoltages^(0+128),w
 14115  14E7  00B8               	movwf	updateVoltages@adcVal^(0+128)
 14116  14E8  0876               	movf	?_readRegister+1,w
 14117  14E9  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 14118  14EA  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 14119  14EB  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 14120  14EC  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 14121  14ED  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 14122  14EE  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 14123  14EF  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 14124                           
 14125                           ;BQ76920.c: 260:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 14126  14F0  3000               	movlw	0
 14127  14F1  0020               	movlb	0	; select bank0
 14128  14F2  00A7               	movwf	___aldiv@divisor+3
 14129  14F3  3000               	movlw	0
 14130  14F4  00A6               	movwf	___aldiv@divisor+2
 14131  14F5  3003               	movlw	3
 14132  14F6  00A5               	movwf	___aldiv@divisor+1
 14133  14F7  30E8               	movlw	232
 14134  14F8  00A4               	movwf	___aldiv@divisor
 14135  14F9  0022               	movlb	2	; select bank2
 14136  14FA  086E               	movf	_adcGain^(0+256),w
 14137  14FB  00F1               	movwf	___lmul@multiplier
 14138  14FC  086F               	movf	(_adcGain+1)^(0+256),w
 14139  14FD  00F2               	movwf	___lmul@multiplier+1
 14140  14FE  0D89               	rlf	9,f
 14141  14FF  3B89               	subwfb	9,f
 14142  1500  0989               	comf	9,f
 14143  1501  00F3               	movwf	___lmul@multiplier+2
 14144  1502  00F4               	movwf	___lmul@multiplier+3
 14145  1503  0021               	movlb	1	; select bank1
 14146  1504  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 14147  1505  00F8               	movwf	___lmul@multiplicand+3
 14148  1506  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 14149  1507  00F7               	movwf	___lmul@multiplicand+2
 14150  1508  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 14151  1509  00F6               	movwf	___lmul@multiplicand+1
 14152  150A  0838               	movf	updateVoltages@adcVal^(0+128),w
 14153  150B  00F5               	movwf	___lmul@multiplicand
 14154  150C  31B4  2421  3192   	fcall	___lmul
 14155  150F  0874               	movf	?___lmul+3,w
 14156  1510  0020               	movlb	0	; select bank0
 14157  1511  00AB               	movwf	___aldiv@dividend+3
 14158  1512  0873               	movf	?___lmul+2,w
 14159  1513  00AA               	movwf	___aldiv@dividend+2
 14160  1514  0872               	movf	?___lmul+1,w
 14161  1515  00A9               	movwf	___aldiv@dividend+1
 14162  1516  0871               	movf	?___lmul,w
 14163  1517  00A8               	movwf	___aldiv@dividend
 14164  1518  31A9  21BF         	fcall	___aldiv
 14165  151A  0022               	movlb	2	; select bank2
 14166  151B  086C               	movf	_adcOffset^(0+256),w
 14167  151C  0020               	movlb	0	; select bank0
 14168  151D  0724               	addwf	?___aldiv,w
 14169  151E  0023               	movlb	3	; select bank3
 14170  151F  00A8               	movwf	(_cellVoltages^(0+384)+8)
 14171  1520  0022               	movlb	2	; select bank2
 14172  1521  086D               	movf	(_adcOffset+1)^(0+256),w
 14173  1522  0020               	movlb	0	; select bank0
 14174  1523  3D25               	addwfc	?___aldiv+1,w
 14175  1524  0023               	movlb	3	; select bank3
 14176  1525  00A9               	movwf	((_cellVoltages+1)^(0+384)+8)
 14177  1526  0008               	return
 14178  1527                     __end_of_updateVoltages:	
 14179                           
 14180                           	psect	text48
 14181  3421                     __ptext48:	
 14182 ;; *************** function ___lmul *****************
 14183 ;; Defined at:
 14184 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 14185 ;; Parameters:    Size  Location     Type
 14186 ;;  multiplier      4    1[COMMON] unsigned long 
 14187 ;;  multiplicand    4    5[COMMON] unsigned long 
 14188 ;; Auto vars:     Size  Location     Type
 14189 ;;  product         4    0[BANK0 ] unsigned long 
 14190 ;; Return value:  Size  Location     Type
 14191 ;;                  4    1[COMMON] unsigned long 
 14192 ;; Registers used:
 14193 ;;		wreg, status,2, status,0
 14194 ;; Tracked objects:
 14195 ;;		On entry : 0/0
 14196 ;;		On exit  : 0/0
 14197 ;;		Unchanged: 0/0
 14198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14199 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14200 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14202 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14203 ;;Total ram usage:       12 bytes
 14204 ;; Hardware stack levels used:    1
 14205 ;; Hardware stack levels required when called:    1
 14206 ;; This function calls:
 14207 ;;		Nothing
 14208 ;; This function is called by:
 14209 ;;		_setCellUndervoltageProtection
 14210 ;;		_setCellOvervoltageProtection
 14211 ;;		_updateVoltages
 14212 ;; This function uses a non-reentrant model
 14213 ;;
 14214                           
 14215                           
 14216                           ;psect for function ___lmul
 14217  3421                     ___lmul:	
 14218                           
 14219                           ;incstack = 0
 14220                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 14221  3421  3000               	movlw	0
 14222  3422  0020               	movlb	0	; select bank0
 14223  3423  00A3               	movwf	___lmul@product+3
 14224  3424  3000               	movlw	0
 14225  3425  00A2               	movwf	___lmul@product+2
 14226  3426  3000               	movlw	0
 14227  3427  00A1               	movwf	___lmul@product+1
 14228  3428  3000               	movlw	0
 14229  3429  00A0               	movwf	___lmul@product
 14230  342A                     l7338:	
 14231  342A  1C71               	btfss	___lmul@multiplier,0
 14232  342B  2C35               	goto	l7342
 14233  342C  0875               	movf	___lmul@multiplicand,w
 14234  342D  0020               	movlb	0	; select bank0
 14235  342E  07A0               	addwf	___lmul@product,f
 14236  342F  0876               	movf	___lmul@multiplicand+1,w
 14237  3430  3DA1               	addwfc	___lmul@product+1,f
 14238  3431  0877               	movf	___lmul@multiplicand+2,w
 14239  3432  3DA2               	addwfc	___lmul@product+2,f
 14240  3433  0878               	movf	___lmul@multiplicand+3,w
 14241  3434  3DA3               	addwfc	___lmul@product+3,f
 14242  3435                     l7342:	
 14243  3435  3001               	movlw	1
 14244  3436                     u9185:	
 14245  3436  35F5               	lslf	___lmul@multiplicand,f
 14246  3437  0DF6               	rlf	___lmul@multiplicand+1,f
 14247  3438  0DF7               	rlf	___lmul@multiplicand+2,f
 14248  3439  0DF8               	rlf	___lmul@multiplicand+3,f
 14249  343A  0B89               	decfsz	9,f
 14250  343B  2C36               	goto	u9185
 14251  343C  3001               	movlw	1
 14252  343D                     u9195:	
 14253  343D  36F4               	lsrf	___lmul@multiplier+3,f
 14254  343E  0CF3               	rrf	___lmul@multiplier+2,f
 14255  343F  0CF2               	rrf	___lmul@multiplier+1,f
 14256  3440  0CF1               	rrf	___lmul@multiplier,f
 14257  3441  0B89               	decfsz	9,f
 14258  3442  2C3D               	goto	u9195
 14259  3443  0874               	movf	___lmul@multiplier+3,w
 14260  3444  0473               	iorwf	___lmul@multiplier+2,w
 14261  3445  0472               	iorwf	___lmul@multiplier+1,w
 14262  3446  0471               	iorwf	___lmul@multiplier,w
 14263  3447  1D03               	skipz
 14264  3448  2C2A               	goto	l7338
 14265  3449  0020               	movlb	0	; select bank0
 14266  344A  0823               	movf	___lmul@product+3,w
 14267  344B  00F4               	movwf	?___lmul+3
 14268  344C  0822               	movf	___lmul@product+2,w
 14269  344D  00F3               	movwf	?___lmul+2
 14270  344E  0821               	movf	___lmul@product+1,w
 14271  344F  00F2               	movwf	?___lmul+1
 14272  3450  0820               	movf	___lmul@product,w
 14273  3451  00F1               	movwf	?___lmul
 14274  3452  0008               	return
 14275  3453                     __end_of___lmul:	
 14276                           
 14277                           	psect	text49
 14278  1527                     __ptext49:	
 14279 ;; *************** function _updateTemperatures *****************
 14280 ;; Defined at:
 14281 ;;		line 267 in file "BQ76920.c"
 14282 ;; Parameters:    Size  Location     Type
 14283 ;;		None
 14284 ;; Auto vars:     Size  Location     Type
 14285 ;;  rts             4   75[BANK1 ] unsigned long 
 14286 ;;  tmp             4   67[BANK1 ] float 
 14287 ;;  vtsx            2   73[BANK1 ] int 
 14288 ;;  adcVal          2   71[BANK1 ] int 
 14289 ;; Return value:  Size  Location     Type
 14290 ;;                  1    wreg      void 
 14291 ;; Registers used:
 14292 ;;		wreg, status,2, status,0, pclath, cstack
 14293 ;; Tracked objects:
 14294 ;;		On entry : 0/0
 14295 ;;		On exit  : 0/0
 14296 ;;		Unchanged: 0/0
 14297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14299 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14300 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14301 ;;      Totals:         0       0      59       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14302 ;;Total ram usage:       59 bytes
 14303 ;; Hardware stack levels used:    1
 14304 ;; Hardware stack levels required when called:    4
 14305 ;; This function calls:
 14306 ;;		___fladd
 14307 ;;		___fldiv
 14308 ;;		___flmul
 14309 ;;		___flsub
 14310 ;;		___fltol
 14311 ;;		___xxtofl
 14312 ;;		_logf
 14313 ;;		_readRegister
 14314 ;; This function is called by:
 14315 ;;		_AFE_UPDATE
 14316 ;; This function uses a non-reentrant model
 14317 ;;
 14318                           
 14319                           
 14320                           ;psect for function _updateTemperatures
 14321  1527                     _updateTemperatures:	
 14322                           
 14323                           ;BQ76920.c: 271:      unsigned long rts = 0;
 14324                           
 14325                           ;incstack = 0
 14326                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 14327  1527  3000               	movlw	0
 14328  1528  0021               	movlb	1	; select bank1
 14329  1529  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14330  152A  3000               	movlw	0
 14331  152B  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14332  152C  3000               	movlw	0
 14333  152D  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14334  152E  3000               	movlw	0
 14335  152F  00EB               	movwf	updateTemperatures@rts^(0+128)
 14336                           
 14337                           ;BQ76920.c: 273:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 14338  1530  3018               	movlw	24
 14339  1531  00F5               	movwf	readRegister@slaveAddress
 14340  1532  3000               	movlw	0
 14341  1533  00F6               	movwf	readRegister@slaveAddress+1
 14342  1534  302C               	movlw	44
 14343  1535  00F7               	movwf	readRegister@regAddress
 14344  1536  3000               	movlw	0
 14345  1537  00F8               	movwf	readRegister@regAddress+1
 14346  1538  3187  27CA  3195   	fcall	_readRegister
 14347  153B  303F               	movlw	63
 14348  153C  0575               	andwf	?_readRegister,w
 14349  153D  0021               	movlb	1	; select bank1
 14350  153E  00B4               	movwf	??_updateTemperatures^(0+128)
 14351  153F  3000               	movlw	0
 14352  1540  0576               	andwf	?_readRegister+1,w
 14353  1541  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 14354  1542  0834               	movf	??_updateTemperatures^(0+128),w
 14355  1543  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 14356  1544  01B4               	clrf	??_updateTemperatures^(0+128)
 14357  1545  3018               	movlw	24
 14358  1546  00F5               	movwf	readRegister@slaveAddress
 14359  1547  3000               	movlw	0
 14360  1548  00F6               	movwf	readRegister@slaveAddress+1
 14361  1549  302D               	movlw	45
 14362  154A  00F7               	movwf	readRegister@regAddress
 14363  154B  3000               	movlw	0
 14364  154C  00F8               	movwf	readRegister@regAddress+1
 14365  154D  3187  27CA  3195   	fcall	_readRegister
 14366  1550  0875               	movf	?_readRegister,w
 14367  1551  0021               	movlb	1	; select bank1
 14368  1552  0434               	iorwf	??_updateTemperatures^(0+128),w
 14369  1553  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 14370  1554  0876               	movf	?_readRegister+1,w
 14371  1555  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 14372  1556  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 14373                           
 14374                           ;BQ76920.c: 274:      vtsx = adcVal * 0.382;
 14375  1557  0867               	movf	updateTemperatures@adcVal^(0+128),w
 14376  1558  00F1               	movwf	___xxtofl@val
 14377  1559  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 14378  155A  00F2               	movwf	___xxtofl@val+1
 14379  155B  0D89               	rlf	9,f
 14380  155C  3B89               	subwfb	9,f
 14381  155D  0989               	comf	9,f
 14382  155E  00F3               	movwf	___xxtofl@val+2
 14383  155F  00F4               	movwf	___xxtofl@val+3
 14384  1560  3001               	movlw	1
 14385  1561  31AA  2241  3195   	fcall	___xxtofl
 14386  1564  0874               	movf	?___xxtofl+3,w
 14387  1565  0020               	movlb	0	; select bank0
 14388  1566  00AD               	movwf	___flmul@a+3
 14389  1567  0873               	movf	?___xxtofl+2,w
 14390  1568  00AC               	movwf	___flmul@a+2
 14391  1569  0872               	movf	?___xxtofl+1,w
 14392  156A  00AB               	movwf	___flmul@a+1
 14393  156B  0871               	movf	?___xxtofl,w
 14394  156C  00AA               	movwf	___flmul@a
 14395  156D  303E               	movlw	62
 14396  156E  00A9               	movwf	___flmul@b+3
 14397  156F  30C3               	movlw	195
 14398  1570  00A8               	movwf	___flmul@b+2
 14399  1571  3095               	movlw	149
 14400  1572  00A7               	movwf	___flmul@b+1
 14401  1573  3081               	movlw	129
 14402  1574  00A6               	movwf	___flmul@b
 14403  1575  3190  2023  3195   	fcall	___flmul
 14404  1578  0020               	movlb	0	; select bank0
 14405  1579  0829               	movf	?___flmul+3,w
 14406  157A  0021               	movlb	1	; select bank1
 14407  157B  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14408  157C  0020               	movlb	0	; select bank0
 14409  157D  0828               	movf	?___flmul+2,w
 14410  157E  0021               	movlb	1	; select bank1
 14411  157F  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14412  1580  0020               	movlb	0	; select bank0
 14413  1581  0827               	movf	?___flmul+1,w
 14414  1582  0021               	movlb	1	; select bank1
 14415  1583  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14416  1584  0020               	movlb	0	; select bank0
 14417  1585  0826               	movf	?___flmul,w
 14418  1586  0021               	movlb	1	; select bank1
 14419  1587  00A8               	movwf	___fltol@f1^(0+128)
 14420  1588  31B6  26B8  3195   	fcall	___fltol
 14421  158B  0021               	movlb	1	; select bank1
 14422  158C  0829               	movf	(?___fltol+1)^(0+128),w
 14423  158D  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 14424  158E  0828               	movf	?___fltol^(0+128),w
 14425  158F  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 14426                           
 14427                           ;BQ76920.c: 275:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 14428  1590  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14429  1591  00F1               	movwf	___xxtofl@val
 14430  1592  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14431  1593  00F2               	movwf	___xxtofl@val+1
 14432  1594  0D89               	rlf	9,f
 14433  1595  3B89               	subwfb	9,f
 14434  1596  0989               	comf	9,f
 14435  1597  00F3               	movwf	___xxtofl@val+2
 14436  1598  00F4               	movwf	___xxtofl@val+3
 14437  1599  3001               	movlw	1
 14438  159A  31AA  2241  3195   	fcall	___xxtofl
 14439  159D  0874               	movf	?___xxtofl+3,w
 14440  159E  0020               	movlb	0	; select bank0
 14441  159F  00AD               	movwf	___flmul@a+3
 14442  15A0  0873               	movf	?___xxtofl+2,w
 14443  15A1  00AC               	movwf	___flmul@a+2
 14444  15A2  0872               	movf	?___xxtofl+1,w
 14445  15A3  00AB               	movwf	___flmul@a+1
 14446  15A4  0871               	movf	?___xxtofl,w
 14447  15A5  00AA               	movwf	___flmul@a
 14448  15A6  3046               	movlw	70
 14449  15A7  00A9               	movwf	___flmul@b+3
 14450  15A8  301C               	movlw	28
 14451  15A9  00A8               	movwf	___flmul@b+2
 14452  15AA  3040               	movlw	64
 14453  15AB  00A7               	movwf	___flmul@b+1
 14454  15AC  3000               	movlw	0
 14455  15AD  00A6               	movwf	___flmul@b
 14456  15AE  3190  2023  3195   	fcall	___flmul
 14457  15B1  0020               	movlb	0	; select bank0
 14458  15B2  0829               	movf	?___flmul+3,w
 14459  15B3  00C7               	movwf	___fldiv@b+3
 14460  15B4  0828               	movf	?___flmul+2,w
 14461  15B5  00C6               	movwf	___fldiv@b+2
 14462  15B6  0827               	movf	?___flmul+1,w
 14463  15B7  00C5               	movwf	___fldiv@b+1
 14464  15B8  0826               	movf	?___flmul,w
 14465  15B9  00C4               	movwf	___fldiv@b
 14466  15BA  3045               	movlw	69
 14467  15BB  0021               	movlb	1	; select bank1
 14468  15BC  00A7               	movwf	(___flsub@b+3)^(0+128)
 14469  15BD  304E               	movlw	78
 14470  15BE  00A6               	movwf	(___flsub@b+2)^(0+128)
 14471  15BF  3040               	movlw	64
 14472  15C0  00A5               	movwf	(___flsub@b+1)^(0+128)
 14473  15C1  3000               	movlw	0
 14474  15C2  00A4               	movwf	___flsub@b^(0+128)
 14475  15C3  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14476  15C4  00F1               	movwf	___xxtofl@val
 14477  15C5  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14478  15C6  00F2               	movwf	___xxtofl@val+1
 14479  15C7  0D89               	rlf	9,f
 14480  15C8  3B89               	subwfb	9,f
 14481  15C9  0989               	comf	9,f
 14482  15CA  00F3               	movwf	___xxtofl@val+2
 14483  15CB  00F4               	movwf	___xxtofl@val+3
 14484  15CC  3001               	movlw	1
 14485  15CD  31AA  2241  3195   	fcall	___xxtofl
 14486  15D0  0874               	movf	?___xxtofl+3,w
 14487  15D1  0021               	movlb	1	; select bank1
 14488  15D2  00A3               	movwf	(___flsub@a+3)^(0+128)
 14489  15D3  0873               	movf	?___xxtofl+2,w
 14490  15D4  00A2               	movwf	(___flsub@a+2)^(0+128)
 14491  15D5  0872               	movf	?___xxtofl+1,w
 14492  15D6  00A1               	movwf	(___flsub@a+1)^(0+128)
 14493  15D7  0871               	movf	?___xxtofl,w
 14494  15D8  00A0               	movwf	___flsub@a^(0+128)
 14495  15D9  31B4  2485  3195   	fcall	___flsub
 14496  15DC  0021               	movlb	1	; select bank1
 14497  15DD  0823               	movf	(?___flsub+3)^(0+128),w
 14498  15DE  0020               	movlb	0	; select bank0
 14499  15DF  00C3               	movwf	___fldiv@a+3
 14500  15E0  0021               	movlb	1	; select bank1
 14501  15E1  0822               	movf	(?___flsub+2)^(0+128),w
 14502  15E2  0020               	movlb	0	; select bank0
 14503  15E3  00C2               	movwf	___fldiv@a+2
 14504  15E4  0021               	movlb	1	; select bank1
 14505  15E5  0821               	movf	(?___flsub+1)^(0+128),w
 14506  15E6  0020               	movlb	0	; select bank0
 14507  15E7  00C1               	movwf	___fldiv@a+1
 14508  15E8  0021               	movlb	1	; select bank1
 14509  15E9  0820               	movf	?___flsub^(0+128),w
 14510  15EA  0020               	movlb	0	; select bank0
 14511  15EB  00C0               	movwf	___fldiv@a
 14512  15EC  319C  24E2  3195   	fcall	___fldiv
 14513  15EF  0020               	movlb	0	; select bank0
 14514  15F0  0843               	movf	?___fldiv+3,w
 14515  15F1  0021               	movlb	1	; select bank1
 14516  15F2  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14517  15F3  0020               	movlb	0	; select bank0
 14518  15F4  0842               	movf	?___fldiv+2,w
 14519  15F5  0021               	movlb	1	; select bank1
 14520  15F6  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14521  15F7  0020               	movlb	0	; select bank0
 14522  15F8  0841               	movf	?___fldiv+1,w
 14523  15F9  0021               	movlb	1	; select bank1
 14524  15FA  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14525  15FB  0020               	movlb	0	; select bank0
 14526  15FC  0840               	movf	?___fldiv,w
 14527  15FD  0021               	movlb	1	; select bank1
 14528  15FE  00A8               	movwf	___fltol@f1^(0+128)
 14529  15FF  31B6  26B8  3195   	fcall	___fltol
 14530  1602  0021               	movlb	1	; select bank1
 14531  1603  082B               	movf	(?___fltol+3)^(0+128),w
 14532  1604  00EE               	movwf	(updateTemperatures@rts+3)^(0+128)
 14533  1605  082A               	movf	(?___fltol+2)^(0+128),w
 14534  1606  00ED               	movwf	(updateTemperatures@rts+2)^(0+128)
 14535  1607  0829               	movf	(?___fltol+1)^(0+128),w
 14536  1608  00EC               	movwf	(updateTemperatures@rts+1)^(0+128)
 14537  1609  0828               	movf	?___fltol^(0+128),w
 14538  160A  00EB               	movwf	updateTemperatures@rts^(0+128)
 14539                           
 14540                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14541  160B  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14542  160C  00F4               	movwf	___xxtofl@val+3
 14543  160D  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14544  160E  00F3               	movwf	___xxtofl@val+2
 14545  160F  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14546  1610  00F2               	movwf	___xxtofl@val+1
 14547  1611  086B               	movf	updateTemperatures@rts^(0+128),w
 14548  1612  00F1               	movwf	___xxtofl@val
 14549  1613  3000               	movlw	0
 14550  1614  31AA  2241  3195   	fcall	___xxtofl
 14551  1617  0874               	movf	?___xxtofl+3,w
 14552  1618  0021               	movlb	1	; select bank1
 14553  1619  00BA               	movwf	(_updateTemperatures$2150+3)^(0+128)
 14554  161A  0873               	movf	?___xxtofl+2,w
 14555  161B  00B9               	movwf	(_updateTemperatures$2150+2)^(0+128)
 14556  161C  0872               	movf	?___xxtofl+1,w
 14557  161D  00B8               	movwf	(_updateTemperatures$2150+1)^(0+128)
 14558  161E  0871               	movf	?___xxtofl,w
 14559  161F  00B7               	movwf	_updateTemperatures$2150^(0+128)
 14560                           
 14561                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14562  1620  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14563  1621  00F4               	movwf	___xxtofl@val+3
 14564  1622  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14565  1623  00F3               	movwf	___xxtofl@val+2
 14566  1624  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14567  1625  00F2               	movwf	___xxtofl@val+1
 14568  1626  086B               	movf	updateTemperatures@rts^(0+128),w
 14569  1627  00F1               	movwf	___xxtofl@val
 14570  1628  3000               	movlw	0
 14571  1629  31AA  2241  3195   	fcall	___xxtofl
 14572  162C  0874               	movf	?___xxtofl+3,w
 14573  162D  0021               	movlb	1	; select bank1
 14574  162E  00BE               	movwf	(_updateTemperatures$2151+3)^(0+128)
 14575  162F  0873               	movf	?___xxtofl+2,w
 14576  1630  00BD               	movwf	(_updateTemperatures$2151+2)^(0+128)
 14577  1631  0872               	movf	?___xxtofl+1,w
 14578  1632  00BC               	movwf	(_updateTemperatures$2151+1)^(0+128)
 14579  1633  0871               	movf	?___xxtofl,w
 14580  1634  00BB               	movwf	_updateTemperatures$2151^(0+128)
 14581                           
 14582                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14583  1635  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14584  1636  00F4               	movwf	___xxtofl@val+3
 14585  1637  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14586  1638  00F3               	movwf	___xxtofl@val+2
 14587  1639  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14588  163A  00F2               	movwf	___xxtofl@val+1
 14589  163B  086B               	movf	updateTemperatures@rts^(0+128),w
 14590  163C  00F1               	movwf	___xxtofl@val
 14591  163D  3000               	movlw	0
 14592  163E  31AA  2241  3195   	fcall	___xxtofl
 14593  1641  0874               	movf	?___xxtofl+3,w
 14594  1642  0021               	movlb	1	; select bank1
 14595  1643  00C2               	movwf	(_updateTemperatures$2152+3)^(0+128)
 14596  1644  0873               	movf	?___xxtofl+2,w
 14597  1645  00C1               	movwf	(_updateTemperatures$2152+2)^(0+128)
 14598  1646  0872               	movf	?___xxtofl+1,w
 14599  1647  00C0               	movwf	(_updateTemperatures$2152+1)^(0+128)
 14600  1648  0871               	movf	?___xxtofl,w
 14601  1649  00BF               	movwf	_updateTemperatures$2152^(0+128)
 14602                           
 14603                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14604  164A  083E               	movf	(_updateTemperatures$2151+3)^(0+128),w
 14605  164B  00AB               	movwf	(logf@x+3)^(0+128)
 14606  164C  083D               	movf	(_updateTemperatures$2151+2)^(0+128),w
 14607  164D  00AA               	movwf	(logf@x+2)^(0+128)
 14608  164E  083C               	movf	(_updateTemperatures$2151+1)^(0+128),w
 14609  164F  00A9               	movwf	(logf@x+1)^(0+128)
 14610  1650  083B               	movf	_updateTemperatures$2151^(0+128),w
 14611  1651  00A8               	movwf	logf@x^(0+128)
 14612  1652  3180  205E  3195   	fcall	_logf
 14613  1655  0021               	movlb	1	; select bank1
 14614  1656  082B               	movf	(?_logf+3)^(0+128),w
 14615  1657  00C6               	movwf	(_updateTemperatures$2153+3)^(0+128)
 14616  1658  082A               	movf	(?_logf+2)^(0+128),w
 14617  1659  00C5               	movwf	(_updateTemperatures$2153+2)^(0+128)
 14618  165A  0829               	movf	(?_logf+1)^(0+128),w
 14619  165B  00C4               	movwf	(_updateTemperatures$2153+1)^(0+128)
 14620  165C  0828               	movf	?_logf^(0+128),w
 14621  165D  00C3               	movwf	_updateTemperatures$2153^(0+128)
 14622                           
 14623                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14624  165E  0842               	movf	(_updateTemperatures$2152+3)^(0+128),w
 14625  165F  00AB               	movwf	(logf@x+3)^(0+128)
 14626  1660  0841               	movf	(_updateTemperatures$2152+2)^(0+128),w
 14627  1661  00AA               	movwf	(logf@x+2)^(0+128)
 14628  1662  0840               	movf	(_updateTemperatures$2152+1)^(0+128),w
 14629  1663  00A9               	movwf	(logf@x+1)^(0+128)
 14630  1664  083F               	movf	_updateTemperatures$2152^(0+128),w
 14631  1665  00A8               	movwf	logf@x^(0+128)
 14632  1666  3180  205E  3195   	fcall	_logf
 14633  1669  0021               	movlb	1	; select bank1
 14634  166A  082B               	movf	(?_logf+3)^(0+128),w
 14635  166B  00CA               	movwf	(_updateTemperatures$2154+3)^(0+128)
 14636  166C  082A               	movf	(?_logf+2)^(0+128),w
 14637  166D  00C9               	movwf	(_updateTemperatures$2154+2)^(0+128)
 14638  166E  0829               	movf	(?_logf+1)^(0+128),w
 14639  166F  00C8               	movwf	(_updateTemperatures$2154+1)^(0+128)
 14640  1670  0828               	movf	?_logf^(0+128),w
 14641  1671  00C7               	movwf	_updateTemperatures$2154^(0+128)
 14642                           
 14643                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14644  1672  083A               	movf	(_updateTemperatures$2150+3)^(0+128),w
 14645  1673  00AB               	movwf	(logf@x+3)^(0+128)
 14646  1674  0839               	movf	(_updateTemperatures$2150+2)^(0+128),w
 14647  1675  00AA               	movwf	(logf@x+2)^(0+128)
 14648  1676  0838               	movf	(_updateTemperatures$2150+1)^(0+128),w
 14649  1677  00A9               	movwf	(logf@x+1)^(0+128)
 14650  1678  0837               	movf	_updateTemperatures$2150^(0+128),w
 14651  1679  00A8               	movwf	logf@x^(0+128)
 14652  167A  3180  205E  3195   	fcall	_logf
 14653  167D  0021               	movlb	1	; select bank1
 14654  167E  082B               	movf	(?_logf+3)^(0+128),w
 14655  167F  00CE               	movwf	(_updateTemperatures$2155+3)^(0+128)
 14656  1680  082A               	movf	(?_logf+2)^(0+128),w
 14657  1681  00CD               	movwf	(_updateTemperatures$2155+2)^(0+128)
 14658  1682  0829               	movf	(?_logf+1)^(0+128),w
 14659  1683  00CC               	movwf	(_updateTemperatures$2155+1)^(0+128)
 14660  1684  0828               	movf	?_logf^(0+128),w
 14661  1685  00CB               	movwf	_updateTemperatures$2155^(0+128)
 14662                           
 14663                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14664  1686  0846               	movf	(_updateTemperatures$2153+3)^(0+128),w
 14665  1687  0020               	movlb	0	; select bank0
 14666  1688  00A9               	movwf	___flmul@b+3
 14667  1689  0021               	movlb	1	; select bank1
 14668  168A  0845               	movf	(_updateTemperatures$2153+2)^(0+128),w
 14669  168B  0020               	movlb	0	; select bank0
 14670  168C  00A8               	movwf	___flmul@b+2
 14671  168D  0021               	movlb	1	; select bank1
 14672  168E  0844               	movf	(_updateTemperatures$2153+1)^(0+128),w
 14673  168F  0020               	movlb	0	; select bank0
 14674  1690  00A7               	movwf	___flmul@b+1
 14675  1691  0021               	movlb	1	; select bank1
 14676  1692  0843               	movf	_updateTemperatures$2153^(0+128),w
 14677  1693  0020               	movlb	0	; select bank0
 14678  1694  00A6               	movwf	___flmul@b
 14679  1695  0021               	movlb	1	; select bank1
 14680  1696  084A               	movf	(_updateTemperatures$2154+3)^(0+128),w
 14681  1697  0020               	movlb	0	; select bank0
 14682  1698  00AD               	movwf	___flmul@a+3
 14683  1699  0021               	movlb	1	; select bank1
 14684  169A  0849               	movf	(_updateTemperatures$2154+2)^(0+128),w
 14685  169B  0020               	movlb	0	; select bank0
 14686  169C  00AC               	movwf	___flmul@a+2
 14687  169D  0021               	movlb	1	; select bank1
 14688  169E  0848               	movf	(_updateTemperatures$2154+1)^(0+128),w
 14689  169F  0020               	movlb	0	; select bank0
 14690  16A0  00AB               	movwf	___flmul@a+1
 14691  16A1  0021               	movlb	1	; select bank1
 14692  16A2  0847               	movf	_updateTemperatures$2154^(0+128),w
 14693  16A3  0020               	movlb	0	; select bank0
 14694  16A4  00AA               	movwf	___flmul@a
 14695  16A5  3190  2023  3195   	fcall	___flmul
 14696  16A8  0020               	movlb	0	; select bank0
 14697  16A9  0829               	movf	?___flmul+3,w
 14698  16AA  0021               	movlb	1	; select bank1
 14699  16AB  00D2               	movwf	(_updateTemperatures$2156+3)^(0+128)
 14700  16AC  0020               	movlb	0	; select bank0
 14701  16AD  0828               	movf	?___flmul+2,w
 14702  16AE  0021               	movlb	1	; select bank1
 14703  16AF  00D1               	movwf	(_updateTemperatures$2156+2)^(0+128)
 14704  16B0  0020               	movlb	0	; select bank0
 14705  16B1  0827               	movf	?___flmul+1,w
 14706  16B2  0021               	movlb	1	; select bank1
 14707  16B3  00D0               	movwf	(_updateTemperatures$2156+1)^(0+128)
 14708  16B4  0020               	movlb	0	; select bank0
 14709  16B5  0826               	movf	?___flmul,w
 14710  16B6  0021               	movlb	1	; select bank1
 14711  16B7  00CF               	movwf	_updateTemperatures$2156^(0+128)
 14712                           
 14713                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14714  16B8  084E               	movf	(_updateTemperatures$2155+3)^(0+128),w
 14715  16B9  0020               	movlb	0	; select bank0
 14716  16BA  00A9               	movwf	___flmul@b+3
 14717  16BB  0021               	movlb	1	; select bank1
 14718  16BC  084D               	movf	(_updateTemperatures$2155+2)^(0+128),w
 14719  16BD  0020               	movlb	0	; select bank0
 14720  16BE  00A8               	movwf	___flmul@b+2
 14721  16BF  0021               	movlb	1	; select bank1
 14722  16C0  084C               	movf	(_updateTemperatures$2155+1)^(0+128),w
 14723  16C1  0020               	movlb	0	; select bank0
 14724  16C2  00A7               	movwf	___flmul@b+1
 14725  16C3  0021               	movlb	1	; select bank1
 14726  16C4  084B               	movf	_updateTemperatures$2155^(0+128),w
 14727  16C5  0020               	movlb	0	; select bank0
 14728  16C6  00A6               	movwf	___flmul@b
 14729  16C7  0021               	movlb	1	; select bank1
 14730  16C8  0852               	movf	(_updateTemperatures$2156+3)^(0+128),w
 14731  16C9  0020               	movlb	0	; select bank0
 14732  16CA  00AD               	movwf	___flmul@a+3
 14733  16CB  0021               	movlb	1	; select bank1
 14734  16CC  0851               	movf	(_updateTemperatures$2156+2)^(0+128),w
 14735  16CD  0020               	movlb	0	; select bank0
 14736  16CE  00AC               	movwf	___flmul@a+2
 14737  16CF  0021               	movlb	1	; select bank1
 14738  16D0  0850               	movf	(_updateTemperatures$2156+1)^(0+128),w
 14739  16D1  0020               	movlb	0	; select bank0
 14740  16D2  00AB               	movwf	___flmul@a+1
 14741  16D3  0021               	movlb	1	; select bank1
 14742  16D4  084F               	movf	_updateTemperatures$2156^(0+128),w
 14743  16D5  0020               	movlb	0	; select bank0
 14744  16D6  00AA               	movwf	___flmul@a
 14745  16D7  3190  2023  3195   	fcall	___flmul
 14746  16DA  0020               	movlb	0	; select bank0
 14747  16DB  0829               	movf	?___flmul+3,w
 14748  16DC  0021               	movlb	1	; select bank1
 14749  16DD  00D6               	movwf	(_updateTemperatures$2157+3)^(0+128)
 14750  16DE  0020               	movlb	0	; select bank0
 14751  16DF  0828               	movf	?___flmul+2,w
 14752  16E0  0021               	movlb	1	; select bank1
 14753  16E1  00D5               	movwf	(_updateTemperatures$2157+2)^(0+128)
 14754  16E2  0020               	movlb	0	; select bank0
 14755  16E3  0827               	movf	?___flmul+1,w
 14756  16E4  0021               	movlb	1	; select bank1
 14757  16E5  00D4               	movwf	(_updateTemperatures$2157+1)^(0+128)
 14758  16E6  0020               	movlb	0	; select bank0
 14759  16E7  0826               	movf	?___flmul,w
 14760  16E8  0021               	movlb	1	; select bank1
 14761  16E9  00D3               	movwf	_updateTemperatures$2157^(0+128)
 14762                           
 14763                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14764  16EA  086E               	movf	(updateTemperatures@rts+3)^(0+128),w
 14765  16EB  00F4               	movwf	___xxtofl@val+3
 14766  16EC  086D               	movf	(updateTemperatures@rts+2)^(0+128),w
 14767  16ED  00F3               	movwf	___xxtofl@val+2
 14768  16EE  086C               	movf	(updateTemperatures@rts+1)^(0+128),w
 14769  16EF  00F2               	movwf	___xxtofl@val+1
 14770  16F0  086B               	movf	updateTemperatures@rts^(0+128),w
 14771  16F1  00F1               	movwf	___xxtofl@val
 14772  16F2  3000               	movlw	0
 14773  16F3  31AA  2241  3195   	fcall	___xxtofl
 14774  16F6  0874               	movf	?___xxtofl+3,w
 14775  16F7  0021               	movlb	1	; select bank1
 14776  16F8  00DA               	movwf	(_updateTemperatures$2158+3)^(0+128)
 14777  16F9  0873               	movf	?___xxtofl+2,w
 14778  16FA  00D9               	movwf	(_updateTemperatures$2158+2)^(0+128)
 14779  16FB  0872               	movf	?___xxtofl+1,w
 14780  16FC  00D8               	movwf	(_updateTemperatures$2158+1)^(0+128)
 14781  16FD  0871               	movf	?___xxtofl,w
 14782  16FE  00D7               	movwf	_updateTemperatures$2158^(0+128)
 14783                           
 14784                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14785  16FF  085A               	movf	(_updateTemperatures$2158+3)^(0+128),w
 14786  1700  00AB               	movwf	(logf@x+3)^(0+128)
 14787  1701  0859               	movf	(_updateTemperatures$2158+2)^(0+128),w
 14788  1702  00AA               	movwf	(logf@x+2)^(0+128)
 14789  1703  0858               	movf	(_updateTemperatures$2158+1)^(0+128),w
 14790  1704  00A9               	movwf	(logf@x+1)^(0+128)
 14791  1705  0857               	movf	_updateTemperatures$2158^(0+128),w
 14792  1706  00A8               	movwf	logf@x^(0+128)
 14793  1707  3180  205E  3195   	fcall	_logf
 14794  170A  0021               	movlb	1	; select bank1
 14795  170B  082B               	movf	(?_logf+3)^(0+128),w
 14796  170C  00DE               	movwf	(_updateTemperatures$2159+3)^(0+128)
 14797  170D  082A               	movf	(?_logf+2)^(0+128),w
 14798  170E  00DD               	movwf	(_updateTemperatures$2159+2)^(0+128)
 14799  170F  0829               	movf	(?_logf+1)^(0+128),w
 14800  1710  00DC               	movwf	(_updateTemperatures$2159+1)^(0+128)
 14801  1711  0828               	movf	?_logf^(0+128),w
 14802  1712  00DB               	movwf	_updateTemperatures$2159^(0+128)
 14803                           
 14804                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14805  1713  30BC               	movlw	188
 14806  1714  0020               	movlb	0	; select bank0
 14807  1715  00DD               	movwf	___fladd@b+3
 14808  1716  308E               	movlw	142
 14809  1717  00DC               	movwf	___fladd@b+2
 14810  1718  30C5               	movlw	197
 14811  1719  00DB               	movwf	___fladd@b+1
 14812  171A  3072               	movlw	114
 14813  171B  00DA               	movwf	___fladd@b
 14814  171C  303B               	movlw	59
 14815  171D  00A9               	movwf	___flmul@b+3
 14816  171E  304D               	movlw	77
 14817  171F  00A8               	movwf	___flmul@b+2
 14818  1720  3098               	movlw	152
 14819  1721  00A7               	movwf	___flmul@b+1
 14820  1722  3025               	movlw	37
 14821  1723  00A6               	movwf	___flmul@b
 14822  1724  0021               	movlb	1	; select bank1
 14823  1725  085E               	movf	(_updateTemperatures$2159+3)^(0+128),w
 14824  1726  0020               	movlb	0	; select bank0
 14825  1727  00AD               	movwf	___flmul@a+3
 14826  1728  0021               	movlb	1	; select bank1
 14827  1729  085D               	movf	(_updateTemperatures$2159+2)^(0+128),w
 14828  172A  0020               	movlb	0	; select bank0
 14829  172B  00AC               	movwf	___flmul@a+2
 14830  172C  0021               	movlb	1	; select bank1
 14831  172D  085C               	movf	(_updateTemperatures$2159+1)^(0+128),w
 14832  172E  0020               	movlb	0	; select bank0
 14833  172F  00AB               	movwf	___flmul@a+1
 14834  1730  0021               	movlb	1	; select bank1
 14835  1731  085B               	movf	_updateTemperatures$2159^(0+128),w
 14836  1732  0020               	movlb	0	; select bank0
 14837  1733  00AA               	movwf	___flmul@a
 14838  1734  3190  2023  3195   	fcall	___flmul
 14839  1737  0020               	movlb	0	; select bank0
 14840  1738  0829               	movf	?___flmul+3,w
 14841  1739  00E1               	movwf	___fladd@a+3
 14842  173A  0828               	movf	?___flmul+2,w
 14843  173B  00E0               	movwf	___fladd@a+2
 14844  173C  0827               	movf	?___flmul+1,w
 14845  173D  00DF               	movwf	___fladd@a+1
 14846  173E  0826               	movf	?___flmul,w
 14847  173F  00DE               	movwf	___fladd@a
 14848  1740  3185  25E8  3195   	fcall	___fladd
 14849  1743  0020               	movlb	0	; select bank0
 14850  1744  085D               	movf	?___fladd+3,w
 14851  1745  0021               	movlb	1	; select bank1
 14852  1746  00E2               	movwf	(_updateTemperatures$2160+3)^(0+128)
 14853  1747  0020               	movlb	0	; select bank0
 14854  1748  085C               	movf	?___fladd+2,w
 14855  1749  0021               	movlb	1	; select bank1
 14856  174A  00E1               	movwf	(_updateTemperatures$2160+2)^(0+128)
 14857  174B  0020               	movlb	0	; select bank0
 14858  174C  085B               	movf	?___fladd+1,w
 14859  174D  0021               	movlb	1	; select bank1
 14860  174E  00E0               	movwf	(_updateTemperatures$2160+1)^(0+128)
 14861  174F  0020               	movlb	0	; select bank0
 14862  1750  085A               	movf	?___fladd,w
 14863  1751  0021               	movlb	1	; select bank1
 14864  1752  00DF               	movwf	_updateTemperatures$2160^(0+128)
 14865                           
 14866                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14867  1753  30B7               	movlw	183
 14868  1754  0020               	movlb	0	; select bank0
 14869  1755  00A9               	movwf	___flmul@b+3
 14870  1756  302E               	movlw	46
 14871  1757  00A8               	movwf	___flmul@b+2
 14872  1758  302F               	movlw	47
 14873  1759  00A7               	movwf	___flmul@b+1
 14874  175A  3045               	movlw	69
 14875  175B  00A6               	movwf	___flmul@b
 14876  175C  0021               	movlb	1	; select bank1
 14877  175D  0856               	movf	(_updateTemperatures$2157+3)^(0+128),w
 14878  175E  0020               	movlb	0	; select bank0
 14879  175F  00AD               	movwf	___flmul@a+3
 14880  1760  0021               	movlb	1	; select bank1
 14881  1761  0855               	movf	(_updateTemperatures$2157+2)^(0+128),w
 14882  1762  0020               	movlb	0	; select bank0
 14883  1763  00AC               	movwf	___flmul@a+2
 14884  1764  0021               	movlb	1	; select bank1
 14885  1765  0854               	movf	(_updateTemperatures$2157+1)^(0+128),w
 14886  1766  0020               	movlb	0	; select bank0
 14887  1767  00AB               	movwf	___flmul@a+1
 14888  1768  0021               	movlb	1	; select bank1
 14889  1769  0853               	movf	_updateTemperatures$2157^(0+128),w
 14890  176A  0020               	movlb	0	; select bank0
 14891  176B  00AA               	movwf	___flmul@a
 14892  176C  3190  2023  3195   	fcall	___flmul
 14893  176F  0020               	movlb	0	; select bank0
 14894  1770  0829               	movf	?___flmul+3,w
 14895  1771  00DD               	movwf	___fladd@b+3
 14896  1772  0828               	movf	?___flmul+2,w
 14897  1773  00DC               	movwf	___fladd@b+2
 14898  1774  0827               	movf	?___flmul+1,w
 14899  1775  00DB               	movwf	___fladd@b+1
 14900  1776  0826               	movf	?___flmul,w
 14901  1777  00DA               	movwf	___fladd@b
 14902  1778  0021               	movlb	1	; select bank1
 14903  1779  0862               	movf	(_updateTemperatures$2160+3)^(0+128),w
 14904  177A  0020               	movlb	0	; select bank0
 14905  177B  00E1               	movwf	___fladd@a+3
 14906  177C  0021               	movlb	1	; select bank1
 14907  177D  0861               	movf	(_updateTemperatures$2160+2)^(0+128),w
 14908  177E  0020               	movlb	0	; select bank0
 14909  177F  00E0               	movwf	___fladd@a+2
 14910  1780  0021               	movlb	1	; select bank1
 14911  1781  0860               	movf	(_updateTemperatures$2160+1)^(0+128),w
 14912  1782  0020               	movlb	0	; select bank0
 14913  1783  00DF               	movwf	___fladd@a+1
 14914  1784  0021               	movlb	1	; select bank1
 14915  1785  085F               	movf	_updateTemperatures$2160^(0+128),w
 14916  1786  0020               	movlb	0	; select bank0
 14917  1787  00DE               	movwf	___fladd@a
 14918  1788  3185  25E8  3195   	fcall	___fladd
 14919  178B  0020               	movlb	0	; select bank0
 14920  178C  085D               	movf	?___fladd+3,w
 14921  178D  00C3               	movwf	___fldiv@a+3
 14922  178E  085C               	movf	?___fladd+2,w
 14923  178F  00C2               	movwf	___fldiv@a+2
 14924  1790  085B               	movf	?___fladd+1,w
 14925  1791  00C1               	movwf	___fldiv@a+1
 14926  1792  085A               	movf	?___fladd,w
 14927  1793  00C0               	movwf	___fldiv@a
 14928  1794  303F               	movlw	63
 14929  1795  00C7               	movwf	___fldiv@b+3
 14930  1796  3080               	movlw	128
 14931  1797  00C6               	movwf	___fldiv@b+2
 14932  1798  3000               	movlw	0
 14933  1799  00C5               	movwf	___fldiv@b+1
 14934  179A  3000               	movlw	0
 14935  179B  00C4               	movwf	___fldiv@b
 14936  179C  319C  24E2  3195   	fcall	___fldiv
 14937  179F  0020               	movlb	0	; select bank0
 14938  17A0  0843               	movf	?___fldiv+3,w
 14939  17A1  0021               	movlb	1	; select bank1
 14940  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 14941  17A3  0020               	movlb	0	; select bank0
 14942  17A4  0842               	movf	?___fldiv+2,w
 14943  17A5  0021               	movlb	1	; select bank1
 14944  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 14945  17A7  0020               	movlb	0	; select bank0
 14946  17A8  0841               	movf	?___fldiv+1,w
 14947  17A9  0021               	movlb	1	; select bank1
 14948  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 14949  17AB  0020               	movlb	0	; select bank0
 14950  17AC  0840               	movf	?___fldiv,w
 14951  17AD  0021               	movlb	1	; select bank1
 14952  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 14953                           
 14954                           ;BQ76920.c: 284:      temperatureThermistor = (tmp - 273.15)*100;
 14955  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 14956  17B0  0020               	movlb	0	; select bank0
 14957  17B1  00E1               	movwf	___fladd@a+3
 14958  17B2  0021               	movlb	1	; select bank1
 14959  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 14960  17B4  0020               	movlb	0	; select bank0
 14961  17B5  00E0               	movwf	___fladd@a+2
 14962  17B6  0021               	movlb	1	; select bank1
 14963  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 14964  17B8  0020               	movlb	0	; select bank0
 14965  17B9  00DF               	movwf	___fladd@a+1
 14966  17BA  0021               	movlb	1	; select bank1
 14967  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 14968  17BC  0020               	movlb	0	; select bank0
 14969  17BD  00DE               	movwf	___fladd@a
 14970  17BE  30C3               	movlw	195
 14971  17BF  00DD               	movwf	___fladd@b+3
 14972  17C0  3088               	movlw	136
 14973  17C1  00DC               	movwf	___fladd@b+2
 14974  17C2  3093               	movlw	147
 14975  17C3  00DB               	movwf	___fladd@b+1
 14976  17C4  3033               	movlw	51
 14977  17C5  00DA               	movwf	___fladd@b
 14978  17C6  3185  25E8  3195   	fcall	___fladd
 14979  17C9  0020               	movlb	0	; select bank0
 14980  17CA  085D               	movf	?___fladd+3,w
 14981  17CB  00AD               	movwf	___flmul@a+3
 14982  17CC  085C               	movf	?___fladd+2,w
 14983  17CD  00AC               	movwf	___flmul@a+2
 14984  17CE  085B               	movf	?___fladd+1,w
 14985  17CF  00AB               	movwf	___flmul@a+1
 14986  17D0  085A               	movf	?___fladd,w
 14987  17D1  00AA               	movwf	___flmul@a
 14988  17D2  3042               	movlw	66
 14989  17D3  00A9               	movwf	___flmul@b+3
 14990  17D4  30C8               	movlw	200
 14991  17D5  00A8               	movwf	___flmul@b+2
 14992  17D6  3000               	movlw	0
 14993  17D7  00A7               	movwf	___flmul@b+1
 14994  17D8  3000               	movlw	0
 14995  17D9  00A6               	movwf	___flmul@b
 14996  17DA  3190  2023  3195   	fcall	___flmul
 14997  17DD  0020               	movlb	0	; select bank0
 14998  17DE  0829               	movf	?___flmul+3,w
 14999  17DF  0021               	movlb	1	; select bank1
 15000  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 15001  17E1  0020               	movlb	0	; select bank0
 15002  17E2  0828               	movf	?___flmul+2,w
 15003  17E3  0021               	movlb	1	; select bank1
 15004  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 15005  17E5  0020               	movlb	0	; select bank0
 15006  17E6  0827               	movf	?___flmul+1,w
 15007  17E7  0021               	movlb	1	; select bank1
 15008  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 15009  17E9  0020               	movlb	0	; select bank0
 15010  17EA  0826               	movf	?___flmul,w
 15011  17EB  0021               	movlb	1	; select bank1
 15012  17EC  00A8               	movwf	___fltol@f1^(0+128)
 15013  17ED  31B6  26B8         	fcall	___fltol
 15014  17EF  0021               	movlb	1	; select bank1
 15015  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 15016  17F1  0023               	movlb	3	; select bank3
 15017  17F2  00B5               	movwf	(_temperatureThermistor+3)^(0+384)
 15018  17F3  0021               	movlb	1	; select bank1
 15019  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 15020  17F5  0023               	movlb	3	; select bank3
 15021  17F6  00B4               	movwf	(_temperatureThermistor+2)^(0+384)
 15022  17F7  0021               	movlb	1	; select bank1
 15023  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 15024  17F9  0023               	movlb	3	; select bank3
 15025  17FA  00B3               	movwf	(_temperatureThermistor+1)^(0+384)
 15026  17FB  0021               	movlb	1	; select bank1
 15027  17FC  0828               	movf	?___fltol^(0+128),w
 15028  17FD  0023               	movlb	3	; select bank3
 15029  17FE  00B2               	movwf	_temperatureThermistor^(0+384)
 15030  17FF  0008               	return
 15031  1800                     __end_of_updateTemperatures:	
 15032                           
 15033                           	psect	text50
 15034  005E                     __ptext50:	
 15035 ;; *************** function _logf *****************
 15036 ;; Defined at:
 15037 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 15038 ;; Parameters:    Size  Location     Type
 15039 ;;  x               4    8[BANK1 ] float 
 15040 ;; Auto vars:     Size  Location     Type
 15041 ;;  ix              4   62[BANK2 ] unsigned long 
 15042 ;;  f               4   58[BANK2 ] float 
 15043 ;;  u               4   54[BANK2 ] struct .
 15044 ;;  w               4   46[BANK2 ] float 
 15045 ;;  z               4   42[BANK2 ] float 
 15046 ;;  s               4   38[BANK2 ] float 
 15047 ;;  dk              4   34[BANK2 ] float 
 15048 ;;  hfsq            4   30[BANK2 ] float 
 15049 ;;  t2              4    8[BANK2 ] float 
 15050 ;;  t1              4    4[BANK2 ] float 
 15051 ;;  R               4    0[BANK2 ] float 
 15052 ;;  k               2   28[BANK2 ] int 
 15053 ;; Return value:  Size  Location     Type
 15054 ;;                  4    8[BANK1 ] float 
 15055 ;; Registers used:
 15056 ;;		wreg, status,2, status,0, pclath, cstack
 15057 ;; Tracked objects:
 15058 ;;		On entry : 0/0
 15059 ;;		On exit  : 0/0
 15060 ;;		Unchanged: 0/0
 15061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15062 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15063 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15064 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15065 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15066 ;;Total ram usage:       78 bytes
 15067 ;; Hardware stack levels used:    1
 15068 ;; Hardware stack levels required when called:    3
 15069 ;; This function calls:
 15070 ;;		___fladd
 15071 ;;		___fldiv
 15072 ;;		___flmul
 15073 ;;		___flsub
 15074 ;;		___xxtofl
 15075 ;; This function is called by:
 15076 ;;		_updateTemperatures
 15077 ;; This function uses a non-reentrant model
 15078 ;;
 15079                           
 15080                           
 15081                           ;psect for function _logf
 15082  005E                     _logf:	
 15083                           
 15084                           ;incstack = 0
 15085                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 15086  005E  0023               	movlb	3	; select bank3
 15087  005F  082D               	movf	(logf@F469+3)^(0+384),w
 15088  0060  0022               	movlb	2	; select bank2
 15089  0061  00D9               	movwf	(logf@u+3)^(0+256)
 15090  0062  0023               	movlb	3	; select bank3
 15091  0063  082C               	movf	(logf@F469+2)^(0+384),w
 15092  0064  0022               	movlb	2	; select bank2
 15093  0065  00D8               	movwf	(logf@u+2)^(0+256)
 15094  0066  0023               	movlb	3	; select bank3
 15095  0067  082B               	movf	(logf@F469+1)^(0+384),w
 15096  0068  0022               	movlb	2	; select bank2
 15097  0069  00D7               	movwf	(logf@u+1)^(0+256)
 15098  006A  0023               	movlb	3	; select bank3
 15099  006B  082A               	movf	logf@F469^(0+384),w
 15100  006C  0022               	movlb	2	; select bank2
 15101  006D  00D6               	movwf	logf@u^(0+256)
 15102  006E  0021               	movlb	1	; select bank1
 15103  006F  082B               	movf	(logf@x+3)^(0+128),w
 15104  0070  0022               	movlb	2	; select bank2
 15105  0071  00D9               	movwf	(logf@u+3)^(0+256)
 15106  0072  0021               	movlb	1	; select bank1
 15107  0073  082A               	movf	(logf@x+2)^(0+128),w
 15108  0074  0022               	movlb	2	; select bank2
 15109  0075  00D8               	movwf	(logf@u+2)^(0+256)
 15110  0076  0021               	movlb	1	; select bank1
 15111  0077  0829               	movf	(logf@x+1)^(0+128),w
 15112  0078  0022               	movlb	2	; select bank2
 15113  0079  00D7               	movwf	(logf@u+1)^(0+256)
 15114  007A  0021               	movlb	1	; select bank1
 15115  007B  0828               	movf	logf@x^(0+128),w
 15116  007C  0022               	movlb	2	; select bank2
 15117  007D  00D6               	movwf	logf@u^(0+256)
 15118  007E  0859               	movf	(logf@u+3)^(0+256),w
 15119  007F  00E1               	movwf	(logf@ix+3)^(0+256)
 15120  0080  0858               	movf	(logf@u+2)^(0+256),w
 15121  0081  00E0               	movwf	(logf@ix+2)^(0+256)
 15122  0082  0857               	movf	(logf@u+1)^(0+256),w
 15123  0083  00DF               	movwf	(logf@ix+1)^(0+256)
 15124  0084  0856               	movf	logf@u^(0+256),w
 15125  0085  00DE               	movwf	logf@ix^(0+256)
 15126  0086  01BC               	clrf	logf@k^(0+256)
 15127  0087  01BD               	clrf	(logf@k+1)^(0+256)
 15128  0088  0861               	movf	(logf@ix+3)^(0+256),w
 15129  0089  1D03               	btfss	3,2
 15130  008A  288F               	goto	l5692
 15131  008B  3080               	movlw	128
 15132  008C  0260               	subwf	(logf@ix+2)^(0+256),w
 15133  008D  1C03               	btfss	3,0
 15134  008E  28AB               	goto	l5694
 15135  008F                     l5692:	
 15136  008F  085E               	movf	logf@ix^(0+256),w
 15137  0090  0021               	movlb	1	; select bank1
 15138  0091  00AC               	movwf	??_logf^(0+128)
 15139  0092  0022               	movlb	2	; select bank2
 15140  0093  085F               	movf	(logf@ix+1)^(0+256),w
 15141  0094  0021               	movlb	1	; select bank1
 15142  0095  00AD               	movwf	(??_logf^(0+128)+1)
 15143  0096  0022               	movlb	2	; select bank2
 15144  0097  0860               	movf	(logf@ix+2)^(0+256),w
 15145  0098  0021               	movlb	1	; select bank1
 15146  0099  00AE               	movwf	(??_logf^(0+128)+2)
 15147  009A  0022               	movlb	2	; select bank2
 15148  009B  0861               	movf	(logf@ix+3)^(0+256),w
 15149  009C  0021               	movlb	1	; select bank1
 15150  009D  00AF               	movwf	(??_logf^(0+128)+3)
 15151  009E  301F               	movlw	31
 15152  009F                     u7015:	
 15153  009F  36AF               	lsrf	(??_logf^(0+128)+3),f
 15154  00A0  0CAE               	rrf	(??_logf^(0+128)+2),f
 15155  00A1  0CAD               	rrf	(??_logf^(0+128)+1),f
 15156  00A2  0CAC               	rrf	??_logf^(0+128),f
 15157  00A3  0B89               	decfsz	9,f
 15158  00A4  289F               	goto	u7015
 15159  00A5  082F               	movf	(??_logf+3)^(0+128),w
 15160  00A6  042E               	iorwf	(??_logf+2)^(0+128),w
 15161  00A7  042D               	iorwf	(??_logf+1)^(0+128),w
 15162  00A8  042C               	iorwf	??_logf^(0+128),w
 15163  00A9  1903               	skipnz
 15164  00AA  29B4               	goto	l5714
 15165  00AB                     l5694:	
 15166  00AB  0022               	movlb	2	; select bank2
 15167  00AC  085E               	movf	logf@ix^(0+256),w
 15168  00AD  0021               	movlb	1	; select bank1
 15169  00AE  00AC               	movwf	??_logf^(0+128)
 15170  00AF  0022               	movlb	2	; select bank2
 15171  00B0  085F               	movf	(logf@ix+1)^(0+256),w
 15172  00B1  0021               	movlb	1	; select bank1
 15173  00B2  00AD               	movwf	(??_logf^(0+128)+1)
 15174  00B3  0022               	movlb	2	; select bank2
 15175  00B4  0860               	movf	(logf@ix+2)^(0+256),w
 15176  00B5  0021               	movlb	1	; select bank1
 15177  00B6  00AE               	movwf	(??_logf^(0+128)+2)
 15178  00B7  0022               	movlb	2	; select bank2
 15179  00B8  0861               	movf	(logf@ix+3)^(0+256),w
 15180  00B9  0021               	movlb	1	; select bank1
 15181  00BA  00AF               	movwf	(??_logf^(0+128)+3)
 15182  00BB  3001               	movlw	1
 15183  00BC                     u7035:	
 15184  00BC  35AC               	lslf	??_logf^(0+128),f
 15185  00BD  0DAD               	rlf	(??_logf^(0+128)+1),f
 15186  00BE  0DAE               	rlf	(??_logf^(0+128)+2),f
 15187  00BF  0DAF               	rlf	(??_logf^(0+128)+3),f
 15188  00C0  0B89               	decfsz	9,f
 15189  00C1  28BC               	goto	u7035
 15190  00C2  082F               	movf	(??_logf+3)^(0+128),w
 15191  00C3  042E               	iorwf	(??_logf+2)^(0+128),w
 15192  00C4  042D               	iorwf	(??_logf+1)^(0+128),w
 15193  00C5  042C               	iorwf	??_logf^(0+128),w
 15194  00C6  1D03               	skipz
 15195  00C7  290E               	goto	l5700
 15196  00C8  082B               	movf	(logf@x+3)^(0+128),w
 15197  00C9  0020               	movlb	0	; select bank0
 15198  00CA  00A9               	movwf	___flmul@b+3
 15199  00CB  0021               	movlb	1	; select bank1
 15200  00CC  082A               	movf	(logf@x+2)^(0+128),w
 15201  00CD  0020               	movlb	0	; select bank0
 15202  00CE  00A8               	movwf	___flmul@b+2
 15203  00CF  0021               	movlb	1	; select bank1
 15204  00D0  0829               	movf	(logf@x+1)^(0+128),w
 15205  00D1  0020               	movlb	0	; select bank0
 15206  00D2  00A7               	movwf	___flmul@b+1
 15207  00D3  0021               	movlb	1	; select bank1
 15208  00D4  0828               	movf	logf@x^(0+128),w
 15209  00D5  0020               	movlb	0	; select bank0
 15210  00D6  00A6               	movwf	___flmul@b
 15211  00D7  0021               	movlb	1	; select bank1
 15212  00D8  082B               	movf	(logf@x+3)^(0+128),w
 15213  00D9  0020               	movlb	0	; select bank0
 15214  00DA  00AD               	movwf	___flmul@a+3
 15215  00DB  0021               	movlb	1	; select bank1
 15216  00DC  082A               	movf	(logf@x+2)^(0+128),w
 15217  00DD  0020               	movlb	0	; select bank0
 15218  00DE  00AC               	movwf	___flmul@a+2
 15219  00DF  0021               	movlb	1	; select bank1
 15220  00E0  0829               	movf	(logf@x+1)^(0+128),w
 15221  00E1  0020               	movlb	0	; select bank0
 15222  00E2  00AB               	movwf	___flmul@a+1
 15223  00E3  0021               	movlb	1	; select bank1
 15224  00E4  0828               	movf	logf@x^(0+128),w
 15225  00E5  0020               	movlb	0	; select bank0
 15226  00E6  00AA               	movwf	___flmul@a
 15227  00E7  3190  2023  3180   	fcall	___flmul
 15228  00EA  0020               	movlb	0	; select bank0
 15229  00EB  0829               	movf	?___flmul+3,w
 15230  00EC  00C3               	movwf	___fldiv@a+3
 15231  00ED  0828               	movf	?___flmul+2,w
 15232  00EE  00C2               	movwf	___fldiv@a+2
 15233  00EF  0827               	movf	?___flmul+1,w
 15234  00F0  00C1               	movwf	___fldiv@a+1
 15235  00F1  0826               	movf	?___flmul,w
 15236  00F2  00C0               	movwf	___fldiv@a
 15237  00F3  30BF               	movlw	191
 15238  00F4  00C7               	movwf	___fldiv@b+3
 15239  00F5  3080               	movlw	128
 15240  00F6  00C6               	movwf	___fldiv@b+2
 15241  00F7  3000               	movlw	0
 15242  00F8  00C5               	movwf	___fldiv@b+1
 15243  00F9  3000               	movlw	0
 15244  00FA  00C4               	movwf	___fldiv@b
 15245  00FB  319C  24E2         	fcall	___fldiv
 15246  00FD  0020               	movlb	0	; select bank0
 15247  00FE  0843               	movf	?___fldiv+3,w
 15248  00FF  0021               	movlb	1	; select bank1
 15249  0100  00AB               	movwf	(?_logf+3)^(0+128)
 15250  0101  0020               	movlb	0	; select bank0
 15251  0102  0842               	movf	?___fldiv+2,w
 15252  0103  0021               	movlb	1	; select bank1
 15253  0104  00AA               	movwf	(?_logf+2)^(0+128)
 15254  0105  0020               	movlb	0	; select bank0
 15255  0106  0841               	movf	?___fldiv+1,w
 15256  0107  0021               	movlb	1	; select bank1
 15257  0108  00A9               	movwf	(?_logf+1)^(0+128)
 15258  0109  0020               	movlb	0	; select bank0
 15259  010A  0840               	movf	?___fldiv,w
 15260  010B  0021               	movlb	1	; select bank1
 15261  010C  00A8               	movwf	?_logf^(0+128)
 15262  010D  0008               	return
 15263  010E                     l5700:	
 15264  010E  0022               	movlb	2	; select bank2
 15265  010F  085E               	movf	logf@ix^(0+256),w
 15266  0110  0021               	movlb	1	; select bank1
 15267  0111  00AC               	movwf	??_logf^(0+128)
 15268  0112  0022               	movlb	2	; select bank2
 15269  0113  085F               	movf	(logf@ix+1)^(0+256),w
 15270  0114  0021               	movlb	1	; select bank1
 15271  0115  00AD               	movwf	(??_logf^(0+128)+1)
 15272  0116  0022               	movlb	2	; select bank2
 15273  0117  0860               	movf	(logf@ix+2)^(0+256),w
 15274  0118  0021               	movlb	1	; select bank1
 15275  0119  00AE               	movwf	(??_logf^(0+128)+2)
 15276  011A  0022               	movlb	2	; select bank2
 15277  011B  0861               	movf	(logf@ix+3)^(0+256),w
 15278  011C  0021               	movlb	1	; select bank1
 15279  011D  00AF               	movwf	(??_logf^(0+128)+3)
 15280  011E  301F               	movlw	31
 15281  011F                     u7055:	
 15282  011F  36AF               	lsrf	(??_logf^(0+128)+3),f
 15283  0120  0CAE               	rrf	(??_logf^(0+128)+2),f
 15284  0121  0CAD               	rrf	(??_logf^(0+128)+1),f
 15285  0122  0CAC               	rrf	??_logf^(0+128),f
 15286  0123  0B89               	decfsz	9,f
 15287  0124  291F               	goto	u7055
 15288  0125  082F               	movf	(??_logf+3)^(0+128),w
 15289  0126  042E               	iorwf	(??_logf+2)^(0+128),w
 15290  0127  042D               	iorwf	(??_logf+1)^(0+128),w
 15291  0128  042C               	iorwf	??_logf^(0+128),w
 15292  0129  1903               	skipnz
 15293  012A  296B               	goto	l5706
 15294  012B  3000               	movlw	0
 15295  012C  0020               	movlb	0	; select bank0
 15296  012D  00C3               	movwf	___fldiv@a+3
 15297  012E  3000               	movlw	0
 15298  012F  00C2               	movwf	___fldiv@a+2
 15299  0130  3000               	movlw	0
 15300  0131  00C1               	movwf	___fldiv@a+1
 15301  0132  3000               	movlw	0
 15302  0133  00C0               	movwf	___fldiv@a
 15303  0134  0021               	movlb	1	; select bank1
 15304  0135  082B               	movf	(logf@x+3)^(0+128),w
 15305  0136  00A3               	movwf	(___flsub@a+3)^(0+128)
 15306  0137  082A               	movf	(logf@x+2)^(0+128),w
 15307  0138  00A2               	movwf	(___flsub@a+2)^(0+128)
 15308  0139  0829               	movf	(logf@x+1)^(0+128),w
 15309  013A  00A1               	movwf	(___flsub@a+1)^(0+128)
 15310  013B  0828               	movf	logf@x^(0+128),w
 15311  013C  00A0               	movwf	___flsub@a^(0+128)
 15312  013D  082B               	movf	(logf@x+3)^(0+128),w
 15313  013E  00A7               	movwf	(___flsub@b+3)^(0+128)
 15314  013F  082A               	movf	(logf@x+2)^(0+128),w
 15315  0140  00A6               	movwf	(___flsub@b+2)^(0+128)
 15316  0141  0829               	movf	(logf@x+1)^(0+128),w
 15317  0142  00A5               	movwf	(___flsub@b+1)^(0+128)
 15318  0143  0828               	movf	logf@x^(0+128),w
 15319  0144  00A4               	movwf	___flsub@b^(0+128)
 15320  0145  31B4  2485  3180   	fcall	___flsub
 15321  0148  0021               	movlb	1	; select bank1
 15322  0149  0823               	movf	(?___flsub+3)^(0+128),w
 15323  014A  0020               	movlb	0	; select bank0
 15324  014B  00C7               	movwf	___fldiv@b+3
 15325  014C  0021               	movlb	1	; select bank1
 15326  014D  0822               	movf	(?___flsub+2)^(0+128),w
 15327  014E  0020               	movlb	0	; select bank0
 15328  014F  00C6               	movwf	___fldiv@b+2
 15329  0150  0021               	movlb	1	; select bank1
 15330  0151  0821               	movf	(?___flsub+1)^(0+128),w
 15331  0152  0020               	movlb	0	; select bank0
 15332  0153  00C5               	movwf	___fldiv@b+1
 15333  0154  0021               	movlb	1	; select bank1
 15334  0155  0820               	movf	?___flsub^(0+128),w
 15335  0156  0020               	movlb	0	; select bank0
 15336  0157  00C4               	movwf	___fldiv@b
 15337  0158  319C  24E2         	fcall	___fldiv
 15338  015A  0020               	movlb	0	; select bank0
 15339  015B  0843               	movf	?___fldiv+3,w
 15340  015C  0021               	movlb	1	; select bank1
 15341  015D  00AB               	movwf	(?_logf+3)^(0+128)
 15342  015E  0020               	movlb	0	; select bank0
 15343  015F  0842               	movf	?___fldiv+2,w
 15344  0160  0021               	movlb	1	; select bank1
 15345  0161  00AA               	movwf	(?_logf+2)^(0+128)
 15346  0162  0020               	movlb	0	; select bank0
 15347  0163  0841               	movf	?___fldiv+1,w
 15348  0164  0021               	movlb	1	; select bank1
 15349  0165  00A9               	movwf	(?_logf+1)^(0+128)
 15350  0166  0020               	movlb	0	; select bank0
 15351  0167  0840               	movf	?___fldiv,w
 15352  0168  0021               	movlb	1	; select bank1
 15353  0169  00A8               	movwf	?_logf^(0+128)
 15354  016A  0008               	return
 15355  016B                     l5706:	
 15356  016B  30E7               	movlw	231
 15357  016C  0022               	movlb	2	; select bank2
 15358  016D  07BC               	addwf	logf@k^(0+256),f
 15359  016E  30FF               	movlw	255
 15360  016F  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15361  0170  304C               	movlw	76
 15362  0171  0020               	movlb	0	; select bank0
 15363  0172  00A9               	movwf	___flmul@b+3
 15364  0173  3000               	movlw	0
 15365  0174  00A8               	movwf	___flmul@b+2
 15366  0175  3000               	movlw	0
 15367  0176  00A7               	movwf	___flmul@b+1
 15368  0177  3000               	movlw	0
 15369  0178  00A6               	movwf	___flmul@b
 15370  0179  0021               	movlb	1	; select bank1
 15371  017A  082B               	movf	(logf@x+3)^(0+128),w
 15372  017B  0020               	movlb	0	; select bank0
 15373  017C  00AD               	movwf	___flmul@a+3
 15374  017D  0021               	movlb	1	; select bank1
 15375  017E  082A               	movf	(logf@x+2)^(0+128),w
 15376  017F  0020               	movlb	0	; select bank0
 15377  0180  00AC               	movwf	___flmul@a+2
 15378  0181  0021               	movlb	1	; select bank1
 15379  0182  0829               	movf	(logf@x+1)^(0+128),w
 15380  0183  0020               	movlb	0	; select bank0
 15381  0184  00AB               	movwf	___flmul@a+1
 15382  0185  0021               	movlb	1	; select bank1
 15383  0186  0828               	movf	logf@x^(0+128),w
 15384  0187  0020               	movlb	0	; select bank0
 15385  0188  00AA               	movwf	___flmul@a
 15386  0189  3190  2023  3180   	fcall	___flmul
 15387  018C  0020               	movlb	0	; select bank0
 15388  018D  0829               	movf	?___flmul+3,w
 15389  018E  0021               	movlb	1	; select bank1
 15390  018F  00AB               	movwf	(logf@x+3)^(0+128)
 15391  0190  0020               	movlb	0	; select bank0
 15392  0191  0828               	movf	?___flmul+2,w
 15393  0192  0021               	movlb	1	; select bank1
 15394  0193  00AA               	movwf	(logf@x+2)^(0+128)
 15395  0194  0020               	movlb	0	; select bank0
 15396  0195  0827               	movf	?___flmul+1,w
 15397  0196  0021               	movlb	1	; select bank1
 15398  0197  00A9               	movwf	(logf@x+1)^(0+128)
 15399  0198  0020               	movlb	0	; select bank0
 15400  0199  0826               	movf	?___flmul,w
 15401  019A  0021               	movlb	1	; select bank1
 15402  019B  00A8               	movwf	logf@x^(0+128)
 15403  019C  082B               	movf	(logf@x+3)^(0+128),w
 15404  019D  0022               	movlb	2	; select bank2
 15405  019E  00D9               	movwf	(logf@u+3)^(0+256)
 15406  019F  0021               	movlb	1	; select bank1
 15407  01A0  082A               	movf	(logf@x+2)^(0+128),w
 15408  01A1  0022               	movlb	2	; select bank2
 15409  01A2  00D8               	movwf	(logf@u+2)^(0+256)
 15410  01A3  0021               	movlb	1	; select bank1
 15411  01A4  0829               	movf	(logf@x+1)^(0+128),w
 15412  01A5  0022               	movlb	2	; select bank2
 15413  01A6  00D7               	movwf	(logf@u+1)^(0+256)
 15414  01A7  0021               	movlb	1	; select bank1
 15415  01A8  0828               	movf	logf@x^(0+128),w
 15416  01A9  0022               	movlb	2	; select bank2
 15417  01AA  00D6               	movwf	logf@u^(0+256)
 15418  01AB  0859               	movf	(logf@u+3)^(0+256),w
 15419  01AC  00E1               	movwf	(logf@ix+3)^(0+256)
 15420  01AD  0858               	movf	(logf@u+2)^(0+256),w
 15421  01AE  00E0               	movwf	(logf@ix+2)^(0+256)
 15422  01AF  0857               	movf	(logf@u+1)^(0+256),w
 15423  01B0  00DF               	movwf	(logf@ix+1)^(0+256)
 15424  01B1  0856               	movf	logf@u^(0+256),w
 15425  01B2  00DE               	movwf	logf@ix^(0+256)
 15426  01B3  29CE               	goto	l5726
 15427  01B4                     l5714:	
 15428  01B4  3080               	movlw	128
 15429  01B5  0022               	movlb	2	; select bank2
 15430  01B6  0260               	subwf	(logf@ix+2)^(0+256),w
 15431  01B7  307F               	movlw	127
 15432  01B8  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15433  01B9  1803               	btfsc	3,0
 15434  01BA  0008               	return
 15435  01BB  3080               	movlw	128
 15436  01BC  0660               	xorwf	(logf@ix+2)^(0+256),w
 15437  01BD  303F               	movlw	63
 15438  01BE  1903               	skipnz
 15439  01BF  0661               	xorwf	(logf@ix+3)^(0+256),w
 15440  01C0  045E               	iorwf	logf@ix^(0+256),w
 15441  01C1  045F               	iorwf	(logf@ix+1)^(0+256),w
 15442  01C2  1D03               	btfss	3,2
 15443  01C3  29CE               	goto	l5726
 15444  01C4  3000               	movlw	0
 15445  01C5  0021               	movlb	1	; select bank1
 15446  01C6  00AB               	movwf	(?_logf+3)^(0+128)
 15447  01C7  3000               	movlw	0
 15448  01C8  00AA               	movwf	(?_logf+2)^(0+128)
 15449  01C9  3000               	movlw	0
 15450  01CA  00A9               	movwf	(?_logf+1)^(0+128)
 15451  01CB  3000               	movlw	0
 15452  01CC  00A8               	movwf	?_logf^(0+128)
 15453  01CD  0008               	return
 15454  01CE                     l5726:	
 15455  01CE  300D               	movlw	13
 15456  01CF  07DE               	addwf	logf@ix^(0+256),f
 15457  01D0  30FB               	movlw	251
 15458  01D1  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15459  01D2  304A               	movlw	74
 15460  01D3  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15461  01D4  3000               	movlw	0
 15462  01D5  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15463  01D6  085E               	movf	logf@ix^(0+256),w
 15464  01D7  0021               	movlb	1	; select bank1
 15465  01D8  00AC               	movwf	??_logf^(0+128)
 15466  01D9  0022               	movlb	2	; select bank2
 15467  01DA  085F               	movf	(logf@ix+1)^(0+256),w
 15468  01DB  0021               	movlb	1	; select bank1
 15469  01DC  00AD               	movwf	(??_logf^(0+128)+1)
 15470  01DD  0022               	movlb	2	; select bank2
 15471  01DE  0860               	movf	(logf@ix+2)^(0+256),w
 15472  01DF  0021               	movlb	1	; select bank1
 15473  01E0  00AE               	movwf	(??_logf^(0+128)+2)
 15474  01E1  0022               	movlb	2	; select bank2
 15475  01E2  0861               	movf	(logf@ix+3)^(0+256),w
 15476  01E3  0021               	movlb	1	; select bank1
 15477  01E4  00AF               	movwf	(??_logf^(0+128)+3)
 15478  01E5  3017               	movlw	23
 15479  01E6                     u7095:	
 15480  01E6  36AF               	lsrf	(??_logf^(0+128)+3),f
 15481  01E7  0CAE               	rrf	(??_logf^(0+128)+2),f
 15482  01E8  0CAD               	rrf	(??_logf^(0+128)+1),f
 15483  01E9  0CAC               	rrf	??_logf^(0+128),f
 15484  01EA  0B89               	decfsz	9,f
 15485  01EB  29E6               	goto	u7095
 15486  01EC  082C               	movf	??_logf^(0+128),w
 15487  01ED  3E81               	addlw	129
 15488  01EE  00B0               	movwf	(??_logf+4)^(0+128)
 15489  01EF  30FF               	movlw	255
 15490  01F0  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15491  01F1  00B1               	movwf	(??_logf+5)^(0+128)
 15492  01F2  0830               	movf	(??_logf+4)^(0+128),w
 15493  01F3  0022               	movlb	2	; select bank2
 15494  01F4  07BC               	addwf	logf@k^(0+256),f
 15495  01F5  0021               	movlb	1	; select bank1
 15496  01F6  0831               	movf	(??_logf+5)^(0+128),w
 15497  01F7  0022               	movlb	2	; select bank2
 15498  01F8  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15499  01F9  30F3               	movlw	243
 15500  01FA  0021               	movlb	1	; select bank1
 15501  01FB  00AC               	movwf	??_logf^(0+128)
 15502  01FC  3004               	movlw	4
 15503  01FD  00AD               	movwf	(??_logf^(0+128)+1)
 15504  01FE  3035               	movlw	53
 15505  01FF  00AE               	movwf	(??_logf^(0+128)+2)
 15506  0200  303F               	movlw	63
 15507  0201  00AF               	movwf	(??_logf^(0+128)+3)
 15508  0202  30FF               	movlw	255
 15509  0203  0022               	movlb	2	; select bank2
 15510  0204  055E               	andwf	logf@ix^(0+256),w
 15511  0205  0021               	movlb	1	; select bank1
 15512  0206  00B0               	movwf	(??_logf+4)^(0+128)
 15513  0207  30FF               	movlw	255
 15514  0208  0022               	movlb	2	; select bank2
 15515  0209  055F               	andwf	(logf@ix+1)^(0+256),w
 15516  020A  0021               	movlb	1	; select bank1
 15517  020B  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15518  020C  307F               	movlw	127
 15519  020D  0022               	movlb	2	; select bank2
 15520  020E  0560               	andwf	(logf@ix+2)^(0+256),w
 15521  020F  0021               	movlb	1	; select bank1
 15522  0210  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15523  0211  3000               	movlw	0
 15524  0212  0022               	movlb	2	; select bank2
 15525  0213  0561               	andwf	(logf@ix+3)^(0+256),w
 15526  0214  0021               	movlb	1	; select bank1
 15527  0215  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15528  0216  0830               	movf	(??_logf+4)^(0+128),w
 15529  0217  07AC               	addwf	??_logf^(0+128),f
 15530  0218  0831               	movf	(??_logf+5)^(0+128),w
 15531  0219  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15532  021A  0832               	movf	(??_logf+6)^(0+128),w
 15533  021B  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15534  021C  0833               	movf	(??_logf+7)^(0+128),w
 15535  021D  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15536  021E  082F               	movf	(??_logf+3)^(0+128),w
 15537  021F  0022               	movlb	2	; select bank2
 15538  0220  00E1               	movwf	(logf@ix+3)^(0+256)
 15539  0221  0021               	movlb	1	; select bank1
 15540  0222  082E               	movf	(??_logf+2)^(0+128),w
 15541  0223  0022               	movlb	2	; select bank2
 15542  0224  00E0               	movwf	(logf@ix+2)^(0+256)
 15543  0225  0021               	movlb	1	; select bank1
 15544  0226  082D               	movf	(??_logf+1)^(0+128),w
 15545  0227  0022               	movlb	2	; select bank2
 15546  0228  00DF               	movwf	(logf@ix+1)^(0+256)
 15547  0229  0021               	movlb	1	; select bank1
 15548  022A  082C               	movf	??_logf^(0+128),w
 15549  022B  0022               	movlb	2	; select bank2
 15550  022C  00DE               	movwf	logf@ix^(0+256)
 15551  022D  0861               	movf	(logf@ix+3)^(0+256),w
 15552  022E  00D9               	movwf	(logf@u+3)^(0+256)
 15553  022F  0860               	movf	(logf@ix+2)^(0+256),w
 15554  0230  00D8               	movwf	(logf@u+2)^(0+256)
 15555  0231  085F               	movf	(logf@ix+1)^(0+256),w
 15556  0232  00D7               	movwf	(logf@u+1)^(0+256)
 15557  0233  085E               	movf	logf@ix^(0+256),w
 15558  0234  00D6               	movwf	logf@u^(0+256)
 15559  0235  0859               	movf	(logf@u+3)^(0+256),w
 15560  0236  0021               	movlb	1	; select bank1
 15561  0237  00AB               	movwf	(logf@x+3)^(0+128)
 15562  0238  0022               	movlb	2	; select bank2
 15563  0239  0858               	movf	(logf@u+2)^(0+256),w
 15564  023A  0021               	movlb	1	; select bank1
 15565  023B  00AA               	movwf	(logf@x+2)^(0+128)
 15566  023C  0022               	movlb	2	; select bank2
 15567  023D  0857               	movf	(logf@u+1)^(0+256),w
 15568  023E  0021               	movlb	1	; select bank1
 15569  023F  00A9               	movwf	(logf@x+1)^(0+128)
 15570  0240  0022               	movlb	2	; select bank2
 15571  0241  0856               	movf	logf@u^(0+256),w
 15572  0242  0021               	movlb	1	; select bank1
 15573  0243  00A8               	movwf	logf@x^(0+128)
 15574  0244  30BF               	movlw	191
 15575  0245  0020               	movlb	0	; select bank0
 15576  0246  00DD               	movwf	___fladd@b+3
 15577  0247  3080               	movlw	128
 15578  0248  00DC               	movwf	___fladd@b+2
 15579  0249  3000               	movlw	0
 15580  024A  00DB               	movwf	___fladd@b+1
 15581  024B  3000               	movlw	0
 15582  024C  00DA               	movwf	___fladd@b
 15583  024D  0021               	movlb	1	; select bank1
 15584  024E  082B               	movf	(logf@x+3)^(0+128),w
 15585  024F  0020               	movlb	0	; select bank0
 15586  0250  00E1               	movwf	___fladd@a+3
 15587  0251  0021               	movlb	1	; select bank1
 15588  0252  082A               	movf	(logf@x+2)^(0+128),w
 15589  0253  0020               	movlb	0	; select bank0
 15590  0254  00E0               	movwf	___fladd@a+2
 15591  0255  0021               	movlb	1	; select bank1
 15592  0256  0829               	movf	(logf@x+1)^(0+128),w
 15593  0257  0020               	movlb	0	; select bank0
 15594  0258  00DF               	movwf	___fladd@a+1
 15595  0259  0021               	movlb	1	; select bank1
 15596  025A  0828               	movf	logf@x^(0+128),w
 15597  025B  0020               	movlb	0	; select bank0
 15598  025C  00DE               	movwf	___fladd@a
 15599  025D  3185  25E8  3180   	fcall	___fladd
 15600  0260  0020               	movlb	0	; select bank0
 15601  0261  085D               	movf	?___fladd+3,w
 15602  0262  0022               	movlb	2	; select bank2
 15603  0263  00DD               	movwf	(logf@f+3)^(0+256)
 15604  0264  0020               	movlb	0	; select bank0
 15605  0265  085C               	movf	?___fladd+2,w
 15606  0266  0022               	movlb	2	; select bank2
 15607  0267  00DC               	movwf	(logf@f+2)^(0+256)
 15608  0268  0020               	movlb	0	; select bank0
 15609  0269  085B               	movf	?___fladd+1,w
 15610  026A  0022               	movlb	2	; select bank2
 15611  026B  00DB               	movwf	(logf@f+1)^(0+256)
 15612  026C  0020               	movlb	0	; select bank0
 15613  026D  085A               	movf	?___fladd,w
 15614  026E  0022               	movlb	2	; select bank2
 15615  026F  00DA               	movwf	logf@f^(0+256)
 15616  0270  3040               	movlw	64
 15617  0271  0020               	movlb	0	; select bank0
 15618  0272  00DD               	movwf	___fladd@b+3
 15619  0273  3000               	movlw	0
 15620  0274  00DC               	movwf	___fladd@b+2
 15621  0275  3000               	movlw	0
 15622  0276  00DB               	movwf	___fladd@b+1
 15623  0277  3000               	movlw	0
 15624  0278  00DA               	movwf	___fladd@b
 15625  0279  0022               	movlb	2	; select bank2
 15626  027A  085D               	movf	(logf@f+3)^(0+256),w
 15627  027B  0020               	movlb	0	; select bank0
 15628  027C  00E1               	movwf	___fladd@a+3
 15629  027D  0022               	movlb	2	; select bank2
 15630  027E  085C               	movf	(logf@f+2)^(0+256),w
 15631  027F  0020               	movlb	0	; select bank0
 15632  0280  00E0               	movwf	___fladd@a+2
 15633  0281  0022               	movlb	2	; select bank2
 15634  0282  085B               	movf	(logf@f+1)^(0+256),w
 15635  0283  0020               	movlb	0	; select bank0
 15636  0284  00DF               	movwf	___fladd@a+1
 15637  0285  0022               	movlb	2	; select bank2
 15638  0286  085A               	movf	logf@f^(0+256),w
 15639  0287  0020               	movlb	0	; select bank0
 15640  0288  00DE               	movwf	___fladd@a
 15641  0289  3185  25E8  3180   	fcall	___fladd
 15642  028C  0020               	movlb	0	; select bank0
 15643  028D  085D               	movf	?___fladd+3,w
 15644  028E  00C3               	movwf	___fldiv@a+3
 15645  028F  085C               	movf	?___fladd+2,w
 15646  0290  00C2               	movwf	___fldiv@a+2
 15647  0291  085B               	movf	?___fladd+1,w
 15648  0292  00C1               	movwf	___fldiv@a+1
 15649  0293  085A               	movf	?___fladd,w
 15650  0294  00C0               	movwf	___fldiv@a
 15651  0295  0022               	movlb	2	; select bank2
 15652  0296  085D               	movf	(logf@f+3)^(0+256),w
 15653  0297  0020               	movlb	0	; select bank0
 15654  0298  00C7               	movwf	___fldiv@b+3
 15655  0299  0022               	movlb	2	; select bank2
 15656  029A  085C               	movf	(logf@f+2)^(0+256),w
 15657  029B  0020               	movlb	0	; select bank0
 15658  029C  00C6               	movwf	___fldiv@b+2
 15659  029D  0022               	movlb	2	; select bank2
 15660  029E  085B               	movf	(logf@f+1)^(0+256),w
 15661  029F  0020               	movlb	0	; select bank0
 15662  02A0  00C5               	movwf	___fldiv@b+1
 15663  02A1  0022               	movlb	2	; select bank2
 15664  02A2  085A               	movf	logf@f^(0+256),w
 15665  02A3  0020               	movlb	0	; select bank0
 15666  02A4  00C4               	movwf	___fldiv@b
 15667  02A5  319C  24E2  3180   	fcall	___fldiv
 15668  02A8  0020               	movlb	0	; select bank0
 15669  02A9  0843               	movf	?___fldiv+3,w
 15670  02AA  0022               	movlb	2	; select bank2
 15671  02AB  00C9               	movwf	(logf@s+3)^(0+256)
 15672  02AC  0020               	movlb	0	; select bank0
 15673  02AD  0842               	movf	?___fldiv+2,w
 15674  02AE  0022               	movlb	2	; select bank2
 15675  02AF  00C8               	movwf	(logf@s+2)^(0+256)
 15676  02B0  0020               	movlb	0	; select bank0
 15677  02B1  0841               	movf	?___fldiv+1,w
 15678  02B2  0022               	movlb	2	; select bank2
 15679  02B3  00C7               	movwf	(logf@s+1)^(0+256)
 15680  02B4  0020               	movlb	0	; select bank0
 15681  02B5  0840               	movf	?___fldiv,w
 15682  02B6  0022               	movlb	2	; select bank2
 15683  02B7  00C6               	movwf	logf@s^(0+256)
 15684  02B8  0849               	movf	(logf@s+3)^(0+256),w
 15685  02B9  0020               	movlb	0	; select bank0
 15686  02BA  00A9               	movwf	___flmul@b+3
 15687  02BB  0022               	movlb	2	; select bank2
 15688  02BC  0848               	movf	(logf@s+2)^(0+256),w
 15689  02BD  0020               	movlb	0	; select bank0
 15690  02BE  00A8               	movwf	___flmul@b+2
 15691  02BF  0022               	movlb	2	; select bank2
 15692  02C0  0847               	movf	(logf@s+1)^(0+256),w
 15693  02C1  0020               	movlb	0	; select bank0
 15694  02C2  00A7               	movwf	___flmul@b+1
 15695  02C3  0022               	movlb	2	; select bank2
 15696  02C4  0846               	movf	logf@s^(0+256),w
 15697  02C5  0020               	movlb	0	; select bank0
 15698  02C6  00A6               	movwf	___flmul@b
 15699  02C7  0022               	movlb	2	; select bank2
 15700  02C8  0849               	movf	(logf@s+3)^(0+256),w
 15701  02C9  0020               	movlb	0	; select bank0
 15702  02CA  00AD               	movwf	___flmul@a+3
 15703  02CB  0022               	movlb	2	; select bank2
 15704  02CC  0848               	movf	(logf@s+2)^(0+256),w
 15705  02CD  0020               	movlb	0	; select bank0
 15706  02CE  00AC               	movwf	___flmul@a+2
 15707  02CF  0022               	movlb	2	; select bank2
 15708  02D0  0847               	movf	(logf@s+1)^(0+256),w
 15709  02D1  0020               	movlb	0	; select bank0
 15710  02D2  00AB               	movwf	___flmul@a+1
 15711  02D3  0022               	movlb	2	; select bank2
 15712  02D4  0846               	movf	logf@s^(0+256),w
 15713  02D5  0020               	movlb	0	; select bank0
 15714  02D6  00AA               	movwf	___flmul@a
 15715  02D7  3190  2023  3180   	fcall	___flmul
 15716  02DA  0020               	movlb	0	; select bank0
 15717  02DB  0829               	movf	?___flmul+3,w
 15718  02DC  0022               	movlb	2	; select bank2
 15719  02DD  00CD               	movwf	(logf@z+3)^(0+256)
 15720  02DE  0020               	movlb	0	; select bank0
 15721  02DF  0828               	movf	?___flmul+2,w
 15722  02E0  0022               	movlb	2	; select bank2
 15723  02E1  00CC               	movwf	(logf@z+2)^(0+256)
 15724  02E2  0020               	movlb	0	; select bank0
 15725  02E3  0827               	movf	?___flmul+1,w
 15726  02E4  0022               	movlb	2	; select bank2
 15727  02E5  00CB               	movwf	(logf@z+1)^(0+256)
 15728  02E6  0020               	movlb	0	; select bank0
 15729  02E7  0826               	movf	?___flmul,w
 15730  02E8  0022               	movlb	2	; select bank2
 15731  02E9  00CA               	movwf	logf@z^(0+256)
 15732  02EA  084D               	movf	(logf@z+3)^(0+256),w
 15733  02EB  0020               	movlb	0	; select bank0
 15734  02EC  00A9               	movwf	___flmul@b+3
 15735  02ED  0022               	movlb	2	; select bank2
 15736  02EE  084C               	movf	(logf@z+2)^(0+256),w
 15737  02EF  0020               	movlb	0	; select bank0
 15738  02F0  00A8               	movwf	___flmul@b+2
 15739  02F1  0022               	movlb	2	; select bank2
 15740  02F2  084B               	movf	(logf@z+1)^(0+256),w
 15741  02F3  0020               	movlb	0	; select bank0
 15742  02F4  00A7               	movwf	___flmul@b+1
 15743  02F5  0022               	movlb	2	; select bank2
 15744  02F6  084A               	movf	logf@z^(0+256),w
 15745  02F7  0020               	movlb	0	; select bank0
 15746  02F8  00A6               	movwf	___flmul@b
 15747  02F9  0022               	movlb	2	; select bank2
 15748  02FA  084D               	movf	(logf@z+3)^(0+256),w
 15749  02FB  0020               	movlb	0	; select bank0
 15750  02FC  00AD               	movwf	___flmul@a+3
 15751  02FD  0022               	movlb	2	; select bank2
 15752  02FE  084C               	movf	(logf@z+2)^(0+256),w
 15753  02FF  0020               	movlb	0	; select bank0
 15754  0300  00AC               	movwf	___flmul@a+2
 15755  0301  0022               	movlb	2	; select bank2
 15756  0302  084B               	movf	(logf@z+1)^(0+256),w
 15757  0303  0020               	movlb	0	; select bank0
 15758  0304  00AB               	movwf	___flmul@a+1
 15759  0305  0022               	movlb	2	; select bank2
 15760  0306  084A               	movf	logf@z^(0+256),w
 15761  0307  0020               	movlb	0	; select bank0
 15762  0308  00AA               	movwf	___flmul@a
 15763  0309  3190  2023  3180   	fcall	___flmul
 15764  030C  0020               	movlb	0	; select bank0
 15765  030D  0829               	movf	?___flmul+3,w
 15766  030E  0022               	movlb	2	; select bank2
 15767  030F  00D1               	movwf	(logf@w+3)^(0+256)
 15768  0310  0020               	movlb	0	; select bank0
 15769  0311  0828               	movf	?___flmul+2,w
 15770  0312  0022               	movlb	2	; select bank2
 15771  0313  00D0               	movwf	(logf@w+2)^(0+256)
 15772  0314  0020               	movlb	0	; select bank0
 15773  0315  0827               	movf	?___flmul+1,w
 15774  0316  0022               	movlb	2	; select bank2
 15775  0317  00CF               	movwf	(logf@w+1)^(0+256)
 15776  0318  0020               	movlb	0	; select bank0
 15777  0319  0826               	movf	?___flmul,w
 15778  031A  0022               	movlb	2	; select bank2
 15779  031B  00CE               	movwf	logf@w^(0+256)
 15780  031C  303E               	movlw	62
 15781  031D  0020               	movlb	0	; select bank0
 15782  031E  00DD               	movwf	___fladd@b+3
 15783  031F  30CC               	movlw	204
 15784  0320  00DC               	movwf	___fladd@b+2
 15785  0321  30CE               	movlw	206
 15786  0322  00DB               	movwf	___fladd@b+1
 15787  0323  3013               	movlw	19
 15788  0324  00DA               	movwf	___fladd@b
 15789  0325  303E               	movlw	62
 15790  0326  00A9               	movwf	___flmul@b+3
 15791  0327  3078               	movlw	120
 15792  0328  00A8               	movwf	___flmul@b+2
 15793  0329  309E               	movlw	158
 15794  032A  00A7               	movwf	___flmul@b+1
 15795  032B  3026               	movlw	38
 15796  032C  00A6               	movwf	___flmul@b
 15797  032D  0022               	movlb	2	; select bank2
 15798  032E  0851               	movf	(logf@w+3)^(0+256),w
 15799  032F  0020               	movlb	0	; select bank0
 15800  0330  00AD               	movwf	___flmul@a+3
 15801  0331  0022               	movlb	2	; select bank2
 15802  0332  0850               	movf	(logf@w+2)^(0+256),w
 15803  0333  0020               	movlb	0	; select bank0
 15804  0334  00AC               	movwf	___flmul@a+2
 15805  0335  0022               	movlb	2	; select bank2
 15806  0336  084F               	movf	(logf@w+1)^(0+256),w
 15807  0337  0020               	movlb	0	; select bank0
 15808  0338  00AB               	movwf	___flmul@a+1
 15809  0339  0022               	movlb	2	; select bank2
 15810  033A  084E               	movf	logf@w^(0+256),w
 15811  033B  0020               	movlb	0	; select bank0
 15812  033C  00AA               	movwf	___flmul@a
 15813  033D  3190  2023  3180   	fcall	___flmul
 15814  0340  0020               	movlb	0	; select bank0
 15815  0341  0829               	movf	?___flmul+3,w
 15816  0342  00E1               	movwf	___fladd@a+3
 15817  0343  0828               	movf	?___flmul+2,w
 15818  0344  00E0               	movwf	___fladd@a+2
 15819  0345  0827               	movf	?___flmul+1,w
 15820  0346  00DF               	movwf	___fladd@a+1
 15821  0347  0826               	movf	?___flmul,w
 15822  0348  00DE               	movwf	___fladd@a
 15823  0349  3185  25E8  3180   	fcall	___fladd
 15824  034C  0020               	movlb	0	; select bank0
 15825  034D  085D               	movf	?___fladd+3,w
 15826  034E  0022               	movlb	2	; select bank2
 15827  034F  00D5               	movwf	(_logf$2161+3)^(0+256)
 15828  0350  0020               	movlb	0	; select bank0
 15829  0351  085C               	movf	?___fladd+2,w
 15830  0352  0022               	movlb	2	; select bank2
 15831  0353  00D4               	movwf	(_logf$2161+2)^(0+256)
 15832  0354  0020               	movlb	0	; select bank0
 15833  0355  085B               	movf	?___fladd+1,w
 15834  0356  0022               	movlb	2	; select bank2
 15835  0357  00D3               	movwf	(_logf$2161+1)^(0+256)
 15836  0358  0020               	movlb	0	; select bank0
 15837  0359  085A               	movf	?___fladd,w
 15838  035A  0022               	movlb	2	; select bank2
 15839  035B  00D2               	movwf	_logf$2161^(0+256)
 15840  035C  0851               	movf	(logf@w+3)^(0+256),w
 15841  035D  0020               	movlb	0	; select bank0
 15842  035E  00A9               	movwf	___flmul@b+3
 15843  035F  0022               	movlb	2	; select bank2
 15844  0360  0850               	movf	(logf@w+2)^(0+256),w
 15845  0361  0020               	movlb	0	; select bank0
 15846  0362  00A8               	movwf	___flmul@b+2
 15847  0363  0022               	movlb	2	; select bank2
 15848  0364  084F               	movf	(logf@w+1)^(0+256),w
 15849  0365  0020               	movlb	0	; select bank0
 15850  0366  00A7               	movwf	___flmul@b+1
 15851  0367  0022               	movlb	2	; select bank2
 15852  0368  084E               	movf	logf@w^(0+256),w
 15853  0369  0020               	movlb	0	; select bank0
 15854  036A  00A6               	movwf	___flmul@b
 15855  036B  0022               	movlb	2	; select bank2
 15856  036C  0855               	movf	(_logf$2161+3)^(0+256),w
 15857  036D  0020               	movlb	0	; select bank0
 15858  036E  00AD               	movwf	___flmul@a+3
 15859  036F  0022               	movlb	2	; select bank2
 15860  0370  0854               	movf	(_logf$2161+2)^(0+256),w
 15861  0371  0020               	movlb	0	; select bank0
 15862  0372  00AC               	movwf	___flmul@a+2
 15863  0373  0022               	movlb	2	; select bank2
 15864  0374  0853               	movf	(_logf$2161+1)^(0+256),w
 15865  0375  0020               	movlb	0	; select bank0
 15866  0376  00AB               	movwf	___flmul@a+1
 15867  0377  0022               	movlb	2	; select bank2
 15868  0378  0852               	movf	_logf$2161^(0+256),w
 15869  0379  0020               	movlb	0	; select bank0
 15870  037A  00AA               	movwf	___flmul@a
 15871  037B  3190  2023  3180   	fcall	___flmul
 15872  037E  0020               	movlb	0	; select bank0
 15873  037F  0829               	movf	?___flmul+3,w
 15874  0380  0022               	movlb	2	; select bank2
 15875  0381  00A7               	movwf	(logf@t1+3)^(0+256)
 15876  0382  0020               	movlb	0	; select bank0
 15877  0383  0828               	movf	?___flmul+2,w
 15878  0384  0022               	movlb	2	; select bank2
 15879  0385  00A6               	movwf	(logf@t1+2)^(0+256)
 15880  0386  0020               	movlb	0	; select bank0
 15881  0387  0827               	movf	?___flmul+1,w
 15882  0388  0022               	movlb	2	; select bank2
 15883  0389  00A5               	movwf	(logf@t1+1)^(0+256)
 15884  038A  0020               	movlb	0	; select bank0
 15885  038B  0826               	movf	?___flmul,w
 15886  038C  0022               	movlb	2	; select bank2
 15887  038D  00A4               	movwf	logf@t1^(0+256)
 15888  038E  303F               	movlw	63
 15889  038F  0020               	movlb	0	; select bank0
 15890  0390  00DD               	movwf	___fladd@b+3
 15891  0391  302A               	movlw	42
 15892  0392  00DC               	movwf	___fladd@b+2
 15893  0393  30AA               	movlw	170
 15894  0394  00DB               	movwf	___fladd@b+1
 15895  0395  30AA               	movlw	170
 15896  0396  00DA               	movwf	___fladd@b
 15897  0397  303E               	movlw	62
 15898  0398  00A9               	movwf	___flmul@b+3
 15899  0399  3091               	movlw	145
 15900  039A  00A8               	movwf	___flmul@b+2
 15901  039B  30E9               	movlw	233
 15902  039C  00A7               	movwf	___flmul@b+1
 15903  039D  30EE               	movlw	238
 15904  039E  00A6               	movwf	___flmul@b
 15905  039F  0022               	movlb	2	; select bank2
 15906  03A0  0851               	movf	(logf@w+3)^(0+256),w
 15907  03A1  0020               	movlb	0	; select bank0
 15908  03A2  00AD               	movwf	___flmul@a+3
 15909  03A3  0022               	movlb	2	; select bank2
 15910  03A4  0850               	movf	(logf@w+2)^(0+256),w
 15911  03A5  0020               	movlb	0	; select bank0
 15912  03A6  00AC               	movwf	___flmul@a+2
 15913  03A7  0022               	movlb	2	; select bank2
 15914  03A8  084F               	movf	(logf@w+1)^(0+256),w
 15915  03A9  0020               	movlb	0	; select bank0
 15916  03AA  00AB               	movwf	___flmul@a+1
 15917  03AB  0022               	movlb	2	; select bank2
 15918  03AC  084E               	movf	logf@w^(0+256),w
 15919  03AD  0020               	movlb	0	; select bank0
 15920  03AE  00AA               	movwf	___flmul@a
 15921  03AF  3190  2023  3180   	fcall	___flmul
 15922  03B2  0020               	movlb	0	; select bank0
 15923  03B3  0829               	movf	?___flmul+3,w
 15924  03B4  00E1               	movwf	___fladd@a+3
 15925  03B5  0828               	movf	?___flmul+2,w
 15926  03B6  00E0               	movwf	___fladd@a+2
 15927  03B7  0827               	movf	?___flmul+1,w
 15928  03B8  00DF               	movwf	___fladd@a+1
 15929  03B9  0826               	movf	?___flmul,w
 15930  03BA  00DE               	movwf	___fladd@a
 15931  03BB  3185  25E8  3180   	fcall	___fladd
 15932  03BE  0020               	movlb	0	; select bank0
 15933  03BF  085D               	movf	?___fladd+3,w
 15934  03C0  0022               	movlb	2	; select bank2
 15935  03C1  00D5               	movwf	(_logf$2161+3)^(0+256)
 15936  03C2  0020               	movlb	0	; select bank0
 15937  03C3  085C               	movf	?___fladd+2,w
 15938  03C4  0022               	movlb	2	; select bank2
 15939  03C5  00D4               	movwf	(_logf$2161+2)^(0+256)
 15940  03C6  0020               	movlb	0	; select bank0
 15941  03C7  085B               	movf	?___fladd+1,w
 15942  03C8  0022               	movlb	2	; select bank2
 15943  03C9  00D3               	movwf	(_logf$2161+1)^(0+256)
 15944  03CA  0020               	movlb	0	; select bank0
 15945  03CB  085A               	movf	?___fladd,w
 15946  03CC  0022               	movlb	2	; select bank2
 15947  03CD  00D2               	movwf	_logf$2161^(0+256)
 15948  03CE  084D               	movf	(logf@z+3)^(0+256),w
 15949  03CF  0020               	movlb	0	; select bank0
 15950  03D0  00A9               	movwf	___flmul@b+3
 15951  03D1  0022               	movlb	2	; select bank2
 15952  03D2  084C               	movf	(logf@z+2)^(0+256),w
 15953  03D3  0020               	movlb	0	; select bank0
 15954  03D4  00A8               	movwf	___flmul@b+2
 15955  03D5  0022               	movlb	2	; select bank2
 15956  03D6  084B               	movf	(logf@z+1)^(0+256),w
 15957  03D7  0020               	movlb	0	; select bank0
 15958  03D8  00A7               	movwf	___flmul@b+1
 15959  03D9  0022               	movlb	2	; select bank2
 15960  03DA  084A               	movf	logf@z^(0+256),w
 15961  03DB  0020               	movlb	0	; select bank0
 15962  03DC  00A6               	movwf	___flmul@b
 15963  03DD  0022               	movlb	2	; select bank2
 15964  03DE  0855               	movf	(_logf$2161+3)^(0+256),w
 15965  03DF  0020               	movlb	0	; select bank0
 15966  03E0  00AD               	movwf	___flmul@a+3
 15967  03E1  0022               	movlb	2	; select bank2
 15968  03E2  0854               	movf	(_logf$2161+2)^(0+256),w
 15969  03E3  0020               	movlb	0	; select bank0
 15970  03E4  00AC               	movwf	___flmul@a+2
 15971  03E5  0022               	movlb	2	; select bank2
 15972  03E6  0853               	movf	(_logf$2161+1)^(0+256),w
 15973  03E7  0020               	movlb	0	; select bank0
 15974  03E8  00AB               	movwf	___flmul@a+1
 15975  03E9  0022               	movlb	2	; select bank2
 15976  03EA  0852               	movf	_logf$2161^(0+256),w
 15977  03EB  0020               	movlb	0	; select bank0
 15978  03EC  00AA               	movwf	___flmul@a
 15979  03ED  3190  2023  3180   	fcall	___flmul
 15980  03F0  0020               	movlb	0	; select bank0
 15981  03F1  0829               	movf	?___flmul+3,w
 15982  03F2  0022               	movlb	2	; select bank2
 15983  03F3  00AB               	movwf	(logf@t2+3)^(0+256)
 15984  03F4  0020               	movlb	0	; select bank0
 15985  03F5  0828               	movf	?___flmul+2,w
 15986  03F6  0022               	movlb	2	; select bank2
 15987  03F7  00AA               	movwf	(logf@t2+2)^(0+256)
 15988  03F8  0020               	movlb	0	; select bank0
 15989  03F9  0827               	movf	?___flmul+1,w
 15990  03FA  0022               	movlb	2	; select bank2
 15991  03FB  00A9               	movwf	(logf@t2+1)^(0+256)
 15992  03FC  0020               	movlb	0	; select bank0
 15993  03FD  0826               	movf	?___flmul,w
 15994  03FE  0022               	movlb	2	; select bank2
 15995  03FF  00A8               	movwf	logf@t2^(0+256)
 15996  0400  0827               	movf	(logf@t1+3)^(0+256),w
 15997  0401  0020               	movlb	0	; select bank0
 15998  0402  00DD               	movwf	___fladd@b+3
 15999  0403  0022               	movlb	2	; select bank2
 16000  0404  0826               	movf	(logf@t1+2)^(0+256),w
 16001  0405  0020               	movlb	0	; select bank0
 16002  0406  00DC               	movwf	___fladd@b+2
 16003  0407  0022               	movlb	2	; select bank2
 16004  0408  0825               	movf	(logf@t1+1)^(0+256),w
 16005  0409  0020               	movlb	0	; select bank0
 16006  040A  00DB               	movwf	___fladd@b+1
 16007  040B  0022               	movlb	2	; select bank2
 16008  040C  0824               	movf	logf@t1^(0+256),w
 16009  040D  0020               	movlb	0	; select bank0
 16010  040E  00DA               	movwf	___fladd@b
 16011  040F  0022               	movlb	2	; select bank2
 16012  0410  082B               	movf	(logf@t2+3)^(0+256),w
 16013  0411  0020               	movlb	0	; select bank0
 16014  0412  00E1               	movwf	___fladd@a+3
 16015  0413  0022               	movlb	2	; select bank2
 16016  0414  082A               	movf	(logf@t2+2)^(0+256),w
 16017  0415  0020               	movlb	0	; select bank0
 16018  0416  00E0               	movwf	___fladd@a+2
 16019  0417  0022               	movlb	2	; select bank2
 16020  0418  0829               	movf	(logf@t2+1)^(0+256),w
 16021  0419  0020               	movlb	0	; select bank0
 16022  041A  00DF               	movwf	___fladd@a+1
 16023  041B  0022               	movlb	2	; select bank2
 16024  041C  0828               	movf	logf@t2^(0+256),w
 16025  041D  0020               	movlb	0	; select bank0
 16026  041E  00DE               	movwf	___fladd@a
 16027  041F  3185  25E8  3180   	fcall	___fladd
 16028  0422  0020               	movlb	0	; select bank0
 16029  0423  085D               	movf	?___fladd+3,w
 16030  0424  0022               	movlb	2	; select bank2
 16031  0425  00A3               	movwf	(logf@R+3)^(0+256)
 16032  0426  0020               	movlb	0	; select bank0
 16033  0427  085C               	movf	?___fladd+2,w
 16034  0428  0022               	movlb	2	; select bank2
 16035  0429  00A2               	movwf	(logf@R+2)^(0+256)
 16036  042A  0020               	movlb	0	; select bank0
 16037  042B  085B               	movf	?___fladd+1,w
 16038  042C  0022               	movlb	2	; select bank2
 16039  042D  00A1               	movwf	(logf@R+1)^(0+256)
 16040  042E  0020               	movlb	0	; select bank0
 16041  042F  085A               	movf	?___fladd,w
 16042  0430  0022               	movlb	2	; select bank2
 16043  0431  00A0               	movwf	logf@R^(0+256)
 16044  0432  303F               	movlw	63
 16045  0433  0020               	movlb	0	; select bank0
 16046  0434  00A9               	movwf	___flmul@b+3
 16047  0435  3000               	movlw	0
 16048  0436  00A8               	movwf	___flmul@b+2
 16049  0437  3000               	movlw	0
 16050  0438  00A7               	movwf	___flmul@b+1
 16051  0439  3000               	movlw	0
 16052  043A  00A6               	movwf	___flmul@b
 16053  043B  0022               	movlb	2	; select bank2
 16054  043C  085D               	movf	(logf@f+3)^(0+256),w
 16055  043D  0020               	movlb	0	; select bank0
 16056  043E  00AD               	movwf	___flmul@a+3
 16057  043F  0022               	movlb	2	; select bank2
 16058  0440  085C               	movf	(logf@f+2)^(0+256),w
 16059  0441  0020               	movlb	0	; select bank0
 16060  0442  00AC               	movwf	___flmul@a+2
 16061  0443  0022               	movlb	2	; select bank2
 16062  0444  085B               	movf	(logf@f+1)^(0+256),w
 16063  0445  0020               	movlb	0	; select bank0
 16064  0446  00AB               	movwf	___flmul@a+1
 16065  0447  0022               	movlb	2	; select bank2
 16066  0448  085A               	movf	logf@f^(0+256),w
 16067  0449  0020               	movlb	0	; select bank0
 16068  044A  00AA               	movwf	___flmul@a
 16069  044B  3190  2023  3180   	fcall	___flmul
 16070  044E  0020               	movlb	0	; select bank0
 16071  044F  0829               	movf	?___flmul+3,w
 16072  0450  0022               	movlb	2	; select bank2
 16073  0451  00D5               	movwf	(_logf$2161+3)^(0+256)
 16074  0452  0020               	movlb	0	; select bank0
 16075  0453  0828               	movf	?___flmul+2,w
 16076  0454  0022               	movlb	2	; select bank2
 16077  0455  00D4               	movwf	(_logf$2161+2)^(0+256)
 16078  0456  0020               	movlb	0	; select bank0
 16079  0457  0827               	movf	?___flmul+1,w
 16080  0458  0022               	movlb	2	; select bank2
 16081  0459  00D3               	movwf	(_logf$2161+1)^(0+256)
 16082  045A  0020               	movlb	0	; select bank0
 16083  045B  0826               	movf	?___flmul,w
 16084  045C  0022               	movlb	2	; select bank2
 16085  045D  00D2               	movwf	_logf$2161^(0+256)
 16086  045E  085D               	movf	(logf@f+3)^(0+256),w
 16087  045F  0020               	movlb	0	; select bank0
 16088  0460  00A9               	movwf	___flmul@b+3
 16089  0461  0022               	movlb	2	; select bank2
 16090  0462  085C               	movf	(logf@f+2)^(0+256),w
 16091  0463  0020               	movlb	0	; select bank0
 16092  0464  00A8               	movwf	___flmul@b+2
 16093  0465  0022               	movlb	2	; select bank2
 16094  0466  085B               	movf	(logf@f+1)^(0+256),w
 16095  0467  0020               	movlb	0	; select bank0
 16096  0468  00A7               	movwf	___flmul@b+1
 16097  0469  0022               	movlb	2	; select bank2
 16098  046A  085A               	movf	logf@f^(0+256),w
 16099  046B  0020               	movlb	0	; select bank0
 16100  046C  00A6               	movwf	___flmul@b
 16101  046D  0022               	movlb	2	; select bank2
 16102  046E  0855               	movf	(_logf$2161+3)^(0+256),w
 16103  046F  0020               	movlb	0	; select bank0
 16104  0470  00AD               	movwf	___flmul@a+3
 16105  0471  0022               	movlb	2	; select bank2
 16106  0472  0854               	movf	(_logf$2161+2)^(0+256),w
 16107  0473  0020               	movlb	0	; select bank0
 16108  0474  00AC               	movwf	___flmul@a+2
 16109  0475  0022               	movlb	2	; select bank2
 16110  0476  0853               	movf	(_logf$2161+1)^(0+256),w
 16111  0477  0020               	movlb	0	; select bank0
 16112  0478  00AB               	movwf	___flmul@a+1
 16113  0479  0022               	movlb	2	; select bank2
 16114  047A  0852               	movf	_logf$2161^(0+256),w
 16115  047B  0020               	movlb	0	; select bank0
 16116  047C  00AA               	movwf	___flmul@a
 16117  047D  3190  2023  3180   	fcall	___flmul
 16118  0480  0020               	movlb	0	; select bank0
 16119  0481  0829               	movf	?___flmul+3,w
 16120  0482  0022               	movlb	2	; select bank2
 16121  0483  00C1               	movwf	(logf@hfsq+3)^(0+256)
 16122  0484  0020               	movlb	0	; select bank0
 16123  0485  0828               	movf	?___flmul+2,w
 16124  0486  0022               	movlb	2	; select bank2
 16125  0487  00C0               	movwf	(logf@hfsq+2)^(0+256)
 16126  0488  0020               	movlb	0	; select bank0
 16127  0489  0827               	movf	?___flmul+1,w
 16128  048A  0022               	movlb	2	; select bank2
 16129  048B  00BF               	movwf	(logf@hfsq+1)^(0+256)
 16130  048C  0020               	movlb	0	; select bank0
 16131  048D  0826               	movf	?___flmul,w
 16132  048E  0022               	movlb	2	; select bank2
 16133  048F  00BE               	movwf	logf@hfsq^(0+256)
 16134  0490  083C               	movf	logf@k^(0+256),w
 16135  0491  00F1               	movwf	___xxtofl@val
 16136  0492  083D               	movf	(logf@k+1)^(0+256),w
 16137  0493  00F2               	movwf	___xxtofl@val+1
 16138  0494  0D89               	rlf	9,f
 16139  0495  3B89               	subwfb	9,f
 16140  0496  0989               	comf	9,f
 16141  0497  00F3               	movwf	___xxtofl@val+2
 16142  0498  00F4               	movwf	___xxtofl@val+3
 16143  0499  3001               	movlw	1
 16144  049A  31AA  2241  3180   	fcall	___xxtofl
 16145  049D  0874               	movf	?___xxtofl+3,w
 16146  049E  0022               	movlb	2	; select bank2
 16147  049F  00C5               	movwf	(logf@dk+3)^(0+256)
 16148  04A0  0873               	movf	?___xxtofl+2,w
 16149  04A1  00C4               	movwf	(logf@dk+2)^(0+256)
 16150  04A2  0872               	movf	?___xxtofl+1,w
 16151  04A3  00C3               	movwf	(logf@dk+1)^(0+256)
 16152  04A4  0871               	movf	?___xxtofl,w
 16153  04A5  00C2               	movwf	logf@dk^(0+256)
 16154  04A6  0849               	movf	(logf@s+3)^(0+256),w
 16155  04A7  0020               	movlb	0	; select bank0
 16156  04A8  00A9               	movwf	___flmul@b+3
 16157  04A9  0022               	movlb	2	; select bank2
 16158  04AA  0848               	movf	(logf@s+2)^(0+256),w
 16159  04AB  0020               	movlb	0	; select bank0
 16160  04AC  00A8               	movwf	___flmul@b+2
 16161  04AD  0022               	movlb	2	; select bank2
 16162  04AE  0847               	movf	(logf@s+1)^(0+256),w
 16163  04AF  0020               	movlb	0	; select bank0
 16164  04B0  00A7               	movwf	___flmul@b+1
 16165  04B1  0022               	movlb	2	; select bank2
 16166  04B2  0846               	movf	logf@s^(0+256),w
 16167  04B3  0020               	movlb	0	; select bank0
 16168  04B4  00A6               	movwf	___flmul@b
 16169  04B5  0022               	movlb	2	; select bank2
 16170  04B6  0823               	movf	(logf@R+3)^(0+256),w
 16171  04B7  0020               	movlb	0	; select bank0
 16172  04B8  00DD               	movwf	___fladd@b+3
 16173  04B9  0022               	movlb	2	; select bank2
 16174  04BA  0822               	movf	(logf@R+2)^(0+256),w
 16175  04BB  0020               	movlb	0	; select bank0
 16176  04BC  00DC               	movwf	___fladd@b+2
 16177  04BD  0022               	movlb	2	; select bank2
 16178  04BE  0821               	movf	(logf@R+1)^(0+256),w
 16179  04BF  0020               	movlb	0	; select bank0
 16180  04C0  00DB               	movwf	___fladd@b+1
 16181  04C1  0022               	movlb	2	; select bank2
 16182  04C2  0820               	movf	logf@R^(0+256),w
 16183  04C3  0020               	movlb	0	; select bank0
 16184  04C4  00DA               	movwf	___fladd@b
 16185  04C5  0022               	movlb	2	; select bank2
 16186  04C6  0841               	movf	(logf@hfsq+3)^(0+256),w
 16187  04C7  0020               	movlb	0	; select bank0
 16188  04C8  00E1               	movwf	___fladd@a+3
 16189  04C9  0022               	movlb	2	; select bank2
 16190  04CA  0840               	movf	(logf@hfsq+2)^(0+256),w
 16191  04CB  0020               	movlb	0	; select bank0
 16192  04CC  00E0               	movwf	___fladd@a+2
 16193  04CD  0022               	movlb	2	; select bank2
 16194  04CE  083F               	movf	(logf@hfsq+1)^(0+256),w
 16195  04CF  0020               	movlb	0	; select bank0
 16196  04D0  00DF               	movwf	___fladd@a+1
 16197  04D1  0022               	movlb	2	; select bank2
 16198  04D2  083E               	movf	logf@hfsq^(0+256),w
 16199  04D3  0020               	movlb	0	; select bank0
 16200  04D4  00DE               	movwf	___fladd@a
 16201  04D5  3185  25E8  3180   	fcall	___fladd
 16202  04D8  0020               	movlb	0	; select bank0
 16203  04D9  085D               	movf	?___fladd+3,w
 16204  04DA  00AD               	movwf	___flmul@a+3
 16205  04DB  085C               	movf	?___fladd+2,w
 16206  04DC  00AC               	movwf	___flmul@a+2
 16207  04DD  085B               	movf	?___fladd+1,w
 16208  04DE  00AB               	movwf	___flmul@a+1
 16209  04DF  085A               	movf	?___fladd,w
 16210  04E0  00AA               	movwf	___flmul@a
 16211  04E1  3190  2023  3180   	fcall	___flmul
 16212  04E4  0020               	movlb	0	; select bank0
 16213  04E5  0829               	movf	?___flmul+3,w
 16214  04E6  0022               	movlb	2	; select bank2
 16215  04E7  00AF               	movwf	(_logf$2162+3)^(0+256)
 16216  04E8  0020               	movlb	0	; select bank0
 16217  04E9  0828               	movf	?___flmul+2,w
 16218  04EA  0022               	movlb	2	; select bank2
 16219  04EB  00AE               	movwf	(_logf$2162+2)^(0+256)
 16220  04EC  0020               	movlb	0	; select bank0
 16221  04ED  0827               	movf	?___flmul+1,w
 16222  04EE  0022               	movlb	2	; select bank2
 16223  04EF  00AD               	movwf	(_logf$2162+1)^(0+256)
 16224  04F0  0020               	movlb	0	; select bank0
 16225  04F1  0826               	movf	?___flmul,w
 16226  04F2  0022               	movlb	2	; select bank2
 16227  04F3  00AC               	movwf	_logf$2162^(0+256)
 16228  04F4  3037               	movlw	55
 16229  04F5  0020               	movlb	0	; select bank0
 16230  04F6  00A9               	movwf	___flmul@b+3
 16231  04F7  3017               	movlw	23
 16232  04F8  00A8               	movwf	___flmul@b+2
 16233  04F9  30F7               	movlw	247
 16234  04FA  00A7               	movwf	___flmul@b+1
 16235  04FB  30D1               	movlw	209
 16236  04FC  00A6               	movwf	___flmul@b
 16237  04FD  0022               	movlb	2	; select bank2
 16238  04FE  0845               	movf	(logf@dk+3)^(0+256),w
 16239  04FF  0020               	movlb	0	; select bank0
 16240  0500  00AD               	movwf	___flmul@a+3
 16241  0501  0022               	movlb	2	; select bank2
 16242  0502  0844               	movf	(logf@dk+2)^(0+256),w
 16243  0503  0020               	movlb	0	; select bank0
 16244  0504  00AC               	movwf	___flmul@a+2
 16245  0505  0022               	movlb	2	; select bank2
 16246  0506  0843               	movf	(logf@dk+1)^(0+256),w
 16247  0507  0020               	movlb	0	; select bank0
 16248  0508  00AB               	movwf	___flmul@a+1
 16249  0509  0022               	movlb	2	; select bank2
 16250  050A  0842               	movf	logf@dk^(0+256),w
 16251  050B  0020               	movlb	0	; select bank0
 16252  050C  00AA               	movwf	___flmul@a
 16253  050D  3190  2023  3180   	fcall	___flmul
 16254  0510  0020               	movlb	0	; select bank0
 16255  0511  0829               	movf	?___flmul+3,w
 16256  0512  00DD               	movwf	___fladd@b+3
 16257  0513  0828               	movf	?___flmul+2,w
 16258  0514  00DC               	movwf	___fladd@b+2
 16259  0515  0827               	movf	?___flmul+1,w
 16260  0516  00DB               	movwf	___fladd@b+1
 16261  0517  0826               	movf	?___flmul,w
 16262  0518  00DA               	movwf	___fladd@b
 16263  0519  0022               	movlb	2	; select bank2
 16264  051A  082F               	movf	(_logf$2162+3)^(0+256),w
 16265  051B  0020               	movlb	0	; select bank0
 16266  051C  00E1               	movwf	___fladd@a+3
 16267  051D  0022               	movlb	2	; select bank2
 16268  051E  082E               	movf	(_logf$2162+2)^(0+256),w
 16269  051F  0020               	movlb	0	; select bank0
 16270  0520  00E0               	movwf	___fladd@a+2
 16271  0521  0022               	movlb	2	; select bank2
 16272  0522  082D               	movf	(_logf$2162+1)^(0+256),w
 16273  0523  0020               	movlb	0	; select bank0
 16274  0524  00DF               	movwf	___fladd@a+1
 16275  0525  0022               	movlb	2	; select bank2
 16276  0526  082C               	movf	_logf$2162^(0+256),w
 16277  0527  0020               	movlb	0	; select bank0
 16278  0528  00DE               	movwf	___fladd@a
 16279  0529  3185  25E8  3180   	fcall	___fladd
 16280  052C  0020               	movlb	0	; select bank0
 16281  052D  085D               	movf	?___fladd+3,w
 16282  052E  0022               	movlb	2	; select bank2
 16283  052F  00B3               	movwf	(_logf$2163+3)^(0+256)
 16284  0530  0020               	movlb	0	; select bank0
 16285  0531  085C               	movf	?___fladd+2,w
 16286  0532  0022               	movlb	2	; select bank2
 16287  0533  00B2               	movwf	(_logf$2163+2)^(0+256)
 16288  0534  0020               	movlb	0	; select bank0
 16289  0535  085B               	movf	?___fladd+1,w
 16290  0536  0022               	movlb	2	; select bank2
 16291  0537  00B1               	movwf	(_logf$2163+1)^(0+256)
 16292  0538  0020               	movlb	0	; select bank0
 16293  0539  085A               	movf	?___fladd,w
 16294  053A  0022               	movlb	2	; select bank2
 16295  053B  00B0               	movwf	_logf$2163^(0+256)
 16296  053C  0841               	movf	(logf@hfsq+3)^(0+256),w
 16297  053D  0021               	movlb	1	; select bank1
 16298  053E  00A3               	movwf	(___flsub@a+3)^(0+128)
 16299  053F  0022               	movlb	2	; select bank2
 16300  0540  0840               	movf	(logf@hfsq+2)^(0+256),w
 16301  0541  0021               	movlb	1	; select bank1
 16302  0542  00A2               	movwf	(___flsub@a+2)^(0+128)
 16303  0543  0022               	movlb	2	; select bank2
 16304  0544  083F               	movf	(logf@hfsq+1)^(0+256),w
 16305  0545  0021               	movlb	1	; select bank1
 16306  0546  00A1               	movwf	(___flsub@a+1)^(0+128)
 16307  0547  0022               	movlb	2	; select bank2
 16308  0548  083E               	movf	logf@hfsq^(0+256),w
 16309  0549  0021               	movlb	1	; select bank1
 16310  054A  00A0               	movwf	___flsub@a^(0+128)
 16311  054B  0022               	movlb	2	; select bank2
 16312  054C  0833               	movf	(_logf$2163+3)^(0+256),w
 16313  054D  0021               	movlb	1	; select bank1
 16314  054E  00A7               	movwf	(___flsub@b+3)^(0+128)
 16315  054F  0022               	movlb	2	; select bank2
 16316  0550  0832               	movf	(_logf$2163+2)^(0+256),w
 16317  0551  0021               	movlb	1	; select bank1
 16318  0552  00A6               	movwf	(___flsub@b+2)^(0+128)
 16319  0553  0022               	movlb	2	; select bank2
 16320  0554  0831               	movf	(_logf$2163+1)^(0+256),w
 16321  0555  0021               	movlb	1	; select bank1
 16322  0556  00A5               	movwf	(___flsub@b+1)^(0+128)
 16323  0557  0022               	movlb	2	; select bank2
 16324  0558  0830               	movf	_logf$2163^(0+256),w
 16325  0559  0021               	movlb	1	; select bank1
 16326  055A  00A4               	movwf	___flsub@b^(0+128)
 16327  055B  31B4  2485  3180   	fcall	___flsub
 16328  055E  0021               	movlb	1	; select bank1
 16329  055F  0823               	movf	(?___flsub+3)^(0+128),w
 16330  0560  0022               	movlb	2	; select bank2
 16331  0561  00B7               	movwf	(_logf$2164+3)^(0+256)
 16332  0562  0021               	movlb	1	; select bank1
 16333  0563  0822               	movf	(?___flsub+2)^(0+128),w
 16334  0564  0022               	movlb	2	; select bank2
 16335  0565  00B6               	movwf	(_logf$2164+2)^(0+256)
 16336  0566  0021               	movlb	1	; select bank1
 16337  0567  0821               	movf	(?___flsub+1)^(0+128),w
 16338  0568  0022               	movlb	2	; select bank2
 16339  0569  00B5               	movwf	(_logf$2164+1)^(0+256)
 16340  056A  0021               	movlb	1	; select bank1
 16341  056B  0820               	movf	?___flsub^(0+128),w
 16342  056C  0022               	movlb	2	; select bank2
 16343  056D  00B4               	movwf	_logf$2164^(0+256)
 16344  056E  085D               	movf	(logf@f+3)^(0+256),w
 16345  056F  0020               	movlb	0	; select bank0
 16346  0570  00DD               	movwf	___fladd@b+3
 16347  0571  0022               	movlb	2	; select bank2
 16348  0572  085C               	movf	(logf@f+2)^(0+256),w
 16349  0573  0020               	movlb	0	; select bank0
 16350  0574  00DC               	movwf	___fladd@b+2
 16351  0575  0022               	movlb	2	; select bank2
 16352  0576  085B               	movf	(logf@f+1)^(0+256),w
 16353  0577  0020               	movlb	0	; select bank0
 16354  0578  00DB               	movwf	___fladd@b+1
 16355  0579  0022               	movlb	2	; select bank2
 16356  057A  085A               	movf	logf@f^(0+256),w
 16357  057B  0020               	movlb	0	; select bank0
 16358  057C  00DA               	movwf	___fladd@b
 16359  057D  0022               	movlb	2	; select bank2
 16360  057E  0837               	movf	(_logf$2164+3)^(0+256),w
 16361  057F  0020               	movlb	0	; select bank0
 16362  0580  00E1               	movwf	___fladd@a+3
 16363  0581  0022               	movlb	2	; select bank2
 16364  0582  0836               	movf	(_logf$2164+2)^(0+256),w
 16365  0583  0020               	movlb	0	; select bank0
 16366  0584  00E0               	movwf	___fladd@a+2
 16367  0585  0022               	movlb	2	; select bank2
 16368  0586  0835               	movf	(_logf$2164+1)^(0+256),w
 16369  0587  0020               	movlb	0	; select bank0
 16370  0588  00DF               	movwf	___fladd@a+1
 16371  0589  0022               	movlb	2	; select bank2
 16372  058A  0834               	movf	_logf$2164^(0+256),w
 16373  058B  0020               	movlb	0	; select bank0
 16374  058C  00DE               	movwf	___fladd@a
 16375  058D  3185  25E8  3180   	fcall	___fladd
 16376  0590  0020               	movlb	0	; select bank0
 16377  0591  085D               	movf	?___fladd+3,w
 16378  0592  0022               	movlb	2	; select bank2
 16379  0593  00BB               	movwf	(_logf$2165+3)^(0+256)
 16380  0594  0020               	movlb	0	; select bank0
 16381  0595  085C               	movf	?___fladd+2,w
 16382  0596  0022               	movlb	2	; select bank2
 16383  0597  00BA               	movwf	(_logf$2165+2)^(0+256)
 16384  0598  0020               	movlb	0	; select bank0
 16385  0599  085B               	movf	?___fladd+1,w
 16386  059A  0022               	movlb	2	; select bank2
 16387  059B  00B9               	movwf	(_logf$2165+1)^(0+256)
 16388  059C  0020               	movlb	0	; select bank0
 16389  059D  085A               	movf	?___fladd,w
 16390  059E  0022               	movlb	2	; select bank2
 16391  059F  00B8               	movwf	_logf$2165^(0+256)
 16392  05A0  303F               	movlw	63
 16393  05A1  0020               	movlb	0	; select bank0
 16394  05A2  00A9               	movwf	___flmul@b+3
 16395  05A3  3031               	movlw	49
 16396  05A4  00A8               	movwf	___flmul@b+2
 16397  05A5  3071               	movlw	113
 16398  05A6  00A7               	movwf	___flmul@b+1
 16399  05A7  3080               	movlw	128
 16400  05A8  00A6               	movwf	___flmul@b
 16401  05A9  0022               	movlb	2	; select bank2
 16402  05AA  0845               	movf	(logf@dk+3)^(0+256),w
 16403  05AB  0020               	movlb	0	; select bank0
 16404  05AC  00AD               	movwf	___flmul@a+3
 16405  05AD  0022               	movlb	2	; select bank2
 16406  05AE  0844               	movf	(logf@dk+2)^(0+256),w
 16407  05AF  0020               	movlb	0	; select bank0
 16408  05B0  00AC               	movwf	___flmul@a+2
 16409  05B1  0022               	movlb	2	; select bank2
 16410  05B2  0843               	movf	(logf@dk+1)^(0+256),w
 16411  05B3  0020               	movlb	0	; select bank0
 16412  05B4  00AB               	movwf	___flmul@a+1
 16413  05B5  0022               	movlb	2	; select bank2
 16414  05B6  0842               	movf	logf@dk^(0+256),w
 16415  05B7  0020               	movlb	0	; select bank0
 16416  05B8  00AA               	movwf	___flmul@a
 16417  05B9  3190  2023  3180   	fcall	___flmul
 16418  05BC  0020               	movlb	0	; select bank0
 16419  05BD  0829               	movf	?___flmul+3,w
 16420  05BE  00DD               	movwf	___fladd@b+3
 16421  05BF  0828               	movf	?___flmul+2,w
 16422  05C0  00DC               	movwf	___fladd@b+2
 16423  05C1  0827               	movf	?___flmul+1,w
 16424  05C2  00DB               	movwf	___fladd@b+1
 16425  05C3  0826               	movf	?___flmul,w
 16426  05C4  00DA               	movwf	___fladd@b
 16427  05C5  0022               	movlb	2	; select bank2
 16428  05C6  083B               	movf	(_logf$2165+3)^(0+256),w
 16429  05C7  0020               	movlb	0	; select bank0
 16430  05C8  00E1               	movwf	___fladd@a+3
 16431  05C9  0022               	movlb	2	; select bank2
 16432  05CA  083A               	movf	(_logf$2165+2)^(0+256),w
 16433  05CB  0020               	movlb	0	; select bank0
 16434  05CC  00E0               	movwf	___fladd@a+2
 16435  05CD  0022               	movlb	2	; select bank2
 16436  05CE  0839               	movf	(_logf$2165+1)^(0+256),w
 16437  05CF  0020               	movlb	0	; select bank0
 16438  05D0  00DF               	movwf	___fladd@a+1
 16439  05D1  0022               	movlb	2	; select bank2
 16440  05D2  0838               	movf	_logf$2165^(0+256),w
 16441  05D3  0020               	movlb	0	; select bank0
 16442  05D4  00DE               	movwf	___fladd@a
 16443  05D5  3185  25E8         	fcall	___fladd
 16444  05D7  0020               	movlb	0	; select bank0
 16445  05D8  085D               	movf	?___fladd+3,w
 16446  05D9  0021               	movlb	1	; select bank1
 16447  05DA  00AB               	movwf	(?_logf+3)^(0+128)
 16448  05DB  0020               	movlb	0	; select bank0
 16449  05DC  085C               	movf	?___fladd+2,w
 16450  05DD  0021               	movlb	1	; select bank1
 16451  05DE  00AA               	movwf	(?_logf+2)^(0+128)
 16452  05DF  0020               	movlb	0	; select bank0
 16453  05E0  085B               	movf	?___fladd+1,w
 16454  05E1  0021               	movlb	1	; select bank1
 16455  05E2  00A9               	movwf	(?_logf+1)^(0+128)
 16456  05E3  0020               	movlb	0	; select bank0
 16457  05E4  085A               	movf	?___fladd,w
 16458  05E5  0021               	movlb	1	; select bank1
 16459  05E6  00A8               	movwf	?_logf^(0+128)
 16460  05E7  0008               	return
 16461  05E8                     __end_of_logf:	
 16462                           
 16463                           	psect	text51
 16464  2CD5                     __ptext51:	
 16465 ;; *************** function _updateCurrent *****************
 16466 ;; Defined at:
 16467 ;;		line 200 in file "BQ76920.c"
 16468 ;; Parameters:    Size  Location     Type
 16469 ;;		None
 16470 ;; Auto vars:     Size  Location     Type
 16471 ;;  adcVal          2   21[BANK1 ] int 
 16472 ;;  sys_stat        1    0        struct regSYS_STAT
 16473 ;; Return value:  Size  Location     Type
 16474 ;;                  1    wreg      void 
 16475 ;; Registers used:
 16476 ;;		wreg, status,2, status,0, pclath, cstack
 16477 ;; Tracked objects:
 16478 ;;		On entry : 0/0
 16479 ;;		On exit  : 0/0
 16480 ;;		Unchanged: 0/0
 16481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16483 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16484 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16485 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16486 ;;Total ram usage:        6 bytes
 16487 ;; Hardware stack levels used:    1
 16488 ;; Hardware stack levels required when called:    3
 16489 ;; This function calls:
 16490 ;;		_I2C_writeRegister
 16491 ;;		___fldiv
 16492 ;;		___flmul
 16493 ;;		___flneg
 16494 ;;		___fltol
 16495 ;;		___xxtofl
 16496 ;;		_readRegister
 16497 ;; This function is called by:
 16498 ;;		_AFE_UPDATE
 16499 ;; This function uses a non-reentrant model
 16500 ;;
 16501                           
 16502                           
 16503                           ;psect for function _updateCurrent
 16504  2CD5                     _updateCurrent:	
 16505                           
 16506                           ;incstack = 0
 16507                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16508  2CD5  3018               	movlw	24
 16509  2CD6  00F5               	movwf	readRegister@slaveAddress
 16510  2CD7  3000               	movlw	0
 16511  2CD8  00F6               	movwf	readRegister@slaveAddress+1
 16512  2CD9  3000               	movlw	0
 16513  2CDA  00F7               	movwf	readRegister@regAddress
 16514  2CDB  00F8               	movwf	readRegister@regAddress+1
 16515  2CDC  3187  27CA  31AC   	fcall	_readRegister
 16516                           
 16517                           ;BQ76920.c: 207:     adcVal = (readRegister(0x18, 0x32) << 8)| readRegister(0x18, 0x33);
 16518  2CDF  3018               	movlw	24
 16519  2CE0  00F5               	movwf	readRegister@slaveAddress
 16520  2CE1  3000               	movlw	0
 16521  2CE2  00F6               	movwf	readRegister@slaveAddress+1
 16522  2CE3  3032               	movlw	50
 16523  2CE4  00F7               	movwf	readRegister@regAddress
 16524  2CE5  3000               	movlw	0
 16525  2CE6  00F8               	movwf	readRegister@regAddress+1
 16526  2CE7  3187  27CA  31AC   	fcall	_readRegister
 16527  2CEA  0875               	movf	?_readRegister,w
 16528  2CEB  0021               	movlb	1	; select bank1
 16529  2CEC  00B1               	movwf	??_updateCurrent^(0+128)
 16530  2CED  0876               	movf	?_readRegister+1,w
 16531  2CEE  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16532  2CEF  0831               	movf	??_updateCurrent^(0+128),w
 16533  2CF0  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16534  2CF1  01B1               	clrf	??_updateCurrent^(0+128)
 16535  2CF2  3018               	movlw	24
 16536  2CF3  00F5               	movwf	readRegister@slaveAddress
 16537  2CF4  3000               	movlw	0
 16538  2CF5  00F6               	movwf	readRegister@slaveAddress+1
 16539  2CF6  3033               	movlw	51
 16540  2CF7  00F7               	movwf	readRegister@regAddress
 16541  2CF8  3000               	movlw	0
 16542  2CF9  00F8               	movwf	readRegister@regAddress+1
 16543  2CFA  3187  27CA  31AC   	fcall	_readRegister
 16544  2CFD  0875               	movf	?_readRegister,w
 16545  2CFE  0021               	movlb	1	; select bank1
 16546  2CFF  0431               	iorwf	??_updateCurrent^(0+128),w
 16547  2D00  00B5               	movwf	updateCurrent@adcVal^(0+128)
 16548  2D01  0876               	movf	?_readRegister+1,w
 16549  2D02  0432               	iorwf	(??_updateCurrent+1)^(0+128),w
 16550  2D03  00B6               	movwf	(updateCurrent@adcVal+1)^(0+128)
 16551                           
 16552                           ;BQ76920.c: 208:     batCurrent = -(adcVal * 8.44 / 19.6);
 16553  2D04  0835               	movf	updateCurrent@adcVal^(0+128),w
 16554  2D05  00F1               	movwf	___xxtofl@val
 16555  2D06  0836               	movf	(updateCurrent@adcVal+1)^(0+128),w
 16556  2D07  00F2               	movwf	___xxtofl@val+1
 16557  2D08  0D89               	rlf	9,f
 16558  2D09  3B89               	subwfb	9,f
 16559  2D0A  0989               	comf	9,f
 16560  2D0B  00F3               	movwf	___xxtofl@val+2
 16561  2D0C  00F4               	movwf	___xxtofl@val+3
 16562  2D0D  3001               	movlw	1
 16563  2D0E  31AA  2241  31AC   	fcall	___xxtofl
 16564  2D11  0874               	movf	?___xxtofl+3,w
 16565  2D12  0020               	movlb	0	; select bank0
 16566  2D13  00AD               	movwf	___flmul@a+3
 16567  2D14  0873               	movf	?___xxtofl+2,w
 16568  2D15  00AC               	movwf	___flmul@a+2
 16569  2D16  0872               	movf	?___xxtofl+1,w
 16570  2D17  00AB               	movwf	___flmul@a+1
 16571  2D18  0871               	movf	?___xxtofl,w
 16572  2D19  00AA               	movwf	___flmul@a
 16573  2D1A  3041               	movlw	65
 16574  2D1B  00A9               	movwf	___flmul@b+3
 16575  2D1C  3007               	movlw	7
 16576  2D1D  00A8               	movwf	___flmul@b+2
 16577  2D1E  300A               	movlw	10
 16578  2D1F  00A7               	movwf	___flmul@b+1
 16579  2D20  303D               	movlw	61
 16580  2D21  00A6               	movwf	___flmul@b
 16581  2D22  3190  2023  31AC   	fcall	___flmul
 16582  2D25  0020               	movlb	0	; select bank0
 16583  2D26  0829               	movf	?___flmul+3,w
 16584  2D27  00C7               	movwf	___fldiv@b+3
 16585  2D28  0828               	movf	?___flmul+2,w
 16586  2D29  00C6               	movwf	___fldiv@b+2
 16587  2D2A  0827               	movf	?___flmul+1,w
 16588  2D2B  00C5               	movwf	___fldiv@b+1
 16589  2D2C  0826               	movf	?___flmul,w
 16590  2D2D  00C4               	movwf	___fldiv@b
 16591  2D2E  3041               	movlw	65
 16592  2D2F  00C3               	movwf	___fldiv@a+3
 16593  2D30  309C               	movlw	156
 16594  2D31  00C2               	movwf	___fldiv@a+2
 16595  2D32  30CC               	movlw	204
 16596  2D33  00C1               	movwf	___fldiv@a+1
 16597  2D34  30CD               	movlw	205
 16598  2D35  00C0               	movwf	___fldiv@a
 16599  2D36  319C  24E2  31AC   	fcall	___fldiv
 16600  2D39  0020               	movlb	0	; select bank0
 16601  2D3A  0843               	movf	?___fldiv+3,w
 16602  2D3B  00DD               	movwf	___flneg@f1+3
 16603  2D3C  0842               	movf	?___fldiv+2,w
 16604  2D3D  00DC               	movwf	___flneg@f1+2
 16605  2D3E  0841               	movf	?___fldiv+1,w
 16606  2D3F  00DB               	movwf	___flneg@f1+1
 16607  2D40  0840               	movf	?___fldiv,w
 16608  2D41  00DA               	movwf	___flneg@f1
 16609  2D42  31B1  217A  31AC   	fcall	___flneg
 16610  2D45  0020               	movlb	0	; select bank0
 16611  2D46  085D               	movf	?___flneg+3,w
 16612  2D47  0021               	movlb	1	; select bank1
 16613  2D48  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16614  2D49  0020               	movlb	0	; select bank0
 16615  2D4A  085C               	movf	?___flneg+2,w
 16616  2D4B  0021               	movlb	1	; select bank1
 16617  2D4C  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16618  2D4D  0020               	movlb	0	; select bank0
 16619  2D4E  085B               	movf	?___flneg+1,w
 16620  2D4F  0021               	movlb	1	; select bank1
 16621  2D50  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16622  2D51  0020               	movlb	0	; select bank0
 16623  2D52  085A               	movf	?___flneg,w
 16624  2D53  0021               	movlb	1	; select bank1
 16625  2D54  00A8               	movwf	___fltol@f1^(0+128)
 16626  2D55  31B6  26B8  31AC   	fcall	___fltol
 16627  2D58  0021               	movlb	1	; select bank1
 16628  2D59  082B               	movf	(?___fltol+3)^(0+128),w
 16629  2D5A  0023               	movlb	3	; select bank3
 16630  2D5B  00B9               	movwf	(_batCurrent+3)^(0+384)
 16631  2D5C  0021               	movlb	1	; select bank1
 16632  2D5D  082A               	movf	(?___fltol+2)^(0+128),w
 16633  2D5E  0023               	movlb	3	; select bank3
 16634  2D5F  00B8               	movwf	(_batCurrent+2)^(0+384)
 16635  2D60  0021               	movlb	1	; select bank1
 16636  2D61  0829               	movf	(?___fltol+1)^(0+128),w
 16637  2D62  0023               	movlb	3	; select bank3
 16638  2D63  00B7               	movwf	(_batCurrent+1)^(0+384)
 16639  2D64  0021               	movlb	1	; select bank1
 16640  2D65  0828               	movf	?___fltol^(0+128),w
 16641  2D66  0023               	movlb	3	; select bank3
 16642  2D67  00B6               	movwf	_batCurrent^(0+384)
 16643                           
 16644                           ;BQ76920.c: 210:     if (batCurrent > -10 && batCurrent < 10)
 16645  2D68  1FB9               	btfss	(_batCurrent+3)^(0+384),7
 16646  2D69  2D74               	goto	l7598
 16647  2D6A  30F7               	movlw	247
 16648  2D6B  0236               	subwf	_batCurrent^(0+384),w
 16649  2D6C  30FF               	movlw	255
 16650  2D6D  3B37               	subwfb	(_batCurrent+1)^(0+384),w
 16651  2D6E  30FF               	movlw	255
 16652  2D6F  3B38               	subwfb	(_batCurrent+2)^(0+384),w
 16653  2D70  30FF               	movlw	255
 16654  2D71  3B39               	subwfb	(_batCurrent+3)^(0+384),w
 16655  2D72  1C03               	btfss	3,0
 16656  2D73  2D8B               	goto	l7602
 16657  2D74                     l7598:	
 16658  2D74  1BB9               	btfsc	(_batCurrent+3)^(0+384),7
 16659  2D75  2D83               	goto	l7600
 16660  2D76  0839               	movf	(_batCurrent+3)^(0+384),w
 16661  2D77  1D03               	btfss	3,2
 16662  2D78  2D8B               	goto	l7602
 16663  2D79  0838               	movf	(_batCurrent+2)^(0+384),w
 16664  2D7A  1D03               	btfss	3,2
 16665  2D7B  2D8B               	goto	l7602
 16666  2D7C  0837               	movf	(_batCurrent+1)^(0+384),w
 16667  2D7D  1D03               	btfss	3,2
 16668  2D7E  2D8B               	goto	l7602
 16669  2D7F  300A               	movlw	10
 16670  2D80  0236               	subwf	_batCurrent^(0+384),w
 16671  2D81  1803               	btfsc	3,0
 16672  2D82  2D8B               	goto	l7602
 16673  2D83                     l7600:	
 16674                           
 16675                           ;BQ76920.c: 211:     {;BQ76920.c: 212:       batCurrent = 0;
 16676  2D83  3000               	movlw	0
 16677  2D84  00B9               	movwf	(_batCurrent+3)^(0+384)
 16678  2D85  3000               	movlw	0
 16679  2D86  00B8               	movwf	(_batCurrent+2)^(0+384)
 16680  2D87  3000               	movlw	0
 16681  2D88  00B7               	movwf	(_batCurrent+1)^(0+384)
 16682  2D89  3000               	movlw	0
 16683  2D8A  00B6               	movwf	_batCurrent^(0+384)
 16684  2D8B                     l7602:	
 16685                           
 16686                           ;BQ76920.c: 215:     I2C_writeRegister(0x18, 0x00, 0x80);
 16687  2D8B  3018               	movlw	24
 16688  2D8C  00F5               	movwf	I2C_writeRegister@slaveAddress
 16689  2D8D  3000               	movlw	0
 16690  2D8E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16691  2D8F  3000               	movlw	0
 16692  2D90  00F7               	movwf	I2C_writeRegister@regAddress
 16693  2D91  00F8               	movwf	I2C_writeRegister@regAddress+1
 16694  2D92  3080               	movlw	128
 16695  2D93  00F9               	movwf	I2C_writeRegister@data
 16696  2D94  3000               	movlw	0
 16697  2D95  00FA               	movwf	I2C_writeRegister@data+1
 16698  2D96  31B2  22F3         	fcall	_I2C_writeRegister
 16699  2D98  0008               	return
 16700  2D99                     __end_of_updateCurrent:	
 16701                           
 16702                           	psect	text52
 16703  317A                     __ptext52:	
 16704 ;; *************** function ___flneg *****************
 16705 ;; Defined at:
 16706 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 16707 ;; Parameters:    Size  Location     Type
 16708 ;;  f1              4   58[BANK0 ] void 
 16709 ;; Auto vars:     Size  Location     Type
 16710 ;;		None
 16711 ;; Return value:  Size  Location     Type
 16712 ;;                  4   58[BANK0 ] void 
 16713 ;; Registers used:
 16714 ;;		wreg
 16715 ;; Tracked objects:
 16716 ;;		On entry : 0/0
 16717 ;;		On exit  : 0/0
 16718 ;;		Unchanged: 0/0
 16719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16720 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16723 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16724 ;;Total ram usage:        4 bytes
 16725 ;; Hardware stack levels used:    1
 16726 ;; Hardware stack levels required when called:    1
 16727 ;; This function calls:
 16728 ;;		Nothing
 16729 ;; This function is called by:
 16730 ;;		_updateCurrent
 16731 ;; This function uses a non-reentrant model
 16732 ;;
 16733                           
 16734                           
 16735                           ;psect for function ___flneg
 16736  317A                     ___flneg:	
 16737                           
 16738                           ;incstack = 0
 16739                           ; Regs used in ___flneg: [wreg]
 16740  317A  0020               	movlb	0	; select bank0
 16741  317B  085D               	movf	___flneg@f1+3,w
 16742  317C  045C               	iorwf	___flneg@f1+2,w
 16743  317D  045B               	iorwf	___flneg@f1+1,w
 16744  317E  045A               	iorwf	___flneg@f1,w
 16745  317F  1903               	skipnz
 16746  3180  0008               	return
 16747  3181  3080               	movlw	128
 16748  3182  06DD               	xorwf	___flneg@f1+3,f
 16749  3183  0008               	return
 16750  3184                     __end_of___flneg:	
 16751                           
 16752                           	psect	text53
 16753  34F1                     __ptext53:	
 16754 ;; *************** function _enableDischarging *****************
 16755 ;; Defined at:
 16756 ;;		line 291 in file "BQ76920.c"
 16757 ;; Parameters:    Size  Location     Type
 16758 ;;  enable          2    0[BANK0 ] unsigned int 
 16759 ;; Auto vars:     Size  Location     Type
 16760 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 16761 ;; Return value:  Size  Location     Type
 16762 ;;                  1    wreg      void 
 16763 ;; Registers used:
 16764 ;;		wreg, status,2, status,0, pclath, cstack
 16765 ;; Tracked objects:
 16766 ;;		On entry : 0/0
 16767 ;;		On exit  : 0/0
 16768 ;;		Unchanged: 0/0
 16769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16772 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16773 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16774 ;;Total ram usage:        5 bytes
 16775 ;; Hardware stack levels used:    1
 16776 ;; Hardware stack levels required when called:    3
 16777 ;; This function calls:
 16778 ;;		_I2C_writeRegister
 16779 ;;		_readRegister
 16780 ;; This function is called by:
 16781 ;;		_AFE_UPDATE
 16782 ;; This function uses a non-reentrant model
 16783 ;;
 16784                           
 16785                           
 16786                           ;psect for function _enableDischarging
 16787  34F1                     _enableDischarging:	
 16788                           
 16789                           ;BQ76920.c: 292:     uint8_t sys_ctrl2;;BQ76920.c: 293:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 16790                           
 16791                           ;incstack = 0
 16792                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 16793  34F1  3018               	movlw	24
 16794  34F2  00F5               	movwf	readRegister@slaveAddress
 16795  34F3  3000               	movlw	0
 16796  34F4  00F6               	movwf	readRegister@slaveAddress+1
 16797  34F5  3005               	movlw	5
 16798  34F6  00F7               	movwf	readRegister@regAddress
 16799  34F7  3000               	movlw	0
 16800  34F8  00F8               	movwf	readRegister@regAddress+1
 16801  34F9  3187  27CA  31B4   	fcall	_readRegister
 16802  34FC  0875               	movf	?_readRegister,w
 16803  34FD  0020               	movlb	0	; select bank0
 16804  34FE  00A2               	movwf	??_enableDischarging
 16805  34FF  0822               	movf	??_enableDischarging,w
 16806  3500  00FB               	movwf	enableDischarging@sys_ctrl2
 16807                           
 16808                           ;BQ76920.c: 294:     if(enable){
 16809  3501  0820               	movf	enableDischarging@enable,w
 16810  3502  0421               	iorwf	enableDischarging@enable+1,w
 16811  3503  1903               	btfsc	3,2
 16812  3504  2D15               	goto	l7692
 16813                           
 16814                           ;BQ76920.c: 295:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 16815  3505  3018               	movlw	24
 16816  3506  00F5               	movwf	I2C_writeRegister@slaveAddress
 16817  3507  3000               	movlw	0
 16818  3508  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16819  3509  3005               	movlw	5
 16820  350A  00F7               	movwf	I2C_writeRegister@regAddress
 16821  350B  3000               	movlw	0
 16822  350C  00F8               	movwf	I2C_writeRegister@regAddress+1
 16823  350D  3002               	movlw	2
 16824  350E  047B               	iorwf	enableDischarging@sys_ctrl2,w
 16825  350F  00F9               	movwf	I2C_writeRegister@data
 16826  3510  3000               	movlw	0
 16827  3511  00FA               	movwf	I2C_writeRegister@data+1
 16828  3512  31B2  22F3         	fcall	_I2C_writeRegister
 16829                           
 16830                           ;BQ76920.c: 296:     }else{
 16831  3514  0008               	return
 16832  3515                     l7692:	
 16833                           
 16834                           ;BQ76920.c: 297:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 16835  3515  3018               	movlw	24
 16836  3516  00F5               	movwf	I2C_writeRegister@slaveAddress
 16837  3517  3000               	movlw	0
 16838  3518  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16839  3519  3005               	movlw	5
 16840  351A  00F7               	movwf	I2C_writeRegister@regAddress
 16841  351B  3000               	movlw	0
 16842  351C  00F8               	movwf	I2C_writeRegister@regAddress+1
 16843  351D  087B               	movf	enableDischarging@sys_ctrl2,w
 16844  351E  39FD               	andlw	253
 16845  351F  00A2               	movwf	??_enableDischarging
 16846  3520  01A3               	clrf	??_enableDischarging+1
 16847  3521  0822               	movf	??_enableDischarging,w
 16848  3522  00F9               	movwf	I2C_writeRegister@data
 16849  3523  0823               	movf	??_enableDischarging+1,w
 16850  3524  00FA               	movwf	I2C_writeRegister@data+1
 16851  3525  31B2  22F3         	fcall	_I2C_writeRegister
 16852  3527  0008               	return
 16853  3528                     __end_of_enableDischarging:	
 16854                           
 16855                           	psect	text54
 16856  34BA                     __ptext54:	
 16857 ;; *************** function _enableCharging *****************
 16858 ;; Defined at:
 16859 ;;		line 301 in file "BQ76920.c"
 16860 ;; Parameters:    Size  Location     Type
 16861 ;;  enable          2    0[BANK0 ] unsigned int 
 16862 ;; Auto vars:     Size  Location     Type
 16863 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 16864 ;; Return value:  Size  Location     Type
 16865 ;;                  1    wreg      void 
 16866 ;; Registers used:
 16867 ;;		wreg, status,2, status,0, pclath, cstack
 16868 ;; Tracked objects:
 16869 ;;		On entry : 0/0
 16870 ;;		On exit  : 0/0
 16871 ;;		Unchanged: 0/0
 16872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16875 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16876 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16877 ;;Total ram usage:        5 bytes
 16878 ;; Hardware stack levels used:    1
 16879 ;; Hardware stack levels required when called:    3
 16880 ;; This function calls:
 16881 ;;		_I2C_writeRegister
 16882 ;;		_readRegister
 16883 ;; This function is called by:
 16884 ;;		_AFE_UPDATE
 16885 ;; This function uses a non-reentrant model
 16886 ;;
 16887                           
 16888                           
 16889                           ;psect for function _enableCharging
 16890  34BA                     _enableCharging:	
 16891                           
 16892                           ;BQ76920.c: 302:     uint8_t sys_ctrl2;;BQ76920.c: 303:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 16893                           
 16894                           ;incstack = 0
 16895                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 16896  34BA  3018               	movlw	24
 16897  34BB  00F5               	movwf	readRegister@slaveAddress
 16898  34BC  3000               	movlw	0
 16899  34BD  00F6               	movwf	readRegister@slaveAddress+1
 16900  34BE  3005               	movlw	5
 16901  34BF  00F7               	movwf	readRegister@regAddress
 16902  34C0  3000               	movlw	0
 16903  34C1  00F8               	movwf	readRegister@regAddress+1
 16904  34C2  3187  27CA  31B4   	fcall	_readRegister
 16905  34C5  0875               	movf	?_readRegister,w
 16906  34C6  0020               	movlb	0	; select bank0
 16907  34C7  00A2               	movwf	??_enableCharging
 16908  34C8  0822               	movf	??_enableCharging,w
 16909  34C9  00FB               	movwf	enableCharging@sys_ctrl2
 16910                           
 16911                           ;BQ76920.c: 304:     if(enable){
 16912  34CA  0820               	movf	enableCharging@enable,w
 16913  34CB  0421               	iorwf	enableCharging@enable+1,w
 16914  34CC  1903               	btfsc	3,2
 16915  34CD  2CDE               	goto	l7700
 16916                           
 16917                           ;BQ76920.c: 305:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 16918  34CE  3018               	movlw	24
 16919  34CF  00F5               	movwf	I2C_writeRegister@slaveAddress
 16920  34D0  3000               	movlw	0
 16921  34D1  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16922  34D2  3005               	movlw	5
 16923  34D3  00F7               	movwf	I2C_writeRegister@regAddress
 16924  34D4  3000               	movlw	0
 16925  34D5  00F8               	movwf	I2C_writeRegister@regAddress+1
 16926  34D6  3001               	movlw	1
 16927  34D7  047B               	iorwf	enableCharging@sys_ctrl2,w
 16928  34D8  00F9               	movwf	I2C_writeRegister@data
 16929  34D9  3000               	movlw	0
 16930  34DA  00FA               	movwf	I2C_writeRegister@data+1
 16931  34DB  31B2  22F3         	fcall	_I2C_writeRegister
 16932                           
 16933                           ;BQ76920.c: 306:     }else{
 16934  34DD  0008               	return
 16935  34DE                     l7700:	
 16936                           
 16937                           ;BQ76920.c: 307:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 16938  34DE  3018               	movlw	24
 16939  34DF  00F5               	movwf	I2C_writeRegister@slaveAddress
 16940  34E0  3000               	movlw	0
 16941  34E1  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16942  34E2  3005               	movlw	5
 16943  34E3  00F7               	movwf	I2C_writeRegister@regAddress
 16944  34E4  3000               	movlw	0
 16945  34E5  00F8               	movwf	I2C_writeRegister@regAddress+1
 16946  34E6  087B               	movf	enableCharging@sys_ctrl2,w
 16947  34E7  39FE               	andlw	254
 16948  34E8  00A2               	movwf	??_enableCharging
 16949  34E9  01A3               	clrf	??_enableCharging+1
 16950  34EA  0822               	movf	??_enableCharging,w
 16951  34EB  00F9               	movwf	I2C_writeRegister@data
 16952  34EC  0823               	movf	??_enableCharging+1,w
 16953  34ED  00FA               	movwf	I2C_writeRegister@data+1
 16954  34EE  31B2  22F3         	fcall	_I2C_writeRegister
 16955  34F0  0008               	return
 16956  34F1                     __end_of_enableCharging:	
 16957                           
 16958                           	psect	text55
 16959  32F3                     __ptext55:	
 16960 ;; *************** function _I2C_writeRegister *****************
 16961 ;; Defined at:
 16962 ;;		line 104 in file "I2C.c"
 16963 ;; Parameters:    Size  Location     Type
 16964 ;;  slaveAddress    2    5[COMMON] int 
 16965 ;;  regAddress      2    7[COMMON] int 
 16966 ;;  data            2    9[COMMON] int 
 16967 ;; Auto vars:     Size  Location     Type
 16968 ;;		None
 16969 ;; Return value:  Size  Location     Type
 16970 ;;                  1    wreg      void 
 16971 ;; Registers used:
 16972 ;;		wreg, status,2, status,0, pclath, cstack
 16973 ;; Tracked objects:
 16974 ;;		On entry : 0/0
 16975 ;;		On exit  : 0/0
 16976 ;;		Unchanged: 0/0
 16977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16978 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16981 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16982 ;;Total ram usage:        6 bytes
 16983 ;; Hardware stack levels used:    1
 16984 ;; Hardware stack levels required when called:    2
 16985 ;; This function calls:
 16986 ;;		_send_I2C_controlByte
 16987 ;;		_send_I2C_data
 16988 ;;		_send_I2C_startBit
 16989 ;;		_send_I2C_stopBit
 16990 ;; This function is called by:
 16991 ;;		_beginAFEcommunication
 16992 ;;		_setShortCircuitProtection
 16993 ;;		_setOverCurrentDischargeProtection
 16994 ;;		_setCellUndervoltageProtection
 16995 ;;		_setCellOvervoltageProtection
 16996 ;;		_updateCurrent
 16997 ;;		_enableDischarging
 16998 ;;		_enableCharging
 16999 ;; This function uses a non-reentrant model
 17000 ;;
 17001                           
 17002                           
 17003                           ;psect for function _I2C_writeRegister
 17004  32F3                     _I2C_writeRegister:	
 17005                           
 17006                           ;I2C.c: 105:     send_I2C_startBit();
 17007                           
 17008                           ;incstack = 0
 17009                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 17010  32F3  31B1  2145  31B2   	fcall	_send_I2C_startBit
 17011                           
 17012                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 17013  32F6  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 17014  32F7  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17015  32F8  0875               	movf	I2C_writeRegister@slaveAddress,w
 17016  32F9  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17017  32FA  3000               	movlw	0
 17018  32FB  00F3               	movwf	send_I2C_controlByte@RW_bit
 17019  32FC  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17020  32FD  31B1  2170  31B2   	fcall	_send_I2C_controlByte
 17021                           
 17022                           ;I2C.c: 107:     send_I2C_data(regAddress);
 17023  3300  0878               	movf	I2C_writeRegister@regAddress+1,w
 17024  3301  00F2               	movwf	send_I2C_data@databyte+1
 17025  3302  0877               	movf	I2C_writeRegister@regAddress,w
 17026  3303  00F1               	movwf	send_I2C_data@databyte
 17027  3304  31B1  2167  31B2   	fcall	_send_I2C_data
 17028                           
 17029                           ;I2C.c: 108:     send_I2C_data(data);
 17030  3307  087A               	movf	I2C_writeRegister@data+1,w
 17031  3308  00F2               	movwf	send_I2C_data@databyte+1
 17032  3309  0879               	movf	I2C_writeRegister@data,w
 17033  330A  00F1               	movwf	send_I2C_data@databyte
 17034  330B  31B1  2167  31B2   	fcall	_send_I2C_data
 17035                           
 17036                           ;I2C.c: 109:     send_I2C_stopBit();
 17037  330E  31B1  214D         	fcall	_send_I2C_stopBit
 17038  3310  0008               	return
 17039  3311                     __end_of_I2C_writeRegister:	
 17040                           
 17041                           	psect	text56
 17042  2F24                     __ptext56:	
 17043 ;; *************** function _coulomb_counter *****************
 17044 ;; Defined at:
 17045 ;;		line 38 in file "algorithms.c"
 17046 ;; Parameters:    Size  Location     Type
 17047 ;;		None
 17048 ;; Auto vars:     Size  Location     Type
 17049 ;;  i               2   17[BANK1 ] int 
 17050 ;; Return value:  Size  Location     Type
 17051 ;;                  1    wreg      void 
 17052 ;; Registers used:
 17053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17054 ;; Tracked objects:
 17055 ;;		On entry : 0/0
 17056 ;;		On exit  : 0/0
 17057 ;;		Unchanged: 0/0
 17058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17060 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17061 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17062 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17063 ;;Total ram usage:        4 bytes
 17064 ;; Hardware stack levels used:    1
 17065 ;; Hardware stack levels required when called:    3
 17066 ;; This function calls:
 17067 ;;		___fldiv
 17068 ;;		___flmul
 17069 ;;		___flsub
 17070 ;;		___fltol
 17071 ;;		___xxtofl
 17072 ;; This function is called by:
 17073 ;;		_AFE_UPDATE
 17074 ;; This function uses a non-reentrant model
 17075 ;;
 17076                           
 17077                           
 17078                           ;psect for function _coulomb_counter
 17079  2F24                     _coulomb_counter:	
 17080                           
 17081                           ;algorithms.c: 39:     for(int i = 0; i<5;i++){
 17082                           
 17083                           ;incstack = 0
 17084                           ; Regs used in _coulomb_counter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17085  2F24  0021               	movlb	1	; select bank1
 17086  2F25  01B1               	clrf	coulomb_counter@i^(0+128)
 17087  2F26  01B2               	clrf	(coulomb_counter@i+1)^(0+128)
 17088  2F27                     l6138:	
 17089                           
 17090                           ;algorithms.c: 40:        cellCharge[i] = cellCharge[i] - (batCurrent * (500/ 3600000.0)
      +                          );
 17091  2F27  0021               	movlb	1	; select bank1
 17092  2F28  3531               	lslf	coulomb_counter@i^(0+128),w
 17093  2F29  3E20               	addlw	(low (_cellCharge| (0+512)))& (0+255)
 17094  2F2A  0086               	movwf	6
 17095  2F2B  3002               	movlw	2	; select bank4/5
 17096  2F2C  0087               	movwf	7
 17097  2F2D  3F40               	moviw [0]fsr1
 17098  2F2E  0020               	movlb	0	; select bank0
 17099  2F2F  00EE               	movwf	??_coulomb_counter
 17100  2F30  3F41               	moviw [1]fsr1
 17101  2F31  00EF               	movwf	??_coulomb_counter+1
 17102  2F32  086E               	movf	??_coulomb_counter,w
 17103  2F33  00F1               	movwf	___xxtofl@val
 17104  2F34  086F               	movf	??_coulomb_counter+1,w
 17105  2F35  00F2               	movwf	___xxtofl@val+1
 17106  2F36  0D89               	rlf	9,f
 17107  2F37  3B89               	subwfb	9,f
 17108  2F38  0989               	comf	9,f
 17109  2F39  00F3               	movwf	___xxtofl@val+2
 17110  2F3A  00F4               	movwf	___xxtofl@val+3
 17111  2F3B  3001               	movlw	1
 17112  2F3C  31AA  2241  31AF   	fcall	___xxtofl
 17113  2F3F  0874               	movf	?___xxtofl+3,w
 17114  2F40  0021               	movlb	1	; select bank1
 17115  2F41  00A7               	movwf	(___flsub@b+3)^(0+128)
 17116  2F42  0873               	movf	?___xxtofl+2,w
 17117  2F43  00A6               	movwf	(___flsub@b+2)^(0+128)
 17118  2F44  0872               	movf	?___xxtofl+1,w
 17119  2F45  00A5               	movwf	(___flsub@b+1)^(0+128)
 17120  2F46  0871               	movf	?___xxtofl,w
 17121  2F47  00A4               	movwf	___flsub@b^(0+128)
 17122  2F48  0023               	movlb	3	; select bank3
 17123  2F49  0839               	movf	(_batCurrent+3)^(0+384),w
 17124  2F4A  00F4               	movwf	___xxtofl@val+3
 17125  2F4B  0838               	movf	(_batCurrent+2)^(0+384),w
 17126  2F4C  00F3               	movwf	___xxtofl@val+2
 17127  2F4D  0837               	movf	(_batCurrent+1)^(0+384),w
 17128  2F4E  00F2               	movwf	___xxtofl@val+1
 17129  2F4F  0836               	movf	_batCurrent^(0+384),w
 17130  2F50  00F1               	movwf	___xxtofl@val
 17131  2F51  3001               	movlw	1
 17132  2F52  31AA  2241  31AF   	fcall	___xxtofl
 17133  2F55  0874               	movf	?___xxtofl+3,w
 17134  2F56  0020               	movlb	0	; select bank0
 17135  2F57  00AD               	movwf	___flmul@a+3
 17136  2F58  0873               	movf	?___xxtofl+2,w
 17137  2F59  00AC               	movwf	___flmul@a+2
 17138  2F5A  0872               	movf	?___xxtofl+1,w
 17139  2F5B  00AB               	movwf	___flmul@a+1
 17140  2F5C  0871               	movf	?___xxtofl,w
 17141  2F5D  00AA               	movwf	___flmul@a
 17142  2F5E  3039               	movlw	57
 17143  2F5F  00A9               	movwf	___flmul@b+3
 17144  2F60  3011               	movlw	17
 17145  2F61  00A8               	movwf	___flmul@b+2
 17146  2F62  30A2               	movlw	162
 17147  2F63  00A7               	movwf	___flmul@b+1
 17148  2F64  30B4               	movlw	180
 17149  2F65  00A6               	movwf	___flmul@b
 17150  2F66  3190  2023  31AF   	fcall	___flmul
 17151  2F69  0020               	movlb	0	; select bank0
 17152  2F6A  0829               	movf	?___flmul+3,w
 17153  2F6B  0021               	movlb	1	; select bank1
 17154  2F6C  00A3               	movwf	(___flsub@a+3)^(0+128)
 17155  2F6D  0020               	movlb	0	; select bank0
 17156  2F6E  0828               	movf	?___flmul+2,w
 17157  2F6F  0021               	movlb	1	; select bank1
 17158  2F70  00A2               	movwf	(___flsub@a+2)^(0+128)
 17159  2F71  0020               	movlb	0	; select bank0
 17160  2F72  0827               	movf	?___flmul+1,w
 17161  2F73  0021               	movlb	1	; select bank1
 17162  2F74  00A1               	movwf	(___flsub@a+1)^(0+128)
 17163  2F75  0020               	movlb	0	; select bank0
 17164  2F76  0826               	movf	?___flmul,w
 17165  2F77  0021               	movlb	1	; select bank1
 17166  2F78  00A0               	movwf	___flsub@a^(0+128)
 17167  2F79  31B4  2485  31AF   	fcall	___flsub
 17168  2F7C  0021               	movlb	1	; select bank1
 17169  2F7D  0823               	movf	(?___flsub+3)^(0+128),w
 17170  2F7E  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17171  2F7F  0822               	movf	(?___flsub+2)^(0+128),w
 17172  2F80  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17173  2F81  0821               	movf	(?___flsub+1)^(0+128),w
 17174  2F82  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17175  2F83  0820               	movf	?___flsub^(0+128),w
 17176  2F84  00A8               	movwf	___fltol@f1^(0+128)
 17177  2F85  31B6  26B8  31AF   	fcall	___fltol
 17178  2F88  0021               	movlb	1	; select bank1
 17179  2F89  3531               	lslf	coulomb_counter@i^(0+128),w
 17180  2F8A  3E20               	addlw	(low (_cellCharge| (0+512)))& (0+255)
 17181  2F8B  0086               	movwf	6
 17182  2F8C  3002               	movlw	2	; select bank4/5
 17183  2F8D  0087               	movwf	7
 17184  2F8E  0828               	movf	?___fltol^(0+128),w
 17185  2F8F  3FC0               	movwi [0]fsr1
 17186  2F90  0829               	movf	(?___fltol+1)^(0+128),w
 17187  2F91  3FC1               	movwi [1]fsr1
 17188                           
 17189                           ;algorithms.c: 41:        cellSOC[i] = ((cellCharge[i] * 100.0 )/samsung_cell_max_charge
      +                          );
 17190  2F92  3531               	lslf	coulomb_counter@i^(0+128),w
 17191  2F93  3E20               	addlw	(low (_cellCharge| (0+512)))& (0+255)
 17192  2F94  0086               	movwf	6
 17193  2F95  3002               	movlw	2	; select bank4/5
 17194  2F96  0087               	movwf	7
 17195  2F97  3F40               	moviw [0]fsr1
 17196  2F98  0020               	movlb	0	; select bank0
 17197  2F99  00EE               	movwf	??_coulomb_counter
 17198  2F9A  3F41               	moviw [1]fsr1
 17199  2F9B  00EF               	movwf	??_coulomb_counter+1
 17200  2F9C  086E               	movf	??_coulomb_counter,w
 17201  2F9D  00F1               	movwf	___xxtofl@val
 17202  2F9E  086F               	movf	??_coulomb_counter+1,w
 17203  2F9F  00F2               	movwf	___xxtofl@val+1
 17204  2FA0  0D89               	rlf	9,f
 17205  2FA1  3B89               	subwfb	9,f
 17206  2FA2  0989               	comf	9,f
 17207  2FA3  00F3               	movwf	___xxtofl@val+2
 17208  2FA4  00F4               	movwf	___xxtofl@val+3
 17209  2FA5  3001               	movlw	1
 17210  2FA6  31AA  2241  31AF   	fcall	___xxtofl
 17211  2FA9  0874               	movf	?___xxtofl+3,w
 17212  2FAA  0020               	movlb	0	; select bank0
 17213  2FAB  00AD               	movwf	___flmul@a+3
 17214  2FAC  0873               	movf	?___xxtofl+2,w
 17215  2FAD  00AC               	movwf	___flmul@a+2
 17216  2FAE  0872               	movf	?___xxtofl+1,w
 17217  2FAF  00AB               	movwf	___flmul@a+1
 17218  2FB0  0871               	movf	?___xxtofl,w
 17219  2FB1  00AA               	movwf	___flmul@a
 17220  2FB2  3042               	movlw	66
 17221  2FB3  00A9               	movwf	___flmul@b+3
 17222  2FB4  30C8               	movlw	200
 17223  2FB5  00A8               	movwf	___flmul@b+2
 17224  2FB6  3000               	movlw	0
 17225  2FB7  00A7               	movwf	___flmul@b+1
 17226  2FB8  3000               	movlw	0
 17227  2FB9  00A6               	movwf	___flmul@b
 17228  2FBA  3190  2023  31AF   	fcall	___flmul
 17229  2FBD  0020               	movlb	0	; select bank0
 17230  2FBE  0829               	movf	?___flmul+3,w
 17231  2FBF  00C7               	movwf	___fldiv@b+3
 17232  2FC0  0828               	movf	?___flmul+2,w
 17233  2FC1  00C6               	movwf	___fldiv@b+2
 17234  2FC2  0827               	movf	?___flmul+1,w
 17235  2FC3  00C5               	movwf	___fldiv@b+1
 17236  2FC4  0826               	movf	?___flmul,w
 17237  2FC5  00C4               	movwf	___fldiv@b
 17238  2FC6  3045               	movlw	69
 17239  2FC7  00C3               	movwf	___fldiv@a+3
 17240  2FC8  301C               	movlw	28
 17241  2FC9  00C2               	movwf	___fldiv@a+2
 17242  2FCA  3040               	movlw	64
 17243  2FCB  00C1               	movwf	___fldiv@a+1
 17244  2FCC  3000               	movlw	0
 17245  2FCD  00C0               	movwf	___fldiv@a
 17246  2FCE  319C  24E2  31AF   	fcall	___fldiv
 17247  2FD1  0020               	movlb	0	; select bank0
 17248  2FD2  0843               	movf	?___fldiv+3,w
 17249  2FD3  0021               	movlb	1	; select bank1
 17250  2FD4  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17251  2FD5  0020               	movlb	0	; select bank0
 17252  2FD6  0842               	movf	?___fldiv+2,w
 17253  2FD7  0021               	movlb	1	; select bank1
 17254  2FD8  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17255  2FD9  0020               	movlb	0	; select bank0
 17256  2FDA  0841               	movf	?___fldiv+1,w
 17257  2FDB  0021               	movlb	1	; select bank1
 17258  2FDC  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17259  2FDD  0020               	movlb	0	; select bank0
 17260  2FDE  0840               	movf	?___fldiv,w
 17261  2FDF  0021               	movlb	1	; select bank1
 17262  2FE0  00A8               	movwf	___fltol@f1^(0+128)
 17263  2FE1  31B6  26B8  31AF   	fcall	___fltol
 17264  2FE4  0021               	movlb	1	; select bank1
 17265  2FE5  3531               	lslf	coulomb_counter@i^(0+128),w
 17266  2FE6  3E2A               	addlw	(low (_cellSOC| (0+512)))& (0+255)
 17267  2FE7  0086               	movwf	6
 17268  2FE8  3002               	movlw	2	; select bank4/5
 17269  2FE9  0087               	movwf	7
 17270  2FEA  0828               	movf	?___fltol^(0+128),w
 17271  2FEB  3FC0               	movwi [0]fsr1
 17272  2FEC  0829               	movf	(?___fltol+1)^(0+128),w
 17273  2FED  3FC1               	movwi [1]fsr1
 17274                           
 17275                           ;algorithms.c: 42:      }
 17276  2FEE  3001               	movlw	1
 17277  2FEF  07B1               	addwf	coulomb_counter@i^(0+128),f
 17278  2FF0  3000               	movlw	0
 17279  2FF1  3DB2               	addwfc	(coulomb_counter@i+1)^(0+128),f
 17280  2FF2  0832               	movf	(coulomb_counter@i+1)^(0+128),w
 17281  2FF3  3A80               	xorlw	128
 17282  2FF4  0020               	movlb	0	; select bank0
 17283  2FF5  00EE               	movwf	??_coulomb_counter
 17284  2FF6  3080               	movlw	128
 17285  2FF7  026E               	subwf	??_coulomb_counter,w
 17286  2FF8  1D03               	skipz
 17287  2FF9  2FFD               	goto	u7635
 17288  2FFA  3005               	movlw	5
 17289  2FFB  0021               	movlb	1	; select bank1
 17290  2FFC  0231               	subwf	coulomb_counter@i^(0+128),w
 17291  2FFD                     u7635:	
 17292  2FFD  1803               	btfsc	3,0
 17293  2FFE  0008               	return
 17294  2FFF  2F27               	goto	l6138
 17295  3000                     __end_of_coulomb_counter:	
 17296                           
 17297                           	psect	text57
 17298  3485                     __ptext57:	
 17299 ;; *************** function ___flsub *****************
 17300 ;; Defined at:
 17301 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 17302 ;; Parameters:    Size  Location     Type
 17303 ;;  a               4    0[BANK1 ] void 
 17304 ;;  b               4    4[BANK1 ] void 
 17305 ;; Auto vars:     Size  Location     Type
 17306 ;;		None
 17307 ;; Return value:  Size  Location     Type
 17308 ;;                  4    0[BANK1 ] void 
 17309 ;; Registers used:
 17310 ;;		wreg, status,2, status,0, pclath, cstack
 17311 ;; Tracked objects:
 17312 ;;		On entry : 0/0
 17313 ;;		On exit  : 0/0
 17314 ;;		Unchanged: 0/0
 17315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17316 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17319 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17320 ;;Total ram usage:        8 bytes
 17321 ;; Hardware stack levels used:    1
 17322 ;; Hardware stack levels required when called:    2
 17323 ;; This function calls:
 17324 ;;		___fladd
 17325 ;; This function is called by:
 17326 ;;		_updateTemperatures
 17327 ;;		_coulomb_counter
 17328 ;;		_logf
 17329 ;; This function uses a non-reentrant model
 17330 ;;
 17331                           
 17332                           
 17333                           ;psect for function ___flsub
 17334  3485                     ___flsub:	
 17335                           
 17336                           ;incstack = 0
 17337                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 17338  3485  3080               	movlw	128
 17339  3486  0021               	movlb	1	; select bank1
 17340  3487  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 17341  3488  0827               	movf	(___flsub@b+3)^(0+128),w
 17342  3489  0020               	movlb	0	; select bank0
 17343  348A  00DD               	movwf	___fladd@b+3
 17344  348B  0021               	movlb	1	; select bank1
 17345  348C  0826               	movf	(___flsub@b+2)^(0+128),w
 17346  348D  0020               	movlb	0	; select bank0
 17347  348E  00DC               	movwf	___fladd@b+2
 17348  348F  0021               	movlb	1	; select bank1
 17349  3490  0825               	movf	(___flsub@b+1)^(0+128),w
 17350  3491  0020               	movlb	0	; select bank0
 17351  3492  00DB               	movwf	___fladd@b+1
 17352  3493  0021               	movlb	1	; select bank1
 17353  3494  0824               	movf	___flsub@b^(0+128),w
 17354  3495  0020               	movlb	0	; select bank0
 17355  3496  00DA               	movwf	___fladd@b
 17356  3497  0021               	movlb	1	; select bank1
 17357  3498  0823               	movf	(___flsub@a+3)^(0+128),w
 17358  3499  0020               	movlb	0	; select bank0
 17359  349A  00E1               	movwf	___fladd@a+3
 17360  349B  0021               	movlb	1	; select bank1
 17361  349C  0822               	movf	(___flsub@a+2)^(0+128),w
 17362  349D  0020               	movlb	0	; select bank0
 17363  349E  00E0               	movwf	___fladd@a+2
 17364  349F  0021               	movlb	1	; select bank1
 17365  34A0  0821               	movf	(___flsub@a+1)^(0+128),w
 17366  34A1  0020               	movlb	0	; select bank0
 17367  34A2  00DF               	movwf	___fladd@a+1
 17368  34A3  0021               	movlb	1	; select bank1
 17369  34A4  0820               	movf	___flsub@a^(0+128),w
 17370  34A5  0020               	movlb	0	; select bank0
 17371  34A6  00DE               	movwf	___fladd@a
 17372  34A7  3185  25E8         	fcall	___fladd
 17373  34A9  0020               	movlb	0	; select bank0
 17374  34AA  085D               	movf	?___fladd+3,w
 17375  34AB  0021               	movlb	1	; select bank1
 17376  34AC  00A3               	movwf	(?___flsub+3)^(0+128)
 17377  34AD  0020               	movlb	0	; select bank0
 17378  34AE  085C               	movf	?___fladd+2,w
 17379  34AF  0021               	movlb	1	; select bank1
 17380  34B0  00A2               	movwf	(?___flsub+2)^(0+128)
 17381  34B1  0020               	movlb	0	; select bank0
 17382  34B2  085B               	movf	?___fladd+1,w
 17383  34B3  0021               	movlb	1	; select bank1
 17384  34B4  00A1               	movwf	(?___flsub+1)^(0+128)
 17385  34B5  0020               	movlb	0	; select bank0
 17386  34B6  085A               	movf	?___fladd,w
 17387  34B7  0021               	movlb	1	; select bank1
 17388  34B8  00A0               	movwf	?___flsub^(0+128)
 17389  34B9  0008               	return
 17390  34BA                     __end_of___flsub:	
 17391                           
 17392                           	psect	text58
 17393  05E8                     __ptext58:	
 17394 ;; *************** function ___fladd *****************
 17395 ;; Defined at:
 17396 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 17397 ;; Parameters:    Size  Location     Type
 17398 ;;  b               4   58[BANK0 ] void 
 17399 ;;  a               4   62[BANK0 ] void 
 17400 ;; Auto vars:     Size  Location     Type
 17401 ;;  grs             1   77[BANK0 ] unsigned char 
 17402 ;;  bexp            1   76[BANK0 ] unsigned char 
 17403 ;;  aexp            1   75[BANK0 ] unsigned char 
 17404 ;;  signs           1   74[BANK0 ] unsigned char 
 17405 ;; Return value:  Size  Location     Type
 17406 ;;                  4   58[BANK0 ] unsigned char 
 17407 ;; Registers used:
 17408 ;;		wreg, status,2, status,0
 17409 ;; Tracked objects:
 17410 ;;		On entry : 0/0
 17411 ;;		On exit  : 0/0
 17412 ;;		Unchanged: 0/0
 17413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17414 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17415 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17416 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17417 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17418 ;;Total ram usage:       20 bytes
 17419 ;; Hardware stack levels used:    1
 17420 ;; Hardware stack levels required when called:    1
 17421 ;; This function calls:
 17422 ;;		Nothing
 17423 ;; This function is called by:
 17424 ;;		_updateVoltages
 17425 ;;		_updateTemperatures
 17426 ;;		___flsub
 17427 ;;		_logf
 17428 ;; This function uses a non-reentrant model
 17429 ;;
 17430                           
 17431                           
 17432                           ;psect for function ___fladd
 17433  05E8                     ___fladd:	
 17434                           
 17435                           ;incstack = 0
 17436                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 17437  05E8  0020               	movlb	0	; select bank0
 17438  05E9  085D               	movf	___fladd@b+3,w
 17439  05EA  3980               	andlw	128
 17440  05EB  00E2               	movwf	??___fladd
 17441  05EC  0862               	movf	??___fladd,w
 17442  05ED  00EA               	movwf	___fladd@signs
 17443  05EE  355D               	lslf	___fladd@b+3,w
 17444  05EF  00E2               	movwf	??___fladd
 17445  05F0  0862               	movf	??___fladd,w
 17446  05F1  00EC               	movwf	___fladd@bexp
 17447  05F2  1BDC               	btfsc	___fladd@b+2,7
 17448  05F3  146C               	bsf	___fladd@bexp,0
 17449  05F4  086C               	movf	___fladd@bexp,w
 17450  05F5  1903               	btfsc	3,2
 17451  05F6  2E05               	goto	l5102
 17452  05F7  0A6C               	incf	___fladd@bexp,w
 17453  05F8  1D03               	btfss	3,2
 17454  05F9  2E02               	goto	l5098
 17455  05FA  3000               	movlw	0
 17456  05FB  00DD               	movwf	___fladd@b+3
 17457  05FC  3000               	movlw	0
 17458  05FD  00DC               	movwf	___fladd@b+2
 17459  05FE  3000               	movlw	0
 17460  05FF  00DB               	movwf	___fladd@b+1
 17461  0600  3000               	movlw	0
 17462  0601  00DA               	movwf	___fladd@b
 17463  0602                     l5098:	
 17464  0602  17DC               	bsf	___fladd@b+2,7
 17465  0603  01DD               	clrf	___fladd@b+3
 17466  0604  2E0D               	goto	l5104
 17467  0605                     l5102:	
 17468  0605  3000               	movlw	0
 17469  0606  00DD               	movwf	___fladd@b+3
 17470  0607  3000               	movlw	0
 17471  0608  00DC               	movwf	___fladd@b+2
 17472  0609  3000               	movlw	0
 17473  060A  00DB               	movwf	___fladd@b+1
 17474  060B  3000               	movlw	0
 17475  060C  00DA               	movwf	___fladd@b
 17476  060D                     l5104:	
 17477  060D  0861               	movf	___fladd@a+3,w
 17478  060E  3980               	andlw	128
 17479  060F  00E2               	movwf	??___fladd
 17480  0610  0862               	movf	??___fladd,w
 17481  0611  00EB               	movwf	___fladd@aexp
 17482  0612  086B               	movf	___fladd@aexp,w
 17483  0613  066A               	xorwf	___fladd@signs,w
 17484  0614  1D03               	btfss	3,2
 17485  0615  176A               	bsf	___fladd@signs,6
 17486  0616  3561               	lslf	___fladd@a+3,w
 17487  0617  00E2               	movwf	??___fladd
 17488  0618  0862               	movf	??___fladd,w
 17489  0619  00EB               	movwf	___fladd@aexp
 17490  061A  1BE0               	btfsc	___fladd@a+2,7
 17491  061B  146B               	bsf	___fladd@aexp,0
 17492  061C  086B               	movf	___fladd@aexp,w
 17493  061D  1903               	btfsc	3,2
 17494  061E  2E2D               	goto	l5126
 17495  061F  0A6B               	incf	___fladd@aexp,w
 17496  0620  1D03               	btfss	3,2
 17497  0621  2E2A               	goto	l5122
 17498  0622  3000               	movlw	0
 17499  0623  00E1               	movwf	___fladd@a+3
 17500  0624  3000               	movlw	0
 17501  0625  00E0               	movwf	___fladd@a+2
 17502  0626  3000               	movlw	0
 17503  0627  00DF               	movwf	___fladd@a+1
 17504  0628  3000               	movlw	0
 17505  0629  00DE               	movwf	___fladd@a
 17506  062A                     l5122:	
 17507  062A  17E0               	bsf	___fladd@a+2,7
 17508  062B  01E1               	clrf	___fladd@a+3
 17509  062C  2E35               	goto	l1316
 17510  062D                     l5126:	
 17511  062D  3000               	movlw	0
 17512  062E  00E1               	movwf	___fladd@a+3
 17513  062F  3000               	movlw	0
 17514  0630  00E0               	movwf	___fladd@a+2
 17515  0631  3000               	movlw	0
 17516  0632  00DF               	movwf	___fladd@a+1
 17517  0633  3000               	movlw	0
 17518  0634  00DE               	movwf	___fladd@a
 17519  0635                     l1316:	
 17520  0635  086C               	movf	___fladd@bexp,w
 17521  0636  026B               	subwf	___fladd@aexp,w
 17522  0637  1803               	skipnc
 17523  0638  2E7B               	goto	l5162
 17524  0639  1F6A               	btfss	___fladd@signs,6
 17525  063A  2E3F               	goto	l5132
 17526  063B  3080               	movlw	128
 17527  063C  00E2               	movwf	??___fladd
 17528  063D  0862               	movf	??___fladd,w
 17529  063E  06EA               	xorwf	___fladd@signs,f
 17530  063F                     l5132:	
 17531  063F  086C               	movf	___fladd@bexp,w
 17532  0640  00E2               	movwf	??___fladd
 17533  0641  0862               	movf	??___fladd,w
 17534  0642  00ED               	movwf	___fladd@grs
 17535  0643  086B               	movf	___fladd@aexp,w
 17536  0644  00E2               	movwf	??___fladd
 17537  0645  0862               	movf	??___fladd,w
 17538  0646  00EC               	movwf	___fladd@bexp
 17539  0647  086D               	movf	___fladd@grs,w
 17540  0648  00E2               	movwf	??___fladd
 17541  0649  0862               	movf	??___fladd,w
 17542  064A  00EB               	movwf	___fladd@aexp
 17543  064B  085A               	movf	___fladd@b,w
 17544  064C  00E2               	movwf	??___fladd
 17545  064D  0862               	movf	??___fladd,w
 17546  064E  00ED               	movwf	___fladd@grs
 17547  064F  085E               	movf	___fladd@a,w
 17548  0650  00E2               	movwf	??___fladd
 17549  0651  0862               	movf	??___fladd,w
 17550  0652  00DA               	movwf	___fladd@b
 17551  0653  086D               	movf	___fladd@grs,w
 17552  0654  00E2               	movwf	??___fladd
 17553  0655  0862               	movf	??___fladd,w
 17554  0656  00DE               	movwf	___fladd@a
 17555  0657  085B               	movf	___fladd@b+1,w
 17556  0658  00E2               	movwf	??___fladd
 17557  0659  0862               	movf	??___fladd,w
 17558  065A  00ED               	movwf	___fladd@grs
 17559  065B  085F               	movf	___fladd@a+1,w
 17560  065C  00E2               	movwf	??___fladd
 17561  065D  0862               	movf	??___fladd,w
 17562  065E  00DB               	movwf	___fladd@b+1
 17563  065F  086D               	movf	___fladd@grs,w
 17564  0660  00E2               	movwf	??___fladd
 17565  0661  0862               	movf	??___fladd,w
 17566  0662  00DF               	movwf	___fladd@a+1
 17567  0663  085C               	movf	___fladd@b+2,w
 17568  0664  00E2               	movwf	??___fladd
 17569  0665  0862               	movf	??___fladd,w
 17570  0666  00ED               	movwf	___fladd@grs
 17571  0667  0860               	movf	___fladd@a+2,w
 17572  0668  00E2               	movwf	??___fladd
 17573  0669  0862               	movf	??___fladd,w
 17574  066A  00DC               	movwf	___fladd@b+2
 17575  066B  086D               	movf	___fladd@grs,w
 17576  066C  00E2               	movwf	??___fladd
 17577  066D  0862               	movf	??___fladd,w
 17578  066E  00E0               	movwf	___fladd@a+2
 17579  066F  085D               	movf	___fladd@b+3,w
 17580  0670  00E2               	movwf	??___fladd
 17581  0671  0862               	movf	??___fladd,w
 17582  0672  00ED               	movwf	___fladd@grs
 17583  0673  0861               	movf	___fladd@a+3,w
 17584  0674  00E2               	movwf	??___fladd
 17585  0675  0862               	movf	??___fladd,w
 17586  0676  00DD               	movwf	___fladd@b+3
 17587  0677  086D               	movf	___fladd@grs,w
 17588  0678  00E2               	movwf	??___fladd
 17589  0679  0862               	movf	??___fladd,w
 17590  067A  00E1               	movwf	___fladd@a+3
 17591  067B                     l5162:	
 17592  067B  01ED               	clrf	___fladd@grs
 17593  067C  086B               	movf	___fladd@aexp,w
 17594  067D  00E2               	movwf	??___fladd
 17595  067E  01E3               	clrf	??___fladd+1
 17596  067F  0863               	movf	??___fladd+1,w
 17597  0680  00E5               	movwf	??___fladd+3
 17598  0681  086C               	movf	___fladd@bexp,w
 17599  0682  0262               	subwf	??___fladd,w
 17600  0683  00E4               	movwf	??___fladd+2
 17601  0684  1C03               	skipc
 17602  0685  03E5               	decf	??___fladd+3,f
 17603  0686  0865               	movf	??___fladd+3,w
 17604  0687  3A80               	xorlw	128
 17605  0688  00E6               	movwf	??___fladd+4
 17606  0689  3080               	movlw	128
 17607  068A  0266               	subwf	??___fladd+4,w
 17608  068B  1D03               	skipz
 17609  068C  2E8F               	goto	u5865
 17610  068D  301A               	movlw	26
 17611  068E  0264               	subwf	??___fladd+2,w
 17612  068F                     u5865:	
 17613  068F  1C03               	skipc
 17614  0690  2EC3               	goto	l5180
 17615  0691  0020               	movlb	0	; select bank0
 17616  0692  085D               	movf	___fladd@b+3,w
 17617  0693  045C               	iorwf	___fladd@b+2,w
 17618  0694  045B               	iorwf	___fladd@b+1,w
 17619  0695  045A               	iorwf	___fladd@b,w
 17620  0696  1903               	btfsc	3,2
 17621  0697  2E9A               	goto	u5870
 17622  0698  3001               	movlw	1
 17623  0699  2E9B               	goto	u5880
 17624  069A                     u5870:	
 17625  069A  3000               	movlw	0
 17626  069B                     u5880:	
 17627  069B  00E2               	movwf	??___fladd
 17628  069C  0862               	movf	??___fladd,w
 17629  069D  00ED               	movwf	___fladd@grs
 17630  069E  3000               	movlw	0
 17631  069F  00DD               	movwf	___fladd@b+3
 17632  06A0  3000               	movlw	0
 17633  06A1  00DC               	movwf	___fladd@b+2
 17634  06A2  3000               	movlw	0
 17635  06A3  00DB               	movwf	___fladd@b+1
 17636  06A4  3000               	movlw	0
 17637  06A5  00DA               	movwf	___fladd@b
 17638  06A6  086B               	movf	___fladd@aexp,w
 17639  06A7  00E2               	movwf	??___fladd
 17640  06A8  0862               	movf	??___fladd,w
 17641  06A9  00EC               	movwf	___fladd@bexp
 17642  06AA  2EC8               	goto	l1320
 17643  06AB                     l1322:	
 17644  06AB  1C6D               	btfss	___fladd@grs,0
 17645  06AC  2EB3               	goto	l5170
 17646  06AD  366D               	lsrf	___fladd@grs,w
 17647  06AE  3801               	iorlw	1
 17648  06AF  00E2               	movwf	??___fladd
 17649  06B0  0862               	movf	??___fladd,w
 17650  06B1  00ED               	movwf	___fladd@grs
 17651  06B2  2EB5               	goto	l5172
 17652  06B3                     l5170:	
 17653  06B3  1003               	clrc
 17654  06B4  0CED               	rrf	___fladd@grs,f
 17655  06B5                     l5172:	
 17656  06B5  185A               	btfsc	___fladd@b,0
 17657  06B6  17ED               	bsf	___fladd@grs,7
 17658  06B7  3001               	movlw	1
 17659  06B8  00E2               	movwf	??___fladd
 17660  06B9                     u5915:	
 17661  06B9  37DD               	asrf	___fladd@b+3,f
 17662  06BA  0CDC               	rrf	___fladd@b+2,f
 17663  06BB  0CDB               	rrf	___fladd@b+1,f
 17664  06BC  0CDA               	rrf	___fladd@b,f
 17665  06BD  0BE2               	decfsz	??___fladd& (0+127),f
 17666  06BE  2EB9               	goto	u5915
 17667  06BF  3001               	movlw	1
 17668  06C0  00E2               	movwf	??___fladd
 17669  06C1  0862               	movf	??___fladd,w
 17670  06C2  07EC               	addwf	___fladd@bexp,f
 17671  06C3                     l5180:	
 17672  06C3  0020               	movlb	0	; select bank0
 17673  06C4  086B               	movf	___fladd@aexp,w
 17674  06C5  026C               	subwf	___fladd@bexp,w
 17675  06C6  1C03               	skipc
 17676  06C7  2EAB               	goto	l1322
 17677  06C8                     l1320:	
 17678  06C8  1B6A               	btfsc	___fladd@signs,6
 17679  06C9  2EF9               	goto	l5206
 17680  06CA  086C               	movf	___fladd@bexp,w
 17681  06CB  1D03               	btfss	3,2
 17682  06CC  2ED6               	goto	l5188
 17683  06CD  3000               	movlw	0
 17684  06CE  00DD               	movwf	?___fladd+3
 17685  06CF  3000               	movlw	0
 17686  06D0  00DC               	movwf	?___fladd+2
 17687  06D1  3000               	movlw	0
 17688  06D2  00DB               	movwf	?___fladd+1
 17689  06D3  3000               	movlw	0
 17690  06D4  00DA               	movwf	?___fladd
 17691  06D5  0008               	return
 17692  06D6                     l5188:	
 17693  06D6  085E               	movf	___fladd@a,w
 17694  06D7  07DA               	addwf	___fladd@b,f
 17695  06D8  085F               	movf	___fladd@a+1,w
 17696  06D9  3DDB               	addwfc	___fladd@b+1,f
 17697  06DA  0860               	movf	___fladd@a+2,w
 17698  06DB  3DDC               	addwfc	___fladd@b+2,f
 17699  06DC  0861               	movf	___fladd@a+3,w
 17700  06DD  3DDD               	addwfc	___fladd@b+3,f
 17701  06DE  1C5D               	btfss	___fladd@b+3,0
 17702  06DF  2F73               	goto	l5240
 17703  06E0  1C6D               	btfss	___fladd@grs,0
 17704  06E1  2EE8               	goto	l5196
 17705  06E2  366D               	lsrf	___fladd@grs,w
 17706  06E3  3801               	iorlw	1
 17707  06E4  00E2               	movwf	??___fladd
 17708  06E5  0862               	movf	??___fladd,w
 17709  06E6  00ED               	movwf	___fladd@grs
 17710  06E7  2EEA               	goto	l5198
 17711  06E8                     l5196:	
 17712  06E8  1003               	clrc
 17713  06E9  0CED               	rrf	___fladd@grs,f
 17714  06EA                     l5198:	
 17715  06EA  185A               	btfsc	___fladd@b,0
 17716  06EB  17ED               	bsf	___fladd@grs,7
 17717  06EC  3001               	movlw	1
 17718  06ED  00E2               	movwf	??___fladd
 17719  06EE                     u5985:	
 17720  06EE  37DD               	asrf	___fladd@b+3,f
 17721  06EF  0CDC               	rrf	___fladd@b+2,f
 17722  06F0  0CDB               	rrf	___fladd@b+1,f
 17723  06F1  0CDA               	rrf	___fladd@b,f
 17724  06F2  0BE2               	decfsz	??___fladd& (0+127),f
 17725  06F3  2EEE               	goto	u5985
 17726  06F4  3001               	movlw	1
 17727  06F5  00E2               	movwf	??___fladd
 17728  06F6  0862               	movf	??___fladd,w
 17729  06F7  07EC               	addwf	___fladd@bexp,f
 17730  06F8  2F73               	goto	l5240
 17731  06F9                     l5206:	
 17732  06F9  085D               	movf	___fladd@b+3,w
 17733  06FA  3A80               	xorlw	128
 17734  06FB  00E2               	movwf	??___fladd
 17735  06FC  0861               	movf	___fladd@a+3,w
 17736  06FD  3A80               	xorlw	128
 17737  06FE  0262               	subwf	??___fladd,w
 17738  06FF  1D03               	skipz
 17739  0700  2F0B               	goto	u5993
 17740  0701  0860               	movf	___fladd@a+2,w
 17741  0702  025C               	subwf	___fladd@b+2,w
 17742  0703  1D03               	skipz
 17743  0704  2F0B               	goto	u5993
 17744  0705  085F               	movf	___fladd@a+1,w
 17745  0706  025B               	subwf	___fladd@b+1,w
 17746  0707  1D03               	skipz
 17747  0708  2F0B               	goto	u5993
 17748  0709  085E               	movf	___fladd@a,w
 17749  070A  025A               	subwf	___fladd@b,w
 17750  070B                     u5993:	
 17751  070B  1803               	skipnc
 17752  070C  2F43               	goto	l5216
 17753  070D  30FF               	movlw	255
 17754  070E  00E2               	movwf	??___fladd
 17755  070F  30FF               	movlw	255
 17756  0710  00E3               	movwf	??___fladd+1
 17757  0711  30FF               	movlw	255
 17758  0712  00E4               	movwf	??___fladd+2
 17759  0713  30FF               	movlw	255
 17760  0714  00E5               	movwf	??___fladd+3
 17761  0715  085A               	movf	___fladd@b,w
 17762  0716  025E               	subwf	___fladd@a,w
 17763  0717  00E6               	movwf	??___fladd+4
 17764  0718  085B               	movf	___fladd@b+1,w
 17765  0719  3B5F               	subwfb	___fladd@a+1,w
 17766  071A  00E7               	movwf	??___fladd+5
 17767  071B  085C               	movf	___fladd@b+2,w
 17768  071C  3B60               	subwfb	___fladd@a+2,w
 17769  071D  00E8               	movwf	??___fladd+6
 17770  071E  085D               	movf	___fladd@b+3,w
 17771  071F  3B61               	subwfb	___fladd@a+3,w
 17772  0720  00E9               	movwf	??___fladd+7
 17773  0721  0866               	movf	??___fladd+4,w
 17774  0722  07E2               	addwf	??___fladd,f
 17775  0723  0867               	movf	??___fladd+5,w
 17776  0724  3DE3               	addwfc	??___fladd+1,f
 17777  0725  0868               	movf	??___fladd+6,w
 17778  0726  3DE4               	addwfc	??___fladd+2,f
 17779  0727  0869               	movf	??___fladd+7,w
 17780  0728  3DE5               	addwfc	??___fladd+3,f
 17781  0729  0865               	movf	??___fladd+3,w
 17782  072A  00DD               	movwf	___fladd@b+3
 17783  072B  0864               	movf	??___fladd+2,w
 17784  072C  00DC               	movwf	___fladd@b+2
 17785  072D  0863               	movf	??___fladd+1,w
 17786  072E  00DB               	movwf	___fladd@b+1
 17787  072F  0862               	movf	??___fladd,w
 17788  0730  00DA               	movwf	___fladd@b
 17789  0731  3080               	movlw	128
 17790  0732  00E2               	movwf	??___fladd
 17791  0733  0862               	movf	??___fladd,w
 17792  0734  06EA               	xorwf	___fladd@signs,f
 17793  0735  09ED               	comf	___fladd@grs,f
 17794  0736  0AED               	incf	___fladd@grs,f
 17795  0737  086D               	movf	___fladd@grs,w
 17796  0738  1D03               	btfss	3,2
 17797  0739  2F4B               	goto	l1337
 17798  073A  3001               	movlw	1
 17799  073B  07DA               	addwf	___fladd@b,f
 17800  073C  3000               	movlw	0
 17801  073D  3DDB               	addwfc	___fladd@b+1,f
 17802  073E  3000               	movlw	0
 17803  073F  3DDC               	addwfc	___fladd@b+2,f
 17804  0740  3000               	movlw	0
 17805  0741  3DDD               	addwfc	___fladd@b+3,f
 17806  0742  2F4B               	goto	l1337
 17807  0743                     l5216:	
 17808  0743  085E               	movf	___fladd@a,w
 17809  0744  02DA               	subwf	___fladd@b,f
 17810  0745  085F               	movf	___fladd@a+1,w
 17811  0746  3BDB               	subwfb	___fladd@b+1,f
 17812  0747  0860               	movf	___fladd@a+2,w
 17813  0748  3BDC               	subwfb	___fladd@b+2,f
 17814  0749  0861               	movf	___fladd@a+3,w
 17815  074A  3BDD               	subwfb	___fladd@b+3,f
 17816  074B                     l1337:	
 17817  074B  085D               	movf	___fladd@b+3,w
 17818  074C  045C               	iorwf	___fladd@b+2,w
 17819  074D  045B               	iorwf	___fladd@b+1,w
 17820  074E  045A               	iorwf	___fladd@b,w
 17821  074F  1D03               	skipz
 17822  0750  2F71               	goto	l5238
 17823  0751  086D               	movf	___fladd@grs,w
 17824  0752  1D03               	btfss	3,2
 17825  0753  2F71               	goto	l5238
 17826  0754  3000               	movlw	0
 17827  0755  00DD               	movwf	?___fladd+3
 17828  0756  3000               	movlw	0
 17829  0757  00DC               	movwf	?___fladd+2
 17830  0758  3000               	movlw	0
 17831  0759  00DB               	movwf	?___fladd+1
 17832  075A  3000               	movlw	0
 17833  075B  00DA               	movwf	?___fladd
 17834  075C  0008               	return
 17835  075D                     l5224:	
 17836  075D  3001               	movlw	1
 17837  075E                     u6035:	
 17838  075E  35DA               	lslf	___fladd@b,f
 17839  075F  0DDB               	rlf	___fladd@b+1,f
 17840  0760  0DDC               	rlf	___fladd@b+2,f
 17841  0761  0DDD               	rlf	___fladd@b+3,f
 17842  0762  0B89               	decfsz	9,f
 17843  0763  2F5E               	goto	u6035
 17844  0764  1BED               	btfsc	___fladd@grs,7
 17845  0765  145A               	bsf	___fladd@b,0
 17846  0766  1C6D               	btfss	___fladd@grs,0
 17847  0767  2F6A               	goto	l5232
 17848  0768  1403               	setc
 17849  0769  2F6B               	goto	L4
 17850  076A                     l5232:	
 17851  076A  1003               	clrc
 17852  076B                     L4:	
 17853  076B  0DED               	rlf	___fladd@grs,f
 17854  076C  086C               	movf	___fladd@bexp,w
 17855  076D  1903               	btfsc	3,2
 17856  076E  2F71               	goto	l5238
 17857  076F  3001               	movlw	1
 17858  0770  02EC               	subwf	___fladd@bexp,f
 17859  0771                     l5238:	
 17860  0771  1FDC               	btfss	___fladd@b+2,7
 17861  0772  2F5D               	goto	l5224
 17862  0773                     l5240:	
 17863  0773  01EB               	clrf	___fladd@aexp
 17864  0774  1FED               	btfss	___fladd@grs,7
 17865  0775  2F7E               	goto	l5250
 17866  0776  086D               	movf	___fladd@grs,w
 17867  0777  397F               	andlw	127
 17868  0778  1903               	btfsc	3,2
 17869  0779  185A               	btfsc	___fladd@b,0
 17870  077A  2F7C               	goto	l5246
 17871  077B  2F7E               	goto	l5250
 17872  077C                     l5246:	
 17873  077C  01EB               	clrf	___fladd@aexp
 17874  077D  0AEB               	incf	___fladd@aexp,f
 17875  077E                     l5250:	
 17876  077E  086B               	movf	___fladd@aexp,w
 17877  077F  1903               	btfsc	3,2
 17878  0780  2FAA               	goto	l1350
 17879  0781  3001               	movlw	1
 17880  0782  07DA               	addwf	___fladd@b,f
 17881  0783  3000               	movlw	0
 17882  0784  3DDB               	addwfc	___fladd@b+1,f
 17883  0785  3000               	movlw	0
 17884  0786  3DDC               	addwfc	___fladd@b+2,f
 17885  0787  3000               	movlw	0
 17886  0788  3DDD               	addwfc	___fladd@b+3,f
 17887  0789  1C5D               	btfss	___fladd@b+3,0
 17888  078A  2FAA               	goto	l1350
 17889  078B  085A               	movf	___fladd@b,w
 17890  078C  00E2               	movwf	??___fladd
 17891  078D  085B               	movf	___fladd@b+1,w
 17892  078E  00E3               	movwf	??___fladd+1
 17893  078F  085C               	movf	___fladd@b+2,w
 17894  0790  00E4               	movwf	??___fladd+2
 17895  0791  085D               	movf	___fladd@b+3,w
 17896  0792  00E5               	movwf	??___fladd+3
 17897  0793  3001               	movlw	1
 17898  0794  00E6               	movwf	??___fladd+4
 17899  0795                     u6135:	
 17900  0795  37E5               	asrf	??___fladd+3,f
 17901  0796  0CE4               	rrf	??___fladd+2,f
 17902  0797  0CE3               	rrf	??___fladd+1,f
 17903  0798  0CE2               	rrf	??___fladd,f
 17904  0799  0BE6               	decfsz	??___fladd+4,f
 17905  079A  2F95               	goto	u6135
 17906  079B  0865               	movf	??___fladd+3,w
 17907  079C  00DD               	movwf	___fladd@b+3
 17908  079D  0864               	movf	??___fladd+2,w
 17909  079E  00DC               	movwf	___fladd@b+2
 17910  079F  0863               	movf	??___fladd+1,w
 17911  07A0  00DB               	movwf	___fladd@b+1
 17912  07A1  0862               	movf	??___fladd,w
 17913  07A2  00DA               	movwf	___fladd@b
 17914  07A3  0A6C               	incf	___fladd@bexp,w
 17915  07A4  1903               	btfsc	3,2
 17916  07A5  2FAA               	goto	l1350
 17917  07A6  3001               	movlw	1
 17918  07A7  00E2               	movwf	??___fladd
 17919  07A8  0862               	movf	??___fladd,w
 17920  07A9  07EC               	addwf	___fladd@bexp,f
 17921  07AA                     l1350:	
 17922  07AA  0A6C               	incf	___fladd@bexp,w
 17923  07AB  1D03               	btfss	3,2
 17924  07AC  086C               	movf	___fladd@bexp,w
 17925  07AD  1D03               	btfss	3,2
 17926  07AE  2FBA               	goto	l5268
 17927  07AF  3000               	movlw	0
 17928  07B0  00DD               	movwf	___fladd@b+3
 17929  07B1  3000               	movlw	0
 17930  07B2  00DC               	movwf	___fladd@b+2
 17931  07B3  3000               	movlw	0
 17932  07B4  00DB               	movwf	___fladd@b+1
 17933  07B5  3000               	movlw	0
 17934  07B6  00DA               	movwf	___fladd@b
 17935  07B7  086C               	movf	___fladd@bexp,w
 17936  07B8  1903               	btfsc	3,2
 17937  07B9  01EA               	clrf	___fladd@signs
 17938  07BA                     l5268:	
 17939  07BA  1C6C               	btfss	___fladd@bexp,0
 17940  07BB  2FBE               	goto	l5272
 17941  07BC  17DC               	bsf	___fladd@b+2,7
 17942  07BD  2FC2               	goto	l1358
 17943  07BE                     l5272:	
 17944  07BE  307F               	movlw	127
 17945  07BF  00E2               	movwf	??___fladd
 17946  07C0  0862               	movf	??___fladd,w
 17947  07C1  05DC               	andwf	___fladd@b+2,f
 17948  07C2                     l1358:	
 17949  07C2  366C               	lsrf	___fladd@bexp,w
 17950  07C3  00E2               	movwf	??___fladd
 17951  07C4  0862               	movf	??___fladd,w
 17952  07C5  00DD               	movwf	___fladd@b+3
 17953  07C6  1FEA               	btfss	___fladd@signs,7
 17954  07C7  0008               	return
 17955  07C8  17DD               	bsf	___fladd@b+3,7
 17956  07C9  0008               	return
 17957  07CA                     __end_of___fladd:	
 17958                           
 17959                           	psect	text59
 17960  2E5E                     __ptext59:	
 17961 ;; *************** function _calibrate_BATTSOC *****************
 17962 ;; Defined at:
 17963 ;;		line 23 in file "algorithms.c"
 17964 ;; Parameters:    Size  Location     Type
 17965 ;;		None
 17966 ;; Auto vars:     Size  Location     Type
 17967 ;;  j               2   24[BANK1 ] int 
 17968 ;;  i               2   22[BANK1 ] int 
 17969 ;; Return value:  Size  Location     Type
 17970 ;;                  1    wreg      void 
 17971 ;; Registers used:
 17972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17973 ;; Tracked objects:
 17974 ;;		On entry : 0/0
 17975 ;;		On exit  : 0/0
 17976 ;;		Unchanged: 0/0
 17977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17979 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17980 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17981 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17982 ;;Total ram usage:        9 bytes
 17983 ;; Hardware stack levels used:    1
 17984 ;; Hardware stack levels required when called:    3
 17985 ;; This function calls:
 17986 ;;		___fldiv
 17987 ;;		___flmul
 17988 ;;		___fltol
 17989 ;;		___xxtofl
 17990 ;; This function is called by:
 17991 ;;		_AFE_UPDATE
 17992 ;; This function uses a non-reentrant model
 17993 ;;
 17994                           
 17995                           
 17996                           ;psect for function _calibrate_BATTSOC
 17997  2E5E                     _calibrate_BATTSOC:	
 17998                           
 17999                           ;algorithms.c: 26:     for(int i = 0; i<5;i++){
 18000                           
 18001                           ;incstack = 0
 18002                           ; Regs used in _calibrate_BATTSOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18003  2E5E  0021               	movlb	1	; select bank1
 18004  2E5F  01B6               	clrf	calibrate_BATTSOC@i^(0+128)
 18005  2E60  01B7               	clrf	(calibrate_BATTSOC@i+1)^(0+128)
 18006  2E61                     l6116:	
 18007                           
 18008                           ;algorithms.c: 27:         for(int j = 0; j < 46; j++ ){
 18009  2E61  0021               	movlb	1	; select bank1
 18010  2E62  01B8               	clrf	calibrate_BATTSOC@j^(0+128)
 18011  2E63  01B9               	clrf	(calibrate_BATTSOC@j+1)^(0+128)
 18012  2E64                     l6122:	
 18013                           
 18014                           ;algorithms.c: 28:             if(cellVoltages[i]>=lookupTableSamsung_voltage[j]){
 18015  2E64  0021               	movlb	1	; select bank1
 18016  2E65  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18017  2E66  0085               	movwf	5
 18018  2E67  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 18019  2E68  0084               	movwf	4
 18020  2E69  3584               	lslf	4,f
 18021  2E6A  0D85               	rlf	5,f
 18022  2E6B  305C               	movlw	low (_lookupTableSamsung_voltage| (0+32768))
 18023  2E6C  0784               	addwf	4,f
 18024  2E6D  30B8               	movlw	high (_lookupTableSamsung_voltage| (0+32768))
 18025  2E6E  3D85               	addwfc	5,f
 18026  2E6F  3F00               	moviw [0]fsr0
 18027  2E70  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18028  2E71  3F01               	moviw [1]fsr0
 18029  2E72  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 18030  2E73  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 18031  2E74  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 18032  2E75  0086               	movwf	6
 18033  2E76  3001               	movlw	1	; select bank3/4
 18034  2E77  0087               	movwf	7
 18035  2E78  3F40               	moviw [0]fsr1
 18036  2E79  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 18037  2E7A  3F41               	moviw [1]fsr1
 18038  2E7B  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 18039  2E7C  0834               	movf	(??_calibrate_BATTSOC+3)^(0+128),w
 18040  2E7D  3A80               	xorlw	128
 18041  2E7E  00B5               	movwf	(??_calibrate_BATTSOC+4)^(0+128)
 18042  2E7F  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18043  2E80  3A80               	xorlw	128
 18044  2E81  0235               	subwf	(??_calibrate_BATTSOC+4)^(0+128),w
 18045  2E82  1D03               	skipz
 18046  2E83  2E86               	goto	u7605
 18047  2E84  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18048  2E85  0233               	subwf	(??_calibrate_BATTSOC+2)^(0+128),w
 18049  2E86                     u7605:	
 18050  2E86  1C03               	skipc
 18051  2E87  2F03               	goto	l6128
 18052                           
 18053                           ;algorithms.c: 29:                 cellSOC[i] = lookupTableSamsung_SOC[j];
 18054  2E88  0021               	movlb	1	; select bank1
 18055  2E89  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18056  2E8A  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 18057  2E8B  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 18058  2E8C  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18059  2E8D  35B1               	lslf	??_calibrate_BATTSOC^(0+128),f
 18060  2E8E  0DB2               	rlf	(??_calibrate_BATTSOC^(0+128)+1),f
 18061  2E8F  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 18062  2E90  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 18063  2E91  30B8               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 18064  2E92  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 18065  2E93  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18066  2E94  0733               	addwf	(??_calibrate_BATTSOC+2)^(0+128),w
 18067  2E95  0086               	movwf	6
 18068  2E96  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18069  2E97  3D34               	addwfc	(??_calibrate_BATTSOC+3)^(0+128),w
 18070  2E98  0087               	movwf	7
 18071  2E99  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 18072  2E9A  3E2A               	addlw	(low (_cellSOC| (0+512)))& (0+255)
 18073  2E9B  0084               	movwf	4
 18074  2E9C  3002               	movlw	2	; select bank4/5
 18075  2E9D  0085               	movwf	5
 18076  2E9E  3F40               	moviw [0]fsr1
 18077  2E9F  3F80               	movwi [0]fsr0
 18078  2EA0  3F41               	moviw [1]fsr1
 18079  2EA1  3F81               	movwi [1]fsr0
 18080                           
 18081                           ;algorithms.c: 30:                 cellCharge[i] = (lookupTableSamsung_SOC[j]/100.0) * s
      +                          amsung_cell_max_charge;
 18082  2EA2  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18083  2EA3  0085               	movwf	5
 18084  2EA4  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 18085  2EA5  0084               	movwf	4
 18086  2EA6  3584               	lslf	4,f
 18087  2EA7  0D85               	rlf	5,f
 18088  2EA8  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 18089  2EA9  0784               	addwf	4,f
 18090  2EAA  30B8               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 18091  2EAB  3D85               	addwfc	5,f
 18092  2EAC  3F00               	moviw [0]fsr0
 18093  2EAD  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18094  2EAE  3F01               	moviw [1]fsr0
 18095  2EAF  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 18096  2EB0  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 18097  2EB1  00F1               	movwf	___xxtofl@val
 18098  2EB2  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 18099  2EB3  00F2               	movwf	___xxtofl@val+1
 18100  2EB4  0D89               	rlf	9,f
 18101  2EB5  3B89               	subwfb	9,f
 18102  2EB6  0989               	comf	9,f
 18103  2EB7  00F3               	movwf	___xxtofl@val+2
 18104  2EB8  00F4               	movwf	___xxtofl@val+3
 18105  2EB9  3001               	movlw	1
 18106  2EBA  31AA  2241  31AE   	fcall	___xxtofl
 18107  2EBD  0874               	movf	?___xxtofl+3,w
 18108  2EBE  0020               	movlb	0	; select bank0
 18109  2EBF  00C7               	movwf	___fldiv@b+3
 18110  2EC0  0873               	movf	?___xxtofl+2,w
 18111  2EC1  00C6               	movwf	___fldiv@b+2
 18112  2EC2  0872               	movf	?___xxtofl+1,w
 18113  2EC3  00C5               	movwf	___fldiv@b+1
 18114  2EC4  0871               	movf	?___xxtofl,w
 18115  2EC5  00C4               	movwf	___fldiv@b
 18116  2EC6  3042               	movlw	66
 18117  2EC7  00C3               	movwf	___fldiv@a+3
 18118  2EC8  30C8               	movlw	200
 18119  2EC9  00C2               	movwf	___fldiv@a+2
 18120  2ECA  3000               	movlw	0
 18121  2ECB  00C1               	movwf	___fldiv@a+1
 18122  2ECC  3000               	movlw	0
 18123  2ECD  00C0               	movwf	___fldiv@a
 18124  2ECE  319C  24E2  31AE   	fcall	___fldiv
 18125  2ED1  0020               	movlb	0	; select bank0
 18126  2ED2  0843               	movf	?___fldiv+3,w
 18127  2ED3  00AD               	movwf	___flmul@a+3
 18128  2ED4  0842               	movf	?___fldiv+2,w
 18129  2ED5  00AC               	movwf	___flmul@a+2
 18130  2ED6  0841               	movf	?___fldiv+1,w
 18131  2ED7  00AB               	movwf	___flmul@a+1
 18132  2ED8  0840               	movf	?___fldiv,w
 18133  2ED9  00AA               	movwf	___flmul@a
 18134  2EDA  3045               	movlw	69
 18135  2EDB  00A9               	movwf	___flmul@b+3
 18136  2EDC  301C               	movlw	28
 18137  2EDD  00A8               	movwf	___flmul@b+2
 18138  2EDE  3040               	movlw	64
 18139  2EDF  00A7               	movwf	___flmul@b+1
 18140  2EE0  3000               	movlw	0
 18141  2EE1  00A6               	movwf	___flmul@b
 18142  2EE2  3190  2023  31AE   	fcall	___flmul
 18143  2EE5  0020               	movlb	0	; select bank0
 18144  2EE6  0829               	movf	?___flmul+3,w
 18145  2EE7  0021               	movlb	1	; select bank1
 18146  2EE8  00AB               	movwf	(___fltol@f1+3)^(0+128)
 18147  2EE9  0020               	movlb	0	; select bank0
 18148  2EEA  0828               	movf	?___flmul+2,w
 18149  2EEB  0021               	movlb	1	; select bank1
 18150  2EEC  00AA               	movwf	(___fltol@f1+2)^(0+128)
 18151  2EED  0020               	movlb	0	; select bank0
 18152  2EEE  0827               	movf	?___flmul+1,w
 18153  2EEF  0021               	movlb	1	; select bank1
 18154  2EF0  00A9               	movwf	(___fltol@f1+1)^(0+128)
 18155  2EF1  0020               	movlb	0	; select bank0
 18156  2EF2  0826               	movf	?___flmul,w
 18157  2EF3  0021               	movlb	1	; select bank1
 18158  2EF4  00A8               	movwf	___fltol@f1^(0+128)
 18159  2EF5  31B6  26B8  31AE   	fcall	___fltol
 18160  2EF8  0021               	movlb	1	; select bank1
 18161  2EF9  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 18162  2EFA  3E20               	addlw	(low (_cellCharge| (0+512)))& (0+255)
 18163  2EFB  0086               	movwf	6
 18164  2EFC  3002               	movlw	2	; select bank4/5
 18165  2EFD  0087               	movwf	7
 18166  2EFE  0828               	movf	?___fltol^(0+128),w
 18167  2EFF  3FC0               	movwi [0]fsr1
 18168  2F00  0829               	movf	(?___fltol+1)^(0+128),w
 18169  2F01  3FC1               	movwi [1]fsr1
 18170                           
 18171                           ;algorithms.c: 31:                 break;
 18172  2F02  2F13               	goto	l6130
 18173  2F03                     l6128:	
 18174                           
 18175                           ;algorithms.c: 33:         }
 18176  2F03  3001               	movlw	1
 18177  2F04  0021               	movlb	1	; select bank1
 18178  2F05  07B8               	addwf	calibrate_BATTSOC@j^(0+128),f
 18179  2F06  3000               	movlw	0
 18180  2F07  3DB9               	addwfc	(calibrate_BATTSOC@j+1)^(0+128),f
 18181  2F08  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 18182  2F09  3A80               	xorlw	128
 18183  2F0A  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18184  2F0B  3080               	movlw	128
 18185  2F0C  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 18186  2F0D  1D03               	skipz
 18187  2F0E  2F11               	goto	u7615
 18188  2F0F  302E               	movlw	46
 18189  2F10  0238               	subwf	calibrate_BATTSOC@j^(0+128),w
 18190  2F11                     u7615:	
 18191  2F11  1C03               	skipc
 18192  2F12  2E64               	goto	l6122
 18193  2F13                     l6130:	
 18194                           
 18195                           ;algorithms.c: 34:     }
 18196  2F13  3001               	movlw	1
 18197  2F14  0021               	movlb	1	; select bank1
 18198  2F15  07B6               	addwf	calibrate_BATTSOC@i^(0+128),f
 18199  2F16  3000               	movlw	0
 18200  2F17  3DB7               	addwfc	(calibrate_BATTSOC@i+1)^(0+128),f
 18201  2F18  0837               	movf	(calibrate_BATTSOC@i+1)^(0+128),w
 18202  2F19  3A80               	xorlw	128
 18203  2F1A  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 18204  2F1B  3080               	movlw	128
 18205  2F1C  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 18206  2F1D  1D03               	skipz
 18207  2F1E  2F21               	goto	u7625
 18208  2F1F  3005               	movlw	5
 18209  2F20  0236               	subwf	calibrate_BATTSOC@i^(0+128),w
 18210  2F21                     u7625:	
 18211  2F21  1803               	btfsc	3,0
 18212  2F22  0008               	return
 18213  2F23  2E61               	goto	l6116
 18214  2F24                     __end_of_calibrate_BATTSOC:	
 18215                           
 18216                           	psect	text60
 18217  2A41                     __ptext60:	
 18218 ;; *************** function ___xxtofl *****************
 18219 ;; Defined at:
 18220 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 18221 ;; Parameters:    Size  Location     Type
 18222 ;;  sign            1    wreg     unsigned char 
 18223 ;;  val             4    1[COMMON] long 
 18224 ;; Auto vars:     Size  Location     Type
 18225 ;;  sign            1    0[BANK0 ] unsigned char 
 18226 ;;  arg             4    2[BANK0 ] unsigned long 
 18227 ;;  exp             1    1[BANK0 ] unsigned char 
 18228 ;; Return value:  Size  Location     Type
 18229 ;;                  4    1[COMMON] unsigned char 
 18230 ;; Registers used:
 18231 ;;		wreg, status,2, status,0
 18232 ;; Tracked objects:
 18233 ;;		On entry : 0/0
 18234 ;;		On exit  : 0/0
 18235 ;;		Unchanged: 0/0
 18236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18238 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18239 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18240 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18241 ;;Total ram usage:       14 bytes
 18242 ;; Hardware stack levels used:    1
 18243 ;; Hardware stack levels required when called:    1
 18244 ;; This function calls:
 18245 ;;		Nothing
 18246 ;; This function is called by:
 18247 ;;		_setShortCircuitProtection
 18248 ;;		_setOverCurrentDischargeProtection
 18249 ;;		_updateCurrent
 18250 ;;		_updateVoltages
 18251 ;;		_updateTemperatures
 18252 ;;		_calibrate_BATTSOC
 18253 ;;		_coulomb_counter
 18254 ;;		_logf
 18255 ;;		_AFE_getSetShortCircuitCurrent
 18256 ;;		_AFE_getOverCurrentDischargeCurrent
 18257 ;; This function uses a non-reentrant model
 18258 ;;
 18259                           
 18260                           
 18261                           ;psect for function ___xxtofl
 18262  2A41                     ___xxtofl:	
 18263                           
 18264                           ;incstack = 0
 18265                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18266                           ;___xxtofl@sign stored from wreg
 18267  2A41  0020               	movlb	0	; select bank0
 18268  2A42  00A0               	movwf	___xxtofl@sign
 18269  2A43  0820               	movf	___xxtofl@sign,w
 18270  2A44  1D03               	btfss	3,2
 18271  2A45  1FF4               	btfss	___xxtofl@val+3,7
 18272  2A46  2A57               	goto	l5616
 18273  2A47  0971               	comf	___xxtofl@val,w
 18274  2A48  00A2               	movwf	___xxtofl@arg
 18275  2A49  0972               	comf	___xxtofl@val+1,w
 18276  2A4A  00A3               	movwf	___xxtofl@arg+1
 18277  2A4B  0973               	comf	___xxtofl@val+2,w
 18278  2A4C  00A4               	movwf	___xxtofl@arg+2
 18279  2A4D  0974               	comf	___xxtofl@val+3,w
 18280  2A4E  00A5               	movwf	___xxtofl@arg+3
 18281  2A4F  0AA2               	incf	___xxtofl@arg,f
 18282  2A50  1903               	skipnz
 18283  2A51  0AA3               	incf	___xxtofl@arg+1,f
 18284  2A52  1903               	skipnz
 18285  2A53  0AA4               	incf	___xxtofl@arg+2,f
 18286  2A54  1903               	skipnz
 18287  2A55  0AA5               	incf	___xxtofl@arg+3,f
 18288  2A56  2A5F               	goto	l1450
 18289  2A57                     l5616:	
 18290  2A57  0874               	movf	___xxtofl@val+3,w
 18291  2A58  00A5               	movwf	___xxtofl@arg+3
 18292  2A59  0873               	movf	___xxtofl@val+2,w
 18293  2A5A  00A4               	movwf	___xxtofl@arg+2
 18294  2A5B  0872               	movf	___xxtofl@val+1,w
 18295  2A5C  00A3               	movwf	___xxtofl@arg+1
 18296  2A5D  0871               	movf	___xxtofl@val,w
 18297  2A5E  00A2               	movwf	___xxtofl@arg
 18298  2A5F                     l1450:	
 18299  2A5F  0874               	movf	___xxtofl@val+3,w
 18300  2A60  0473               	iorwf	___xxtofl@val+2,w
 18301  2A61  0472               	iorwf	___xxtofl@val+1,w
 18302  2A62  0471               	iorwf	___xxtofl@val,w
 18303  2A63  1D03               	skipz
 18304  2A64  2A6E               	goto	l5622
 18305  2A65  3000               	movlw	0
 18306  2A66  00F4               	movwf	?___xxtofl+3
 18307  2A67  3000               	movlw	0
 18308  2A68  00F3               	movwf	?___xxtofl+2
 18309  2A69  3000               	movlw	0
 18310  2A6A  00F2               	movwf	?___xxtofl+1
 18311  2A6B  3000               	movlw	0
 18312  2A6C  00F1               	movwf	?___xxtofl
 18313  2A6D  0008               	return
 18314  2A6E                     l5622:	
 18315  2A6E  3096               	movlw	150
 18316  2A6F  00F5               	movwf	??___xxtofl
 18317  2A70  0875               	movf	??___xxtofl,w
 18318  2A71  00A1               	movwf	___xxtofl@exp
 18319  2A72                     l5626:	
 18320  2A72  30FE               	movlw	254
 18321  2A73  0525               	andwf	___xxtofl@arg+3,w
 18322  2A74  1903               	btfsc	3,2
 18323  2A75  2A95               	goto	l1456
 18324  2A76  3001               	movlw	1
 18325  2A77  00F5               	movwf	??___xxtofl
 18326  2A78  0875               	movf	??___xxtofl,w
 18327  2A79  07A1               	addwf	___xxtofl@exp,f
 18328  2A7A  3001               	movlw	1
 18329  2A7B                     u6885:	
 18330  2A7B  36A5               	lsrf	___xxtofl@arg+3,f
 18331  2A7C  0CA4               	rrf	___xxtofl@arg+2,f
 18332  2A7D  0CA3               	rrf	___xxtofl@arg+1,f
 18333  2A7E  0CA2               	rrf	___xxtofl@arg,f
 18334  2A7F  0B89               	decfsz	9,f
 18335  2A80  2A7B               	goto	u6885
 18336  2A81  2A72               	goto	l5626
 18337  2A82                     l5628:	
 18338  2A82  3001               	movlw	1
 18339  2A83  00F5               	movwf	??___xxtofl
 18340  2A84  0875               	movf	??___xxtofl,w
 18341  2A85  07A1               	addwf	___xxtofl@exp,f
 18342  2A86  3001               	movlw	1
 18343  2A87  07A2               	addwf	___xxtofl@arg,f
 18344  2A88  3000               	movlw	0
 18345  2A89  3DA3               	addwfc	___xxtofl@arg+1,f
 18346  2A8A  3000               	movlw	0
 18347  2A8B  3DA4               	addwfc	___xxtofl@arg+2,f
 18348  2A8C  3000               	movlw	0
 18349  2A8D  3DA5               	addwfc	___xxtofl@arg+3,f
 18350  2A8E  3001               	movlw	1
 18351  2A8F                     u6905:	
 18352  2A8F  36A5               	lsrf	___xxtofl@arg+3,f
 18353  2A90  0CA4               	rrf	___xxtofl@arg+2,f
 18354  2A91  0CA3               	rrf	___xxtofl@arg+1,f
 18355  2A92  0CA2               	rrf	___xxtofl@arg,f
 18356  2A93  0B89               	decfsz	9,f
 18357  2A94  2A8F               	goto	u6905
 18358  2A95                     l1456:	
 18359  2A95  30FF               	movlw	255
 18360  2A96  0525               	andwf	___xxtofl@arg+3,w
 18361  2A97  1903               	btfsc	3,2
 18362  2A98  2AA7               	goto	l5636
 18363  2A99  2A82               	goto	l5628
 18364  2A9A                     l5638:	
 18365  2A9A  3002               	movlw	2
 18366  2A9B  0221               	subwf	___xxtofl@exp,w
 18367  2A9C  1C03               	btfss	3,0
 18368  2A9D  2AA9               	goto	l1463
 18369  2A9E  3001               	movlw	1
 18370  2A9F  02A1               	subwf	___xxtofl@exp,f
 18371  2AA0  3001               	movlw	1
 18372  2AA1                     u6925:	
 18373  2AA1  35A2               	lslf	___xxtofl@arg,f
 18374  2AA2  0DA3               	rlf	___xxtofl@arg+1,f
 18375  2AA3  0DA4               	rlf	___xxtofl@arg+2,f
 18376  2AA4  0DA5               	rlf	___xxtofl@arg+3,f
 18377  2AA5  0B89               	decfsz	9,f
 18378  2AA6  2AA1               	goto	u6925
 18379  2AA7                     l5636:	
 18380  2AA7  1FA4               	btfss	___xxtofl@arg+2,7
 18381  2AA8  2A9A               	goto	l5638
 18382  2AA9                     l1463:	
 18383  2AA9  1821               	btfsc	___xxtofl@exp,0
 18384  2AAA  2AB3               	goto	l1464
 18385  2AAB  30FF               	movlw	255
 18386  2AAC  05A2               	andwf	___xxtofl@arg,f
 18387  2AAD  30FF               	movlw	255
 18388  2AAE  05A3               	andwf	___xxtofl@arg+1,f
 18389  2AAF  307F               	movlw	127
 18390  2AB0  05A4               	andwf	___xxtofl@arg+2,f
 18391  2AB1  30FF               	movlw	255
 18392  2AB2  05A5               	andwf	___xxtofl@arg+3,f
 18393  2AB3                     l1464:	
 18394  2AB3  1003               	clrc
 18395  2AB4  0CA1               	rrf	___xxtofl@exp,f
 18396  2AB5  0821               	movf	___xxtofl@exp,w
 18397  2AB6  00F5               	movwf	??___xxtofl
 18398  2AB7  01F6               	clrf	??___xxtofl+1
 18399  2AB8  01F7               	clrf	??___xxtofl+2
 18400  2AB9  01F8               	clrf	??___xxtofl+3
 18401  2ABA  3018               	movlw	24
 18402  2ABB                     u6965:	
 18403  2ABB  35F5               	lslf	??___xxtofl,f
 18404  2ABC  0DF6               	rlf	??___xxtofl+1,f
 18405  2ABD  0DF7               	rlf	??___xxtofl+2,f
 18406  2ABE  0DF8               	rlf	??___xxtofl+3,f
 18407  2ABF  0B89               	decfsz	9,f
 18408  2AC0  2ABB               	goto	u6965
 18409  2AC1  0875               	movf	??___xxtofl,w
 18410  2AC2  04A2               	iorwf	___xxtofl@arg,f
 18411  2AC3  0876               	movf	??___xxtofl+1,w
 18412  2AC4  04A3               	iorwf	___xxtofl@arg+1,f
 18413  2AC5  0877               	movf	??___xxtofl+2,w
 18414  2AC6  04A4               	iorwf	___xxtofl@arg+2,f
 18415  2AC7  0878               	movf	??___xxtofl+3,w
 18416  2AC8  04A5               	iorwf	___xxtofl@arg+3,f
 18417  2AC9  0820               	movf	___xxtofl@sign,w
 18418  2ACA  1D03               	btfss	3,2
 18419  2ACB  1FF4               	btfss	___xxtofl@val+3,7
 18420  2ACC  2ACE               	goto	l5650
 18421  2ACD  17A5               	bsf	___xxtofl@arg+3,7
 18422  2ACE                     l5650:	
 18423  2ACE  0825               	movf	___xxtofl@arg+3,w
 18424  2ACF  00F4               	movwf	?___xxtofl+3
 18425  2AD0  0824               	movf	___xxtofl@arg+2,w
 18426  2AD1  00F3               	movwf	?___xxtofl+2
 18427  2AD2  0823               	movf	___xxtofl@arg+1,w
 18428  2AD3  00F2               	movwf	?___xxtofl+1
 18429  2AD4  0822               	movf	___xxtofl@arg,w
 18430  2AD5  00F1               	movwf	?___xxtofl
 18431  2AD6  0008               	return
 18432  2AD7                     __end_of___xxtofl:	
 18433                           
 18434                           	psect	text61
 18435  36B8                     __ptext61:	
 18436 ;; *************** function ___fltol *****************
 18437 ;; Defined at:
 18438 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18439 ;; Parameters:    Size  Location     Type
 18440 ;;  f1              4    8[BANK1 ] unsigned char 
 18441 ;; Auto vars:     Size  Location     Type
 18442 ;;  exp1            1   11[COMMON] unsigned char 
 18443 ;;  sign1           1   10[COMMON] unsigned char 
 18444 ;; Return value:  Size  Location     Type
 18445 ;;                  4    8[BANK1 ] long 
 18446 ;; Registers used:
 18447 ;;		wreg, status,2, status,0
 18448 ;; Tracked objects:
 18449 ;;		On entry : 0/0
 18450 ;;		On exit  : 0/0
 18451 ;;		Unchanged: 0/0
 18452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18453 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18454 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18455 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18456 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18457 ;;Total ram usage:       11 bytes
 18458 ;; Hardware stack levels used:    1
 18459 ;; Hardware stack levels required when called:    1
 18460 ;; This function calls:
 18461 ;;		Nothing
 18462 ;; This function is called by:
 18463 ;;		_updateCurrent
 18464 ;;		_updateVoltages
 18465 ;;		_updateTemperatures
 18466 ;;		_calibrate_BATTSOC
 18467 ;;		_coulomb_counter
 18468 ;;		_AFE_getSetShortCircuitCurrent
 18469 ;;		_AFE_getOverCurrentDischargeCurrent
 18470 ;; This function uses a non-reentrant model
 18471 ;;
 18472                           
 18473                           
 18474                           ;psect for function ___fltol
 18475  36B8                     ___fltol:	
 18476                           
 18477                           ;incstack = 0
 18478                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18479  36B8  1003               	clrc
 18480  36B9  0021               	movlb	1	; select bank1
 18481  36BA  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 18482  36BB  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 18483  36BC  00AC               	movwf	??___fltol^(0+128)
 18484  36BD  082C               	movf	??___fltol^(0+128),w
 18485  36BE  00FB               	movwf	___fltol@exp1
 18486  36BF  087B               	movf	___fltol@exp1,w
 18487  36C0  1D03               	btfss	3,2
 18488  36C1  2ECB               	goto	l5860
 18489  36C2                     l5856:	
 18490  36C2  3000               	movlw	0
 18491  36C3  00AB               	movwf	(?___fltol+3)^(0+128)
 18492  36C4  3000               	movlw	0
 18493  36C5  00AA               	movwf	(?___fltol+2)^(0+128)
 18494  36C6  3000               	movlw	0
 18495  36C7  00A9               	movwf	(?___fltol+1)^(0+128)
 18496  36C8  3000               	movlw	0
 18497  36C9  00A8               	movwf	?___fltol^(0+128)
 18498  36CA  0008               	return
 18499  36CB                     l5860:	
 18500  36CB  0828               	movf	___fltol@f1^(0+128),w
 18501  36CC  00AC               	movwf	??___fltol^(0+128)
 18502  36CD  0829               	movf	(___fltol@f1+1)^(0+128),w
 18503  36CE  00AD               	movwf	(??___fltol^(0+128)+1)
 18504  36CF  082A               	movf	(___fltol@f1+2)^(0+128),w
 18505  36D0  00AE               	movwf	(??___fltol^(0+128)+2)
 18506  36D1  082B               	movf	(___fltol@f1+3)^(0+128),w
 18507  36D2  00AF               	movwf	(??___fltol^(0+128)+3)
 18508  36D3  301F               	movlw	31
 18509  36D4                     u7315:	
 18510  36D4  36AF               	lsrf	(??___fltol^(0+128)+3),f
 18511  36D5  0CAE               	rrf	(??___fltol^(0+128)+2),f
 18512  36D6  0CAD               	rrf	(??___fltol^(0+128)+1),f
 18513  36D7  0CAC               	rrf	??___fltol^(0+128),f
 18514  36D8  0B89               	decfsz	9,f
 18515  36D9  2ED4               	goto	u7315
 18516  36DA  082C               	movf	??___fltol^(0+128),w
 18517  36DB  00B0               	movwf	(??___fltol+4)^(0+128)
 18518  36DC  0830               	movf	(??___fltol+4)^(0+128),w
 18519  36DD  00FA               	movwf	___fltol@sign1
 18520  36DE  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 18521  36DF  30FF               	movlw	255
 18522  36E0  05A8               	andwf	___fltol@f1^(0+128),f
 18523  36E1  30FF               	movlw	255
 18524  36E2  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 18525  36E3  30FF               	movlw	255
 18526  36E4  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 18527  36E5  3000               	movlw	0
 18528  36E6  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 18529  36E7  3096               	movlw	150
 18530  36E8  02FB               	subwf	___fltol@exp1,f
 18531  36E9  1FFB               	btfss	___fltol@exp1,7
 18532  36EA  2EFE               	goto	l5878
 18533  36EB  087B               	movf	___fltol@exp1,w
 18534  36EC  3A80               	xorlw	128
 18535  36ED  3E97               	addlw	151
 18536  36EE  1C03               	btfss	3,0
 18537  36EF  2EC2               	goto	l5856
 18538  36F0                     l5876:	
 18539  36F0  3001               	movlw	1
 18540  36F1                     u7345:	
 18541  36F1  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 18542  36F2  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 18543  36F3  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 18544  36F4  0CA8               	rrf	___fltol@f1^(0+128),f
 18545  36F5  0B89               	decfsz	9,f
 18546  36F6  2EF1               	goto	u7345
 18547  36F7  3001               	movlw	1
 18548  36F8  00AC               	movwf	??___fltol^(0+128)
 18549  36F9  082C               	movf	??___fltol^(0+128),w
 18550  36FA  07FB               	addwf	___fltol@exp1,f
 18551  36FB  1903               	btfsc	3,2
 18552  36FC  2F0F               	goto	l5886
 18553  36FD  2EF0               	goto	l5876
 18554  36FE                     l5878:	
 18555  36FE  3020               	movlw	32
 18556  36FF  027B               	subwf	___fltol@exp1,w
 18557  3700  1803               	btfsc	3,0
 18558  3701  2EC2               	goto	l5856
 18559  3702                     l1216:	
 18560  3702  087B               	movf	___fltol@exp1,w
 18561  3703  1903               	btfsc	3,2
 18562  3704  2F0F               	goto	l5886
 18563  3705  3001               	movlw	1
 18564  3706                     u7375:	
 18565  3706  35A8               	lslf	___fltol@f1^(0+128),f
 18566  3707  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 18567  3708  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 18568  3709  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 18569  370A  0B89               	decfsz	9,f
 18570  370B  2F06               	goto	u7375
 18571  370C  3001               	movlw	1
 18572  370D  02FB               	subwf	___fltol@exp1,f
 18573  370E  2F02               	goto	l1216
 18574  370F                     l5886:	
 18575  370F  087A               	movf	___fltol@sign1,w
 18576  3710  1903               	btfsc	3,2
 18577  3711  0008               	return
 18578  3712  09A8               	comf	___fltol@f1^(0+128),f
 18579  3713  09A9               	comf	(___fltol@f1+1)^(0+128),f
 18580  3714  09AA               	comf	(___fltol@f1+2)^(0+128),f
 18581  3715  09AB               	comf	(___fltol@f1+3)^(0+128),f
 18582  3716  0AA8               	incf	___fltol@f1^(0+128),f
 18583  3717  1903               	skipnz
 18584  3718  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 18585  3719  1903               	skipnz
 18586  371A  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 18587  371B  1903               	skipnz
 18588  371C  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 18589  371D  0008               	return
 18590  371E                     __end_of___fltol:	
 18591                           
 18592                           	psect	text62
 18593  1023                     __ptext62:	
 18594 ;; *************** function ___flmul *****************
 18595 ;; Defined at:
 18596 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 18597 ;; Parameters:    Size  Location     Type
 18598 ;;  b               4    6[BANK0 ] long 
 18599 ;;  a               4   10[BANK0 ] long 
 18600 ;; Auto vars:     Size  Location     Type
 18601 ;;  prod            4   26[BANK0 ] struct .
 18602 ;;  grs             4   20[BANK0 ] unsigned long 
 18603 ;;  temp            2   30[BANK0 ] struct .
 18604 ;;  bexp            1   25[BANK0 ] unsigned char 
 18605 ;;  aexp            1   24[BANK0 ] unsigned char 
 18606 ;;  sign            1   19[BANK0 ] unsigned char 
 18607 ;; Return value:  Size  Location     Type
 18608 ;;                  4    6[BANK0 ] unsigned char 
 18609 ;; Registers used:
 18610 ;;		wreg, status,2, status,0, pclath, cstack
 18611 ;; Tracked objects:
 18612 ;;		On entry : 0/0
 18613 ;;		On exit  : 0/0
 18614 ;;		Unchanged: 0/0
 18615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18616 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18617 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18618 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18619 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18620 ;;Total ram usage:       26 bytes
 18621 ;; Hardware stack levels used:    1
 18622 ;; Hardware stack levels required when called:    2
 18623 ;; This function calls:
 18624 ;;		__Umul8_16
 18625 ;; This function is called by:
 18626 ;;		_setShortCircuitProtection
 18627 ;;		_setOverCurrentDischargeProtection
 18628 ;;		_updateCurrent
 18629 ;;		_updateVoltages
 18630 ;;		_updateTemperatures
 18631 ;;		_calibrate_BATTSOC
 18632 ;;		_coulomb_counter
 18633 ;;		_logf
 18634 ;; This function uses a non-reentrant model
 18635 ;;
 18636                           
 18637                           
 18638                           ;psect for function ___flmul
 18639  1023                     ___flmul:	
 18640                           
 18641                           ;incstack = 0
 18642                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 18643  1023  0020               	movlb	0	; select bank0
 18644  1024  0829               	movf	___flmul@b+3,w
 18645  1025  3980               	andlw	128
 18646  1026  00AE               	movwf	??___flmul
 18647  1027  082E               	movf	??___flmul,w
 18648  1028  00B3               	movwf	___flmul@sign
 18649  1029  3529               	lslf	___flmul@b+3,w
 18650  102A  00AE               	movwf	??___flmul
 18651  102B  082E               	movf	??___flmul,w
 18652  102C  00B9               	movwf	___flmul@bexp
 18653  102D  1BA8               	btfsc	___flmul@b+2,7
 18654  102E  1439               	bsf	___flmul@bexp,0
 18655  102F  0839               	movf	___flmul@bexp,w
 18656  1030  1903               	btfsc	3,2
 18657  1031  283F               	goto	l5486
 18658  1032  0A39               	incf	___flmul@bexp,w
 18659  1033  1D03               	btfss	3,2
 18660  1034  283D               	goto	l5484
 18661  1035  3000               	movlw	0
 18662  1036  00A9               	movwf	___flmul@b+3
 18663  1037  3000               	movlw	0
 18664  1038  00A8               	movwf	___flmul@b+2
 18665  1039  3000               	movlw	0
 18666  103A  00A7               	movwf	___flmul@b+1
 18667  103B  3000               	movlw	0
 18668  103C  00A6               	movwf	___flmul@b
 18669  103D                     l5484:	
 18670  103D  17A8               	bsf	___flmul@b+2,7
 18671  103E  2847               	goto	l5488
 18672  103F                     l5486:	
 18673  103F  3000               	movlw	0
 18674  1040  00A9               	movwf	___flmul@b+3
 18675  1041  3000               	movlw	0
 18676  1042  00A8               	movwf	___flmul@b+2
 18677  1043  3000               	movlw	0
 18678  1044  00A7               	movwf	___flmul@b+1
 18679  1045  3000               	movlw	0
 18680  1046  00A6               	movwf	___flmul@b
 18681  1047                     l5488:	
 18682  1047  082D               	movf	___flmul@a+3,w
 18683  1048  3980               	andlw	128
 18684  1049  00AE               	movwf	??___flmul
 18685  104A  082E               	movf	??___flmul,w
 18686  104B  06B3               	xorwf	___flmul@sign,f
 18687  104C  352D               	lslf	___flmul@a+3,w
 18688  104D  00AE               	movwf	??___flmul
 18689  104E  082E               	movf	??___flmul,w
 18690  104F  00B8               	movwf	___flmul@aexp
 18691  1050  1BAC               	btfsc	___flmul@a+2,7
 18692  1051  1438               	bsf	___flmul@aexp,0
 18693  1052  0838               	movf	___flmul@aexp,w
 18694  1053  1903               	btfsc	3,2
 18695  1054  2862               	goto	l5504
 18696  1055  0A38               	incf	___flmul@aexp,w
 18697  1056  1D03               	btfss	3,2
 18698  1057  2860               	goto	l5502
 18699  1058  3000               	movlw	0
 18700  1059  00AD               	movwf	___flmul@a+3
 18701  105A  3000               	movlw	0
 18702  105B  00AC               	movwf	___flmul@a+2
 18703  105C  3000               	movlw	0
 18704  105D  00AB               	movwf	___flmul@a+1
 18705  105E  3000               	movlw	0
 18706  105F  00AA               	movwf	___flmul@a
 18707  1060                     l5502:	
 18708  1060  17AC               	bsf	___flmul@a+2,7
 18709  1061  286A               	goto	l5506
 18710  1062                     l5504:	
 18711  1062  3000               	movlw	0
 18712  1063  00AD               	movwf	___flmul@a+3
 18713  1064  3000               	movlw	0
 18714  1065  00AC               	movwf	___flmul@a+2
 18715  1066  3000               	movlw	0
 18716  1067  00AB               	movwf	___flmul@a+1
 18717  1068  3000               	movlw	0
 18718  1069  00AA               	movwf	___flmul@a
 18719  106A                     l5506:	
 18720  106A  0838               	movf	___flmul@aexp,w
 18721  106B  1D03               	btfss	3,2
 18722  106C  0839               	movf	___flmul@bexp,w
 18723  106D  1D03               	btfss	3,2
 18724  106E  2878               	goto	l5514
 18725  106F  3000               	movlw	0
 18726  1070  00A9               	movwf	?___flmul+3
 18727  1071  3000               	movlw	0
 18728  1072  00A8               	movwf	?___flmul+2
 18729  1073  3000               	movlw	0
 18730  1074  00A7               	movwf	?___flmul+1
 18731  1075  3000               	movlw	0
 18732  1076  00A6               	movwf	?___flmul
 18733  1077  0008               	return
 18734  1078                     l5514:	
 18735  1078  0826               	movf	___flmul@b,w
 18736  1079  00AE               	movwf	??___flmul
 18737  107A  082E               	movf	??___flmul,w
 18738  107B  00F1               	movwf	__Umul8_16@multiplicand
 18739  107C  082C               	movf	___flmul@a+2,w
 18740  107D  31B3  2311  3190   	fcall	__Umul8_16
 18741  1080  0872               	movf	?__Umul8_16+1,w
 18742  1081  0020               	movlb	0	; select bank0
 18743  1082  00BF               	movwf	___flmul@temp+1
 18744  1083  0871               	movf	?__Umul8_16,w
 18745  1084  00BE               	movwf	___flmul@temp
 18746  1085  083E               	movf	___flmul@temp,w
 18747  1086  00AE               	movwf	??___flmul
 18748  1087  01AF               	clrf	??___flmul+1
 18749  1088  01B0               	clrf	??___flmul+2
 18750  1089  01B1               	clrf	??___flmul+3
 18751  108A  0831               	movf	??___flmul+3,w
 18752  108B  00B7               	movwf	___flmul@grs+3
 18753  108C  0830               	movf	??___flmul+2,w
 18754  108D  00B6               	movwf	___flmul@grs+2
 18755  108E  082F               	movf	??___flmul+1,w
 18756  108F  00B5               	movwf	___flmul@grs+1
 18757  1090  082E               	movf	??___flmul,w
 18758  1091  00B4               	movwf	___flmul@grs
 18759  1092  083F               	movf	___flmul@temp+1,w
 18760  1093  00AE               	movwf	??___flmul
 18761  1094  01AF               	clrf	??___flmul+1
 18762  1095  01B0               	clrf	??___flmul+2
 18763  1096  01B1               	clrf	??___flmul+3
 18764  1097  0831               	movf	??___flmul+3,w
 18765  1098  00BD               	movwf	___flmul@prod+3
 18766  1099  0830               	movf	??___flmul+2,w
 18767  109A  00BC               	movwf	___flmul@prod+2
 18768  109B  082F               	movf	??___flmul+1,w
 18769  109C  00BB               	movwf	___flmul@prod+1
 18770  109D  082E               	movf	??___flmul,w
 18771  109E  00BA               	movwf	___flmul@prod
 18772  109F  0827               	movf	___flmul@b+1,w
 18773  10A0  00AE               	movwf	??___flmul
 18774  10A1  082E               	movf	??___flmul,w
 18775  10A2  00F1               	movwf	__Umul8_16@multiplicand
 18776  10A3  082B               	movf	___flmul@a+1,w
 18777  10A4  31B3  2311  3190   	fcall	__Umul8_16
 18778  10A7  0872               	movf	?__Umul8_16+1,w
 18779  10A8  0020               	movlb	0	; select bank0
 18780  10A9  00BF               	movwf	___flmul@temp+1
 18781  10AA  0871               	movf	?__Umul8_16,w
 18782  10AB  00BE               	movwf	___flmul@temp
 18783  10AC  083E               	movf	___flmul@temp,w
 18784  10AD  00AE               	movwf	??___flmul
 18785  10AE  01AF               	clrf	??___flmul+1
 18786  10AF  01B0               	clrf	??___flmul+2
 18787  10B0  01B1               	clrf	??___flmul+3
 18788  10B1  082E               	movf	??___flmul,w
 18789  10B2  07B4               	addwf	___flmul@grs,f
 18790  10B3  082F               	movf	??___flmul+1,w
 18791  10B4  3DB5               	addwfc	___flmul@grs+1,f
 18792  10B5  0830               	movf	??___flmul+2,w
 18793  10B6  3DB6               	addwfc	___flmul@grs+2,f
 18794  10B7  0831               	movf	??___flmul+3,w
 18795  10B8  3DB7               	addwfc	___flmul@grs+3,f
 18796  10B9  083F               	movf	___flmul@temp+1,w
 18797  10BA  00AE               	movwf	??___flmul
 18798  10BB  01AF               	clrf	??___flmul+1
 18799  10BC  01B0               	clrf	??___flmul+2
 18800  10BD  01B1               	clrf	??___flmul+3
 18801  10BE  082E               	movf	??___flmul,w
 18802  10BF  07BA               	addwf	___flmul@prod,f
 18803  10C0  082F               	movf	??___flmul+1,w
 18804  10C1  3DBB               	addwfc	___flmul@prod+1,f
 18805  10C2  0830               	movf	??___flmul+2,w
 18806  10C3  3DBC               	addwfc	___flmul@prod+2,f
 18807  10C4  0831               	movf	??___flmul+3,w
 18808  10C5  3DBD               	addwfc	___flmul@prod+3,f
 18809  10C6  0828               	movf	___flmul@b+2,w
 18810  10C7  00AE               	movwf	??___flmul
 18811  10C8  082E               	movf	??___flmul,w
 18812  10C9  00F1               	movwf	__Umul8_16@multiplicand
 18813  10CA  082A               	movf	___flmul@a,w
 18814  10CB  31B3  2311  3190   	fcall	__Umul8_16
 18815  10CE  0872               	movf	?__Umul8_16+1,w
 18816  10CF  0020               	movlb	0	; select bank0
 18817  10D0  00BF               	movwf	___flmul@temp+1
 18818  10D1  0871               	movf	?__Umul8_16,w
 18819  10D2  00BE               	movwf	___flmul@temp
 18820  10D3  083E               	movf	___flmul@temp,w
 18821  10D4  00AE               	movwf	??___flmul
 18822  10D5  01AF               	clrf	??___flmul+1
 18823  10D6  01B0               	clrf	??___flmul+2
 18824  10D7  01B1               	clrf	??___flmul+3
 18825  10D8  082E               	movf	??___flmul,w
 18826  10D9  07B4               	addwf	___flmul@grs,f
 18827  10DA  082F               	movf	??___flmul+1,w
 18828  10DB  3DB5               	addwfc	___flmul@grs+1,f
 18829  10DC  0830               	movf	??___flmul+2,w
 18830  10DD  3DB6               	addwfc	___flmul@grs+2,f
 18831  10DE  0831               	movf	??___flmul+3,w
 18832  10DF  3DB7               	addwfc	___flmul@grs+3,f
 18833  10E0  083F               	movf	___flmul@temp+1,w
 18834  10E1  00AE               	movwf	??___flmul
 18835  10E2  01AF               	clrf	??___flmul+1
 18836  10E3  01B0               	clrf	??___flmul+2
 18837  10E4  01B1               	clrf	??___flmul+3
 18838  10E5  082E               	movf	??___flmul,w
 18839  10E6  07BA               	addwf	___flmul@prod,f
 18840  10E7  082F               	movf	??___flmul+1,w
 18841  10E8  3DBB               	addwfc	___flmul@prod+1,f
 18842  10E9  0830               	movf	??___flmul+2,w
 18843  10EA  3DBC               	addwfc	___flmul@prod+2,f
 18844  10EB  0831               	movf	??___flmul+3,w
 18845  10EC  3DBD               	addwfc	___flmul@prod+3,f
 18846  10ED  3008               	movlw	8
 18847  10EE                     u6675:	
 18848  10EE  35B4               	lslf	___flmul@grs,f
 18849  10EF  0DB5               	rlf	___flmul@grs+1,f
 18850  10F0  0DB6               	rlf	___flmul@grs+2,f
 18851  10F1  0DB7               	rlf	___flmul@grs+3,f
 18852  10F2  0B89               	decfsz	9,f
 18853  10F3  28EE               	goto	u6675
 18854  10F4  0827               	movf	___flmul@b+1,w
 18855  10F5  00AE               	movwf	??___flmul
 18856  10F6  082E               	movf	??___flmul,w
 18857  10F7  00F1               	movwf	__Umul8_16@multiplicand
 18858  10F8  082A               	movf	___flmul@a,w
 18859  10F9  31B3  2311  3190   	fcall	__Umul8_16
 18860  10FC  0872               	movf	?__Umul8_16+1,w
 18861  10FD  0020               	movlb	0	; select bank0
 18862  10FE  00BF               	movwf	___flmul@temp+1
 18863  10FF  0871               	movf	?__Umul8_16,w
 18864  1100  00BE               	movwf	___flmul@temp
 18865  1101  083E               	movf	___flmul@temp,w
 18866  1102  07B4               	addwf	___flmul@grs,f
 18867  1103  083F               	movf	___flmul@temp+1,w
 18868  1104  3DB5               	addwfc	___flmul@grs+1,f
 18869  1105  3000               	movlw	0
 18870  1106  3DB6               	addwfc	___flmul@grs+2,f
 18871  1107  3DB7               	addwfc	___flmul@grs+3,f
 18872  1108  0826               	movf	___flmul@b,w
 18873  1109  00AE               	movwf	??___flmul
 18874  110A  082E               	movf	??___flmul,w
 18875  110B  00F1               	movwf	__Umul8_16@multiplicand
 18876  110C  082B               	movf	___flmul@a+1,w
 18877  110D  31B3  2311  3190   	fcall	__Umul8_16
 18878  1110  0872               	movf	?__Umul8_16+1,w
 18879  1111  0020               	movlb	0	; select bank0
 18880  1112  00BF               	movwf	___flmul@temp+1
 18881  1113  0871               	movf	?__Umul8_16,w
 18882  1114  00BE               	movwf	___flmul@temp
 18883  1115  083E               	movf	___flmul@temp,w
 18884  1116  07B4               	addwf	___flmul@grs,f
 18885  1117  083F               	movf	___flmul@temp+1,w
 18886  1118  3DB5               	addwfc	___flmul@grs+1,f
 18887  1119  3000               	movlw	0
 18888  111A  3DB6               	addwfc	___flmul@grs+2,f
 18889  111B  3DB7               	addwfc	___flmul@grs+3,f
 18890  111C  3008               	movlw	8
 18891  111D                     u6685:	
 18892  111D  35B4               	lslf	___flmul@grs,f
 18893  111E  0DB5               	rlf	___flmul@grs+1,f
 18894  111F  0DB6               	rlf	___flmul@grs+2,f
 18895  1120  0DB7               	rlf	___flmul@grs+3,f
 18896  1121  0B89               	decfsz	9,f
 18897  1122  291D               	goto	u6685
 18898  1123  0826               	movf	___flmul@b,w
 18899  1124  00AE               	movwf	??___flmul
 18900  1125  082E               	movf	??___flmul,w
 18901  1126  00F1               	movwf	__Umul8_16@multiplicand
 18902  1127  082A               	movf	___flmul@a,w
 18903  1128  31B3  2311  3190   	fcall	__Umul8_16
 18904  112B  0872               	movf	?__Umul8_16+1,w
 18905  112C  0020               	movlb	0	; select bank0
 18906  112D  00BF               	movwf	___flmul@temp+1
 18907  112E  0871               	movf	?__Umul8_16,w
 18908  112F  00BE               	movwf	___flmul@temp
 18909  1130  083E               	movf	___flmul@temp,w
 18910  1131  07B4               	addwf	___flmul@grs,f
 18911  1132  083F               	movf	___flmul@temp+1,w
 18912  1133  3DB5               	addwfc	___flmul@grs+1,f
 18913  1134  3000               	movlw	0
 18914  1135  3DB6               	addwfc	___flmul@grs+2,f
 18915  1136  3DB7               	addwfc	___flmul@grs+3,f
 18916  1137  0827               	movf	___flmul@b+1,w
 18917  1138  00AE               	movwf	??___flmul
 18918  1139  082E               	movf	??___flmul,w
 18919  113A  00F1               	movwf	__Umul8_16@multiplicand
 18920  113B  082C               	movf	___flmul@a+2,w
 18921  113C  31B3  2311  3190   	fcall	__Umul8_16
 18922  113F  0872               	movf	?__Umul8_16+1,w
 18923  1140  0020               	movlb	0	; select bank0
 18924  1141  00BF               	movwf	___flmul@temp+1
 18925  1142  0871               	movf	?__Umul8_16,w
 18926  1143  00BE               	movwf	___flmul@temp
 18927  1144  083E               	movf	___flmul@temp,w
 18928  1145  07BA               	addwf	___flmul@prod,f
 18929  1146  083F               	movf	___flmul@temp+1,w
 18930  1147  3DBB               	addwfc	___flmul@prod+1,f
 18931  1148  3000               	movlw	0
 18932  1149  3DBC               	addwfc	___flmul@prod+2,f
 18933  114A  3DBD               	addwfc	___flmul@prod+3,f
 18934  114B  0828               	movf	___flmul@b+2,w
 18935  114C  00AE               	movwf	??___flmul
 18936  114D  082E               	movf	??___flmul,w
 18937  114E  00F1               	movwf	__Umul8_16@multiplicand
 18938  114F  082B               	movf	___flmul@a+1,w
 18939  1150  31B3  2311  3190   	fcall	__Umul8_16
 18940  1153  0872               	movf	?__Umul8_16+1,w
 18941  1154  0020               	movlb	0	; select bank0
 18942  1155  00BF               	movwf	___flmul@temp+1
 18943  1156  0871               	movf	?__Umul8_16,w
 18944  1157  00BE               	movwf	___flmul@temp
 18945  1158  083E               	movf	___flmul@temp,w
 18946  1159  07BA               	addwf	___flmul@prod,f
 18947  115A  083F               	movf	___flmul@temp+1,w
 18948  115B  3DBB               	addwfc	___flmul@prod+1,f
 18949  115C  3000               	movlw	0
 18950  115D  3DBC               	addwfc	___flmul@prod+2,f
 18951  115E  3DBD               	addwfc	___flmul@prod+3,f
 18952  115F  0828               	movf	___flmul@b+2,w
 18953  1160  00AE               	movwf	??___flmul
 18954  1161  082E               	movf	??___flmul,w
 18955  1162  00F1               	movwf	__Umul8_16@multiplicand
 18956  1163  082C               	movf	___flmul@a+2,w
 18957  1164  31B3  2311  3190   	fcall	__Umul8_16
 18958  1167  0872               	movf	?__Umul8_16+1,w
 18959  1168  0020               	movlb	0	; select bank0
 18960  1169  00BF               	movwf	___flmul@temp+1
 18961  116A  0871               	movf	?__Umul8_16,w
 18962  116B  00BE               	movwf	___flmul@temp
 18963  116C  083E               	movf	___flmul@temp,w
 18964  116D  00AE               	movwf	??___flmul
 18965  116E  083F               	movf	___flmul@temp+1,w
 18966  116F  00AF               	movwf	??___flmul+1
 18967  1170  01B0               	clrf	??___flmul+2
 18968  1171  01B1               	clrf	??___flmul+3
 18969  1172  3008               	movlw	8
 18970  1173                     u6695:	
 18971  1173  35AE               	lslf	??___flmul,f
 18972  1174  0DAF               	rlf	??___flmul+1,f
 18973  1175  0DB0               	rlf	??___flmul+2,f
 18974  1176  0DB1               	rlf	??___flmul+3,f
 18975  1177  0B89               	decfsz	9,f
 18976  1178  2973               	goto	u6695
 18977  1179  082E               	movf	??___flmul,w
 18978  117A  07BA               	addwf	___flmul@prod,f
 18979  117B  082F               	movf	??___flmul+1,w
 18980  117C  3DBB               	addwfc	___flmul@prod+1,f
 18981  117D  0830               	movf	??___flmul+2,w
 18982  117E  3DBC               	addwfc	___flmul@prod+2,f
 18983  117F  0831               	movf	??___flmul+3,w
 18984  1180  3DBD               	addwfc	___flmul@prod+3,f
 18985  1181  0834               	movf	___flmul@grs,w
 18986  1182  00AE               	movwf	??___flmul
 18987  1183  0835               	movf	___flmul@grs+1,w
 18988  1184  00AF               	movwf	??___flmul+1
 18989  1185  0836               	movf	___flmul@grs+2,w
 18990  1186  00B0               	movwf	??___flmul+2
 18991  1187  0837               	movf	___flmul@grs+3,w
 18992  1188  00B1               	movwf	??___flmul+3
 18993  1189  3018               	movlw	24
 18994  118A                     u6705:	
 18995  118A  36B1               	lsrf	??___flmul+3,f
 18996  118B  0CB0               	rrf	??___flmul+2,f
 18997  118C  0CAF               	rrf	??___flmul+1,f
 18998  118D  0CAE               	rrf	??___flmul,f
 18999  118E  0B89               	decfsz	9,f
 19000  118F  298A               	goto	u6705
 19001  1190  082E               	movf	??___flmul,w
 19002  1191  07BA               	addwf	___flmul@prod,f
 19003  1192  082F               	movf	??___flmul+1,w
 19004  1193  3DBB               	addwfc	___flmul@prod+1,f
 19005  1194  0830               	movf	??___flmul+2,w
 19006  1195  3DBC               	addwfc	___flmul@prod+2,f
 19007  1196  0831               	movf	??___flmul+3,w
 19008  1197  3DBD               	addwfc	___flmul@prod+3,f
 19009  1198  3008               	movlw	8
 19010  1199                     u6715:	
 19011  1199  35B4               	lslf	___flmul@grs,f
 19012  119A  0DB5               	rlf	___flmul@grs+1,f
 19013  119B  0DB6               	rlf	___flmul@grs+2,f
 19014  119C  0DB7               	rlf	___flmul@grs+3,f
 19015  119D  0B89               	decfsz	9,f
 19016  119E  2999               	goto	u6715
 19017  119F  0839               	movf	___flmul@bexp,w
 19018  11A0  0738               	addwf	___flmul@aexp,w
 19019  11A1  00AE               	movwf	??___flmul
 19020  11A2  01AF               	clrf	??___flmul+1
 19021  11A3  0DAF               	rlf	??___flmul+1,f
 19022  11A4  082E               	movf	??___flmul,w
 19023  11A5  3E82               	addlw	130
 19024  11A6  00BE               	movwf	___flmul@temp
 19025  11A7  30FF               	movlw	255
 19026  11A8  3D2F               	addwfc	??___flmul+1,w
 19027  11A9  00BF               	movwf	___flmul@temp+1
 19028  11AA                     l5566:	
 19029  11AA  1BBC               	btfsc	___flmul@prod+2,7
 19030  11AB  29C1               	goto	l5568
 19031  11AC  3001               	movlw	1
 19032  11AD                     u6725:	
 19033  11AD  35BA               	lslf	___flmul@prod,f
 19034  11AE  0DBB               	rlf	___flmul@prod+1,f
 19035  11AF  0DBC               	rlf	___flmul@prod+2,f
 19036  11B0  0DBD               	rlf	___flmul@prod+3,f
 19037  11B1  0B89               	decfsz	9,f
 19038  11B2  29AD               	goto	u6725
 19039  11B3  1BB7               	btfsc	___flmul@grs+3,7
 19040  11B4  143A               	bsf	___flmul@prod,0
 19041  11B5  3001               	movlw	1
 19042  11B6                     u6745:	
 19043  11B6  35B4               	lslf	___flmul@grs,f
 19044  11B7  0DB5               	rlf	___flmul@grs+1,f
 19045  11B8  0DB6               	rlf	___flmul@grs+2,f
 19046  11B9  0DB7               	rlf	___flmul@grs+3,f
 19047  11BA  0B89               	decfsz	9,f
 19048  11BB  29B6               	goto	u6745
 19049  11BC  30FF               	movlw	255
 19050  11BD  07BE               	addwf	___flmul@temp,f
 19051  11BE  30FF               	movlw	255
 19052  11BF  3DBF               	addwfc	___flmul@temp+1,f
 19053  11C0  29AA               	goto	l5566
 19054  11C1                     l5568:	
 19055  11C1  01B8               	clrf	___flmul@aexp
 19056  11C2  1FB7               	btfss	___flmul@grs+3,7
 19057  11C3  29DA               	goto	l5578
 19058  11C4  30FF               	movlw	255
 19059  11C5  0534               	andwf	___flmul@grs,w
 19060  11C6  00AE               	movwf	??___flmul
 19061  11C7  30FF               	movlw	255
 19062  11C8  0535               	andwf	___flmul@grs+1,w
 19063  11C9  00AF               	movwf	??___flmul+1
 19064  11CA  30FF               	movlw	255
 19065  11CB  0536               	andwf	___flmul@grs+2,w
 19066  11CC  00B0               	movwf	??___flmul+2
 19067  11CD  307F               	movlw	127
 19068  11CE  0537               	andwf	___flmul@grs+3,w
 19069  11CF  00B1               	movwf	??___flmul+3
 19070  11D0  0831               	movf	??___flmul+3,w
 19071  11D1  0430               	iorwf	??___flmul+2,w
 19072  11D2  042F               	iorwf	??___flmul+1,w
 19073  11D3  042E               	iorwf	??___flmul,w
 19074  11D4  1903               	skipnz
 19075  11D5  183A               	btfsc	___flmul@prod,0
 19076  11D6  29D8               	goto	l5574
 19077  11D7  29DA               	goto	l5578
 19078  11D8                     l5574:	
 19079  11D8  01B8               	clrf	___flmul@aexp
 19080  11D9  0AB8               	incf	___flmul@aexp,f
 19081  11DA                     l5578:	
 19082  11DA  0838               	movf	___flmul@aexp,w
 19083  11DB  1903               	btfsc	3,2
 19084  11DC  2A03               	goto	l5588
 19085  11DD  3001               	movlw	1
 19086  11DE  07BA               	addwf	___flmul@prod,f
 19087  11DF  3000               	movlw	0
 19088  11E0  3DBB               	addwfc	___flmul@prod+1,f
 19089  11E1  3000               	movlw	0
 19090  11E2  3DBC               	addwfc	___flmul@prod+2,f
 19091  11E3  3000               	movlw	0
 19092  11E4  3DBD               	addwfc	___flmul@prod+3,f
 19093  11E5  1C3D               	btfss	___flmul@prod+3,0
 19094  11E6  2A03               	goto	l5588
 19095  11E7  083A               	movf	___flmul@prod,w
 19096  11E8  00AE               	movwf	??___flmul
 19097  11E9  083B               	movf	___flmul@prod+1,w
 19098  11EA  00AF               	movwf	??___flmul+1
 19099  11EB  083C               	movf	___flmul@prod+2,w
 19100  11EC  00B0               	movwf	??___flmul+2
 19101  11ED  083D               	movf	___flmul@prod+3,w
 19102  11EE  00B1               	movwf	??___flmul+3
 19103  11EF  3001               	movlw	1
 19104  11F0  00B2               	movwf	??___flmul+4
 19105  11F1                     u6815:	
 19106  11F1  37B1               	asrf	??___flmul+3,f
 19107  11F2  0CB0               	rrf	??___flmul+2,f
 19108  11F3  0CAF               	rrf	??___flmul+1,f
 19109  11F4  0CAE               	rrf	??___flmul,f
 19110  11F5  0BB2               	decfsz	??___flmul+4,f
 19111  11F6  29F1               	goto	u6815
 19112  11F7  0831               	movf	??___flmul+3,w
 19113  11F8  00BD               	movwf	___flmul@prod+3
 19114  11F9  0830               	movf	??___flmul+2,w
 19115  11FA  00BC               	movwf	___flmul@prod+2
 19116  11FB  082F               	movf	??___flmul+1,w
 19117  11FC  00BB               	movwf	___flmul@prod+1
 19118  11FD  082E               	movf	??___flmul,w
 19119  11FE  00BA               	movwf	___flmul@prod
 19120  11FF  3001               	movlw	1
 19121  1200  07BE               	addwf	___flmul@temp,f
 19122  1201  3000               	movlw	0
 19123  1202  3DBF               	addwfc	___flmul@temp+1,f
 19124  1203                     l5588:	
 19125  1203  083F               	movf	___flmul@temp+1,w
 19126  1204  3A80               	xorlw	128
 19127  1205  00AE               	movwf	??___flmul
 19128  1206  3080               	movlw	128
 19129  1207  022E               	subwf	??___flmul,w
 19130  1208  1D03               	skipz
 19131  1209  2A0C               	goto	u6825
 19132  120A  30FF               	movlw	255
 19133  120B  023E               	subwf	___flmul@temp,w
 19134  120C                     u6825:	
 19135  120C  1C03               	skipc
 19136  120D  2A18               	goto	l5592
 19137  120E  307F               	movlw	127
 19138  120F  0020               	movlb	0	; select bank0
 19139  1210  00BD               	movwf	___flmul@prod+3
 19140  1211  3080               	movlw	128
 19141  1212  00BC               	movwf	___flmul@prod+2
 19142  1213  3000               	movlw	0
 19143  1214  00BB               	movwf	___flmul@prod+1
 19144  1215  3000               	movlw	0
 19145  1216  00BA               	movwf	___flmul@prod
 19146  1217  2A42               	goto	l1424
 19147  1218                     l5592:	
 19148  1218  0020               	movlb	0	; select bank0
 19149  1219  083F               	movf	___flmul@temp+1,w
 19150  121A  3A80               	xorlw	128
 19151  121B  00AE               	movwf	??___flmul
 19152  121C  3080               	movlw	128
 19153  121D  022E               	subwf	??___flmul,w
 19154  121E  1D03               	skipz
 19155  121F  2A22               	goto	u6835
 19156  1220  3001               	movlw	1
 19157  1221  023E               	subwf	___flmul@temp,w
 19158  1222                     u6835:	
 19159  1222  1803               	skipnc
 19160  1223  2A2F               	goto	l5598
 19161  1224  3000               	movlw	0
 19162  1225  0020               	movlb	0	; select bank0
 19163  1226  00BD               	movwf	___flmul@prod+3
 19164  1227  3000               	movlw	0
 19165  1228  00BC               	movwf	___flmul@prod+2
 19166  1229  3000               	movlw	0
 19167  122A  00BB               	movwf	___flmul@prod+1
 19168  122B  3000               	movlw	0
 19169  122C  00BA               	movwf	___flmul@prod
 19170  122D  01B3               	clrf	___flmul@sign
 19171  122E  2A42               	goto	l1424
 19172  122F                     l5598:	
 19173  122F  0020               	movlb	0	; select bank0
 19174  1230  083E               	movf	___flmul@temp,w
 19175  1231  00AE               	movwf	??___flmul
 19176  1232  082E               	movf	??___flmul,w
 19177  1233  00B9               	movwf	___flmul@bexp
 19178  1234  30FF               	movlw	255
 19179  1235  05BA               	andwf	___flmul@prod,f
 19180  1236  30FF               	movlw	255
 19181  1237  05BB               	andwf	___flmul@prod+1,f
 19182  1238  307F               	movlw	127
 19183  1239  05BC               	andwf	___flmul@prod+2,f
 19184  123A  3000               	movlw	0
 19185  123B  05BD               	andwf	___flmul@prod+3,f
 19186  123C  1839               	btfsc	___flmul@bexp,0
 19187  123D  17BC               	bsf	___flmul@prod+2,7
 19188  123E  3639               	lsrf	___flmul@bexp,w
 19189  123F  00AE               	movwf	??___flmul
 19190  1240  082E               	movf	??___flmul,w
 19191  1241  00BD               	movwf	___flmul@prod+3
 19192  1242                     l1424:	
 19193  1242  0833               	movf	___flmul@sign,w
 19194  1243  00AE               	movwf	??___flmul
 19195  1244  082E               	movf	??___flmul,w
 19196  1245  04BD               	iorwf	___flmul@prod+3,f
 19197  1246  083D               	movf	___flmul@prod+3,w
 19198  1247  00A9               	movwf	?___flmul+3
 19199  1248  083C               	movf	___flmul@prod+2,w
 19200  1249  00A8               	movwf	?___flmul+2
 19201  124A  083B               	movf	___flmul@prod+1,w
 19202  124B  00A7               	movwf	?___flmul+1
 19203  124C  083A               	movf	___flmul@prod,w
 19204  124D  00A6               	movwf	?___flmul
 19205  124E  0008               	return
 19206  124F                     __end_of___flmul:	
 19207                           
 19208                           	psect	text63
 19209  3311                     __ptext63:	
 19210 ;; *************** function __Umul8_16 *****************
 19211 ;; Defined at:
 19212 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 19213 ;; Parameters:    Size  Location     Type
 19214 ;;  multiplier      1    wreg     unsigned char 
 19215 ;;  multiplicand    1    1[COMMON] unsigned char 
 19216 ;; Auto vars:     Size  Location     Type
 19217 ;;  multiplier      1    9[COMMON] unsigned char 
 19218 ;;  word_mpld       2    7[COMMON] unsigned int 
 19219 ;;  product         2    5[COMMON] unsigned int 
 19220 ;; Return value:  Size  Location     Type
 19221 ;;                  2    1[COMMON] unsigned int 
 19222 ;; Registers used:
 19223 ;;		wreg, status,2, status,0
 19224 ;; Tracked objects:
 19225 ;;		On entry : 0/0
 19226 ;;		On exit  : 0/0
 19227 ;;		Unchanged: 0/0
 19228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19230 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19231 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19232 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19233 ;;Total ram usage:        9 bytes
 19234 ;; Hardware stack levels used:    1
 19235 ;; Hardware stack levels required when called:    1
 19236 ;; This function calls:
 19237 ;;		Nothing
 19238 ;; This function is called by:
 19239 ;;		___flmul
 19240 ;; This function uses a non-reentrant model
 19241 ;;
 19242                           
 19243                           
 19244                           ;psect for function __Umul8_16
 19245  3311                     __Umul8_16:	
 19246                           
 19247                           ;incstack = 0
 19248                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 19249                           ;__Umul8_16@multiplier stored from wreg
 19250  3311  00F9               	movwf	__Umul8_16@multiplier
 19251  3312  01F5               	clrf	__Umul8_16@product
 19252  3313  01F6               	clrf	__Umul8_16@product+1
 19253  3314  0871               	movf	__Umul8_16@multiplicand,w
 19254  3315  00F3               	movwf	??__Umul8_16
 19255  3316  01F4               	clrf	??__Umul8_16+1
 19256  3317  0873               	movf	??__Umul8_16,w
 19257  3318  00F7               	movwf	__Umul8_16@word_mpld
 19258  3319  0874               	movf	??__Umul8_16+1,w
 19259  331A  00F8               	movwf	__Umul8_16@word_mpld+1
 19260  331B                     l5282:	
 19261  331B  1C79               	btfss	__Umul8_16@multiplier,0
 19262  331C  2B21               	goto	l1617
 19263  331D  0877               	movf	__Umul8_16@word_mpld,w
 19264  331E  07F5               	addwf	__Umul8_16@product,f
 19265  331F  0878               	movf	__Umul8_16@word_mpld+1,w
 19266  3320  3DF6               	addwfc	__Umul8_16@product+1,f
 19267  3321                     l1617:	
 19268  3321  3001               	movlw	1
 19269  3322                     u6215:	
 19270  3322  35F7               	lslf	__Umul8_16@word_mpld,f
 19271  3323  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 19272  3324  0B89               	decfsz	9,f
 19273  3325  2B22               	goto	u6215
 19274  3326  1003               	clrc
 19275  3327  0CF9               	rrf	__Umul8_16@multiplier,f
 19276  3328  0879               	movf	__Umul8_16@multiplier,w
 19277  3329  1D03               	btfss	3,2
 19278  332A  2B1B               	goto	l5282
 19279  332B  0876               	movf	__Umul8_16@product+1,w
 19280  332C  00F2               	movwf	?__Umul8_16+1
 19281  332D  0875               	movf	__Umul8_16@product,w
 19282  332E  00F1               	movwf	?__Umul8_16
 19283  332F  0008               	return
 19284  3330                     __end_of__Umul8_16:	
 19285                           
 19286                           	psect	text64
 19287  1CE2                     __ptext64:	
 19288 ;; *************** function ___fldiv *****************
 19289 ;; Defined at:
 19290 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 19291 ;; Parameters:    Size  Location     Type
 19292 ;;  a               4   32[BANK0 ] unsigned int 
 19293 ;;  b               4   36[BANK0 ] unsigned int 
 19294 ;; Auto vars:     Size  Location     Type
 19295 ;;  grs             4   52[BANK0 ] unsigned long 
 19296 ;;  rem             4   45[BANK0 ] unsigned long 
 19297 ;;  new_exp         2   50[BANK0 ] int 
 19298 ;;  aexp            1   57[BANK0 ] unsigned char 
 19299 ;;  bexp            1   56[BANK0 ] unsigned char 
 19300 ;;  sign            1   49[BANK0 ] unsigned char 
 19301 ;; Return value:  Size  Location     Type
 19302 ;;                  4   32[BANK0 ] unsigned char 
 19303 ;; Registers used:
 19304 ;;		wreg, status,2, status,0
 19305 ;; Tracked objects:
 19306 ;;		On entry : 0/0
 19307 ;;		On exit  : 0/0
 19308 ;;		Unchanged: 0/0
 19309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19310 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19311 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19312 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19313 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19314 ;;Total ram usage:       26 bytes
 19315 ;; Hardware stack levels used:    1
 19316 ;; Hardware stack levels required when called:    1
 19317 ;; This function calls:
 19318 ;;		Nothing
 19319 ;; This function is called by:
 19320 ;;		_setShortCircuitProtection
 19321 ;;		_setOverCurrentDischargeProtection
 19322 ;;		_updateCurrent
 19323 ;;		_updateVoltages
 19324 ;;		_updateTemperatures
 19325 ;;		_calibrate_BATTSOC
 19326 ;;		_coulomb_counter
 19327 ;;		_logf
 19328 ;;		_AFE_getSetShortCircuitCurrent
 19329 ;;		_AFE_getOverCurrentDischargeCurrent
 19330 ;; This function uses a non-reentrant model
 19331 ;;
 19332                           
 19333                           
 19334                           ;psect for function ___fldiv
 19335  1CE2                     ___fldiv:	
 19336                           
 19337                           ;incstack = 0
 19338                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19339  1CE2  0020               	movlb	0	; select bank0
 19340  1CE3  0847               	movf	___fldiv@b+3,w
 19341  1CE4  3980               	andlw	128
 19342  1CE5  00C8               	movwf	??___fldiv
 19343  1CE6  0848               	movf	??___fldiv,w
 19344  1CE7  00D1               	movwf	___fldiv@sign
 19345  1CE8  3547               	lslf	___fldiv@b+3,w
 19346  1CE9  00C8               	movwf	??___fldiv
 19347  1CEA  0848               	movf	??___fldiv,w
 19348  1CEB  00D8               	movwf	___fldiv@bexp
 19349  1CEC  1BC6               	btfsc	___fldiv@b+2,7
 19350  1CED  1458               	bsf	___fldiv@bexp,0
 19351  1CEE  0858               	movf	___fldiv@bexp,w
 19352  1CEF  1903               	btfsc	3,2
 19353  1CF0  2CFF               	goto	l5348
 19354  1CF1  0A58               	incf	___fldiv@bexp,w
 19355  1CF2  1D03               	btfss	3,2
 19356  1CF3  2CFC               	goto	l5344
 19357  1CF4  3000               	movlw	0
 19358  1CF5  00C7               	movwf	___fldiv@b+3
 19359  1CF6  3000               	movlw	0
 19360  1CF7  00C6               	movwf	___fldiv@b+2
 19361  1CF8  3000               	movlw	0
 19362  1CF9  00C5               	movwf	___fldiv@b+1
 19363  1CFA  3000               	movlw	0
 19364  1CFB  00C4               	movwf	___fldiv@b
 19365  1CFC                     l5344:	
 19366  1CFC  17C6               	bsf	___fldiv@b+2,7
 19367  1CFD  01C7               	clrf	___fldiv@b+3
 19368  1CFE  2D07               	goto	l5350
 19369  1CFF                     l5348:	
 19370  1CFF  3000               	movlw	0
 19371  1D00  00C7               	movwf	___fldiv@b+3
 19372  1D01  3000               	movlw	0
 19373  1D02  00C6               	movwf	___fldiv@b+2
 19374  1D03  3000               	movlw	0
 19375  1D04  00C5               	movwf	___fldiv@b+1
 19376  1D05  3000               	movlw	0
 19377  1D06  00C4               	movwf	___fldiv@b
 19378  1D07                     l5350:	
 19379  1D07  0843               	movf	___fldiv@a+3,w
 19380  1D08  3980               	andlw	128
 19381  1D09  00C8               	movwf	??___fldiv
 19382  1D0A  0848               	movf	??___fldiv,w
 19383  1D0B  06D1               	xorwf	___fldiv@sign,f
 19384  1D0C  3543               	lslf	___fldiv@a+3,w
 19385  1D0D  00C8               	movwf	??___fldiv
 19386  1D0E  0848               	movf	??___fldiv,w
 19387  1D0F  00D9               	movwf	___fldiv@aexp
 19388  1D10  1BC2               	btfsc	___fldiv@a+2,7
 19389  1D11  1459               	bsf	___fldiv@aexp,0
 19390  1D12  0859               	movf	___fldiv@aexp,w
 19391  1D13  1903               	btfsc	3,2
 19392  1D14  2D23               	goto	l5368
 19393  1D15  0A59               	incf	___fldiv@aexp,w
 19394  1D16  1D03               	btfss	3,2
 19395  1D17  2D20               	goto	l5364
 19396  1D18  3000               	movlw	0
 19397  1D19  00C3               	movwf	___fldiv@a+3
 19398  1D1A  3000               	movlw	0
 19399  1D1B  00C2               	movwf	___fldiv@a+2
 19400  1D1C  3000               	movlw	0
 19401  1D1D  00C1               	movwf	___fldiv@a+1
 19402  1D1E  3000               	movlw	0
 19403  1D1F  00C0               	movwf	___fldiv@a
 19404  1D20                     l5364:	
 19405  1D20  17C2               	bsf	___fldiv@a+2,7
 19406  1D21  01C3               	clrf	___fldiv@a+3
 19407  1D22  2D2B               	goto	l1372
 19408  1D23                     l5368:	
 19409  1D23  3000               	movlw	0
 19410  1D24  00C3               	movwf	___fldiv@a+3
 19411  1D25  3000               	movlw	0
 19412  1D26  00C2               	movwf	___fldiv@a+2
 19413  1D27  3000               	movlw	0
 19414  1D28  00C1               	movwf	___fldiv@a+1
 19415  1D29  3000               	movlw	0
 19416  1D2A  00C0               	movwf	___fldiv@a
 19417  1D2B                     l1372:	
 19418  1D2B  0843               	movf	___fldiv@a+3,w
 19419  1D2C  0442               	iorwf	___fldiv@a+2,w
 19420  1D2D  0441               	iorwf	___fldiv@a+1,w
 19421  1D2E  0440               	iorwf	___fldiv@a,w
 19422  1D2F  1D03               	skipz
 19423  1D30  2D4A               	goto	l5378
 19424  1D31  3000               	movlw	0
 19425  1D32  00C7               	movwf	___fldiv@b+3
 19426  1D33  3000               	movlw	0
 19427  1D34  00C6               	movwf	___fldiv@b+2
 19428  1D35  3000               	movlw	0
 19429  1D36  00C5               	movwf	___fldiv@b+1
 19430  1D37  3000               	movlw	0
 19431  1D38  00C4               	movwf	___fldiv@b
 19432  1D39  3080               	movlw	128
 19433  1D3A  04C6               	iorwf	___fldiv@b+2,f
 19434  1D3B  307F               	movlw	127
 19435  1D3C  04C7               	iorwf	___fldiv@b+3,f
 19436  1D3D                     L5:	
 19437  1D3D  0851               	movf	___fldiv@sign,w
 19438  1D3E  00C8               	movwf	??___fldiv
 19439  1D3F  0848               	movf	??___fldiv,w
 19440  1D40  04C7               	iorwf	___fldiv@b+3,f
 19441  1D41  0847               	movf	___fldiv@b+3,w
 19442  1D42  00C3               	movwf	?___fldiv+3
 19443  1D43  0846               	movf	___fldiv@b+2,w
 19444  1D44  00C2               	movwf	?___fldiv+2
 19445  1D45  0845               	movf	___fldiv@b+1,w
 19446  1D46  00C1               	movwf	?___fldiv+1
 19447  1D47  0844               	movf	___fldiv@b,w
 19448  1D48  00C0               	movwf	?___fldiv
 19449  1D49  0008               	return
 19450  1D4A                     l5378:	
 19451  1D4A  0858               	movf	___fldiv@bexp,w
 19452  1D4B  1D03               	btfss	3,2
 19453  1D4C  2D56               	goto	l5384
 19454  1D4D  3000               	movlw	0
 19455  1D4E  00C3               	movwf	?___fldiv+3
 19456  1D4F  3000               	movlw	0
 19457  1D50  00C2               	movwf	?___fldiv+2
 19458  1D51  3000               	movlw	0
 19459  1D52  00C1               	movwf	?___fldiv+1
 19460  1D53  3000               	movlw	0
 19461  1D54  00C0               	movwf	?___fldiv
 19462  1D55  0008               	return
 19463  1D56                     l5384:	
 19464  1D56  0858               	movf	___fldiv@bexp,w
 19465  1D57  00C8               	movwf	??___fldiv
 19466  1D58  01C9               	clrf	??___fldiv+1
 19467  1D59  0849               	movf	??___fldiv+1,w
 19468  1D5A  00CB               	movwf	??___fldiv+3
 19469  1D5B  0859               	movf	___fldiv@aexp,w
 19470  1D5C  0248               	subwf	??___fldiv,w
 19471  1D5D  00CA               	movwf	??___fldiv+2
 19472  1D5E  1C03               	skipc
 19473  1D5F  03CB               	decf	??___fldiv+3,f
 19474  1D60  084A               	movf	??___fldiv+2,w
 19475  1D61  3E7F               	addlw	127
 19476  1D62  00D2               	movwf	___fldiv@new_exp
 19477  1D63  3000               	movlw	0
 19478  1D64  3D4B               	addwfc	??___fldiv+3,w
 19479  1D65  00D3               	movwf	___fldiv@new_exp+1
 19480  1D66  0847               	movf	___fldiv@b+3,w
 19481  1D67  00D0               	movwf	___fldiv@rem+3
 19482  1D68  0846               	movf	___fldiv@b+2,w
 19483  1D69  00CF               	movwf	___fldiv@rem+2
 19484  1D6A  0845               	movf	___fldiv@b+1,w
 19485  1D6B  00CE               	movwf	___fldiv@rem+1
 19486  1D6C  0844               	movf	___fldiv@b,w
 19487  1D6D  00CD               	movwf	___fldiv@rem
 19488  1D6E  3000               	movlw	0
 19489  1D6F  00C7               	movwf	___fldiv@b+3
 19490  1D70  3000               	movlw	0
 19491  1D71  00C6               	movwf	___fldiv@b+2
 19492  1D72  3000               	movlw	0
 19493  1D73  00C5               	movwf	___fldiv@b+1
 19494  1D74  3000               	movlw	0
 19495  1D75  00C4               	movwf	___fldiv@b
 19496  1D76  3000               	movlw	0
 19497  1D77  00D7               	movwf	___fldiv@grs+3
 19498  1D78  3000               	movlw	0
 19499  1D79  00D6               	movwf	___fldiv@grs+2
 19500  1D7A  3000               	movlw	0
 19501  1D7B  00D5               	movwf	___fldiv@grs+1
 19502  1D7C  3000               	movlw	0
 19503  1D7D  00D4               	movwf	___fldiv@grs
 19504  1D7E  01D9               	clrf	___fldiv@aexp
 19505  1D7F                     l5412:	
 19506  1D7F  301A               	movlw	26
 19507  1D80  0259               	subwf	___fldiv@aexp,w
 19508  1D81  1803               	btfsc	3,0
 19509  1D82  2DBB               	goto	l5414
 19510  1D83  0859               	movf	___fldiv@aexp,w
 19511  1D84  1903               	btfsc	3,2
 19512  1D85  2D9D               	goto	l5404
 19513  1D86  3001               	movlw	1
 19514  1D87                     u6395:	
 19515  1D87  35CD               	lslf	___fldiv@rem,f
 19516  1D88  0DCE               	rlf	___fldiv@rem+1,f
 19517  1D89  0DCF               	rlf	___fldiv@rem+2,f
 19518  1D8A  0DD0               	rlf	___fldiv@rem+3,f
 19519  1D8B  0B89               	decfsz	9,f
 19520  1D8C  2D87               	goto	u6395
 19521  1D8D  3001               	movlw	1
 19522  1D8E                     u6405:	
 19523  1D8E  35C4               	lslf	___fldiv@b,f
 19524  1D8F  0DC5               	rlf	___fldiv@b+1,f
 19525  1D90  0DC6               	rlf	___fldiv@b+2,f
 19526  1D91  0DC7               	rlf	___fldiv@b+3,f
 19527  1D92  0B89               	decfsz	9,f
 19528  1D93  2D8E               	goto	u6405
 19529  1D94  1BD7               	btfsc	___fldiv@grs+3,7
 19530  1D95  1444               	bsf	___fldiv@b,0
 19531  1D96  3001               	movlw	1
 19532  1D97                     u6425:	
 19533  1D97  35D4               	lslf	___fldiv@grs,f
 19534  1D98  0DD5               	rlf	___fldiv@grs+1,f
 19535  1D99  0DD6               	rlf	___fldiv@grs+2,f
 19536  1D9A  0DD7               	rlf	___fldiv@grs+3,f
 19537  1D9B  0B89               	decfsz	9,f
 19538  1D9C  2D97               	goto	u6425
 19539  1D9D                     l5404:	
 19540  1D9D  0843               	movf	___fldiv@a+3,w
 19541  1D9E  0250               	subwf	___fldiv@rem+3,w
 19542  1D9F  1D03               	skipz
 19543  1DA0  2DAB               	goto	u6435
 19544  1DA1  0842               	movf	___fldiv@a+2,w
 19545  1DA2  024F               	subwf	___fldiv@rem+2,w
 19546  1DA3  1D03               	skipz
 19547  1DA4  2DAB               	goto	u6435
 19548  1DA5  0841               	movf	___fldiv@a+1,w
 19549  1DA6  024E               	subwf	___fldiv@rem+1,w
 19550  1DA7  1D03               	skipz
 19551  1DA8  2DAB               	goto	u6435
 19552  1DA9  0840               	movf	___fldiv@a,w
 19553  1DAA  024D               	subwf	___fldiv@rem,w
 19554  1DAB                     u6435:	
 19555  1DAB  1C03               	skipc
 19556  1DAC  2DB6               	goto	l5410
 19557  1DAD  1757               	bsf	___fldiv@grs+3,6
 19558  1DAE  0840               	movf	___fldiv@a,w
 19559  1DAF  02CD               	subwf	___fldiv@rem,f
 19560  1DB0  0841               	movf	___fldiv@a+1,w
 19561  1DB1  3BCE               	subwfb	___fldiv@rem+1,f
 19562  1DB2  0842               	movf	___fldiv@a+2,w
 19563  1DB3  3BCF               	subwfb	___fldiv@rem+2,f
 19564  1DB4  0843               	movf	___fldiv@a+3,w
 19565  1DB5  3BD0               	subwfb	___fldiv@rem+3,f
 19566  1DB6                     l5410:	
 19567  1DB6  3001               	movlw	1
 19568  1DB7  00C8               	movwf	??___fldiv
 19569  1DB8  0848               	movf	??___fldiv,w
 19570  1DB9  07D9               	addwf	___fldiv@aexp,f
 19571  1DBA  2D7F               	goto	l5412
 19572  1DBB                     l5414:	
 19573  1DBB  0850               	movf	___fldiv@rem+3,w
 19574  1DBC  044F               	iorwf	___fldiv@rem+2,w
 19575  1DBD  044E               	iorwf	___fldiv@rem+1,w
 19576  1DBE  044D               	iorwf	___fldiv@rem,w
 19577  1DBF  1D03               	btfss	3,2
 19578  1DC0  1454               	bsf	___fldiv@grs,0
 19579  1DC1                     l5428:	
 19580  1DC1  1BC6               	btfsc	___fldiv@b+2,7
 19581  1DC2  2DD8               	goto	l5430
 19582  1DC3  3001               	movlw	1
 19583  1DC4                     u6465:	
 19584  1DC4  35C4               	lslf	___fldiv@b,f
 19585  1DC5  0DC5               	rlf	___fldiv@b+1,f
 19586  1DC6  0DC6               	rlf	___fldiv@b+2,f
 19587  1DC7  0DC7               	rlf	___fldiv@b+3,f
 19588  1DC8  0B89               	decfsz	9,f
 19589  1DC9  2DC4               	goto	u6465
 19590  1DCA  1BD7               	btfsc	___fldiv@grs+3,7
 19591  1DCB  1444               	bsf	___fldiv@b,0
 19592  1DCC  3001               	movlw	1
 19593  1DCD                     u6485:	
 19594  1DCD  35D4               	lslf	___fldiv@grs,f
 19595  1DCE  0DD5               	rlf	___fldiv@grs+1,f
 19596  1DCF  0DD6               	rlf	___fldiv@grs+2,f
 19597  1DD0  0DD7               	rlf	___fldiv@grs+3,f
 19598  1DD1  0B89               	decfsz	9,f
 19599  1DD2  2DCD               	goto	u6485
 19600  1DD3  30FF               	movlw	255
 19601  1DD4  07D2               	addwf	___fldiv@new_exp,f
 19602  1DD5  30FF               	movlw	255
 19603  1DD6  3DD3               	addwfc	___fldiv@new_exp+1,f
 19604  1DD7  2DC1               	goto	l5428
 19605  1DD8                     l5430:	
 19606  1DD8  01D9               	clrf	___fldiv@aexp
 19607  1DD9  1FD7               	btfss	___fldiv@grs+3,7
 19608  1DDA  2DF1               	goto	l5440
 19609  1DDB  30FF               	movlw	255
 19610  1DDC  0554               	andwf	___fldiv@grs,w
 19611  1DDD  00C8               	movwf	??___fldiv
 19612  1DDE  30FF               	movlw	255
 19613  1DDF  0555               	andwf	___fldiv@grs+1,w
 19614  1DE0  00C9               	movwf	??___fldiv+1
 19615  1DE1  30FF               	movlw	255
 19616  1DE2  0556               	andwf	___fldiv@grs+2,w
 19617  1DE3  00CA               	movwf	??___fldiv+2
 19618  1DE4  307F               	movlw	127
 19619  1DE5  0557               	andwf	___fldiv@grs+3,w
 19620  1DE6  00CB               	movwf	??___fldiv+3
 19621  1DE7  084B               	movf	??___fldiv+3,w
 19622  1DE8  044A               	iorwf	??___fldiv+2,w
 19623  1DE9  0449               	iorwf	??___fldiv+1,w
 19624  1DEA  0448               	iorwf	??___fldiv,w
 19625  1DEB  1903               	skipnz
 19626  1DEC  1844               	btfsc	___fldiv@b,0
 19627  1DED  2DEF               	goto	l5436
 19628  1DEE  2DF1               	goto	l5440
 19629  1DEF                     l5436:	
 19630  1DEF  01D9               	clrf	___fldiv@aexp
 19631  1DF0  0AD9               	incf	___fldiv@aexp,f
 19632  1DF1                     l5440:	
 19633  1DF1  0859               	movf	___fldiv@aexp,w
 19634  1DF2  1903               	btfsc	3,2
 19635  1DF3  2E1A               	goto	l5450
 19636  1DF4  3001               	movlw	1
 19637  1DF5  07C4               	addwf	___fldiv@b,f
 19638  1DF6  3000               	movlw	0
 19639  1DF7  3DC5               	addwfc	___fldiv@b+1,f
 19640  1DF8  3000               	movlw	0
 19641  1DF9  3DC6               	addwfc	___fldiv@b+2,f
 19642  1DFA  3000               	movlw	0
 19643  1DFB  3DC7               	addwfc	___fldiv@b+3,f
 19644  1DFC  1C47               	btfss	___fldiv@b+3,0
 19645  1DFD  2E1A               	goto	l5450
 19646  1DFE  0844               	movf	___fldiv@b,w
 19647  1DFF  00C8               	movwf	??___fldiv
 19648  1E00  0845               	movf	___fldiv@b+1,w
 19649  1E01  00C9               	movwf	??___fldiv+1
 19650  1E02  0846               	movf	___fldiv@b+2,w
 19651  1E03  00CA               	movwf	??___fldiv+2
 19652  1E04  0847               	movf	___fldiv@b+3,w
 19653  1E05  00CB               	movwf	??___fldiv+3
 19654  1E06  3001               	movlw	1
 19655  1E07  00CC               	movwf	??___fldiv+4
 19656  1E08                     u6555:	
 19657  1E08  37CB               	asrf	??___fldiv+3,f
 19658  1E09  0CCA               	rrf	??___fldiv+2,f
 19659  1E0A  0CC9               	rrf	??___fldiv+1,f
 19660  1E0B  0CC8               	rrf	??___fldiv,f
 19661  1E0C  0BCC               	decfsz	??___fldiv+4,f
 19662  1E0D  2E08               	goto	u6555
 19663  1E0E  084B               	movf	??___fldiv+3,w
 19664  1E0F  00C7               	movwf	___fldiv@b+3
 19665  1E10  084A               	movf	??___fldiv+2,w
 19666  1E11  00C6               	movwf	___fldiv@b+2
 19667  1E12  0849               	movf	??___fldiv+1,w
 19668  1E13  00C5               	movwf	___fldiv@b+1
 19669  1E14  0848               	movf	??___fldiv,w
 19670  1E15  00C4               	movwf	___fldiv@b
 19671  1E16  3001               	movlw	1
 19672  1E17  07D2               	addwf	___fldiv@new_exp,f
 19673  1E18  3000               	movlw	0
 19674  1E19  3DD3               	addwfc	___fldiv@new_exp+1,f
 19675  1E1A                     l5450:	
 19676  1E1A  0853               	movf	___fldiv@new_exp+1,w
 19677  1E1B  3A80               	xorlw	128
 19678  1E1C  00C8               	movwf	??___fldiv
 19679  1E1D  3080               	movlw	128
 19680  1E1E  0248               	subwf	??___fldiv,w
 19681  1E1F  1D03               	skipz
 19682  1E20  2E23               	goto	u6565
 19683  1E21  30FF               	movlw	255
 19684  1E22  0252               	subwf	___fldiv@new_exp,w
 19685  1E23                     u6565:	
 19686  1E23  1C03               	skipc
 19687  1E24  2E32               	goto	l1393
 19688  1E25  30FF               	movlw	255
 19689  1E26  0020               	movlb	0	; select bank0
 19690  1E27  00D2               	movwf	___fldiv@new_exp
 19691  1E28  3000               	movlw	0
 19692  1E29  00D3               	movwf	___fldiv@new_exp+1
 19693  1E2A  3000               	movlw	0
 19694  1E2B  00C7               	movwf	___fldiv@b+3
 19695  1E2C  3000               	movlw	0
 19696  1E2D  00C6               	movwf	___fldiv@b+2
 19697  1E2E  3000               	movlw	0
 19698  1E2F  00C5               	movwf	___fldiv@b+1
 19699  1E30  3000               	movlw	0
 19700  1E31  00C4               	movwf	___fldiv@b
 19701  1E32                     l1393:	
 19702  1E32  0020               	movlb	0	; select bank0
 19703  1E33  0853               	movf	___fldiv@new_exp+1,w
 19704  1E34  3A80               	xorlw	128
 19705  1E35  00C8               	movwf	??___fldiv
 19706  1E36  3080               	movlw	128
 19707  1E37  0248               	subwf	??___fldiv,w
 19708  1E38  1D03               	skipz
 19709  1E39  2E3C               	goto	u6575
 19710  1E3A  3001               	movlw	1
 19711  1E3B  0252               	subwf	___fldiv@new_exp,w
 19712  1E3C                     u6575:	
 19713  1E3C  1803               	skipnc
 19714  1E3D  2E4A               	goto	l1394
 19715  1E3E  0020               	movlb	0	; select bank0
 19716  1E3F  01D2               	clrf	___fldiv@new_exp
 19717  1E40  01D3               	clrf	___fldiv@new_exp+1
 19718  1E41  3000               	movlw	0
 19719  1E42  00C7               	movwf	___fldiv@b+3
 19720  1E43  3000               	movlw	0
 19721  1E44  00C6               	movwf	___fldiv@b+2
 19722  1E45  3000               	movlw	0
 19723  1E46  00C5               	movwf	___fldiv@b+1
 19724  1E47  3000               	movlw	0
 19725  1E48  00C4               	movwf	___fldiv@b
 19726  1E49  01D1               	clrf	___fldiv@sign
 19727  1E4A                     l1394:	
 19728  1E4A  0020               	movlb	0	; select bank0
 19729  1E4B  0852               	movf	___fldiv@new_exp,w
 19730  1E4C  00C8               	movwf	??___fldiv
 19731  1E4D  0848               	movf	??___fldiv,w
 19732  1E4E  00D8               	movwf	___fldiv@bexp
 19733  1E4F  1C58               	btfss	___fldiv@bexp,0
 19734  1E50  2E53               	goto	l5464
 19735  1E51  17C6               	bsf	___fldiv@b+2,7
 19736  1E52  2E57               	goto	l1396
 19737  1E53                     l5464:	
 19738  1E53  307F               	movlw	127
 19739  1E54  00C8               	movwf	??___fldiv
 19740  1E55  0848               	movf	??___fldiv,w
 19741  1E56  05C6               	andwf	___fldiv@b+2,f
 19742  1E57                     l1396:	
 19743  1E57  3658               	lsrf	___fldiv@bexp,w
 19744  1E58  00C8               	movwf	??___fldiv
 19745  1E59  0848               	movf	??___fldiv,w
 19746  1E5A  00C7               	movwf	___fldiv@b+3
 19747  1E5B  2D3D               	goto	L5
 19748  1E5C                     __end_of___fldiv:	
 19749                           
 19750                           	psect	text65
 19751  3659                     __ptext65:	
 19752 ;; *************** function _AFE_Status *****************
 19753 ;; Defined at:
 19754 ;;		line 45 in file "algorithms.c"
 19755 ;; Parameters:    Size  Location     Type
 19756 ;;		None
 19757 ;; Auto vars:     Size  Location     Type
 19758 ;;  error_flag      2    2[BANK0 ] int 
 19759 ;;  sys_stat        1    4[BANK0 ] struct regSYS_STAT
 19760 ;; Return value:  Size  Location     Type
 19761 ;;                  2    0[BANK0 ] int 
 19762 ;; Registers used:
 19763 ;;		wreg, status,2, status,0, pclath, cstack
 19764 ;; Tracked objects:
 19765 ;;		On entry : 0/0
 19766 ;;		On exit  : 0/0
 19767 ;;		Unchanged: 0/0
 19768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19769 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19770 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19772 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19773 ;;Total ram usage:        6 bytes
 19774 ;; Hardware stack levels used:    1
 19775 ;; Hardware stack levels required when called:    3
 19776 ;; This function calls:
 19777 ;;		_readRegister
 19778 ;; This function is called by:
 19779 ;;		_AFE_UPDATE
 19780 ;; This function uses a non-reentrant model
 19781 ;;
 19782                           
 19783                           
 19784                           ;psect for function _AFE_Status
 19785  3659                     _AFE_Status:	
 19786                           
 19787                           ;algorithms.c: 47:     regSYS_STAT_t sys_stat;;algorithms.c: 48:     int error_flag = 0;
 19788                           
 19789                           ;incstack = 0
 19790                           ; Regs used in _AFE_Status: [wreg+status,2+status,0+pclath+cstack]
 19791  3659  0020               	movlb	0	; select bank0
 19792  365A  01A2               	clrf	AFE_Status@error_flag
 19793  365B  01A3               	clrf	AFE_Status@error_flag+1
 19794                           
 19795                           ;algorithms.c: 49:     sys_stat.regByte = readRegister(0x18, 0x00);
 19796  365C  3018               	movlw	24
 19797  365D  00F5               	movwf	readRegister@slaveAddress
 19798  365E  3000               	movlw	0
 19799  365F  00F6               	movwf	readRegister@slaveAddress+1
 19800  3660  3000               	movlw	0
 19801  3661  00F7               	movwf	readRegister@regAddress
 19802  3662  00F8               	movwf	readRegister@regAddress+1
 19803  3663  3187  27CA  31B6   	fcall	_readRegister
 19804  3666  0875               	movf	?_readRegister,w
 19805  3667  00FB               	movwf	??_AFE_Status
 19806  3668  087B               	movf	??_AFE_Status,w
 19807  3669  0020               	movlb	0	; select bank0
 19808  366A  00A4               	movwf	AFE_Status@sys_stat
 19809                           
 19810                           ;algorithms.c: 53:     if (sys_stat.regByte & 0x20){
 19811  366B  1EA4               	btfss	AFE_Status@sys_stat,5
 19812  366C  2E77               	goto	l7664
 19813                           
 19814                           ;algorithms.c: 54:         XR_error = 1;
 19815  366D  3001               	movlw	1
 19816  366E  0023               	movlb	3	; select bank3
 19817  366F  00D4               	movwf	_XR_error^(0+384)
 19818  3670  3000               	movlw	0
 19819  3671  00D5               	movwf	(_XR_error^(0+384)+1)
 19820                           
 19821                           ;algorithms.c: 55:         error_flag=1;
 19822  3672  3001               	movlw	1
 19823  3673  0020               	movlb	0	; select bank0
 19824  3674  00A2               	movwf	AFE_Status@error_flag
 19825  3675  3000               	movlw	0
 19826  3676  00A3               	movwf	AFE_Status@error_flag+1
 19827  3677                     l7664:	
 19828                           
 19829                           ;algorithms.c: 58:     if(sys_stat.regByte & 0x10){
 19830  3677  1E24               	btfss	AFE_Status@sys_stat,4
 19831  3678  2E83               	goto	l7668
 19832                           
 19833                           ;algorithms.c: 59:         alert_error = 1;
 19834  3679  3001               	movlw	1
 19835  367A  0023               	movlb	3	; select bank3
 19836  367B  00D2               	movwf	_alert_error^(0+384)
 19837  367C  3000               	movlw	0
 19838  367D  00D3               	movwf	(_alert_error^(0+384)+1)
 19839                           
 19840                           ;algorithms.c: 60:         error_flag=1;
 19841  367E  3001               	movlw	1
 19842  367F  0020               	movlb	0	; select bank0
 19843  3680  00A2               	movwf	AFE_Status@error_flag
 19844  3681  3000               	movlw	0
 19845  3682  00A3               	movwf	AFE_Status@error_flag+1
 19846  3683                     l7668:	
 19847                           
 19848                           ;algorithms.c: 63:     if(sys_stat.regByte & 0x08 ){
 19849  3683  1DA4               	btfss	AFE_Status@sys_stat,3
 19850  3684  2E8F               	goto	l7672
 19851                           
 19852                           ;algorithms.c: 64:         uv_error = 1;
 19853  3685  3001               	movlw	1
 19854  3686  0023               	movlb	3	; select bank3
 19855  3687  00D0               	movwf	_uv_error^(0+384)
 19856  3688  3000               	movlw	0
 19857  3689  00D1               	movwf	(_uv_error^(0+384)+1)
 19858                           
 19859                           ;algorithms.c: 65:         error_flag=1;
 19860  368A  3001               	movlw	1
 19861  368B  0020               	movlb	0	; select bank0
 19862  368C  00A2               	movwf	AFE_Status@error_flag
 19863  368D  3000               	movlw	0
 19864  368E  00A3               	movwf	AFE_Status@error_flag+1
 19865  368F                     l7672:	
 19866                           
 19867                           ;algorithms.c: 68:     if(sys_stat.regByte & 0x04 ){
 19868  368F  1D24               	btfss	AFE_Status@sys_stat,2
 19869  3690  2E9B               	goto	l7676
 19870                           
 19871                           ;algorithms.c: 69:         ov_error = 1;
 19872  3691  3001               	movlw	1
 19873  3692  0023               	movlb	3	; select bank3
 19874  3693  00CE               	movwf	_ov_error^(0+384)
 19875  3694  3000               	movlw	0
 19876  3695  00CF               	movwf	(_ov_error^(0+384)+1)
 19877                           
 19878                           ;algorithms.c: 70:         error_flag=1;
 19879  3696  3001               	movlw	1
 19880  3697  0020               	movlb	0	; select bank0
 19881  3698  00A2               	movwf	AFE_Status@error_flag
 19882  3699  3000               	movlw	0
 19883  369A  00A3               	movwf	AFE_Status@error_flag+1
 19884  369B                     l7676:	
 19885                           
 19886                           ;algorithms.c: 73:    if(sys_stat.regByte & 0x02 ){
 19887  369B  1CA4               	btfss	AFE_Status@sys_stat,1
 19888  369C  2EA7               	goto	l7680
 19889                           
 19890                           ;algorithms.c: 74:         scd_error = 1;
 19891  369D  3001               	movlw	1
 19892  369E  0023               	movlb	3	; select bank3
 19893  369F  00CC               	movwf	_scd_error^(0+384)
 19894  36A0  3000               	movlw	0
 19895  36A1  00CD               	movwf	(_scd_error^(0+384)+1)
 19896                           
 19897                           ;algorithms.c: 75:         error_flag=1;
 19898  36A2  3001               	movlw	1
 19899  36A3  0020               	movlb	0	; select bank0
 19900  36A4  00A2               	movwf	AFE_Status@error_flag
 19901  36A5  3000               	movlw	0
 19902  36A6  00A3               	movwf	AFE_Status@error_flag+1
 19903  36A7                     l7680:	
 19904                           
 19905                           ;algorithms.c: 78:    if(sys_stat.regByte & 0x01){
 19906  36A7  1C24               	btfss	AFE_Status@sys_stat,0
 19907  36A8  2EB3               	goto	l698
 19908                           
 19909                           ;algorithms.c: 79:         ocd_error = 1;
 19910  36A9  3001               	movlw	1
 19911  36AA  0023               	movlb	3	; select bank3
 19912  36AB  00CA               	movwf	_ocd_error^(0+384)
 19913  36AC  3000               	movlw	0
 19914  36AD  00CB               	movwf	(_ocd_error^(0+384)+1)
 19915                           
 19916                           ;algorithms.c: 80:         error_flag=1;
 19917  36AE  3001               	movlw	1
 19918  36AF  0020               	movlb	0	; select bank0
 19919  36B0  00A2               	movwf	AFE_Status@error_flag
 19920  36B1  3000               	movlw	0
 19921  36B2  00A3               	movwf	AFE_Status@error_flag+1
 19922  36B3                     l698:	
 19923                           ;algorithms.c: 81:     }
 19924                           
 19925                           
 19926                           ;algorithms.c: 83:     return error_flag;
 19927  36B3  0823               	movf	AFE_Status@error_flag+1,w
 19928  36B4  00A1               	movwf	?_AFE_Status+1
 19929  36B5  0822               	movf	AFE_Status@error_flag,w
 19930  36B6  00A0               	movwf	?_AFE_Status
 19931  36B7  0008               	return
 19932  36B8                     __end_of_AFE_Status:	
 19933                           
 19934                           	psect	text66
 19935  3373                     __ptext66:	
 19936 ;; *************** function _AFE_FET_Status *****************
 19937 ;; Defined at:
 19938 ;;		line 86 in file "algorithms.c"
 19939 ;; Parameters:    Size  Location     Type
 19940 ;;		None
 19941 ;; Auto vars:     Size  Location     Type
 19942 ;;  sys_ctrl2       1    0[BANK0 ] unsigned char 
 19943 ;; Return value:  Size  Location     Type
 19944 ;;                  1    wreg      void 
 19945 ;; Registers used:
 19946 ;;		wreg, status,2, status,0, pclath, cstack
 19947 ;; Tracked objects:
 19948 ;;		On entry : 0/0
 19949 ;;		On exit  : 0/0
 19950 ;;		Unchanged: 0/0
 19951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19953 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19955 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19956 ;;Total ram usage:        2 bytes
 19957 ;; Hardware stack levels used:    1
 19958 ;; Hardware stack levels required when called:    3
 19959 ;; This function calls:
 19960 ;;		_readRegister
 19961 ;; This function is called by:
 19962 ;;		_AFE_UPDATE
 19963 ;; This function uses a non-reentrant model
 19964 ;;
 19965                           
 19966                           
 19967                           ;psect for function _AFE_FET_Status
 19968  3373                     _AFE_FET_Status:	
 19969                           
 19970                           ;algorithms.c: 87:     uint8_t sys_ctrl2;;algorithms.c: 88:     sys_ctrl2 = readRegister
      +                          (0x18, 0x05);
 19971                           
 19972                           ;incstack = 0
 19973                           ; Regs used in _AFE_FET_Status: [wreg+status,2+status,0+pclath+cstack]
 19974  3373  3018               	movlw	24
 19975  3374  00F5               	movwf	readRegister@slaveAddress
 19976  3375  3000               	movlw	0
 19977  3376  00F6               	movwf	readRegister@slaveAddress+1
 19978  3377  3005               	movlw	5
 19979  3378  00F7               	movwf	readRegister@regAddress
 19980  3379  3000               	movlw	0
 19981  337A  00F8               	movwf	readRegister@regAddress+1
 19982  337B  3187  27CA  31B3   	fcall	_readRegister
 19983  337E  0875               	movf	?_readRegister,w
 19984  337F  00FB               	movwf	??_AFE_FET_Status
 19985  3380  087B               	movf	??_AFE_FET_Status,w
 19986  3381  0020               	movlb	0	; select bank0
 19987  3382  00A0               	movwf	AFE_FET_Status@sys_ctrl2
 19988                           
 19989                           ;algorithms.c: 89:     chg_fet_enable = 0;
 19990  3383  0023               	movlb	3	; select bank3
 19991  3384  01C8               	clrf	_chg_fet_enable^(0+384)
 19992  3385  01C9               	clrf	(_chg_fet_enable+1)^(0+384)
 19993                           
 19994                           ;algorithms.c: 90:     dschg_fet_enable = 0;
 19995  3386  01C6               	clrf	_dschg_fet_enable^(0+384)
 19996  3387  01C7               	clrf	(_dschg_fet_enable+1)^(0+384)
 19997                           
 19998                           ;algorithms.c: 92:    if(sys_ctrl2 & 0x01){
 19999  3388  0020               	movlb	0	; select bank0
 20000  3389  1C20               	btfss	AFE_FET_Status@sys_ctrl2,0
 20001  338A  2B90               	goto	l7652
 20002                           
 20003                           ;algorithms.c: 93:        chg_fet_enable = 1;
 20004  338B  3001               	movlw	1
 20005  338C  0023               	movlb	3	; select bank3
 20006  338D  00C8               	movwf	_chg_fet_enable^(0+384)
 20007  338E  3000               	movlw	0
 20008  338F  00C9               	movwf	(_chg_fet_enable^(0+384)+1)
 20009  3390                     l7652:	
 20010                           
 20011                           ;algorithms.c: 96:    if(sys_ctrl2 & 0x02){
 20012  3390  0020               	movlb	0	; select bank0
 20013  3391  1CA0               	btfss	AFE_FET_Status@sys_ctrl2,1
 20014  3392  0008               	return
 20015                           
 20016                           ;algorithms.c: 97:        dschg_fet_enable = 1;
 20017  3393  3001               	movlw	1
 20018  3394  0023               	movlb	3	; select bank3
 20019  3395  00C6               	movwf	_dschg_fet_enable^(0+384)
 20020  3396  3000               	movlw	0
 20021  3397  00C7               	movwf	(_dschg_fet_enable^(0+384)+1)
 20022  3398  0008               	return
 20023  3399                     __end_of_AFE_FET_Status:	
 20024                           
 20025                           	psect	text67
 20026  07CA                     __ptext67:	
 20027 ;; *************** function _readRegister *****************
 20028 ;; Defined at:
 20029 ;;		line 115 in file "I2C.c"
 20030 ;; Parameters:    Size  Location     Type
 20031 ;;  slaveAddress    2    5[COMMON] int 
 20032 ;;  regAddress      2    7[COMMON] int 
 20033 ;; Auto vars:     Size  Location     Type
 20034 ;;  recievedData    2    9[COMMON] int 
 20035 ;; Return value:  Size  Location     Type
 20036 ;;                  2    5[COMMON] int 
 20037 ;; Registers used:
 20038 ;;		wreg, status,2, status,0, pclath, cstack
 20039 ;; Tracked objects:
 20040 ;;		On entry : 0/0
 20041 ;;		On exit  : 0/0
 20042 ;;		Unchanged: 0/0
 20043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20044 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20045 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20047 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20048 ;;Total ram usage:        6 bytes
 20049 ;; Hardware stack levels used:    1
 20050 ;; Hardware stack levels required when called:    2
 20051 ;; This function calls:
 20052 ;;		_read_I2C_data
 20053 ;;		_send_I2C_NACK
 20054 ;;		_send_I2C_controlByte
 20055 ;;		_send_I2C_data
 20056 ;;		_send_I2C_startBit
 20057 ;;		_send_I2C_stopBit
 20058 ;; This function is called by:
 20059 ;;		_beginAFEcommunication
 20060 ;;		_setCellUndervoltageProtection
 20061 ;;		_setCellOvervoltageProtection
 20062 ;;		_updateCurrent
 20063 ;;		_updateVoltages
 20064 ;;		_updateTemperatures
 20065 ;;		_enableDischarging
 20066 ;;		_enableCharging
 20067 ;;		_AFE_Status
 20068 ;;		_AFE_FET_Status
 20069 ;;		_printotAFERegisters
 20070 ;; This function uses a non-reentrant model
 20071 ;;
 20072                           
 20073                           
 20074                           ;psect for function _readRegister
 20075  07CA                     _readRegister:	
 20076                           
 20077                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 20078                           
 20079                           ;incstack = 0
 20080                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 20081  07CA  31B1  2145  3187   	fcall	_send_I2C_startBit
 20082                           
 20083                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 20084  07CD  0876               	movf	readRegister@slaveAddress+1,w
 20085  07CE  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 20086  07CF  0875               	movf	readRegister@slaveAddress,w
 20087  07D0  00F1               	movwf	send_I2C_controlByte@BlockAddress
 20088  07D1  3000               	movlw	0
 20089  07D2  00F3               	movwf	send_I2C_controlByte@RW_bit
 20090  07D3  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 20091  07D4  31B1  2170  3187   	fcall	_send_I2C_controlByte
 20092                           
 20093                           ;I2C.c: 119:     send_I2C_data(regAddress);
 20094  07D7  0878               	movf	readRegister@regAddress+1,w
 20095  07D8  00F2               	movwf	send_I2C_data@databyte+1
 20096  07D9  0877               	movf	readRegister@regAddress,w
 20097  07DA  00F1               	movwf	send_I2C_data@databyte
 20098  07DB  31B1  2167  3187   	fcall	_send_I2C_data
 20099                           
 20100                           ;I2C.c: 120:     send_I2C_stopBit();
 20101  07DE  31B1  214D  3187   	fcall	_send_I2C_stopBit
 20102                           
 20103                           ;I2C.c: 121:     send_I2C_startBit();
 20104  07E1  31B1  2145  3187   	fcall	_send_I2C_startBit
 20105                           
 20106                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 20107  07E4  0876               	movf	readRegister@slaveAddress+1,w
 20108  07E5  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 20109  07E6  0875               	movf	readRegister@slaveAddress,w
 20110  07E7  00F1               	movwf	send_I2C_controlByte@BlockAddress
 20111  07E8  3001               	movlw	1
 20112  07E9  00F3               	movwf	send_I2C_controlByte@RW_bit
 20113  07EA  3000               	movlw	0
 20114  07EB  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 20115  07EC  31B1  2170  3187   	fcall	_send_I2C_controlByte
 20116                           
 20117                           ;I2C.c: 123:     recievedData = read_I2C_data();
 20118  07EF  31B1  21CC  3187   	fcall	_read_I2C_data
 20119  07F2  0872               	movf	?_read_I2C_data+1,w
 20120  07F3  00FA               	movwf	readRegister@recievedData+1
 20121  07F4  0871               	movf	?_read_I2C_data,w
 20122  07F5  00F9               	movwf	readRegister@recievedData
 20123                           
 20124                           ;I2C.c: 124:     send_I2C_NACK();
 20125  07F6  31B1  215E  3187   	fcall	_send_I2C_NACK
 20126                           
 20127                           ;I2C.c: 125:     send_I2C_stopBit();
 20128  07F9  31B1  214D         	fcall	_send_I2C_stopBit
 20129                           
 20130                           ;I2C.c: 126:     return recievedData;
 20131  07FB  087A               	movf	readRegister@recievedData+1,w
 20132  07FC  00F6               	movwf	?_readRegister+1
 20133  07FD  0879               	movf	readRegister@recievedData,w
 20134  07FE  00F5               	movwf	?_readRegister
 20135  07FF  0008               	return
 20136  0800                     __end_of_readRegister:	
 20137                           
 20138                           	psect	text68
 20139  314D                     __ptext68:	
 20140 ;; *************** function _send_I2C_stopBit *****************
 20141 ;; Defined at:
 20142 ;;		line 78 in file "I2C.c"
 20143 ;; Parameters:    Size  Location     Type
 20144 ;;		None
 20145 ;; Auto vars:     Size  Location     Type
 20146 ;;		None
 20147 ;; Return value:  Size  Location     Type
 20148 ;;                  1    wreg      void 
 20149 ;; Registers used:
 20150 ;;		None
 20151 ;; Tracked objects:
 20152 ;;		On entry : 0/0
 20153 ;;		On exit  : 0/0
 20154 ;;		Unchanged: 0/0
 20155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20160 ;;Total ram usage:        0 bytes
 20161 ;; Hardware stack levels used:    1
 20162 ;; Hardware stack levels required when called:    1
 20163 ;; This function calls:
 20164 ;;		Nothing
 20165 ;; This function is called by:
 20166 ;;		_I2C_writeRegister
 20167 ;;		_readRegister
 20168 ;; This function uses a non-reentrant model
 20169 ;;
 20170                           
 20171                           
 20172                           ;psect for function _send_I2C_stopBit
 20173  314D                     _send_I2C_stopBit:	
 20174                           
 20175                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 20176                           
 20177                           ;incstack = 0
 20178                           ; Regs used in _send_I2C_stopBit: []
 20179  314D  0020               	movlb	0	; select bank0
 20180  314E  1191               	bcf	17,3	;volatile
 20181                           
 20182                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 20183  314F  0024               	movlb	4	; select bank4
 20184  3150  1516               	bsf	22,2	;volatile
 20185  3151                     l334:	
 20186                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 20187                           
 20188  3151  0020               	movlb	0	; select bank0
 20189  3152  1991               	btfsc	17,3	;volatile
 20190  3153  0008               	return
 20191  3154  2951               	goto	l334
 20192  3155                     __end_of_send_I2C_stopBit:	
 20193                           
 20194                           	psect	text69
 20195  3145                     __ptext69:	
 20196 ;; *************** function _send_I2C_startBit *****************
 20197 ;; Defined at:
 20198 ;;		line 65 in file "I2C.c"
 20199 ;; Parameters:    Size  Location     Type
 20200 ;;		None
 20201 ;; Auto vars:     Size  Location     Type
 20202 ;;		None
 20203 ;; Return value:  Size  Location     Type
 20204 ;;                  1    wreg      void 
 20205 ;; Registers used:
 20206 ;;		None
 20207 ;; Tracked objects:
 20208 ;;		On entry : 0/0
 20209 ;;		On exit  : 0/0
 20210 ;;		Unchanged: 0/0
 20211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20216 ;;Total ram usage:        0 bytes
 20217 ;; Hardware stack levels used:    1
 20218 ;; Hardware stack levels required when called:    1
 20219 ;; This function calls:
 20220 ;;		Nothing
 20221 ;; This function is called by:
 20222 ;;		_I2C_writeRegister
 20223 ;;		_readRegister
 20224 ;; This function uses a non-reentrant model
 20225 ;;
 20226                           
 20227                           
 20228                           ;psect for function _send_I2C_startBit
 20229  3145                     _send_I2C_startBit:	
 20230                           
 20231                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 20232                           
 20233                           ;incstack = 0
 20234                           ; Regs used in _send_I2C_startBit: []
 20235  3145  0020               	movlb	0	; select bank0
 20236  3146  1191               	bcf	17,3	;volatile
 20237                           
 20238                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 20239  3147  0024               	movlb	4	; select bank4
 20240  3148  1416               	bsf	22,0	;volatile
 20241  3149                     l322:	
 20242                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 20243                           
 20244  3149  0020               	movlb	0	; select bank0
 20245  314A  1991               	btfsc	17,3	;volatile
 20246  314B  0008               	return
 20247  314C  2949               	goto	l322
 20248  314D                     __end_of_send_I2C_startBit:	
 20249                           
 20250                           	psect	text70
 20251  3167                     __ptext70:	
 20252 ;; *************** function _send_I2C_data *****************
 20253 ;; Defined at:
 20254 ;;		line 33 in file "I2C.c"
 20255 ;; Parameters:    Size  Location     Type
 20256 ;;  databyte        2    1[COMMON] unsigned int 
 20257 ;; Auto vars:     Size  Location     Type
 20258 ;;		None
 20259 ;; Return value:  Size  Location     Type
 20260 ;;                  1    wreg      void 
 20261 ;; Registers used:
 20262 ;;		wreg
 20263 ;; Tracked objects:
 20264 ;;		On entry : 0/0
 20265 ;;		On exit  : 0/0
 20266 ;;		Unchanged: 0/0
 20267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20271 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20272 ;;Total ram usage:        2 bytes
 20273 ;; Hardware stack levels used:    1
 20274 ;; Hardware stack levels required when called:    1
 20275 ;; This function calls:
 20276 ;;		Nothing
 20277 ;; This function is called by:
 20278 ;;		_I2C_writeRegister
 20279 ;;		_readRegister
 20280 ;; This function uses a non-reentrant model
 20281 ;;
 20282                           
 20283                           
 20284                           ;psect for function _send_I2C_data
 20285  3167                     _send_I2C_data:	
 20286                           
 20287                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 20288                           
 20289                           ;incstack = 0
 20290                           ; Regs used in _send_I2C_data: [wreg]
 20291  3167  0020               	movlb	0	; select bank0
 20292  3168  1191               	bcf	17,3	;volatile
 20293                           
 20294                           ;I2C.c: 35:     SSPBUF = databyte;
 20295  3169  0871               	movf	send_I2C_data@databyte,w
 20296  316A  0024               	movlb	4	; select bank4
 20297  316B  0091               	movwf	17	;volatile
 20298  316C                     l304:	
 20299                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 20300                           
 20301  316C  0020               	movlb	0	; select bank0
 20302  316D  1991               	btfsc	17,3	;volatile
 20303  316E  0008               	return
 20304  316F  296C               	goto	l304
 20305  3170                     __end_of_send_I2C_data:	
 20306                           
 20307                           	psect	text71
 20308  3170                     __ptext71:	
 20309 ;; *************** function _send_I2C_controlByte *****************
 20310 ;; Defined at:
 20311 ;;		line 53 in file "I2C.c"
 20312 ;; Parameters:    Size  Location     Type
 20313 ;;  BlockAddress    2    1[COMMON] unsigned int 
 20314 ;;  RW_bit          2    3[COMMON] unsigned int 
 20315 ;; Auto vars:     Size  Location     Type
 20316 ;;		None
 20317 ;; Return value:  Size  Location     Type
 20318 ;;                  1    wreg      void 
 20319 ;; Registers used:
 20320 ;;		wreg, status,2, status,0
 20321 ;; Tracked objects:
 20322 ;;		On entry : 0/0
 20323 ;;		On exit  : 0/0
 20324 ;;		Unchanged: 0/0
 20325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20329 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20330 ;;Total ram usage:        4 bytes
 20331 ;; Hardware stack levels used:    1
 20332 ;; Hardware stack levels required when called:    1
 20333 ;; This function calls:
 20334 ;;		Nothing
 20335 ;; This function is called by:
 20336 ;;		_I2C_writeRegister
 20337 ;;		_readRegister
 20338 ;; This function uses a non-reentrant model
 20339 ;;
 20340                           
 20341                           
 20342                           ;psect for function _send_I2C_controlByte
 20343  3170                     _send_I2C_controlByte:	
 20344                           
 20345                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 20346                           
 20347                           ;incstack = 0
 20348                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 20349  3170  0020               	movlb	0	; select bank0
 20350  3171  1191               	bcf	17,3	;volatile
 20351                           
 20352                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 20353  3172  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 20354  3173  0773               	addwf	send_I2C_controlByte@RW_bit,w
 20355  3174  0024               	movlb	4	; select bank4
 20356  3175  0091               	movwf	17	;volatile
 20357  3176                     l316:	
 20358                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 20359                           
 20360  3176  0020               	movlb	0	; select bank0
 20361  3177  1991               	btfsc	17,3	;volatile
 20362  3178  0008               	return
 20363  3179  2976               	goto	l316
 20364  317A                     __end_of_send_I2C_controlByte:	
 20365                           
 20366                           	psect	text72
 20367  315E                     __ptext72:	
 20368 ;; *************** function _send_I2C_NACK *****************
 20369 ;; Defined at:
 20370 ;;		line 91 in file "I2C.c"
 20371 ;; Parameters:    Size  Location     Type
 20372 ;;		None
 20373 ;; Auto vars:     Size  Location     Type
 20374 ;;		None
 20375 ;; Return value:  Size  Location     Type
 20376 ;;                  1    wreg      void 
 20377 ;; Registers used:
 20378 ;;		None
 20379 ;; Tracked objects:
 20380 ;;		On entry : 0/0
 20381 ;;		On exit  : 0/0
 20382 ;;		Unchanged: 0/0
 20383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20388 ;;Total ram usage:        0 bytes
 20389 ;; Hardware stack levels used:    1
 20390 ;; Hardware stack levels required when called:    1
 20391 ;; This function calls:
 20392 ;;		Nothing
 20393 ;; This function is called by:
 20394 ;;		_readRegister
 20395 ;; This function uses a non-reentrant model
 20396 ;;
 20397                           
 20398                           
 20399                           ;psect for function _send_I2C_NACK
 20400  315E                     _send_I2C_NACK:	
 20401                           
 20402                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 20403                           
 20404                           ;incstack = 0
 20405                           ; Regs used in _send_I2C_NACK: []
 20406  315E  0020               	movlb	0	; select bank0
 20407  315F  1191               	bcf	17,3	;volatile
 20408                           
 20409                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 20410  3160  0024               	movlb	4	; select bank4
 20411  3161  1696               	bsf	22,5	;volatile
 20412                           
 20413                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 20414  3162  1616               	bsf	22,4	;volatile
 20415  3163                     l346:	
 20416                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 20417                           
 20418  3163  0020               	movlb	0	; select bank0
 20419  3164  1991               	btfsc	17,3	;volatile
 20420  3165  0008               	return
 20421  3166  2963               	goto	l346
 20422  3167                     __end_of_send_I2C_NACK:	
 20423                           
 20424                           	psect	text73
 20425  31CC                     __ptext73:	
 20426 ;; *************** function _read_I2C_data *****************
 20427 ;; Defined at:
 20428 ;;		line 43 in file "I2C.c"
 20429 ;; Parameters:    Size  Location     Type
 20430 ;;		None
 20431 ;; Auto vars:     Size  Location     Type
 20432 ;;		None
 20433 ;; Return value:  Size  Location     Type
 20434 ;;                  2    1[COMMON] unsigned int 
 20435 ;; Registers used:
 20436 ;;		wreg
 20437 ;; Tracked objects:
 20438 ;;		On entry : 0/0
 20439 ;;		On exit  : 0/0
 20440 ;;		Unchanged: 0/0
 20441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20446 ;;Total ram usage:        4 bytes
 20447 ;; Hardware stack levels used:    1
 20448 ;; Hardware stack levels required when called:    1
 20449 ;; This function calls:
 20450 ;;		Nothing
 20451 ;; This function is called by:
 20452 ;;		_readRegister
 20453 ;; This function uses a non-reentrant model
 20454 ;;
 20455                           
 20456                           
 20457                           ;psect for function _read_I2C_data
 20458  31CC                     _read_I2C_data:	
 20459                           
 20460                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 20461                           
 20462                           ;incstack = 0
 20463                           ; Regs used in _read_I2C_data: [wreg]
 20464  31CC  0020               	movlb	0	; select bank0
 20465  31CD  1191               	bcf	17,3	;volatile
 20466                           
 20467                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 20468  31CE  0024               	movlb	4	; select bank4
 20469  31CF  1596               	bsf	22,3	;volatile
 20470  31D0                     l310:	
 20471                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 20472                           
 20473  31D0  0020               	movlb	0	; select bank0
 20474  31D1  1D91               	btfss	17,3	;volatile
 20475  31D2  29D0               	goto	l310
 20476                           
 20477                           ;I2C.c: 47:     return (SSPBUF);
 20478  31D3  0024               	movlb	4	; select bank4
 20479  31D4  0811               	movf	17,w	;volatile
 20480  31D5  00F3               	movwf	??_read_I2C_data
 20481  31D6  01F4               	clrf	??_read_I2C_data+1
 20482  31D7  0873               	movf	??_read_I2C_data,w
 20483  31D8  00F1               	movwf	?_read_I2C_data
 20484  31D9  0874               	movf	??_read_I2C_data+1,w
 20485  31DA  00F2               	movwf	?_read_I2C_data+1
 20486  31DB  0008               	return
 20487  31DC                     __end_of_read_I2C_data:	
 20488                           
 20489                           	psect	text74
 20490  318E                     __ptext74:	
 20491 ;; *************** function _init_TMR1 *****************
 20492 ;; Defined at:
 20493 ;;		line 189 in file "main.c"
 20494 ;; Parameters:    Size  Location     Type
 20495 ;;		None
 20496 ;; Auto vars:     Size  Location     Type
 20497 ;;		None
 20498 ;; Return value:  Size  Location     Type
 20499 ;;                  1    wreg      void 
 20500 ;; Registers used:
 20501 ;;		wreg, status,2, status,0
 20502 ;; Tracked objects:
 20503 ;;		On entry : 0/0
 20504 ;;		On exit  : 0/0
 20505 ;;		Unchanged: 0/0
 20506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20511 ;;Total ram usage:        0 bytes
 20512 ;; Hardware stack levels used:    1
 20513 ;; Hardware stack levels required when called:    1
 20514 ;; This function calls:
 20515 ;;		Nothing
 20516 ;; This function is called by:
 20517 ;;		_main
 20518 ;; This function uses a non-reentrant model
 20519 ;;
 20520                           
 20521                           
 20522                           ;psect for function _init_TMR1
 20523  318E                     _init_TMR1:	
 20524                           
 20525                           ;main.c: 192:     T1CONbits.T1CKPS = 0b00;
 20526                           
 20527                           ;incstack = 0
 20528                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 20529  318E  30CF               	movlw	-49
 20530  318F  0020               	movlb	0	; select bank0
 20531  3190  0598               	andwf	24,f	;volatile
 20532                           
 20533                           ;main.c: 194:     TMR1 = 0;
 20534  3191  0196               	clrf	22	;volatile
 20535  3192  0197               	clrf	23	;volatile
 20536                           
 20537                           ;main.c: 196:     T1CONbits.TMR1ON = 1;
 20538  3193  1418               	bsf	24,0	;volatile
 20539                           
 20540                           ;main.c: 198:     PIE1bits.TMR1IE = 1;
 20541  3194  0021               	movlb	1	; select bank1
 20542  3195  1411               	bsf	17,0	;volatile
 20543                           
 20544                           ;main.c: 200:     INTCONbits.PEIE = 1;
 20545  3196  170B               	bsf	11,6	;volatile
 20546                           
 20547                           ;main.c: 202:     (INTCONbits.GIE = 1);
 20548  3197  178B               	bsf	11,7	;volatile
 20549  3198  0008               	return
 20550  3199                     __end_of_init_TMR1:	
 20551                           
 20552                           	psect	text75
 20553  2801                     __ptext75:	
 20554 ;; *************** function _init_RGB *****************
 20555 ;; Defined at:
 20556 ;;		line 6 in file "RGB.c"
 20557 ;; Parameters:    Size  Location     Type
 20558 ;;		None
 20559 ;; Auto vars:     Size  Location     Type
 20560 ;;		None
 20561 ;; Return value:  Size  Location     Type
 20562 ;;                  1    wreg      void 
 20563 ;; Registers used:
 20564 ;;		None
 20565 ;; Tracked objects:
 20566 ;;		On entry : 0/0
 20567 ;;		On exit  : 0/0
 20568 ;;		Unchanged: 0/0
 20569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20574 ;;Total ram usage:        0 bytes
 20575 ;; Hardware stack levels used:    1
 20576 ;; Hardware stack levels required when called:    1
 20577 ;; This function calls:
 20578 ;;		Nothing
 20579 ;; This function is called by:
 20580 ;;		_main
 20581 ;; This function uses a non-reentrant model
 20582 ;;
 20583                           
 20584                           
 20585                           ;psect for function _init_RGB
 20586  2801                     _init_RGB:	
 20587                           
 20588                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 20589                           
 20590                           ;incstack = 0
 20591                           ; Regs used in _init_RGB: []
 20592  2801  0022               	movlb	2	; select bank2
 20593  2802  160C               	bsf	12,4	;volatile
 20594                           
 20595                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 20596  2803  168C               	bsf	12,5	;volatile
 20597                           
 20598                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 20599  2804  1410               	bsf	16,0	;volatile
 20600  2805  0008               	return
 20601  2806                     __end_of_init_RGB:	
 20602                           
 20603                           	psect	text76
 20604  31BC                     __ptext76:	
 20605 ;; *************** function _init_I2C *****************
 20606 ;; Defined at:
 20607 ;;		line 10 in file "I2C.c"
 20608 ;; Parameters:    Size  Location     Type
 20609 ;;		None
 20610 ;; Auto vars:     Size  Location     Type
 20611 ;;		None
 20612 ;; Return value:  Size  Location     Type
 20613 ;;                  1    wreg      void 
 20614 ;; Registers used:
 20615 ;;		wreg, status,2, status,0
 20616 ;; Tracked objects:
 20617 ;;		On entry : 0/0
 20618 ;;		On exit  : 0/0
 20619 ;;		Unchanged: 0/0
 20620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20623 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20625 ;;Total ram usage:        1 bytes
 20626 ;; Hardware stack levels used:    1
 20627 ;; Hardware stack levels required when called:    1
 20628 ;; This function calls:
 20629 ;;		Nothing
 20630 ;; This function is called by:
 20631 ;;		_main
 20632 ;; This function uses a non-reentrant model
 20633 ;;
 20634                           
 20635                           
 20636                           ;psect for function _init_I2C
 20637  31BC                     _init_I2C:	
 20638                           
 20639                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 20640                           
 20641                           ;incstack = 0
 20642                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 20643  31BC  0024               	movlb	4	; select bank4
 20644  31BD  0815               	movf	21,w	;volatile
 20645  31BE  39F0               	andlw	-16
 20646  31BF  3808               	iorlw	8
 20647  31C0  0095               	movwf	21	;volatile
 20648                           
 20649                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 20650  31C1  1695               	bsf	21,5	;volatile
 20651                           
 20652                           ;I2C.c: 24:     SSPADD = 39;
 20653  31C2  3027               	movlw	39
 20654  31C3  0092               	movwf	18	;volatile
 20655                           
 20656                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 20657  31C4  3034               	movlw	52
 20658  31C5  00F1               	movwf	??_init_I2C
 20659  31C6  30F2               	movlw	242
 20660  31C7                     u9787:	
 20661  31C7  0B89               	decfsz	9,f
 20662  31C8  29C7               	goto	u9787
 20663  31C9  0BF1               	decfsz	??_init_I2C,f
 20664  31CA  29C7               	goto	u9787
 20665  31CB  0008               	return
 20666  31CC                     __end_of_init_I2C:	
 20667                           
 20668                           	psect	text77
 20669  0808                     __ptext77:	
 20670 ;; *************** function _init_GPIO *****************
 20671 ;; Defined at:
 20672 ;;		line 206 in file "main.c"
 20673 ;; Parameters:    Size  Location     Type
 20674 ;;		None
 20675 ;; Auto vars:     Size  Location     Type
 20676 ;;		None
 20677 ;; Return value:  Size  Location     Type
 20678 ;;                  1    wreg      void 
 20679 ;; Registers used:
 20680 ;;		wreg, status,2, status,0
 20681 ;; Tracked objects:
 20682 ;;		On entry : 0/0
 20683 ;;		On exit  : 0/0
 20684 ;;		Unchanged: 0/0
 20685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20690 ;;Total ram usage:        0 bytes
 20691 ;; Hardware stack levels used:    1
 20692 ;; Hardware stack levels required when called:    1
 20693 ;; This function calls:
 20694 ;;		Nothing
 20695 ;; This function is called by:
 20696 ;;		_main
 20697 ;; This function uses a non-reentrant model
 20698 ;;
 20699                           
 20700                           
 20701                           ;psect for function _init_GPIO
 20702  0808                     _init_GPIO:	
 20703                           
 20704                           ;main.c: 212:     TRISBbits.TRISB2 = 0;
 20705                           
 20706                           ;incstack = 0
 20707                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 20708  0808  0021               	movlb	1	; select bank1
 20709  0809  110D               	bcf	13,2	;volatile
 20710                           
 20711                           ;main.c: 213:     ANSELBbits.ANSB2 = 0;
 20712  080A  0023               	movlb	3	; select bank3
 20713  080B  110D               	bcf	13,2	;volatile
 20714                           
 20715                           ;main.c: 214:     TRISBbits.TRISB3 = 1;
 20716  080C  0021               	movlb	1	; select bank1
 20717  080D  158D               	bsf	13,3	;volatile
 20718                           
 20719                           ;main.c: 215:     ANSELBbits.ANSB3 = 0;
 20720  080E  0023               	movlb	3	; select bank3
 20721  080F  118D               	bcf	13,3	;volatile
 20722                           
 20723                           ;main.c: 220:     ANSELCbits.ANSC4 = 0;
 20724  0810  120E               	bcf	14,4	;volatile
 20725                           
 20726                           ;main.c: 221:     ANSELCbits.ANSC5 = 0;
 20727  0811  128E               	bcf	14,5	;volatile
 20728                           
 20729                           ;main.c: 222:     TRISCbits.TRISC4 = 1;
 20730  0812  0021               	movlb	1	; select bank1
 20731  0813  160E               	bsf	14,4	;volatile
 20732                           
 20733                           ;main.c: 223:     TRISCbits.TRISC5 = 1;
 20734  0814  168E               	bsf	14,5	;volatile
 20735                           
 20736                           ;main.c: 232:     TRISAbits.TRISA4 = 0;
 20737  0815  120C               	bcf	12,4	;volatile
 20738                           
 20739                           ;main.c: 233:     TRISAbits.TRISA5 = 0;
 20740  0816  128C               	bcf	12,5	;volatile
 20741                           
 20742                           ;main.c: 234:     TRISEbits.TRISE0 = 0;
 20743  0817  1010               	bcf	16,0	;volatile
 20744                           
 20745                           ;main.c: 239:     TRISAbits.TRISA3 = 0;
 20746  0818  118C               	bcf	12,3	;volatile
 20747                           
 20748                           ;main.c: 240:     LATAbits.LATA3 = 0;
 20749  0819  0022               	movlb	2	; select bank2
 20750  081A  118C               	bcf	12,3	;volatile
 20751                           
 20752                           ;main.c: 246:     PPSLOCK = 0x55;
 20753  081B  3055               	movlw	85
 20754  081C  003C               	movlb	28	; select bank28
 20755  081D  008F               	movwf	15	;volsfr
 20756                           
 20757                           ;main.c: 247:     PPSLOCK = 0xAA;
 20758  081E  30AA               	movlw	170
 20759  081F  008F               	movwf	15	;volsfr
 20760                           
 20761                           ;main.c: 248:     PPSLOCKbits.PPSLOCKED = 0x00;
 20762  0820  100F               	bcf	15,0	;volsfr
 20763                           
 20764                           ;main.c: 252:     RC4PPSbits.RC4PPS = 0x0011;
 20765  0821  003D               	movlb	29	; select bank29
 20766  0822  0824               	movf	36,w	;volatile
 20767  0823  39E0               	andlw	-32
 20768  0824  3811               	iorlw	17
 20769  0825  00A4               	movwf	36	;volatile
 20770                           
 20771                           ;main.c: 253:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 20772  0826  003C               	movlb	28	; select bank28
 20773  0827  0821               	movf	33,w	;volatile
 20774  0828  39E0               	andlw	-32
 20775  0829  3814               	iorlw	20
 20776  082A  00A1               	movwf	33	;volatile
 20777                           
 20778                           ;main.c: 254:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 20779  082B  0820               	movf	32,w	;volatile
 20780  082C  39E0               	andlw	-32
 20781  082D  3815               	iorlw	21
 20782  082E  00A0               	movwf	32	;volatile
 20783                           
 20784                           ;main.c: 255:     RC5PPSbits.RC5PPS = 0x0010;
 20785  082F  003D               	movlb	29	; select bank29
 20786  0830  0825               	movf	37,w	;volatile
 20787  0831  39E0               	andlw	-32
 20788  0832  3810               	iorlw	16
 20789  0833  00A5               	movwf	37	;volatile
 20790                           
 20791                           ;main.c: 258:     RB2PPSbits.RB2PPS = 0x14;
 20792  0834  081A               	movf	26,w	;volatile
 20793  0835  39E0               	andlw	-32
 20794  0836  3814               	iorlw	20
 20795  0837  009A               	movwf	26	;volatile
 20796                           
 20797                           ;main.c: 259:     RXPPSbits.RXPPS = 0x0B;
 20798  0838  003C               	movlb	28	; select bank28
 20799  0839  0824               	movf	36,w	;volatile
 20800  083A  39E0               	andlw	-32
 20801  083B  380B               	iorlw	11
 20802  083C  00A4               	movwf	36	;volatile
 20803                           
 20804                           ;main.c: 261:     PPSLOCK = 0x55;
 20805  083D  3055               	movlw	85
 20806  083E  008F               	movwf	15	;volsfr
 20807                           
 20808                           ;main.c: 262:     PPSLOCK = 0xAA;
 20809  083F  30AA               	movlw	170
 20810  0840  008F               	movwf	15	;volsfr
 20811                           
 20812                           ;main.c: 263:     PPSLOCKbits.PPSLOCKED = 0x01;
 20813  0841  140F               	bsf	15,0	;volsfr
 20814  0842  0008               	return
 20815  0843                     __end_of_init_GPIO:	
 20816                           
 20817                           	psect	text78
 20818  2000                     __ptext78:	
 20819 ;; *************** function _initWDT *****************
 20820 ;; Defined at:
 20821 ;;		line 267 in file "main.c"
 20822 ;; Parameters:    Size  Location     Type
 20823 ;;		None
 20824 ;; Auto vars:     Size  Location     Type
 20825 ;;		None
 20826 ;; Return value:  Size  Location     Type
 20827 ;;                  1    wreg      void 
 20828 ;; Registers used:
 20829 ;;		wreg, status,2, status,0
 20830 ;; Tracked objects:
 20831 ;;		On entry : 0/0
 20832 ;;		On exit  : 0/0
 20833 ;;		Unchanged: 0/0
 20834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20839 ;;Total ram usage:        0 bytes
 20840 ;; Hardware stack levels used:    1
 20841 ;; Hardware stack levels required when called:    1
 20842 ;; This function calls:
 20843 ;;		Nothing
 20844 ;; This function is called by:
 20845 ;;		_main
 20846 ;; This function uses a non-reentrant model
 20847 ;;
 20848                           
 20849                           
 20850                           ;psect for function _initWDT
 20851  2000                     _initWDT:	
 20852                           
 20853                           ;main.c: 269:     WDTCONbits.WDTPS = 0b01101;
 20854                           
 20855                           ;incstack = 0
 20856                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 20857  2000  0021               	movlb	1	; select bank1
 20858  2001  0817               	movf	23,w	;volatile
 20859  2002  39C1               	andlw	-63
 20860  2003  381A               	iorlw	26
 20861  2004  0097               	movwf	23	;volatile
 20862  2005  0008               	return
 20863  2006                     __end_of_initWDT:	
 20864                           
 20865                           	psect	text79
 20866  3142                     __ptext79:	
 20867 ;; *************** function _initClock *****************
 20868 ;; Defined at:
 20869 ;;		line 180 in file "main.c"
 20870 ;; Parameters:    Size  Location     Type
 20871 ;;		None
 20872 ;; Auto vars:     Size  Location     Type
 20873 ;;		None
 20874 ;; Return value:  Size  Location     Type
 20875 ;;                  1    wreg      void 
 20876 ;; Registers used:
 20877 ;;		status,2, status,0, pclath, cstack
 20878 ;; Tracked objects:
 20879 ;;		On entry : 0/0
 20880 ;;		On exit  : 0/0
 20881 ;;		Unchanged: 0/0
 20882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20887 ;;Total ram usage:        0 bytes
 20888 ;; Hardware stack levels used:    1
 20889 ;; Hardware stack levels required when called:    2
 20890 ;; This function calls:
 20891 ;;		_internal_16
 20892 ;; This function is called by:
 20893 ;;		_main
 20894 ;; This function uses a non-reentrant model
 20895 ;;
 20896                           
 20897                           
 20898                           ;psect for function _initClock
 20899  3142                     _initClock:	
 20900                           
 20901                           ;main.c: 182:     internal_16();
 20902                           
 20903                           ;incstack = 0
 20904                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 20905  3142  31B1  2155         	fcall	_internal_16
 20906  3144  0008               	return
 20907  3145                     __end_of_initClock:	
 20908                           
 20909                           	psect	text80
 20910  3155                     __ptext80:	
 20911 ;; *************** function _internal_16 *****************
 20912 ;; Defined at:
 20913 ;;		line 26 in file "pic16f1719_internals.c"
 20914 ;; Parameters:    Size  Location     Type
 20915 ;;		None
 20916 ;; Auto vars:     Size  Location     Type
 20917 ;;		None
 20918 ;; Return value:  Size  Location     Type
 20919 ;;                  1    wreg      void 
 20920 ;; Registers used:
 20921 ;;		None
 20922 ;; Tracked objects:
 20923 ;;		On entry : 0/0
 20924 ;;		On exit  : 0/0
 20925 ;;		Unchanged: 0/0
 20926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20931 ;;Total ram usage:        0 bytes
 20932 ;; Hardware stack levels used:    1
 20933 ;; Hardware stack levels required when called:    1
 20934 ;; This function calls:
 20935 ;;		Nothing
 20936 ;; This function is called by:
 20937 ;;		_initClock
 20938 ;; This function uses a non-reentrant model
 20939 ;;
 20940                           
 20941                           
 20942                           ;psect for function _internal_16
 20943  3155                     _internal_16:	
 20944                           
 20945                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 20946                           
 20947                           ;incstack = 0
 20948                           ; Regs used in _internal_16: []
 20949  3155  0021               	movlb	1	; select bank1
 20950  3156  1019               	bcf	25,0	;volatile
 20951                           
 20952                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 20953  3157  1099               	bcf	25,1	;volatile
 20954                           
 20955                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 20956  3158  1599               	bsf	25,3	;volatile
 20957                           
 20958                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 20959  3159  1619               	bsf	25,4	;volatile
 20960                           
 20961                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 20962  315A  1699               	bsf	25,5	;volatile
 20963                           
 20964                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 20965  315B  1719               	bsf	25,6	;volatile
 20966                           
 20967                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 20968  315C  1399               	bcf	25,7	;volatile
 20969  315D  0008               	return
 20970  315E                     __end_of_internal_16:	
 20971                           
 20972                           	psect	text81
 20973  2B78                     __ptext81:	
 20974 ;; *************** function _EUSART_Initialize *****************
 20975 ;; Defined at:
 20976 ;;		line 6 in file "EUSART.c"
 20977 ;; Parameters:    Size  Location     Type
 20978 ;;  baudrate        4   18[BANK0 ] const long 
 20979 ;; Auto vars:     Size  Location     Type
 20980 ;;  x               2   10[COMMON] unsigned int 
 20981 ;; Return value:  Size  Location     Type
 20982 ;;                  1    wreg      unsigned char 
 20983 ;; Registers used:
 20984 ;;		wreg, status,2, status,0, pclath, cstack
 20985 ;; Tracked objects:
 20986 ;;		On entry : 0/0
 20987 ;;		On exit  : 0/0
 20988 ;;		Unchanged: 0/0
 20989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20990 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20992 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20993 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20994 ;;Total ram usage:       18 bytes
 20995 ;; Hardware stack levels used:    1
 20996 ;; Hardware stack levels required when called:    2
 20997 ;; This function calls:
 20998 ;;		___aldiv
 20999 ;; This function is called by:
 21000 ;;		_main
 21001 ;; This function uses a non-reentrant model
 21002 ;;
 21003                           
 21004                           
 21005                           ;psect for function _EUSART_Initialize
 21006  2B78                     _EUSART_Initialize:	
 21007                           
 21008                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 21009                           
 21010                           ;incstack = 0
 21011                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21012  2B78  0020               	movlb	0	; select bank0
 21013  2B79  0832               	movf	EUSART_Initialize@baudrate,w
 21014  2B7A  00B6               	movwf	??_EUSART_Initialize
 21015  2B7B  0833               	movf	EUSART_Initialize@baudrate+1,w
 21016  2B7C  00B7               	movwf	??_EUSART_Initialize+1
 21017  2B7D  0834               	movf	EUSART_Initialize@baudrate+2,w
 21018  2B7E  00B8               	movwf	??_EUSART_Initialize+2
 21019  2B7F  0835               	movf	EUSART_Initialize@baudrate+3,w
 21020  2B80  00B9               	movwf	??_EUSART_Initialize+3
 21021  2B81  3006               	movlw	6
 21022  2B82                     u9675:	
 21023  2B82  35B6               	lslf	??_EUSART_Initialize,f
 21024  2B83  0DB7               	rlf	??_EUSART_Initialize+1,f
 21025  2B84  0DB8               	rlf	??_EUSART_Initialize+2,f
 21026  2B85  0DB9               	rlf	??_EUSART_Initialize+3,f
 21027  2B86  0B89               	decfsz	9,f
 21028  2B87  2B82               	goto	u9675
 21029  2B88  0839               	movf	??_EUSART_Initialize+3,w
 21030  2B89  00A7               	movwf	___aldiv@divisor+3
 21031  2B8A  0838               	movf	??_EUSART_Initialize+2,w
 21032  2B8B  00A6               	movwf	___aldiv@divisor+2
 21033  2B8C  0837               	movf	??_EUSART_Initialize+1,w
 21034  2B8D  00A5               	movwf	___aldiv@divisor+1
 21035  2B8E  0836               	movf	??_EUSART_Initialize,w
 21036  2B8F  00A4               	movwf	___aldiv@divisor
 21037  2B90  0832               	movf	EUSART_Initialize@baudrate,w
 21038  2B91  00BA               	movwf	??_EUSART_Initialize+4
 21039  2B92  0833               	movf	EUSART_Initialize@baudrate+1,w
 21040  2B93  00BB               	movwf	??_EUSART_Initialize+5
 21041  2B94  0834               	movf	EUSART_Initialize@baudrate+2,w
 21042  2B95  00BC               	movwf	??_EUSART_Initialize+6
 21043  2B96  0835               	movf	EUSART_Initialize@baudrate+3,w
 21044  2B97  00BD               	movwf	??_EUSART_Initialize+7
 21045  2B98  3006               	movlw	6
 21046  2B99                     u9685:	
 21047  2B99  35BA               	lslf	??_EUSART_Initialize+4,f
 21048  2B9A  0DBB               	rlf	??_EUSART_Initialize+5,f
 21049  2B9B  0DBC               	rlf	??_EUSART_Initialize+6,f
 21050  2B9C  0DBD               	rlf	??_EUSART_Initialize+7,f
 21051  2B9D  0B89               	decfsz	9,f
 21052  2B9E  2B99               	goto	u9685
 21053  2B9F  3000               	movlw	0
 21054  2BA0  00BE               	movwf	??_EUSART_Initialize+8
 21055  2BA1  3024               	movlw	36
 21056  2BA2  00BF               	movwf	??_EUSART_Initialize+9
 21057  2BA3  30F4               	movlw	244
 21058  2BA4  00C0               	movwf	??_EUSART_Initialize+10
 21059  2BA5  3000               	movlw	0
 21060  2BA6  00C1               	movwf	??_EUSART_Initialize+11
 21061  2BA7  083A               	movf	??_EUSART_Initialize+4,w
 21062  2BA8  02BE               	subwf	??_EUSART_Initialize+8,f
 21063  2BA9  083B               	movf	??_EUSART_Initialize+5,w
 21064  2BAA  3BBF               	subwfb	??_EUSART_Initialize+9,f
 21065  2BAB  083C               	movf	??_EUSART_Initialize+6,w
 21066  2BAC  3BC0               	subwfb	??_EUSART_Initialize+10,f
 21067  2BAD  083D               	movf	??_EUSART_Initialize+7,w
 21068  2BAE  3BC1               	subwfb	??_EUSART_Initialize+11,f
 21069  2BAF  0841               	movf	??_EUSART_Initialize+11,w
 21070  2BB0  00AB               	movwf	___aldiv@dividend+3
 21071  2BB1  0840               	movf	??_EUSART_Initialize+10,w
 21072  2BB2  00AA               	movwf	___aldiv@dividend+2
 21073  2BB3  083F               	movf	??_EUSART_Initialize+9,w
 21074  2BB4  00A9               	movwf	___aldiv@dividend+1
 21075  2BB5  083E               	movf	??_EUSART_Initialize+8,w
 21076  2BB6  00A8               	movwf	___aldiv@dividend
 21077  2BB7  31A9  21BF  31AB   	fcall	___aldiv
 21078  2BBA  0020               	movlb	0	; select bank0
 21079  2BBB  0825               	movf	?___aldiv+1,w
 21080  2BBC  00FB               	movwf	EUSART_Initialize@x+1
 21081  2BBD  0824               	movf	?___aldiv,w
 21082  2BBE  00FA               	movwf	EUSART_Initialize@x
 21083                           
 21084                           ;EUSART.c: 10:  if(x>255)
 21085  2BBF  3001               	movlw	1
 21086  2BC0  027B               	subwf	EUSART_Initialize@x+1,w
 21087  2BC1  3000               	movlw	0
 21088  2BC2  1903               	skipnz
 21089  2BC3  027A               	subwf	EUSART_Initialize@x,w
 21090  2BC4  1C03               	skipc
 21091  2BC5  2C0E               	goto	l7784
 21092                           
 21093                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 21094  2BC6  0832               	movf	EUSART_Initialize@baudrate,w
 21095  2BC7  00B6               	movwf	??_EUSART_Initialize
 21096  2BC8  0833               	movf	EUSART_Initialize@baudrate+1,w
 21097  2BC9  00B7               	movwf	??_EUSART_Initialize+1
 21098  2BCA  0834               	movf	EUSART_Initialize@baudrate+2,w
 21099  2BCB  00B8               	movwf	??_EUSART_Initialize+2
 21100  2BCC  0835               	movf	EUSART_Initialize@baudrate+3,w
 21101  2BCD  00B9               	movwf	??_EUSART_Initialize+3
 21102  2BCE  3004               	movlw	4
 21103  2BCF                     u9705:	
 21104  2BCF  35B6               	lslf	??_EUSART_Initialize,f
 21105  2BD0  0DB7               	rlf	??_EUSART_Initialize+1,f
 21106  2BD1  0DB8               	rlf	??_EUSART_Initialize+2,f
 21107  2BD2  0DB9               	rlf	??_EUSART_Initialize+3,f
 21108  2BD3  0B89               	decfsz	9,f
 21109  2BD4  2BCF               	goto	u9705
 21110  2BD5  0839               	movf	??_EUSART_Initialize+3,w
 21111  2BD6  00A7               	movwf	___aldiv@divisor+3
 21112  2BD7  0838               	movf	??_EUSART_Initialize+2,w
 21113  2BD8  00A6               	movwf	___aldiv@divisor+2
 21114  2BD9  0837               	movf	??_EUSART_Initialize+1,w
 21115  2BDA  00A5               	movwf	___aldiv@divisor+1
 21116  2BDB  0836               	movf	??_EUSART_Initialize,w
 21117  2BDC  00A4               	movwf	___aldiv@divisor
 21118  2BDD  0832               	movf	EUSART_Initialize@baudrate,w
 21119  2BDE  00BA               	movwf	??_EUSART_Initialize+4
 21120  2BDF  0833               	movf	EUSART_Initialize@baudrate+1,w
 21121  2BE0  00BB               	movwf	??_EUSART_Initialize+5
 21122  2BE1  0834               	movf	EUSART_Initialize@baudrate+2,w
 21123  2BE2  00BC               	movwf	??_EUSART_Initialize+6
 21124  2BE3  0835               	movf	EUSART_Initialize@baudrate+3,w
 21125  2BE4  00BD               	movwf	??_EUSART_Initialize+7
 21126  2BE5  3004               	movlw	4
 21127  2BE6                     u9715:	
 21128  2BE6  35BA               	lslf	??_EUSART_Initialize+4,f
 21129  2BE7  0DBB               	rlf	??_EUSART_Initialize+5,f
 21130  2BE8  0DBC               	rlf	??_EUSART_Initialize+6,f
 21131  2BE9  0DBD               	rlf	??_EUSART_Initialize+7,f
 21132  2BEA  0B89               	decfsz	9,f
 21133  2BEB  2BE6               	goto	u9715
 21134  2BEC  3000               	movlw	0
 21135  2BED  00BE               	movwf	??_EUSART_Initialize+8
 21136  2BEE  3024               	movlw	36
 21137  2BEF  00BF               	movwf	??_EUSART_Initialize+9
 21138  2BF0  30F4               	movlw	244
 21139  2BF1  00C0               	movwf	??_EUSART_Initialize+10
 21140  2BF2  3000               	movlw	0
 21141  2BF3  00C1               	movwf	??_EUSART_Initialize+11
 21142  2BF4  083A               	movf	??_EUSART_Initialize+4,w
 21143  2BF5  02BE               	subwf	??_EUSART_Initialize+8,f
 21144  2BF6  083B               	movf	??_EUSART_Initialize+5,w
 21145  2BF7  3BBF               	subwfb	??_EUSART_Initialize+9,f
 21146  2BF8  083C               	movf	??_EUSART_Initialize+6,w
 21147  2BF9  3BC0               	subwfb	??_EUSART_Initialize+10,f
 21148  2BFA  083D               	movf	??_EUSART_Initialize+7,w
 21149  2BFB  3BC1               	subwfb	??_EUSART_Initialize+11,f
 21150  2BFC  0841               	movf	??_EUSART_Initialize+11,w
 21151  2BFD  00AB               	movwf	___aldiv@dividend+3
 21152  2BFE  0840               	movf	??_EUSART_Initialize+10,w
 21153  2BFF  00AA               	movwf	___aldiv@dividend+2
 21154  2C00  083F               	movf	??_EUSART_Initialize+9,w
 21155  2C01  00A9               	movwf	___aldiv@dividend+1
 21156  2C02  083E               	movf	??_EUSART_Initialize+8,w
 21157  2C03  00A8               	movwf	___aldiv@dividend
 21158  2C04  31A9  21BF  31AB   	fcall	___aldiv
 21159  2C07  0020               	movlb	0	; select bank0
 21160  2C08  0825               	movf	?___aldiv+1,w
 21161  2C09  00FB               	movwf	EUSART_Initialize@x+1
 21162  2C0A  0824               	movf	?___aldiv,w
 21163  2C0B  00FA               	movwf	EUSART_Initialize@x
 21164                           
 21165                           ;EUSART.c: 13:   BRGH = 1;
 21166  2C0C  0023               	movlb	3	; select bank3
 21167  2C0D  151E               	bsf	30,2	;volatile
 21168  2C0E                     l7784:	
 21169                           
 21170                           ;EUSART.c: 15:  if(x<256)
 21171  2C0E  3001               	movlw	1
 21172  2C0F  027B               	subwf	EUSART_Initialize@x+1,w
 21173  2C10  3000               	movlw	0
 21174  2C11  1903               	skipnz
 21175  2C12  027A               	subwf	EUSART_Initialize@x,w
 21176  2C13  1803               	skipnc
 21177  2C14  0008               	return
 21178                           
 21179                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 21180  2C15  087A               	movf	EUSART_Initialize@x,w
 21181  2C16  0023               	movlb	3	; select bank3
 21182  2C17  009B               	movwf	27	;volatile
 21183                           
 21184                           ;EUSART.c: 18:    SYNC = 0;
 21185  2C18  121E               	bcf	30,4	;volatile
 21186                           
 21187                           ;EUSART.c: 19:    SPEN = 1;
 21188  2C19  179D               	bsf	29,7	;volatile
 21189                           
 21190                           ;EUSART.c: 20:           TRISC7 = 1;
 21191  2C1A  0021               	movlb	1	; select bank1
 21192  2C1B  178E               	bsf	14,7	;volatile
 21193                           
 21194                           ;EUSART.c: 21:           TRISC6 = 1;
 21195  2C1C  170E               	bsf	14,6	;volatile
 21196                           
 21197                           ;EUSART.c: 22:           CREN = 1;
 21198  2C1D  0023               	movlb	3	; select bank3
 21199  2C1E  161D               	bsf	29,4	;volatile
 21200                           
 21201                           ;EUSART.c: 23:           TXEN = 1;
 21202  2C1F  169E               	bsf	30,5	;volatile
 21203  2C20  0008               	return
 21204  2C21                     __end_of_EUSART_Initialize:	
 21205                           
 21206                           	psect	text82
 21207  29BF                     __ptext82:	
 21208 ;; *************** function ___aldiv *****************
 21209 ;; Defined at:
 21210 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 21211 ;; Parameters:    Size  Location     Type
 21212 ;;  divisor         4    4[BANK0 ] long 
 21213 ;;  dividend        4    8[BANK0 ] long 
 21214 ;; Auto vars:     Size  Location     Type
 21215 ;;  quotient        4   14[BANK0 ] long 
 21216 ;;  sign            1   13[BANK0 ] unsigned char 
 21217 ;;  counter         1   12[BANK0 ] unsigned char 
 21218 ;; Return value:  Size  Location     Type
 21219 ;;                  4    4[BANK0 ] long 
 21220 ;; Registers used:
 21221 ;;		wreg, status,2, status,0
 21222 ;; Tracked objects:
 21223 ;;		On entry : 0/0
 21224 ;;		On exit  : 0/0
 21225 ;;		Unchanged: 0/0
 21226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21227 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21228 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21229 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21230 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21231 ;;Total ram usage:       15 bytes
 21232 ;; Hardware stack levels used:    1
 21233 ;; Hardware stack levels required when called:    1
 21234 ;; This function calls:
 21235 ;;		Nothing
 21236 ;; This function is called by:
 21237 ;;		_EUSART_Initialize
 21238 ;;		_setCellUndervoltageProtection
 21239 ;;		_setCellOvervoltageProtection
 21240 ;;		_updateVoltages
 21241 ;; This function uses a non-reentrant model
 21242 ;;
 21243                           
 21244                           
 21245                           ;psect for function ___aldiv
 21246  29BF                     ___aldiv:	
 21247                           
 21248                           ;incstack = 0
 21249                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 21250  29BF  0020               	movlb	0	; select bank0
 21251  29C0  01AD               	clrf	___aldiv@sign
 21252  29C1  1FA7               	btfss	___aldiv@divisor+3,7
 21253  29C2  29D0               	goto	l1080
 21254  29C3  09A4               	comf	___aldiv@divisor,f
 21255  29C4  09A5               	comf	___aldiv@divisor+1,f
 21256  29C5  09A6               	comf	___aldiv@divisor+2,f
 21257  29C6  09A7               	comf	___aldiv@divisor+3,f
 21258  29C7  0AA4               	incf	___aldiv@divisor,f
 21259  29C8  1903               	skipnz
 21260  29C9  0AA5               	incf	___aldiv@divisor+1,f
 21261  29CA  1903               	skipnz
 21262  29CB  0AA6               	incf	___aldiv@divisor+2,f
 21263  29CC  1903               	skipnz
 21264  29CD  0AA7               	incf	___aldiv@divisor+3,f
 21265  29CE  01AD               	clrf	___aldiv@sign
 21266  29CF  0AAD               	incf	___aldiv@sign,f
 21267  29D0                     l1080:	
 21268  29D0  1FAB               	btfss	___aldiv@dividend+3,7
 21269  29D1  29E1               	goto	l7360
 21270  29D2  09A8               	comf	___aldiv@dividend,f
 21271  29D3  09A9               	comf	___aldiv@dividend+1,f
 21272  29D4  09AA               	comf	___aldiv@dividend+2,f
 21273  29D5  09AB               	comf	___aldiv@dividend+3,f
 21274  29D6  0AA8               	incf	___aldiv@dividend,f
 21275  29D7  1903               	skipnz
 21276  29D8  0AA9               	incf	___aldiv@dividend+1,f
 21277  29D9  1903               	skipnz
 21278  29DA  0AAA               	incf	___aldiv@dividend+2,f
 21279  29DB  1903               	skipnz
 21280  29DC  0AAB               	incf	___aldiv@dividend+3,f
 21281  29DD  3001               	movlw	1
 21282  29DE  00F9               	movwf	??___aldiv
 21283  29DF  0879               	movf	??___aldiv,w
 21284  29E0  06AD               	xorwf	___aldiv@sign,f
 21285  29E1                     l7360:	
 21286  29E1  3000               	movlw	0
 21287  29E2  00B1               	movwf	___aldiv@quotient+3
 21288  29E3  3000               	movlw	0
 21289  29E4  00B0               	movwf	___aldiv@quotient+2
 21290  29E5  3000               	movlw	0
 21291  29E6  00AF               	movwf	___aldiv@quotient+1
 21292  29E7  3000               	movlw	0
 21293  29E8  00AE               	movwf	___aldiv@quotient
 21294  29E9  0827               	movf	___aldiv@divisor+3,w
 21295  29EA  0426               	iorwf	___aldiv@divisor+2,w
 21296  29EB  0425               	iorwf	___aldiv@divisor+1,w
 21297  29EC  0424               	iorwf	___aldiv@divisor,w
 21298  29ED  1903               	skipnz
 21299  29EE  2A2A               	goto	l7382
 21300  29EF  01AC               	clrf	___aldiv@counter
 21301  29F0  0AAC               	incf	___aldiv@counter,f
 21302  29F1                     l7368:	
 21303  29F1  1BA7               	btfsc	___aldiv@divisor+3,7
 21304  29F2  29FF               	goto	l7370
 21305  29F3  3001               	movlw	1
 21306  29F4                     u9245:	
 21307  29F4  35A4               	lslf	___aldiv@divisor,f
 21308  29F5  0DA5               	rlf	___aldiv@divisor+1,f
 21309  29F6  0DA6               	rlf	___aldiv@divisor+2,f
 21310  29F7  0DA7               	rlf	___aldiv@divisor+3,f
 21311  29F8  0B89               	decfsz	9,f
 21312  29F9  29F4               	goto	u9245
 21313  29FA  3001               	movlw	1
 21314  29FB  00F9               	movwf	??___aldiv
 21315  29FC  0879               	movf	??___aldiv,w
 21316  29FD  07AC               	addwf	___aldiv@counter,f
 21317  29FE  29F1               	goto	l7368
 21318  29FF                     l7370:	
 21319  29FF  3001               	movlw	1
 21320  2A00                     u9265:	
 21321  2A00  35AE               	lslf	___aldiv@quotient,f
 21322  2A01  0DAF               	rlf	___aldiv@quotient+1,f
 21323  2A02  0DB0               	rlf	___aldiv@quotient+2,f
 21324  2A03  0DB1               	rlf	___aldiv@quotient+3,f
 21325  2A04  0B89               	decfsz	9,f
 21326  2A05  2A00               	goto	u9265
 21327  2A06  0827               	movf	___aldiv@divisor+3,w
 21328  2A07  022B               	subwf	___aldiv@dividend+3,w
 21329  2A08  1D03               	skipz
 21330  2A09  2A14               	goto	u9275
 21331  2A0A  0826               	movf	___aldiv@divisor+2,w
 21332  2A0B  022A               	subwf	___aldiv@dividend+2,w
 21333  2A0C  1D03               	skipz
 21334  2A0D  2A14               	goto	u9275
 21335  2A0E  0825               	movf	___aldiv@divisor+1,w
 21336  2A0F  0229               	subwf	___aldiv@dividend+1,w
 21337  2A10  1D03               	skipz
 21338  2A11  2A14               	goto	u9275
 21339  2A12  0824               	movf	___aldiv@divisor,w
 21340  2A13  0228               	subwf	___aldiv@dividend,w
 21341  2A14                     u9275:	
 21342  2A14  1C03               	skipc
 21343  2A15  2A1F               	goto	l7378
 21344  2A16  0824               	movf	___aldiv@divisor,w
 21345  2A17  02A8               	subwf	___aldiv@dividend,f
 21346  2A18  0825               	movf	___aldiv@divisor+1,w
 21347  2A19  3BA9               	subwfb	___aldiv@dividend+1,f
 21348  2A1A  0826               	movf	___aldiv@divisor+2,w
 21349  2A1B  3BAA               	subwfb	___aldiv@dividend+2,f
 21350  2A1C  0827               	movf	___aldiv@divisor+3,w
 21351  2A1D  3BAB               	subwfb	___aldiv@dividend+3,f
 21352  2A1E  142E               	bsf	___aldiv@quotient,0
 21353  2A1F                     l7378:	
 21354  2A1F  3001               	movlw	1
 21355  2A20                     u9285:	
 21356  2A20  36A7               	lsrf	___aldiv@divisor+3,f
 21357  2A21  0CA6               	rrf	___aldiv@divisor+2,f
 21358  2A22  0CA5               	rrf	___aldiv@divisor+1,f
 21359  2A23  0CA4               	rrf	___aldiv@divisor,f
 21360  2A24  0B89               	decfsz	9,f
 21361  2A25  2A20               	goto	u9285
 21362  2A26  3001               	movlw	1
 21363  2A27  02AC               	subwf	___aldiv@counter,f
 21364  2A28  1D03               	btfss	3,2
 21365  2A29  29FF               	goto	l7370
 21366  2A2A                     l7382:	
 21367  2A2A  082D               	movf	___aldiv@sign,w
 21368  2A2B  1903               	btfsc	3,2
 21369  2A2C  2A38               	goto	l7386
 21370  2A2D  09AE               	comf	___aldiv@quotient,f
 21371  2A2E  09AF               	comf	___aldiv@quotient+1,f
 21372  2A2F  09B0               	comf	___aldiv@quotient+2,f
 21373  2A30  09B1               	comf	___aldiv@quotient+3,f
 21374  2A31  0AAE               	incf	___aldiv@quotient,f
 21375  2A32  1903               	skipnz
 21376  2A33  0AAF               	incf	___aldiv@quotient+1,f
 21377  2A34  1903               	skipnz
 21378  2A35  0AB0               	incf	___aldiv@quotient+2,f
 21379  2A36  1903               	skipnz
 21380  2A37  0AB1               	incf	___aldiv@quotient+3,f
 21381  2A38                     l7386:	
 21382  2A38  0831               	movf	___aldiv@quotient+3,w
 21383  2A39  00A7               	movwf	?___aldiv+3
 21384  2A3A  0830               	movf	___aldiv@quotient+2,w
 21385  2A3B  00A6               	movwf	?___aldiv+2
 21386  2A3C  082F               	movf	___aldiv@quotient+1,w
 21387  2A3D  00A5               	movwf	?___aldiv+1
 21388  2A3E  082E               	movf	___aldiv@quotient,w
 21389  2A3F  00A4               	movwf	?___aldiv
 21390  2A40  0008               	return
 21391  2A41                     __end_of___aldiv:	
 21392                           
 21393                           	psect	intentry
 21394  0004                     __pintentry:	
 21395 ;; *************** function _myIsr *****************
 21396 ;; Defined at:
 21397 ;;		line 54 in file "main.c"
 21398 ;; Parameters:    Size  Location     Type
 21399 ;;		None
 21400 ;; Auto vars:     Size  Location     Type
 21401 ;;		None
 21402 ;; Return value:  Size  Location     Type
 21403 ;;                  1    wreg      void 
 21404 ;; Registers used:
 21405 ;;		wreg, status,2, status,0
 21406 ;; Tracked objects:
 21407 ;;		On entry : 0/0
 21408 ;;		On exit  : 0/0
 21409 ;;		Unchanged: 0/0
 21410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21413 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21414 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21415 ;;Total ram usage:        1 bytes
 21416 ;; Hardware stack levels used:    1
 21417 ;; This function calls:
 21418 ;;		Nothing
 21419 ;; This function is called by:
 21420 ;;		Interrupt level 1
 21421 ;; This function uses a non-reentrant model
 21422 ;;
 21423                           
 21424  0004                     _myIsr:	
 21425                           
 21426                           ;incstack = 0
 21427  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21428                           
 21429                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 21430  0005  3180               	pagesel	$
 21431                           
 21432                           ;main.c: 56:     static uint8_t count = 0;;main.c: 58:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 21433  0006  0020               	movlb	0	; select bank0
 21434  0007  1C11               	btfss	17,0	;volatile
 21435  0008  281C               	goto	i1l171
 21436  0009  0021               	movlb	1	; select bank1
 21437  000A  1C11               	btfss	17,0	;volatile
 21438  000B  281C               	goto	i1l171
 21439                           
 21440                           ;main.c: 59:         PIR1bits.TMR1IF = 0;
 21441  000C  0020               	movlb	0	; select bank0
 21442  000D  1011               	bcf	17,0	;volatile
 21443                           
 21444                           ;main.c: 60:         count++;
 21445  000E  3001               	movlw	1
 21446  000F  00F0               	movwf	??_myIsr
 21447  0010  0870               	movf	??_myIsr,w
 21448  0011  0023               	movlb	3	; select bank3
 21449  0012  07DE               	addwf	myIsr@count^(0+384),f
 21450                           
 21451                           ;main.c: 63:         if (count == 61) {
 21452  0013  303D               	movlw	61
 21453  0014  065E               	xorwf	myIsr@count^(0+384),w
 21454  0015  1D03               	btfss	3,2
 21455  0016  281C               	goto	i1l171
 21456                           
 21457                           ;main.c: 64:             tmr1_flag = 1;
 21458  0017  3001               	movlw	1
 21459  0018  00F0               	movwf	??_myIsr
 21460  0019  0870               	movf	??_myIsr,w
 21461  001A  00DF               	movwf	_tmr1_flag^(0+384)	;volatile
 21462                           
 21463                           ;main.c: 65:             count = 0;
 21464  001B  01DE               	clrf	myIsr@count^(0+384)
 21465  001C                     i1l171:	
 21466  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21467  001D  0009               	retfie
 21468  001E                     __end_of_myIsr:	
 21469  007E                     btemp	set	126	;btemp
 21470  007E                     int$flags	set	126
 21471  007E                     wtemp0	set	126
 21472  2771                     
 21473                           	psect	text7_split_1
 21474  24D9                     l6996:	
 21475                           
 21476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 21477  24D9  0859               	movf	vfpfcnvrt@fmt,w
 21478  24DA  0086               	movwf	6
 21479  24DB  0187               	clrf	7
 21480  24DC  3F40               	moviw [0]fsr1
 21481  24DD  00F1               	movwf	strncmp@_l
 21482  24DE  3F41               	moviw [1]fsr1
 21483  24DF  00F2               	movwf	strncmp@_l+1
 21484  24E0  309A               	movlw	low (STR_24| (0+32768))
 21485  24E1  00F3               	movwf	strncmp@_r
 21486  24E2  30BA               	movlw	high (STR_24| (0+32768))
 21487  24E3  00F4               	movwf	strncmp@_r+1
 21488  24E4  3003               	movlw	3
 21489  24E5  00F5               	movwf	strncmp@n
 21490  24E6  3000               	movlw	0
 21491  24E7  00F6               	movwf	strncmp@n+1
 21492  24E8  31B5  25B3  31A4   	fcall	_strncmp
 21493  24EB  0871               	movf	?_strncmp,w
 21494  24EC  0472               	iorwf	?_strncmp+1,w
 21495  24ED  1903               	btfsc	3,2
 21496  24EE  2D06               	goto	l7000
 21497  24EF  0020               	movlb	0	; select bank0
 21498  24F0  0859               	movf	vfpfcnvrt@fmt,w
 21499  24F1  0086               	movwf	6
 21500  24F2  0187               	clrf	7
 21501  24F3  3F40               	moviw [0]fsr1
 21502  24F4  00F1               	movwf	strncmp@_l
 21503  24F5  3F41               	moviw [1]fsr1
 21504  24F6  00F2               	movwf	strncmp@_l+1
 21505  24F7  309E               	movlw	low (STR_28| (0+32768))
 21506  24F8  00F3               	movwf	strncmp@_r
 21507  24F9  30BA               	movlw	high (STR_28| (0+32768))
 21508  24FA  00F4               	movwf	strncmp@_r+1
 21509  24FB  3003               	movlw	3
 21510  24FC  00F5               	movwf	strncmp@n
 21511  24FD  3000               	movlw	0
 21512  24FE  00F6               	movwf	strncmp@n+1
 21513  24FF  31B5  25B3  31A4   	fcall	_strncmp
 21514  2502  0871               	movf	?_strncmp,w
 21515  2503  0472               	iorwf	?_strncmp+1,w
 21516  2504  1D03               	btfss	3,2
 21517  2505  2D51               	goto	l7008
 21518  2506                     l7000:	
 21519                           
 21520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 21521  2506  0020               	movlb	0	; select bank0
 21522  2507  0859               	movf	vfpfcnvrt@fmt,w
 21523  2508  0086               	movwf	6
 21524  2509  0187               	clrf	7
 21525  250A  3003               	movlw	3
 21526  250B  0781               	addwf	1,f
 21527  250C  3141               	addfsr 1,1
 21528  250D  1803               	skipnc
 21529  250E  0A81               	incf	1,f
 21530                           
 21531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21532  250F  085A               	movf	vfpfcnvrt@ap,w
 21533  2510  0086               	movwf	6
 21534  2511  0187               	clrf	7
 21535  2512  0801               	movf	1,w
 21536  2513  0084               	movwf	4
 21537  2514  0185               	clrf	5
 21538  2515  3002               	movlw	2
 21539  2516  0781               	addwf	1,f
 21540  2517  0800               	movf	0,w
 21541  2518  0021               	movlb	1	; select bank1
 21542  2519  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21543  251A  3980               	andlw	128
 21544  251B  1D03               	skipz
 21545  251C  30FF               	movlw	255
 21546  251D  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21547  251E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21548  251F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21549  2520  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21550  2521  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21551  2522  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21552  2523  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21553                           
 21554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 21555  2524  0020               	movlb	0	; select bank0
 21556  2525  0858               	movf	vfpfcnvrt@fp+1,w
 21557  2526  00B1               	movwf	dtoa@fp+1
 21558  2527  0857               	movf	vfpfcnvrt@fp,w
 21559  2528  00B0               	movwf	dtoa@fp
 21560  2529  0021               	movlb	1	; select bank1
 21561  252A  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21562  252B  0020               	movlb	0	; select bank0
 21563  252C  00B2               	movwf	dtoa@d
 21564  252D  0021               	movlb	1	; select bank1
 21565  252E  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21566  252F  0020               	movlb	0	; select bank0
 21567  2530  00B3               	movwf	dtoa@d+1
 21568  2531  0021               	movlb	1	; select bank1
 21569  2532  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21570  2533  0020               	movlb	0	; select bank0
 21571  2534  00B4               	movwf	dtoa@d+2
 21572  2535  0021               	movlb	1	; select bank1
 21573  2536  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21574  2537  0020               	movlb	0	; select bank0
 21575  2538  00B5               	movwf	dtoa@d+3
 21576  2539  0021               	movlb	1	; select bank1
 21577  253A  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21578  253B  0020               	movlb	0	; select bank0
 21579  253C  00B6               	movwf	dtoa@d+4
 21580  253D  0021               	movlb	1	; select bank1
 21581  253E  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21582  253F  0020               	movlb	0	; select bank0
 21583  2540  00B7               	movwf	dtoa@d+5
 21584  2541  0021               	movlb	1	; select bank1
 21585  2542  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21586  2543  0020               	movlb	0	; select bank0
 21587  2544  00B8               	movwf	dtoa@d+6
 21588  2545  0021               	movlb	1	; select bank1
 21589  2546  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21590  2547  0020               	movlb	0	; select bank0
 21591  2548  00B9               	movwf	dtoa@d+7
 21592  2549  3198  20D5         	fcall	_dtoa
 21593  254B  0020               	movlb	0	; select bank0
 21594  254C  0831               	movf	?_dtoa+1,w
 21595  254D  00D8               	movwf	?_vfpfcnvrt+1
 21596  254E  0830               	movf	?_dtoa,w
 21597  254F  00D7               	movwf	?_vfpfcnvrt
 21598  2550  0008               	return
 21599  2551                     l7008:	
 21600                           
 21601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 21602  2551  0020               	movlb	0	; select bank0
 21603  2552  0859               	movf	vfpfcnvrt@fmt,w
 21604  2553  0086               	movwf	6
 21605  2554  0187               	clrf	7
 21606  2555  3F40               	moviw [0]fsr1
 21607  2556  00F1               	movwf	strncmp@_l
 21608  2557  3F41               	moviw [1]fsr1
 21609  2558  00F2               	movwf	strncmp@_l+1
 21610  2559  309B               	movlw	low ((STR_24+1)| (0+32768))
 21611  255A  00F3               	movwf	strncmp@_r
 21612  255B  30BA               	movlw	high ((STR_24+1)| (0+32768))
 21613  255C  00F4               	movwf	strncmp@_r+1
 21614  255D  3002               	movlw	2
 21615  255E  00F5               	movwf	strncmp@n
 21616  255F  3000               	movlw	0
 21617  2560  00F6               	movwf	strncmp@n+1
 21618  2561  31B5  25B3  31A4   	fcall	_strncmp
 21619  2564  0871               	movf	?_strncmp,w
 21620  2565  0472               	iorwf	?_strncmp+1,w
 21621  2566  1903               	btfsc	3,2
 21622  2567  2D7F               	goto	l7012
 21623  2568  0020               	movlb	0	; select bank0
 21624  2569  0859               	movf	vfpfcnvrt@fmt,w
 21625  256A  0086               	movwf	6
 21626  256B  0187               	clrf	7
 21627  256C  3F40               	moviw [0]fsr1
 21628  256D  00F1               	movwf	strncmp@_l
 21629  256E  3F41               	moviw [1]fsr1
 21630  256F  00F2               	movwf	strncmp@_l+1
 21631  2570  309F               	movlw	low ((STR_28+1)| (0+32768))
 21632  2571  00F3               	movwf	strncmp@_r
 21633  2572  30BA               	movlw	high ((STR_28+1)| (0+32768))
 21634  2573  00F4               	movwf	strncmp@_r+1
 21635  2574  3002               	movlw	2
 21636  2575  00F5               	movwf	strncmp@n
 21637  2576  3000               	movlw	0
 21638  2577  00F6               	movwf	strncmp@n+1
 21639  2578  31B5  25B3  31A4   	fcall	_strncmp
 21640  257B  0871               	movf	?_strncmp,w
 21641  257C  0472               	iorwf	?_strncmp+1,w
 21642  257D  1D03               	btfss	3,2
 21643  257E  2DD1               	goto	L9
 21644  257F                     l7012:	
 21645                           
 21646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 21647  257F  0020               	movlb	0	; select bank0
 21648  2580  0859               	movf	vfpfcnvrt@fmt,w
 21649  2581  0086               	movwf	6
 21650  2582  0187               	clrf	7
 21651  2583  3002               	movlw	2
 21652  2584  0781               	addwf	1,f
 21653  2585  3141               	addfsr 1,1
 21654  2586  1803               	skipnc
 21655  2587  0A81               	incf	1,f
 21656                           
 21657                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21658  2588  085A               	movf	vfpfcnvrt@ap,w
 21659  2589  0086               	movwf	6
 21660  258A  0187               	clrf	7
 21661  258B  0801               	movf	1,w
 21662  258C  0084               	movwf	4
 21663  258D  0185               	clrf	5
 21664  258E  3002               	movlw	2
 21665  258F  0781               	addwf	1,f
 21666  2590  3F00               	moviw [0]fsr0
 21667  2591  00DB               	movwf	??_vfpfcnvrt
 21668  2592  3F01               	moviw [1]fsr0
 21669  2593  00DC               	movwf	??_vfpfcnvrt+1
 21670  2594  085B               	movf	??_vfpfcnvrt,w
 21671  2595  0021               	movlb	1	; select bank1
 21672  2596  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21673  2597  0020               	movlb	0	; select bank0
 21674  2598  085C               	movf	??_vfpfcnvrt+1,w
 21675  2599  0021               	movlb	1	; select bank1
 21676  259A  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21677  259B  0D89               	rlf	9,f
 21678  259C  3B89               	subwfb	9,f
 21679  259D  0989               	comf	9,f
 21680  259E  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21681  259F  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21682  25A0  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21683  25A1  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21684  25A2  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21685  25A3  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21686                           
 21687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 21688  25A4  0020               	movlb	0	; select bank0
 21689  25A5  0858               	movf	vfpfcnvrt@fp+1,w
 21690  25A6  00B1               	movwf	dtoa@fp+1
 21691  25A7  0857               	movf	vfpfcnvrt@fp,w
 21692  25A8  00B0               	movwf	dtoa@fp
 21693  25A9  0021               	movlb	1	; select bank1
 21694  25AA  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21695  25AB  0020               	movlb	0	; select bank0
 21696  25AC  00B2               	movwf	dtoa@d
 21697  25AD  0021               	movlb	1	; select bank1
 21698  25AE  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21699  25AF  0020               	movlb	0	; select bank0
 21700  25B0  00B3               	movwf	dtoa@d+1
 21701  25B1  0021               	movlb	1	; select bank1
 21702  25B2  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21703  25B3  0020               	movlb	0	; select bank0
 21704  25B4  00B4               	movwf	dtoa@d+2
 21705  25B5  0021               	movlb	1	; select bank1
 21706  25B6  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21707  25B7  0020               	movlb	0	; select bank0
 21708  25B8  00B5               	movwf	dtoa@d+3
 21709  25B9  0021               	movlb	1	; select bank1
 21710  25BA  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21711  25BB  0020               	movlb	0	; select bank0
 21712  25BC  00B6               	movwf	dtoa@d+4
 21713  25BD  0021               	movlb	1	; select bank1
 21714  25BE  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21715  25BF  0020               	movlb	0	; select bank0
 21716  25C0  00B7               	movwf	dtoa@d+5
 21717  25C1  0021               	movlb	1	; select bank1
 21718  25C2  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21719  25C3  0020               	movlb	0	; select bank0
 21720  25C4  00B8               	movwf	dtoa@d+6
 21721  25C5  0021               	movlb	1	; select bank1
 21722  25C6  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21723  25C7  0020               	movlb	0	; select bank0
 21724  25C8  00B9               	movwf	dtoa@d+7
 21725  25C9  3198  20D5         	fcall	_dtoa
 21726  25CB  0020               	movlb	0	; select bank0
 21727  25CC  0831               	movf	?_dtoa+1,w
 21728  25CD  00D8               	movwf	?_vfpfcnvrt+1
 21729  25CE  0830               	movf	?_dtoa,w
 21730  25CF  00D7               	movwf	?_vfpfcnvrt
 21731  25D0  0008               	return
 21732  25D1                     L9:	
 21733  25D1                     L8:	
 21734  25D1  3188  2843         	ljmp	l7020
 21735                           
 21736                           	psect	text7_split_2
 21737  0843                     l7020:	
 21738                           
 21739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 21740  0843  0020               	movlb	0	; select bank0
 21741  0844  0859               	movf	vfpfcnvrt@fmt,w
 21742  0845  0086               	movwf	6
 21743  0846  0187               	clrf	7
 21744  0847  3F40               	moviw [0]fsr1
 21745  0848  00DB               	movwf	??_vfpfcnvrt
 21746  0849  3F41               	moviw [1]fsr1
 21747  084A  00DC               	movwf	??_vfpfcnvrt+1
 21748  084B  085B               	movf	??_vfpfcnvrt,w
 21749  084C  0084               	movwf	4
 21750  084D  085C               	movf	??_vfpfcnvrt+1,w
 21751  084E  0085               	movwf	5
 21752  084F  0012               	moviw fsr0++
 21753  0850  3A64               	xorlw	100
 21754  0851  1903               	btfsc	3,2
 21755  0852  2862               	goto	l7024
 21756  0853  0859               	movf	vfpfcnvrt@fmt,w
 21757  0854  0086               	movwf	6
 21758  0855  0187               	clrf	7
 21759  0856  3F40               	moviw [0]fsr1
 21760  0857  00DB               	movwf	??_vfpfcnvrt
 21761  0858  3F41               	moviw [1]fsr1
 21762  0859  00DC               	movwf	??_vfpfcnvrt+1
 21763  085A  085B               	movf	??_vfpfcnvrt,w
 21764  085B  0084               	movwf	4
 21765  085C  085C               	movf	??_vfpfcnvrt+1,w
 21766  085D  0085               	movwf	5
 21767  085E  0012               	moviw fsr0++
 21768  085F  3A69               	xorlw	105
 21769  0860  1D03               	btfss	3,2
 21770  0861  28B3               	goto	l7032
 21771  0862                     l7024:	
 21772                           
 21773                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 21774  0862  0859               	movf	vfpfcnvrt@fmt,w
 21775  0863  0086               	movwf	6
 21776  0864  0187               	clrf	7
 21777  0865  3001               	movlw	1
 21778  0866  0781               	addwf	1,f
 21779  0867  3141               	addfsr 1,1
 21780  0868  1803               	skipnc
 21781  0869  0A81               	incf	1,f
 21782                           
 21783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21784  086A  085A               	movf	vfpfcnvrt@ap,w
 21785  086B  0086               	movwf	6
 21786  086C  0187               	clrf	7
 21787  086D  0801               	movf	1,w
 21788  086E  0084               	movwf	4
 21789  086F  0185               	clrf	5
 21790  0870  3002               	movlw	2
 21791  0871  0781               	addwf	1,f
 21792  0872  3F00               	moviw [0]fsr0
 21793  0873  00DB               	movwf	??_vfpfcnvrt
 21794  0874  3F01               	moviw [1]fsr0
 21795  0875  00DC               	movwf	??_vfpfcnvrt+1
 21796  0876  085B               	movf	??_vfpfcnvrt,w
 21797  0877  0021               	movlb	1	; select bank1
 21798  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21799  0879  0020               	movlb	0	; select bank0
 21800  087A  085C               	movf	??_vfpfcnvrt+1,w
 21801  087B  0021               	movlb	1	; select bank1
 21802  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21803  087D  0D89               	rlf	9,f
 21804  087E  3B89               	subwfb	9,f
 21805  087F  0989               	comf	9,f
 21806  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21807  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21808  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21809  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21810  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21811  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21812                           
 21813                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 21814  0886  0020               	movlb	0	; select bank0
 21815  0887  0858               	movf	vfpfcnvrt@fp+1,w
 21816  0888  00B1               	movwf	dtoa@fp+1
 21817  0889  0857               	movf	vfpfcnvrt@fp,w
 21818  088A  00B0               	movwf	dtoa@fp
 21819  088B  0021               	movlb	1	; select bank1
 21820  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21821  088D  0020               	movlb	0	; select bank0
 21822  088E  00B2               	movwf	dtoa@d
 21823  088F  0021               	movlb	1	; select bank1
 21824  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21825  0891  0020               	movlb	0	; select bank0
 21826  0892  00B3               	movwf	dtoa@d+1
 21827  0893  0021               	movlb	1	; select bank1
 21828  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21829  0895  0020               	movlb	0	; select bank0
 21830  0896  00B4               	movwf	dtoa@d+2
 21831  0897  0021               	movlb	1	; select bank1
 21832  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21833  0899  0020               	movlb	0	; select bank0
 21834  089A  00B5               	movwf	dtoa@d+3
 21835  089B  0021               	movlb	1	; select bank1
 21836  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21837  089D  0020               	movlb	0	; select bank0
 21838  089E  00B6               	movwf	dtoa@d+4
 21839  089F  0021               	movlb	1	; select bank1
 21840  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21841  08A1  0020               	movlb	0	; select bank0
 21842  08A2  00B7               	movwf	dtoa@d+5
 21843  08A3  0021               	movlb	1	; select bank1
 21844  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21845  08A5  0020               	movlb	0	; select bank0
 21846  08A6  00B8               	movwf	dtoa@d+6
 21847  08A7  0021               	movlb	1	; select bank1
 21848  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21849  08A9  0020               	movlb	0	; select bank0
 21850  08AA  00B9               	movwf	dtoa@d+7
 21851  08AB  3198  20D5         	fcall	_dtoa
 21852  08AD  0020               	movlb	0	; select bank0
 21853  08AE  0831               	movf	?_dtoa+1,w
 21854  08AF  00D8               	movwf	?_vfpfcnvrt+1
 21855  08B0  0830               	movf	?_dtoa,w
 21856  08B1  00D7               	movwf	?_vfpfcnvrt
 21857  08B2  0008               	return
 21858  08B3                     l7032:	
 21859                           
 21860                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 21861  08B3  0859               	movf	vfpfcnvrt@fmt,w
 21862  08B4  0086               	movwf	6
 21863  08B5  0187               	clrf	7
 21864  08B6  3F40               	moviw [0]fsr1
 21865  08B7  00F1               	movwf	strncmp@_l
 21866  08B8  3F41               	moviw [1]fsr1
 21867  08B9  00F2               	movwf	strncmp@_l+1
 21868  08BA  30B5               	movlw	low (STR_42| (0+32768))
 21869  08BB  00F3               	movwf	strncmp@_r
 21870  08BC  30BA               	movlw	high (STR_42| (0+32768))
 21871  08BD  00F4               	movwf	strncmp@_r+1
 21872  08BE  3002               	movlw	2
 21873  08BF  00F5               	movwf	strncmp@n
 21874  08C0  3000               	movlw	0
 21875  08C1  00F6               	movwf	strncmp@n+1
 21876  08C2  31B5  25B3  3188   	fcall	_strncmp
 21877  08C5  0871               	movf	?_strncmp,w
 21878  08C6  0472               	iorwf	?_strncmp+1,w
 21879  08C7  1903               	btfsc	3,2
 21880  08C8  28E0               	goto	l7036
 21881  08C9  0020               	movlb	0	; select bank0
 21882  08CA  0859               	movf	vfpfcnvrt@fmt,w
 21883  08CB  0086               	movwf	6
 21884  08CC  0187               	clrf	7
 21885  08CD  3F40               	moviw [0]fsr1
 21886  08CE  00F1               	movwf	strncmp@_l
 21887  08CF  3F41               	moviw [1]fsr1
 21888  08D0  00F2               	movwf	strncmp@_l+1
 21889  08D1  30B8               	movlw	low (STR_46| (0+32768))
 21890  08D2  00F3               	movwf	strncmp@_r
 21891  08D3  30BA               	movlw	high (STR_46| (0+32768))
 21892  08D4  00F4               	movwf	strncmp@_r+1
 21893  08D5  3002               	movlw	2
 21894  08D6  00F5               	movwf	strncmp@n
 21895  08D7  3000               	movlw	0
 21896  08D8  00F6               	movwf	strncmp@n+1
 21897  08D9  31B5  25B3  3188   	fcall	_strncmp
 21898  08DC  0871               	movf	?_strncmp,w
 21899  08DD  0472               	iorwf	?_strncmp+1,w
 21900  08DE  1D03               	btfss	3,2
 21901  08DF  2929               	goto	l7044
 21902  08E0                     l7036:	
 21903                           
 21904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 21905  08E0  0020               	movlb	0	; select bank0
 21906  08E1  0859               	movf	vfpfcnvrt@fmt,w
 21907  08E2  0086               	movwf	6
 21908  08E3  0187               	clrf	7
 21909  08E4  3002               	movlw	2
 21910  08E5  0781               	addwf	1,f
 21911  08E6  3141               	addfsr 1,1
 21912  08E7  1803               	skipnc
 21913  08E8  0A81               	incf	1,f
 21914                           
 21915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21916  08E9  085A               	movf	vfpfcnvrt@ap,w
 21917  08EA  0086               	movwf	6
 21918  08EB  0187               	clrf	7
 21919  08EC  0801               	movf	1,w
 21920  08ED  0084               	movwf	4
 21921  08EE  0185               	clrf	5
 21922  08EF  3002               	movlw	2
 21923  08F0  0781               	addwf	1,f
 21924  08F1  3F00               	moviw [0]fsr0
 21925  08F2  0021               	movlb	1	; select bank1
 21926  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21927  08F4  3F01               	moviw [1]fsr0
 21928  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21929  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 21930  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 21931  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 21932  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 21933  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 21934  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 21935                           
 21936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 21937  08FC  0020               	movlb	0	; select bank0
 21938  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 21939  08FE  00B1               	movwf	dtoa@fp+1
 21940  08FF  0857               	movf	vfpfcnvrt@fp,w
 21941  0900  00B0               	movwf	dtoa@fp
 21942  0901  0021               	movlb	1	; select bank1
 21943  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21944  0903  0020               	movlb	0	; select bank0
 21945  0904  00B2               	movwf	dtoa@d
 21946  0905  0021               	movlb	1	; select bank1
 21947  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21948  0907  0020               	movlb	0	; select bank0
 21949  0908  00B3               	movwf	dtoa@d+1
 21950  0909  0021               	movlb	1	; select bank1
 21951  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21952  090B  0020               	movlb	0	; select bank0
 21953  090C  00B4               	movwf	dtoa@d+2
 21954  090D  0021               	movlb	1	; select bank1
 21955  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21956  090F  0020               	movlb	0	; select bank0
 21957  0910  00B5               	movwf	dtoa@d+3
 21958  0911  0021               	movlb	1	; select bank1
 21959  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21960  0913  0020               	movlb	0	; select bank0
 21961  0914  00B6               	movwf	dtoa@d+4
 21962  0915  0021               	movlb	1	; select bank1
 21963  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21964  0917  0020               	movlb	0	; select bank0
 21965  0918  00B7               	movwf	dtoa@d+5
 21966  0919  0021               	movlb	1	; select bank1
 21967  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21968  091B  0020               	movlb	0	; select bank0
 21969  091C  00B8               	movwf	dtoa@d+6
 21970  091D  0021               	movlb	1	; select bank1
 21971  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21972  091F  0020               	movlb	0	; select bank0
 21973  0920  00B9               	movwf	dtoa@d+7
 21974  0921  3198  20D5         	fcall	_dtoa
 21975  0923  0020               	movlb	0	; select bank0
 21976  0924  0831               	movf	?_dtoa+1,w
 21977  0925  00D8               	movwf	?_vfpfcnvrt+1
 21978  0926  0830               	movf	?_dtoa,w
 21979  0927  00D7               	movwf	?_vfpfcnvrt
 21980  0928  0008               	return
 21981  0929                     l7044:	
 21982                           
 21983                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 21984  0929  0020               	movlb	0	; select bank0
 21985  092A  0859               	movf	vfpfcnvrt@fmt,w
 21986  092B  0086               	movwf	6
 21987  092C  0187               	clrf	7
 21988  092D  3F40               	moviw [0]fsr1
 21989  092E  00F1               	movwf	strncmp@_l
 21990  092F  3F41               	moviw [1]fsr1
 21991  0930  00F2               	movwf	strncmp@_l+1
 21992  0931  30A6               	movlw	low (STR_51| (0+32768))
 21993  0932  00F3               	movwf	strncmp@_r
 21994  0933  30BA               	movlw	high (STR_51| (0+32768))
 21995  0934  00F4               	movwf	strncmp@_r+1
 21996  0935  3003               	movlw	3
 21997  0936  00F5               	movwf	strncmp@n
 21998  0937  3000               	movlw	0
 21999  0938  00F6               	movwf	strncmp@n+1
 22000  0939  31B5  25B3  3188   	fcall	_strncmp
 22001  093C  0871               	movf	?_strncmp,w
 22002  093D  0472               	iorwf	?_strncmp+1,w
 22003  093E  1D03               	btfss	3,2
 22004  093F  2988               	goto	l7054
 22005                           
 22006                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 22007  0940  0020               	movlb	0	; select bank0
 22008  0941  0859               	movf	vfpfcnvrt@fmt,w
 22009  0942  0086               	movwf	6
 22010  0943  0187               	clrf	7
 22011  0944  3003               	movlw	3
 22012  0945  0781               	addwf	1,f
 22013  0946  3141               	addfsr 1,1
 22014  0947  1803               	skipnc
 22015  0948  0A81               	incf	1,f
 22016                           
 22017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22018  0949  085A               	movf	vfpfcnvrt@ap,w
 22019  094A  0086               	movwf	6
 22020  094B  0187               	clrf	7
 22021  094C  0801               	movf	1,w
 22022  094D  0084               	movwf	4
 22023  094E  0185               	clrf	5
 22024  094F  3002               	movlw	2
 22025  0950  0781               	addwf	1,f
 22026  0951  0800               	movf	0,w
 22027  0952  0021               	movlb	1	; select bank1
 22028  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22029  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22030  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22031  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22032  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22033  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22034  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22035  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22036                           
 22037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 22038  095B  0020               	movlb	0	; select bank0
 22039  095C  0858               	movf	vfpfcnvrt@fp+1,w
 22040  095D  00B1               	movwf	otoa@fp+1
 22041  095E  0857               	movf	vfpfcnvrt@fp,w
 22042  095F  00B0               	movwf	otoa@fp
 22043  0960  0021               	movlb	1	; select bank1
 22044  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22045  0962  0020               	movlb	0	; select bank0
 22046  0963  00B2               	movwf	otoa@d
 22047  0964  0021               	movlb	1	; select bank1
 22048  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22049  0966  0020               	movlb	0	; select bank0
 22050  0967  00B3               	movwf	otoa@d+1
 22051  0968  0021               	movlb	1	; select bank1
 22052  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22053  096A  0020               	movlb	0	; select bank0
 22054  096B  00B4               	movwf	otoa@d+2
 22055  096C  0021               	movlb	1	; select bank1
 22056  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22057  096E  0020               	movlb	0	; select bank0
 22058  096F  00B5               	movwf	otoa@d+3
 22059  0970  0021               	movlb	1	; select bank1
 22060  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22061  0972  0020               	movlb	0	; select bank0
 22062  0973  00B6               	movwf	otoa@d+4
 22063  0974  0021               	movlb	1	; select bank1
 22064  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22065  0976  0020               	movlb	0	; select bank0
 22066  0977  00B7               	movwf	otoa@d+5
 22067  0978  0021               	movlb	1	; select bank1
 22068  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22069  097A  0020               	movlb	0	; select bank0
 22070  097B  00B8               	movwf	otoa@d+6
 22071  097C  0021               	movlb	1	; select bank1
 22072  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22073  097E  0020               	movlb	0	; select bank0
 22074  097F  00B9               	movwf	otoa@d+7
 22075  0980  31A2  22F5         	fcall	_otoa
 22076  0982  0020               	movlb	0	; select bank0
 22077  0983  0831               	movf	?_otoa+1,w
 22078  0984  00D8               	movwf	?_vfpfcnvrt+1
 22079  0985  0830               	movf	?_otoa,w
 22080  0986  00D7               	movwf	?_vfpfcnvrt
 22081  0987  0008               	return
 22082  0988                     l7054:	
 22083                           
 22084                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 22085  0988  0020               	movlb	0	; select bank0
 22086  0989  0859               	movf	vfpfcnvrt@fmt,w
 22087  098A  0086               	movwf	6
 22088  098B  0187               	clrf	7
 22089  098C  3F40               	moviw [0]fsr1
 22090  098D  00F1               	movwf	strncmp@_l
 22091  098E  3F41               	moviw [1]fsr1
 22092  098F  00F2               	movwf	strncmp@_l+1
 22093  0990  30A7               	movlw	low ((STR_51+1)| (0+32768))
 22094  0991  00F3               	movwf	strncmp@_r
 22095  0992  30BA               	movlw	high ((STR_51+1)| (0+32768))
 22096  0993  00F4               	movwf	strncmp@_r+1
 22097  0994  3002               	movlw	2
 22098  0995  00F5               	movwf	strncmp@n
 22099  0996  3000               	movlw	0
 22100  0997  00F6               	movwf	strncmp@n+1
 22101  0998  31B5  25B3  3188   	fcall	_strncmp
 22102  099B  0871               	movf	?_strncmp,w
 22103  099C  0472               	iorwf	?_strncmp+1,w
 22104  099D  1D03               	btfss	3,2
 22105  099E  29E8               	goto	l7064
 22106                           
 22107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 22108  099F  0020               	movlb	0	; select bank0
 22109  09A0  0859               	movf	vfpfcnvrt@fmt,w
 22110  09A1  0086               	movwf	6
 22111  09A2  0187               	clrf	7
 22112  09A3  3002               	movlw	2
 22113  09A4  0781               	addwf	1,f
 22114  09A5  3141               	addfsr 1,1
 22115  09A6  1803               	skipnc
 22116  09A7  0A81               	incf	1,f
 22117                           
 22118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 22119  09A8  085A               	movf	vfpfcnvrt@ap,w
 22120  09A9  0086               	movwf	6
 22121  09AA  0187               	clrf	7
 22122  09AB  0801               	movf	1,w
 22123  09AC  0084               	movwf	4
 22124  09AD  0185               	clrf	5
 22125  09AE  3002               	movlw	2
 22126  09AF  0781               	addwf	1,f
 22127  09B0  3F00               	moviw [0]fsr0
 22128  09B1  0021               	movlb	1	; select bank1
 22129  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22130  09B3  3F01               	moviw [1]fsr0
 22131  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22132  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22133  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22134  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22135  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22136  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22137  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22138                           
 22139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 22140  09BB  0020               	movlb	0	; select bank0
 22141  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 22142  09BD  00B1               	movwf	otoa@fp+1
 22143  09BE  0857               	movf	vfpfcnvrt@fp,w
 22144  09BF  00B0               	movwf	otoa@fp
 22145  09C0  0021               	movlb	1	; select bank1
 22146  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22147  09C2  0020               	movlb	0	; select bank0
 22148  09C3  00B2               	movwf	otoa@d
 22149  09C4  0021               	movlb	1	; select bank1
 22150  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22151  09C6  0020               	movlb	0	; select bank0
 22152  09C7  00B3               	movwf	otoa@d+1
 22153  09C8  0021               	movlb	1	; select bank1
 22154  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22155  09CA  0020               	movlb	0	; select bank0
 22156  09CB  00B4               	movwf	otoa@d+2
 22157  09CC  0021               	movlb	1	; select bank1
 22158  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22159  09CE  0020               	movlb	0	; select bank0
 22160  09CF  00B5               	movwf	otoa@d+3
 22161  09D0  0021               	movlb	1	; select bank1
 22162  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22163  09D2  0020               	movlb	0	; select bank0
 22164  09D3  00B6               	movwf	otoa@d+4
 22165  09D4  0021               	movlb	1	; select bank1
 22166  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22167  09D6  0020               	movlb	0	; select bank0
 22168  09D7  00B7               	movwf	otoa@d+5
 22169  09D8  0021               	movlb	1	; select bank1
 22170  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22171  09DA  0020               	movlb	0	; select bank0
 22172  09DB  00B8               	movwf	otoa@d+6
 22173  09DC  0021               	movlb	1	; select bank1
 22174  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22175  09DE  0020               	movlb	0	; select bank0
 22176  09DF  00B9               	movwf	otoa@d+7
 22177  09E0  31A2  22F5         	fcall	_otoa
 22178  09E2  0020               	movlb	0	; select bank0
 22179  09E3  0831               	movf	?_otoa+1,w
 22180  09E4  00D8               	movwf	?_vfpfcnvrt+1
 22181  09E5  0830               	movf	?_otoa,w
 22182  09E6  00D7               	movwf	?_vfpfcnvrt
 22183  09E7  0008               	return
 22184  09E8                     l7064:	
 22185                           
 22186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 22187  09E8  0020               	movlb	0	; select bank0
 22188  09E9  0859               	movf	vfpfcnvrt@fmt,w
 22189  09EA  0086               	movwf	6
 22190  09EB  0187               	clrf	7
 22191  09EC  3F40               	moviw [0]fsr1
 22192  09ED  00DB               	movwf	??_vfpfcnvrt
 22193  09EE  3F41               	moviw [1]fsr1
 22194  09EF  00DC               	movwf	??_vfpfcnvrt+1
 22195  09F0  085B               	movf	??_vfpfcnvrt,w
 22196  09F1  0084               	movwf	4
 22197  09F2  085C               	movf	??_vfpfcnvrt+1,w
 22198  09F3  0085               	movwf	5
 22199  09F4  0012               	moviw fsr0++
 22200  09F5  3A6F               	xorlw	111
 22201  09F6  1D03               	btfss	3,2
 22202  09F7  2A40               	goto	l7074
 22203                           
 22204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 22205  09F8  0859               	movf	vfpfcnvrt@fmt,w
 22206  09F9  0086               	movwf	6
 22207  09FA  0187               	clrf	7
 22208  09FB  3001               	movlw	1
 22209  09FC  0781               	addwf	1,f
 22210  09FD  3141               	addfsr 1,1
 22211  09FE  1803               	skipnc
 22212  09FF  0A81               	incf	1,f
 22213                           
 22214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 22215  0A00  085A               	movf	vfpfcnvrt@ap,w
 22216  0A01  0086               	movwf	6
 22217  0A02  0187               	clrf	7
 22218  0A03  0801               	movf	1,w
 22219  0A04  0084               	movwf	4
 22220  0A05  0185               	clrf	5
 22221  0A06  3002               	movlw	2
 22222  0A07  0781               	addwf	1,f
 22223  0A08  3F00               	moviw [0]fsr0
 22224  0A09  0021               	movlb	1	; select bank1
 22225  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22226  0A0B  3F01               	moviw [1]fsr0
 22227  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22228  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22229  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22230  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22231  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22232  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22233  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22234                           
 22235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 22236  0A13  0020               	movlb	0	; select bank0
 22237  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 22238  0A15  00B1               	movwf	otoa@fp+1
 22239  0A16  0857               	movf	vfpfcnvrt@fp,w
 22240  0A17  00B0               	movwf	otoa@fp
 22241  0A18  0021               	movlb	1	; select bank1
 22242  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22243  0A1A  0020               	movlb	0	; select bank0
 22244  0A1B  00B2               	movwf	otoa@d
 22245  0A1C  0021               	movlb	1	; select bank1
 22246  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22247  0A1E  0020               	movlb	0	; select bank0
 22248  0A1F  00B3               	movwf	otoa@d+1
 22249  0A20  0021               	movlb	1	; select bank1
 22250  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22251  0A22  0020               	movlb	0	; select bank0
 22252  0A23  00B4               	movwf	otoa@d+2
 22253  0A24  0021               	movlb	1	; select bank1
 22254  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22255  0A26  0020               	movlb	0	; select bank0
 22256  0A27  00B5               	movwf	otoa@d+3
 22257  0A28  0021               	movlb	1	; select bank1
 22258  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22259  0A2A  0020               	movlb	0	; select bank0
 22260  0A2B  00B6               	movwf	otoa@d+4
 22261  0A2C  0021               	movlb	1	; select bank1
 22262  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22263  0A2E  0020               	movlb	0	; select bank0
 22264  0A2F  00B7               	movwf	otoa@d+5
 22265  0A30  0021               	movlb	1	; select bank1
 22266  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22267  0A32  0020               	movlb	0	; select bank0
 22268  0A33  00B8               	movwf	otoa@d+6
 22269  0A34  0021               	movlb	1	; select bank1
 22270  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22271  0A36  0020               	movlb	0	; select bank0
 22272  0A37  00B9               	movwf	otoa@d+7
 22273  0A38  31A2  22F5         	fcall	_otoa
 22274  0A3A  0020               	movlb	0	; select bank0
 22275  0A3B  0831               	movf	?_otoa+1,w
 22276  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 22277  0A3D  0830               	movf	?_otoa,w
 22278  0A3E  00D7               	movwf	?_vfpfcnvrt
 22279  0A3F  0008               	return
 22280  0A40                     l7074:	
 22281                           
 22282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 22283  0A40  0859               	movf	vfpfcnvrt@fmt,w
 22284  0A41  0086               	movwf	6
 22285  0A42  0187               	clrf	7
 22286  0A43  3F40               	moviw [0]fsr1
 22287  0A44  00F1               	movwf	strncmp@_l
 22288  0A45  3F41               	moviw [1]fsr1
 22289  0A46  00F2               	movwf	strncmp@_l+1
 22290  0A47  30BE               	movlw	low (STR_61| (0+32768))
 22291  0A48  00F3               	movwf	strncmp@_r
 22292  0A49  30BA               	movlw	high (STR_61| (0+32768))
 22293  0A4A  00F4               	movwf	strncmp@_r+1
 22294  0A4B  3002               	movlw	2
 22295  0A4C  00F5               	movwf	strncmp@n
 22296  0A4D  3000               	movlw	0
 22297  0A4E  00F6               	movwf	strncmp@n+1
 22298  0A4F  31B5  25B3  3188   	fcall	_strncmp
 22299  0A52  0871               	movf	?_strncmp,w
 22300  0A53  0472               	iorwf	?_strncmp+1,w
 22301  0A54  1D03               	btfss	3,2
 22302  0A55  2A9F               	goto	l7084
 22303                           
 22304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 22305  0A56  0020               	movlb	0	; select bank0
 22306  0A57  0859               	movf	vfpfcnvrt@fmt,w
 22307  0A58  0086               	movwf	6
 22308  0A59  0187               	clrf	7
 22309  0A5A  3002               	movlw	2
 22310  0A5B  0781               	addwf	1,f
 22311  0A5C  3141               	addfsr 1,1
 22312  0A5D  1803               	skipnc
 22313  0A5E  0A81               	incf	1,f
 22314                           
 22315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22316  0A5F  085A               	movf	vfpfcnvrt@ap,w
 22317  0A60  0086               	movwf	6
 22318  0A61  0187               	clrf	7
 22319  0A62  0801               	movf	1,w
 22320  0A63  0084               	movwf	4
 22321  0A64  0185               	clrf	5
 22322  0A65  3002               	movlw	2
 22323  0A66  0781               	addwf	1,f
 22324  0A67  3F00               	moviw [0]fsr0
 22325  0A68  0021               	movlb	1	; select bank1
 22326  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22327  0A6A  3F01               	moviw [1]fsr0
 22328  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22329  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22330  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22331  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22332  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22333  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22334  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22335                           
 22336                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 22337  0A72  0020               	movlb	0	; select bank0
 22338  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 22339  0A74  00B1               	movwf	otoa@fp+1
 22340  0A75  0857               	movf	vfpfcnvrt@fp,w
 22341  0A76  00B0               	movwf	otoa@fp
 22342  0A77  0021               	movlb	1	; select bank1
 22343  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22344  0A79  0020               	movlb	0	; select bank0
 22345  0A7A  00B2               	movwf	otoa@d
 22346  0A7B  0021               	movlb	1	; select bank1
 22347  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22348  0A7D  0020               	movlb	0	; select bank0
 22349  0A7E  00B3               	movwf	otoa@d+1
 22350  0A7F  0021               	movlb	1	; select bank1
 22351  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22352  0A81  0020               	movlb	0	; select bank0
 22353  0A82  00B4               	movwf	otoa@d+2
 22354  0A83  0021               	movlb	1	; select bank1
 22355  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22356  0A85  0020               	movlb	0	; select bank0
 22357  0A86  00B5               	movwf	otoa@d+3
 22358  0A87  0021               	movlb	1	; select bank1
 22359  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22360  0A89  0020               	movlb	0	; select bank0
 22361  0A8A  00B6               	movwf	otoa@d+4
 22362  0A8B  0021               	movlb	1	; select bank1
 22363  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22364  0A8D  0020               	movlb	0	; select bank0
 22365  0A8E  00B7               	movwf	otoa@d+5
 22366  0A8F  0021               	movlb	1	; select bank1
 22367  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22368  0A91  0020               	movlb	0	; select bank0
 22369  0A92  00B8               	movwf	otoa@d+6
 22370  0A93  0021               	movlb	1	; select bank1
 22371  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22372  0A95  0020               	movlb	0	; select bank0
 22373  0A96  00B9               	movwf	otoa@d+7
 22374  0A97  31A2  22F5         	fcall	_otoa
 22375  0A99  0020               	movlb	0	; select bank0
 22376  0A9A  0831               	movf	?_otoa+1,w
 22377  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 22378  0A9C  0830               	movf	?_otoa,w
 22379  0A9D  00D7               	movwf	?_vfpfcnvrt
 22380  0A9E  0008               	return
 22381  0A9F                     l7084:	
 22382                           
 22383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 22384  0A9F  0020               	movlb	0	; select bank0
 22385  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 22386  0AA1  0086               	movwf	6
 22387  0AA2  0187               	clrf	7
 22388  0AA3  3F40               	moviw [0]fsr1
 22389  0AA4  00F1               	movwf	strncmp@_l
 22390  0AA5  3F41               	moviw [1]fsr1
 22391  0AA6  00F2               	movwf	strncmp@_l+1
 22392  0AA7  30A2               	movlw	low (STR_66| (0+32768))
 22393  0AA8  00F3               	movwf	strncmp@_r
 22394  0AA9  30BA               	movlw	high (STR_66| (0+32768))
 22395  0AAA  00F4               	movwf	strncmp@_r+1
 22396  0AAB  3003               	movlw	3
 22397  0AAC  00F5               	movwf	strncmp@n
 22398  0AAD  3000               	movlw	0
 22399  0AAE  00F6               	movwf	strncmp@n+1
 22400  0AAF  31B5  25B3  3188   	fcall	_strncmp
 22401  0AB2  0871               	movf	?_strncmp,w
 22402  0AB3  0472               	iorwf	?_strncmp+1,w
 22403  0AB4  1D03               	btfss	3,2
 22404  0AB5  2B36               	goto	l7096
 22405                           
 22406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 22407  0AB6  0020               	movlb	0	; select bank0
 22408  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 22409  0AB8  0086               	movwf	6
 22410  0AB9  0187               	clrf	7
 22411  0ABA  3003               	movlw	3
 22412  0ABB  0781               	addwf	1,f
 22413  0ABC  3141               	addfsr 1,1
 22414  0ABD  1803               	skipnc
 22415  0ABE  0A81               	incf	1,f
 22416                           
 22417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22418  0ABF  085A               	movf	vfpfcnvrt@ap,w
 22419  0AC0  0086               	movwf	6
 22420  0AC1  0187               	clrf	7
 22421  0AC2  0801               	movf	1,w
 22422  0AC3  0084               	movwf	4
 22423  0AC4  0185               	clrf	5
 22424  0AC5  3002               	movlw	2
 22425  0AC6  0781               	addwf	1,f
 22426  0AC7  3F00               	moviw [0]fsr0
 22427  0AC8  0021               	movlb	1	; select bank1
 22428  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22429  0ACA  3F01               	moviw [1]fsr0
 22430  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22431                           
 22432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 22433  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22434  0ACD  0086               	movwf	6
 22435  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22436  0ACF  0087               	movwf	7
 22437  0AD0  0023               	movlb	3	; select bank3
 22438  0AD1  0840               	movf	_nout^(0+384),w
 22439  0AD2  0081               	movwf	1
 22440  0AD3  2B32               	goto	l7092
 22441  0AD4                     l7098:	
 22442                           
 22443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 22444  0AD4  0020               	movlb	0	; select bank0
 22445  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 22446  0AD6  0086               	movwf	6
 22447  0AD7  0187               	clrf	7
 22448  0AD8  3002               	movlw	2
 22449  0AD9  0781               	addwf	1,f
 22450  0ADA  3141               	addfsr 1,1
 22451  0ADB  1803               	skipnc
 22452  0ADC  0A81               	incf	1,f
 22453                           
 22454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 22455  0ADD  085A               	movf	vfpfcnvrt@ap,w
 22456  0ADE  0086               	movwf	6
 22457  0ADF  0187               	clrf	7
 22458  0AE0  0801               	movf	1,w
 22459  0AE1  0084               	movwf	4
 22460  0AE2  0185               	clrf	5
 22461  0AE3  3002               	movlw	2
 22462  0AE4  0781               	addwf	1,f
 22463  0AE5  3F00               	moviw [0]fsr0
 22464  0AE6  0021               	movlb	1	; select bank1
 22465  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22466  0AE8  3F01               	moviw [1]fsr0
 22467  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22468                           
 22469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 22470  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22471  0AEB  0086               	movwf	6
 22472  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22473  0AED  0087               	movwf	7
 22474  0AEE  0023               	movlb	3	; select bank3
 22475  0AEF  0840               	movf	_nout^(0+384),w
 22476  0AF0  3FC0               	movwi [0]fsr1
 22477  0AF1  0841               	movf	(_nout+1)^(0+384),w
 22478  0AF2  3FC1               	movwi [1]fsr1
 22479  0AF3  2B32               	goto	l7092
 22480  0AF4                     l7110:	
 22481                           
 22482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 22483  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 22484  0AF5  0086               	movwf	6
 22485  0AF6  0187               	clrf	7
 22486  0AF7  3001               	movlw	1
 22487  0AF8  0781               	addwf	1,f
 22488  0AF9  3141               	addfsr 1,1
 22489  0AFA  1803               	skipnc
 22490  0AFB  0A81               	incf	1,f
 22491                           
 22492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 22493  0AFC  085A               	movf	vfpfcnvrt@ap,w
 22494  0AFD  0086               	movwf	6
 22495  0AFE  0187               	clrf	7
 22496  0AFF  0801               	movf	1,w
 22497  0B00  0084               	movwf	4
 22498  0B01  0185               	clrf	5
 22499  0B02  3002               	movlw	2
 22500  0B03  0781               	addwf	1,f
 22501  0B04  3F00               	moviw [0]fsr0
 22502  0B05  0021               	movlb	1	; select bank1
 22503  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22504  0B07  3F01               	moviw [1]fsr0
 22505  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22506                           
 22507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 22508  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22509  0B0A  0086               	movwf	6
 22510  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22511  0B0C  0087               	movwf	7
 22512  0B0D  0023               	movlb	3	; select bank3
 22513  0B0E  0840               	movf	_nout^(0+384),w
 22514  0B0F  3FC0               	movwi [0]fsr1
 22515  0B10  0841               	movf	(_nout+1)^(0+384),w
 22516  0B11  3FC1               	movwi [1]fsr1
 22517  0B12  2B32               	goto	l7092
 22518  0B13                     l7122:	
 22519                           
 22520                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 22521  0B13  0020               	movlb	0	; select bank0
 22522  0B14  0859               	movf	vfpfcnvrt@fmt,w
 22523  0B15  0086               	movwf	6
 22524  0B16  0187               	clrf	7
 22525  0B17  3002               	movlw	2
 22526  0B18  0781               	addwf	1,f
 22527  0B19  3141               	addfsr 1,1
 22528  0B1A  1803               	skipnc
 22529  0B1B  0A81               	incf	1,f
 22530                           
 22531                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 22532  0B1C  085A               	movf	vfpfcnvrt@ap,w
 22533  0B1D  0086               	movwf	6
 22534  0B1E  0187               	clrf	7
 22535  0B1F  0801               	movf	1,w
 22536  0B20  0084               	movwf	4
 22537  0B21  0185               	clrf	5
 22538  0B22  3002               	movlw	2
 22539  0B23  0781               	addwf	1,f
 22540  0B24  3F00               	moviw [0]fsr0
 22541  0B25  0021               	movlb	1	; select bank1
 22542  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22543  0B27  3F01               	moviw [1]fsr0
 22544  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22545                           
 22546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 22547  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22548  0B2A  0086               	movwf	6
 22549  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22550  0B2C  0087               	movwf	7
 22551  0B2D  0023               	movlb	3	; select bank3
 22552  0B2E  0840               	movf	_nout^(0+384),w
 22553  0B2F  3FC0               	movwi [0]fsr1
 22554  0B30  0841               	movf	(_nout+1)^(0+384),w
 22555  0B31  3FC1               	movwi [1]fsr1
 22556  0B32                     l7092:	
 22557                           
 22558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 22559  0B32  0020               	movlb	0	; select bank0
 22560  0B33  01D7               	clrf	?_vfpfcnvrt
 22561  0B34  01D8               	clrf	?_vfpfcnvrt+1
 22562  0B35  0008               	return
 22563  0B36                     l7096:	
 22564                           
 22565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 22566  0B36  0020               	movlb	0	; select bank0
 22567  0B37  0859               	movf	vfpfcnvrt@fmt,w
 22568  0B38  0086               	movwf	6
 22569  0B39  0187               	clrf	7
 22570  0B3A  3F40               	moviw [0]fsr1
 22571  0B3B  00F1               	movwf	strncmp@_l
 22572  0B3C  3F41               	moviw [1]fsr1
 22573  0B3D  00F2               	movwf	strncmp@_l+1
 22574  0B3E  30A3               	movlw	low ((STR_66+1)| (0+32768))
 22575  0B3F  00F3               	movwf	strncmp@_r
 22576  0B40  30BA               	movlw	high ((STR_66+1)| (0+32768))
 22577  0B41  00F4               	movwf	strncmp@_r+1
 22578  0B42  3002               	movlw	2
 22579  0B43  00F5               	movwf	strncmp@n
 22580  0B44  3000               	movlw	0
 22581  0B45  00F6               	movwf	strncmp@n+1
 22582  0B46  31B5  25B3  3188   	fcall	_strncmp
 22583  0B49  0871               	movf	?_strncmp,w
 22584  0B4A  0472               	iorwf	?_strncmp+1,w
 22585  0B4B  1903               	btfsc	3,2
 22586  0B4C  2AD4               	goto	l7098
 22587                           
 22588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 22589  0B4D  0020               	movlb	0	; select bank0
 22590  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 22591  0B4F  0086               	movwf	6
 22592  0B50  0187               	clrf	7
 22593  0B51  3F40               	moviw [0]fsr1
 22594  0B52  00DB               	movwf	??_vfpfcnvrt
 22595  0B53  3F41               	moviw [1]fsr1
 22596  0B54  00DC               	movwf	??_vfpfcnvrt+1
 22597  0B55  085B               	movf	??_vfpfcnvrt,w
 22598  0B56  0084               	movwf	4
 22599  0B57  085C               	movf	??_vfpfcnvrt+1,w
 22600  0B58  0085               	movwf	5
 22601  0B59  0012               	moviw fsr0++
 22602  0B5A  3A6E               	xorlw	110
 22603  0B5B  1903               	btfsc	3,2
 22604  0B5C  2AF4               	goto	l7110
 22605                           
 22606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 22607  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 22608  0B5E  0086               	movwf	6
 22609  0B5F  0187               	clrf	7
 22610  0B60  3F40               	moviw [0]fsr1
 22611  0B61  00F1               	movwf	strncmp@_l
 22612  0B62  3F41               	moviw [1]fsr1
 22613  0B63  00F2               	movwf	strncmp@_l+1
 22614  0B64  30BB               	movlw	low (STR_76| (0+32768))
 22615  0B65  00F3               	movwf	strncmp@_r
 22616  0B66  30BA               	movlw	high (STR_76| (0+32768))
 22617  0B67  00F4               	movwf	strncmp@_r+1
 22618  0B68  3002               	movlw	2
 22619  0B69  00F5               	movwf	strncmp@n
 22620  0B6A  3000               	movlw	0
 22621  0B6B  00F6               	movwf	strncmp@n+1
 22622  0B6C  31B5  25B3  3188   	fcall	_strncmp
 22623  0B6F  0871               	movf	?_strncmp,w
 22624  0B70  0472               	iorwf	?_strncmp+1,w
 22625  0B71  1903               	btfsc	3,2
 22626  0B72  2B13               	goto	l7122
 22627                           
 22628                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 22629  0B73  0020               	movlb	0	; select bank0
 22630  0B74  0859               	movf	vfpfcnvrt@fmt,w
 22631  0B75  0086               	movwf	6
 22632  0B76  0187               	clrf	7
 22633  0B77  3F40               	moviw [0]fsr1
 22634  0B78  00DB               	movwf	??_vfpfcnvrt
 22635  0B79  3F41               	moviw [1]fsr1
 22636  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 22637  0B7B  085B               	movf	??_vfpfcnvrt,w
 22638  0B7C  0084               	movwf	4
 22639  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 22640  0B7E  0085               	movwf	5
 22641  0B7F  0012               	moviw fsr0++
 22642  0B80  3A70               	xorlw	112
 22643  0B81  1D03               	btfss	3,2
 22644  0B82  2BCF               	goto	l7142
 22645                           
 22646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 22647  0B83  0859               	movf	vfpfcnvrt@fmt,w
 22648  0B84  0086               	movwf	6
 22649  0B85  0187               	clrf	7
 22650  0B86  3001               	movlw	1
 22651  0B87  0781               	addwf	1,f
 22652  0B88  3141               	addfsr 1,1
 22653  0B89  1803               	skipnc
 22654  0B8A  0A81               	incf	1,f
 22655                           
 22656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 22657  0B8B  085A               	movf	vfpfcnvrt@ap,w
 22658  0B8C  0086               	movwf	6
 22659  0B8D  0187               	clrf	7
 22660  0B8E  0801               	movf	1,w
 22661  0B8F  0084               	movwf	4
 22662  0B90  0185               	clrf	5
 22663  0B91  3002               	movlw	2
 22664  0B92  0781               	addwf	1,f
 22665  0B93  3F00               	moviw [0]fsr0
 22666  0B94  0021               	movlb	1	; select bank1
 22667  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22668  0B96  3F01               	moviw [1]fsr0
 22669  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22670  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22671  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22672  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22673  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22674  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22675  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22676                           
 22677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 22678  0B9E  0020               	movlb	0	; select bank0
 22679  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 22680  0BA0  00B1               	movwf	xtoa@fp+1
 22681  0BA1  0857               	movf	vfpfcnvrt@fp,w
 22682  0BA2  00B0               	movwf	xtoa@fp
 22683  0BA3  0021               	movlb	1	; select bank1
 22684  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22685  0BA5  0020               	movlb	0	; select bank0
 22686  0BA6  00B2               	movwf	xtoa@d
 22687  0BA7  0021               	movlb	1	; select bank1
 22688  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22689  0BA9  0020               	movlb	0	; select bank0
 22690  0BAA  00B3               	movwf	xtoa@d+1
 22691  0BAB  0021               	movlb	1	; select bank1
 22692  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22693  0BAD  0020               	movlb	0	; select bank0
 22694  0BAE  00B4               	movwf	xtoa@d+2
 22695  0BAF  0021               	movlb	1	; select bank1
 22696  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22697  0BB1  0020               	movlb	0	; select bank0
 22698  0BB2  00B5               	movwf	xtoa@d+3
 22699  0BB3  0021               	movlb	1	; select bank1
 22700  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22701  0BB5  0020               	movlb	0	; select bank0
 22702  0BB6  00B6               	movwf	xtoa@d+4
 22703  0BB7  0021               	movlb	1	; select bank1
 22704  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22705  0BB9  0020               	movlb	0	; select bank0
 22706  0BBA  00B7               	movwf	xtoa@d+5
 22707  0BBB  0021               	movlb	1	; select bank1
 22708  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22709  0BBD  0020               	movlb	0	; select bank0
 22710  0BBE  00B8               	movwf	xtoa@d+6
 22711  0BBF  0021               	movlb	1	; select bank1
 22712  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22713  0BC1  0020               	movlb	0	; select bank0
 22714  0BC2  00B9               	movwf	xtoa@d+7
 22715  0BC3  3078               	movlw	120
 22716  0BC4  00DB               	movwf	??_vfpfcnvrt
 22717  0BC5  085B               	movf	??_vfpfcnvrt,w
 22718  0BC6  00BA               	movwf	xtoa@x
 22719  0BC7  319A  2228         	fcall	_xtoa
 22720  0BC9  0020               	movlb	0	; select bank0
 22721  0BCA  0831               	movf	?_xtoa+1,w
 22722  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 22723  0BCC  0830               	movf	?_xtoa,w
 22724  0BCD  00D7               	movwf	?_vfpfcnvrt
 22725  0BCE  0008               	return
 22726  0BCF                     l7142:	
 22727                           
 22728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 22729  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 22730  0BD0  0086               	movwf	6
 22731  0BD1  0187               	clrf	7
 22732  0BD2  3F40               	moviw [0]fsr1
 22733  0BD3  00DB               	movwf	??_vfpfcnvrt
 22734  0BD4  3F41               	moviw [1]fsr1
 22735  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 22736  0BD6  085B               	movf	??_vfpfcnvrt,w
 22737  0BD7  0084               	movwf	4
 22738  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 22739  0BD9  0085               	movwf	5
 22740  0BDA  0012               	moviw fsr0++
 22741  0BDB  3A73               	xorlw	115
 22742  0BDC  1D03               	btfss	3,2
 22743  0BDD  2C08               	goto	l7152
 22744                           
 22745                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 22746  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 22747  0BDF  0086               	movwf	6
 22748  0BE0  0187               	clrf	7
 22749  0BE1  3001               	movlw	1
 22750  0BE2  0781               	addwf	1,f
 22751  0BE3  3141               	addfsr 1,1
 22752  0BE4  1803               	skipnc
 22753  0BE5  0A81               	incf	1,f
 22754                           
 22755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22756  0BE6  085A               	movf	vfpfcnvrt@ap,w
 22757  0BE7  0086               	movwf	6
 22758  0BE8  0187               	clrf	7
 22759  0BE9  0801               	movf	1,w
 22760  0BEA  0084               	movwf	4
 22761  0BEB  0185               	clrf	5
 22762  0BEC  3002               	movlw	2
 22763  0BED  0781               	addwf	1,f
 22764  0BEE  3F00               	moviw [0]fsr0
 22765  0BEF  0021               	movlb	1	; select bank1
 22766  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 22767  0BF1  3F01               	moviw [1]fsr0
 22768  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 22769                           
 22770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 22771  0BF3  0020               	movlb	0	; select bank0
 22772  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 22773  0BF5  00A1               	movwf	stoa@fp+1
 22774  0BF6  0857               	movf	vfpfcnvrt@fp,w
 22775  0BF7  00A0               	movwf	stoa@fp
 22776  0BF8  0021               	movlb	1	; select bank1
 22777  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 22778  0BFA  0020               	movlb	0	; select bank0
 22779  0BFB  00A3               	movwf	stoa@s+1
 22780  0BFC  0021               	movlb	1	; select bank1
 22781  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 22782  0BFE  0020               	movlb	0	; select bank0
 22783  0BFF  00A2               	movwf	stoa@s
 22784  0C00  31AD  2599         	fcall	_stoa
 22785  0C02  0020               	movlb	0	; select bank0
 22786  0C03  0821               	movf	?_stoa+1,w
 22787  0C04  00D8               	movwf	?_vfpfcnvrt+1
 22788  0C05  0820               	movf	?_stoa,w
 22789  0C06  00D7               	movwf	?_vfpfcnvrt
 22790  0C07  0008               	return
 22791  0C08                     l7152:	
 22792                           
 22793                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 22794  0C08  0859               	movf	vfpfcnvrt@fmt,w
 22795  0C09  0086               	movwf	6
 22796  0C0A  0187               	clrf	7
 22797  0C0B  3F40               	moviw [0]fsr1
 22798  0C0C  00F1               	movwf	strncmp@_l
 22799  0C0D  3F41               	moviw [1]fsr1
 22800  0C0E  00F2               	movwf	strncmp@_l+1
 22801  0C0F  30AA               	movlw	low (STR_81| (0+32768))
 22802  0C10  00F3               	movwf	strncmp@_r
 22803  0C11  30BA               	movlw	high (STR_81| (0+32768))
 22804  0C12  00F4               	movwf	strncmp@_r+1
 22805  0C13  3003               	movlw	3
 22806  0C14  00F5               	movwf	strncmp@n
 22807  0C15  3000               	movlw	0
 22808  0C16  00F6               	movwf	strncmp@n+1
 22809  0C17  31B5  25B3  3188   	fcall	_strncmp
 22810  0C1A  0871               	movf	?_strncmp,w
 22811  0C1B  0472               	iorwf	?_strncmp+1,w
 22812  0C1C  1D03               	btfss	3,2
 22813  0C1D  2C66               	goto	l7162
 22814                           
 22815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 22816  0C1E  0020               	movlb	0	; select bank0
 22817  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 22818  0C20  0086               	movwf	6
 22819  0C21  0187               	clrf	7
 22820  0C22  3003               	movlw	3
 22821  0C23  0781               	addwf	1,f
 22822  0C24  3141               	addfsr 1,1
 22823  0C25  1803               	skipnc
 22824  0C26  0A81               	incf	1,f
 22825                           
 22826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22827  0C27  085A               	movf	vfpfcnvrt@ap,w
 22828  0C28  0086               	movwf	6
 22829  0C29  0187               	clrf	7
 22830  0C2A  0801               	movf	1,w
 22831  0C2B  0084               	movwf	4
 22832  0C2C  0185               	clrf	5
 22833  0C2D  3002               	movlw	2
 22834  0C2E  0781               	addwf	1,f
 22835  0C2F  0800               	movf	0,w
 22836  0C30  0021               	movlb	1	; select bank1
 22837  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22838  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22839  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22840  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22841  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22842  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22843  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22844  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22845                           
 22846                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 22847  0C39  0020               	movlb	0	; select bank0
 22848  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 22849  0C3B  00B1               	movwf	utoa@fp+1
 22850  0C3C  0857               	movf	vfpfcnvrt@fp,w
 22851  0C3D  00B0               	movwf	utoa@fp
 22852  0C3E  0021               	movlb	1	; select bank1
 22853  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22854  0C40  0020               	movlb	0	; select bank0
 22855  0C41  00B2               	movwf	utoa@d
 22856  0C42  0021               	movlb	1	; select bank1
 22857  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22858  0C44  0020               	movlb	0	; select bank0
 22859  0C45  00B3               	movwf	utoa@d+1
 22860  0C46  0021               	movlb	1	; select bank1
 22861  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22862  0C48  0020               	movlb	0	; select bank0
 22863  0C49  00B4               	movwf	utoa@d+2
 22864  0C4A  0021               	movlb	1	; select bank1
 22865  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22866  0C4C  0020               	movlb	0	; select bank0
 22867  0C4D  00B5               	movwf	utoa@d+3
 22868  0C4E  0021               	movlb	1	; select bank1
 22869  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22870  0C50  0020               	movlb	0	; select bank0
 22871  0C51  00B6               	movwf	utoa@d+4
 22872  0C52  0021               	movlb	1	; select bank1
 22873  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22874  0C54  0020               	movlb	0	; select bank0
 22875  0C55  00B7               	movwf	utoa@d+5
 22876  0C56  0021               	movlb	1	; select bank1
 22877  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22878  0C58  0020               	movlb	0	; select bank0
 22879  0C59  00B8               	movwf	utoa@d+6
 22880  0C5A  0021               	movlb	1	; select bank1
 22881  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22882  0C5C  0020               	movlb	0	; select bank0
 22883  0C5D  00B9               	movwf	utoa@d+7
 22884  0C5E  31A2  2214         	fcall	_utoa
 22885  0C60  0020               	movlb	0	; select bank0
 22886  0C61  0831               	movf	?_utoa+1,w
 22887  0C62  00D8               	movwf	?_vfpfcnvrt+1
 22888  0C63  0830               	movf	?_utoa,w
 22889  0C64  00D7               	movwf	?_vfpfcnvrt
 22890  0C65  0008               	return
 22891  0C66                     l7162:	
 22892                           
 22893                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 22894  0C66  0020               	movlb	0	; select bank0
 22895  0C67  0859               	movf	vfpfcnvrt@fmt,w
 22896  0C68  0086               	movwf	6
 22897  0C69  0187               	clrf	7
 22898  0C6A  3F40               	moviw [0]fsr1
 22899  0C6B  00F1               	movwf	strncmp@_l
 22900  0C6C  3F41               	moviw [1]fsr1
 22901  0C6D  00F2               	movwf	strncmp@_l+1
 22902  0C6E  30AB               	movlw	low ((STR_81+1)| (0+32768))
 22903  0C6F  00F3               	movwf	strncmp@_r
 22904  0C70  30BA               	movlw	high ((STR_81+1)| (0+32768))
 22905  0C71  00F4               	movwf	strncmp@_r+1
 22906  0C72  3002               	movlw	2
 22907  0C73  00F5               	movwf	strncmp@n
 22908  0C74  3000               	movlw	0
 22909  0C75  00F6               	movwf	strncmp@n+1
 22910  0C76  31B5  25B3  3188   	fcall	_strncmp
 22911  0C79  0871               	movf	?_strncmp,w
 22912  0C7A  0472               	iorwf	?_strncmp+1,w
 22913  0C7B  1D03               	btfss	3,2
 22914  0C7C  2CC6               	goto	l7172
 22915                           
 22916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 22917  0C7D  0020               	movlb	0	; select bank0
 22918  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 22919  0C7F  0086               	movwf	6
 22920  0C80  0187               	clrf	7
 22921  0C81  3002               	movlw	2
 22922  0C82  0781               	addwf	1,f
 22923  0C83  3141               	addfsr 1,1
 22924  0C84  1803               	skipnc
 22925  0C85  0A81               	incf	1,f
 22926                           
 22927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22928  0C86  085A               	movf	vfpfcnvrt@ap,w
 22929  0C87  0086               	movwf	6
 22930  0C88  0187               	clrf	7
 22931  0C89  0801               	movf	1,w
 22932  0C8A  0084               	movwf	4
 22933  0C8B  0185               	clrf	5
 22934  0C8C  3002               	movlw	2
 22935  0C8D  0781               	addwf	1,f
 22936  0C8E  3F00               	moviw [0]fsr0
 22937  0C8F  0021               	movlb	1	; select bank1
 22938  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22939  0C91  3F01               	moviw [1]fsr0
 22940  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22941  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22942  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22943  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22944  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22945  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22946  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22947                           
 22948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 22949  0C99  0020               	movlb	0	; select bank0
 22950  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 22951  0C9B  00B1               	movwf	utoa@fp+1
 22952  0C9C  0857               	movf	vfpfcnvrt@fp,w
 22953  0C9D  00B0               	movwf	utoa@fp
 22954  0C9E  0021               	movlb	1	; select bank1
 22955  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22956  0CA0  0020               	movlb	0	; select bank0
 22957  0CA1  00B2               	movwf	utoa@d
 22958  0CA2  0021               	movlb	1	; select bank1
 22959  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22960  0CA4  0020               	movlb	0	; select bank0
 22961  0CA5  00B3               	movwf	utoa@d+1
 22962  0CA6  0021               	movlb	1	; select bank1
 22963  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22964  0CA8  0020               	movlb	0	; select bank0
 22965  0CA9  00B4               	movwf	utoa@d+2
 22966  0CAA  0021               	movlb	1	; select bank1
 22967  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22968  0CAC  0020               	movlb	0	; select bank0
 22969  0CAD  00B5               	movwf	utoa@d+3
 22970  0CAE  0021               	movlb	1	; select bank1
 22971  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22972  0CB0  0020               	movlb	0	; select bank0
 22973  0CB1  00B6               	movwf	utoa@d+4
 22974  0CB2  0021               	movlb	1	; select bank1
 22975  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22976  0CB4  0020               	movlb	0	; select bank0
 22977  0CB5  00B7               	movwf	utoa@d+5
 22978  0CB6  0021               	movlb	1	; select bank1
 22979  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22980  0CB8  0020               	movlb	0	; select bank0
 22981  0CB9  00B8               	movwf	utoa@d+6
 22982  0CBA  0021               	movlb	1	; select bank1
 22983  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22984  0CBC  0020               	movlb	0	; select bank0
 22985  0CBD  00B9               	movwf	utoa@d+7
 22986  0CBE  31A2  2214         	fcall	_utoa
 22987  0CC0  0020               	movlb	0	; select bank0
 22988  0CC1  0831               	movf	?_utoa+1,w
 22989  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 22990  0CC3  0830               	movf	?_utoa,w
 22991  0CC4  00D7               	movwf	?_vfpfcnvrt
 22992  0CC5  0008               	return
 22993  0CC6                     l7172:	
 22994                           
 22995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 22996  0CC6  0020               	movlb	0	; select bank0
 22997  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 22998  0CC8  0086               	movwf	6
 22999  0CC9  0187               	clrf	7
 23000  0CCA  3F40               	moviw [0]fsr1
 23001  0CCB  00DB               	movwf	??_vfpfcnvrt
 23002  0CCC  3F41               	moviw [1]fsr1
 23003  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 23004  0CCE  085B               	movf	??_vfpfcnvrt,w
 23005  0CCF  0084               	movwf	4
 23006  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 23007  0CD1  0085               	movwf	5
 23008  0CD2  0012               	moviw fsr0++
 23009  0CD3  3A75               	xorlw	117
 23010  0CD4  1D03               	btfss	3,2
 23011  0CD5  2D1E               	goto	l7182
 23012                           
 23013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 23014  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 23015  0CD7  0086               	movwf	6
 23016  0CD8  0187               	clrf	7
 23017  0CD9  3001               	movlw	1
 23018  0CDA  0781               	addwf	1,f
 23019  0CDB  3141               	addfsr 1,1
 23020  0CDC  1803               	skipnc
 23021  0CDD  0A81               	incf	1,f
 23022                           
 23023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 23024  0CDE  085A               	movf	vfpfcnvrt@ap,w
 23025  0CDF  0086               	movwf	6
 23026  0CE0  0187               	clrf	7
 23027  0CE1  0801               	movf	1,w
 23028  0CE2  0084               	movwf	4
 23029  0CE3  0185               	clrf	5
 23030  0CE4  3002               	movlw	2
 23031  0CE5  0781               	addwf	1,f
 23032  0CE6  3F00               	moviw [0]fsr0
 23033  0CE7  0021               	movlb	1	; select bank1
 23034  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23035  0CE9  3F01               	moviw [1]fsr0
 23036  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23037  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23038  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23039  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23040  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23041  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23042  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23043                           
 23044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 23045  0CF1  0020               	movlb	0	; select bank0
 23046  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 23047  0CF3  00B1               	movwf	utoa@fp+1
 23048  0CF4  0857               	movf	vfpfcnvrt@fp,w
 23049  0CF5  00B0               	movwf	utoa@fp
 23050  0CF6  0021               	movlb	1	; select bank1
 23051  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23052  0CF8  0020               	movlb	0	; select bank0
 23053  0CF9  00B2               	movwf	utoa@d
 23054  0CFA  0021               	movlb	1	; select bank1
 23055  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23056  0CFC  0020               	movlb	0	; select bank0
 23057  0CFD  00B3               	movwf	utoa@d+1
 23058  0CFE  0021               	movlb	1	; select bank1
 23059  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23060  0D00  0020               	movlb	0	; select bank0
 23061  0D01  00B4               	movwf	utoa@d+2
 23062  0D02  0021               	movlb	1	; select bank1
 23063  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23064  0D04  0020               	movlb	0	; select bank0
 23065  0D05  00B5               	movwf	utoa@d+3
 23066  0D06  0021               	movlb	1	; select bank1
 23067  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23068  0D08  0020               	movlb	0	; select bank0
 23069  0D09  00B6               	movwf	utoa@d+4
 23070  0D0A  0021               	movlb	1	; select bank1
 23071  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23072  0D0C  0020               	movlb	0	; select bank0
 23073  0D0D  00B7               	movwf	utoa@d+5
 23074  0D0E  0021               	movlb	1	; select bank1
 23075  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23076  0D10  0020               	movlb	0	; select bank0
 23077  0D11  00B8               	movwf	utoa@d+6
 23078  0D12  0021               	movlb	1	; select bank1
 23079  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23080  0D14  0020               	movlb	0	; select bank0
 23081  0D15  00B9               	movwf	utoa@d+7
 23082  0D16  31A2  2214         	fcall	_utoa
 23083  0D18  0020               	movlb	0	; select bank0
 23084  0D19  0831               	movf	?_utoa+1,w
 23085  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 23086  0D1B  0830               	movf	?_utoa,w
 23087  0D1C  00D7               	movwf	?_vfpfcnvrt
 23088  0D1D  0008               	return
 23089  0D1E                     l7182:	
 23090                           
 23091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 23092  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 23093  0D1F  0086               	movwf	6
 23094  0D20  0187               	clrf	7
 23095  0D21  3F40               	moviw [0]fsr1
 23096  0D22  00F1               	movwf	strncmp@_l
 23097  0D23  3F41               	moviw [1]fsr1
 23098  0D24  00F2               	movwf	strncmp@_l+1
 23099  0D25  30C1               	movlw	low (STR_91| (0+32768))
 23100  0D26  00F3               	movwf	strncmp@_r
 23101  0D27  30BA               	movlw	high (STR_91| (0+32768))
 23102  0D28  00F4               	movwf	strncmp@_r+1
 23103  0D29  3002               	movlw	2
 23104  0D2A  00F5               	movwf	strncmp@n
 23105  0D2B  3000               	movlw	0
 23106  0D2C  00F6               	movwf	strncmp@n+1
 23107  0D2D  31B5  25B3  3188   	fcall	_strncmp
 23108  0D30  0871               	movf	?_strncmp,w
 23109  0D31  0472               	iorwf	?_strncmp+1,w
 23110  0D32  1D03               	btfss	3,2
 23111  0D33  2D7D               	goto	l7192
 23112                           
 23113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 23114  0D34  0020               	movlb	0	; select bank0
 23115  0D35  0859               	movf	vfpfcnvrt@fmt,w
 23116  0D36  0086               	movwf	6
 23117  0D37  0187               	clrf	7
 23118  0D38  3002               	movlw	2
 23119  0D39  0781               	addwf	1,f
 23120  0D3A  3141               	addfsr 1,1
 23121  0D3B  1803               	skipnc
 23122  0D3C  0A81               	incf	1,f
 23123                           
 23124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23125  0D3D  085A               	movf	vfpfcnvrt@ap,w
 23126  0D3E  0086               	movwf	6
 23127  0D3F  0187               	clrf	7
 23128  0D40  0801               	movf	1,w
 23129  0D41  0084               	movwf	4
 23130  0D42  0185               	clrf	5
 23131  0D43  3002               	movlw	2
 23132  0D44  0781               	addwf	1,f
 23133  0D45  3F00               	moviw [0]fsr0
 23134  0D46  0021               	movlb	1	; select bank1
 23135  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23136  0D48  3F01               	moviw [1]fsr0
 23137  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23138  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23139  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23140  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23141  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23142  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23143  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23144                           
 23145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 23146  0D50  0020               	movlb	0	; select bank0
 23147  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 23148  0D52  00B1               	movwf	utoa@fp+1
 23149  0D53  0857               	movf	vfpfcnvrt@fp,w
 23150  0D54  00B0               	movwf	utoa@fp
 23151  0D55  0021               	movlb	1	; select bank1
 23152  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23153  0D57  0020               	movlb	0	; select bank0
 23154  0D58  00B2               	movwf	utoa@d
 23155  0D59  0021               	movlb	1	; select bank1
 23156  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23157  0D5B  0020               	movlb	0	; select bank0
 23158  0D5C  00B3               	movwf	utoa@d+1
 23159  0D5D  0021               	movlb	1	; select bank1
 23160  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23161  0D5F  0020               	movlb	0	; select bank0
 23162  0D60  00B4               	movwf	utoa@d+2
 23163  0D61  0021               	movlb	1	; select bank1
 23164  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23165  0D63  0020               	movlb	0	; select bank0
 23166  0D64  00B5               	movwf	utoa@d+3
 23167  0D65  0021               	movlb	1	; select bank1
 23168  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23169  0D67  0020               	movlb	0	; select bank0
 23170  0D68  00B6               	movwf	utoa@d+4
 23171  0D69  0021               	movlb	1	; select bank1
 23172  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23173  0D6B  0020               	movlb	0	; select bank0
 23174  0D6C  00B7               	movwf	utoa@d+5
 23175  0D6D  0021               	movlb	1	; select bank1
 23176  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23177  0D6F  0020               	movlb	0	; select bank0
 23178  0D70  00B8               	movwf	utoa@d+6
 23179  0D71  0021               	movlb	1	; select bank1
 23180  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23181  0D73  0020               	movlb	0	; select bank0
 23182  0D74  00B9               	movwf	utoa@d+7
 23183  0D75  31A2  2214         	fcall	_utoa
 23184  0D77  0020               	movlb	0	; select bank0
 23185  0D78  0831               	movf	?_utoa+1,w
 23186  0D79  00D8               	movwf	?_vfpfcnvrt+1
 23187  0D7A  0830               	movf	?_utoa,w
 23188  0D7B  00D7               	movwf	?_vfpfcnvrt
 23189  0D7C  0008               	return
 23190  0D7D                     l7192:	
 23191                           
 23192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 23193  0D7D  0020               	movlb	0	; select bank0
 23194  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 23195  0D7F  0086               	movwf	6
 23196  0D80  0187               	clrf	7
 23197  0D81  3F40               	moviw [0]fsr1
 23198  0D82  00F1               	movwf	strncmp@_l
 23199  0D83  3F41               	moviw [1]fsr1
 23200  0D84  00F2               	movwf	strncmp@_l+1
 23201  0D85  30AE               	movlw	low (STR_96| (0+32768))
 23202  0D86  00F3               	movwf	strncmp@_r
 23203  0D87  30BA               	movlw	high (STR_96| (0+32768))
 23204  0D88  00F4               	movwf	strncmp@_r+1
 23205  0D89  3003               	movlw	3
 23206  0D8A  00F5               	movwf	strncmp@n
 23207  0D8B  3000               	movlw	0
 23208  0D8C  00F6               	movwf	strncmp@n+1
 23209  0D8D  31B5  25B3  3188   	fcall	_strncmp
 23210  0D90  0871               	movf	?_strncmp,w
 23211  0D91  0472               	iorwf	?_strncmp+1,w
 23212  0D92  1903               	btfsc	3,2
 23213  0D93  2DAB               	goto	l7196
 23214  0D94  0020               	movlb	0	; select bank0
 23215  0D95  0859               	movf	vfpfcnvrt@fmt,w
 23216  0D96  0086               	movwf	6
 23217  0D97  0187               	clrf	7
 23218  0D98  3F40               	moviw [0]fsr1
 23219  0D99  00F1               	movwf	strncmp@_l
 23220  0D9A  3F41               	moviw [1]fsr1
 23221  0D9B  00F2               	movwf	strncmp@_l+1
 23222  0D9C  3096               	movlw	low (STR_100| (0+32768))
 23223  0D9D  00F3               	movwf	strncmp@_r
 23224  0D9E  30BA               	movlw	high (STR_100| (0+32768))
 23225  0D9F  00F4               	movwf	strncmp@_r+1
 23226  0DA0  3003               	movlw	3
 23227  0DA1  00F5               	movwf	strncmp@n
 23228  0DA2  3000               	movlw	0
 23229  0DA3  00F6               	movwf	strncmp@n+1
 23230  0DA4  31B5  25B3  3188   	fcall	_strncmp
 23231  0DA7  0871               	movf	?_strncmp,w
 23232  0DA8  0472               	iorwf	?_strncmp+1,w
 23233  0DA9  1D03               	btfss	3,2
 23234  0DAA  2E0D               	goto	l7206
 23235  0DAB                     l7196:	
 23236                           
 23237                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 23238  0DAB  0020               	movlb	0	; select bank0
 23239  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 23240  0DAD  0086               	movwf	6
 23241  0DAE  0187               	clrf	7
 23242  0DAF  3F40               	moviw [0]fsr1
 23243  0DB0  00DB               	movwf	??_vfpfcnvrt
 23244  0DB1  3F41               	moviw [1]fsr1
 23245  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 23246  0DB3  3002               	movlw	2
 23247  0DB4  075B               	addwf	??_vfpfcnvrt,w
 23248  0DB5  0084               	movwf	4
 23249  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 23250  0DB7  1803               	skipnc
 23251  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 23252  0DB9  0085               	movwf	5
 23253  0DBA  0800               	movf	0,w	;code access
 23254  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 23255  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 23256  0DBD  0021               	movlb	1	; select bank1
 23257  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23258                           
 23259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 23260  0DBF  0020               	movlb	0	; select bank0
 23261  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 23262  0DC1  0086               	movwf	6
 23263  0DC2  0187               	clrf	7
 23264  0DC3  3003               	movlw	3
 23265  0DC4  0781               	addwf	1,f
 23266  0DC5  3141               	addfsr 1,1
 23267  0DC6  1803               	skipnc
 23268  0DC7  0A81               	incf	1,f
 23269                           
 23270                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 23271  0DC8  085A               	movf	vfpfcnvrt@ap,w
 23272  0DC9  0086               	movwf	6
 23273  0DCA  0187               	clrf	7
 23274  0DCB  0801               	movf	1,w
 23275  0DCC  0084               	movwf	4
 23276  0DCD  0185               	clrf	5
 23277  0DCE  3002               	movlw	2
 23278  0DCF  0781               	addwf	1,f
 23279  0DD0  0800               	movf	0,w
 23280  0DD1  0021               	movlb	1	; select bank1
 23281  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23282  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 23283  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23284  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23285  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23286  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23287  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23288  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23289                           
 23290                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 23291  0DDA  0020               	movlb	0	; select bank0
 23292  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 23293  0DDC  00B1               	movwf	xtoa@fp+1
 23294  0DDD  0857               	movf	vfpfcnvrt@fp,w
 23295  0DDE  00B0               	movwf	xtoa@fp
 23296  0DDF  0021               	movlb	1	; select bank1
 23297  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23298  0DE1  0020               	movlb	0	; select bank0
 23299  0DE2  00B2               	movwf	xtoa@d
 23300  0DE3  0021               	movlb	1	; select bank1
 23301  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23302  0DE5  0020               	movlb	0	; select bank0
 23303  0DE6  00B3               	movwf	xtoa@d+1
 23304  0DE7  0021               	movlb	1	; select bank1
 23305  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23306  0DE9  0020               	movlb	0	; select bank0
 23307  0DEA  00B4               	movwf	xtoa@d+2
 23308  0DEB  0021               	movlb	1	; select bank1
 23309  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23310  0DED  0020               	movlb	0	; select bank0
 23311  0DEE  00B5               	movwf	xtoa@d+3
 23312  0DEF  0021               	movlb	1	; select bank1
 23313  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23314  0DF1  0020               	movlb	0	; select bank0
 23315  0DF2  00B6               	movwf	xtoa@d+4
 23316  0DF3  0021               	movlb	1	; select bank1
 23317  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23318  0DF5  0020               	movlb	0	; select bank0
 23319  0DF6  00B7               	movwf	xtoa@d+5
 23320  0DF7  0021               	movlb	1	; select bank1
 23321  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23322  0DF9  0020               	movlb	0	; select bank0
 23323  0DFA  00B8               	movwf	xtoa@d+6
 23324  0DFB  0021               	movlb	1	; select bank1
 23325  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23326  0DFD  0020               	movlb	0	; select bank0
 23327  0DFE  00B9               	movwf	xtoa@d+7
 23328  0DFF  0021               	movlb	1	; select bank1
 23329  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 23330  0E01  0020               	movlb	0	; select bank0
 23331  0E02  00DB               	movwf	??_vfpfcnvrt
 23332  0E03  085B               	movf	??_vfpfcnvrt,w
 23333  0E04  00BA               	movwf	xtoa@x
 23334  0E05  319A  2228         	fcall	_xtoa
 23335  0E07  0020               	movlb	0	; select bank0
 23336  0E08  0831               	movf	?_xtoa+1,w
 23337  0E09  00D8               	movwf	?_vfpfcnvrt+1
 23338  0E0A  0830               	movf	?_xtoa,w
 23339  0E0B  00D7               	movwf	?_vfpfcnvrt
 23340  0E0C  0008               	return
 23341  0E0D                     l7206:	
 23342                           
 23343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 23344  0E0D  0020               	movlb	0	; select bank0
 23345  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 23346  0E0F  0086               	movwf	6
 23347  0E10  0187               	clrf	7
 23348  0E11  3F40               	moviw [0]fsr1
 23349  0E12  00F1               	movwf	strncmp@_l
 23350  0E13  3F41               	moviw [1]fsr1
 23351  0E14  00F2               	movwf	strncmp@_l+1
 23352  0E15  30AF               	movlw	low ((STR_96+1)| (0+32768))
 23353  0E16  00F3               	movwf	strncmp@_r
 23354  0E17  30BA               	movlw	high ((STR_96+1)| (0+32768))
 23355  0E18  00F4               	movwf	strncmp@_r+1
 23356  0E19  3002               	movlw	2
 23357  0E1A  00F5               	movwf	strncmp@n
 23358  0E1B  3000               	movlw	0
 23359  0E1C  00F6               	movwf	strncmp@n+1
 23360  0E1D  31B5  25B3  3188   	fcall	_strncmp
 23361  0E20  0871               	movf	?_strncmp,w
 23362  0E21  0472               	iorwf	?_strncmp+1,w
 23363  0E22  1903               	btfsc	3,2
 23364  0E23  2E3B               	goto	l7210
 23365  0E24  0020               	movlb	0	; select bank0
 23366  0E25  0859               	movf	vfpfcnvrt@fmt,w
 23367  0E26  0086               	movwf	6
 23368  0E27  0187               	clrf	7
 23369  0E28  3F40               	moviw [0]fsr1
 23370  0E29  00F1               	movwf	strncmp@_l
 23371  0E2A  3F41               	moviw [1]fsr1
 23372  0E2B  00F2               	movwf	strncmp@_l+1
 23373  0E2C  3097               	movlw	low ((STR_100+1)| (0+32768))
 23374  0E2D  00F3               	movwf	strncmp@_r
 23375  0E2E  30BA               	movlw	high ((STR_100+1)| (0+32768))
 23376  0E2F  00F4               	movwf	strncmp@_r+1
 23377  0E30  3002               	movlw	2
 23378  0E31  00F5               	movwf	strncmp@n
 23379  0E32  3000               	movlw	0
 23380  0E33  00F6               	movwf	strncmp@n+1
 23381  0E34  31B5  25B3  3188   	fcall	_strncmp
 23382  0E37  0871               	movf	?_strncmp,w
 23383  0E38  0472               	iorwf	?_strncmp+1,w
 23384  0E39  1D03               	btfss	3,2
 23385  0E3A  2E9E               	goto	l7220
 23386  0E3B                     l7210:	
 23387                           
 23388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 23389  0E3B  0020               	movlb	0	; select bank0
 23390  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 23391  0E3D  0086               	movwf	6
 23392  0E3E  0187               	clrf	7
 23393  0E3F  3F40               	moviw [0]fsr1
 23394  0E40  00DB               	movwf	??_vfpfcnvrt
 23395  0E41  3F41               	moviw [1]fsr1
 23396  0E42  00DC               	movwf	??_vfpfcnvrt+1
 23397  0E43  3001               	movlw	1
 23398  0E44  075B               	addwf	??_vfpfcnvrt,w
 23399  0E45  0084               	movwf	4
 23400  0E46  085C               	movf	??_vfpfcnvrt+1,w
 23401  0E47  1803               	skipnc
 23402  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 23403  0E49  0085               	movwf	5
 23404  0E4A  0800               	movf	0,w	;code access
 23405  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 23406  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 23407  0E4D  0021               	movlb	1	; select bank1
 23408  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23409                           
 23410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 23411  0E4F  0020               	movlb	0	; select bank0
 23412  0E50  0859               	movf	vfpfcnvrt@fmt,w
 23413  0E51  0086               	movwf	6
 23414  0E52  0187               	clrf	7
 23415  0E53  3002               	movlw	2
 23416  0E54  0781               	addwf	1,f
 23417  0E55  3141               	addfsr 1,1
 23418  0E56  1803               	skipnc
 23419  0E57  0A81               	incf	1,f
 23420                           
 23421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 23422  0E58  085A               	movf	vfpfcnvrt@ap,w
 23423  0E59  0086               	movwf	6
 23424  0E5A  0187               	clrf	7
 23425  0E5B  0801               	movf	1,w
 23426  0E5C  0084               	movwf	4
 23427  0E5D  0185               	clrf	5
 23428  0E5E  3002               	movlw	2
 23429  0E5F  0781               	addwf	1,f
 23430  0E60  3F00               	moviw [0]fsr0
 23431  0E61  0021               	movlb	1	; select bank1
 23432  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23433  0E63  3F01               	moviw [1]fsr0
 23434  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23435  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23436  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23437  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23438  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23439  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23440  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23441                           
 23442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 23443  0E6B  0020               	movlb	0	; select bank0
 23444  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 23445  0E6D  00B1               	movwf	xtoa@fp+1
 23446  0E6E  0857               	movf	vfpfcnvrt@fp,w
 23447  0E6F  00B0               	movwf	xtoa@fp
 23448  0E70  0021               	movlb	1	; select bank1
 23449  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23450  0E72  0020               	movlb	0	; select bank0
 23451  0E73  00B2               	movwf	xtoa@d
 23452  0E74  0021               	movlb	1	; select bank1
 23453  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23454  0E76  0020               	movlb	0	; select bank0
 23455  0E77  00B3               	movwf	xtoa@d+1
 23456  0E78  0021               	movlb	1	; select bank1
 23457  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23458  0E7A  0020               	movlb	0	; select bank0
 23459  0E7B  00B4               	movwf	xtoa@d+2
 23460  0E7C  0021               	movlb	1	; select bank1
 23461  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23462  0E7E  0020               	movlb	0	; select bank0
 23463  0E7F  00B5               	movwf	xtoa@d+3
 23464  0E80  0021               	movlb	1	; select bank1
 23465  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23466  0E82  0020               	movlb	0	; select bank0
 23467  0E83  00B6               	movwf	xtoa@d+4
 23468  0E84  0021               	movlb	1	; select bank1
 23469  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23470  0E86  0020               	movlb	0	; select bank0
 23471  0E87  00B7               	movwf	xtoa@d+5
 23472  0E88  0021               	movlb	1	; select bank1
 23473  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23474  0E8A  0020               	movlb	0	; select bank0
 23475  0E8B  00B8               	movwf	xtoa@d+6
 23476  0E8C  0021               	movlb	1	; select bank1
 23477  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23478  0E8E  0020               	movlb	0	; select bank0
 23479  0E8F  00B9               	movwf	xtoa@d+7
 23480  0E90  0021               	movlb	1	; select bank1
 23481  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 23482  0E92  0020               	movlb	0	; select bank0
 23483  0E93  00DB               	movwf	??_vfpfcnvrt
 23484  0E94  085B               	movf	??_vfpfcnvrt,w
 23485  0E95  00BA               	movwf	xtoa@x
 23486  0E96  319A  2228         	fcall	_xtoa
 23487  0E98  0020               	movlb	0	; select bank0
 23488  0E99  0831               	movf	?_xtoa+1,w
 23489  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 23490  0E9B  0830               	movf	?_xtoa,w
 23491  0E9C  00D7               	movwf	?_vfpfcnvrt
 23492  0E9D  0008               	return
 23493  0E9E                     l7220:	
 23494                           
 23495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 23496  0E9E  0020               	movlb	0	; select bank0
 23497  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 23498  0EA0  0086               	movwf	6
 23499  0EA1  0187               	clrf	7
 23500  0EA2  3F40               	moviw [0]fsr1
 23501  0EA3  00DB               	movwf	??_vfpfcnvrt
 23502  0EA4  3F41               	moviw [1]fsr1
 23503  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 23504  0EA6  085B               	movf	??_vfpfcnvrt,w
 23505  0EA7  0084               	movwf	4
 23506  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 23507  0EA9  0085               	movwf	5
 23508  0EAA  0012               	moviw fsr0++
 23509  0EAB  3A78               	xorlw	120
 23510  0EAC  1903               	btfsc	3,2
 23511  0EAD  2EBD               	goto	l7224
 23512  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 23513  0EAF  0086               	movwf	6
 23514  0EB0  0187               	clrf	7
 23515  0EB1  3F40               	moviw [0]fsr1
 23516  0EB2  00DB               	movwf	??_vfpfcnvrt
 23517  0EB3  3F41               	moviw [1]fsr1
 23518  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 23519  0EB5  085B               	movf	??_vfpfcnvrt,w
 23520  0EB6  0084               	movwf	4
 23521  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 23522  0EB8  0085               	movwf	5
 23523  0EB9  0012               	moviw fsr0++
 23524  0EBA  3A58               	xorlw	88
 23525  0EBB  1D03               	btfss	3,2
 23526  0EBC  2F1C               	goto	l7234
 23527  0EBD                     l7224:	
 23528                           
 23529                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 23530  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 23531  0EBE  0086               	movwf	6
 23532  0EBF  0187               	clrf	7
 23533  0EC0  3F40               	moviw [0]fsr1
 23534  0EC1  00DB               	movwf	??_vfpfcnvrt
 23535  0EC2  3F41               	moviw [1]fsr1
 23536  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 23537  0EC4  085B               	movf	??_vfpfcnvrt,w
 23538  0EC5  0084               	movwf	4
 23539  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 23540  0EC7  0085               	movwf	5
 23541  0EC8  0800               	movf	0,w	;code access
 23542  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 23543  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 23544  0ECB  0021               	movlb	1	; select bank1
 23545  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23546                           
 23547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 23548  0ECD  0020               	movlb	0	; select bank0
 23549  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 23550  0ECF  0086               	movwf	6
 23551  0ED0  0187               	clrf	7
 23552  0ED1  3001               	movlw	1
 23553  0ED2  0781               	addwf	1,f
 23554  0ED3  3141               	addfsr 1,1
 23555  0ED4  1803               	skipnc
 23556  0ED5  0A81               	incf	1,f
 23557                           
 23558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 23559  0ED6  085A               	movf	vfpfcnvrt@ap,w
 23560  0ED7  0086               	movwf	6
 23561  0ED8  0187               	clrf	7
 23562  0ED9  0801               	movf	1,w
 23563  0EDA  0084               	movwf	4
 23564  0EDB  0185               	clrf	5
 23565  0EDC  3002               	movlw	2
 23566  0EDD  0781               	addwf	1,f
 23567  0EDE  3F00               	moviw [0]fsr0
 23568  0EDF  0021               	movlb	1	; select bank1
 23569  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23570  0EE1  3F01               	moviw [1]fsr0
 23571  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23572  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23573  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23574  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23575  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23576  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23577  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23578                           
 23579                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 23580  0EE9  0020               	movlb	0	; select bank0
 23581  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 23582  0EEB  00B1               	movwf	xtoa@fp+1
 23583  0EEC  0857               	movf	vfpfcnvrt@fp,w
 23584  0EED  00B0               	movwf	xtoa@fp
 23585  0EEE  0021               	movlb	1	; select bank1
 23586  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23587  0EF0  0020               	movlb	0	; select bank0
 23588  0EF1  00B2               	movwf	xtoa@d
 23589  0EF2  0021               	movlb	1	; select bank1
 23590  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23591  0EF4  0020               	movlb	0	; select bank0
 23592  0EF5  00B3               	movwf	xtoa@d+1
 23593  0EF6  0021               	movlb	1	; select bank1
 23594  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23595  0EF8  0020               	movlb	0	; select bank0
 23596  0EF9  00B4               	movwf	xtoa@d+2
 23597  0EFA  0021               	movlb	1	; select bank1
 23598  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23599  0EFC  0020               	movlb	0	; select bank0
 23600  0EFD  00B5               	movwf	xtoa@d+3
 23601  0EFE  0021               	movlb	1	; select bank1
 23602  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23603  0F00  0020               	movlb	0	; select bank0
 23604  0F01  00B6               	movwf	xtoa@d+4
 23605  0F02  0021               	movlb	1	; select bank1
 23606  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23607  0F04  0020               	movlb	0	; select bank0
 23608  0F05  00B7               	movwf	xtoa@d+5
 23609  0F06  0021               	movlb	1	; select bank1
 23610  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23611  0F08  0020               	movlb	0	; select bank0
 23612  0F09  00B8               	movwf	xtoa@d+6
 23613  0F0A  0021               	movlb	1	; select bank1
 23614  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23615  0F0C  0020               	movlb	0	; select bank0
 23616  0F0D  00B9               	movwf	xtoa@d+7
 23617  0F0E  0021               	movlb	1	; select bank1
 23618  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23619  0F10  0020               	movlb	0	; select bank0
 23620  0F11  00DB               	movwf	??_vfpfcnvrt
 23621  0F12  085B               	movf	??_vfpfcnvrt,w
 23622  0F13  00BA               	movwf	xtoa@x
 23623  0F14  319A  2228         	fcall	_xtoa
 23624  0F16  0020               	movlb	0	; select bank0
 23625  0F17  0831               	movf	?_xtoa+1,w
 23626  0F18  00D8               	movwf	?_vfpfcnvrt+1
 23627  0F19  0830               	movf	?_xtoa,w
 23628  0F1A  00D7               	movwf	?_vfpfcnvrt
 23629  0F1B  0008               	return
 23630  0F1C                     l7234:	
 23631                           
 23632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 23633  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 23634  0F1D  0086               	movwf	6
 23635  0F1E  0187               	clrf	7
 23636  0F1F  3F40               	moviw [0]fsr1
 23637  0F20  00F1               	movwf	strncmp@_l
 23638  0F21  3F41               	moviw [1]fsr1
 23639  0F22  00F2               	movwf	strncmp@_l+1
 23640  0F23  30C4               	movlw	low (STR_114| (0+32768))
 23641  0F24  00F3               	movwf	strncmp@_r
 23642  0F25  30BA               	movlw	high (STR_114| (0+32768))
 23643  0F26  00F4               	movwf	strncmp@_r+1
 23644  0F27  3002               	movlw	2
 23645  0F28  00F5               	movwf	strncmp@n
 23646  0F29  3000               	movlw	0
 23647  0F2A  00F6               	movwf	strncmp@n+1
 23648  0F2B  31B5  25B3  3188   	fcall	_strncmp
 23649  0F2E  0871               	movf	?_strncmp,w
 23650  0F2F  0472               	iorwf	?_strncmp+1,w
 23651  0F30  1903               	btfsc	3,2
 23652  0F31  2F49               	goto	l7238
 23653  0F32  0020               	movlb	0	; select bank0
 23654  0F33  0859               	movf	vfpfcnvrt@fmt,w
 23655  0F34  0086               	movwf	6
 23656  0F35  0187               	clrf	7
 23657  0F36  3F40               	moviw [0]fsr1
 23658  0F37  00F1               	movwf	strncmp@_l
 23659  0F38  3F41               	moviw [1]fsr1
 23660  0F39  00F2               	movwf	strncmp@_l+1
 23661  0F3A  30B2               	movlw	low (STR_118| (0+32768))
 23662  0F3B  00F3               	movwf	strncmp@_r
 23663  0F3C  30BA               	movlw	high (STR_118| (0+32768))
 23664  0F3D  00F4               	movwf	strncmp@_r+1
 23665  0F3E  3002               	movlw	2
 23666  0F3F  00F5               	movwf	strncmp@n
 23667  0F40  3000               	movlw	0
 23668  0F41  00F6               	movwf	strncmp@n+1
 23669  0F42  31B5  25B3  3188   	fcall	_strncmp
 23670  0F45  0871               	movf	?_strncmp,w
 23671  0F46  0472               	iorwf	?_strncmp+1,w
 23672  0F47  1D03               	btfss	3,2
 23673  0F48  2FAC               	goto	l7248
 23674  0F49                     l7238:	
 23675                           
 23676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 23677  0F49  0020               	movlb	0	; select bank0
 23678  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 23679  0F4B  0086               	movwf	6
 23680  0F4C  0187               	clrf	7
 23681  0F4D  3F40               	moviw [0]fsr1
 23682  0F4E  00DB               	movwf	??_vfpfcnvrt
 23683  0F4F  3F41               	moviw [1]fsr1
 23684  0F50  00DC               	movwf	??_vfpfcnvrt+1
 23685  0F51  3001               	movlw	1
 23686  0F52  075B               	addwf	??_vfpfcnvrt,w
 23687  0F53  0084               	movwf	4
 23688  0F54  085C               	movf	??_vfpfcnvrt+1,w
 23689  0F55  1803               	skipnc
 23690  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 23691  0F57  0085               	movwf	5
 23692  0F58  0800               	movf	0,w	;code access
 23693  0F59  00DD               	movwf	??_vfpfcnvrt+2
 23694  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 23695  0F5B  0021               	movlb	1	; select bank1
 23696  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23697                           
 23698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 23699  0F5D  0020               	movlb	0	; select bank0
 23700  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 23701  0F5F  0086               	movwf	6
 23702  0F60  0187               	clrf	7
 23703  0F61  3002               	movlw	2
 23704  0F62  0781               	addwf	1,f
 23705  0F63  3141               	addfsr 1,1
 23706  0F64  1803               	skipnc
 23707  0F65  0A81               	incf	1,f
 23708                           
 23709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23710  0F66  085A               	movf	vfpfcnvrt@ap,w
 23711  0F67  0086               	movwf	6
 23712  0F68  0187               	clrf	7
 23713  0F69  0801               	movf	1,w
 23714  0F6A  0084               	movwf	4
 23715  0F6B  0185               	clrf	5
 23716  0F6C  3002               	movlw	2
 23717  0F6D  0781               	addwf	1,f
 23718  0F6E  3F00               	moviw [0]fsr0
 23719  0F6F  0021               	movlb	1	; select bank1
 23720  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23721  0F71  3F01               	moviw [1]fsr0
 23722  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23723  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23724  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23725  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23726  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23727  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23728  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23729                           
 23730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 23731  0F79  0020               	movlb	0	; select bank0
 23732  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 23733  0F7B  00B1               	movwf	xtoa@fp+1
 23734  0F7C  0857               	movf	vfpfcnvrt@fp,w
 23735  0F7D  00B0               	movwf	xtoa@fp
 23736  0F7E  0021               	movlb	1	; select bank1
 23737  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23738  0F80  0020               	movlb	0	; select bank0
 23739  0F81  00B2               	movwf	xtoa@d
 23740  0F82  0021               	movlb	1	; select bank1
 23741  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23742  0F84  0020               	movlb	0	; select bank0
 23743  0F85  00B3               	movwf	xtoa@d+1
 23744  0F86  0021               	movlb	1	; select bank1
 23745  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23746  0F88  0020               	movlb	0	; select bank0
 23747  0F89  00B4               	movwf	xtoa@d+2
 23748  0F8A  0021               	movlb	1	; select bank1
 23749  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23750  0F8C  0020               	movlb	0	; select bank0
 23751  0F8D  00B5               	movwf	xtoa@d+3
 23752  0F8E  0021               	movlb	1	; select bank1
 23753  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23754  0F90  0020               	movlb	0	; select bank0
 23755  0F91  00B6               	movwf	xtoa@d+4
 23756  0F92  0021               	movlb	1	; select bank1
 23757  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23758  0F94  0020               	movlb	0	; select bank0
 23759  0F95  00B7               	movwf	xtoa@d+5
 23760  0F96  0021               	movlb	1	; select bank1
 23761  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23762  0F98  0020               	movlb	0	; select bank0
 23763  0F99  00B8               	movwf	xtoa@d+6
 23764  0F9A  0021               	movlb	1	; select bank1
 23765  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23766  0F9C  0020               	movlb	0	; select bank0
 23767  0F9D  00B9               	movwf	xtoa@d+7
 23768  0F9E  0021               	movlb	1	; select bank1
 23769  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23770  0FA0  0020               	movlb	0	; select bank0
 23771  0FA1  00DB               	movwf	??_vfpfcnvrt
 23772  0FA2  085B               	movf	??_vfpfcnvrt,w
 23773  0FA3  00BA               	movwf	xtoa@x
 23774  0FA4  319A  2228         	fcall	_xtoa
 23775  0FA6  0020               	movlb	0	; select bank0
 23776  0FA7  0831               	movf	?_xtoa+1,w
 23777  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 23778  0FA9  0830               	movf	?_xtoa,w
 23779  0FAA  00D7               	movwf	?_vfpfcnvrt
 23780  0FAB  0008               	return
 23781  0FAC                     l7248:	
 23782                           
 23783                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 23784  0FAC  0020               	movlb	0	; select bank0
 23785  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 23786  0FAE  0086               	movwf	6
 23787  0FAF  0187               	clrf	7
 23788  0FB0  3F40               	moviw [0]fsr1
 23789  0FB1  00DB               	movwf	??_vfpfcnvrt
 23790  0FB2  3F41               	moviw [1]fsr1
 23791  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 23792  0FB4  085B               	movf	??_vfpfcnvrt,w
 23793  0FB5  0084               	movwf	4
 23794  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 23795  0FB7  0085               	movwf	5
 23796  0FB8  0012               	moviw fsr0++
 23797  0FB9  3A25               	xorlw	37
 23798  0FBA  1D03               	btfss	3,2
 23799  0FBB  2FD4               	goto	l7258
 23800                           
 23801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 23802  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 23803  0FBD  0086               	movwf	6
 23804  0FBE  0187               	clrf	7
 23805  0FBF  3001               	movlw	1
 23806  0FC0  0781               	addwf	1,f
 23807  0FC1  3141               	addfsr 1,1
 23808  0FC2  1803               	skipnc
 23809  0FC3  0A81               	incf	1,f
 23810                           
 23811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 23812  0FC4  3025               	movlw	37
 23813  0FC5  00F1               	movwf	fputc@c
 23814  0FC6  3000               	movlw	0
 23815  0FC7  00F2               	movwf	fputc@c+1
 23816  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 23817  0FC9  00F4               	movwf	fputc@fp+1
 23818  0FCA  0857               	movf	vfpfcnvrt@fp,w
 23819  0FCB  00F3               	movwf	fputc@fp
 23820  0FCC  31B6  2605         	fcall	_fputc
 23821  0FCE                     l7254:	
 23822                           
 23823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 23824  0FCE  3001               	movlw	1
 23825  0FCF  0020               	movlb	0	; select bank0
 23826  0FD0  00D7               	movwf	?_vfpfcnvrt
 23827  0FD1  3000               	movlw	0
 23828  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 23829  0FD3  0008               	return
 23830  0FD4                     l7258:	
 23831                           
 23832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 23833  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 23834  0FD5  0086               	movwf	6
 23835  0FD6  0187               	clrf	7
 23836  0FD7  3001               	movlw	1
 23837  0FD8  0781               	addwf	1,f
 23838  0FD9  3141               	addfsr 1,1
 23839  0FDA  1803               	skipnc
 23840  0FDB  0A81               	incf	1,f
 23841  0FDC  2B32               	goto	l7092
 23842  0FDD                     l7264:	
 23843                           
 23844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 23845  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 23846  0FDE  0086               	movwf	6
 23847  0FDF  0187               	clrf	7
 23848  0FE0  3F40               	moviw [0]fsr1
 23849  0FE1  00DB               	movwf	??_vfpfcnvrt
 23850  0FE2  3F41               	moviw [1]fsr1
 23851  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 23852  0FE4  085B               	movf	??_vfpfcnvrt,w
 23853  0FE5  0084               	movwf	4
 23854  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 23855  0FE7  0085               	movwf	5
 23856  0FE8  0800               	movf	0,w	;code access
 23857  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 23858  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 23859  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 23860  0FEC  00F1               	movwf	fputc@c
 23861  0FED  085E               	movf	??_vfpfcnvrt+3,w
 23862  0FEE  00F2               	movwf	fputc@c+1
 23863  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 23864  0FF0  00F4               	movwf	fputc@fp+1
 23865  0FF1  0857               	movf	vfpfcnvrt@fp,w
 23866  0FF2  00F3               	movwf	fputc@fp
 23867  0FF3  31B6  2605  3188   	fcall	_fputc
 23868                           
 23869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 23870  0FF6  0020               	movlb	0	; select bank0
 23871  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 23872  0FF8  0086               	movwf	6
 23873  0FF9  0187               	clrf	7
 23874  0FFA  3001               	movlw	1
 23875  0FFB  0781               	addwf	1,f
 23876  0FFC  3141               	addfsr 1,1
 23877  0FFD  1803               	skipnc
 23878  0FFE  0A81               	incf	1,f
 23879  0FFF  2FCE               	goto	l7254
 23880  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     416
    Constant    298
    Data        11
    BSS         131
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     70      80
    BANK3            80      0      79
    BANK4            80      0      52
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[26]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_120(CODE[3]), STR_116(CODE[3]), STR_111(CODE[3]), STR_107(CODE[3]), 
		 -> STR_102(CODE[4]), STR_98(CODE[4]), STR_93(CODE[3]), STR_88(CODE[3]), 
		 -> STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[4]), 
		 -> STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), STR_48(CODE[3]), 
		 -> STR_44(CODE[3]), STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[4]), 
		 -> STR_26(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_120(CODE[3]), STR_116(CODE[3]), STR_111(CODE[3]), STR_107(CODE[3]), 
		 -> STR_102(CODE[4]), STR_98(CODE[4]), STR_93(CODE[3]), STR_88(CODE[3]), 
		 -> STR_83(CODE[4]), STR_78(CODE[3]), STR_73(CODE[3]), STR_68(CODE[4]), 
		 -> STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[4]), STR_48(CODE[3]), 
		 -> STR_44(CODE[3]), STR_39(CODE[3]), STR_35(CODE[3]), STR_30(CODE[4]), 
		 -> STR_26(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[26]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[26]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> adcGain(BANK2[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[26]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1839_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[26]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[26]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_22(CODE[18]), STR_21(CODE[18]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[20]), STR_17(CODE[21]), STR_16(CODE[21]), STR_15(CODE[21]), 
		 -> STR_14(CODE[22]), STR_13(CODE[22]), STR_12(CODE[21]), STR_11(CODE[21]), 
		 -> STR_8(CODE[26]), STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[3]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), adcGain(BANK2[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_23(CODE[3]), STR_10(CODE[3]), STR_9(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_AFE_FET_Status
    _AFE_UPDATE->_AFE_Status
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _updateCurrent->___fltol
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _I2C_writeRegister->_send_I2C_controlByte
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___flmul->__Umul8_16
    _AFE_Status->_readRegister
    _AFE_FET_Status->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _AFE_UPDATE->_coulomb_counter
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flneg->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_statemachine
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    _updateCurrent->___fltol
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  383123
                                             68 BANK2      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     402
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  380343
                                             79 BANK1      1     1      0
                                             66 BANK2      2     2      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   57216
                  _EUSART_Write_Text
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            26     4     22   55356
                                             76 BANK0      4     4      0
                                             44 BANK1     22     0     22
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   49669
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   48632
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   47857
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7640
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    6353
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5013
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2068
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5833
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7036
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    4945
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    4685
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     182
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    1860
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   70567
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   16730
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   16727
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   12962
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     402
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     402
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  181544
                     _AFE_FET_Status
                         _AFE_Status
                  _calibrate_BATTSOC
                    _coulomb_counter
                     _enableCharging
                  _enableDischarging
                      _updateCurrent
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   28905
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  59    59      0   52976
                                             20 BANK1     59    59      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   22362
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        6     6      0   26028
                                             17 BANK1      6     6      0
                  _I2C_writeRegister
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     121
                                             58 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   13012
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   13012
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (3) _coulomb_counter                                      4     4      0   17940
                                             78 BANK0      2     2      0
                                             17 BANK1      2     2      0
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4765
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4112
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _calibrate_BATTSOC                                    9     9      0   13265
                                             17 BANK1      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2130
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     989
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    6825
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3097
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _AFE_Status                                           6     4      2    8291
                                             11 COMMON     1     1      0
                                              0 BANK0      5     3      2
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _AFE_FET_Status                                       2     2      0    8115
                                             11 COMMON     1     1      0
                                              0 BANK0      1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _readRegister                                         6     2      4    8050
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (5) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _AFE_FET_Status
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _AFE_Status
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _calibrate_BATTSOC
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _coulomb_counter
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateCurrent
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _snprintf
         _vsnprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _vsnprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     46      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      34      13       65.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     180      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     180      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 16 00:33:15 2020

          __end_of_setShortCircuitProtection 2800                               _maxCellVoltage 01C4  
                      __end_of_send_I2C_data 3170                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124F  
                               ___fldiv@sign 0051                           ?_calibrate_BATTSOC 0070  
                                __CFG_CP$OFF 0000                          ___wmul@multiplicand 0073  
                      _setShuntResistorValue 3184                               _chg_fet_enable 01C8  
                        __Umul8_16@word_mpld 0077                                          l310 31D0  
                                        l304 316C                                          l322 3149  
                                        l316 3176                                          l334 3151  
                                        l190 37FF                      enableDischarging@enable 0020  
                                        l346 3163                                          l370 3336  
                                        l371 333B                                          l507 2CCF  
                                        l372 3350                                          l269 0801  
                                        l368 3331                                          l810 3598  
                                        l822 191A                                          l902 1A2F  
                                        l807 3578                                          l831 19E6  
                                        l823 1921                                          l906 1A4A  
                                        l827 193C                                          l828 1950  
                                        l852 2317                                          l940 1E93  
                                        l853 23AC                                          l941 1E96  
                                        l870 2DDB                                          l927 1B4D  
                                        l943 1EC9                                          l848 22FC  
                                        l936 1E81                                          l698 36B3  
                                        l938 1E8D                                          l859 23B7  
                                        l891 2236                                          l939 1E90  
                                        l879 2E36                                          l887 221B  
                                        _Lg1 3A8A                                          _Lg2 3A86  
                                        _Lg3 3A82                                          _Lg4 3A7E  
                        __size_of_AFE_UPDATE 003A                          ??_calibrate_BATTSOC 00B1  
                                        _abs 320A                               RGB_color@color 0071  
                                        _pad 3562                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                 __CFG_IESO$ON 0000  
                               ___flmul@aexp 0038                                 ___flmul@bexp 0039  
     setCellOvervoltageProtection@voltage_mV 0032      setCellUndervoltageProtection@voltage_mV 0032  
                               ___flmul@sign 0033                                 ___flmul@temp 003E  
                               ___flmul@prod 003A                                 _statemachine 3787  
                               __CFG_LVP$OFF 0000                          __size_of_AFE_Status 005F  
                               ___fltol@exp1 007B                                         l1015 3271  
                                       l1115 24C7                                         ?_abs 0074  
                                       l1080 29D0                                         l1216 3702  
                                       l1320 06C8                                         l1128 2202  
                                       l1322 06AB                                         l1316 0635  
                                       l1350 07AA                                         l1424 1242  
                                       l1248 2931                                         l1337 074B  
                                       l1193 2865                                         l1450 2A5F  
                                       l1258 3776                                         l1372 1D2B  
                                       l1196 28B3                                         l1358 07C2  
                                       l1463 2AA9                                         l1464 2AB3  
                                       l1456 2A95                                         l1393 1E32  
                                       l1617 3321                                         l1394 1E4A  
                                       l1490 2B40                                         l1396 1E57  
                                       l4300 249A                                         l5102 0605  
                                       l4302 24A6                                         l5104 060D  
                                       l4312 2162                                         l5122 062A  
                                       l4330 21D5                                         l5132 063F  
                                       l4172 360D                                         l4324 2196  
                                       l4332 21E1                                         l4316 2189  
                                       l5206 06F9                                         l5126 062D  
                                       l4174 3611                                         l4190 339D  
                                       l4326 21A5                                         l4510 2DB4  
                                       l5232 076A                                         l5224 075D  
                                       l5216 0743                                         l5240 0773  
                                       l4256 326B                                         l4280 243B  
                                       l7000 2506                                         l5410 1DB6  
                                       l6130 2F13                                         l6122 2E64  
                                       l5250 077E                                         l5170 06B3  
                                       l5162 067B                                         l4178 3638  
                                       l4290 2452                                         l4274 2410  
                                       l4530 2E0A                                         l4346 28DD  
                                       l5404 1D9D                                         l5412 1D7F  
                                       l6116 2E61                                         l5172 06B5  
                                       l5180 06C3                                         l4196 31F7  
                                       l4292 2461                                         l4524 2DEC  
                                       l4356 2925                                         l4348 28EC  
                                       l4372 376A                                         l7020 0843  
                                       l7012 257F                                         l5430 1DD8  
                                       l5414 1DBB                                         l5350 1D07  
                                       l5502 1060                                         l5246 077C  
                                       l5238 0771                                         l4382 32CE  
                                       l4198 3203                                         l4278 2437  
                                       l4542 2E3A                                         l4710 35C8  
                                       l4366 372B                                         l7110 0AF4  
                                       ?_pad 0026                                         l5440 1DF1  
                                       l5344 1CFC                                         l5504 1062  
                                       l6128 2F03                                         l5272 07BE  
                                       l4528 2DFD                                         l4368 373A  
                                       l7032 08B3                                         l7024 0862  
                                       l7008 2551                                         l5450 1E1A  
                                       l5282 331B                                         l5514 1078  
                                       l5506 106A                                         l5098 0602  
                                       l6138 2F27                                         l4546 2E4B  
                                       l4538 2E0D                                         l7210 0E3B  
                                       l7122 0B13                                         l5436 1DEF  
                                       l5428 1DC1                                         l5364 1D20  
                                       l5348 1CFF                                         l5268 07BA  
                                       l5196 06E8                                         l5188 06D6  
                                       l5700 010E                                         l4548 2E58  
                                       l4716 35F4                                         l4708 35ED  
                                       l7220 0E9E                                         l7044 0929  
                                       l7036 08E0                                         l8020 37F1  
                                       l5622 2A6E                                         l5198 06EA  
                                       l7206 0E0D                                         l7142 0BCF  
                                       l7054 0988                                         l8022 1EB7  
                                       l7302 33F8                                         l5464 1E53  
                                       l5384 1D56                                         l5368 1D23  
                                       l5616 2A57                                         l6264 3363  
                                       l8024 2B19                                         l7224 0EBD  
                                       l7152 0C08                                         l7064 09E8  
                                       l7304 3418                                         l5378 1D4A  
                                       l5650 2ACE                                         l5626 2A72  
                                       l5706 016B                                         l5714 01B4  
                                       l8026 3345                                         l7234 0F1C  
                                       l7162 0C66                                         l7074 0A40  
                                       l7402 2969                                         l5484 103D  
                                       l5636 2AA7                                         l5628 2A82  
                                       l7172 0CC6                                         l7092 0B32  
                                       l7084 0A9F                                         l7404 2971  
                                       l5574 11D8                                         l5566 11AA  
                                       l5486 103F                                         l5638 2A9A  
                                       l5726 01CE                                         l7342 3435  
                                       l6622 356E                                         l7254 0FCE  
                                       l7238 0F49                                         l7182 0D1E  
                                       l7414 29AF                                         l7360 29E1  
                                       l5592 1218                                         l5568 11C1  
                                       l5488 1047                                         l7600 2D83  
                                       l5832 287F                                         l6632 357A  
                                       l6704 19F2                                         l7248 0FAC  
                                       l7192 0D7D                                         l7096 0B36  
                                       l7264 0FDD                                         l7416 29B3  
                                       l7370 29FF                                         l5578 11DA  
                                       l7602 2D8B                                         l7338 342A  
                                       l6626 3576                                         l6714 1A05  
                                       l7258 0FD4                                         l7098 0AD4  
                                       l7418 29BA                                         l5588 1203  
                                       l5860 36CB                                         l7700 34DE  
                                       l5692 008F                                         l7524 20F0  
                                       l5836 2899                                         l7460 27DF  
                                       l7444 27A3                                         l6636 35A4  
                                       l6708 19FA                                         l7196 0DAB  
                                       l7382 2A2A                                         l5598 122F  
                                       l5694 00AB                                         l5926 3340  
                                       l7550 188D                                         l7438 26F7  
                                       l6902 2B73                                         l6654 33CC  
                                       l6718 1A12                                         l6822 1A8C  
                                       l6814 1A5A                                         l7368 29F1  
                                       l5856 36C2                                         l7528 2118  
                                       l7456 27B5                                         l5944 3251  
                                       l6656 33D5                                         l6736 235E  
                                       l6728 230F                                         l6808 1A42  
                                       l7386 2A38                                         l7378 2A1F  
                                       l7554 18B5                                         l7482 268E  
                                       l6682 194B                                         l6762 23D0  
                                       l6746 2339                                         l6818 1A72  
                                       l6922 1E83                                         l7652 3390  
                                       l5876 36F0                                         l7708 2C26  
                                       l7476 25E2                                         l6676 1934  
                                       l6772 222E                                         l6932 1E99  
                                       l7396 2955                                         l7804 3788  
                                       l5886 370F                                         l5878 36FE  
                                       l7742 353B                                         l7494 26A0  
                                       l6870 2ADC                                         l6686 197D  
                                       l6790 2255                                         l6862 1B6B  
                                       l6838 1ADA                                         l6846 1B1C  
                                       l6942 1ED0                                         l7830 37D0  
                                       l7822 37AB                                         l7680 36A7  
                                       l7672 368F                                         l7664 3677  
                                       l7744 353F                                         l6696 1958  
                                       l7746 3542                                         l7498 26C8  
                                       l6778 2279                                         l6954 1EFE  
                                       l6938 1E9E                                         l7826 37BB  
                                       l7676 369B                                         l7668 3683  
                                       l7692 3515                                         l6892 2B44  
                                       l6884 2B08                                         l6788 22DA  
                                       l6980 1F9B                                         l6956 1F0E  
                                       l6964 1F41                                         l7836 37E7  
                                       l7860 3474                                         l7598 2D74  
                                       l6886 2B0D                                         l6878 2AF8  
                                       l6798 22DF                                         l6958 1F17  
                                       l7784 2C0E                                         l6888 2B21  
                                       l6976 1F82                                         l6978 1F92  
                                       l6986 1FC5                                         l6996 24D9  
                                       STR_1 38BA                                 __CFG_WDTE$ON 0000  
                                       STR_2 3A62                                         STR_3 3A62  
                                       STR_4 3A62                                         STR_5 3AC7  
                                       STR_6 3A56                                         STR_7 3A56  
                                       STR_8 3928                                         STR_9 38E2  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u4220 31EB                                         u4230 31EC  
                                       u4150 3230                                         u4055 3636  
                                       u4320 2442                                         u4160 3231  
                                       u4145 3213                                         u4170 32EB  
                                       u4180 32EC                                         u4255 3272  
                                       u4265 3277                                         u6035 075E  
                                       u4355 2487                                         u4525 2912  
                                       u6215 3322                                         u6135 0795  
                                       u7015 009F                                         u4455 21C3  
                 enableDischarging@sys_ctrl2 007B                                         u4490 28CD  
                                       u7035 00BC                                         u6405 1D8E  
                                       u4565 3758                                         u7055 011F  
                                       u8040 1011                                         u6425 1D97  
                                       u8025 3584                                         u4905 2DD4  
                                       u8050 1012                                         _SCS0 04C8  
                                       u6435 1DAB                                         u7315 36D4  
                                       _SCS1 04C9                                         u4925 2E08  
                                       u4870 2DA3                                         u7095 01E6  
                                       u8135 192C                                         u4935 2E17  
                                       u8080 18F0                                         u6465 1DC4  
                                       u6705 118A                                         u7345 36F1  
                                       u8305 2359                                         u8090 18F1  
                                       u6555 1E08                                         u6395 1D87  
                                       u6715 1199                                         u5915 06B9  
                                       u4955 2E56                                         u6565 1E23  
                                       u6485 1DCD                                         u6725 11AD  
                                       u7605 2E86                                         u8165 19F0  
                                       u5870 069A                                         u6575 1E3C  
                                       u6815 11F1                                         u7375 3706  
                                       u7615 2F11                                         u8255 2307  
                                       u5880 069B                                         u7800 3369  
                                       u6825 120C                                         u6745 11B6  
                                       u6905 2A8F                                         u7625 2F21  
                                       u5865 068F                                         u8185 196C  
                                       u8265 2390                                         u8425 1A3A  
                                       u8610 2B58                                         u8450 1AA3  
                                       u6835 1222                                         u6675 10EE  
                                       u7635 2FFD                                         u8195 1978  
                                       u8275 23B5                                         u8355 2226  
                                       u8515 1B00                                         u8620 2B59  
                                       u8460 1AA4                                         u8700 1F33  
                                       u9245 29F4                                         u6685 111D  
                                       u6925 2AA1                                         u8525 1B26  
                                       u8445 1A86                                         u8710 1F34  
                                       u6695 1173                                         u8295 234D  
                                       u8480 1AC3                                         u9265 2A00  
                                       u5993 070B                                         u5985 06EE  
                                       u9185 3436                                         u9425 26B9  
                                       u8385 2268                                         u8545 1B3C  
                                       u7770 3359                                         u8490 1AC4  
                                       u9275 2A14                                         u9195 343D  
                                       u8395 2274                                         u8555 1B48  
                                       u9355 29A6                                         u7780 335A  
                                       u9285 2A20                                         u6965 2ABB  
                                       u6885 2A7B                                         u9445 20CA  
                                       u7790 3368                                         u8750 1FB7  
                                       u9455 2108                                         u8760 1FB8  
                                       u9705 2BCF                                         u9625 2C3C  
                                       u9385 27CE                                         u9715 2BE6  
                                       u9475 186E                                         u7980 3247  
                                       u9645 2CA2                                         u9485 18A5  
                                       u7990 3248                                         u9675 2B82  
                                       u9685 2B99                                         u9757 347D  
                                       u9767 32AD                                         u9777 37C8  
                                       _TMR1 0016                                         u9787 31C7  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 0234                               ?_updateCurrent 0070  
                                       _atoi 2AD7                                         _ctoa 33BF  
                                       _main 3453                                         _dtoa 18D5  
                                       _logf 005E                                         _prec 0168  
                                       _otoa 22F5                                         _nout 01C0  
                                       pad@i 002C                                         pad@p 0029  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       pad@w 002E                                         _stoa 2D99  
                                       btemp 007E                                         _utoa 2214  
                                       _xtoa 1A28                                         start 001E  
                  __end_of_calibrate_BATTSOC 2F24                              ___fldiv@new_exp 0052  
                     __end_of_updateVoltages 1527                     __end_of_send_I2C_stopBit 3155  
                          _enableDischarging 34F1                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 3170  
                              ?_EUSART_Write 0070                           ?_enableDischarging 0020  
                              ___fltol@sign1 007A                              __end_of___aldiv 2A41  
                            __end_of___aodiv 24D9                                        ?_atoi 0077  
                                      ?_ctoa 0030                              __end_of___fladd 07CA  
                                      ?_main 0070                                        ?_dtoa 0030  
                            __end_of___aomod 2214                I2C_writeRegister@slaveAddress 0075  
                                      ?_logf 00A8                              __end_of___fldiv 1E5C  
                            __end_of___flneg 3184                                        STR_11 39C2  
                                      STR_20 39FF                                        STR_12 396E  
                                      STR_21 3A12                                        STR_13 3942  
                                      STR_30 3A9E                                        STR_22 3A24  
                                      STR_14 3958                                        STR_15 3983  
                                      STR_24 3A9A                                        STR_16 3998  
                                      STR_17 39AD                                        STR_26 3A9A  
                                      STR_42 3AB5                                        STR_18 39D7  
                                      STR_35 3A9B                                        STR_51 3AA6  
                                      STR_19 39EB                                        STR_44 3AB5  
                                      STR_28 3A9E                                        STR_53 3AA6  
                                      STR_61 3ABE                                        STR_46 3AB8  
                                      STR_39 3A9F                                        STR_63 3ABE  
                                      STR_48 3AB8                                        STR_73 3AA3  
                                      STR_81 3AAA                                        STR_58 3AA7  
                                      STR_66 3AA2                                        STR_83 3AAA  
                                      STR_91 3AC1                                        STR_68 3AA2  
                                      STR_76 3ABB                                        STR_93 3AC1  
                                      STR_78 3ABB                                        STR_88 3AAB  
                                      STR_96 3AAE                              __end_of___flmul 124F  
                                      STR_98 3AAE                                        ?_otoa 0030  
                            __end_of___flsub 34BA                              __end_of___fltol 371E  
                                      ?_stoa 0020                                        ?_utoa 0030  
                            __end_of___lodiv 2942                                        ?_xtoa 0030  
                            __end_of___lomod 3787                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l171 001C                                 vfpfcnvrt@fmt 0059  
                               vfpfcnvrt@llu 00B3                                        _SPBRG 019B  
                         __size_of_RGB_color 0021                          ___lmul@multiplicand 0075  
                        ??_enableDischarging 0022                               __CFG_FCMEN$OFF 0000  
                            __end_of_initWDT 2006                                        _flags 016A  
                                      _errno 01BE                                        _fputc 3605  
                            __end_of_isalpha 32F3                                        _fputs 3399  
                                      _myIsr 0004                              __end_of_isdigit 31F3  
                                      atoi@n 002B                                        pad@fp 0026  
                                      atoi@s 0077                                        _width 0166  
                                      ctoa@c 0032                                        _putch 0003  
                                      ctoa@w 0034                                        dtoa@d 0032  
                                      dtoa@i 004D                                        dtoa@n 0045  
                                      dtoa@p 003F                                        dtoa@s 0043  
                                      dtoa@w 0041                              __end_of_islower 324F  
                            __end_of_isspace 32D6                                        logf@R 0120  
                                      logf@f 015A                                        logf@k 013C  
                                      logf@s 0146                                        logf@u 0156  
                                      logf@w 014E                                        logf@x 00A8  
                                      logf@z 014A           __end_of_lookupTableSamsung_voltage 38B8  
                 _lookupTableSamsung_voltage 385C                               __CFG_BOREN$OFF 0000  
                            __end_of_isupper 3238                                        otoa@d 0032  
                                      otoa@i 0050                                        otoa@n 0048  
                                      otoa@p 0042                                        otoa@t 0044  
                                      otoa@w 0046                      enableCharging@sys_ctrl2 007B  
                                      stoa@i 002B                                        stoa@l 0033  
                                      stoa@p 0031                                        stoa@s 0022  
                                      stoa@w 002D                                        utoa@d 0032  
                                      utoa@i 0047                                        utoa@n 003F  
                                      utoa@p 003B                                        utoa@w 003D  
                                      status 0003                                        wtemp0 007E  
                                      xtoa@c 0055                                        xtoa@d 0032  
                                      xtoa@i 0053                                        xtoa@n 004B  
                                      xtoa@p 0047                                        xtoa@w 0049  
                                      xtoa@x 003A                            _SCD_delay_setting 3A76  
                            __end_of_strncmp 3605                              __end_of_toupper 1023  
                           ___lodiv@dividend 0028                                 ?_internal_16 0070  
                   __size_of_coulomb_counter 00DC                                 _toupper$1906 0079  
                             __CFG_MCLRE$OFF 0000                    __end_of_enableDischarging 3528  
                            __initialization 0020                              ?_updateVoltages 0070  
                   updateTemperatures@adcVal 00E7        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 2B78                                 __end_of_ctoa 33F0  
                               __end_of_main 3485                                 __end_of_dtoa 1A28  
                               __end_of_logf 05E8                                 __end_of_otoa 23E6  
                               __end_of_stoa 2E5E                                 __end_of_utoa 22F5  
                               __end_of_xtoa 1B81                     __end_of_UV_delay_setting 3A76  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 329F                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 38B8                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 0164  
                                     ??_dtoa 003A                                       ??_logf 00AC  
                                     ??_otoa 003A                                       ??_stoa 007A  
                                     ??_utoa 003A                                       ??_xtoa 003B  
                __end_of_printcellParameters 1CE2                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_100 3A96  
                                     STR_102 3A96                                       ?_fputs 007A  
                                     STR_111 3A97                                       STR_120 3AB2  
                                     STR_114 3AC4                                       STR_107 3AAF  
                                     ?_myIsr 0070                                       STR_116 3AC4  
                                     STR_118 3AB2                               __CFG_ZCDDIS$ON 0000  
                                     ?_putch 0070                __end_of_OCD_threshold_setting 3928  
                            ??_updateCurrent 00B1                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 3A7E                                vfpfcnvrt@done 00A2  
                               ??_AFE_UPDATE 007C                                       _TX1REG 019A  
                                     u440lld 2160                                       _SPLLEN 04CF  
                                     u429lld 240E                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                _read_I2C_data 31CC  
                           __end_of___xxtofl 2AD7                   __size_of_calibrate_BATTSOC 00C6  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 3351  
                               vfprintf@cfmt 0068                                 ??_AFE_Status 007B  
                                     ___flge 284A                                       ___lmul 3421  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01C2                                    ??___fladd 0062  
                                  ??___aomod 0071                                       ___wmul 3269  
                                     _ln2_hi 3A92                                    ??___fldiv 0048  
                                     _ln2_lo 3A8E                                    ??___flneg 007A  
                             __CFG_STVREN$ON 0000                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 00AC  
                                  ??___lodiv 0071                             __end_of_init_I2C 31CC  
                                  ??___lomod 0071                             __end_of_init_AFE 205C  
                           __end_of_init_RGB 2806                    __end_of_ATmega328_address 38BA  
                      _beginAFEcommunication 2C21                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strlen 31F3                                       logf@t1 0124  
                                     logf@t2 0128                                    ??_initWDT 0071  
                                     logf@dk 0142                                       logf@ix 015E  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 3562                           __size_of__Umul8_16 001F  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2149 00B4                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002F                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 3421  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 329F                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                         __end_of_AFE_Status 36B8                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                    __end_of__initialization 005A                               ?_read_I2C_data 0071  
                                 ___flneg@f1 005A                             coulomb_counter@i 00B1  
                                 ___fltol@f1 00A8                      AFE_FET_Status@sys_ctrl2 0020  
                   ?_setTemperatureLimitsint 0020                   __size_of_enableDischarging 0037  
   setTemperatureLimitsint@minDischarge_degC 0020                               __pcstackCOMMON 0070  
                     ??_send_I2C_controlByte 0075                                 __pidataBANK3 3199  
                              __end_of_fputc 3659                                __end_of_fputs 33BF  
                              __end_of_myIsr 001E                                 _cellVoltages 01A0  
                              __end_of_putch 0004                            ??_coulomb_counter 006E  
                    __size_of_AFE_FET_Status 0026                                   _batCurrent 01B6  
                         _RGB_AWAIT_AFE_CONN 3351                       updateTemperatures@vtsx 00E9  
                __size_of_updateTemperatures 02D9                                   _batVoltage 01BA  
                        ?_RGB_AWAIT_AFE_CONN 0070                      __size_of_enableCharging 0037  
                                 _cellCharge 0220                                      ??_fputc 0075  
                                    ??_fputs 0020                                      ??_myIsr 0070  
                                    ??_putch 0071            setShortCircuitProtection@delay_us 006A  
                                 __pbssBANK2 0166                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                         __end_of_EUSART_Write 0808  
                         __size_of_init_GPIO 003B                           __size_of_initClock 0003  
                         __size_of_init_TMR1 000B                          statemachine@success 00EF  
                          __end_of__Umul8_16 3330                                   __pmaintext 3453  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                          ?_send_I2C_stopBit 0070                                      ?___lmul 0071  
                                    ?___wmul 0071        setTemperatureLimitsint@minCharge_degC 0024  
                            __CFG_PPS1WAY$ON 0000                   ?_setShortCircuitProtection 0066  
                                 __pintentry 0004                       ?_beginAFEcommunication 0020  
                         ??_send_I2C_stopBit 0071                               ___lmul@product 0020  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 01AE  
                                  ?___xxtofl 0071               setShortCircuitProtection@i_998 00AA  
                         __size_of_vfpfcnvrt F1A4           __size_of_watchdog_timeout_shutdown 001B  
                                    _PPSLOCK 0E0F                       __size_of_send_I2C_NACK 0009  
                           ___lomod@dividend 0028                              ??_read_I2C_data 0073  
                     __size_of_send_I2C_data 0009                                    ?_init_I2C 0070  
                                  ?_init_AFE 0070                                    ?_init_RGB 0070  
       __end_of_setCellOvervoltageProtection 18D5        __size_of_setCellOvervoltageProtection 00D5  
               _setCellOvervoltageProtection 1800                             ??_updateVoltages 00B1  
      __end_of_setCellUndervoltageProtection 2138       __size_of_setCellUndervoltageProtection 00DC  
              _setCellUndervoltageProtection 205C                     readRegister@recievedData 0079  
                    ??_setShuntResistorValue 0075                      _samsung_cell_max_charge 01EB  
                         __size_of_vsnprintf 007D                         __end_of_readRegister 0800  
                                    ___aldiv 29BF                                      _adcGain 016E  
                            __size_of___flge 007C                                      ___aodiv 23E6  
                                    ___fladd 05E8                                      ___aomod 2138  
                                    ___fldiv 1CE2                                      ___flneg 317A  
                            __size_of___lmul 0032                                      ___flmul 1023  
                                    ___flsub 3485                                      ___fltol 36B8  
                            __size_of___wmul 001B                                      ___lodiv 28C6  
                                    ___lomod 371E                                    ?_vfprintf 0061  
                                  ?_snprintf 00CC                                      _cellSOC 022A  
                              _messageBuffer 2771                                      __ptext1 329F  
                                    __ptext2 3787                                      __ptext3 1B81  
                                    __ptext4 3284                                      __ptext5 2942  
                                    __ptext6 33F0                                      __ptext7 1E5C  
                                    __ptext8 1A28                                      __ptext9 1001  
                          __end_of_init_GPIO 0843                            __end_of_initClock 3145  
                          __end_of_init_TMR1 3199                              __size_of_strlen 0017  
                                  _T1CONbits 0018                                      _initWDT 2000  
                               __size_of_abs 0017                                 __size_of_pad 0051  
                                    _isalpha 32D6                                      _isdigit 31DC  
                                 ??___xxtofl 0075                             ___aldiv@dividend 0028  
                                    _islower 3238                                      _isspace 32BA  
  __end_of_setOverCurrentDischargeProtection 26E8   __size_of_setOverCurrentDischargeProtection 0115  
        ??_setOverCurrentDischargeProtection 006C           ?_setOverCurrentDischargeProtection 0066  
          _setOverCurrentDischargeProtection 25D3                                      _isupper 3221  
                                    atoi@neg 0024                                      clrloop0 31A5  
          __end_of_watchdog_timeout_shutdown 32BA                                      _strncmp 35B3  
                                    _toupper 1001                         end_of_initialization 005A  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    init_ram 31B0                                      fputs@fp 007A  
                                    initloop 31B1                ?_setCellOvervoltageProtection 0032  
                          _EUSART_Initialize 2B78                           ?_EUSART_Initialize 0032  
                          __end_of_vfpfcnvrt 1000                                _send_I2C_NACK 315E  
                           ___aldiv@quotient 002E                   send_I2C_controlByte@RW_bit 0073  
                                    psplit$0 440091                                      psplit$1 910092  
                              _send_I2C_data 3167                                    _RGB_color 3330  
                                 ??_vfprintf 0066                           EUSART_Initialize@x 007A  
                                 ??_snprintf 006C                                      strlen@a 0073  
                                    strlen@s 0071                               _AFE_FET_Status 3373  
                        ??_EUSART_Initialize 0036                                  ___fladd@grs 006D  
                           __CFG_FOSC$INTOSC 0000                                ___xxtofl@sign 0020  
                                  _TRISAbits 008C                                    _TRISBbits 008D  
                                  _TRISCbits 008E                                    _TRISEbits 0090  
                      __size_of_EUSART_Write 0008                               _enableCharging 34BA  
                          __end_of_vsnprintf 29BF                                  ___fldiv@grs 0054  
                                ___fldiv@rem 004D                 __size_of_printcellParameters 0161  
              __end_of_SCD_threshold_setting 3A56                                    _RXPPSbits 0E24  
                          _I2C_writeRegister 32F3                                  ___flmul@grs 0034  
                     _lookupTableSamsung_SOC 3800                    __end_of_EUSART_Initialize 2C21  
                      __end_of_updateCurrent 2D99                        _OCD_threshold_setting 3908  
                           _dschg_fet_enable 01C6                              _coulomb_counter 2F24  
                         ?_I2C_writeRegister 0075             beginAFEcommunication@commSuccess 002B  
                             ?_send_I2C_NACK 0070                     readRegister@slaveAddress 0075  
             ?_setCellUndervoltageProtection 0032                               ?_send_I2C_data 0071  
                     __end_of_AFE_FET_Status 3399                          ??_I2C_writeRegister 007B  
                                 ?_RGB_color 0071                               __end_of___flge 28C6  
                             __end_of___lmul 3453                                  vfpfcnvrt@ap 005A  
                                vfpfcnvrt@cp 00A0                                  vfpfcnvrt@fp 0057  
                                vfpfcnvrt@ll 00A8                               __end_of___wmul 3284  
                                vfpfcnvrt@vp 00B0                               __end_of_ln2_hi 3A96  
                             __end_of_ln2_lo 3A92                                 _EUSART_Write 0800  
                I2C_writeRegister@regAddress 0077                setShuntResistorValue@res_mOhm 0071  
                     __end_of_enableCharging 34F1             __size_of_setTemperatureLimitsint 0044  
                             __end_of_strlen 320A                          start_initialization 0020  
                            ___lodiv@divisor 0020                              ___lodiv@counter 007A  
                        _thermistorBetaValue 01ED                                  __end_of_Lg1 3A8E  
                                __end_of_Lg2 3A8A                                  __end_of_Lg3 3A86  
                                __end_of_Lg4 3A82                                ?_statemachine 0070  
                                __end_of_abs 3221                                  __end_of_pad 35B3  
                          _minCellTempCharge 01DC                setCellOvervoltageProtection@i 0045  
                       _maxCellTempDischarge 01D6                         updateVoltages@adcVal 00B8  
                       _minCellTempDischarge 01DA                            pnum$text7_split_1 0091  
                          pnum$text7_split_2 0092                    __end_of_I2C_writeRegister 3311  
     _setOverCurrentDischargeProtection$2148 00A4          setCellOvervoltageProtection@delay_s 0034  
       setCellUndervoltageProtection@delay_s 0034                            _EUSART_Write_Text 324F  
                      __size_of_readRegister 0036                           ?_EUSART_Write_Text 0072  
                    ??_beginAFEcommunication 0022                                  vfprintf@fmt 0063  
                                   ??___flge 0062                                     ??___lmul 0079  
                                   ??___wmul 0075               ??_setCellOvervoltageProtection 0036  
        setCellOvervoltageProtection@ov_trip 0044                              ?_AFE_FET_Status 0070  
                                  __Umul8_16 3311                  ??_setShortCircuitProtection 006C  
                                __pdataBANK3 01E4                          ??_EUSART_Write_Text 0074  
              __size_of_send_I2C_controlByte 000A         setCellUndervoltageProtection@uv_trip 0044  
                 __end_of_updateTemperatures 1800                                     ??_strlen 0073  
                                  ___fladd@a 005E                                    ___fladd@b 005A  
                               vsnprintf@cnt 00C4                                 vsnprintf@fmt 00BF  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                              ?_enableCharging 0020  
                       enableCharging@enable 0020                                    _adcOffset 016C  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                                    ___flsub@a 00A0  
                                  ___flsub@b 00A4                               ??_statemachine 0162  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 01DE                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                           ___aodiv@dividend 0028                    __size_of_send_I2C_stopBit 0008  
                                snprintf@fmt 00D0                            __size_of___xxtofl 0096  
                               _readRegister 07CA                      __end_of_coulomb_counter 3000  
   setTemperatureLimitsint@maxDischarge_degC 0022                        updateTemperatures@tmp 00E3  
                      updateTemperatures@rts 00EB                    __end_of_EUSART_Write_Text 3269  
                         calibrate_BATTSOC@i 00B6                           calibrate_BATTSOC@j 00B8  
                 __size_of_EUSART_Initialize 00A9                                ??_internal_16 0071  
                                  _atoi$1771 0026                                    _atoi$1772 002A  
                                  _atoi$1773 0028                             _OV_delay_setting 3A66  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 0056  
                          __size_of_init_RGB 0005                            _send_I2C_startBit 3145  
                                  _dtoa$1320 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0022                                  _alert_error 01D2  
             __size_of_setShuntResistorValue 000A                                     ?___aldiv 0024  
                                   ?___aodiv 0020                           ?_send_I2C_startBit 0070  
                                   ?___fladd 005A                __end_of_setShuntResistorValue 318E  
                                   ?___aomod 0020                                     ?___fldiv 0040  
                                   ?___flneg 005A                             ___aodiv@quotient 0074  
                                   ?___flmul 0026                         AFE_Status@error_flag 0022  
                                   ?___flsub 00A0                                     ?___fltol 00A8  
                                   ?___lodiv 0020                                     ?___lomod 0020  
                                ??_RGB_color 0073                                   ?__Umul8_16 0071  
                  EUSART_Initialize@baudrate 0032                                    _logf$2161 0152  
                                  _logf$2162 012C                                    _logf$2163 0130  
                                  _logf$2164 0134                                    _logf$2165 0138  
                          __size_of_vfprintf 0031                          ??_send_I2C_startBit 0071  
                          __size_of_snprintf 001B                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                  _ocd_error 01CA                                     ?_islower 0071  
                                   ?_isspace 0071                                    _init_GPIO 0808  
                                   ?_isupper 0071                                    _initClock 3142  
                                  _init_TMR1 318E                                    _currState 01E3  
                  _setShortCircuitProtection 26E8                   __size_of_I2C_writeRegister 001E  
                             __size_of_fputc 0054                               __size_of_fputs 0026  
                             __size_of_myIsr 001A                                     ?_strncmp 0071  
                                   ?_toupper 0077                               __size_of_putch 0001  
                                  _scd_error 01CC                              ___aldiv@divisor 0024  
                      __end_of_read_I2C_data 31DC                              ___aldiv@counter 002C  
                             ___wmul@product 0075                                     _LATAbits 010C  
                                   _LATEbits 0110                    __end_of_send_I2C_startBit 314D  
                                  clear_ram0 31A4                                    _tmr1_flag 01DF  
                                   _PIE1bits 0091           setOverCurrentDischargeProtection@i 00A8  
                                   _PIR1bits 0011                   setShortCircuitProtection@i 00A8  
                        __end_of_internal_16 315E                          _printcellParameters 1B81  
                                  _vfpfcnvrt 1E5C                                    _xtoa$1356 0043  
                                  _xtoa$1357 0045                            ___wmul@multiplier 0071  
                    _setTemperatureLimitsint 2806                                   ?_init_GPIO 0070  
                                 ?_initClock 0070                                   ?_init_TMR1 0070  
                      send_I2C_data@databyte 0071                                 _isspace$1798 0075  
                                 vfpfcnvrt@c 00B2                            ___lmul@multiplier 0071  
                       ?_printcellParameters 0070                             ?_coulomb_counter 0070  
                      _temperatureThermistor 01B2                   __size_of_EUSART_Write_Text 001A  
                 ?_watchdog_timeout_shutdown 0070                                    _vsnprintf 2942  
                                   _XR_error 01D4                                   _AFE_UPDATE 3528  
                          _OCD_delay_setting 3A36                         __end_of_statemachine 3800  
                                 vfprintf@ap 0065                                   vfprintf@fp 0061  
                                 _AFE_Status 3659                                  ??__Umul8_16 0073  
                           __size_of___aldiv 0082                             __size_of___aodiv 00F3  
                           __size_of___fladd 01E2                      __size_of_updateVoltages 02D8  
                           __size_of___aomod 00DC                             __size_of___fldiv 017A  
                           __size_of___flneg 000A               _setShortCircuitProtection$2147 00A4  
                                vsnprintf@ap 00C1                             __size_of___flmul 022C  
                           __size_of___flsub 0035                             __size_of___fltol 0066  
                     readRegister@regAddress 0077                             __size_of___lodiv 007C  
                           __size_of___lomod 0069                                   ?_vfpfcnvrt 0057  
                                 snprintf@ap 006F                              ___aodiv@divisor 0020  
                            ___aodiv@counter 0072                                   _ANSELBbits 018D  
                                 _ANSELCbits 018E                                     ___xxtofl 2A41  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
             __end_of_lookupTableSamsung_SOC 385C                             _send_I2C_stopBit 314D  
                           __size_of_islower 0017                             __size_of_isspace 001C  
                                   __ptext10 3238                                     __ptext11 3221  
                                   __ptext20 320A                                     __ptext12 32D6  
                                   __ptext21 2138                                     __ptext13 2214  
                                   __ptext30 32BA                                     __ptext22 23E6  
                                   __ptext14 371E                                     __ptext31 31DC  
                                   __ptext23 33BF                                     __ptext15 28C6  
                                   __ptext40 284A                                     __ptext32 324F  
                                   __ptext24 3562                                     __ptext16 35B3  
                                   __ptext41 205C                                     __ptext33 0800  
                                   __ptext25 31F3                                     __ptext17 2D99  
                                   __ptext50 005E                                     __ptext42 1800  
                                   __ptext34 2006                                     __ptext26 3399  
                                   __ptext18 22F5                                     __ptext51 2CD5  
                                   __ptext43 2C21                                     __ptext35 2806  
                                   __ptext27 3605                                     __ptext19 18D5  
                                   __ptext60 2A41                                     __ptext52 317A  
                                   __ptext44 3351                                     __ptext36 3269  
                                   __ptext28 0003                                     __ptext61 36B8  
                                   __ptext53 34F1                                     __ptext45 3330  
                                   __ptext37 3184                                     __ptext29 2AD7  
                                   __ptext70 3167                                     __ptext62 1023  
                                   __ptext54 34BA                                     __ptext46 3528  
                                   __ptext38 26E8                                     __ptext71 3170  
                                   __ptext63 3311                                     __ptext55 32F3  
                                   __ptext47 124F                                     __ptext39 25D3  
                                   __ptext80 3155                                     __ptext72 315E  
                                   __ptext64 1CE2                                     __ptext56 2F24  
                                   __ptext48 3421                                     __ptext81 2B78  
                                   __ptext73 31CC                                     __ptext65 3659  
                                   __ptext57 3485                                     __ptext49 1527  
                                   __ptext82 29BF                                     __ptext74 318E  
                                   __ptext66 3373                                     __ptext58 05E8  
                                   __ptext75 2801                                     __ptext67 07CA  
                                   __ptext59 2E5E                                     __ptext76 31BC  
                                   __ptext68 314D                                     __ptext77 0808  
                                   __ptext69 3145                                     __ptext78 2000  
                                   __ptext79 3142                             __size_of_isupper 0017  
                      ??_printcellParameters 007C               setCellUndervoltageProtection@i 0045  
                  __end_of_OCD_delay_setting 3A46                             __size_of_strncmp 0052  
                           __size_of_toupper 0022                                   ?_vsnprintf 00BB  
                        updateCurrent@adcVal 00B5                                     _init_I2C 31BC  
                                   _init_AFE 2006                                     _init_RGB 2801  
                              __size_of_atoi 00A1                                __size_of_ctoa 0031  
                              __size_of_main 0032                                __size_of_dtoa 0153  
                              _SSPDATPPSbits 0E21                                    pnum$text7 0044  
                              __size_of_logf 058A                                __size_of_otoa 00F1  
                      _SCD_threshold_setting 3A46                                __size_of_stoa 00C5  
                              __size_of_utoa 00E1                   __size_of_send_I2C_startBit 0008  
                              __size_of_xtoa 0159                                  _internal_16 3155  
                           ??_AFE_FET_Status 007B                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                    stoa@F1152 01E4  
                                   _ov_error 01CE                                   _RC4PPSbits 0EA4  
             __size_of_beginAFEcommunication 00B4                                _SSPCLKPPSbits 0E20  
              __end_of_beginAFEcommunication 2CD5                                     int$flags 007E  
                                 _RC5PPSbits 0EA5                                     _protect1 01E2  
                                   _protect2 01E1                                     _protect3 01E0  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 33F0  
                           ??_enableCharging 0022                                     _snprintf 3284  
                                   _uv_error 01D0                             ___aomod@dividend 0028  
                                   logf@F469 01AA                       __size_of_updateCurrent 00C4  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 3A6E  
                             _vfpfcnvrt$1371 00A4                               _vfpfcnvrt$1372 00A6  
                                 _INTCONbits 000B                                  ??_init_GPIO 0071  
                                ??_initClock 0071                                  ??_init_TMR1 0071  
                                   logf@hfsq 013E                               __pstringtext10 3A82  
                             __pstringtext11 3A86                               __pstringtext20 396E  
                             __pstringtext12 3A8A                               __pstringtext21 3983  
                             __pstringtext13 3A8E                               __pstringtext30 3A56  
                             __pstringtext22 3998                               __pstringtext14 3A92  
                             __pstringtext31 3A96                               __pstringtext23 39AD  
                             __pstringtext15 38B8                               __pstringtext40 3AB8  
                             __pstringtext32 3A9A                               __pstringtext24 39C2  
                             __pstringtext16 38E2                               __pstringtext41 3ABB  
                             __pstringtext33 3A9E                               __pstringtext25 39D7  
                             __pstringtext17 3928                               __pstringtext42 3ABE  
                             __pstringtext34 3AA2                               __pstringtext26 39EB  
                             __pstringtext18 3942                               __pstringtext43 3AC1  
                             __pstringtext35 3AA6                               __pstringtext27 39FF  
                             __pstringtext19 3958                               __pstringtext44 3AC4  
                             __pstringtext36 3AAA                               __pstringtext28 3A12  
                             __pstringtext45 3AC7                               __pstringtext37 3AAE  
                             __pstringtext29 3A24                               __pstringtext46 0000  
                             __pstringtext38 3AB2                               __pstringtext39 3AB5  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 00C6                                   vsnprintf@n 00BD  
                                 vsnprintf@s 00BB                           _updateTemperatures 1527  
                           _UV_delay_setting 3A6E                                    snprintf@n 00CE  
                                  snprintf@s 00CC                 __end_of_send_I2C_controlByte 317A  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                          ?_updateTemperatures 0070  
                          __CFG_CLKOUTEN$OFF 0000                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0118  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                                ?_AFE_Status 0020                            _maxCellTempCharge 01D8  
                            ___aomod@divisor 0020                                  ??_vfpfcnvrt 005B  
                                   stoa@nuls 0024                              ___aomod@counter 0072  
                              __pstringtext1 3800                                __pstringtext2 385C  
                              __pstringtext3 3908                                __pstringtext4 3A36  
                              __pstringtext5 3A46                                __pstringtext6 3A66  
                              __pstringtext7 3A6E                                __pstringtext8 3A76  
                              __pstringtext9 3A7E                           AFE_Status@sys_stat 0024  
                       ??_updateTemperatures 00B4                       __Umul8_16@multiplicand 0071  
                             _vsnprintf$1943 00C2      setOverCurrentDischargeProtection@i_1007 00AA  
                                   strncmp@l 0078                                     strncmp@n 0075  
                                   strncmp@r 007A                                     toupper@c 0077  
                      EUSART_Write_Text@text 0072                                 ___aldiv@sign 002D  
                                _SSPCON2bits 0216                                   _WDTCONbits 0097  
                              ___fladd@signs 006A              __end_of_setTemperatureLimitsint 284A  
                         EUSART_Write@txData 0071                                 ___aodiv@sign 0073  
    setOverCurrentDischargeProtection@scaler 00A0                                  ??_vsnprintf 006A  
                    _updateTemperatures$2150 00B7                      _updateTemperatures$2151 00BB  
                    _updateTemperatures$2160 00DF                      _updateTemperatures$2152 00BF  
                    _updateTemperatures$2153 00C3                      _updateTemperatures$2154 00C7  
                    _updateTemperatures$2155 00CB                      _updateTemperatures$2156 00CF  
                    _updateTemperatures$2157 00D3                      _updateTemperatures$2158 00D7  
                    _updateTemperatures$2159 00DB                                 ___fladd@aexp 006B  
                               ___fladd@bexp 006C                        __size_of_statemachine 0079  
                                 _STATUSbits 0003                                  _toggleColor 007C  
                       __Umul8_16@multiplier 0079                                _updateCurrent 2CD5  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 3373  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 3167                            __Umul8_16@product 0075  
                          _calibrate_BATTSOC 2E5E  
