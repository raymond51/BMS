

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Feb 26 19:20:57 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	stringtext32,global,class=STRCODE,delta=2
    37                           	psect	stringtext33,global,class=STRCODE,delta=2
    38                           	psect	stringtext34,global,class=STRCODE,delta=2
    39                           	psect	stringtext35,global,class=STRCODE,delta=2
    40                           	psect	stringtext36,global,class=STRCODE,delta=2
    41                           	psect	stringtext37,global,class=STRCODE,delta=2
    42                           	psect	stringtext38,global,class=STRCODE,delta=2
    43                           	psect	stringtext39,global,class=STRCODE,delta=2
    44                           	psect	stringtext40,global,class=STRCODE,delta=2
    45                           	psect	stringtext41,global,class=STRCODE,delta=2
    46                           	psect	stringtext42,global,class=STRCODE,delta=2
    47                           	psect	stringtext43,global,class=STRCODE,delta=2
    48                           	psect	stringtext44,global,class=STRCODE,delta=2
    49                           	psect	stringtext45,global,class=STRCODE,delta=2
    50                           	psect	stringtext46,global,class=STRCODE,delta=2
    51                           	psect	stringtext47,global,class=STRCODE,delta=2
    52                           	psect	stringtext48,global,class=STRCODE,delta=2
    53                           	psect	stringtext49,global,class=STRCODE,delta=2
    54                           	psect	stringtext50,global,class=STRCODE,delta=2
    55                           	psect	stringtext51,global,class=STRCODE,delta=2
    56                           	psect	stringtext52,global,class=STRCODE,delta=2
    57                           	psect	stringtext53,global,class=STRCODE,delta=2
    58                           	psect	stringtext54,global,class=STRCODE,delta=2
    59                           	psect	stringtext55,global,class=STRCODE,delta=2
    60                           	psect	stringtext56,global,class=STRCODE,delta=2
    61                           	psect	cinit,global,class=CODE,merge=1,delta=2
    62                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    63                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    64                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    65                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    66                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    67                           	psect	clrtext,global,class=CODE,delta=2
    68                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    69                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    70                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    71                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    72                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    73                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    74                           	psect	text1,local,class=CODE,merge=1,delta=2
    75                           	psect	text2,local,class=CODE,merge=1,delta=2
    76                           	psect	text3,local,class=CODE,merge=1,delta=2
    77                           	psect	text4,local,class=CODE,merge=1,delta=2
    78                           	psect	text5,local,class=CODE,merge=1,delta=2
    79                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text8,local,class=CODE,merge=1,delta=2
    82                           	psect	text9,local,class=CODE,merge=1,delta=2
    83                           	psect	text10,local,class=CODE,merge=1,delta=2
    84                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text14,local,class=CODE,merge=1,delta=2
    88                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    90                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text18,local,class=CODE,merge=1,delta=2
    92                           	psect	text19,local,class=CODE,merge=1,delta=2
    93                           	psect	text20,local,class=CODE,merge=1,delta=2
    94                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text27,local,class=CODE,merge=1,delta=2,group=1
   101                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
   102                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
   103                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text31,local,class=CODE,merge=1,delta=2
   105                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
   106                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
   107                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
   108                           	psect	text35,local,class=CODE,merge=1,delta=2
   109                           	psect	text36,local,class=CODE,merge=1,delta=2
   110                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
   112                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
   114                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
   115                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
   116                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
   117                           	psect	text44,local,class=CODE,merge=1,delta=2
   118                           	psect	text45,local,class=CODE,merge=1,delta=2
   119                           	psect	text46,local,class=CODE,merge=1,delta=2
   120                           	psect	text47,local,class=CODE,merge=1,delta=2
   121                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text49,local,class=CODE,merge=1,delta=2
   123                           	psect	text50,local,class=CODE,merge=1,delta=2
   124                           	psect	text51,local,class=CODE,merge=1,delta=2
   125                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   126                           	psect	text53,local,class=CODE,merge=1,delta=2
   127                           	psect	text54,local,class=CODE,merge=1,delta=2
   128                           	psect	text55,local,class=CODE,merge=1,delta=2
   129                           	psect	text56,local,class=CODE,merge=1,delta=2
   130                           	psect	text57,local,class=CODE,merge=1,delta=2
   131                           	psect	text58,local,class=CODE,merge=1,delta=2
   132                           	psect	text59,local,class=CODE,merge=1,delta=2
   133                           	psect	text60,local,class=CODE,merge=1,delta=2
   134                           	psect	text61,local,class=CODE,merge=1,delta=2
   135                           	psect	text62,local,class=CODE,merge=1,delta=2
   136                           	psect	text63,local,class=CODE,merge=1,delta=2
   137                           	psect	text64,local,class=CODE,merge=1,delta=2
   138                           	psect	text65,local,class=CODE,merge=1,delta=2
   139                           	psect	text66,local,class=CODE,merge=1,delta=2
   140                           	psect	text67,local,class=CODE,merge=1,delta=2
   141                           	psect	text68,local,class=CODE,merge=1,delta=2
   142                           	psect	text69,local,class=CODE,merge=1,delta=2
   143                           	psect	text70,local,class=CODE,merge=1,delta=2
   144                           	psect	text71,local,class=CODE,merge=1,delta=2,group=1
   145                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
   146                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
   147                           	psect	text74,local,class=CODE,merge=1,delta=2,group=1
   148                           	psect	text75,local,class=CODE,merge=1,delta=2,group=1
   149                           	psect	text76,local,class=CODE,merge=1,delta=2,group=1
   150                           	psect	text77,local,class=CODE,merge=1,delta=2,group=1
   151                           	psect	text78,local,class=CODE,merge=1,delta=2
   152                           	psect	text79,local,class=CODE,merge=1,delta=2
   153                           	psect	text80,local,class=CODE,merge=1,delta=2
   154                           	psect	text81,local,class=CODE,merge=1,delta=2
   155                           	psect	text82,local,class=CODE,merge=1,delta=2
   156                           	psect	text83,local,class=CODE,merge=1,delta=2
   157                           	psect	text84,local,class=CODE,merge=1,delta=2
   158                           	psect	text85,local,class=CODE,merge=1,delta=2
   159                           	psect	text86,local,class=CODE,merge=1,delta=2,group=1
   160                           	psect	intentry,global,class=CODE,delta=2
   161                           	psect	text9_split_1,local,class=CODE,merge=1,delta=2
   162                           	psect	text9_split_2,local,class=CODE,merge=1,delta=2
   163                           	psect	text9_split_3,local,class=CODE,merge=1,delta=2
   164                           	psect	text9_split_4,local,class=CODE,merge=1,delta=2
   165                           	psect	text9_split_5,local,class=CODE,merge=1,delta=2
   166                           	psect	text9_split_6,local,class=CODE,merge=1,delta=2
   167                           	psect	text9_split_7,local,class=CODE,merge=1,delta=2
   168                           	psect	text9_split_8,local,class=CODE,merge=1,delta=2
   169                           	dabs	1,0xCA0,32
   170                           	dabs	1,0xC20,80
   171                           	dabs	1,0xBE1,15
   172                           	dabs	1,0x2771,0,_messageBuffer
   173                           	dabs	1,0x7E,2
   174  0000                     
   175                           ; Version 2.05
   176                           ; Generated 20/12/2018 GMT
   177                           ; 
   178                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   179                           ; All rights reserved.
   180                           ; 
   181                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   182                           ; 
   183                           ; Redistribution and use in source and binary forms, with or without modification, are
   184                           ; permitted provided that the following conditions are met:
   185                           ; 
   186                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   187                           ;        conditions and the following disclaimer.
   188                           ; 
   189                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   190                           ;        of conditions and the following disclaimer in the documentation and/or other
   191                           ;        materials provided with the distribution.
   192                           ; 
   193                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   194                           ;        software without specific prior written permission.
   195                           ; 
   196                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   197                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   198                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   199                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   200                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   201                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   202                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   203                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   204                           ; 
   205                           ; 
   206                           ; Code-generator required, PIC16F1719 Definitions
   207                           ; 
   208                           ; SFR Addresses
   209  0000                     	;# 
   210  0001                     	;# 
   211  0002                     	;# 
   212  0003                     	;# 
   213  0004                     	;# 
   214  0005                     	;# 
   215  0006                     	;# 
   216  0007                     	;# 
   217  0008                     	;# 
   218  0009                     	;# 
   219  000A                     	;# 
   220  000B                     	;# 
   221  000C                     	;# 
   222  000D                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0016                     	;# 
   232  0017                     	;# 
   233  0018                     	;# 
   234  0019                     	;# 
   235  001A                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  008C                     	;# 
   239  008D                     	;# 
   240  008E                     	;# 
   241  008F                     	;# 
   242  0090                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0093                     	;# 
   246  0095                     	;# 
   247  0096                     	;# 
   248  0097                     	;# 
   249  0098                     	;# 
   250  0099                     	;# 
   251  009A                     	;# 
   252  009B                     	;# 
   253  009B                     	;# 
   254  009C                     	;# 
   255  009D                     	;# 
   256  009E                     	;# 
   257  009F                     	;# 
   258  010C                     	;# 
   259  010D                     	;# 
   260  010E                     	;# 
   261  010F                     	;# 
   262  0110                     	;# 
   263  0111                     	;# 
   264  0112                     	;# 
   265  0113                     	;# 
   266  0114                     	;# 
   267  0115                     	;# 
   268  0116                     	;# 
   269  0117                     	;# 
   270  0118                     	;# 
   271  0119                     	;# 
   272  011A                     	;# 
   273  011B                     	;# 
   274  011B                     	;# 
   275  011C                     	;# 
   276  018C                     	;# 
   277  018D                     	;# 
   278  018E                     	;# 
   279  018F                     	;# 
   280  0190                     	;# 
   281  0191                     	;# 
   282  0191                     	;# 
   283  0192                     	;# 
   284  0193                     	;# 
   285  0193                     	;# 
   286  0194                     	;# 
   287  0195                     	;# 
   288  0196                     	;# 
   289  0197                     	;# 
   290  0199                     	;# 
   291  0199                     	;# 
   292  0199                     	;# 
   293  019A                     	;# 
   294  019A                     	;# 
   295  019A                     	;# 
   296  019B                     	;# 
   297  019B                     	;# 
   298  019B                     	;# 
   299  019B                     	;# 
   300  019B                     	;# 
   301  019C                     	;# 
   302  019C                     	;# 
   303  019C                     	;# 
   304  019D                     	;# 
   305  019D                     	;# 
   306  019D                     	;# 
   307  019E                     	;# 
   308  019E                     	;# 
   309  019E                     	;# 
   310  019F                     	;# 
   311  019F                     	;# 
   312  019F                     	;# 
   313  019F                     	;# 
   314  019F                     	;# 
   315  020C                     	;# 
   316  020D                     	;# 
   317  020E                     	;# 
   318  020F                     	;# 
   319  0210                     	;# 
   320  0211                     	;# 
   321  0211                     	;# 
   322  0212                     	;# 
   323  0212                     	;# 
   324  0213                     	;# 
   325  0213                     	;# 
   326  0214                     	;# 
   327  0214                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0215                     	;# 
   332  0216                     	;# 
   333  0216                     	;# 
   334  0217                     	;# 
   335  0217                     	;# 
   336  028C                     	;# 
   337  028D                     	;# 
   338  028E                     	;# 
   339  028F                     	;# 
   340  0290                     	;# 
   341  0291                     	;# 
   342  0291                     	;# 
   343  0292                     	;# 
   344  0293                     	;# 
   345  0293                     	;# 
   346  0298                     	;# 
   347  0298                     	;# 
   348  0299                     	;# 
   349  029A                     	;# 
   350  029A                     	;# 
   351  029E                     	;# 
   352  030C                     	;# 
   353  030D                     	;# 
   354  030E                     	;# 
   355  030F                     	;# 
   356  0310                     	;# 
   357  038C                     	;# 
   358  038D                     	;# 
   359  038E                     	;# 
   360  038F                     	;# 
   361  0390                     	;# 
   362  0391                     	;# 
   363  0392                     	;# 
   364  0393                     	;# 
   365  0394                     	;# 
   366  0395                     	;# 
   367  0396                     	;# 
   368  0397                     	;# 
   369  0398                     	;# 
   370  0399                     	;# 
   371  039D                     	;# 
   372  039E                     	;# 
   373  039F                     	;# 
   374  0415                     	;# 
   375  0416                     	;# 
   376  0417                     	;# 
   377  041C                     	;# 
   378  041D                     	;# 
   379  041E                     	;# 
   380  0498                     	;# 
   381  0498                     	;# 
   382  0499                     	;# 
   383  049A                     	;# 
   384  049B                     	;# 
   385  049B                     	;# 
   386  049C                     	;# 
   387  049D                     	;# 
   388  049E                     	;# 
   389  049F                     	;# 
   390  0511                     	;# 
   391  0515                     	;# 
   392  0617                     	;# 
   393  0618                     	;# 
   394  0619                     	;# 
   395  0619                     	;# 
   396  061A                     	;# 
   397  061B                     	;# 
   398  061C                     	;# 
   399  061C                     	;# 
   400  0691                     	;# 
   401  0692                     	;# 
   402  0693                     	;# 
   403  0694                     	;# 
   404  0695                     	;# 
   405  0696                     	;# 
   406  0697                     	;# 
   407  0698                     	;# 
   408  0699                     	;# 
   409  069A                     	;# 
   410  069B                     	;# 
   411  069C                     	;# 
   412  069D                     	;# 
   413  069E                     	;# 
   414  069F                     	;# 
   415  0E0F                     	;# 
   416  0E10                     	;# 
   417  0E11                     	;# 
   418  0E12                     	;# 
   419  0E13                     	;# 
   420  0E14                     	;# 
   421  0E15                     	;# 
   422  0E17                     	;# 
   423  0E20                     	;# 
   424  0E21                     	;# 
   425  0E22                     	;# 
   426  0E24                     	;# 
   427  0E25                     	;# 
   428  0E28                     	;# 
   429  0E29                     	;# 
   430  0E2A                     	;# 
   431  0E2B                     	;# 
   432  0E90                     	;# 
   433  0E91                     	;# 
   434  0E92                     	;# 
   435  0E93                     	;# 
   436  0E94                     	;# 
   437  0E95                     	;# 
   438  0E96                     	;# 
   439  0E97                     	;# 
   440  0E98                     	;# 
   441  0E99                     	;# 
   442  0E9A                     	;# 
   443  0E9B                     	;# 
   444  0E9C                     	;# 
   445  0E9D                     	;# 
   446  0E9E                     	;# 
   447  0E9F                     	;# 
   448  0EA0                     	;# 
   449  0EA1                     	;# 
   450  0EA2                     	;# 
   451  0EA3                     	;# 
   452  0EA4                     	;# 
   453  0EA5                     	;# 
   454  0EA6                     	;# 
   455  0EA7                     	;# 
   456  0EA8                     	;# 
   457  0EA9                     	;# 
   458  0EAA                     	;# 
   459  0EAB                     	;# 
   460  0EAC                     	;# 
   461  0EAD                     	;# 
   462  0EAE                     	;# 
   463  0EAF                     	;# 
   464  0EB0                     	;# 
   465  0EB1                     	;# 
   466  0EB2                     	;# 
   467  0F0F                     	;# 
   468  0F10                     	;# 
   469  0F11                     	;# 
   470  0F12                     	;# 
   471  0F13                     	;# 
   472  0F14                     	;# 
   473  0F15                     	;# 
   474  0F16                     	;# 
   475  0F17                     	;# 
   476  0F18                     	;# 
   477  0F19                     	;# 
   478  0F1A                     	;# 
   479  0F1B                     	;# 
   480  0F1C                     	;# 
   481  0F1D                     	;# 
   482  0F1E                     	;# 
   483  0F1F                     	;# 
   484  0F20                     	;# 
   485  0F21                     	;# 
   486  0F22                     	;# 
   487  0F23                     	;# 
   488  0F24                     	;# 
   489  0F25                     	;# 
   490  0F26                     	;# 
   491  0F27                     	;# 
   492  0F28                     	;# 
   493  0F29                     	;# 
   494  0F2A                     	;# 
   495  0F2B                     	;# 
   496  0F2C                     	;# 
   497  0F2D                     	;# 
   498  0F2E                     	;# 
   499  0F2F                     	;# 
   500  0F30                     	;# 
   501  0F31                     	;# 
   502  0F32                     	;# 
   503  0F33                     	;# 
   504  0F34                     	;# 
   505  0F35                     	;# 
   506  0F36                     	;# 
   507  0F37                     	;# 
   508  0FE4                     	;# 
   509  0FE5                     	;# 
   510  0FE6                     	;# 
   511  0FE7                     	;# 
   512  0FE8                     	;# 
   513  0FE9                     	;# 
   514  0FEA                     	;# 
   515  0FEB                     	;# 
   516  0FED                     	;# 
   517  0FEE                     	;# 
   518  0FEF                     	;# 
   519  0000                     	;# 
   520  0001                     	;# 
   521  0002                     	;# 
   522  0003                     	;# 
   523  0004                     	;# 
   524  0005                     	;# 
   525  0006                     	;# 
   526  0007                     	;# 
   527  0008                     	;# 
   528  0009                     	;# 
   529  000A                     	;# 
   530  000B                     	;# 
   531  000C                     	;# 
   532  000D                     	;# 
   533  000E                     	;# 
   534  000F                     	;# 
   535  0010                     	;# 
   536  0011                     	;# 
   537  0012                     	;# 
   538  0013                     	;# 
   539  0015                     	;# 
   540  0016                     	;# 
   541  0016                     	;# 
   542  0017                     	;# 
   543  0018                     	;# 
   544  0019                     	;# 
   545  001A                     	;# 
   546  001B                     	;# 
   547  001C                     	;# 
   548  008C                     	;# 
   549  008D                     	;# 
   550  008E                     	;# 
   551  008F                     	;# 
   552  0090                     	;# 
   553  0091                     	;# 
   554  0092                     	;# 
   555  0093                     	;# 
   556  0095                     	;# 
   557  0096                     	;# 
   558  0097                     	;# 
   559  0098                     	;# 
   560  0099                     	;# 
   561  009A                     	;# 
   562  009B                     	;# 
   563  009B                     	;# 
   564  009C                     	;# 
   565  009D                     	;# 
   566  009E                     	;# 
   567  009F                     	;# 
   568  010C                     	;# 
   569  010D                     	;# 
   570  010E                     	;# 
   571  010F                     	;# 
   572  0110                     	;# 
   573  0111                     	;# 
   574  0112                     	;# 
   575  0113                     	;# 
   576  0114                     	;# 
   577  0115                     	;# 
   578  0116                     	;# 
   579  0117                     	;# 
   580  0118                     	;# 
   581  0119                     	;# 
   582  011A                     	;# 
   583  011B                     	;# 
   584  011B                     	;# 
   585  011C                     	;# 
   586  018C                     	;# 
   587  018D                     	;# 
   588  018E                     	;# 
   589  018F                     	;# 
   590  0190                     	;# 
   591  0191                     	;# 
   592  0191                     	;# 
   593  0192                     	;# 
   594  0193                     	;# 
   595  0193                     	;# 
   596  0194                     	;# 
   597  0195                     	;# 
   598  0196                     	;# 
   599  0197                     	;# 
   600  0199                     	;# 
   601  0199                     	;# 
   602  0199                     	;# 
   603  019A                     	;# 
   604  019A                     	;# 
   605  019A                     	;# 
   606  019B                     	;# 
   607  019B                     	;# 
   608  019B                     	;# 
   609  019B                     	;# 
   610  019B                     	;# 
   611  019C                     	;# 
   612  019C                     	;# 
   613  019C                     	;# 
   614  019D                     	;# 
   615  019D                     	;# 
   616  019D                     	;# 
   617  019E                     	;# 
   618  019E                     	;# 
   619  019E                     	;# 
   620  019F                     	;# 
   621  019F                     	;# 
   622  019F                     	;# 
   623  019F                     	;# 
   624  019F                     	;# 
   625  020C                     	;# 
   626  020D                     	;# 
   627  020E                     	;# 
   628  020F                     	;# 
   629  0210                     	;# 
   630  0211                     	;# 
   631  0211                     	;# 
   632  0212                     	;# 
   633  0212                     	;# 
   634  0213                     	;# 
   635  0213                     	;# 
   636  0214                     	;# 
   637  0214                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0215                     	;# 
   641  0215                     	;# 
   642  0216                     	;# 
   643  0216                     	;# 
   644  0217                     	;# 
   645  0217                     	;# 
   646  028C                     	;# 
   647  028D                     	;# 
   648  028E                     	;# 
   649  028F                     	;# 
   650  0290                     	;# 
   651  0291                     	;# 
   652  0291                     	;# 
   653  0292                     	;# 
   654  0293                     	;# 
   655  0293                     	;# 
   656  0298                     	;# 
   657  0298                     	;# 
   658  0299                     	;# 
   659  029A                     	;# 
   660  029A                     	;# 
   661  029E                     	;# 
   662  030C                     	;# 
   663  030D                     	;# 
   664  030E                     	;# 
   665  030F                     	;# 
   666  0310                     	;# 
   667  038C                     	;# 
   668  038D                     	;# 
   669  038E                     	;# 
   670  038F                     	;# 
   671  0390                     	;# 
   672  0391                     	;# 
   673  0392                     	;# 
   674  0393                     	;# 
   675  0394                     	;# 
   676  0395                     	;# 
   677  0396                     	;# 
   678  0397                     	;# 
   679  0398                     	;# 
   680  0399                     	;# 
   681  039D                     	;# 
   682  039E                     	;# 
   683  039F                     	;# 
   684  0415                     	;# 
   685  0416                     	;# 
   686  0417                     	;# 
   687  041C                     	;# 
   688  041D                     	;# 
   689  041E                     	;# 
   690  0498                     	;# 
   691  0498                     	;# 
   692  0499                     	;# 
   693  049A                     	;# 
   694  049B                     	;# 
   695  049B                     	;# 
   696  049C                     	;# 
   697  049D                     	;# 
   698  049E                     	;# 
   699  049F                     	;# 
   700  0511                     	;# 
   701  0515                     	;# 
   702  0617                     	;# 
   703  0618                     	;# 
   704  0619                     	;# 
   705  0619                     	;# 
   706  061A                     	;# 
   707  061B                     	;# 
   708  061C                     	;# 
   709  061C                     	;# 
   710  0691                     	;# 
   711  0692                     	;# 
   712  0693                     	;# 
   713  0694                     	;# 
   714  0695                     	;# 
   715  0696                     	;# 
   716  0697                     	;# 
   717  0698                     	;# 
   718  0699                     	;# 
   719  069A                     	;# 
   720  069B                     	;# 
   721  069C                     	;# 
   722  069D                     	;# 
   723  069E                     	;# 
   724  069F                     	;# 
   725  0E0F                     	;# 
   726  0E10                     	;# 
   727  0E11                     	;# 
   728  0E12                     	;# 
   729  0E13                     	;# 
   730  0E14                     	;# 
   731  0E15                     	;# 
   732  0E17                     	;# 
   733  0E20                     	;# 
   734  0E21                     	;# 
   735  0E22                     	;# 
   736  0E24                     	;# 
   737  0E25                     	;# 
   738  0E28                     	;# 
   739  0E29                     	;# 
   740  0E2A                     	;# 
   741  0E2B                     	;# 
   742  0E90                     	;# 
   743  0E91                     	;# 
   744  0E92                     	;# 
   745  0E93                     	;# 
   746  0E94                     	;# 
   747  0E95                     	;# 
   748  0E96                     	;# 
   749  0E97                     	;# 
   750  0E98                     	;# 
   751  0E99                     	;# 
   752  0E9A                     	;# 
   753  0E9B                     	;# 
   754  0E9C                     	;# 
   755  0E9D                     	;# 
   756  0E9E                     	;# 
   757  0E9F                     	;# 
   758  0EA0                     	;# 
   759  0EA1                     	;# 
   760  0EA2                     	;# 
   761  0EA3                     	;# 
   762  0EA4                     	;# 
   763  0EA5                     	;# 
   764  0EA6                     	;# 
   765  0EA7                     	;# 
   766  0EA8                     	;# 
   767  0EA9                     	;# 
   768  0EAA                     	;# 
   769  0EAB                     	;# 
   770  0EAC                     	;# 
   771  0EAD                     	;# 
   772  0EAE                     	;# 
   773  0EAF                     	;# 
   774  0EB0                     	;# 
   775  0EB1                     	;# 
   776  0EB2                     	;# 
   777  0F0F                     	;# 
   778  0F10                     	;# 
   779  0F11                     	;# 
   780  0F12                     	;# 
   781  0F13                     	;# 
   782  0F14                     	;# 
   783  0F15                     	;# 
   784  0F16                     	;# 
   785  0F17                     	;# 
   786  0F18                     	;# 
   787  0F19                     	;# 
   788  0F1A                     	;# 
   789  0F1B                     	;# 
   790  0F1C                     	;# 
   791  0F1D                     	;# 
   792  0F1E                     	;# 
   793  0F1F                     	;# 
   794  0F20                     	;# 
   795  0F21                     	;# 
   796  0F22                     	;# 
   797  0F23                     	;# 
   798  0F24                     	;# 
   799  0F25                     	;# 
   800  0F26                     	;# 
   801  0F27                     	;# 
   802  0F28                     	;# 
   803  0F29                     	;# 
   804  0F2A                     	;# 
   805  0F2B                     	;# 
   806  0F2C                     	;# 
   807  0F2D                     	;# 
   808  0F2E                     	;# 
   809  0F2F                     	;# 
   810  0F30                     	;# 
   811  0F31                     	;# 
   812  0F32                     	;# 
   813  0F33                     	;# 
   814  0F34                     	;# 
   815  0F35                     	;# 
   816  0F36                     	;# 
   817  0F37                     	;# 
   818  0FE4                     	;# 
   819  0FE5                     	;# 
   820  0FE6                     	;# 
   821  0FE7                     	;# 
   822  0FE8                     	;# 
   823  0FE9                     	;# 
   824  0FEA                     	;# 
   825  0FEB                     	;# 
   826  0FED                     	;# 
   827  0FEE                     	;# 
   828  0FEF                     	;# 
   829  0000                     	;# 
   830  0001                     	;# 
   831  0002                     	;# 
   832  0003                     	;# 
   833  0004                     	;# 
   834  0005                     	;# 
   835  0006                     	;# 
   836  0007                     	;# 
   837  0008                     	;# 
   838  0009                     	;# 
   839  000A                     	;# 
   840  000B                     	;# 
   841  000C                     	;# 
   842  000D                     	;# 
   843  000E                     	;# 
   844  000F                     	;# 
   845  0010                     	;# 
   846  0011                     	;# 
   847  0012                     	;# 
   848  0013                     	;# 
   849  0015                     	;# 
   850  0016                     	;# 
   851  0016                     	;# 
   852  0017                     	;# 
   853  0018                     	;# 
   854  0019                     	;# 
   855  001A                     	;# 
   856  001B                     	;# 
   857  001C                     	;# 
   858  008C                     	;# 
   859  008D                     	;# 
   860  008E                     	;# 
   861  008F                     	;# 
   862  0090                     	;# 
   863  0091                     	;# 
   864  0092                     	;# 
   865  0093                     	;# 
   866  0095                     	;# 
   867  0096                     	;# 
   868  0097                     	;# 
   869  0098                     	;# 
   870  0099                     	;# 
   871  009A                     	;# 
   872  009B                     	;# 
   873  009B                     	;# 
   874  009C                     	;# 
   875  009D                     	;# 
   876  009E                     	;# 
   877  009F                     	;# 
   878  010C                     	;# 
   879  010D                     	;# 
   880  010E                     	;# 
   881  010F                     	;# 
   882  0110                     	;# 
   883  0111                     	;# 
   884  0112                     	;# 
   885  0113                     	;# 
   886  0114                     	;# 
   887  0115                     	;# 
   888  0116                     	;# 
   889  0117                     	;# 
   890  0118                     	;# 
   891  0119                     	;# 
   892  011A                     	;# 
   893  011B                     	;# 
   894  011B                     	;# 
   895  011C                     	;# 
   896  018C                     	;# 
   897  018D                     	;# 
   898  018E                     	;# 
   899  018F                     	;# 
   900  0190                     	;# 
   901  0191                     	;# 
   902  0191                     	;# 
   903  0192                     	;# 
   904  0193                     	;# 
   905  0193                     	;# 
   906  0194                     	;# 
   907  0195                     	;# 
   908  0196                     	;# 
   909  0197                     	;# 
   910  0199                     	;# 
   911  0199                     	;# 
   912  0199                     	;# 
   913  019A                     	;# 
   914  019A                     	;# 
   915  019A                     	;# 
   916  019B                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019C                     	;# 
   922  019C                     	;# 
   923  019C                     	;# 
   924  019D                     	;# 
   925  019D                     	;# 
   926  019D                     	;# 
   927  019E                     	;# 
   928  019E                     	;# 
   929  019E                     	;# 
   930  019F                     	;# 
   931  019F                     	;# 
   932  019F                     	;# 
   933  019F                     	;# 
   934  019F                     	;# 
   935  020C                     	;# 
   936  020D                     	;# 
   937  020E                     	;# 
   938  020F                     	;# 
   939  0210                     	;# 
   940  0211                     	;# 
   941  0211                     	;# 
   942  0212                     	;# 
   943  0212                     	;# 
   944  0213                     	;# 
   945  0213                     	;# 
   946  0214                     	;# 
   947  0214                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0216                     	;# 
   953  0216                     	;# 
   954  0217                     	;# 
   955  0217                     	;# 
   956  028C                     	;# 
   957  028D                     	;# 
   958  028E                     	;# 
   959  028F                     	;# 
   960  0290                     	;# 
   961  0291                     	;# 
   962  0291                     	;# 
   963  0292                     	;# 
   964  0293                     	;# 
   965  0293                     	;# 
   966  0298                     	;# 
   967  0298                     	;# 
   968  0299                     	;# 
   969  029A                     	;# 
   970  029A                     	;# 
   971  029E                     	;# 
   972  030C                     	;# 
   973  030D                     	;# 
   974  030E                     	;# 
   975  030F                     	;# 
   976  0310                     	;# 
   977  038C                     	;# 
   978  038D                     	;# 
   979  038E                     	;# 
   980  038F                     	;# 
   981  0390                     	;# 
   982  0391                     	;# 
   983  0392                     	;# 
   984  0393                     	;# 
   985  0394                     	;# 
   986  0395                     	;# 
   987  0396                     	;# 
   988  0397                     	;# 
   989  0398                     	;# 
   990  0399                     	;# 
   991  039D                     	;# 
   992  039E                     	;# 
   993  039F                     	;# 
   994  0415                     	;# 
   995  0416                     	;# 
   996  0417                     	;# 
   997  041C                     	;# 
   998  041D                     	;# 
   999  041E                     	;# 
  1000  0498                     	;# 
  1001  0498                     	;# 
  1002  0499                     	;# 
  1003  049A                     	;# 
  1004  049B                     	;# 
  1005  049B                     	;# 
  1006  049C                     	;# 
  1007  049D                     	;# 
  1008  049E                     	;# 
  1009  049F                     	;# 
  1010  0511                     	;# 
  1011  0515                     	;# 
  1012  0617                     	;# 
  1013  0618                     	;# 
  1014  0619                     	;# 
  1015  0619                     	;# 
  1016  061A                     	;# 
  1017  061B                     	;# 
  1018  061C                     	;# 
  1019  061C                     	;# 
  1020  0691                     	;# 
  1021  0692                     	;# 
  1022  0693                     	;# 
  1023  0694                     	;# 
  1024  0695                     	;# 
  1025  0696                     	;# 
  1026  0697                     	;# 
  1027  0698                     	;# 
  1028  0699                     	;# 
  1029  069A                     	;# 
  1030  069B                     	;# 
  1031  069C                     	;# 
  1032  069D                     	;# 
  1033  069E                     	;# 
  1034  069F                     	;# 
  1035  0E0F                     	;# 
  1036  0E10                     	;# 
  1037  0E11                     	;# 
  1038  0E12                     	;# 
  1039  0E13                     	;# 
  1040  0E14                     	;# 
  1041  0E15                     	;# 
  1042  0E17                     	;# 
  1043  0E20                     	;# 
  1044  0E21                     	;# 
  1045  0E22                     	;# 
  1046  0E24                     	;# 
  1047  0E25                     	;# 
  1048  0E28                     	;# 
  1049  0E29                     	;# 
  1050  0E2A                     	;# 
  1051  0E2B                     	;# 
  1052  0E90                     	;# 
  1053  0E91                     	;# 
  1054  0E92                     	;# 
  1055  0E93                     	;# 
  1056  0E94                     	;# 
  1057  0E95                     	;# 
  1058  0E96                     	;# 
  1059  0E97                     	;# 
  1060  0E98                     	;# 
  1061  0E99                     	;# 
  1062  0E9A                     	;# 
  1063  0E9B                     	;# 
  1064  0E9C                     	;# 
  1065  0E9D                     	;# 
  1066  0E9E                     	;# 
  1067  0E9F                     	;# 
  1068  0EA0                     	;# 
  1069  0EA1                     	;# 
  1070  0EA2                     	;# 
  1071  0EA3                     	;# 
  1072  0EA4                     	;# 
  1073  0EA5                     	;# 
  1074  0EA6                     	;# 
  1075  0EA7                     	;# 
  1076  0EA8                     	;# 
  1077  0EA9                     	;# 
  1078  0EAA                     	;# 
  1079  0EAB                     	;# 
  1080  0EAC                     	;# 
  1081  0EAD                     	;# 
  1082  0EAE                     	;# 
  1083  0EAF                     	;# 
  1084  0EB0                     	;# 
  1085  0EB1                     	;# 
  1086  0EB2                     	;# 
  1087  0F0F                     	;# 
  1088  0F10                     	;# 
  1089  0F11                     	;# 
  1090  0F12                     	;# 
  1091  0F13                     	;# 
  1092  0F14                     	;# 
  1093  0F15                     	;# 
  1094  0F16                     	;# 
  1095  0F17                     	;# 
  1096  0F18                     	;# 
  1097  0F19                     	;# 
  1098  0F1A                     	;# 
  1099  0F1B                     	;# 
  1100  0F1C                     	;# 
  1101  0F1D                     	;# 
  1102  0F1E                     	;# 
  1103  0F1F                     	;# 
  1104  0F20                     	;# 
  1105  0F21                     	;# 
  1106  0F22                     	;# 
  1107  0F23                     	;# 
  1108  0F24                     	;# 
  1109  0F25                     	;# 
  1110  0F26                     	;# 
  1111  0F27                     	;# 
  1112  0F28                     	;# 
  1113  0F29                     	;# 
  1114  0F2A                     	;# 
  1115  0F2B                     	;# 
  1116  0F2C                     	;# 
  1117  0F2D                     	;# 
  1118  0F2E                     	;# 
  1119  0F2F                     	;# 
  1120  0F30                     	;# 
  1121  0F31                     	;# 
  1122  0F32                     	;# 
  1123  0F33                     	;# 
  1124  0F34                     	;# 
  1125  0F35                     	;# 
  1126  0F36                     	;# 
  1127  0F37                     	;# 
  1128  0FE4                     	;# 
  1129  0FE5                     	;# 
  1130  0FE6                     	;# 
  1131  0FE7                     	;# 
  1132  0FE8                     	;# 
  1133  0FE9                     	;# 
  1134  0FEA                     	;# 
  1135  0FEB                     	;# 
  1136  0FED                     	;# 
  1137  0FEE                     	;# 
  1138  0FEF                     	;# 
  1139  0000                     	;# 
  1140  0001                     	;# 
  1141  0002                     	;# 
  1142  0003                     	;# 
  1143  0004                     	;# 
  1144  0005                     	;# 
  1145  0006                     	;# 
  1146  0007                     	;# 
  1147  0008                     	;# 
  1148  0009                     	;# 
  1149  000A                     	;# 
  1150  000B                     	;# 
  1151  000C                     	;# 
  1152  000D                     	;# 
  1153  000E                     	;# 
  1154  000F                     	;# 
  1155  0010                     	;# 
  1156  0011                     	;# 
  1157  0012                     	;# 
  1158  0013                     	;# 
  1159  0015                     	;# 
  1160  0016                     	;# 
  1161  0016                     	;# 
  1162  0017                     	;# 
  1163  0018                     	;# 
  1164  0019                     	;# 
  1165  001A                     	;# 
  1166  001B                     	;# 
  1167  001C                     	;# 
  1168  008C                     	;# 
  1169  008D                     	;# 
  1170  008E                     	;# 
  1171  008F                     	;# 
  1172  0090                     	;# 
  1173  0091                     	;# 
  1174  0092                     	;# 
  1175  0093                     	;# 
  1176  0095                     	;# 
  1177  0096                     	;# 
  1178  0097                     	;# 
  1179  0098                     	;# 
  1180  0099                     	;# 
  1181  009A                     	;# 
  1182  009B                     	;# 
  1183  009B                     	;# 
  1184  009C                     	;# 
  1185  009D                     	;# 
  1186  009E                     	;# 
  1187  009F                     	;# 
  1188  010C                     	;# 
  1189  010D                     	;# 
  1190  010E                     	;# 
  1191  010F                     	;# 
  1192  0110                     	;# 
  1193  0111                     	;# 
  1194  0112                     	;# 
  1195  0113                     	;# 
  1196  0114                     	;# 
  1197  0115                     	;# 
  1198  0116                     	;# 
  1199  0117                     	;# 
  1200  0118                     	;# 
  1201  0119                     	;# 
  1202  011A                     	;# 
  1203  011B                     	;# 
  1204  011B                     	;# 
  1205  011C                     	;# 
  1206  018C                     	;# 
  1207  018D                     	;# 
  1208  018E                     	;# 
  1209  018F                     	;# 
  1210  0190                     	;# 
  1211  0191                     	;# 
  1212  0191                     	;# 
  1213  0192                     	;# 
  1214  0193                     	;# 
  1215  0193                     	;# 
  1216  0194                     	;# 
  1217  0195                     	;# 
  1218  0196                     	;# 
  1219  0197                     	;# 
  1220  0199                     	;# 
  1221  0199                     	;# 
  1222  0199                     	;# 
  1223  019A                     	;# 
  1224  019A                     	;# 
  1225  019A                     	;# 
  1226  019B                     	;# 
  1227  019B                     	;# 
  1228  019B                     	;# 
  1229  019B                     	;# 
  1230  019B                     	;# 
  1231  019C                     	;# 
  1232  019C                     	;# 
  1233  019C                     	;# 
  1234  019D                     	;# 
  1235  019D                     	;# 
  1236  019D                     	;# 
  1237  019E                     	;# 
  1238  019E                     	;# 
  1239  019E                     	;# 
  1240  019F                     	;# 
  1241  019F                     	;# 
  1242  019F                     	;# 
  1243  019F                     	;# 
  1244  019F                     	;# 
  1245  020C                     	;# 
  1246  020D                     	;# 
  1247  020E                     	;# 
  1248  020F                     	;# 
  1249  0210                     	;# 
  1250  0211                     	;# 
  1251  0211                     	;# 
  1252  0212                     	;# 
  1253  0212                     	;# 
  1254  0213                     	;# 
  1255  0213                     	;# 
  1256  0214                     	;# 
  1257  0214                     	;# 
  1258  0215                     	;# 
  1259  0215                     	;# 
  1260  0215                     	;# 
  1261  0215                     	;# 
  1262  0216                     	;# 
  1263  0216                     	;# 
  1264  0217                     	;# 
  1265  0217                     	;# 
  1266  028C                     	;# 
  1267  028D                     	;# 
  1268  028E                     	;# 
  1269  028F                     	;# 
  1270  0290                     	;# 
  1271  0291                     	;# 
  1272  0291                     	;# 
  1273  0292                     	;# 
  1274  0293                     	;# 
  1275  0293                     	;# 
  1276  0298                     	;# 
  1277  0298                     	;# 
  1278  0299                     	;# 
  1279  029A                     	;# 
  1280  029A                     	;# 
  1281  029E                     	;# 
  1282  030C                     	;# 
  1283  030D                     	;# 
  1284  030E                     	;# 
  1285  030F                     	;# 
  1286  0310                     	;# 
  1287  038C                     	;# 
  1288  038D                     	;# 
  1289  038E                     	;# 
  1290  038F                     	;# 
  1291  0390                     	;# 
  1292  0391                     	;# 
  1293  0392                     	;# 
  1294  0393                     	;# 
  1295  0394                     	;# 
  1296  0395                     	;# 
  1297  0396                     	;# 
  1298  0397                     	;# 
  1299  0398                     	;# 
  1300  0399                     	;# 
  1301  039D                     	;# 
  1302  039E                     	;# 
  1303  039F                     	;# 
  1304  0415                     	;# 
  1305  0416                     	;# 
  1306  0417                     	;# 
  1307  041C                     	;# 
  1308  041D                     	;# 
  1309  041E                     	;# 
  1310  0498                     	;# 
  1311  0498                     	;# 
  1312  0499                     	;# 
  1313  049A                     	;# 
  1314  049B                     	;# 
  1315  049B                     	;# 
  1316  049C                     	;# 
  1317  049D                     	;# 
  1318  049E                     	;# 
  1319  049F                     	;# 
  1320  0511                     	;# 
  1321  0515                     	;# 
  1322  0617                     	;# 
  1323  0618                     	;# 
  1324  0619                     	;# 
  1325  0619                     	;# 
  1326  061A                     	;# 
  1327  061B                     	;# 
  1328  061C                     	;# 
  1329  061C                     	;# 
  1330  0691                     	;# 
  1331  0692                     	;# 
  1332  0693                     	;# 
  1333  0694                     	;# 
  1334  0695                     	;# 
  1335  0696                     	;# 
  1336  0697                     	;# 
  1337  0698                     	;# 
  1338  0699                     	;# 
  1339  069A                     	;# 
  1340  069B                     	;# 
  1341  069C                     	;# 
  1342  069D                     	;# 
  1343  069E                     	;# 
  1344  069F                     	;# 
  1345  0E0F                     	;# 
  1346  0E10                     	;# 
  1347  0E11                     	;# 
  1348  0E12                     	;# 
  1349  0E13                     	;# 
  1350  0E14                     	;# 
  1351  0E15                     	;# 
  1352  0E17                     	;# 
  1353  0E20                     	;# 
  1354  0E21                     	;# 
  1355  0E22                     	;# 
  1356  0E24                     	;# 
  1357  0E25                     	;# 
  1358  0E28                     	;# 
  1359  0E29                     	;# 
  1360  0E2A                     	;# 
  1361  0E2B                     	;# 
  1362  0E90                     	;# 
  1363  0E91                     	;# 
  1364  0E92                     	;# 
  1365  0E93                     	;# 
  1366  0E94                     	;# 
  1367  0E95                     	;# 
  1368  0E96                     	;# 
  1369  0E97                     	;# 
  1370  0E98                     	;# 
  1371  0E99                     	;# 
  1372  0E9A                     	;# 
  1373  0E9B                     	;# 
  1374  0E9C                     	;# 
  1375  0E9D                     	;# 
  1376  0E9E                     	;# 
  1377  0E9F                     	;# 
  1378  0EA0                     	;# 
  1379  0EA1                     	;# 
  1380  0EA2                     	;# 
  1381  0EA3                     	;# 
  1382  0EA4                     	;# 
  1383  0EA5                     	;# 
  1384  0EA6                     	;# 
  1385  0EA7                     	;# 
  1386  0EA8                     	;# 
  1387  0EA9                     	;# 
  1388  0EAA                     	;# 
  1389  0EAB                     	;# 
  1390  0EAC                     	;# 
  1391  0EAD                     	;# 
  1392  0EAE                     	;# 
  1393  0EAF                     	;# 
  1394  0EB0                     	;# 
  1395  0EB1                     	;# 
  1396  0EB2                     	;# 
  1397  0F0F                     	;# 
  1398  0F10                     	;# 
  1399  0F11                     	;# 
  1400  0F12                     	;# 
  1401  0F13                     	;# 
  1402  0F14                     	;# 
  1403  0F15                     	;# 
  1404  0F16                     	;# 
  1405  0F17                     	;# 
  1406  0F18                     	;# 
  1407  0F19                     	;# 
  1408  0F1A                     	;# 
  1409  0F1B                     	;# 
  1410  0F1C                     	;# 
  1411  0F1D                     	;# 
  1412  0F1E                     	;# 
  1413  0F1F                     	;# 
  1414  0F20                     	;# 
  1415  0F21                     	;# 
  1416  0F22                     	;# 
  1417  0F23                     	;# 
  1418  0F24                     	;# 
  1419  0F25                     	;# 
  1420  0F26                     	;# 
  1421  0F27                     	;# 
  1422  0F28                     	;# 
  1423  0F29                     	;# 
  1424  0F2A                     	;# 
  1425  0F2B                     	;# 
  1426  0F2C                     	;# 
  1427  0F2D                     	;# 
  1428  0F2E                     	;# 
  1429  0F2F                     	;# 
  1430  0F30                     	;# 
  1431  0F31                     	;# 
  1432  0F32                     	;# 
  1433  0F33                     	;# 
  1434  0F34                     	;# 
  1435  0F35                     	;# 
  1436  0F36                     	;# 
  1437  0F37                     	;# 
  1438  0FE4                     	;# 
  1439  0FE5                     	;# 
  1440  0FE6                     	;# 
  1441  0FE7                     	;# 
  1442  0FE8                     	;# 
  1443  0FE9                     	;# 
  1444  0FEA                     	;# 
  1445  0FEB                     	;# 
  1446  0FED                     	;# 
  1447  0FEE                     	;# 
  1448  0FEF                     	;# 
  1449  0000                     	;# 
  1450  0001                     	;# 
  1451  0002                     	;# 
  1452  0003                     	;# 
  1453  0004                     	;# 
  1454  0005                     	;# 
  1455  0006                     	;# 
  1456  0007                     	;# 
  1457  0008                     	;# 
  1458  0009                     	;# 
  1459  000A                     	;# 
  1460  000B                     	;# 
  1461  000C                     	;# 
  1462  000D                     	;# 
  1463  000E                     	;# 
  1464  000F                     	;# 
  1465  0010                     	;# 
  1466  0011                     	;# 
  1467  0012                     	;# 
  1468  0013                     	;# 
  1469  0015                     	;# 
  1470  0016                     	;# 
  1471  0016                     	;# 
  1472  0017                     	;# 
  1473  0018                     	;# 
  1474  0019                     	;# 
  1475  001A                     	;# 
  1476  001B                     	;# 
  1477  001C                     	;# 
  1478  008C                     	;# 
  1479  008D                     	;# 
  1480  008E                     	;# 
  1481  008F                     	;# 
  1482  0090                     	;# 
  1483  0091                     	;# 
  1484  0092                     	;# 
  1485  0093                     	;# 
  1486  0095                     	;# 
  1487  0096                     	;# 
  1488  0097                     	;# 
  1489  0098                     	;# 
  1490  0099                     	;# 
  1491  009A                     	;# 
  1492  009B                     	;# 
  1493  009B                     	;# 
  1494  009C                     	;# 
  1495  009D                     	;# 
  1496  009E                     	;# 
  1497  009F                     	;# 
  1498  010C                     	;# 
  1499  010D                     	;# 
  1500  010E                     	;# 
  1501  010F                     	;# 
  1502  0110                     	;# 
  1503  0111                     	;# 
  1504  0112                     	;# 
  1505  0113                     	;# 
  1506  0114                     	;# 
  1507  0115                     	;# 
  1508  0116                     	;# 
  1509  0117                     	;# 
  1510  0118                     	;# 
  1511  0119                     	;# 
  1512  011A                     	;# 
  1513  011B                     	;# 
  1514  011B                     	;# 
  1515  011C                     	;# 
  1516  018C                     	;# 
  1517  018D                     	;# 
  1518  018E                     	;# 
  1519  018F                     	;# 
  1520  0190                     	;# 
  1521  0191                     	;# 
  1522  0191                     	;# 
  1523  0192                     	;# 
  1524  0193                     	;# 
  1525  0193                     	;# 
  1526  0194                     	;# 
  1527  0195                     	;# 
  1528  0196                     	;# 
  1529  0197                     	;# 
  1530  0199                     	;# 
  1531  0199                     	;# 
  1532  0199                     	;# 
  1533  019A                     	;# 
  1534  019A                     	;# 
  1535  019A                     	;# 
  1536  019B                     	;# 
  1537  019B                     	;# 
  1538  019B                     	;# 
  1539  019B                     	;# 
  1540  019B                     	;# 
  1541  019C                     	;# 
  1542  019C                     	;# 
  1543  019C                     	;# 
  1544  019D                     	;# 
  1545  019D                     	;# 
  1546  019D                     	;# 
  1547  019E                     	;# 
  1548  019E                     	;# 
  1549  019E                     	;# 
  1550  019F                     	;# 
  1551  019F                     	;# 
  1552  019F                     	;# 
  1553  019F                     	;# 
  1554  019F                     	;# 
  1555  020C                     	;# 
  1556  020D                     	;# 
  1557  020E                     	;# 
  1558  020F                     	;# 
  1559  0210                     	;# 
  1560  0211                     	;# 
  1561  0211                     	;# 
  1562  0212                     	;# 
  1563  0212                     	;# 
  1564  0213                     	;# 
  1565  0213                     	;# 
  1566  0214                     	;# 
  1567  0214                     	;# 
  1568  0215                     	;# 
  1569  0215                     	;# 
  1570  0215                     	;# 
  1571  0215                     	;# 
  1572  0216                     	;# 
  1573  0216                     	;# 
  1574  0217                     	;# 
  1575  0217                     	;# 
  1576  028C                     	;# 
  1577  028D                     	;# 
  1578  028E                     	;# 
  1579  028F                     	;# 
  1580  0290                     	;# 
  1581  0291                     	;# 
  1582  0291                     	;# 
  1583  0292                     	;# 
  1584  0293                     	;# 
  1585  0293                     	;# 
  1586  0298                     	;# 
  1587  0298                     	;# 
  1588  0299                     	;# 
  1589  029A                     	;# 
  1590  029A                     	;# 
  1591  029E                     	;# 
  1592  030C                     	;# 
  1593  030D                     	;# 
  1594  030E                     	;# 
  1595  030F                     	;# 
  1596  0310                     	;# 
  1597  038C                     	;# 
  1598  038D                     	;# 
  1599  038E                     	;# 
  1600  038F                     	;# 
  1601  0390                     	;# 
  1602  0391                     	;# 
  1603  0392                     	;# 
  1604  0393                     	;# 
  1605  0394                     	;# 
  1606  0395                     	;# 
  1607  0396                     	;# 
  1608  0397                     	;# 
  1609  0398                     	;# 
  1610  0399                     	;# 
  1611  039D                     	;# 
  1612  039E                     	;# 
  1613  039F                     	;# 
  1614  0415                     	;# 
  1615  0416                     	;# 
  1616  0417                     	;# 
  1617  041C                     	;# 
  1618  041D                     	;# 
  1619  041E                     	;# 
  1620  0498                     	;# 
  1621  0498                     	;# 
  1622  0499                     	;# 
  1623  049A                     	;# 
  1624  049B                     	;# 
  1625  049B                     	;# 
  1626  049C                     	;# 
  1627  049D                     	;# 
  1628  049E                     	;# 
  1629  049F                     	;# 
  1630  0511                     	;# 
  1631  0515                     	;# 
  1632  0617                     	;# 
  1633  0618                     	;# 
  1634  0619                     	;# 
  1635  0619                     	;# 
  1636  061A                     	;# 
  1637  061B                     	;# 
  1638  061C                     	;# 
  1639  061C                     	;# 
  1640  0691                     	;# 
  1641  0692                     	;# 
  1642  0693                     	;# 
  1643  0694                     	;# 
  1644  0695                     	;# 
  1645  0696                     	;# 
  1646  0697                     	;# 
  1647  0698                     	;# 
  1648  0699                     	;# 
  1649  069A                     	;# 
  1650  069B                     	;# 
  1651  069C                     	;# 
  1652  069D                     	;# 
  1653  069E                     	;# 
  1654  069F                     	;# 
  1655  0E0F                     	;# 
  1656  0E10                     	;# 
  1657  0E11                     	;# 
  1658  0E12                     	;# 
  1659  0E13                     	;# 
  1660  0E14                     	;# 
  1661  0E15                     	;# 
  1662  0E17                     	;# 
  1663  0E20                     	;# 
  1664  0E21                     	;# 
  1665  0E22                     	;# 
  1666  0E24                     	;# 
  1667  0E25                     	;# 
  1668  0E28                     	;# 
  1669  0E29                     	;# 
  1670  0E2A                     	;# 
  1671  0E2B                     	;# 
  1672  0E90                     	;# 
  1673  0E91                     	;# 
  1674  0E92                     	;# 
  1675  0E93                     	;# 
  1676  0E94                     	;# 
  1677  0E95                     	;# 
  1678  0E96                     	;# 
  1679  0E97                     	;# 
  1680  0E98                     	;# 
  1681  0E99                     	;# 
  1682  0E9A                     	;# 
  1683  0E9B                     	;# 
  1684  0E9C                     	;# 
  1685  0E9D                     	;# 
  1686  0E9E                     	;# 
  1687  0E9F                     	;# 
  1688  0EA0                     	;# 
  1689  0EA1                     	;# 
  1690  0EA2                     	;# 
  1691  0EA3                     	;# 
  1692  0EA4                     	;# 
  1693  0EA5                     	;# 
  1694  0EA6                     	;# 
  1695  0EA7                     	;# 
  1696  0EA8                     	;# 
  1697  0EA9                     	;# 
  1698  0EAA                     	;# 
  1699  0EAB                     	;# 
  1700  0EAC                     	;# 
  1701  0EAD                     	;# 
  1702  0EAE                     	;# 
  1703  0EAF                     	;# 
  1704  0EB0                     	;# 
  1705  0EB1                     	;# 
  1706  0EB2                     	;# 
  1707  0F0F                     	;# 
  1708  0F10                     	;# 
  1709  0F11                     	;# 
  1710  0F12                     	;# 
  1711  0F13                     	;# 
  1712  0F14                     	;# 
  1713  0F15                     	;# 
  1714  0F16                     	;# 
  1715  0F17                     	;# 
  1716  0F18                     	;# 
  1717  0F19                     	;# 
  1718  0F1A                     	;# 
  1719  0F1B                     	;# 
  1720  0F1C                     	;# 
  1721  0F1D                     	;# 
  1722  0F1E                     	;# 
  1723  0F1F                     	;# 
  1724  0F20                     	;# 
  1725  0F21                     	;# 
  1726  0F22                     	;# 
  1727  0F23                     	;# 
  1728  0F24                     	;# 
  1729  0F25                     	;# 
  1730  0F26                     	;# 
  1731  0F27                     	;# 
  1732  0F28                     	;# 
  1733  0F29                     	;# 
  1734  0F2A                     	;# 
  1735  0F2B                     	;# 
  1736  0F2C                     	;# 
  1737  0F2D                     	;# 
  1738  0F2E                     	;# 
  1739  0F2F                     	;# 
  1740  0F30                     	;# 
  1741  0F31                     	;# 
  1742  0F32                     	;# 
  1743  0F33                     	;# 
  1744  0F34                     	;# 
  1745  0F35                     	;# 
  1746  0F36                     	;# 
  1747  0F37                     	;# 
  1748  0FE4                     	;# 
  1749  0FE5                     	;# 
  1750  0FE6                     	;# 
  1751  0FE7                     	;# 
  1752  0FE8                     	;# 
  1753  0FE9                     	;# 
  1754  0FEA                     	;# 
  1755  0FEB                     	;# 
  1756  0FED                     	;# 
  1757  0FEE                     	;# 
  1758  0FEF                     	;# 
  1759  0000                     	;# 
  1760  0001                     	;# 
  1761  0002                     	;# 
  1762  0003                     	;# 
  1763  0004                     	;# 
  1764  0005                     	;# 
  1765  0006                     	;# 
  1766  0007                     	;# 
  1767  0008                     	;# 
  1768  0009                     	;# 
  1769  000A                     	;# 
  1770  000B                     	;# 
  1771  000C                     	;# 
  1772  000D                     	;# 
  1773  000E                     	;# 
  1774  000F                     	;# 
  1775  0010                     	;# 
  1776  0011                     	;# 
  1777  0012                     	;# 
  1778  0013                     	;# 
  1779  0015                     	;# 
  1780  0016                     	;# 
  1781  0016                     	;# 
  1782  0017                     	;# 
  1783  0018                     	;# 
  1784  0019                     	;# 
  1785  001A                     	;# 
  1786  001B                     	;# 
  1787  001C                     	;# 
  1788  008C                     	;# 
  1789  008D                     	;# 
  1790  008E                     	;# 
  1791  008F                     	;# 
  1792  0090                     	;# 
  1793  0091                     	;# 
  1794  0092                     	;# 
  1795  0093                     	;# 
  1796  0095                     	;# 
  1797  0096                     	;# 
  1798  0097                     	;# 
  1799  0098                     	;# 
  1800  0099                     	;# 
  1801  009A                     	;# 
  1802  009B                     	;# 
  1803  009B                     	;# 
  1804  009C                     	;# 
  1805  009D                     	;# 
  1806  009E                     	;# 
  1807  009F                     	;# 
  1808  010C                     	;# 
  1809  010D                     	;# 
  1810  010E                     	;# 
  1811  010F                     	;# 
  1812  0110                     	;# 
  1813  0111                     	;# 
  1814  0112                     	;# 
  1815  0113                     	;# 
  1816  0114                     	;# 
  1817  0115                     	;# 
  1818  0116                     	;# 
  1819  0117                     	;# 
  1820  0118                     	;# 
  1821  0119                     	;# 
  1822  011A                     	;# 
  1823  011B                     	;# 
  1824  011B                     	;# 
  1825  011C                     	;# 
  1826  018C                     	;# 
  1827  018D                     	;# 
  1828  018E                     	;# 
  1829  018F                     	;# 
  1830  0190                     	;# 
  1831  0191                     	;# 
  1832  0191                     	;# 
  1833  0192                     	;# 
  1834  0193                     	;# 
  1835  0193                     	;# 
  1836  0194                     	;# 
  1837  0195                     	;# 
  1838  0196                     	;# 
  1839  0197                     	;# 
  1840  0199                     	;# 
  1841  0199                     	;# 
  1842  0199                     	;# 
  1843  019A                     	;# 
  1844  019A                     	;# 
  1845  019A                     	;# 
  1846  019B                     	;# 
  1847  019B                     	;# 
  1848  019B                     	;# 
  1849  019B                     	;# 
  1850  019B                     	;# 
  1851  019C                     	;# 
  1852  019C                     	;# 
  1853  019C                     	;# 
  1854  019D                     	;# 
  1855  019D                     	;# 
  1856  019D                     	;# 
  1857  019E                     	;# 
  1858  019E                     	;# 
  1859  019E                     	;# 
  1860  019F                     	;# 
  1861  019F                     	;# 
  1862  019F                     	;# 
  1863  019F                     	;# 
  1864  019F                     	;# 
  1865  020C                     	;# 
  1866  020D                     	;# 
  1867  020E                     	;# 
  1868  020F                     	;# 
  1869  0210                     	;# 
  1870  0211                     	;# 
  1871  0211                     	;# 
  1872  0212                     	;# 
  1873  0212                     	;# 
  1874  0213                     	;# 
  1875  0213                     	;# 
  1876  0214                     	;# 
  1877  0214                     	;# 
  1878  0215                     	;# 
  1879  0215                     	;# 
  1880  0215                     	;# 
  1881  0215                     	;# 
  1882  0216                     	;# 
  1883  0216                     	;# 
  1884  0217                     	;# 
  1885  0217                     	;# 
  1886  028C                     	;# 
  1887  028D                     	;# 
  1888  028E                     	;# 
  1889  028F                     	;# 
  1890  0290                     	;# 
  1891  0291                     	;# 
  1892  0291                     	;# 
  1893  0292                     	;# 
  1894  0293                     	;# 
  1895  0293                     	;# 
  1896  0298                     	;# 
  1897  0298                     	;# 
  1898  0299                     	;# 
  1899  029A                     	;# 
  1900  029A                     	;# 
  1901  029E                     	;# 
  1902  030C                     	;# 
  1903  030D                     	;# 
  1904  030E                     	;# 
  1905  030F                     	;# 
  1906  0310                     	;# 
  1907  038C                     	;# 
  1908  038D                     	;# 
  1909  038E                     	;# 
  1910  038F                     	;# 
  1911  0390                     	;# 
  1912  0391                     	;# 
  1913  0392                     	;# 
  1914  0393                     	;# 
  1915  0394                     	;# 
  1916  0395                     	;# 
  1917  0396                     	;# 
  1918  0397                     	;# 
  1919  0398                     	;# 
  1920  0399                     	;# 
  1921  039D                     	;# 
  1922  039E                     	;# 
  1923  039F                     	;# 
  1924  0415                     	;# 
  1925  0416                     	;# 
  1926  0417                     	;# 
  1927  041C                     	;# 
  1928  041D                     	;# 
  1929  041E                     	;# 
  1930  0498                     	;# 
  1931  0498                     	;# 
  1932  0499                     	;# 
  1933  049A                     	;# 
  1934  049B                     	;# 
  1935  049B                     	;# 
  1936  049C                     	;# 
  1937  049D                     	;# 
  1938  049E                     	;# 
  1939  049F                     	;# 
  1940  0511                     	;# 
  1941  0515                     	;# 
  1942  0617                     	;# 
  1943  0618                     	;# 
  1944  0619                     	;# 
  1945  0619                     	;# 
  1946  061A                     	;# 
  1947  061B                     	;# 
  1948  061C                     	;# 
  1949  061C                     	;# 
  1950  0691                     	;# 
  1951  0692                     	;# 
  1952  0693                     	;# 
  1953  0694                     	;# 
  1954  0695                     	;# 
  1955  0696                     	;# 
  1956  0697                     	;# 
  1957  0698                     	;# 
  1958  0699                     	;# 
  1959  069A                     	;# 
  1960  069B                     	;# 
  1961  069C                     	;# 
  1962  069D                     	;# 
  1963  069E                     	;# 
  1964  069F                     	;# 
  1965  0E0F                     	;# 
  1966  0E10                     	;# 
  1967  0E11                     	;# 
  1968  0E12                     	;# 
  1969  0E13                     	;# 
  1970  0E14                     	;# 
  1971  0E15                     	;# 
  1972  0E17                     	;# 
  1973  0E20                     	;# 
  1974  0E21                     	;# 
  1975  0E22                     	;# 
  1976  0E24                     	;# 
  1977  0E25                     	;# 
  1978  0E28                     	;# 
  1979  0E29                     	;# 
  1980  0E2A                     	;# 
  1981  0E2B                     	;# 
  1982  0E90                     	;# 
  1983  0E91                     	;# 
  1984  0E92                     	;# 
  1985  0E93                     	;# 
  1986  0E94                     	;# 
  1987  0E95                     	;# 
  1988  0E96                     	;# 
  1989  0E97                     	;# 
  1990  0E98                     	;# 
  1991  0E99                     	;# 
  1992  0E9A                     	;# 
  1993  0E9B                     	;# 
  1994  0E9C                     	;# 
  1995  0E9D                     	;# 
  1996  0E9E                     	;# 
  1997  0E9F                     	;# 
  1998  0EA0                     	;# 
  1999  0EA1                     	;# 
  2000  0EA2                     	;# 
  2001  0EA3                     	;# 
  2002  0EA4                     	;# 
  2003  0EA5                     	;# 
  2004  0EA6                     	;# 
  2005  0EA7                     	;# 
  2006  0EA8                     	;# 
  2007  0EA9                     	;# 
  2008  0EAA                     	;# 
  2009  0EAB                     	;# 
  2010  0EAC                     	;# 
  2011  0EAD                     	;# 
  2012  0EAE                     	;# 
  2013  0EAF                     	;# 
  2014  0EB0                     	;# 
  2015  0EB1                     	;# 
  2016  0EB2                     	;# 
  2017  0F0F                     	;# 
  2018  0F10                     	;# 
  2019  0F11                     	;# 
  2020  0F12                     	;# 
  2021  0F13                     	;# 
  2022  0F14                     	;# 
  2023  0F15                     	;# 
  2024  0F16                     	;# 
  2025  0F17                     	;# 
  2026  0F18                     	;# 
  2027  0F19                     	;# 
  2028  0F1A                     	;# 
  2029  0F1B                     	;# 
  2030  0F1C                     	;# 
  2031  0F1D                     	;# 
  2032  0F1E                     	;# 
  2033  0F1F                     	;# 
  2034  0F20                     	;# 
  2035  0F21                     	;# 
  2036  0F22                     	;# 
  2037  0F23                     	;# 
  2038  0F24                     	;# 
  2039  0F25                     	;# 
  2040  0F26                     	;# 
  2041  0F27                     	;# 
  2042  0F28                     	;# 
  2043  0F29                     	;# 
  2044  0F2A                     	;# 
  2045  0F2B                     	;# 
  2046  0F2C                     	;# 
  2047  0F2D                     	;# 
  2048  0F2E                     	;# 
  2049  0F2F                     	;# 
  2050  0F30                     	;# 
  2051  0F31                     	;# 
  2052  0F32                     	;# 
  2053  0F33                     	;# 
  2054  0F34                     	;# 
  2055  0F35                     	;# 
  2056  0F36                     	;# 
  2057  0F37                     	;# 
  2058  0FE4                     	;# 
  2059  0FE5                     	;# 
  2060  0FE6                     	;# 
  2061  0FE7                     	;# 
  2062  0FE8                     	;# 
  2063  0FE9                     	;# 
  2064  0FEA                     	;# 
  2065  0FEB                     	;# 
  2066  0FED                     	;# 
  2067  0FEE                     	;# 
  2068  0FEF                     	;# 
  2069  0000                     	;# 
  2070  0001                     	;# 
  2071  0002                     	;# 
  2072  0003                     	;# 
  2073  0004                     	;# 
  2074  0005                     	;# 
  2075  0006                     	;# 
  2076  0007                     	;# 
  2077  0008                     	;# 
  2078  0009                     	;# 
  2079  000A                     	;# 
  2080  000B                     	;# 
  2081  000C                     	;# 
  2082  000D                     	;# 
  2083  000E                     	;# 
  2084  000F                     	;# 
  2085  0010                     	;# 
  2086  0011                     	;# 
  2087  0012                     	;# 
  2088  0013                     	;# 
  2089  0015                     	;# 
  2090  0016                     	;# 
  2091  0016                     	;# 
  2092  0017                     	;# 
  2093  0018                     	;# 
  2094  0019                     	;# 
  2095  001A                     	;# 
  2096  001B                     	;# 
  2097  001C                     	;# 
  2098  008C                     	;# 
  2099  008D                     	;# 
  2100  008E                     	;# 
  2101  008F                     	;# 
  2102  0090                     	;# 
  2103  0091                     	;# 
  2104  0092                     	;# 
  2105  0093                     	;# 
  2106  0095                     	;# 
  2107  0096                     	;# 
  2108  0097                     	;# 
  2109  0098                     	;# 
  2110  0099                     	;# 
  2111  009A                     	;# 
  2112  009B                     	;# 
  2113  009B                     	;# 
  2114  009C                     	;# 
  2115  009D                     	;# 
  2116  009E                     	;# 
  2117  009F                     	;# 
  2118  010C                     	;# 
  2119  010D                     	;# 
  2120  010E                     	;# 
  2121  010F                     	;# 
  2122  0110                     	;# 
  2123  0111                     	;# 
  2124  0112                     	;# 
  2125  0113                     	;# 
  2126  0114                     	;# 
  2127  0115                     	;# 
  2128  0116                     	;# 
  2129  0117                     	;# 
  2130  0118                     	;# 
  2131  0119                     	;# 
  2132  011A                     	;# 
  2133  011B                     	;# 
  2134  011B                     	;# 
  2135  011C                     	;# 
  2136  018C                     	;# 
  2137  018D                     	;# 
  2138  018E                     	;# 
  2139  018F                     	;# 
  2140  0190                     	;# 
  2141  0191                     	;# 
  2142  0191                     	;# 
  2143  0192                     	;# 
  2144  0193                     	;# 
  2145  0193                     	;# 
  2146  0194                     	;# 
  2147  0195                     	;# 
  2148  0196                     	;# 
  2149  0197                     	;# 
  2150  0199                     	;# 
  2151  0199                     	;# 
  2152  0199                     	;# 
  2153  019A                     	;# 
  2154  019A                     	;# 
  2155  019A                     	;# 
  2156  019B                     	;# 
  2157  019B                     	;# 
  2158  019B                     	;# 
  2159  019B                     	;# 
  2160  019B                     	;# 
  2161  019C                     	;# 
  2162  019C                     	;# 
  2163  019C                     	;# 
  2164  019D                     	;# 
  2165  019D                     	;# 
  2166  019D                     	;# 
  2167  019E                     	;# 
  2168  019E                     	;# 
  2169  019E                     	;# 
  2170  019F                     	;# 
  2171  019F                     	;# 
  2172  019F                     	;# 
  2173  019F                     	;# 
  2174  019F                     	;# 
  2175  020C                     	;# 
  2176  020D                     	;# 
  2177  020E                     	;# 
  2178  020F                     	;# 
  2179  0210                     	;# 
  2180  0211                     	;# 
  2181  0211                     	;# 
  2182  0212                     	;# 
  2183  0212                     	;# 
  2184  0213                     	;# 
  2185  0213                     	;# 
  2186  0214                     	;# 
  2187  0214                     	;# 
  2188  0215                     	;# 
  2189  0215                     	;# 
  2190  0215                     	;# 
  2191  0215                     	;# 
  2192  0216                     	;# 
  2193  0216                     	;# 
  2194  0217                     	;# 
  2195  0217                     	;# 
  2196  028C                     	;# 
  2197  028D                     	;# 
  2198  028E                     	;# 
  2199  028F                     	;# 
  2200  0290                     	;# 
  2201  0291                     	;# 
  2202  0291                     	;# 
  2203  0292                     	;# 
  2204  0293                     	;# 
  2205  0293                     	;# 
  2206  0298                     	;# 
  2207  0298                     	;# 
  2208  0299                     	;# 
  2209  029A                     	;# 
  2210  029A                     	;# 
  2211  029E                     	;# 
  2212  030C                     	;# 
  2213  030D                     	;# 
  2214  030E                     	;# 
  2215  030F                     	;# 
  2216  0310                     	;# 
  2217  038C                     	;# 
  2218  038D                     	;# 
  2219  038E                     	;# 
  2220  038F                     	;# 
  2221  0390                     	;# 
  2222  0391                     	;# 
  2223  0392                     	;# 
  2224  0393                     	;# 
  2225  0394                     	;# 
  2226  0395                     	;# 
  2227  0396                     	;# 
  2228  0397                     	;# 
  2229  0398                     	;# 
  2230  0399                     	;# 
  2231  039D                     	;# 
  2232  039E                     	;# 
  2233  039F                     	;# 
  2234  0415                     	;# 
  2235  0416                     	;# 
  2236  0417                     	;# 
  2237  041C                     	;# 
  2238  041D                     	;# 
  2239  041E                     	;# 
  2240  0498                     	;# 
  2241  0498                     	;# 
  2242  0499                     	;# 
  2243  049A                     	;# 
  2244  049B                     	;# 
  2245  049B                     	;# 
  2246  049C                     	;# 
  2247  049D                     	;# 
  2248  049E                     	;# 
  2249  049F                     	;# 
  2250  0511                     	;# 
  2251  0515                     	;# 
  2252  0617                     	;# 
  2253  0618                     	;# 
  2254  0619                     	;# 
  2255  0619                     	;# 
  2256  061A                     	;# 
  2257  061B                     	;# 
  2258  061C                     	;# 
  2259  061C                     	;# 
  2260  0691                     	;# 
  2261  0692                     	;# 
  2262  0693                     	;# 
  2263  0694                     	;# 
  2264  0695                     	;# 
  2265  0696                     	;# 
  2266  0697                     	;# 
  2267  0698                     	;# 
  2268  0699                     	;# 
  2269  069A                     	;# 
  2270  069B                     	;# 
  2271  069C                     	;# 
  2272  069D                     	;# 
  2273  069E                     	;# 
  2274  069F                     	;# 
  2275  0E0F                     	;# 
  2276  0E10                     	;# 
  2277  0E11                     	;# 
  2278  0E12                     	;# 
  2279  0E13                     	;# 
  2280  0E14                     	;# 
  2281  0E15                     	;# 
  2282  0E17                     	;# 
  2283  0E20                     	;# 
  2284  0E21                     	;# 
  2285  0E22                     	;# 
  2286  0E24                     	;# 
  2287  0E25                     	;# 
  2288  0E28                     	;# 
  2289  0E29                     	;# 
  2290  0E2A                     	;# 
  2291  0E2B                     	;# 
  2292  0E90                     	;# 
  2293  0E91                     	;# 
  2294  0E92                     	;# 
  2295  0E93                     	;# 
  2296  0E94                     	;# 
  2297  0E95                     	;# 
  2298  0E96                     	;# 
  2299  0E97                     	;# 
  2300  0E98                     	;# 
  2301  0E99                     	;# 
  2302  0E9A                     	;# 
  2303  0E9B                     	;# 
  2304  0E9C                     	;# 
  2305  0E9D                     	;# 
  2306  0E9E                     	;# 
  2307  0E9F                     	;# 
  2308  0EA0                     	;# 
  2309  0EA1                     	;# 
  2310  0EA2                     	;# 
  2311  0EA3                     	;# 
  2312  0EA4                     	;# 
  2313  0EA5                     	;# 
  2314  0EA6                     	;# 
  2315  0EA7                     	;# 
  2316  0EA8                     	;# 
  2317  0EA9                     	;# 
  2318  0EAA                     	;# 
  2319  0EAB                     	;# 
  2320  0EAC                     	;# 
  2321  0EAD                     	;# 
  2322  0EAE                     	;# 
  2323  0EAF                     	;# 
  2324  0EB0                     	;# 
  2325  0EB1                     	;# 
  2326  0EB2                     	;# 
  2327  0F0F                     	;# 
  2328  0F10                     	;# 
  2329  0F11                     	;# 
  2330  0F12                     	;# 
  2331  0F13                     	;# 
  2332  0F14                     	;# 
  2333  0F15                     	;# 
  2334  0F16                     	;# 
  2335  0F17                     	;# 
  2336  0F18                     	;# 
  2337  0F19                     	;# 
  2338  0F1A                     	;# 
  2339  0F1B                     	;# 
  2340  0F1C                     	;# 
  2341  0F1D                     	;# 
  2342  0F1E                     	;# 
  2343  0F1F                     	;# 
  2344  0F20                     	;# 
  2345  0F21                     	;# 
  2346  0F22                     	;# 
  2347  0F23                     	;# 
  2348  0F24                     	;# 
  2349  0F25                     	;# 
  2350  0F26                     	;# 
  2351  0F27                     	;# 
  2352  0F28                     	;# 
  2353  0F29                     	;# 
  2354  0F2A                     	;# 
  2355  0F2B                     	;# 
  2356  0F2C                     	;# 
  2357  0F2D                     	;# 
  2358  0F2E                     	;# 
  2359  0F2F                     	;# 
  2360  0F30                     	;# 
  2361  0F31                     	;# 
  2362  0F32                     	;# 
  2363  0F33                     	;# 
  2364  0F34                     	;# 
  2365  0F35                     	;# 
  2366  0F36                     	;# 
  2367  0F37                     	;# 
  2368  0FE4                     	;# 
  2369  0FE5                     	;# 
  2370  0FE6                     	;# 
  2371  0FE7                     	;# 
  2372  0FE8                     	;# 
  2373  0FE9                     	;# 
  2374  0FEA                     	;# 
  2375  0FEB                     	;# 
  2376  0FED                     	;# 
  2377  0FEE                     	;# 
  2378  0FEF                     	;_messageBuffer
  2379                           
  2380                           	psect	idataBANK4
  2381  1800                     __pidataBANK4:	
  2382                           
  2383                           ;initializer for stoa@F1174
  2384  1800  3428               	retlw	40
  2385  1801  346E               	retlw	110
  2386  1802  3475               	retlw	117
  2387  1803  346C               	retlw	108
  2388  1804  346C               	retlw	108
  2389  1805  3429               	retlw	41
  2390  1806  3400               	retlw	0
  2391                           
  2392                           	psect	stringtext1
  2393  39F8                     __pstringtext1:	
  2394  39F8                     _OCD_threshold_setting:	
  2395  39F8  3411               	retlw	17
  2396  39F9  3400               	retlw	0
  2397  39FA  3416               	retlw	22
  2398  39FB  3400               	retlw	0
  2399  39FC  341C               	retlw	28
  2400  39FD  3400               	retlw	0
  2401  39FE  3421               	retlw	33
  2402  39FF  3400               	retlw	0
  2403  3A00  3427               	retlw	39
  2404  3A01  3400               	retlw	0
  2405  3A02  342C               	retlw	44
  2406  3A03  3400               	retlw	0
  2407  3A04  3432               	retlw	50
  2408  3A05  3400               	retlw	0
  2409  3A06  3438               	retlw	56
  2410  3A07  3400               	retlw	0
  2411  3A08  343D               	retlw	61
  2412  3A09  3400               	retlw	0
  2413  3A0A  3443               	retlw	67
  2414  3A0B  3400               	retlw	0
  2415  3A0C  3448               	retlw	72
  2416  3A0D  3400               	retlw	0
  2417  3A0E  344E               	retlw	78
  2418  3A0F  3400               	retlw	0
  2419  3A10  3453               	retlw	83
  2420  3A11  3400               	retlw	0
  2421  3A12  3459               	retlw	89
  2422  3A13  3400               	retlw	0
  2423  3A14  345E               	retlw	94
  2424  3A15  3400               	retlw	0
  2425  3A16  3464               	retlw	100
  2426  3A17  3400               	retlw	0
  2427  3A18                     __end_of_OCD_threshold_setting:	
  2428                           
  2429                           	psect	stringtext2
  2430  3B0C                     __pstringtext2:	
  2431  3B0C                     _OCD_delay_setting:	
  2432  3B0C  3408               	retlw	8
  2433  3B0D  3400               	retlw	0
  2434  3B0E  3414               	retlw	20
  2435  3B0F  3400               	retlw	0
  2436  3B10  3428               	retlw	40
  2437  3B11  3400               	retlw	0
  2438  3B12  3450               	retlw	80
  2439  3B13  3400               	retlw	0
  2440  3B14  34A0               	retlw	160
  2441  3B15  3400               	retlw	0
  2442  3B16  3440               	retlw	64
  2443  3B17  3401               	retlw	1
  2444  3B18  3480               	retlw	128
  2445  3B19  3402               	retlw	2
  2446  3B1A  3400               	retlw	0
  2447  3B1B  3405               	retlw	5
  2448  3B1C                     __end_of_OCD_delay_setting:	
  2449                           
  2450                           	psect	stringtext3
  2451  3B1C                     __pstringtext3:	
  2452  3B1C                     _SCD_threshold_setting:	
  2453  3B1C  342C               	retlw	44
  2454  3B1D  3400               	retlw	0
  2455  3B1E  3443               	retlw	67
  2456  3B1F  3400               	retlw	0
  2457  3B20  3459               	retlw	89
  2458  3B21  3400               	retlw	0
  2459  3B22  346F               	retlw	111
  2460  3B23  3400               	retlw	0
  2461  3B24  3485               	retlw	133
  2462  3B25  3400               	retlw	0
  2463  3B26  349B               	retlw	155
  2464  3B27  3400               	retlw	0
  2465  3B28  34B2               	retlw	178
  2466  3B29  3400               	retlw	0
  2467  3B2A  34C8               	retlw	200
  2468  3B2B  3400               	retlw	0
  2469  3B2C                     __end_of_SCD_threshold_setting:	
  2470                           
  2471                           	psect	stringtext4
  2472  3B2C                     __pstringtext4:	
  2473  3B2C                     _OV_delay_setting:	
  2474  3B2C  3401               	retlw	1
  2475  3B2D  3400               	retlw	0
  2476  3B2E  3402               	retlw	2
  2477  3B2F  3400               	retlw	0
  2478  3B30  3404               	retlw	4
  2479  3B31  3400               	retlw	0
  2480  3B32  3408               	retlw	8
  2481  3B33  3400               	retlw	0
  2482  3B34                     __end_of_OV_delay_setting:	
  2483                           
  2484                           	psect	stringtext5
  2485  3B34                     __pstringtext5:	
  2486  3B34                     _UV_delay_setting:	
  2487  3B34  3401               	retlw	1
  2488  3B35  3400               	retlw	0
  2489  3B36  3404               	retlw	4
  2490  3B37  3400               	retlw	0
  2491  3B38  3408               	retlw	8
  2492  3B39  3400               	retlw	0
  2493  3B3A  3410               	retlw	16
  2494  3B3B  3400               	retlw	0
  2495  3B3C                     __end_of_UV_delay_setting:	
  2496                           
  2497                           	psect	stringtext6
  2498  3B3C                     __pstringtext6:	
  2499  3B3C                     _SCD_delay_setting:	
  2500  3B3C  3446               	retlw	70
  2501  3B3D  3400               	retlw	0
  2502  3B3E  3464               	retlw	100
  2503  3B3F  3400               	retlw	0
  2504  3B40  34C8               	retlw	200
  2505  3B41  3400               	retlw	0
  2506  3B42  3490               	retlw	144
  2507  3B43  3401               	retlw	1
  2508  3B44                     __end_of_SCD_delay_setting:	
  2509                           
  2510                           	psect	stringtext7
  2511  3800                     __pstringtext7:	
  2512  3800                     _ATmega328_address:	
  2513  3800  3402               	retlw	2
  2514  3801  3400               	retlw	0
  2515  3802                     __end_of_ATmega328_address:	
  2516  0016                     _TMR1	set	22
  2517  0003                     _STATUSbits	set	3
  2518  000B                     _INTCONbits	set	11
  2519  0018                     _T1CONbits	set	24
  2520  0011                     _PIR1bits	set	17
  2521  0097                     _WDTCONbits	set	151
  2522  0090                     _TRISEbits	set	144
  2523  008C                     _TRISAbits	set	140
  2524  008E                     _TRISCbits	set	142
  2525  008D                     _TRISBbits	set	141
  2526  0091                     _PIE1bits	set	145
  2527  0476                     _TRISC6	set	1142
  2528  0477                     _TRISC7	set	1143
  2529  04CF                     _SPLLEN	set	1231
  2530  04CE                     _IRCF3	set	1230
  2531  04CD                     _IRCF2	set	1229
  2532  04CC                     _IRCF1	set	1228
  2533  04CB                     _IRCF0	set	1227
  2534  04C9                     _SCS1	set	1225
  2535  04C8                     _SCS0	set	1224
  2536  0110                     _LATEbits	set	272
  2537  010C                     _LATAbits	set	268
  2538  019A                     _TX1REG	set	410
  2539  0199                     _RC1REG	set	409
  2540  019D                     _RC1STAbits	set	413
  2541  019B                     _SPBRG	set	411
  2542  018E                     _ANSELCbits	set	398
  2543  018D                     _ANSELBbits	set	397
  2544  0CF5                     _TXEN	set	3317
  2545  0CEC                     _CREN	set	3308
  2546  0CEF                     _SPEN	set	3311
  2547  0CF4                     _SYNC	set	3316
  2548  0CF2                     _BRGH	set	3314
  2549  0216                     _SSPCON2bits	set	534
  2550  0211                     _SSPBUF	set	529
  2551  0212                     _SSPADD	set	530
  2552  0215                     _SSPCONbits	set	533
  2553  0E24                     _RXPPSbits	set	3620
  2554  0E20                     _SSPCLKPPSbits	set	3616
  2555  0E21                     _SSPDATPPSbits	set	3617
  2556  0E0F                     _PPSLOCKbits	set	3599
  2557  0E0F                     _PPSLOCK	set	3599
  2558  0E9A                     _RB2PPSbits	set	3738
  2559  0EA5                     _RC5PPSbits	set	3749
  2560  0EA4                     _RC4PPSbits	set	3748
  2561  3802                     STR_8:	
  2562  3802  3453               	retlw	83	;'S'
  2563  3803  3465               	retlw	101	;'e'
  2564  3804  3474               	retlw	116	;'t'
  2565  3805  3420               	retlw	32	;' '
  2566  3806  344F               	retlw	79	;'O'
  2567  3807  3476               	retlw	118	;'v'
  2568  3808  3465               	retlw	101	;'e'
  2569  3809  3472               	retlw	114	;'r'
  2570  380A  342D               	retlw	45	;'-'
  2571  380B  3463               	retlw	99	;'c'
  2572  380C  3475               	retlw	117	;'u'
  2573  380D  3472               	retlw	114	;'r'
  2574  380E  3472               	retlw	114	;'r'
  2575  380F  3465               	retlw	101	;'e'
  2576  3810  346E               	retlw	110	;'n'
  2577  3811  3474               	retlw	116	;'t'
  2578  3812  3420               	retlw	32	;' '
  2579  3813  3464               	retlw	100	;'d'
  2580  3814  3469               	retlw	105	;'i'
  2581  3815  3473               	retlw	115	;'s'
  2582  3816  3463               	retlw	99	;'c'
  2583  3817  3468               	retlw	104	;'h'
  2584  3818  3461               	retlw	97	;'a'
  2585  3819  3472               	retlw	114	;'r'
  2586  381A  3467               	retlw	103	;'g'
  2587  381B  3465               	retlw	101	;'e'
  2588  381C  3420               	retlw	32	;' '
  2589  381D  3470               	retlw	112	;'p'
  2590  381E  3472               	retlw	114	;'r'
  2591  381F  346F               	retlw	111	;'o'
  2592  3820  3474               	retlw	116	;'t'
  2593  3821  3465               	retlw	101	;'e'
  2594  3822  3463               	retlw	99	;'c'
  2595  3823  3474               	retlw	116	;'t'
  2596  3824  3469               	retlw	105	;'i'
  2597  3825  346F               	retlw	111	;'o'
  2598  3826  346E               	retlw	110	;'n'
  2599  3827  3420               	retlw	32	;' '
  2600  3828  3420               	retlw	32	;' '
  2601  3829  3466               	retlw	102	;'f'
  2602  382A  346F               	retlw	111	;'o'
  2603  382B  3472               	retlw	114	;'r'
  2604  382C  3420               	retlw	32	;' '
  2605  382D  3441               	retlw	65	;'A'
  2606  382E  3446               	retlw	70	;'F'
  2607  382F  3445               	retlw	69	;'E'
  2608  3830  343A               	retlw	58	;':'
  2609  3831  3420               	retlw	32	;' '
  2610  3832  3425               	retlw	37	;'%'
  2611  3833  346C               	retlw	108	;'l'
  2612  3834  3475               	retlw	117	;'u'
  2613  3835  3420               	retlw	32	;' '
  2614  3836  346D               	retlw	109	;'m'
  2615  3837  3441               	retlw	65	;'A'
  2616  3838  340A               	retlw	10
  2617  3839  340D               	retlw	13
  2618  383A  3400               	retlw	0
  2619                           
  2620                           	psect	stringtext8
  2621  383B                     __pstringtext8:	
  2622  383B                     STR_4:	
  2623  383B  3441               	retlw	65	;'A'
  2624  383C  3474               	retlw	116	;'t'
  2625  383D  3474               	retlw	116	;'t'
  2626  383E  3465               	retlw	101	;'e'
  2627  383F  346D               	retlw	109	;'m'
  2628  3840  3470               	retlw	112	;'p'
  2629  3841  3474               	retlw	116	;'t'
  2630  3842  3420               	retlw	32	;' '
  2631  3843  3474               	retlw	116	;'t'
  2632  3844  346F               	retlw	111	;'o'
  2633  3845  3420               	retlw	32	;' '
  2634  3846  3473               	retlw	115	;'s'
  2635  3847  3465               	retlw	101	;'e'
  2636  3848  3474               	retlw	116	;'t'
  2637  3849  3420               	retlw	32	;' '
  2638  384A  3469               	retlw	105	;'i'
  2639  384B  346E               	retlw	110	;'n'
  2640  384C  3469               	retlw	105	;'i'
  2641  384D  3474               	retlw	116	;'t'
  2642  384E  3469               	retlw	105	;'i'
  2643  384F  3461               	retlw	97	;'a'
  2644  3850  346C               	retlw	108	;'l'
  2645  3851  3420               	retlw	32	;' '
  2646  3852  3473               	retlw	115	;'s'
  2647  3853  3479               	retlw	121	;'y'
  2648  3854  3473               	retlw	115	;'s'
  2649  3855  3474               	retlw	116	;'t'
  2650  3856  3465               	retlw	101	;'e'
  2651  3857  346D               	retlw	109	;'m'
  2652  3858  3420               	retlw	32	;' '
  2653  3859  3470               	retlw	112	;'p'
  2654  385A  3461               	retlw	97	;'a'
  2655  385B  3472               	retlw	114	;'r'
  2656  385C  3461               	retlw	97	;'a'
  2657  385D  346D               	retlw	109	;'m'
  2658  385E  3465               	retlw	101	;'e'
  2659  385F  3474               	retlw	116	;'t'
  2660  3860  3465               	retlw	101	;'e'
  2661  3861  3472               	retlw	114	;'r'
  2662  3862  3473               	retlw	115	;'s'
  2663  3863  3420               	retlw	32	;' '
  2664  3864  3474               	retlw	116	;'t'
  2665  3865  346F               	retlw	111	;'o'
  2666  3866  3420               	retlw	32	;' '
  2667  3867  3441               	retlw	65	;'A'
  2668  3868  3446               	retlw	70	;'F'
  2669  3869  3445               	retlw	69	;'E'
  2670  386A  342E               	retlw	46	;'.'
  2671  386B  342E               	retlw	46	;'.'
  2672  386C  342E               	retlw	46	;'.'
  2673  386D  340A               	retlw	10
  2674  386E  340D               	retlw	13
  2675  386F  3400               	retlw	0
  2676                           
  2677                           	psect	stringtext9
  2678  3870                     __pstringtext9:	
  2679  3870                     STR_11:	
  2680  3870  3443               	retlw	67	;'C'
  2681  3871  3465               	retlw	101	;'e'
  2682  3872  346C               	retlw	108	;'l'
  2683  3873  346C               	retlw	108	;'l'
  2684  3874  3420               	retlw	32	;' '
  2685  3875  3462               	retlw	98	;'b'
  2686  3876  3461               	retlw	97	;'a'
  2687  3877  3474               	retlw	116	;'t'
  2688  3878  3474               	retlw	116	;'t'
  2689  3879  343A               	retlw	58	;':'
  2690  387A  3420               	retlw	32	;' '
  2691  387B  3425               	retlw	37	;'%'
  2692  387C  3469               	retlw	105	;'i'
  2693  387D  3420               	retlw	32	;' '
  2694  387E  342C               	retlw	44	;','
  2695  387F  3425               	retlw	37	;'%'
  2696  3880  3464               	retlw	100	;'d'
  2697  3881  342C               	retlw	44	;','
  2698  3882  3420               	retlw	32	;' '
  2699  3883  3425               	retlw	37	;'%'
  2700  3884  3464               	retlw	100	;'d'
  2701  3885  3420               	retlw	32	;' '
  2702  3886  342C               	retlw	44	;','
  2703  3887  3420               	retlw	32	;' '
  2704  3888  3425               	retlw	37	;'%'
  2705  3889  3464               	retlw	100	;'d'
  2706  388A  342C               	retlw	44	;','
  2707  388B  3420               	retlw	32	;' '
  2708  388C  3425               	retlw	37	;'%'
  2709  388D  3464               	retlw	100	;'d'
  2710  388E  342C               	retlw	44	;','
  2711  388F  3420               	retlw	32	;' '
  2712  3890  3425               	retlw	37	;'%'
  2713  3891  3464               	retlw	100	;'d'
  2714  3892  3420               	retlw	32	;' '
  2715  3893  3442               	retlw	66	;'B'
  2716  3894  3461               	retlw	97	;'a'
  2717  3895  3474               	retlw	116	;'t'
  2718  3896  3474               	retlw	116	;'t'
  2719  3897  3420               	retlw	32	;' '
  2720  3898  3443               	retlw	67	;'C'
  2721  3899  3475               	retlw	117	;'u'
  2722  389A  3472               	retlw	114	;'r'
  2723  389B  3472               	retlw	114	;'r'
  2724  389C  343A               	retlw	58	;':'
  2725  389D  3420               	retlw	32	;' '
  2726  389E  3425               	retlw	37	;'%'
  2727  389F  3469               	retlw	105	;'i'
  2728  38A0  3420               	retlw	32	;' '
  2729  38A1  340A               	retlw	10
  2730  38A2  340D               	retlw	13
  2731  38A3  3400               	retlw	0
  2732                           
  2733                           	psect	stringtext10
  2734  38A4                     __pstringtext10:	
  2735  38A4                     STR_2:	
  2736  38A4  3443               	retlw	67	;'C'
  2737  38A5  346F               	retlw	111	;'o'
  2738  38A6  346D               	retlw	109	;'m'
  2739  38A7  346D               	retlw	109	;'m'
  2740  38A8  3475               	retlw	117	;'u'
  2741  38A9  346E               	retlw	110	;'n'
  2742  38AA  3469               	retlw	105	;'i'
  2743  38AB  3463               	retlw	99	;'c'
  2744  38AC  3461               	retlw	97	;'a'
  2745  38AD  3474               	retlw	116	;'t'
  2746  38AE  3469               	retlw	105	;'i'
  2747  38AF  346F               	retlw	111	;'o'
  2748  38B0  346E               	retlw	110	;'n'
  2749  38B1  3420               	retlw	32	;' '
  2750  38B2  3477               	retlw	119	;'w'
  2751  38B3  3469               	retlw	105	;'i'
  2752  38B4  3474               	retlw	116	;'t'
  2753  38B5  3468               	retlw	104	;'h'
  2754  38B6  3420               	retlw	32	;' '
  2755  38B7  3442               	retlw	66	;'B'
  2756  38B8  3451               	retlw	81	;'Q'
  2757  38B9  3437               	retlw	55	;'7'
  2758  38BA  3436               	retlw	54	;'6'
  2759  38BB  3439               	retlw	57	;'9'
  2760  38BC  3432               	retlw	50	;'2'
  2761  38BD  3430               	retlw	48	;'0'
  2762  38BE  3420               	retlw	32	;' '
  2763  38BF  3441               	retlw	65	;'A'
  2764  38C0  3446               	retlw	70	;'F'
  2765  38C1  3445               	retlw	69	;'E'
  2766  38C2  3420               	retlw	32	;' '
  2767  38C3  3465               	retlw	101	;'e'
  2768  38C4  3473               	retlw	115	;'s'
  2769  38C5  3474               	retlw	116	;'t'
  2770  38C6  3461               	retlw	97	;'a'
  2771  38C7  3462               	retlw	98	;'b'
  2772  38C8  346C               	retlw	108	;'l'
  2773  38C9  3469               	retlw	105	;'i'
  2774  38CA  3473               	retlw	115	;'s'
  2775  38CB  3468               	retlw	104	;'h'
  2776  38CC  3465               	retlw	101	;'e'
  2777  38CD  3464               	retlw	100	;'d'
  2778  38CE  3421               	retlw	33	;'!'
  2779  38CF  340A               	retlw	10
  2780  38D0  340D               	retlw	13
  2781  38D1  3400               	retlw	0
  2782                           
  2783                           	psect	stringtext11
  2784  38D2                     __pstringtext11:	
  2785  38D2                     STR_10:	
  2786  38D2  344E               	retlw	78	;'N'
  2787  38D3  346F               	retlw	111	;'o'
  2788  38D4  3477               	retlw	119	;'w'
  2789  38D5  3420               	retlw	32	;' '
  2790  38D6  3472               	retlw	114	;'r'
  2791  38D7  3465               	retlw	101	;'e'
  2792  38D8  3461               	retlw	97	;'a'
  2793  38D9  3464               	retlw	100	;'d'
  2794  38DA  3469               	retlw	105	;'i'
  2795  38DB  346E               	retlw	110	;'n'
  2796  38DC  3467               	retlw	103	;'g'
  2797  38DD  3420               	retlw	32	;' '
  2798  38DE  3441               	retlw	65	;'A'
  2799  38DF  3446               	retlw	70	;'F'
  2800  38E0  3445               	retlw	69	;'E'
  2801  38E1  3420               	retlw	32	;' '
  2802  38E2  3464               	retlw	100	;'d'
  2803  38E3  3461               	retlw	97	;'a'
  2804  38E4  3474               	retlw	116	;'t'
  2805  38E5  3461               	retlw	97	;'a'
  2806  38E6  3420               	retlw	32	;' '
  2807  38E7  3461               	retlw	97	;'a'
  2808  38E8  3474               	retlw	116	;'t'
  2809  38E9  3420               	retlw	32	;' '
  2810  38EA  3472               	retlw	114	;'r'
  2811  38EB  3465               	retlw	101	;'e'
  2812  38EC  3467               	retlw	103	;'g'
  2813  38ED  3475               	retlw	117	;'u'
  2814  38EE  346C               	retlw	108	;'l'
  2815  38EF  3461               	retlw	97	;'a'
  2816  38F0  3472               	retlw	114	;'r'
  2817  38F1  3420               	retlw	32	;' '
  2818  38F2  3469               	retlw	105	;'i'
  2819  38F3  346E               	retlw	110	;'n'
  2820  38F4  3474               	retlw	116	;'t'
  2821  38F5  3465               	retlw	101	;'e'
  2822  38F6  3472               	retlw	114	;'r'
  2823  38F7  3476               	retlw	118	;'v'
  2824  38F8  3461               	retlw	97	;'a'
  2825  38F9  346C               	retlw	108	;'l'
  2826  38FA  3473               	retlw	115	;'s'
  2827  38FB  342E               	retlw	46	;'.'
  2828  38FC  340A               	retlw	10
  2829  38FD  340D               	retlw	13
  2830  38FE  3400               	retlw	0
  2831                           
  2832                           	psect	stringtext12
  2833  38FF                     __pstringtext12:	
  2834  38FF                     STR_7:	
  2835  38FF  3453               	retlw	83	;'S'
  2836  3900  3465               	retlw	101	;'e'
  2837  3901  3474               	retlw	116	;'t'
  2838  3902  3420               	retlw	32	;' '
  2839  3903  3473               	retlw	115	;'s'
  2840  3904  3468               	retlw	104	;'h'
  2841  3905  346F               	retlw	111	;'o'
  2842  3906  3472               	retlw	114	;'r'
  2843  3907  3474               	retlw	116	;'t'
  2844  3908  3420               	retlw	32	;' '
  2845  3909  3463               	retlw	99	;'c'
  2846  390A  3469               	retlw	105	;'i'
  2847  390B  3472               	retlw	114	;'r'
  2848  390C  3463               	retlw	99	;'c'
  2849  390D  3475               	retlw	117	;'u'
  2850  390E  3469               	retlw	105	;'i'
  2851  390F  3474               	retlw	116	;'t'
  2852  3910  3420               	retlw	32	;' '
  2853  3911  3463               	retlw	99	;'c'
  2854  3912  3475               	retlw	117	;'u'
  2855  3913  3472               	retlw	114	;'r'
  2856  3914  3472               	retlw	114	;'r'
  2857  3915  3465               	retlw	101	;'e'
  2858  3916  346E               	retlw	110	;'n'
  2859  3917  3474               	retlw	116	;'t'
  2860  3918  3420               	retlw	32	;' '
  2861  3919  3466               	retlw	102	;'f'
  2862  391A  346F               	retlw	111	;'o'
  2863  391B  3472               	retlw	114	;'r'
  2864  391C  3420               	retlw	32	;' '
  2865  391D  3441               	retlw	65	;'A'
  2866  391E  3446               	retlw	70	;'F'
  2867  391F  3445               	retlw	69	;'E'
  2868  3920  343A               	retlw	58	;':'
  2869  3921  3420               	retlw	32	;' '
  2870  3922  3425               	retlw	37	;'%'
  2871  3923  346C               	retlw	108	;'l'
  2872  3924  3475               	retlw	117	;'u'
  2873  3925  3420               	retlw	32	;' '
  2874  3926  346D               	retlw	109	;'m'
  2875  3927  3441               	retlw	65	;'A'
  2876  3928  340A               	retlw	10
  2877  3929  340D               	retlw	13
  2878  392A  3400               	retlw	0
  2879                           
  2880                           	psect	stringtext13
  2881  392B                     __pstringtext13:	
  2882  392B                     STR_3:	
  2883  392B  344F               	retlw	79	;'O'
  2884  392C  3462               	retlw	98	;'b'
  2885  392D  3474               	retlw	116	;'t'
  2886  392E  3461               	retlw	97	;'a'
  2887  392F  3469               	retlw	105	;'i'
  2888  3930  346E               	retlw	110	;'n'
  2889  3931  3465               	retlw	101	;'e'
  2890  3932  3464               	retlw	100	;'d'
  2891  3933  3420               	retlw	32	;' '
  2892  3934  3461               	retlw	97	;'a'
  2893  3935  3464               	retlw	100	;'d'
  2894  3936  3463               	retlw	99	;'c'
  2895  3937  344F               	retlw	79	;'O'
  2896  3938  3466               	retlw	102	;'f'
  2897  3939  3466               	retlw	102	;'f'
  2898  393A  3473               	retlw	115	;'s'
  2899  393B  3465               	retlw	101	;'e'
  2900  393C  3474               	retlw	116	;'t'
  2901  393D  3420               	retlw	32	;' '
  2902  393E  343D               	retlw	61	;'='
  2903  393F  3420               	retlw	32	;' '
  2904  3940  3425               	retlw	37	;'%'
  2905  3941  3469               	retlw	105	;'i'
  2906  3942  3420               	retlw	32	;' '
  2907  3943  3461               	retlw	97	;'a'
  2908  3944  346E               	retlw	110	;'n'
  2909  3945  3464               	retlw	100	;'d'
  2910  3946  3420               	retlw	32	;' '
  2911  3947  3461               	retlw	97	;'a'
  2912  3948  3464               	retlw	100	;'d'
  2913  3949  3463               	retlw	99	;'c'
  2914  394A  3447               	retlw	71	;'G'
  2915  394B  3461               	retlw	97	;'a'
  2916  394C  3469               	retlw	105	;'i'
  2917  394D  346E               	retlw	110	;'n'
  2918  394E  3420               	retlw	32	;' '
  2919  394F  343D               	retlw	61	;'='
  2920  3950  3420               	retlw	32	;' '
  2921  3951  3425               	retlw	37	;'%'
  2922  3952  3469               	retlw	105	;'i'
  2923  3953  340A               	retlw	10
  2924  3954  340D               	retlw	13
  2925  3955  3400               	retlw	0
  2926                           
  2927                           	psect	stringtext14
  2928  3956                     __pstringtext14:	
  2929  3956                     STR_9:	
  2930  3956  3449               	retlw	73	;'I'
  2931  3957  346E               	retlw	110	;'n'
  2932  3958  3469               	retlw	105	;'i'
  2933  3959  3474               	retlw	116	;'t'
  2934  395A  3469               	retlw	105	;'i'
  2935  395B  3461               	retlw	97	;'a'
  2936  395C  346C               	retlw	108	;'l'
  2937  395D  3420               	retlw	32	;' '
  2938  395E  3470               	retlw	112	;'p'
  2939  395F  3461               	retlw	97	;'a'
  2940  3960  3472               	retlw	114	;'r'
  2941  3961  3461               	retlw	97	;'a'
  2942  3962  346D               	retlw	109	;'m'
  2943  3963  3465               	retlw	101	;'e'
  2944  3964  3474               	retlw	116	;'t'
  2945  3965  3465               	retlw	101	;'e'
  2946  3966  3472               	retlw	114	;'r'
  2947  3967  3473               	retlw	115	;'s'
  2948  3968  3420               	retlw	32	;' '
  2949  3969  3466               	retlw	102	;'f'
  2950  396A  346F               	retlw	111	;'o'
  2951  396B  3472               	retlw	114	;'r'
  2952  396C  3420               	retlw	32	;' '
  2953  396D  3442               	retlw	66	;'B'
  2954  396E  3451               	retlw	81	;'Q'
  2955  396F  3437               	retlw	55	;'7'
  2956  3970  3436               	retlw	54	;'6'
  2957  3971  3439               	retlw	57	;'9'
  2958  3972  3432               	retlw	50	;'2'
  2959  3973  3430               	retlw	48	;'0'
  2960  3974  3420               	retlw	32	;' '
  2961  3975  3441               	retlw	65	;'A'
  2962  3976  3446               	retlw	70	;'F'
  2963  3977  3445               	retlw	69	;'E'
  2964  3978  3420               	retlw	32	;' '
  2965  3979  3473               	retlw	115	;'s'
  2966  397A  3465               	retlw	101	;'e'
  2967  397B  3474               	retlw	116	;'t'
  2968  397C  3421               	retlw	33	;'!'
  2969  397D  340A               	retlw	10
  2970  397E  340D               	retlw	13
  2971  397F  3400               	retlw	0
  2972                           
  2973                           	psect	stringtext15
  2974  3980                     __pstringtext15:	
  2975  3980                     STR_6:	
  2976  3980  3443               	retlw	67	;'C'
  2977  3981  3475               	retlw	117	;'u'
  2978  3982  3472               	retlw	114	;'r'
  2979  3983  3472               	retlw	114	;'r'
  2980  3984  3465               	retlw	101	;'e'
  2981  3985  346E               	retlw	110	;'n'
  2982  3986  3474               	retlw	116	;'t'
  2983  3987  3420               	retlw	32	;' '
  2984  3988  3473               	retlw	115	;'s'
  2985  3989  3465               	retlw	101	;'e'
  2986  398A  346E               	retlw	110	;'n'
  2987  398B  3473               	retlw	115	;'s'
  2988  398C  3465               	retlw	101	;'e'
  2989  398D  3420               	retlw	32	;' '
  2990  398E  3472               	retlw	114	;'r'
  2991  398F  3465               	retlw	101	;'e'
  2992  3990  3473               	retlw	115	;'s'
  2993  3991  3469               	retlw	105	;'i'
  2994  3992  3473               	retlw	115	;'s'
  2995  3993  3474               	retlw	116	;'t'
  2996  3994  346F               	retlw	111	;'o'
  2997  3995  3472               	retlw	114	;'r'
  2998  3996  3420               	retlw	32	;' '
  2999  3997  3476               	retlw	118	;'v'
  3000  3998  3461               	retlw	97	;'a'
  3001  3999  346C               	retlw	108	;'l'
  3002  399A  3475               	retlw	117	;'u'
  3003  399B  3465               	retlw	101	;'e'
  3004  399C  343A               	retlw	58	;':'
  3005  399D  3420               	retlw	32	;' '
  3006  399E  3425               	retlw	37	;'%'
  3007  399F  342E               	retlw	46	;'.'
  3008  39A0  3434               	retlw	52	;'4'
  3009  39A1  3466               	retlw	102	;'f'
  3010  39A2  3420               	retlw	32	;' '
  3011  39A3  346F               	retlw	111	;'o'
  3012  39A4  3468               	retlw	104	;'h'
  3013  39A5  346D               	retlw	109	;'m'
  3014  39A6  3473               	retlw	115	;'s'
  3015  39A7  340A               	retlw	10
  3016  39A8  340D               	retlw	13
  3017  39A9  3400               	retlw	0
  3018                           
  3019                           	psect	stringtext16
  3020  39AA                     __pstringtext16:	
  3021  39AA                     STR_1:	
  3022  39AA  3441               	retlw	65	;'A'
  3023  39AB  3474               	retlw	116	;'t'
  3024  39AC  3474               	retlw	116	;'t'
  3025  39AD  3465               	retlw	101	;'e'
  3026  39AE  346D               	retlw	109	;'m'
  3027  39AF  3470               	retlw	112	;'p'
  3028  39B0  3474               	retlw	116	;'t'
  3029  39B1  3469               	retlw	105	;'i'
  3030  39B2  346E               	retlw	110	;'n'
  3031  39B3  3467               	retlw	103	;'g'
  3032  39B4  3420               	retlw	32	;' '
  3033  39B5  3474               	retlw	116	;'t'
  3034  39B6  346F               	retlw	111	;'o'
  3035  39B7  3420               	retlw	32	;' '
  3036  39B8  3463               	retlw	99	;'c'
  3037  39B9  346F               	retlw	111	;'o'
  3038  39BA  346D               	retlw	109	;'m'
  3039  39BB  346D               	retlw	109	;'m'
  3040  39BC  3475               	retlw	117	;'u'
  3041  39BD  346E               	retlw	110	;'n'
  3042  39BE  3469               	retlw	105	;'i'
  3043  39BF  3463               	retlw	99	;'c'
  3044  39C0  3461               	retlw	97	;'a'
  3045  39C1  3474               	retlw	116	;'t'
  3046  39C2  3465               	retlw	101	;'e'
  3047  39C3  3420               	retlw	32	;' '
  3048  39C4  3477               	retlw	119	;'w'
  3049  39C5  3469               	retlw	105	;'i'
  3050  39C6  3474               	retlw	116	;'t'
  3051  39C7  3468               	retlw	104	;'h'
  3052  39C8  3420               	retlw	32	;' '
  3053  39C9  3441               	retlw	65	;'A'
  3054  39CA  3446               	retlw	70	;'F'
  3055  39CB  3445               	retlw	69	;'E'
  3056  39CC  342E               	retlw	46	;'.'
  3057  39CD  342E               	retlw	46	;'.'
  3058  39CE  342E               	retlw	46	;'.'
  3059  39CF  340A               	retlw	10
  3060  39D0  340D               	retlw	13
  3061  39D1  3400               	retlw	0
  3062                           
  3063                           	psect	stringtext17
  3064  39D2                     __pstringtext17:	
  3065  39D2                     STR_12:	
  3066  39D2  3450               	retlw	80	;'P'
  3067  39D3  3472               	retlw	114	;'r'
  3068  39D4  3469               	retlw	105	;'i'
  3069  39D5  346E               	retlw	110	;'n'
  3070  39D6  3474               	retlw	116	;'t'
  3071  39D7  3469               	retlw	105	;'i'
  3072  39D8  346E               	retlw	110	;'n'
  3073  39D9  3467               	retlw	103	;'g'
  3074  39DA  3420               	retlw	32	;' '
  3075  39DB  346F               	retlw	111	;'o'
  3076  39DC  3475               	retlw	117	;'u'
  3077  39DD  3474               	retlw	116	;'t'
  3078  39DE  3420               	retlw	32	;' '
  3079  39DF  3441               	retlw	65	;'A'
  3080  39E0  3446               	retlw	70	;'F'
  3081  39E1  3445               	retlw	69	;'E'
  3082  39E2  3420               	retlw	32	;' '
  3083  39E3  3472               	retlw	114	;'r'
  3084  39E4  3465               	retlw	101	;'e'
  3085  39E5  3467               	retlw	103	;'g'
  3086  39E6  3469               	retlw	105	;'i'
  3087  39E7  3473               	retlw	115	;'s'
  3088  39E8  3474               	retlw	116	;'t'
  3089  39E9  3465               	retlw	101	;'e'
  3090  39EA  3472               	retlw	114	;'r'
  3091  39EB  3420               	retlw	32	;' '
  3092  39EC  3476               	retlw	118	;'v'
  3093  39ED  3461               	retlw	97	;'a'
  3094  39EE  346C               	retlw	108	;'l'
  3095  39EF  3475               	retlw	117	;'u'
  3096  39F0  3465               	retlw	101	;'e'
  3097  39F1  3473               	retlw	115	;'s'
  3098  39F2  342E               	retlw	46	;'.'
  3099  39F3  342E               	retlw	46	;'.'
  3100  39F4  342E               	retlw	46	;'.'
  3101  39F5  340A               	retlw	10
  3102  39F6  340D               	retlw	13
  3103  39F7  3400               	retlw	0
  3104                           
  3105                           	psect	stringtext18
  3106  3A18                     __pstringtext18:	
  3107  3A18                     STR_16:	
  3108  3A18  3430               	retlw	48	;'0'
  3109  3A19  3478               	retlw	120	;'x'
  3110  3A1A  3430               	retlw	48	;'0'
  3111  3A1B  3434               	retlw	52	;'4'
  3112  3A1C  3420               	retlw	32	;' '
  3113  3A1D  3453               	retlw	83	;'S'
  3114  3A1E  3459               	retlw	89	;'Y'
  3115  3A1F  3453               	retlw	83	;'S'
  3116  3A20  345F               	retlw	95	;'_'
  3117  3A21  3443               	retlw	67	;'C'
  3118  3A22  3454               	retlw	84	;'T'
  3119  3A23  3452               	retlw	82	;'R'
  3120  3A24  344C               	retlw	76	;'L'
  3121  3A25  3431               	retlw	49	;'1'
  3122  3A26  343A               	retlw	58	;':'
  3123  3A27  3420               	retlw	32	;' '
  3124  3A28  3425               	retlw	37	;'%'
  3125  3A29  3469               	retlw	105	;'i'
  3126  3A2A  3420               	retlw	32	;' '
  3127  3A2B  340A               	retlw	10
  3128  3A2C  340D               	retlw	13
  3129  3A2D  3400               	retlw	0
  3130                           
  3131                           	psect	stringtext19
  3132  3A2E                     __pstringtext19:	
  3133  3A2E                     STR_17:	
  3134  3A2E  3430               	retlw	48	;'0'
  3135  3A2F  3478               	retlw	120	;'x'
  3136  3A30  3430               	retlw	48	;'0'
  3137  3A31  3435               	retlw	53	;'5'
  3138  3A32  3420               	retlw	32	;' '
  3139  3A33  3453               	retlw	83	;'S'
  3140  3A34  3459               	retlw	89	;'Y'
  3141  3A35  3453               	retlw	83	;'S'
  3142  3A36  345F               	retlw	95	;'_'
  3143  3A37  3443               	retlw	67	;'C'
  3144  3A38  3454               	retlw	84	;'T'
  3145  3A39  3452               	retlw	82	;'R'
  3146  3A3A  344C               	retlw	76	;'L'
  3147  3A3B  3432               	retlw	50	;'2'
  3148  3A3C  343A               	retlw	58	;':'
  3149  3A3D  3420               	retlw	32	;' '
  3150  3A3E  3425               	retlw	37	;'%'
  3151  3A3F  3469               	retlw	105	;'i'
  3152  3A40  3420               	retlw	32	;' '
  3153  3A41  340A               	retlw	10
  3154  3A42  340D               	retlw	13
  3155  3A43  3400               	retlw	0
  3156                           
  3157                           	psect	stringtext20
  3158  3A44                     __pstringtext20:	
  3159  3A44                     STR_15:	
  3160  3A44  3430               	retlw	48	;'0'
  3161  3A45  3478               	retlw	120	;'x'
  3162  3A46  3430               	retlw	48	;'0'
  3163  3A47  3431               	retlw	49	;'1'
  3164  3A48  3420               	retlw	32	;' '
  3165  3A49  3443               	retlw	67	;'C'
  3166  3A4A  3445               	retlw	69	;'E'
  3167  3A4B  344C               	retlw	76	;'L'
  3168  3A4C  344C               	retlw	76	;'L'
  3169  3A4D  3442               	retlw	66	;'B'
  3170  3A4E  3441               	retlw	65	;'A'
  3171  3A4F  344C               	retlw	76	;'L'
  3172  3A50  3431               	retlw	49	;'1'
  3173  3A51  343A               	retlw	58	;':'
  3174  3A52  3420               	retlw	32	;' '
  3175  3A53  3425               	retlw	37	;'%'
  3176  3A54  3469               	retlw	105	;'i'
  3177  3A55  3420               	retlw	32	;' '
  3178  3A56  340A               	retlw	10
  3179  3A57  340D               	retlw	13
  3180  3A58  3400               	retlw	0
  3181                           
  3182                           	psect	stringtext21
  3183  3A59                     __pstringtext21:	
  3184  3A59                     STR_18:	
  3185  3A59  3430               	retlw	48	;'0'
  3186  3A5A  3478               	retlw	120	;'x'
  3187  3A5B  3430               	retlw	48	;'0'
  3188  3A5C  3436               	retlw	54	;'6'
  3189  3A5D  3420               	retlw	32	;' '
  3190  3A5E  3450               	retlw	80	;'P'
  3191  3A5F  3452               	retlw	82	;'R'
  3192  3A60  344F               	retlw	79	;'O'
  3193  3A61  3454               	retlw	84	;'T'
  3194  3A62  3445               	retlw	69	;'E'
  3195  3A63  3443               	retlw	67	;'C'
  3196  3A64  3454               	retlw	84	;'T'
  3197  3A65  3431               	retlw	49	;'1'
  3198  3A66  343A               	retlw	58	;':'
  3199  3A67  3420               	retlw	32	;' '
  3200  3A68  3425               	retlw	37	;'%'
  3201  3A69  3469               	retlw	105	;'i'
  3202  3A6A  3420               	retlw	32	;' '
  3203  3A6B  340A               	retlw	10
  3204  3A6C  340D               	retlw	13
  3205  3A6D  3400               	retlw	0
  3206                           
  3207                           	psect	stringtext22
  3208  3A6E                     __pstringtext22:	
  3209  3A6E                     STR_19:	
  3210  3A6E  3430               	retlw	48	;'0'
  3211  3A6F  3478               	retlw	120	;'x'
  3212  3A70  3430               	retlw	48	;'0'
  3213  3A71  3437               	retlw	55	;'7'
  3214  3A72  3420               	retlw	32	;' '
  3215  3A73  3450               	retlw	80	;'P'
  3216  3A74  3452               	retlw	82	;'R'
  3217  3A75  344F               	retlw	79	;'O'
  3218  3A76  3454               	retlw	84	;'T'
  3219  3A77  3445               	retlw	69	;'E'
  3220  3A78  3443               	retlw	67	;'C'
  3221  3A79  3454               	retlw	84	;'T'
  3222  3A7A  3432               	retlw	50	;'2'
  3223  3A7B  343A               	retlw	58	;':'
  3224  3A7C  3420               	retlw	32	;' '
  3225  3A7D  3425               	retlw	37	;'%'
  3226  3A7E  3469               	retlw	105	;'i'
  3227  3A7F  3420               	retlw	32	;' '
  3228  3A80  340A               	retlw	10
  3229  3A81  340D               	retlw	13
  3230  3A82  3400               	retlw	0
  3231                           
  3232                           	psect	stringtext23
  3233  3A83                     __pstringtext23:	
  3234  3A83                     STR_20:	
  3235  3A83  3430               	retlw	48	;'0'
  3236  3A84  3478               	retlw	120	;'x'
  3237  3A85  3430               	retlw	48	;'0'
  3238  3A86  3438               	retlw	56	;'8'
  3239  3A87  3420               	retlw	32	;' '
  3240  3A88  3450               	retlw	80	;'P'
  3241  3A89  3452               	retlw	82	;'R'
  3242  3A8A  344F               	retlw	79	;'O'
  3243  3A8B  3454               	retlw	84	;'T'
  3244  3A8C  3445               	retlw	69	;'E'
  3245  3A8D  3443               	retlw	67	;'C'
  3246  3A8E  3454               	retlw	84	;'T'
  3247  3A8F  3433               	retlw	51	;'3'
  3248  3A90  343A               	retlw	58	;':'
  3249  3A91  3420               	retlw	32	;' '
  3250  3A92  3425               	retlw	37	;'%'
  3251  3A93  3469               	retlw	105	;'i'
  3252  3A94  3420               	retlw	32	;' '
  3253  3A95  340A               	retlw	10
  3254  3A96  340D               	retlw	13
  3255  3A97  3400               	retlw	0
  3256                           
  3257                           	psect	stringtext24
  3258  3A98                     __pstringtext24:	
  3259  3A98                     STR_14:	
  3260  3A98  3430               	retlw	48	;'0'
  3261  3A99  3478               	retlw	120	;'x'
  3262  3A9A  3430               	retlw	48	;'0'
  3263  3A9B  3430               	retlw	48	;'0'
  3264  3A9C  3420               	retlw	32	;' '
  3265  3A9D  3453               	retlw	83	;'S'
  3266  3A9E  3459               	retlw	89	;'Y'
  3267  3A9F  3453               	retlw	83	;'S'
  3268  3AA0  345F               	retlw	95	;'_'
  3269  3AA1  3453               	retlw	83	;'S'
  3270  3AA2  3454               	retlw	84	;'T'
  3271  3AA3  3441               	retlw	65	;'A'
  3272  3AA4  3454               	retlw	84	;'T'
  3273  3AA5  343A               	retlw	58	;':'
  3274  3AA6  3420               	retlw	32	;' '
  3275  3AA7  3425               	retlw	37	;'%'
  3276  3AA8  3469               	retlw	105	;'i'
  3277  3AA9  3420               	retlw	32	;' '
  3278  3AAA  340A               	retlw	10
  3279  3AAB  340D               	retlw	13
  3280  3AAC  3400               	retlw	0
  3281                           
  3282                           	psect	stringtext25
  3283  3AAD                     __pstringtext25:	
  3284  3AAD                     STR_21:	
  3285  3AAD  3430               	retlw	48	;'0'
  3286  3AAE  3478               	retlw	120	;'x'
  3287  3AAF  3430               	retlw	48	;'0'
  3288  3AB0  3439               	retlw	57	;'9'
  3289  3AB1  3420               	retlw	32	;' '
  3290  3AB2  344F               	retlw	79	;'O'
  3291  3AB3  3456               	retlw	86	;'V'
  3292  3AB4  345F               	retlw	95	;'_'
  3293  3AB5  3454               	retlw	84	;'T'
  3294  3AB6  3452               	retlw	82	;'R'
  3295  3AB7  3449               	retlw	73	;'I'
  3296  3AB8  3450               	retlw	80	;'P'
  3297  3AB9  343A               	retlw	58	;':'
  3298  3ABA  3420               	retlw	32	;' '
  3299  3ABB  3425               	retlw	37	;'%'
  3300  3ABC  3469               	retlw	105	;'i'
  3301  3ABD  3420               	retlw	32	;' '
  3302  3ABE  340A               	retlw	10
  3303  3ABF  340D               	retlw	13
  3304  3AC0  3400               	retlw	0
  3305                           
  3306                           	psect	stringtext26
  3307  3AC1                     __pstringtext26:	
  3308  3AC1                     STR_22:	
  3309  3AC1  3430               	retlw	48	;'0'
  3310  3AC2  3478               	retlw	120	;'x'
  3311  3AC3  3430               	retlw	48	;'0'
  3312  3AC4  3441               	retlw	65	;'A'
  3313  3AC5  3420               	retlw	32	;' '
  3314  3AC6  3455               	retlw	85	;'U'
  3315  3AC7  3456               	retlw	86	;'V'
  3316  3AC8  345F               	retlw	95	;'_'
  3317  3AC9  3454               	retlw	84	;'T'
  3318  3ACA  3452               	retlw	82	;'R'
  3319  3ACB  3449               	retlw	73	;'I'
  3320  3ACC  3450               	retlw	80	;'P'
  3321  3ACD  343A               	retlw	58	;':'
  3322  3ACE  3420               	retlw	32	;' '
  3323  3ACF  3425               	retlw	37	;'%'
  3324  3AD0  3469               	retlw	105	;'i'
  3325  3AD1  3420               	retlw	32	;' '
  3326  3AD2  340A               	retlw	10
  3327  3AD3  340D               	retlw	13
  3328  3AD4  3400               	retlw	0
  3329                           
  3330                           	psect	stringtext27
  3331  3AD5                     __pstringtext27:	
  3332  3AD5                     STR_23:	
  3333  3AD5  3430               	retlw	48	;'0'
  3334  3AD6  3478               	retlw	120	;'x'
  3335  3AD7  3430               	retlw	48	;'0'
  3336  3AD8  3442               	retlw	66	;'B'
  3337  3AD9  3420               	retlw	32	;' '
  3338  3ADA  3443               	retlw	67	;'C'
  3339  3ADB  3443               	retlw	67	;'C'
  3340  3ADC  345F               	retlw	95	;'_'
  3341  3ADD  3443               	retlw	67	;'C'
  3342  3ADE  3446               	retlw	70	;'F'
  3343  3ADF  3447               	retlw	71	;'G'
  3344  3AE0  343A               	retlw	58	;':'
  3345  3AE1  3420               	retlw	32	;' '
  3346  3AE2  3425               	retlw	37	;'%'
  3347  3AE3  3469               	retlw	105	;'i'
  3348  3AE4  3420               	retlw	32	;' '
  3349  3AE5  340A               	retlw	10
  3350  3AE6  340D               	retlw	13
  3351  3AE7  3400               	retlw	0
  3352                           
  3353                           	psect	stringtext28
  3354  3AE8                     __pstringtext28:	
  3355  3AE8                     STR_24:	
  3356  3AE8  3430               	retlw	48	;'0'
  3357  3AE9  3478               	retlw	120	;'x'
  3358  3AEA  3433               	retlw	51	;'3'
  3359  3AEB  3432               	retlw	50	;'2'
  3360  3AEC  3420               	retlw	32	;' '
  3361  3AED  3443               	retlw	67	;'C'
  3362  3AEE  3443               	retlw	67	;'C'
  3363  3AEF  345F               	retlw	95	;'_'
  3364  3AF0  3448               	retlw	72	;'H'
  3365  3AF1  3449               	retlw	73	;'I'
  3366  3AF2  343A               	retlw	58	;':'
  3367  3AF3  3420               	retlw	32	;' '
  3368  3AF4  3425               	retlw	37	;'%'
  3369  3AF5  3469               	retlw	105	;'i'
  3370  3AF6  3420               	retlw	32	;' '
  3371  3AF7  340A               	retlw	10
  3372  3AF8  340D               	retlw	13
  3373  3AF9  3400               	retlw	0
  3374                           
  3375                           	psect	stringtext29
  3376  3AFA                     __pstringtext29:	
  3377  3AFA                     STR_25:	
  3378  3AFA  3430               	retlw	48	;'0'
  3379  3AFB  3478               	retlw	120	;'x'
  3380  3AFC  3433               	retlw	51	;'3'
  3381  3AFD  3433               	retlw	51	;'3'
  3382  3AFE  3420               	retlw	32	;' '
  3383  3AFF  3443               	retlw	67	;'C'
  3384  3B00  3443               	retlw	67	;'C'
  3385  3B01  345F               	retlw	95	;'_'
  3386  3B02  344C               	retlw	76	;'L'
  3387  3B03  344F               	retlw	79	;'O'
  3388  3B04  343A               	retlw	58	;':'
  3389  3B05  3420               	retlw	32	;' '
  3390  3B06  3425               	retlw	37	;'%'
  3391  3B07  3469               	retlw	105	;'i'
  3392  3B08  3420               	retlw	32	;' '
  3393  3B09  340A               	retlw	10
  3394  3B0A  340D               	retlw	13
  3395  3B0B  3400               	retlw	0
  3396                           
  3397                           	psect	stringtext30
  3398  3B44                     __pstringtext30:	
  3399  3B44                     STR_27:	
  3400  3B44  3449               	retlw	73	;'I'
  3401  3B45  344E               	retlw	78	;'N'
  3402  3B46  3446               	retlw	70	;'F'
  3403  3B47  3400               	retlw	0
  3404                           
  3405                           	psect	stringtext31
  3406  3B48                     __pstringtext31:	
  3407  3B48                     STR_31:	
  3408  3B48  344E               	retlw	78	;'N'
  3409  3B49  3441               	retlw	65	;'A'
  3410  3B4A  344E               	retlw	78	;'N'
  3411  3B4B  3400               	retlw	0
  3412                           
  3413                           	psect	stringtext32
  3414  3B4C                     __pstringtext32:	
  3415  3B4C                     STR_140:	
  3416  3B4C  3468               	retlw	104	;'h'
  3417  3B4D  3468               	retlw	104	;'h'
  3418  3B4E  3458               	retlw	88	;'X'
  3419  3B4F  3400               	retlw	0
  3420                           
  3421                           	psect	stringtext33
  3422  3B50                     __pstringtext33:	
  3423  3B50                     STR_35:	
  3424  3B50  3468               	retlw	104	;'h'
  3425  3B51  3468               	retlw	104	;'h'
  3426  3B52  3464               	retlw	100	;'d'
  3427  3B53  3400               	retlw	0
  3428                           
  3429                           	psect	stringtext34
  3430  3B54                     __pstringtext34:	
  3431  3B54                     STR_28:	
  3432  3B54  3469               	retlw	105	;'i'
  3433  3B55  346E               	retlw	110	;'n'
  3434  3B56  3466               	retlw	102	;'f'
  3435  3B57  3400               	retlw	0
  3436                           
  3437                           	psect	stringtext35
  3438  3B58                     __pstringtext35:	
  3439  3B58                     STR_39:	
  3440  3B58  3468               	retlw	104	;'h'
  3441  3B59  3468               	retlw	104	;'h'
  3442  3B5A  3469               	retlw	105	;'i'
  3443  3B5B  3400               	retlw	0
  3444                           
  3445                           	psect	stringtext36
  3446  3B5C                     __pstringtext36:	
  3447  3B5C                     STR_32:	
  3448  3B5C  346E               	retlw	110	;'n'
  3449  3B5D  3461               	retlw	97	;'a'
  3450  3B5E  346E               	retlw	110	;'n'
  3451  3B5F  3400               	retlw	0
  3452                           
  3453                           	psect	stringtext37
  3454  3B60                     __pstringtext37:	
  3455  3B60                     STR_96:	
  3456  3B60  3468               	retlw	104	;'h'
  3457  3B61  3468               	retlw	104	;'h'
  3458  3B62  346E               	retlw	110	;'n'
  3459  3B63  3400               	retlw	0
  3460                           
  3461                           	psect	stringtext38
  3462  3B64                     __pstringtext38:	
  3463  3B64                     STR_76:	
  3464  3B64  3468               	retlw	104	;'h'
  3465  3B65  3468               	retlw	104	;'h'
  3466  3B66  346F               	retlw	111	;'o'
  3467  3B67  3400               	retlw	0
  3468                           
  3469                           	psect	stringtext39
  3470  3B68                     __pstringtext39:	
  3471  3B68                     STR_116:	
  3472  3B68  3468               	retlw	104	;'h'
  3473  3B69  3468               	retlw	104	;'h'
  3474  3B6A  3475               	retlw	117	;'u'
  3475  3B6B  3400               	retlw	0
  3476                           
  3477                           	psect	stringtext40
  3478  3B6C                     __pstringtext40:	
  3479  3B6C                     STR_136:	
  3480  3B6C  3468               	retlw	104	;'h'
  3481  3B6D  3468               	retlw	104	;'h'
  3482  3B6E  3478               	retlw	120	;'x'
  3483  3B6F  3400               	retlw	0
  3484                           
  3485                           	psect	stringtext41
  3486  3B70                     __pstringtext41:	
  3487  3B70                     STR_158:	
  3488  3B70  346C               	retlw	108	;'l'
  3489  3B71  3458               	retlw	88	;'X'
  3490  3B72  3400               	retlw	0
  3491                           
  3492                           	psect	stringtext42
  3493  3B73                     __pstringtext42:	
  3494  3B73                     STR_167:	
  3495  3B73  347A               	retlw	122	;'z'
  3496  3B74  3458               	retlw	88	;'X'
  3497  3B75  3400               	retlw	0
  3498                           
  3499                           	psect	stringtext43
  3500  3B76                     __pstringtext43:	
  3501  3B76                     STR_53:	
  3502  3B76  346C               	retlw	108	;'l'
  3503  3B77  3464               	retlw	100	;'d'
  3504  3B78  3400               	retlw	0
  3505                           
  3506                           	psect	stringtext44
  3507  3B79                     __pstringtext44:	
  3508  3B79                     STR_62:	
  3509  3B79  347A               	retlw	122	;'z'
  3510  3B7A  3464               	retlw	100	;'d'
  3511  3B7B  3400               	retlw	0
  3512                           
  3513                           	psect	stringtext45
  3514  3B7C                     __pstringtext45:	
  3515  3B7C                     STR_71:	
  3516  3B7C  346C               	retlw	108	;'l'
  3517  3B7D  3466               	retlw	102	;'f'
  3518  3B7E  3400               	retlw	0
  3519                           
  3520                           	psect	stringtext46
  3521  3B7F                     __pstringtext46:	
  3522  3B7F                     STR_57:	
  3523  3B7F  346C               	retlw	108	;'l'
  3524  3B80  3469               	retlw	105	;'i'
  3525  3B81  3400               	retlw	0
  3526                           
  3527                           	psect	stringtext47
  3528  3B82                     __pstringtext47:	
  3529  3B82                     STR_66:	
  3530  3B82  347A               	retlw	122	;'z'
  3531  3B83  3469               	retlw	105	;'i'
  3532  3B84  3400               	retlw	0
  3533                           
  3534                           	psect	stringtext48
  3535  3B85                     __pstringtext48:	
  3536  3B85                     STR_106:	
  3537  3B85  346C               	retlw	108	;'l'
  3538  3B86  346E               	retlw	110	;'n'
  3539  3B87  3400               	retlw	0
  3540                           
  3541                           	psect	stringtext49
  3542  3B88                     __pstringtext49:	
  3543  3B88                     STR_111:	
  3544  3B88  347A               	retlw	122	;'z'
  3545  3B89  346E               	retlw	110	;'n'
  3546  3B8A  3400               	retlw	0
  3547                           
  3548                           	psect	stringtext50
  3549  3B8B                     __pstringtext50:	
  3550  3B8B                     STR_86:	
  3551  3B8B  346C               	retlw	108	;'l'
  3552  3B8C  346F               	retlw	111	;'o'
  3553  3B8D  3400               	retlw	0
  3554                           
  3555                           	psect	stringtext51
  3556  3B8E                     __pstringtext51:	
  3557  3B8E                     STR_91:	
  3558  3B8E  347A               	retlw	122	;'z'
  3559  3B8F  346F               	retlw	111	;'o'
  3560  3B90  3400               	retlw	0
  3561                           
  3562                           	psect	stringtext52
  3563  3B91                     __pstringtext52:	
  3564  3B91                     STR_126:	
  3565  3B91  346C               	retlw	108	;'l'
  3566  3B92  3475               	retlw	117	;'u'
  3567  3B93  3400               	retlw	0
  3568                           
  3569                           	psect	stringtext53
  3570  3B94                     __pstringtext53:	
  3571  3B94                     STR_131:	
  3572  3B94  347A               	retlw	122	;'z'
  3573  3B95  3475               	retlw	117	;'u'
  3574  3B96  3400               	retlw	0
  3575                           
  3576                           	psect	stringtext54
  3577  3B97                     __pstringtext54:	
  3578  3B97                     STR_154:	
  3579  3B97  346C               	retlw	108	;'l'
  3580  3B98  3478               	retlw	120	;'x'
  3581  3B99  3400               	retlw	0
  3582                           
  3583                           	psect	stringtext55
  3584  3B9A                     __pstringtext55:	
  3585  3B9A                     STR_163:	
  3586  3B9A  347A               	retlw	122	;'z'
  3587  3B9B  3478               	retlw	120	;'x'
  3588  3B9C  3400               	retlw	0
  3589                           
  3590                           	psect	stringtext56
  3591  0000                     __pstringtext56:	
  3592  3A56                     
  3593                           ; #config settings
  3594  0000                     
  3595                           	psect	cinit
  3596  0020                     start_initialization:	
  3597  0020                     __initialization:		;BIGRAM
  3598                           
  3599                           ; Initialize objects allocated to BANK4
  3600  0020  3000               	movlw	low __pidataBANK4
  3601  0021  0084               	movwf	4
  3602  0022  3098               	movlw	(high __pidataBANK4)| (0+128)
  3603  0023  0085               	movwf	5
  3604  0024  0024               	movlb	4	; select bank4
  3605  0025  0012               	moviw fsr0++
  3606  0026  00B4               	movwf	__pdataBANK4& (0+127)
  3607  0027  0012               	moviw fsr0++
  3608  0028  00B5               	movwf	(__pdataBANK4+1)& (0+127)
  3609  0029  0012               	moviw fsr0++
  3610  002A  00B6               	movwf	(__pdataBANK4+2)& (0+127)
  3611  002B  0012               	moviw fsr0++
  3612  002C  00B7               	movwf	(__pdataBANK4+3)& (0+127)
  3613  002D  0012               	moviw fsr0++
  3614  002E  00B8               	movwf	(__pdataBANK4+4)& (0+127)
  3615  002F  0012               	moviw fsr0++
  3616  0030  00B9               	movwf	(__pdataBANK4+5)& (0+127)
  3617  0031  0012               	moviw fsr0++
  3618  0032  00BA               	movwf	(__pdataBANK4+6)& (0+127)
  3619                           
  3620                           ; Clear objects allocated to BIGRAM
  3621  0033  3071               	movlw	low (0+10097)
  3622  0034  0084               	movwf	4
  3623  0035  3027               	movlw	high (0+10097)
  3624  0036  0085               	movwf	5
  3625  0037  307F               	movlw	127
  3626  0038  00FE               	movwf	btemp
  3627  0039  3000               	movlw	0
  3628  003A  00FF               	movwf	btemp+1
  3629  003B  3188  2000  3180   	fcall	clear_ram0
  3630                           
  3631                           ; Clear objects allocated to COMMON
  3632  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  3633                           
  3634                           ; Clear objects allocated to BANK3
  3635  003F  30A0               	movlw	low __pbssBANK3
  3636  0040  0084               	movwf	4
  3637  0041  3001               	movlw	high __pbssBANK3
  3638  0042  0085               	movwf	5
  3639  0043  3033               	movlw	51
  3640  0044  00FE               	movwf	btemp
  3641  0045  3000               	movlw	0
  3642  0046  00FF               	movwf	btemp+1
  3643  0047  3188  2000  3180   	fcall	clear_ram0
  3644                           
  3645                           ; Clear objects allocated to BANK4
  3646  004A  3020               	movlw	low __pbssBANK4
  3647  004B  0084               	movwf	4
  3648  004C  3002               	movlw	high __pbssBANK4
  3649  004D  0085               	movwf	5
  3650  004E  3014               	movlw	20
  3651  004F  00FE               	movwf	btemp
  3652  0050  3000               	movlw	0
  3653  0051  00FF               	movwf	btemp+1
  3654  0052  3188  2000  3180   	fcall	clear_ram0
  3655                           
  3656                           ; Clear objects allocated to BANK5
  3657  0055  30A0               	movlw	low __pbssBANK5
  3658  0056  0084               	movwf	4
  3659  0057  3002               	movlw	high __pbssBANK5
  3660  0058  0085               	movwf	5
  3661  0059  3050               	movlw	80
  3662  005A  00FE               	movwf	btemp
  3663  005B  3000               	movlw	0
  3664  005C  00FF               	movwf	btemp+1
  3665  005D  3188  2000         	fcall	clear_ram0
  3666  005F                     end_of_initialization:	
  3667                           ;End of C runtime variable initialization code
  3668                           
  3669  005F                     __end_of__initialization:	
  3670  005F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3671  0060  0020               	movlb	0
  3672  0061  31BF  2FCE         	ljmp	_main	;jump to C main() function
  3673                           
  3674                           	psect	bssCOMMON
  3675  007C                     __pbssCOMMON:	
  3676  007C                     _toggleColor:	
  3677  007C                     	ds	1
  3678                           
  3679                           	psect	bssBANK3
  3680  01A0                     __pbssBANK3:	
  3681  01A0                     _cellVoltages:	
  3682  01A0                     	ds	10
  3683  01AA                     BQ76920@shuntResistorValue_mOhm:	
  3684  01AA                     	ds	4
  3685  01AE                     _batCurrent:	
  3686  01AE                     	ds	4
  3687  01B2                     _nout:	
  3688  01B2                     	ds	2
  3689  01B4                     _width:	
  3690  01B4                     	ds	2
  3691  01B6                     _prec:	
  3692  01B6                     	ds	2
  3693  01B8                     _flags:	
  3694  01B8                     	ds	2
  3695  01BA                     _minCellVoltage:	
  3696  01BA                     	ds	2
  3697  01BC                     _maxCellVoltage:	
  3698  01BC                     	ds	2
  3699  01BE                     _maxCellTempDischarge:	
  3700  01BE                     	ds	2
  3701  01C0                     _maxCellTempCharge:	
  3702  01C0                     	ds	2
  3703  01C2                     _minCellTempDischarge:	
  3704  01C2                     	ds	2
  3705  01C4                     _minCellTempCharge:	
  3706  01C4                     	ds	2
  3707  01C6                     _adcOffset:	
  3708  01C6                     	ds	2
  3709  01C8                     BQ76920@protect3:	
  3710  01C8                     	ds	1
  3711  01C9                     BQ76920@protect2:	
  3712  01C9                     	ds	1
  3713  01CA                     BQ76920@protect1:	
  3714  01CA                     	ds	1
  3715  01CB                     myIsr@count:	
  3716  01CB                     	ds	1
  3717  01CC                     _tmr1_flag:	
  3718  01CC                     	ds	1
  3719  01CD                     _currState:	
  3720  01CD                     	ds	1
  3721  01CE                     _protect3:	
  3722  01CE                     	ds	1
  3723  01CF                     _protect2:	
  3724  01CF                     	ds	1
  3725  01D0                     _protect1:	
  3726  01D0                     	ds	1
  3727  01D1                     _adcGain:	
  3728  01D1                     	ds	2
  3729                           
  3730                           	psect	bssBANK4
  3731  0220                     __pbssBANK4:	
  3732  0220                     floorf@F524:	
  3733  0220                     	ds	4
  3734  0224                     ___fpclassifyf@F463:	
  3735  0224                     	ds	4
  3736  0228                     _shuntResistorValue_mOhm:	
  3737  0228                     	ds	4
  3738  022C                     _batVoltage:	
  3739  022C                     	ds	4
  3740  0230                     _errno:	
  3741  0230                     	ds	2
  3742  0232                     _temperatures:	
  3743  0232                     	ds	2
  3744                           
  3745                           	psect	dataBANK4
  3746  0234                     __pdataBANK4:	
  3747  0234                     stoa@F1174:	
  3748  0234                     	ds	7
  3749                           
  3750                           	psect	bssBANK5
  3751  02A0                     __pbssBANK5:	
  3752  02A0                     _dbuf:	
  3753  02A0                     	ds	80
  3754                           
  3755                           	psect	clrtext
  3756  0800                     clear_ram0:	
  3757                           ;	Called with FSR0 containing the base address, and
  3758                           ;	btemp/btemp+1 has the size to clear
  3759                           
  3760  0800  0064               	clrwdt	;clear the watchdog before getting into this loop
  3761  0801                     clrloop0:	
  3762  0801  0180               	clrf	0	;clear RAM location pointed to by FSR
  3763  0802  3101               	addfsr 0,1
  3764  0803  3001               	movlw	1
  3765  0804  02FE               	subwf	126,f
  3766  0805  3000               	movlw	0
  3767  0806  3BFF               	subwfb	127,f
  3768  0807  087F               	movf	127,w
  3769  0808  047E               	iorwf	126,w
  3770  0809  1903               	btfsc	3,2
  3771  080A  3400               	retlw	0	;all done for this memory range, return
  3772  080B  2801               	goto	clrloop0	;have we reached the end yet?
  3773                           
  3774                           	psect	cstackBANK3
  3775  01D3                     __pcstackBANK3:	
  3776  01D3                     ?_snprintf:	
  3777  01D3                     snprintf@s:	
  3778                           ; 2 bytes @ 0x0
  3779                           
  3780                           
  3781                           ; 2 bytes @ 0x0
  3782  01D3                     	ds	2
  3783  01D5                     snprintf@n:	
  3784                           
  3785                           ; 2 bytes @ 0x2
  3786  01D5                     	ds	2
  3787  01D7                     snprintf@fmt:	
  3788                           
  3789                           ; 2 bytes @ 0x4
  3790  01D7                     	ds	20
  3791  01EB                     ??_main:	
  3792                           
  3793                           ; 1 bytes @ 0x18
  3794  01EB                     	ds	2
  3795                           
  3796                           	psect	cstackBANK2
  3797  0120                     __pcstackBANK2:	
  3798  0120                     ??_vfpfcnvrt:	
  3799                           
  3800                           ; 1 bytes @ 0x0
  3801  0120                     	ds	12
  3802  012C                     vfpfcnvrt@cp:	
  3803                           
  3804                           ; 1 bytes @ 0xC
  3805  012C                     	ds	1
  3806  012D                     vfpfcnvrt@done:	
  3807                           
  3808                           ; 2 bytes @ 0xD
  3809  012D                     	ds	2
  3810  012F                     _vfpfcnvrt$1311:	
  3811                           
  3812                           ; 2 bytes @ 0xF
  3813  012F                     	ds	2
  3814  0131                     _vfpfcnvrt$1312:	
  3815                           
  3816                           ; 2 bytes @ 0x11
  3817  0131                     	ds	2
  3818  0133                     _vfpfcnvrt$1338:	
  3819                           
  3820                           ; 2 bytes @ 0x13
  3821  0133                     	ds	2
  3822  0135                     vfpfcnvrt@ct:	
  3823                           
  3824                           ; 3 bytes @ 0x15
  3825  0135                     	ds	3
  3826  0138                     vfpfcnvrt@f:	
  3827                           
  3828                           ; 4 bytes @ 0x18
  3829  0138                     	ds	4
  3830  013C                     vfpfcnvrt@ll:	
  3831                           
  3832                           ; 8 bytes @ 0x1C
  3833  013C                     	ds	8
  3834  0144                     vfpfcnvrt@vp:	
  3835                           
  3836                           ; 1 bytes @ 0x24
  3837  0144                     	ds	1
  3838  0145                     vfpfcnvrt@c:	
  3839                           
  3840                           ; 1 bytes @ 0x25
  3841  0145                     	ds	1
  3842  0146                     vfpfcnvrt@llu:	
  3843                           
  3844                           ; 8 bytes @ 0x26
  3845  0146                     	ds	8
  3846  014E                     ?_vfprintf:	
  3847  014E                     vfprintf@fp:	
  3848                           ; 2 bytes @ 0x2E
  3849                           
  3850                           
  3851                           ; 2 bytes @ 0x2E
  3852  014E                     	ds	2
  3853  0150                     vfprintf@fmt:	
  3854                           
  3855                           ; 2 bytes @ 0x30
  3856  0150                     	ds	2
  3857  0152                     vfprintf@ap:	
  3858                           
  3859                           ; 1 bytes @ 0x32
  3860  0152                     	ds	1
  3861  0153                     vfprintf@cfmt:	
  3862                           
  3863                           ; 2 bytes @ 0x33
  3864  0153                     	ds	2
  3865  0155                     ?_vsnprintf:	
  3866  0155                     vsnprintf@s:	
  3867                           ; 2 bytes @ 0x35
  3868                           
  3869                           
  3870                           ; 2 bytes @ 0x35
  3871  0155                     	ds	2
  3872  0157                     vsnprintf@n:	
  3873                           
  3874                           ; 2 bytes @ 0x37
  3875  0157                     	ds	2
  3876  0159                     vsnprintf@fmt:	
  3877                           
  3878                           ; 2 bytes @ 0x39
  3879  0159                     	ds	2
  3880  015B                     vsnprintf@ap:	
  3881                           
  3882                           ; 1 bytes @ 0x3B
  3883  015B                     	ds	1
  3884  015C                     ??_vsnprintf:	
  3885                           
  3886                           ; 1 bytes @ 0x3C
  3887  015C                     	ds	2
  3888  015E                     _vsnprintf$1940:	
  3889                           
  3890                           ; 2 bytes @ 0x3E
  3891  015E                     	ds	2
  3892  0160                     vsnprintf@cnt:	
  3893                           
  3894                           ; 2 bytes @ 0x40
  3895  0160                     	ds	2
  3896  0162                     vsnprintf@f:	
  3897                           
  3898                           ; 6 bytes @ 0x42
  3899  0162                     	ds	6
  3900  0168                     ??_snprintf:	
  3901                           
  3902                           ; 1 bytes @ 0x48
  3903  0168                     	ds	3
  3904  016B                     snprintf@ap:	
  3905                           
  3906                           ; 1 bytes @ 0x4B
  3907  016B                     	ds	1
  3908  016C                     ??_printotAFERegisters:	
  3909                           
  3910                           ; 1 bytes @ 0x4C
  3911  016C                     	ds	1
  3912  016D                     ??_statemachine:	
  3913                           
  3914                           ; 1 bytes @ 0x4D
  3915  016D                     	ds	2
  3916  016F                     statemachine@success:	
  3917                           
  3918                           ; 1 bytes @ 0x4F
  3919  016F                     	ds	1
  3920                           
  3921                           	psect	cstackBANK1
  3922  00A0                     __pcstackBANK1:	
  3923  00A0                     ?___fltol:	
  3924  00A0                     ?___flsub:	
  3925                           ; 4 bytes @ 0x0
  3926                           
  3927  00A0                     setShortCircuitProtection@scaler:	
  3928                           ; 4 bytes @ 0x0
  3929                           
  3930  00A0                     setOverCurrentDischargeProtection@scaler:	
  3931                           ; 4 bytes @ 0x0
  3932                           
  3933  00A0                     ___fltol@f1:	
  3934                           ; 4 bytes @ 0x0
  3935                           
  3936  00A0                     ___flsub@a:	
  3937                           ; 4 bytes @ 0x0
  3938                           
  3939                           
  3940                           ; 4 bytes @ 0x0
  3941  00A0                     	ds	4
  3942  00A4                     ??___fltol:	
  3943  00A4                     ___flsub@b:	
  3944                           ; 1 bytes @ 0x4
  3945                           
  3946  00A4                     _setShortCircuitProtection$2137:	
  3947                           ; 4 bytes @ 0x4
  3948                           
  3949  00A4                     _setOverCurrentDischargeProtection$2138:	
  3950                           ; 4 bytes @ 0x4
  3951                           
  3952                           
  3953                           ; 4 bytes @ 0x4
  3954  00A4                     	ds	4
  3955  00A8                     setShortCircuitProtection@i:	
  3956  00A8                     setOverCurrentDischargeProtection@i:	
  3957                           ; 2 bytes @ 0x8
  3958                           
  3959                           
  3960                           ; 2 bytes @ 0x8
  3961  00A8                     	ds	1
  3962  00A9                     ??_updateVoltages:	
  3963  00A9                     ?_efgtoa:	
  3964                           ; 1 bytes @ 0x9
  3965                           
  3966  00A9                     ?_AFE_getSetShortCircuitCurrent:	
  3967                           ; 2 bytes @ 0x9
  3968                           
  3969  00A9                     ?_AFE_getOverCurrentDischargeCurrent:	
  3970                           ; 4 bytes @ 0x9
  3971                           
  3972  00A9                     efgtoa@fp:	
  3973                           ; 4 bytes @ 0x9
  3974                           
  3975                           
  3976                           ; 2 bytes @ 0x9
  3977  00A9                     	ds	1
  3978  00AA                     setShortCircuitProtection@i_969:	
  3979  00AA                     setOverCurrentDischargeProtection@i_978:	
  3980                           ; 2 bytes @ 0xA
  3981                           
  3982                           
  3983                           ; 2 bytes @ 0xA
  3984  00AA                     	ds	1
  3985  00AB                     efgtoa@f:	
  3986                           
  3987                           ; 4 bytes @ 0xB
  3988  00AB                     	ds	1
  3989  00AC                     _updateVoltages$2139:	
  3990                           
  3991                           ; 4 bytes @ 0xC
  3992  00AC                     	ds	1
  3993  00AD                     ??_AFE_getSetShortCircuitCurrent:	
  3994  00AD                     ??_AFE_getOverCurrentDischargeCurrent:	
  3995                           ; 1 bytes @ 0xD
  3996                           
  3997                           
  3998                           ; 1 bytes @ 0xD
  3999  00AD                     	ds	2
  4000  00AF                     efgtoa@c:	
  4001                           
  4002                           ; 1 bytes @ 0xF
  4003  00AF                     	ds	1
  4004  00B0                     ??_efgtoa:	
  4005  00B0                     updateVoltages@adcVal:	
  4006                           ; 1 bytes @ 0x10
  4007                           
  4008                           
  4009                           ; 4 bytes @ 0x10
  4010  00B0                     	ds	4
  4011  00B4                     efgtoa@ou:	
  4012                           
  4013                           ; 4 bytes @ 0x14
  4014  00B4                     	ds	4
  4015  00B8                     _efgtoa$1249:	
  4016                           
  4017                           ; 2 bytes @ 0x18
  4018  00B8                     	ds	2
  4019  00BA                     _efgtoa$1250:	
  4020                           
  4021                           ; 2 bytes @ 0x1A
  4022  00BA                     	ds	2
  4023  00BC                     _efgtoa$1254:	
  4024                           
  4025                           ; 2 bytes @ 0x1C
  4026  00BC                     	ds	2
  4027  00BE                     _efgtoa$1258:	
  4028                           
  4029                           ; 2 bytes @ 0x1E
  4030  00BE                     	ds	2
  4031  00C0                     _efgtoa$1259:	
  4032                           
  4033                           ; 2 bytes @ 0x20
  4034  00C0                     	ds	2
  4035  00C2                     _efgtoa$1260:	
  4036                           
  4037                           ; 2 bytes @ 0x22
  4038  00C2                     	ds	2
  4039  00C4                     efgtoa@t:	
  4040                           
  4041                           ; 2 bytes @ 0x24
  4042  00C4                     	ds	2
  4043  00C6                     efgtoa@pp:	
  4044                           
  4045                           ; 2 bytes @ 0x26
  4046  00C6                     	ds	2
  4047  00C8                     efgtoa@m:	
  4048                           
  4049                           ; 2 bytes @ 0x28
  4050  00C8                     	ds	2
  4051  00CA                     efgtoa@ne:	
  4052                           
  4053                           ; 2 bytes @ 0x2A
  4054  00CA                     	ds	2
  4055  00CC                     efgtoa@d:	
  4056                           
  4057                           ; 2 bytes @ 0x2C
  4058  00CC                     	ds	2
  4059  00CE                     efgtoa@sign:	
  4060                           
  4061                           ; 2 bytes @ 0x2E
  4062  00CE                     	ds	2
  4063  00D0                     efgtoa@p:	
  4064                           
  4065                           ; 2 bytes @ 0x30
  4066  00D0                     	ds	2
  4067  00D2                     efgtoa@nmode:	
  4068                           
  4069                           ; 1 bytes @ 0x32
  4070  00D2                     	ds	1
  4071  00D3                     efgtoa@w:	
  4072                           
  4073                           ; 2 bytes @ 0x33
  4074  00D3                     	ds	2
  4075  00D5                     efgtoa@mode:	
  4076                           
  4077                           ; 1 bytes @ 0x35
  4078  00D5                     	ds	1
  4079  00D6                     efgtoa@h:	
  4080                           
  4081                           ; 4 bytes @ 0x36
  4082  00D6                     	ds	4
  4083  00DA                     efgtoa@l:	
  4084                           
  4085                           ; 4 bytes @ 0x3A
  4086  00DA                     	ds	4
  4087  00DE                     efgtoa@i:	
  4088                           
  4089                           ; 2 bytes @ 0x3E
  4090  00DE                     	ds	2
  4091  00E0                     efgtoa@g:	
  4092                           
  4093                           ; 4 bytes @ 0x40
  4094  00E0                     	ds	4
  4095  00E4                     efgtoa@e:	
  4096                           
  4097                           ; 2 bytes @ 0x44
  4098  00E4                     	ds	2
  4099  00E6                     efgtoa@n:	
  4100                           
  4101                           ; 2 bytes @ 0x46
  4102  00E6                     	ds	2
  4103  00E8                     efgtoa@u:	
  4104                           
  4105                           ; 4 bytes @ 0x48
  4106  00E8                     	ds	4
  4107  00EC                     ?_vfpfcnvrt:	
  4108  00EC                     vfpfcnvrt@fp:	
  4109                           ; 2 bytes @ 0x4C
  4110                           
  4111                           
  4112                           ; 2 bytes @ 0x4C
  4113  00EC                     	ds	2
  4114  00EE                     vfpfcnvrt@fmt:	
  4115                           
  4116                           ; 1 bytes @ 0x4E
  4117  00EE                     	ds	1
  4118  00EF                     vfpfcnvrt@ap:	
  4119                           
  4120                           ; 1 bytes @ 0x4F
  4121  00EF                     	ds	1
  4122                           
  4123                           	psect	cstackCOMMON
  4124  0070                     __pcstackCOMMON:	
  4125  0070                     ?_initClock:	
  4126  0070                     ?_init_GPIO:	
  4127                           ; 1 bytes @ 0x0
  4128                           
  4129  0070                     ?_initWDT:	
  4130                           ; 1 bytes @ 0x0
  4131                           
  4132  0070                     ?_init_I2C:	
  4133                           ; 1 bytes @ 0x0
  4134                           
  4135  0070                     ?_init_TMR1:	
  4136                           ; 1 bytes @ 0x0
  4137                           
  4138  0070                     ?_init_RGB:	
  4139                           ; 1 bytes @ 0x0
  4140                           
  4141  0070                     ?_watchdog_timeout_shutdown:	
  4142                           ; 1 bytes @ 0x0
  4143                           
  4144  0070                     ?_statemachine:	
  4145                           ; 1 bytes @ 0x0
  4146                           
  4147  0070                     ?_RGB_AWAIT_AFE_CONN:	
  4148                           ; 1 bytes @ 0x0
  4149                           
  4150  0070                     ?_init_AFE:	
  4151                           ; 1 bytes @ 0x0
  4152                           
  4153  0070                     ?_printotAFERegisters:	
  4154                           ; 1 bytes @ 0x0
  4155                           
  4156  0070                     ?_AFE_UPDATE:	
  4157                           ; 1 bytes @ 0x0
  4158                           
  4159  0070                     ?_printcellParameters:	
  4160                           ; 1 bytes @ 0x0
  4161                           
  4162  0070                     ?_internal_16:	
  4163                           ; 1 bytes @ 0x0
  4164                           
  4165  0070                     ?_updateVoltages:	
  4166                           ; 1 bytes @ 0x0
  4167                           
  4168  0070                     ?_shutdown_BMS:	
  4169                           ; 1 bytes @ 0x0
  4170                           
  4171  0070                     ?_putch:	
  4172                           ; 1 bytes @ 0x0
  4173                           
  4174  0070                     ?_myIsr:	
  4175                           ; 1 bytes @ 0x0
  4176                           
  4177  0070                     ??_myIsr:	
  4178                           ; 1 bytes @ 0x0
  4179                           
  4180  0070                     ?_main:	
  4181                           ; 1 bytes @ 0x0
  4182                           
  4183  0070                     ?_EUSART_Write:	
  4184                           ; 1 bytes @ 0x0
  4185                           
  4186  0070                     ?_send_I2C_startBit:	
  4187                           ; 1 bytes @ 0x0
  4188                           
  4189  0070                     ?_send_I2C_stopBit:	
  4190                           ; 1 bytes @ 0x0
  4191                           
  4192  0070                     ?_send_I2C_NACK:	
  4193                           ; 1 bytes @ 0x0
  4194                           
  4195  0070                     putch@c:	
  4196                           ; 1 bytes @ 0x0
  4197                           
  4198                           
  4199                           ; 1 bytes @ 0x0
  4200  0070                     	ds	1
  4201  0071                     ?___fleq:	
  4202  0071                     ??_initClock:	
  4203                           ; 1 bit 
  4204                           
  4205  0071                     ??_init_GPIO:	
  4206                           ; 1 bytes @ 0x1
  4207                           
  4208  0071                     ??_initWDT:	
  4209                           ; 1 bytes @ 0x1
  4210                           
  4211  0071                     ??_init_I2C:	
  4212                           ; 1 bytes @ 0x1
  4213                           
  4214  0071                     ??_init_TMR1:	
  4215                           ; 1 bytes @ 0x1
  4216                           
  4217  0071                     ??_init_RGB:	
  4218                           ; 1 bytes @ 0x1
  4219                           
  4220  0071                     ?_RGB_color:	
  4221                           ; 1 bytes @ 0x1
  4222                           
  4223  0071                     ??_internal_16:	
  4224                           ; 1 bytes @ 0x1
  4225                           
  4226  0071                     ?_setShuntResistorValue:	
  4227                           ; 1 bytes @ 0x1
  4228                           
  4229  0071                     ??_shutdown_BMS:	
  4230                           ; 1 bytes @ 0x1
  4231                           
  4232  0071                     ?_strcpy:	
  4233                           ; 1 bytes @ 0x1
  4234                           
  4235  0071                     ??_putch:	
  4236                           ; 1 bytes @ 0x1
  4237                           
  4238  0071                     ??_EUSART_Write:	
  4239                           ; 1 bytes @ 0x1
  4240                           
  4241  0071                     ?_send_I2C_data:	
  4242                           ; 1 bytes @ 0x1
  4243                           
  4244  0071                     ?_send_I2C_controlByte:	
  4245                           ; 1 bytes @ 0x1
  4246                           
  4247  0071                     ??_send_I2C_startBit:	
  4248                           ; 1 bytes @ 0x1
  4249                           
  4250  0071                     ??_send_I2C_stopBit:	
  4251                           ; 1 bytes @ 0x1
  4252                           
  4253  0071                     ??_send_I2C_NACK:	
  4254                           ; 1 bytes @ 0x1
  4255                           
  4256  0071                     ??___aodiv:	
  4257                           ; 1 bytes @ 0x1
  4258                           
  4259  0071                     ??___aomod:	
  4260                           ; 1 bytes @ 0x1
  4261                           
  4262  0071                     ??___lodiv:	
  4263                           ; 1 bytes @ 0x1
  4264                           
  4265  0071                     ??___lomod:	
  4266                           ; 1 bytes @ 0x1
  4267                           
  4268  0071                     ?_fputc:	
  4269                           ; 1 bytes @ 0x1
  4270                           
  4271  0071                     ?_strlen:	
  4272                           ; 2 bytes @ 0x1
  4273                           
  4274  0071                     ?___fpclassifyf:	
  4275                           ; 2 bytes @ 0x1
  4276                           
  4277  0071                     ?_isupper:	
  4278                           ; 2 bytes @ 0x1
  4279                           
  4280  0071                     ?_isalpha:	
  4281                           ; 2 bytes @ 0x1
  4282                           
  4283  0071                     ?_isdigit:	
  4284                           ; 2 bytes @ 0x1
  4285                           
  4286  0071                     ?_strncmp:	
  4287                           ; 2 bytes @ 0x1
  4288                           
  4289  0071                     ?__Umul8_16:	
  4290                           ; 2 bytes @ 0x1
  4291                           
  4292  0071                     ?_isspace:	
  4293                           ; 2 bytes @ 0x1
  4294                           
  4295  0071                     ?_islower:	
  4296                           ; 2 bytes @ 0x1
  4297                           
  4298  0071                     ?_read_I2C_data:	
  4299                           ; 2 bytes @ 0x1
  4300                           
  4301  0071                     ?___wmul:	
  4302                           ; 2 bytes @ 0x1
  4303                           
  4304  0071                     ?___awdiv:	
  4305                           ; 2 bytes @ 0x1
  4306                           
  4307  0071                     ?___awmod:	
  4308                           ; 2 bytes @ 0x1
  4309                           
  4310  0071                     ?_AFE_getSetCurrentSenseRes:	
  4311                           ; 2 bytes @ 0x1
  4312                           
  4313  0071                     ?___lmul:	
  4314                           ; 4 bytes @ 0x1
  4315                           
  4316  0071                     ?___flneg:	
  4317                           ; 4 bytes @ 0x1
  4318                           
  4319  0071                     ?___xxtofl:	
  4320                           ; 4 bytes @ 0x1
  4321                           
  4322  0071                     EUSART_Write@txData:	
  4323                           ; 4 bytes @ 0x1
  4324                           
  4325  0071                     __Umul8_16@multiplicand:	
  4326                           ; 1 bytes @ 0x1
  4327                           
  4328  0071                     send_I2C_data@databyte:	
  4329                           ; 1 bytes @ 0x1
  4330                           
  4331  0071                     send_I2C_controlByte@BlockAddress:	
  4332                           ; 2 bytes @ 0x1
  4333                           
  4334  0071                     RGB_color@color:	
  4335                           ; 2 bytes @ 0x1
  4336                           
  4337  0071                     ___wmul@multiplier:	
  4338                           ; 2 bytes @ 0x1
  4339                           
  4340  0071                     ___awdiv@divisor:	
  4341                           ; 2 bytes @ 0x1
  4342                           
  4343  0071                     ___awmod@divisor:	
  4344                           ; 2 bytes @ 0x1
  4345                           
  4346  0071                     isalpha@c:	
  4347                           ; 2 bytes @ 0x1
  4348                           
  4349  0071                     isdigit@c:	
  4350                           ; 2 bytes @ 0x1
  4351                           
  4352  0071                     isspace@c:	
  4353                           ; 2 bytes @ 0x1
  4354                           
  4355  0071                     isupper@c:	
  4356                           ; 2 bytes @ 0x1
  4357                           
  4358  0071                     fputc@c:	
  4359                           ; 2 bytes @ 0x1
  4360                           
  4361  0071                     strcpy@src:	
  4362                           ; 2 bytes @ 0x1
  4363                           
  4364  0071                     strlen@s:	
  4365                           ; 2 bytes @ 0x1
  4366                           
  4367  0071                     strncmp@_l:	
  4368                           ; 2 bytes @ 0x1
  4369                           
  4370  0071                     islower@c:	
  4371                           ; 2 bytes @ 0x1
  4372                           
  4373  0071                     setShuntResistorValue@res_mOhm:	
  4374                           ; 2 bytes @ 0x1
  4375                           
  4376  0071                     ___lmul@multiplier:	
  4377                           ; 4 bytes @ 0x1
  4378                           
  4379  0071                     ___fleq@ff1:	
  4380                           ; 4 bytes @ 0x1
  4381                           
  4382  0071                     ___flneg@f1:	
  4383                           ; 4 bytes @ 0x1
  4384                           
  4385  0071                     ___xxtofl@val:	
  4386                           ; 4 bytes @ 0x1
  4387                           
  4388  0071                     ___fpclassifyf@x:	
  4389                           ; 4 bytes @ 0x1
  4390                           
  4391                           
  4392                           ; 4 bytes @ 0x1
  4393  0071                     	ds	1
  4394  0072                     ?_EUSART_Write_Text:	
  4395  0072                     ___aodiv@counter:	
  4396                           ; 1 bytes @ 0x2
  4397                           
  4398  0072                     ___aomod@counter:	
  4399                           ; 1 bytes @ 0x2
  4400                           
  4401  0072                     ___lomod@counter:	
  4402                           ; 1 bytes @ 0x2
  4403                           
  4404  0072                     EUSART_Write_Text@text:	
  4405                           ; 1 bytes @ 0x2
  4406                           
  4407  0072                     ___lodiv@quotient:	
  4408                           ; 2 bytes @ 0x2
  4409                           
  4410                           
  4411                           ; 8 bytes @ 0x2
  4412  0072                     	ds	1
  4413  0073                     ??_watchdog_timeout_shutdown:	
  4414  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4415                           ; 1 bytes @ 0x3
  4416                           
  4417  0073                     ??_RGB_color:	
  4418                           ; 1 bytes @ 0x3
  4419                           
  4420  0073                     ??_strlen:	
  4421                           ; 1 bytes @ 0x3
  4422                           
  4423  0073                     ??_isupper:	
  4424                           ; 1 bytes @ 0x3
  4425                           
  4426  0073                     ??_strcpy:	
  4427                           ; 1 bytes @ 0x3
  4428                           
  4429  0073                     ??_isalpha:	
  4430                           ; 1 bytes @ 0x3
  4431                           
  4432  0073                     ??_isdigit:	
  4433                           ; 1 bytes @ 0x3
  4434                           
  4435  0073                     ??__Umul8_16:	
  4436                           ; 1 bytes @ 0x3
  4437                           
  4438  0073                     ??_isspace:	
  4439                           ; 1 bytes @ 0x3
  4440                           
  4441  0073                     ??_islower:	
  4442                           ; 1 bytes @ 0x3
  4443                           
  4444  0073                     ??_send_I2C_data:	
  4445                           ; 1 bytes @ 0x3
  4446                           
  4447  0073                     ??_read_I2C_data:	
  4448                           ; 1 bytes @ 0x3
  4449                           
  4450  0073                     ___aodiv@sign:	
  4451                           ; 1 bytes @ 0x3
  4452                           
  4453  0073                     ___aomod@sign:	
  4454                           ; 1 bytes @ 0x3
  4455                           
  4456  0073                     send_I2C_controlByte@RW_bit:	
  4457                           ; 1 bytes @ 0x3
  4458                           
  4459  0073                     ___wmul@multiplicand:	
  4460                           ; 2 bytes @ 0x3
  4461                           
  4462  0073                     ___awdiv@dividend:	
  4463                           ; 2 bytes @ 0x3
  4464                           
  4465  0073                     ___awmod@dividend:	
  4466                           ; 2 bytes @ 0x3
  4467                           
  4468  0073                     fputc@fp:	
  4469                           ; 2 bytes @ 0x3
  4470                           
  4471  0073                     strlen@a:	
  4472                           ; 2 bytes @ 0x3
  4473                           
  4474  0073                     strncmp@_r:	
  4475                           ; 2 bytes @ 0x3
  4476                           
  4477                           
  4478                           ; 2 bytes @ 0x3
  4479  0073                     	ds	1
  4480  0074                     ??_EUSART_Write_Text:	
  4481  0074                     ?_abs:	
  4482                           ; 1 bytes @ 0x4
  4483                           
  4484  0074                     abs@a:	
  4485                           ; 2 bytes @ 0x4
  4486                           
  4487  0074                     ___aodiv@quotient:	
  4488                           ; 2 bytes @ 0x4
  4489                           
  4490                           
  4491                           ; 8 bytes @ 0x4
  4492  0074                     	ds	1
  4493  0075                     ??_AFE_getSetCurrentSenseRes:	
  4494  0075                     ??_setShuntResistorValue:	
  4495                           ; 1 bytes @ 0x5
  4496                           
  4497  0075                     ??_fputc:	
  4498                           ; 1 bytes @ 0x5
  4499                           
  4500  0075                     ??___fpclassifyf:	
  4501                           ; 1 bytes @ 0x5
  4502                           
  4503  0075                     ??_send_I2C_controlByte:	
  4504                           ; 1 bytes @ 0x5
  4505                           
  4506  0075                     ?_I2C_writeRegister:	
  4507                           ; 1 bytes @ 0x5
  4508                           
  4509  0075                     ??___wmul:	
  4510                           ; 1 bytes @ 0x5
  4511                           
  4512  0075                     ??___awdiv:	
  4513                           ; 1 bytes @ 0x5
  4514                           
  4515  0075                     ??___awmod:	
  4516                           ; 1 bytes @ 0x5
  4517                           
  4518  0075                     ??___flneg:	
  4519                           ; 1 bytes @ 0x5
  4520                           
  4521  0075                     ??___xxtofl:	
  4522                           ; 1 bytes @ 0x5
  4523                           
  4524  0075                     ?_readRegister:	
  4525                           ; 1 bytes @ 0x5
  4526                           
  4527  0075                     _isspace$1805:	
  4528                           ; 2 bytes @ 0x5
  4529                           
  4530  0075                     EUSART_Write_Text@i:	
  4531                           ; 1 bytes @ 0x5
  4532                           
  4533  0075                     I2C_writeRegister@slaveAddress:	
  4534                           ; 2 bytes @ 0x5
  4535                           
  4536  0075                     readRegister@slaveAddress:	
  4537                           ; 2 bytes @ 0x5
  4538                           
  4539  0075                     ___wmul@product:	
  4540                           ; 2 bytes @ 0x5
  4541                           
  4542  0075                     strcpy@s:	
  4543                           ; 2 bytes @ 0x5
  4544                           
  4545  0075                     strncmp@n:	
  4546                           ; 2 bytes @ 0x5
  4547                           
  4548  0075                     __Umul8_16@product:	
  4549                           ; 2 bytes @ 0x5
  4550                           
  4551  0075                     ___lmul@multiplicand:	
  4552                           ; 2 bytes @ 0x5
  4553                           
  4554  0075                     ___fleq@ff2:	
  4555                           ; 4 bytes @ 0x5
  4556                           
  4557                           
  4558                           ; 4 bytes @ 0x5
  4559  0075                     	ds	1
  4560  0076                     ??_abs:	
  4561  0076                     ___awdiv@counter:	
  4562                           ; 1 bytes @ 0x6
  4563                           
  4564  0076                     ___awmod@counter:	
  4565                           ; 1 bytes @ 0x6
  4566                           
  4567                           
  4568                           ; 1 bytes @ 0x6
  4569  0076                     	ds	1
  4570  0077                     ??_setTemperatureLimitsint:	
  4571  0077                     ??_strncmp:	
  4572                           ; 1 bytes @ 0x7
  4573                           
  4574  0077                     ?_tolower:	
  4575                           ; 1 bytes @ 0x7
  4576                           
  4577  0077                     ?_toupper:	
  4578                           ; 2 bytes @ 0x7
  4579                           
  4580  0077                     ?_atoi:	
  4581                           ; 2 bytes @ 0x7
  4582                           
  4583  0077                     ___awdiv@sign:	
  4584                           ; 2 bytes @ 0x7
  4585                           
  4586  0077                     ___awmod@sign:	
  4587                           ; 1 bytes @ 0x7
  4588                           
  4589  0077                     strcpy@d:	
  4590                           ; 1 bytes @ 0x7
  4591                           
  4592  0077                     I2C_writeRegister@regAddress:	
  4593                           ; 1 bytes @ 0x7
  4594                           
  4595  0077                     readRegister@regAddress:	
  4596                           ; 2 bytes @ 0x7
  4597                           
  4598  0077                     atoi@s:	
  4599                           ; 2 bytes @ 0x7
  4600                           
  4601  0077                     tolower@c:	
  4602                           ; 2 bytes @ 0x7
  4603                           
  4604  0077                     toupper@c:	
  4605                           ; 2 bytes @ 0x7
  4606                           
  4607  0077                     __Umul8_16@word_mpld:	
  4608                           ; 2 bytes @ 0x7
  4609                           
  4610                           
  4611                           ; 2 bytes @ 0x7
  4612  0077                     	ds	1
  4613  0078                     strcpy@dest:	
  4614  0078                     ___awdiv@quotient:	
  4615                           ; 1 bytes @ 0x8
  4616                           
  4617  0078                     strncmp@l:	
  4618                           ; 2 bytes @ 0x8
  4619                           
  4620                           
  4621                           ; 2 bytes @ 0x8
  4622  0078                     	ds	1
  4623  0079                     ??_readRegister:	
  4624  0079                     ??___lmul:	
  4625                           ; 1 bytes @ 0x9
  4626                           
  4627  0079                     ??___aldiv:	
  4628                           ; 1 bytes @ 0x9
  4629                           
  4630  0079                     __Umul8_16@multiplier:	
  4631                           ; 1 bytes @ 0x9
  4632                           
  4633  0079                     I2C_writeRegister@data:	
  4634                           ; 1 bytes @ 0x9
  4635                           
  4636  0079                     readRegister@recievedData:	
  4637                           ; 2 bytes @ 0x9
  4638                           
  4639  0079                     _tolower$1888:	
  4640                           ; 2 bytes @ 0x9
  4641                           
  4642  0079                     _toupper$1903:	
  4643                           ; 2 bytes @ 0x9
  4644                           
  4645                           
  4646                           ; 2 bytes @ 0x9
  4647  0079                     	ds	1
  4648  007A                     ??_stoa:	
  4649  007A                     ??___flsub:	
  4650                           ; 1 bytes @ 0xA
  4651                           
  4652  007A                     ?_fputs:	
  4653                           ; 1 bytes @ 0xA
  4654                           
  4655  007A                     ___fltol@sign1:	
  4656                           ; 2 bytes @ 0xA
  4657                           
  4658  007A                     ___lodiv@counter:	
  4659                           ; 1 bytes @ 0xA
  4660                           
  4661  007A                     EUSART_Initialize@x:	
  4662                           ; 1 bytes @ 0xA
  4663                           
  4664  007A                     fputs@fp:	
  4665                           ; 2 bytes @ 0xA
  4666                           
  4667  007A                     strncmp@r:	
  4668                           ; 2 bytes @ 0xA
  4669                           
  4670                           
  4671                           ; 2 bytes @ 0xA
  4672  007A                     	ds	1
  4673  007B                     ??_init_AFE:	
  4674  007B                     ??_I2C_writeRegister:	
  4675                           ; 1 bytes @ 0xB
  4676                           
  4677  007B                     ___fltol@exp1:	
  4678                           ; 1 bytes @ 0xB
  4679                           
  4680                           
  4681                           ; 1 bytes @ 0xB
  4682  007B                     	ds	1
  4683  007C                     ??_AFE_UPDATE:	
  4684  007C                     ??_printcellParameters:	
  4685                           ; 1 bytes @ 0xC
  4686                           
  4687                           
  4688                           	psect	cstackBANK0
  4689  0020                     __pcstackBANK0:	
  4690                           ; 1 bytes @ 0xC
  4691                           
  4692  0020                     ?_setTemperatureLimitsint:	
  4693  0020                     ??_fputs:	
  4694                           ; 1 bytes @ 0x0
  4695                           
  4696  0020                     ??_tolower:	
  4697                           ; 1 bytes @ 0x0
  4698                           
  4699  0020                     ??_toupper:	
  4700                           ; 1 bytes @ 0x0
  4701                           
  4702  0020                     ??_atoi:	
  4703                           ; 1 bytes @ 0x0
  4704                           
  4705  0020                     ??___fleq:	
  4706                           ; 1 bytes @ 0x0
  4707                           
  4708  0020                     ?_beginAFEcommunication:	
  4709                           ; 1 bytes @ 0x0
  4710                           
  4711  0020                     ?_stoa:	
  4712                           ; 2 bytes @ 0x0
  4713                           
  4714  0020                     ?___aodiv:	
  4715                           ; 2 bytes @ 0x0
  4716                           
  4717  0020                     ?___aomod:	
  4718                           ; 8 bytes @ 0x0
  4719                           
  4720  0020                     ?___lodiv:	
  4721                           ; 8 bytes @ 0x0
  4722                           
  4723  0020                     ?___lomod:	
  4724                           ; 8 bytes @ 0x0
  4725                           
  4726  0020                     ___xxtofl@sign:	
  4727                           ; 8 bytes @ 0x0
  4728                           
  4729  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4730                           ; 1 bytes @ 0x0
  4731                           
  4732  0020                     stoa@fp:	
  4733                           ; 2 bytes @ 0x0
  4734                           
  4735  0020                     ___fpclassifyf@e:	
  4736                           ; 2 bytes @ 0x0
  4737                           
  4738  0020                     ___lmul@product:	
  4739                           ; 2 bytes @ 0x0
  4740                           
  4741  0020                     ___aodiv@divisor:	
  4742                           ; 4 bytes @ 0x0
  4743                           
  4744  0020                     ___aomod@divisor:	
  4745                           ; 8 bytes @ 0x0
  4746                           
  4747  0020                     ___lodiv@divisor:	
  4748                           ; 8 bytes @ 0x0
  4749                           
  4750  0020                     ___lomod@divisor:	
  4751                           ; 8 bytes @ 0x0
  4752                           
  4753                           
  4754                           ; 8 bytes @ 0x0
  4755  0020                     	ds	1
  4756  0021                     ___xxtofl@exp:	
  4757                           
  4758                           ; 1 bytes @ 0x1
  4759  0021                     	ds	1
  4760  0022                     ??_beginAFEcommunication:	
  4761  0022                     stoa@s:	
  4762                           ; 1 bytes @ 0x2
  4763                           
  4764  0022                     fputs@c:	
  4765                           ; 1 bytes @ 0x2
  4766                           
  4767  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4768                           ; 1 bytes @ 0x2
  4769                           
  4770  0022                     ___xxtofl@arg:	
  4771                           ; 2 bytes @ 0x2
  4772                           
  4773  0022                     ___fpclassifyf@u:	
  4774                           ; 4 bytes @ 0x2
  4775                           
  4776                           
  4777                           ; 4 bytes @ 0x2
  4778  0022                     	ds	1
  4779  0023                     fputs@i:	
  4780  0023                     stoa@nuls:	
  4781                           ; 2 bytes @ 0x3
  4782                           
  4783                           
  4784                           ; 7 bytes @ 0x3
  4785  0023                     	ds	1
  4786  0024                     ?___aldiv:	
  4787  0024                     setTemperatureLimitsint@minCharge_degC:	
  4788                           ; 4 bytes @ 0x4
  4789                           
  4790  0024                     atoi@neg:	
  4791                           ; 2 bytes @ 0x4
  4792                           
  4793  0024                     ___aldiv@divisor:	
  4794                           ; 2 bytes @ 0x4
  4795                           
  4796                           
  4797                           ; 4 bytes @ 0x4
  4798  0024                     	ds	1
  4799  0025                     fputs@s:	
  4800                           
  4801                           ; 1 bytes @ 0x5
  4802  0025                     	ds	1
  4803  0026                     ?_pad:	
  4804  0026                     ?___flmul:	
  4805                           ; 2 bytes @ 0x6
  4806                           
  4807  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4808                           ; 4 bytes @ 0x6
  4809                           
  4810  0026                     pad@fp:	
  4811                           ; 2 bytes @ 0x6
  4812                           
  4813  0026                     _atoi$1765:	
  4814                           ; 2 bytes @ 0x6
  4815                           
  4816  0026                     ___flmul@b:	
  4817                           ; 2 bytes @ 0x6
  4818                           
  4819                           
  4820                           ; 4 bytes @ 0x6
  4821  0026                     	ds	2
  4822  0028                     pad@buf:	
  4823  0028                     _atoi$1767:	
  4824                           ; 1 bytes @ 0x8
  4825                           
  4826  0028                     ___aldiv@dividend:	
  4827                           ; 2 bytes @ 0x8
  4828                           
  4829  0028                     ___aodiv@dividend:	
  4830                           ; 4 bytes @ 0x8
  4831                           
  4832  0028                     ___aomod@dividend:	
  4833                           ; 8 bytes @ 0x8
  4834                           
  4835  0028                     ___lodiv@dividend:	
  4836                           ; 8 bytes @ 0x8
  4837                           
  4838  0028                     ___lomod@dividend:	
  4839                           ; 8 bytes @ 0x8
  4840                           
  4841                           
  4842                           ; 8 bytes @ 0x8
  4843  0028                     	ds	1
  4844  0029                     pad@p:	
  4845                           
  4846                           ; 2 bytes @ 0x9
  4847  0029                     	ds	1
  4848  002A                     _atoi$1766:	
  4849  002A                     stoa@i:	
  4850                           ; 1 bytes @ 0xA
  4851                           
  4852  002A                     ___flmul@a:	
  4853                           ; 2 bytes @ 0xA
  4854                           
  4855                           
  4856                           ; 4 bytes @ 0xA
  4857  002A                     	ds	1
  4858  002B                     ??_pad:	
  4859  002B                     beginAFEcommunication@commSuccess:	
  4860                           ; 1 bytes @ 0xB
  4861                           
  4862  002B                     atoi@n:	
  4863                           ; 2 bytes @ 0xB
  4864                           
  4865                           
  4866                           ; 2 bytes @ 0xB
  4867  002B                     	ds	1
  4868  002C                     ___aldiv@counter:	
  4869  002C                     pad@i:	
  4870                           ; 1 bytes @ 0xC
  4871                           
  4872  002C                     stoa@w:	
  4873                           ; 2 bytes @ 0xC
  4874                           
  4875                           
  4876                           ; 2 bytes @ 0xC
  4877  002C                     	ds	1
  4878  002D                     ___aldiv@sign:	
  4879  002D                     beginAFEcommunication@i:	
  4880                           ; 1 bytes @ 0xD
  4881                           
  4882                           
  4883                           ; 2 bytes @ 0xD
  4884  002D                     	ds	1
  4885  002E                     ??___flmul:	
  4886  002E                     pad@w:	
  4887                           ; 1 bytes @ 0xE
  4888                           
  4889  002E                     stoa@cp:	
  4890                           ; 2 bytes @ 0xE
  4891                           
  4892  002E                     ___aldiv@quotient:	
  4893                           ; 2 bytes @ 0xE
  4894                           
  4895                           
  4896                           ; 4 bytes @ 0xE
  4897  002E                     	ds	2
  4898  0030                     ?_ctoa:	
  4899  0030                     ?_dtoa:	
  4900                           ; 2 bytes @ 0x10
  4901                           
  4902  0030                     ?_otoa:	
  4903                           ; 2 bytes @ 0x10
  4904                           
  4905  0030                     ?_utoa:	
  4906                           ; 2 bytes @ 0x10
  4907                           
  4908  0030                     ?_xtoa:	
  4909                           ; 2 bytes @ 0x10
  4910                           
  4911  0030                     ctoa@fp:	
  4912                           ; 2 bytes @ 0x10
  4913                           
  4914  0030                     dtoa@fp:	
  4915                           ; 2 bytes @ 0x10
  4916                           
  4917  0030                     otoa@fp:	
  4918                           ; 2 bytes @ 0x10
  4919                           
  4920  0030                     stoa@p:	
  4921                           ; 2 bytes @ 0x10
  4922                           
  4923  0030                     utoa@fp:	
  4924                           ; 2 bytes @ 0x10
  4925                           
  4926  0030                     xtoa@fp:	
  4927                           ; 2 bytes @ 0x10
  4928                           
  4929                           
  4930                           ; 2 bytes @ 0x10
  4931  0030                     	ds	2
  4932  0032                     ?_EUSART_Initialize:	
  4933  0032                     ?_setCellUndervoltageProtection:	
  4934                           ; 1 bytes @ 0x12
  4935                           
  4936  0032                     ?_setCellOvervoltageProtection:	
  4937                           ; 1 bytes @ 0x12
  4938                           
  4939  0032                     ctoa@c:	
  4940                           ; 1 bytes @ 0x12
  4941                           
  4942  0032                     setCellUndervoltageProtection@voltage_mV:	
  4943                           ; 1 bytes @ 0x12
  4944                           
  4945  0032                     setCellOvervoltageProtection@voltage_mV:	
  4946                           ; 2 bytes @ 0x12
  4947                           
  4948  0032                     stoa@l:	
  4949                           ; 2 bytes @ 0x12
  4950                           
  4951  0032                     EUSART_Initialize@baudrate:	
  4952                           ; 2 bytes @ 0x12
  4953                           
  4954  0032                     dtoa@d:	
  4955                           ; 4 bytes @ 0x12
  4956                           
  4957  0032                     otoa@d:	
  4958                           ; 8 bytes @ 0x12
  4959                           
  4960  0032                     utoa@d:	
  4961                           ; 8 bytes @ 0x12
  4962                           
  4963  0032                     xtoa@d:	
  4964                           ; 8 bytes @ 0x12
  4965                           
  4966                           
  4967                           ; 8 bytes @ 0x12
  4968  0032                     	ds	1
  4969  0033                     ??_ctoa:	
  4970  0033                     ___flmul@sign:	
  4971                           ; 1 bytes @ 0x13
  4972                           
  4973                           
  4974                           ; 1 bytes @ 0x13
  4975  0033                     	ds	1
  4976  0034                     setCellUndervoltageProtection@delay_s:	
  4977  0034                     setCellOvervoltageProtection@delay_s:	
  4978                           ; 2 bytes @ 0x14
  4979                           
  4980  0034                     ctoa@w:	
  4981                           ; 2 bytes @ 0x14
  4982                           
  4983  0034                     ___flmul@grs:	
  4984                           ; 2 bytes @ 0x14
  4985                           
  4986                           
  4987                           ; 4 bytes @ 0x14
  4988  0034                     	ds	2
  4989  0036                     ??_EUSART_Initialize:	
  4990  0036                     ??_setCellUndervoltageProtection:	
  4991                           ; 1 bytes @ 0x16
  4992                           
  4993  0036                     ??_setCellOvervoltageProtection:	
  4994                           ; 1 bytes @ 0x16
  4995                           
  4996                           
  4997                           ; 1 bytes @ 0x16
  4998  0036                     	ds	2
  4999  0038                     ___flmul@aexp:	
  5000                           
  5001                           ; 1 bytes @ 0x18
  5002  0038                     	ds	1
  5003  0039                     ___flmul@bexp:	
  5004                           
  5005                           ; 1 bytes @ 0x19
  5006  0039                     	ds	1
  5007  003A                     ??_dtoa:	
  5008  003A                     ??_otoa:	
  5009                           ; 1 bytes @ 0x1A
  5010                           
  5011  003A                     ??_utoa:	
  5012                           ; 1 bytes @ 0x1A
  5013                           
  5014  003A                     xtoa@x:	
  5015                           ; 1 bytes @ 0x1A
  5016                           
  5017  003A                     ___flmul@prod:	
  5018                           ; 1 bytes @ 0x1A
  5019                           
  5020                           
  5021                           ; 4 bytes @ 0x1A
  5022  003A                     	ds	1
  5023  003B                     ??_xtoa:	
  5024  003B                     utoa@p:	
  5025                           ; 1 bytes @ 0x1B
  5026                           
  5027                           
  5028                           ; 2 bytes @ 0x1B
  5029  003B                     	ds	2
  5030  003D                     _dtoa$1226:	
  5031  003D                     utoa@w:	
  5032                           ; 2 bytes @ 0x1D
  5033                           
  5034                           
  5035                           ; 2 bytes @ 0x1D
  5036  003D                     	ds	1
  5037  003E                     ___flmul@temp:	
  5038                           
  5039                           ; 2 bytes @ 0x1E
  5040  003E                     	ds	1
  5041  003F                     dtoa@p:	
  5042  003F                     utoa@n:	
  5043                           ; 2 bytes @ 0x1F
  5044                           
  5045                           
  5046                           ; 8 bytes @ 0x1F
  5047  003F                     	ds	1
  5048  0040                     ?___fldiv:	
  5049  0040                     ___fldiv@a:	
  5050                           ; 4 bytes @ 0x20
  5051                           
  5052                           
  5053                           ; 4 bytes @ 0x20
  5054  0040                     	ds	1
  5055  0041                     dtoa@w:	
  5056                           
  5057                           ; 2 bytes @ 0x21
  5058  0041                     	ds	1
  5059  0042                     otoa@p:	
  5060                           
  5061                           ; 2 bytes @ 0x22
  5062  0042                     	ds	1
  5063  0043                     dtoa@s:	
  5064  0043                     _xtoa$1296:	
  5065                           ; 2 bytes @ 0x23
  5066                           
  5067                           
  5068                           ; 2 bytes @ 0x23
  5069  0043                     	ds	1
  5070  0044                     setCellUndervoltageProtection@uv_trip:	
  5071  0044                     setCellOvervoltageProtection@ov_trip:	
  5072                           ; 1 bytes @ 0x24
  5073                           
  5074  0044                     otoa@t:	
  5075                           ; 1 bytes @ 0x24
  5076                           
  5077  0044                     ___fldiv@b:	
  5078                           ; 2 bytes @ 0x24
  5079                           
  5080                           
  5081                           ; 4 bytes @ 0x24
  5082  0044                     	ds	1
  5083  0045                     setCellUndervoltageProtection@i:	
  5084  0045                     setCellOvervoltageProtection@i:	
  5085                           ; 2 bytes @ 0x25
  5086                           
  5087  0045                     _xtoa$1297:	
  5088                           ; 2 bytes @ 0x25
  5089                           
  5090  0045                     dtoa@n:	
  5091                           ; 2 bytes @ 0x25
  5092                           
  5093                           
  5094                           ; 8 bytes @ 0x25
  5095  0045                     	ds	1
  5096  0046                     otoa@w:	
  5097                           
  5098                           ; 2 bytes @ 0x26
  5099  0046                     	ds	1
  5100  0047                     utoa@i:	
  5101  0047                     xtoa@p:	
  5102                           ; 2 bytes @ 0x27
  5103                           
  5104                           
  5105                           ; 2 bytes @ 0x27
  5106  0047                     	ds	1
  5107  0048                     ??___fldiv:	
  5108  0048                     otoa@n:	
  5109                           ; 1 bytes @ 0x28
  5110                           
  5111                           
  5112                           ; 8 bytes @ 0x28
  5113  0048                     	ds	1
  5114  0049                     xtoa@w:	
  5115                           
  5116                           ; 2 bytes @ 0x29
  5117  0049                     	ds	2
  5118  004B                     xtoa@n:	
  5119                           
  5120                           ; 8 bytes @ 0x2B
  5121  004B                     	ds	2
  5122  004D                     dtoa@i:	
  5123  004D                     ___fldiv@rem:	
  5124                           ; 2 bytes @ 0x2D
  5125                           
  5126                           
  5127                           ; 4 bytes @ 0x2D
  5128  004D                     	ds	3
  5129  0050                     otoa@i:	
  5130                           
  5131                           ; 2 bytes @ 0x30
  5132  0050                     	ds	1
  5133  0051                     ___fldiv@sign:	
  5134                           
  5135                           ; 1 bytes @ 0x31
  5136  0051                     	ds	1
  5137  0052                     ___fldiv@new_exp:	
  5138                           
  5139                           ; 2 bytes @ 0x32
  5140  0052                     	ds	1
  5141  0053                     xtoa@i:	
  5142                           
  5143                           ; 2 bytes @ 0x33
  5144  0053                     	ds	1
  5145  0054                     ___fldiv@grs:	
  5146                           
  5147                           ; 4 bytes @ 0x34
  5148  0054                     	ds	1
  5149  0055                     xtoa@c:	
  5150                           
  5151                           ; 2 bytes @ 0x35
  5152  0055                     	ds	3
  5153  0058                     ___fldiv@bexp:	
  5154                           
  5155                           ; 1 bytes @ 0x38
  5156  0058                     	ds	1
  5157  0059                     ___fldiv@aexp:	
  5158                           
  5159                           ; 1 bytes @ 0x39
  5160  0059                     	ds	1
  5161  005A                     ?___flge:	
  5162  005A                     ?_floorf:	
  5163                           ; 1 bit 
  5164                           
  5165  005A                     ?___fladd:	
  5166                           ; 4 bytes @ 0x3A
  5167                           
  5168  005A                     ___flge@ff1:	
  5169                           ; 4 bytes @ 0x3A
  5170                           
  5171  005A                     ___fladd@b:	
  5172                           ; 4 bytes @ 0x3A
  5173                           
  5174  005A                     floorf@x:	
  5175                           ; 4 bytes @ 0x3A
  5176                           
  5177                           
  5178                           ; 4 bytes @ 0x3A
  5179  005A                     	ds	4
  5180  005E                     ??_floorf:	
  5181  005E                     ___flge@ff2:	
  5182                           ; 1 bytes @ 0x3E
  5183                           
  5184  005E                     ___fladd@a:	
  5185                           ; 4 bytes @ 0x3E
  5186                           
  5187                           
  5188                           ; 4 bytes @ 0x3E
  5189  005E                     	ds	4
  5190  0062                     ??___flge:	
  5191  0062                     ??___fladd:	
  5192                           ; 1 bytes @ 0x42
  5193                           
  5194                           
  5195                           ; 1 bytes @ 0x42
  5196  0062                     	ds	2
  5197  0064                     floorf@m:	
  5198                           
  5199                           ; 4 bytes @ 0x44
  5200  0064                     	ds	2
  5201  0066                     ?_setShortCircuitProtection:	
  5202  0066                     ?_setOverCurrentDischargeProtection:	
  5203                           ; 1 bytes @ 0x46
  5204                           
  5205  0066                     setShortCircuitProtection@current_mA:	
  5206                           ; 1 bytes @ 0x46
  5207                           
  5208  0066                     setOverCurrentDischargeProtection@current_mA:	
  5209                           ; 4 bytes @ 0x46
  5210                           
  5211                           
  5212                           ; 4 bytes @ 0x46
  5213  0066                     	ds	2
  5214  0068                     floorf@e:	
  5215                           
  5216                           ; 2 bytes @ 0x48
  5217  0068                     	ds	2
  5218  006A                     ___fladd@signs:	
  5219  006A                     setShortCircuitProtection@delay_us:	
  5220                           ; 1 bytes @ 0x4A
  5221                           
  5222  006A                     setOverCurrentDischargeProtection@delay_ms:	
  5223                           ; 2 bytes @ 0x4A
  5224                           
  5225  006A                     floorf@u:	
  5226                           ; 2 bytes @ 0x4A
  5227                           
  5228                           
  5229                           ; 4 bytes @ 0x4A
  5230  006A                     	ds	1
  5231  006B                     ___fladd@aexp:	
  5232                           
  5233                           ; 1 bytes @ 0x4B
  5234  006B                     	ds	1
  5235  006C                     ??_setShortCircuitProtection:	
  5236  006C                     ??_setOverCurrentDischargeProtection:	
  5237                           ; 1 bytes @ 0x4C
  5238                           
  5239  006C                     ___fladd@bexp:	
  5240                           ; 1 bytes @ 0x4C
  5241                           
  5242                           
  5243                           ; 1 bytes @ 0x4C
  5244  006C                     	ds	1
  5245  006D                     ___fladd@grs:	
  5246                           
  5247                           ; 1 bytes @ 0x4D
  5248  006D                     	ds	1
  5249  006E                     ??_vfprintf:	
  5250                           
  5251                           ; 1 bytes @ 0x4E
  5252  006E                     	ds	2
  5253                           
  5254                           	psect	maintext
  5255  3FCE                     __pmaintext:	
  5256 ;;
  5257 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5258 ;;
  5259 ;; *************** function _main *****************
  5260 ;; Defined at:
  5261 ;;		line 77 in file "main.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;		None
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;		None
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  1    wreg      void 
  5268 ;; Registers used:
  5269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5270 ;; Tracked objects:
  5271 ;;		On entry : B1F/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5277 ;;      Temps:          0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5278 ;;      Totals:         0       0       0       0       2       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5279 ;;Total ram usage:        2 bytes
  5280 ;; Hardware stack levels required when called:   12
  5281 ;; This function calls:
  5282 ;;		_EUSART_Initialize
  5283 ;;		_initClock
  5284 ;;		_initWDT
  5285 ;;		_init_GPIO
  5286 ;;		_init_I2C
  5287 ;;		_init_RGB
  5288 ;;		_init_TMR1
  5289 ;;		_statemachine
  5290 ;;		_watchdog_timeout_shutdown
  5291 ;; This function is called by:
  5292 ;;		Startup code after reset
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           
  5297                           ;psect for function _main
  5298  3FCE                     _main:	
  5299                           
  5300                           ;main.c: 80:     initClock();
  5301                           
  5302                           ;incstack = 0
  5303                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5304  3FCE  31BC  24FF  31BF   	fcall	_initClock
  5305                           
  5306                           ;main.c: 81:     init_GPIO();
  5307  3FD1  31B0  20B2  31BF   	fcall	_init_GPIO
  5308                           
  5309                           ;main.c: 82:     initWDT();
  5310  3FD4  31BD  250A  31BF   	fcall	_initWDT
  5311                           
  5312                           ;main.c: 83:     init_I2C();
  5313  3FD7  31BD  2562  31BF   	fcall	_init_I2C
  5314                           
  5315                           ;main.c: 84:     EUSART_Initialize(9600);
  5316  3FDA  3000               	movlw	0
  5317  3FDB  0020               	movlb	0	; select bank0
  5318  3FDC  00B5               	movwf	EUSART_Initialize@baudrate+3
  5319  3FDD  3000               	movlw	0
  5320  3FDE  00B4               	movwf	EUSART_Initialize@baudrate+2
  5321  3FDF  3025               	movlw	37
  5322  3FE0  00B3               	movwf	EUSART_Initialize@baudrate+1
  5323  3FE1  3080               	movlw	128
  5324  3FE2  00B2               	movwf	EUSART_Initialize@baudrate
  5325  3FE3  31AA  2276  31BF   	fcall	_EUSART_Initialize
  5326                           
  5327                           ;main.c: 85:     init_TMR1();
  5328  3FE6  31B0  2003  31BF   	fcall	_init_TMR1
  5329                           
  5330                           ;main.c: 86:     init_RGB();
  5331  3FE9  31BD  2505  31BF   	fcall	_init_RGB
  5332                           
  5333                           ;main.c: 89:     watchdog_timeout_shutdown();
  5334  3FEC  31BD  25DE  31BF   	fcall	_watchdog_timeout_shutdown
  5335  3FEF                     l8767:	
  5336                           
  5337                           ;main.c: 93:         statemachine();
  5338  3FEF  31A6  26CC  31BF   	fcall	_statemachine
  5339                           
  5340                           ;main.c: 95:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5341  3FF2  3015               	movlw	21
  5342  3FF3  0023               	movlb	3	; select bank3
  5343  3FF4  00EC               	movwf	(??_main^(0+384)+1)
  5344  3FF5  304B               	movlw	75
  5345  3FF6  00EB               	movwf	??_main^(0+384)
  5346  3FF7  30BE               	movlw	190
  5347  3FF8                     u12017:	
  5348  3FF8  0B89               	decfsz	9,f
  5349  3FF9  2FF8               	goto	u12017
  5350  3FFA  0BEB               	decfsz	??_main^(0+384),f
  5351  3FFB  2FF8               	goto	u12017
  5352  3FFC  0BEC               	decfsz	(??_main^(0+384)+1),f
  5353  3FFD  2FF8               	goto	u12017
  5354  3FFE  0000               	nop
  5355  3FFF  2FEF               	goto	l8767
  5356  4000                     __end_of_main:	
  5357                           
  5358                           	psect	text1
  5359  3DDE                     __ptext1:	
  5360 ;; *************** function _watchdog_timeout_shutdown *****************
  5361 ;; Defined at:
  5362 ;;		line 3 in file "algorithms.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5380 ;;Total ram usage:        2 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    2
  5383 ;; This function calls:
  5384 ;;		_RGB_color
  5385 ;;		_shutdown_BMS
  5386 ;; This function is called by:
  5387 ;;		_main
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           
  5392                           ;psect for function _watchdog_timeout_shutdown
  5393  3DDE                     _watchdog_timeout_shutdown:	
  5394                           
  5395                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5396                           
  5397                           ;incstack = 0
  5398                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5399  3DDE  0020               	movlb	0	; select bank0
  5400  3DDF  1A03               	btfsc	3,4	;volatile
  5401  3DE0  0008               	return
  5402                           
  5403                           ;algorithms.c: 6:         RGB_color(0);
  5404  3DE1  3000               	movlw	0
  5405  3DE2  00F1               	movwf	RGB_color@color
  5406  3DE3  00F2               	movwf	RGB_color@color+1
  5407  3DE4  31BE  26C0  31BD   	fcall	_RGB_color
  5408                           
  5409                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5410  3DE7  3029               	movlw	41
  5411  3DE8  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5412  3DE9  3096               	movlw	150
  5413  3DEA  00F3               	movwf	??_watchdog_timeout_shutdown
  5414  3DEB  307F               	movlw	127
  5415  3DEC                     u12027:	
  5416  3DEC  0B89               	decfsz	9,f
  5417  3DED  2DEC               	goto	u12027
  5418  3DEE  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5419  3DEF  2DEC               	goto	u12027
  5420  3DF0  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5421  3DF1  2DEC               	goto	u12027
  5422  3DF2  0000               	nop
  5423                           
  5424                           ;algorithms.c: 8:         shutdown_BMS();
  5425  3DF3  31B0  2000         	fcall	_shutdown_BMS
  5426  3DF5  0008               	return
  5427  3DF6                     __end_of_watchdog_timeout_shutdown:	
  5428                           
  5429                           	psect	text2
  5430  3000                     __ptext2:	
  5431 ;; *************** function _shutdown_BMS *****************
  5432 ;; Defined at:
  5433 ;;		line 12 in file "algorithms.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		None
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5451 ;;Total ram usage:        0 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    1
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_watchdog_timeout_shutdown
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           
  5462                           ;psect for function _shutdown_BMS
  5463  3000                     _shutdown_BMS:	
  5464                           
  5465                           ;algorithms.c: 13:  LATAbits.LATA3 = 1;
  5466                           
  5467                           ;incstack = 0
  5468                           ; Regs used in _shutdown_BMS: []
  5469  3000  0022               	movlb	2	; select bank2
  5470  3001  158C               	bsf	12,3	;volatile
  5471  3002  0008               	return
  5472  3003                     __end_of_shutdown_BMS:	
  5473                           
  5474                           	psect	text3
  5475  26CC                     __ptext3:	
  5476 ;; *************** function _statemachine *****************
  5477 ;; Defined at:
  5478 ;;		line 101 in file "main.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;		None
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  success         1   79[BANK2 ] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  1    wreg      void 
  5485 ;; Registers used:
  5486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5493 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5494 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5495 ;;      Totals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5496 ;;Total ram usage:        3 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; Hardware stack levels required when called:   11
  5499 ;; This function calls:
  5500 ;;		_AFE_UPDATE
  5501 ;;		_AFE_getOverCurrentDischargeCurrent
  5502 ;;		_AFE_getSetCurrentSenseRes
  5503 ;;		_AFE_getSetShortCircuitCurrent
  5504 ;;		_EUSART_Write_Text
  5505 ;;		_RGB_AWAIT_AFE_CONN
  5506 ;;		_RGB_color
  5507 ;;		_beginAFEcommunication
  5508 ;;		_init_AFE
  5509 ;;		_printcellParameters
  5510 ;;		_printotAFERegisters
  5511 ;;		_snprintf
  5512 ;; This function is called by:
  5513 ;;		_main
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           
  5518                           ;psect for function _statemachine
  5519  26CC                     _statemachine:	
  5520                           
  5521                           ;main.c: 103:     switch (currState) {
  5522                           
  5523                           ;incstack = 0
  5524                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5525  26CC  2FEA               	goto	l8743
  5526  26CD                     l8679:	
  5527                           
  5528                           ;main.c: 106:             if (tmr1_flag) {
  5529  26CD  0023               	movlb	3	; select bank3
  5530  26CE  084C               	movf	_tmr1_flag^(0+384),w	;volatile
  5531  26CF  1903               	btfsc	3,2
  5532  26D0  0008               	return
  5533                           
  5534                           ;main.c: 107:                 tmr1_flag = 0;
  5535  26D1  01CC               	clrf	_tmr1_flag^(0+384)	;volatile
  5536                           
  5537                           ;main.c: 108:                 RGB_AWAIT_AFE_CONN();
  5538  26D2  31BE  26E1  31A6   	fcall	_RGB_AWAIT_AFE_CONN
  5539                           
  5540                           ;main.c: 109:                 uint8_t success = beginAFEcommunication();
  5541  26D5  31AB  231F  31A6   	fcall	_beginAFEcommunication
  5542  26D8  0020               	movlb	0	; select bank0
  5543  26D9  0820               	movf	?_beginAFEcommunication,w
  5544  26DA  0022               	movlb	2	; select bank2
  5545  26DB  00ED               	movwf	??_statemachine^(0+256)
  5546  26DC  086D               	movf	??_statemachine^(0+256),w
  5547  26DD  00EF               	movwf	statemachine@success^(0+256)
  5548                           
  5549                           ;main.c: 112:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  5550  26DE  30AA               	movlw	low (STR_1| (0+32768))
  5551  26DF  00F2               	movwf	EUSART_Write_Text@text
  5552  26E0  30B9               	movlw	high (STR_1| (0+32768))
  5553  26E1  00F3               	movwf	EUSART_Write_Text@text+1
  5554  26E2  31BD  25F6  31A6   	fcall	_EUSART_Write_Text
  5555                           
  5556                           ;main.c: 114:                 if (success) {
  5557  26E5  0022               	movlb	2	; select bank2
  5558  26E6  086F               	movf	statemachine@success^(0+256),w
  5559  26E7  1903               	btfsc	3,2
  5560  26E8  0008               	return
  5561                           
  5562                           ;main.c: 115:                     T1CONbits.TMR1ON = 0;
  5563  26E9  0020               	movlb	0	; select bank0
  5564  26EA  1018               	bcf	24,0	;volatile
  5565                           
  5566                           ;main.c: 116:                     PIE1bits.TMR1IE = 0;
  5567  26EB  0021               	movlb	1	; select bank1
  5568  26EC  1011               	bcf	17,0	;volatile
  5569                           
  5570                           ;main.c: 117:                     RGB_color(0);
  5571  26ED  3000               	movlw	0
  5572  26EE  00F1               	movwf	RGB_color@color
  5573  26EF  00F2               	movwf	RGB_color@color+1
  5574  26F0  31BE  26C0  31A6   	fcall	_RGB_color
  5575                           
  5576                           ;main.c: 118:                     tmr1_flag = 0;
  5577  26F3  0023               	movlb	3	; select bank3
  5578  26F4  01CC               	clrf	_tmr1_flag^(0+384)	;volatile
  5579                           
  5580                           ;main.c: 122:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  5581  26F5  301A               	movlw	26
  5582  26F6  0022               	movlb	2	; select bank2
  5583  26F7  00ED               	movwf	??_statemachine^(0+256)
  5584  26F8  30F8               	movlw	248
  5585  26F9                     u12037:	
  5586  26F9  0B89               	decfsz	9,f
  5587  26FA  2EF9               	goto	u12037
  5588  26FB  0BED               	decfsz	??_statemachine^(0+256),f
  5589  26FC  2EF9               	goto	u12037
  5590  26FD  0000               	nop
  5591                           
  5592                           ;main.c: 123:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  5593  26FE  30A4               	movlw	low (STR_2| (0+32768))
  5594  26FF  00F2               	movwf	EUSART_Write_Text@text
  5595  2700  30B8               	movlw	high (STR_2| (0+32768))
  5596  2701  00F3               	movwf	EUSART_Write_Text@text+1
  5597  2702  31BD  25F6  31A6   	fcall	_EUSART_Write_Text
  5598                           
  5599                           ;main.c: 125:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  5600  2705  3071               	movlw	113
  5601  2706  0023               	movlb	3	; select bank3
  5602  2707  00D3               	movwf	snprintf@s^(0+384)
  5603  2708  3027               	movlw	39
  5604  2709  00D4               	movwf	(snprintf@s^(0+384)+1)
  5605  270A  307F               	movlw	127
  5606  270B  00D5               	movwf	snprintf@n^(0+384)
  5607  270C  3000               	movlw	0
  5608  270D  00D6               	movwf	(snprintf@n^(0+384)+1)
  5609  270E  302B               	movlw	low (STR_3| (0+32768))
  5610  270F  00D7               	movwf	snprintf@fmt^(0+384)
  5611  2710  30B9               	movlw	high (STR_3| (0+32768))
  5612  2711  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  5613  2712  0847               	movf	(_adcOffset+1)^(0+384),w
  5614  2713  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  5615  2714  0846               	movf	_adcOffset^(0+384),w
  5616  2715  00D9               	movwf	(?_snprintf^(0+384)+6)
  5617  2716  0852               	movf	(_adcGain+1)^(0+384),w
  5618  2717  00DC               	movwf	((?_snprintf+1)^(0+384)+8)
  5619  2718  0851               	movf	_adcGain^(0+384),w
  5620  2719  00DB               	movwf	(?_snprintf^(0+384)+8)
  5621  271A  31BF  2747  31A6   	fcall	_snprintf
  5622                           
  5623                           ;main.c: 126:                     EUSART_Write_Text(messageBuffer);
  5624  271D  3071               	movlw	113
  5625  271E  00F2               	movwf	EUSART_Write_Text@text
  5626  271F  3027               	movlw	39
  5627  2720  00F3               	movwf	EUSART_Write_Text@text+1
  5628  2721  31BD  25F6  31A6   	fcall	_EUSART_Write_Text
  5629                           
  5630                           ;main.c: 127:                     EUSART_Write_Text("Attempt to set initial system param
      +                          eters to AFE...\n\r");
  5631  2724  303B               	movlw	low (STR_4| (0+32768))
  5632  2725  00F2               	movwf	EUSART_Write_Text@text
  5633  2726  30B8               	movlw	high (STR_4| (0+32768))
  5634  2727  00F3               	movwf	EUSART_Write_Text@text+1
  5635  2728  31BD  25F6         	fcall	_EUSART_Write_Text
  5636                           
  5637                           ;main.c: 131:                     currState = 1;
  5638  272A  0023               	movlb	3	; select bank3
  5639  272B  01CD               	clrf	_currState^(0+384)
  5640  272C  0ACD               	incf	_currState^(0+384),f
  5641  272D  0008               	return
  5642  272E                     l8709:	
  5643                           
  5644                           ;main.c: 140:             init_AFE();
  5645  272E  31B3  234A  31A6   	fcall	_init_AFE
  5646                           
  5647                           ;main.c: 144:             _delay((unsigned long)((5)*(16000000/4000.0)));
  5648  2731  301A               	movlw	26
  5649  2732  0022               	movlb	2	; select bank2
  5650  2733  00ED               	movwf	??_statemachine^(0+256)
  5651  2734  30F8               	movlw	248
  5652  2735                     u12047:	
  5653  2735  0B89               	decfsz	9,f
  5654  2736  2F35               	goto	u12047
  5655  2737  0BED               	decfsz	??_statemachine^(0+256),f
  5656  2738  2F35               	goto	u12047
  5657  2739  0000               	nop
  5658                           
  5659                           ;main.c: 147:             EUSART_Write_Text("\n\r");
  5660  273A  3056               	movlw	low ((STR_15+18)| (0+32768))
  5661  273B  00F2               	movwf	EUSART_Write_Text@text
  5662  273C  30BA               	movlw	high ((STR_15+18)| (0+32768))
  5663  273D  00F3               	movwf	EUSART_Write_Text@text+1
  5664  273E  31BD  25F6  31A6   	fcall	_EUSART_Write_Text
  5665                           
  5666                           ;main.c: 148:             snprintf(messageBuffer, 127, "Current sense resistor value: %.
      +                          4f ohms\n\r", AFE_getSetCurrentSenseRes());
  5667  2741  3071               	movlw	113
  5668  2742  0023               	movlb	3	; select bank3
  5669  2743  00D3               	movwf	snprintf@s^(0+384)
  5670  2744  3027               	movlw	39
  5671  2745  00D4               	movwf	(snprintf@s^(0+384)+1)
  5672  2746  307F               	movlw	127
  5673  2747  00D5               	movwf	snprintf@n^(0+384)
  5674  2748  3000               	movlw	0
  5675  2749  00D6               	movwf	(snprintf@n^(0+384)+1)
  5676  274A  3080               	movlw	low (STR_6| (0+32768))
  5677  274B  00D7               	movwf	snprintf@fmt^(0+384)
  5678  274C  30B9               	movlw	high (STR_6| (0+32768))
  5679  274D  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  5680  274E  31BD  254E  31A6   	fcall	_AFE_getSetCurrentSenseRes
  5681  2751  0874               	movf	?_AFE_getSetCurrentSenseRes+3,w
  5682  2752  0023               	movlb	3	; select bank3
  5683  2753  00DC               	movwf	((?_snprintf+3)^(0+384)+6)
  5684  2754  0873               	movf	?_AFE_getSetCurrentSenseRes+2,w
  5685  2755  00DB               	movwf	((?_snprintf+2)^(0+384)+6)
  5686  2756  0872               	movf	?_AFE_getSetCurrentSenseRes+1,w
  5687  2757  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  5688  2758  0871               	movf	?_AFE_getSetCurrentSenseRes,w
  5689  2759  00D9               	movwf	(?_snprintf^(0+384)+6)
  5690  275A  31BF  2747  31A6   	fcall	_snprintf
  5691                           
  5692                           ;main.c: 149:             EUSART_Write_Text(messageBuffer);
  5693  275D  3071               	movlw	113
  5694  275E  00F2               	movwf	EUSART_Write_Text@text
  5695  275F  3027               	movlw	39
  5696  2760  00F3               	movwf	EUSART_Write_Text@text+1
  5697  2761  31BD  25F6  31A6   	fcall	_EUSART_Write_Text
  5698                           
  5699                           ;main.c: 150:             snprintf(messageBuffer, 127, "Set short circuit current for AF
      +                          E: %lu mA\n\r", AFE_getSetShortCircuitCurrent());
  5700  2764  3071               	movlw	113
  5701  2765  0023               	movlb	3	; select bank3
  5702  2766  00D3               	movwf	snprintf@s^(0+384)
  5703  2767  3027               	movlw	39
  5704  2768  00D4               	movwf	(snprintf@s^(0+384)+1)
  5705  2769  307F               	movlw	127
  5706  276A  00D5               	movwf	snprintf@n^(0+384)
  5707  276B  3000               	movlw	0
  5708  276C  00D6               	movwf	(snprintf@n^(0+384)+1)
  5709  276D  30FF               	movlw	low (STR_7| (0+32768))
  5710  276E  00D7               	movwf	snprintf@fmt^(0+384)
  5711  276F  30B8               	movlw	high (STR_7| (0+32768))
  5712  2770  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  5713  2771  31B3  23F7  31A6   	fcall	_AFE_getSetShortCircuitCurrent
  5714  2774  0021               	movlb	1	; select bank1
  5715  2775  082C               	movf	(?_AFE_getSetShortCircuitCurrent+3)^(0+128),w
  5716  2776  0023               	movlb	3	; select bank3
  5717  2777  00DC               	movwf	((?_snprintf+3)^(0+384)+6)
  5718  2778  0021               	movlb	1	; select bank1
  5719  2779  082B               	movf	(?_AFE_getSetShortCircuitCurrent+2)^(0+128),w
  5720  277A  0023               	movlb	3	; select bank3
  5721  277B  00DB               	movwf	((?_snprintf+2)^(0+384)+6)
  5722  277C  0021               	movlb	1	; select bank1
  5723  277D  082A               	movf	(?_AFE_getSetShortCircuitCurrent+1)^(0+128),w
  5724  277E  0023               	movlb	3	; select bank3
  5725  277F  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  5726  2780  0021               	movlb	1	; select bank1
  5727  2781  0829               	movf	?_AFE_getSetShortCircuitCurrent^(0+128),w
  5728  2782  0023               	movlb	3	; select bank3
  5729  2783  00D9               	movwf	(?_snprintf^(0+384)+6)
  5730  2784  31BF  2747  31A6   	fcall	_snprintf
  5731                           
  5732                           ;main.c: 151:             EUSART_Write_Text(messageBuffer);
  5733  2787  3071               	movlw	113
  5734  2788  00F2               	movwf	EUSART_Write_Text@text
  5735  2789  3027               	movlw	39
  5736  278A  00F3               	movwf	EUSART_Write_Text@text+1
  5737  278B  31BD  25F6  31A6   	fcall	_EUSART_Write_Text
  5738                           
  5739                           ;main.c: 152:             snprintf(messageBuffer, 127, "Set Over-current discharge prote
      +                          ction  for AFE: %lu mA\n\r", AFE_getOverCurrentDischargeCurrent());
  5740  278E  3071               	movlw	113
  5741  278F  0023               	movlb	3	; select bank3
  5742  2790  00D3               	movwf	snprintf@s^(0+384)
  5743  2791  3027               	movlw	39
  5744  2792  00D4               	movwf	(snprintf@s^(0+384)+1)
  5745  2793  307F               	movlw	127
  5746  2794  00D5               	movwf	snprintf@n^(0+384)
  5747  2795  3000               	movlw	0
  5748  2796  00D6               	movwf	(snprintf@n^(0+384)+1)
  5749  2797  3002               	movlw	low (STR_8| (0+32768))
  5750  2798  00D7               	movwf	snprintf@fmt^(0+384)
  5751  2799  30B8               	movlw	high (STR_8| (0+32768))
  5752  279A  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  5753  279B  31B3  23A0  31A6   	fcall	_AFE_getOverCurrentDischargeCurrent
  5754  279E  0021               	movlb	1	; select bank1
  5755  279F  082C               	movf	(?_AFE_getOverCurrentDischargeCurrent+3)^(0+128),w
  5756  27A0  0023               	movlb	3	; select bank3
  5757  27A1  00DC               	movwf	((?_snprintf+3)^(0+384)+6)
  5758  27A2  0021               	movlb	1	; select bank1
  5759  27A3  082B               	movf	(?_AFE_getOverCurrentDischargeCurrent+2)^(0+128),w
  5760  27A4  0023               	movlb	3	; select bank3
  5761  27A5  00DB               	movwf	((?_snprintf+2)^(0+384)+6)
  5762  27A6  0021               	movlb	1	; select bank1
  5763  27A7  082A               	movf	(?_AFE_getOverCurrentDischargeCurrent+1)^(0+128),w
  5764  27A8  0023               	movlb	3	; select bank3
  5765  27A9  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  5766  27AA  0021               	movlb	1	; select bank1
  5767  27AB  0829               	movf	?_AFE_getOverCurrentDischargeCurrent^(0+128),w
  5768  27AC  0023               	movlb	3	; select bank3
  5769  27AD  00D9               	movwf	(?_snprintf^(0+384)+6)
  5770  27AE  31BF  2747  31A6   	fcall	_snprintf
  5771                           
  5772                           ;main.c: 153:             EUSART_Write_Text(messageBuffer);
  5773  27B1  3071               	movlw	113
  5774  27B2  00F2               	movwf	EUSART_Write_Text@text
  5775  27B3  3027               	movlw	39
  5776  27B4  00F3               	movwf	EUSART_Write_Text@text+1
  5777  27B5  31BD  25F6  31A6   	fcall	_EUSART_Write_Text
  5778                           
  5779                           ;main.c: 154:             printotAFERegisters();
  5780  27B8  319E  260F  31A6   	fcall	_printotAFERegisters
  5781                           
  5782                           ;main.c: 155:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  5783  27BB  3056               	movlw	low (STR_9| (0+32768))
  5784  27BC  00F2               	movwf	EUSART_Write_Text@text
  5785  27BD  30B9               	movlw	high (STR_9| (0+32768))
  5786  27BE  00F3               	movwf	EUSART_Write_Text@text+1
  5787  27BF  31BD  25F6  31A6   	fcall	_EUSART_Write_Text
  5788                           
  5789                           ;main.c: 156:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  5790  27C2  30D2               	movlw	low (STR_10| (0+32768))
  5791  27C3  00F2               	movwf	EUSART_Write_Text@text
  5792  27C4  30B8               	movlw	high (STR_10| (0+32768))
  5793  27C5  00F3               	movwf	EUSART_Write_Text@text+1
  5794  27C6  31BD  25F6  31A6   	fcall	_EUSART_Write_Text
  5795                           
  5796                           ;main.c: 159:             RGB_color(1);
  5797  27C9  3001               	movlw	1
  5798  27CA  00F1               	movwf	RGB_color@color
  5799  27CB  3000               	movlw	0
  5800  27CC  00F2               	movwf	RGB_color@color+1
  5801  27CD  31BE  26C0         	fcall	_RGB_color
  5802                           
  5803                           ;main.c: 160:             currState = 2;
  5804  27CF  3002               	movlw	2
  5805  27D0  0022               	movlb	2	; select bank2
  5806  27D1  00ED               	movwf	??_statemachine^(0+256)
  5807  27D2  086D               	movf	??_statemachine^(0+256),w
  5808  27D3  0023               	movlb	3	; select bank3
  5809  27D4  00CD               	movwf	_currState^(0+384)
  5810                           
  5811                           ;main.c: 161:             break;
  5812  27D5  0008               	return
  5813  27D6                     l8735:	
  5814                           
  5815                           ;main.c: 165:             AFE_UPDATE();
  5816  27D6  31BD  2502  31A6   	fcall	_AFE_UPDATE
  5817  27D9  0064               	clrwdt	;# 
  5818                           
  5819                           ;main.c: 169:             printcellParameters();
  5820  27DA  31B0  20ED  31A6   	fcall	_printcellParameters
  5821                           
  5822                           ;main.c: 171:             _delay((unsigned long)((5000)*(16000000/4000.0)));
  5823  27DD  3066               	movlw	102
  5824  27DE  0022               	movlb	2	; select bank2
  5825  27DF  00EE               	movwf	(??_statemachine^(0+256)+1)
  5826  27E0  3076               	movlw	118
  5827  27E1  00ED               	movwf	??_statemachine^(0+256)
  5828  27E2  30C1               	movlw	193
  5829  27E3                     u12057:	
  5830  27E3  0B89               	decfsz	9,f
  5831  27E4  2FE3               	goto	u12057
  5832  27E5  0BED               	decfsz	??_statemachine^(0+256),f
  5833  27E6  2FE3               	goto	u12057
  5834  27E7  0BEE               	decfsz	(??_statemachine^(0+256)+1),f
  5835  27E8  2FE3               	goto	u12057
  5836                           
  5837                           ;main.c: 173:             break;
  5838  27E9  0008               	return
  5839  27EA                     l8743:	
  5840  27EA  0023               	movlb	3	; select bank3
  5841  27EB  084D               	movf	_currState^(0+384),w
  5842  27EC  0022               	movlb	2	; select bank2
  5843  27ED  00ED               	movwf	??_statemachine^(0+256)
  5844  27EE  01EE               	clrf	(??_statemachine^(0+256)+1)
  5845                           
  5846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5847                           ; Switch size 1, requested type "simple"
  5848                           ; Number of cases is 1, Range of values is 0 to 0
  5849                           ; switch strategies available:
  5850                           ; Name         Instructions Cycles
  5851                           ; simple_byte            4     3 (average)
  5852                           ; direct_byte            8     6 (fixed)
  5853                           ; jumptable            260     6 (fixed)
  5854                           ;	Chosen strategy is simple_byte
  5855  27EF  086E               	movf	(??_statemachine+1)^(0+256),w
  5856  27F0  3A00               	xorlw	0	; case 0
  5857  27F1  1903               	skipnz
  5858  27F2  2FF4               	goto	l8871
  5859  27F3  2FFF               	goto	l169
  5860  27F4                     l8871:	
  5861                           
  5862                           ; Switch size 1, requested type "simple"
  5863                           ; Number of cases is 3, Range of values is 0 to 2
  5864                           ; switch strategies available:
  5865                           ; Name         Instructions Cycles
  5866                           ; simple_byte           10     6 (average)
  5867                           ; direct_byte           12     6 (fixed)
  5868                           ; jumptable            260     6 (fixed)
  5869                           ;	Chosen strategy is simple_byte
  5870  27F4  086D               	movf	??_statemachine^(0+256),w
  5871  27F5  3A00               	xorlw	0	; case 0
  5872  27F6  1903               	skipnz
  5873  27F7  2ECD               	goto	l8679
  5874  27F8  3A01               	xorlw	1	; case 1
  5875  27F9  1903               	skipnz
  5876  27FA  2F2E               	goto	l8709
  5877  27FB  3A03               	xorlw	3	; case 2
  5878  27FC  1903               	skipnz
  5879  27FD  2FD6               	goto	l8735
  5880  27FE  2FFF               	goto	l169
  5881  27FF                     l169:	
  5882  27FF  0008               	return
  5883  2800                     __end_of_statemachine:	
  5884                           
  5885                           	psect	text4
  5886  1E0F                     __ptext4:	
  5887 ;; *************** function _printotAFERegisters *****************
  5888 ;; Defined at:
  5889 ;;		line 262 in file "BQ76920.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5905 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5906 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5907 ;;Total ram usage:        1 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:   10
  5910 ;; This function calls:
  5911 ;;		_EUSART_Write_Text
  5912 ;;		_readRegister
  5913 ;;		_snprintf
  5914 ;; This function is called by:
  5915 ;;		_statemachine
  5916 ;; This function uses a non-reentrant model
  5917 ;;
  5918                           
  5919                           
  5920                           ;psect for function _printotAFERegisters
  5921  1E0F                     _printotAFERegisters:	
  5922                           
  5923                           ;BQ76920.c: 264:     _delay((unsigned long)((5)*(16000000/4000.0)));
  5924                           
  5925                           ;incstack = 0
  5926                           ; Regs used in _printotAFERegisters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5927  1E0F  301A               	movlw	26
  5928  1E10  0022               	movlb	2	; select bank2
  5929  1E11  00EC               	movwf	??_printotAFERegisters^(0+256)
  5930  1E12  30F8               	movlw	248
  5931  1E13                     u12067:	
  5932  1E13  0B89               	decfsz	9,f
  5933  1E14  2E13               	goto	u12067
  5934  1E15  0BEC               	decfsz	??_printotAFERegisters^(0+256),f
  5935  1E16  2E13               	goto	u12067
  5936  1E17  0000               	nop
  5937                           
  5938                           ;BQ76920.c: 266:     EUSART_Write_Text("Printing out AFE register values...\n\r");
  5939  1E18  30D2               	movlw	low (STR_12| (0+32768))
  5940  1E19  00F2               	movwf	EUSART_Write_Text@text
  5941  1E1A  30B9               	movlw	high (STR_12| (0+32768))
  5942  1E1B  00F3               	movwf	EUSART_Write_Text@text+1
  5943  1E1C  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  5944                           
  5945                           ;BQ76920.c: 267:     EUSART_Write_Text("\n\r");
  5946  1E1F  3056               	movlw	low ((STR_15+18)| (0+32768))
  5947  1E20  00F2               	movwf	EUSART_Write_Text@text
  5948  1E21  30BA               	movlw	high ((STR_15+18)| (0+32768))
  5949  1E22  00F3               	movwf	EUSART_Write_Text@text+1
  5950  1E23  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  5951                           
  5952                           ;BQ76920.c: 268:     snprintf(messageBuffer, 127, "0x00 SYS_STAT: %i \n\r", readRegister
      +                          (0x18, 0x00));
  5953  1E26  3071               	movlw	113
  5954  1E27  0023               	movlb	3	; select bank3
  5955  1E28  00D3               	movwf	snprintf@s^(0+384)
  5956  1E29  3027               	movlw	39
  5957  1E2A  00D4               	movwf	(snprintf@s^(0+384)+1)
  5958  1E2B  307F               	movlw	127
  5959  1E2C  00D5               	movwf	snprintf@n^(0+384)
  5960  1E2D  3000               	movlw	0
  5961  1E2E  00D6               	movwf	(snprintf@n^(0+384)+1)
  5962  1E2F  3098               	movlw	low (STR_14| (0+32768))
  5963  1E30  00D7               	movwf	snprintf@fmt^(0+384)
  5964  1E31  30BA               	movlw	high (STR_14| (0+32768))
  5965  1E32  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  5966  1E33  3018               	movlw	24
  5967  1E34  00F5               	movwf	readRegister@slaveAddress
  5968  1E35  3000               	movlw	0
  5969  1E36  00F6               	movwf	readRegister@slaveAddress+1
  5970  1E37  3000               	movlw	0
  5971  1E38  00F7               	movwf	readRegister@regAddress
  5972  1E39  00F8               	movwf	readRegister@regAddress+1
  5973  1E3A  31B0  2043  319E   	fcall	_readRegister
  5974  1E3D  0876               	movf	?_readRegister+1,w
  5975  1E3E  0023               	movlb	3	; select bank3
  5976  1E3F  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  5977  1E40  0875               	movf	?_readRegister,w
  5978  1E41  00D9               	movwf	(?_snprintf^(0+384)+6)
  5979  1E42  31BF  2747  319E   	fcall	_snprintf
  5980                           
  5981                           ;BQ76920.c: 269:     EUSART_Write_Text(messageBuffer);
  5982  1E45  3071               	movlw	113
  5983  1E46  00F2               	movwf	EUSART_Write_Text@text
  5984  1E47  3027               	movlw	39
  5985  1E48  00F3               	movwf	EUSART_Write_Text@text+1
  5986  1E49  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  5987                           
  5988                           ;BQ76920.c: 270:     snprintf(messageBuffer, 127, "0x01 CELLBAL1: %i \n\r", readRegister
      +                          (0x18, 0x01));
  5989  1E4C  3071               	movlw	113
  5990  1E4D  0023               	movlb	3	; select bank3
  5991  1E4E  00D3               	movwf	snprintf@s^(0+384)
  5992  1E4F  3027               	movlw	39
  5993  1E50  00D4               	movwf	(snprintf@s^(0+384)+1)
  5994  1E51  307F               	movlw	127
  5995  1E52  00D5               	movwf	snprintf@n^(0+384)
  5996  1E53  3000               	movlw	0
  5997  1E54  00D6               	movwf	(snprintf@n^(0+384)+1)
  5998  1E55  3044               	movlw	low (STR_15| (0+32768))
  5999  1E56  00D7               	movwf	snprintf@fmt^(0+384)
  6000  1E57  30BA               	movlw	high (STR_15| (0+32768))
  6001  1E58  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6002  1E59  3018               	movlw	24
  6003  1E5A  00F5               	movwf	readRegister@slaveAddress
  6004  1E5B  3000               	movlw	0
  6005  1E5C  00F6               	movwf	readRegister@slaveAddress+1
  6006  1E5D  3001               	movlw	1
  6007  1E5E  00F7               	movwf	readRegister@regAddress
  6008  1E5F  3000               	movlw	0
  6009  1E60  00F8               	movwf	readRegister@regAddress+1
  6010  1E61  31B0  2043  319E   	fcall	_readRegister
  6011  1E64  0876               	movf	?_readRegister+1,w
  6012  1E65  0023               	movlb	3	; select bank3
  6013  1E66  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6014  1E67  0875               	movf	?_readRegister,w
  6015  1E68  00D9               	movwf	(?_snprintf^(0+384)+6)
  6016  1E69  31BF  2747  319E   	fcall	_snprintf
  6017                           
  6018                           ;BQ76920.c: 271:     EUSART_Write_Text(messageBuffer);
  6019  1E6C  3071               	movlw	113
  6020  1E6D  00F2               	movwf	EUSART_Write_Text@text
  6021  1E6E  3027               	movlw	39
  6022  1E6F  00F3               	movwf	EUSART_Write_Text@text+1
  6023  1E70  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  6024                           
  6025                           ;BQ76920.c: 272:     snprintf(messageBuffer, 127, "0x04 SYS_CTRL1: %i \n\r", readRegiste
      +                          r(0x18, 0x04));
  6026  1E73  3071               	movlw	113
  6027  1E74  0023               	movlb	3	; select bank3
  6028  1E75  00D3               	movwf	snprintf@s^(0+384)
  6029  1E76  3027               	movlw	39
  6030  1E77  00D4               	movwf	(snprintf@s^(0+384)+1)
  6031  1E78  307F               	movlw	127
  6032  1E79  00D5               	movwf	snprintf@n^(0+384)
  6033  1E7A  3000               	movlw	0
  6034  1E7B  00D6               	movwf	(snprintf@n^(0+384)+1)
  6035  1E7C  3018               	movlw	low (STR_16| (0+32768))
  6036  1E7D  00D7               	movwf	snprintf@fmt^(0+384)
  6037  1E7E  30BA               	movlw	high (STR_16| (0+32768))
  6038  1E7F  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6039  1E80  3018               	movlw	24
  6040  1E81  00F5               	movwf	readRegister@slaveAddress
  6041  1E82  3000               	movlw	0
  6042  1E83  00F6               	movwf	readRegister@slaveAddress+1
  6043  1E84  3004               	movlw	4
  6044  1E85  00F7               	movwf	readRegister@regAddress
  6045  1E86  3000               	movlw	0
  6046  1E87  00F8               	movwf	readRegister@regAddress+1
  6047  1E88  31B0  2043  319E   	fcall	_readRegister
  6048  1E8B  0876               	movf	?_readRegister+1,w
  6049  1E8C  0023               	movlb	3	; select bank3
  6050  1E8D  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6051  1E8E  0875               	movf	?_readRegister,w
  6052  1E8F  00D9               	movwf	(?_snprintf^(0+384)+6)
  6053  1E90  31BF  2747  319E   	fcall	_snprintf
  6054                           
  6055                           ;BQ76920.c: 273:     EUSART_Write_Text(messageBuffer);
  6056  1E93  3071               	movlw	113
  6057  1E94  00F2               	movwf	EUSART_Write_Text@text
  6058  1E95  3027               	movlw	39
  6059  1E96  00F3               	movwf	EUSART_Write_Text@text+1
  6060  1E97  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  6061                           
  6062                           ;BQ76920.c: 274:     snprintf(messageBuffer, 127, "0x05 SYS_CTRL2: %i \n\r", readRegiste
      +                          r(0x18, 0x05));
  6063  1E9A  3071               	movlw	113
  6064  1E9B  0023               	movlb	3	; select bank3
  6065  1E9C  00D3               	movwf	snprintf@s^(0+384)
  6066  1E9D  3027               	movlw	39
  6067  1E9E  00D4               	movwf	(snprintf@s^(0+384)+1)
  6068  1E9F  307F               	movlw	127
  6069  1EA0  00D5               	movwf	snprintf@n^(0+384)
  6070  1EA1  3000               	movlw	0
  6071  1EA2  00D6               	movwf	(snprintf@n^(0+384)+1)
  6072  1EA3  302E               	movlw	low (STR_17| (0+32768))
  6073  1EA4  00D7               	movwf	snprintf@fmt^(0+384)
  6074  1EA5  30BA               	movlw	high (STR_17| (0+32768))
  6075  1EA6  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6076  1EA7  3018               	movlw	24
  6077  1EA8  00F5               	movwf	readRegister@slaveAddress
  6078  1EA9  3000               	movlw	0
  6079  1EAA  00F6               	movwf	readRegister@slaveAddress+1
  6080  1EAB  3005               	movlw	5
  6081  1EAC  00F7               	movwf	readRegister@regAddress
  6082  1EAD  3000               	movlw	0
  6083  1EAE  00F8               	movwf	readRegister@regAddress+1
  6084  1EAF  31B0  2043  319E   	fcall	_readRegister
  6085  1EB2  0876               	movf	?_readRegister+1,w
  6086  1EB3  0023               	movlb	3	; select bank3
  6087  1EB4  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6088  1EB5  0875               	movf	?_readRegister,w
  6089  1EB6  00D9               	movwf	(?_snprintf^(0+384)+6)
  6090  1EB7  31BF  2747  319E   	fcall	_snprintf
  6091                           
  6092                           ;BQ76920.c: 275:     EUSART_Write_Text(messageBuffer);
  6093  1EBA  3071               	movlw	113
  6094  1EBB  00F2               	movwf	EUSART_Write_Text@text
  6095  1EBC  3027               	movlw	39
  6096  1EBD  00F3               	movwf	EUSART_Write_Text@text+1
  6097  1EBE  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  6098                           
  6099                           ;BQ76920.c: 276:     snprintf(messageBuffer, 127, "0x06 PROTECT1: %i \n\r", readRegister
      +                          (0x18, 0x06));
  6100  1EC1  3071               	movlw	113
  6101  1EC2  0023               	movlb	3	; select bank3
  6102  1EC3  00D3               	movwf	snprintf@s^(0+384)
  6103  1EC4  3027               	movlw	39
  6104  1EC5  00D4               	movwf	(snprintf@s^(0+384)+1)
  6105  1EC6  307F               	movlw	127
  6106  1EC7  00D5               	movwf	snprintf@n^(0+384)
  6107  1EC8  3000               	movlw	0
  6108  1EC9  00D6               	movwf	(snprintf@n^(0+384)+1)
  6109  1ECA  3059               	movlw	low (STR_18| (0+32768))
  6110  1ECB  00D7               	movwf	snprintf@fmt^(0+384)
  6111  1ECC  30BA               	movlw	high (STR_18| (0+32768))
  6112  1ECD  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6113  1ECE  3018               	movlw	24
  6114  1ECF  00F5               	movwf	readRegister@slaveAddress
  6115  1ED0  3000               	movlw	0
  6116  1ED1  00F6               	movwf	readRegister@slaveAddress+1
  6117  1ED2  3006               	movlw	6
  6118  1ED3  00F7               	movwf	readRegister@regAddress
  6119  1ED4  3000               	movlw	0
  6120  1ED5  00F8               	movwf	readRegister@regAddress+1
  6121  1ED6  31B0  2043  319E   	fcall	_readRegister
  6122  1ED9  0876               	movf	?_readRegister+1,w
  6123  1EDA  0023               	movlb	3	; select bank3
  6124  1EDB  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6125  1EDC  0875               	movf	?_readRegister,w
  6126  1EDD  00D9               	movwf	(?_snprintf^(0+384)+6)
  6127  1EDE  31BF  2747  319E   	fcall	_snprintf
  6128                           
  6129                           ;BQ76920.c: 277:     EUSART_Write_Text(messageBuffer);
  6130  1EE1  3071               	movlw	113
  6131  1EE2  00F2               	movwf	EUSART_Write_Text@text
  6132  1EE3  3027               	movlw	39
  6133  1EE4  00F3               	movwf	EUSART_Write_Text@text+1
  6134  1EE5  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  6135                           
  6136                           ;BQ76920.c: 278:     snprintf(messageBuffer, 127, "0x07 PROTECT2: %i \n\r", readRegister
      +                          (0x18, 0x07));
  6137  1EE8  3071               	movlw	113
  6138  1EE9  0023               	movlb	3	; select bank3
  6139  1EEA  00D3               	movwf	snprintf@s^(0+384)
  6140  1EEB  3027               	movlw	39
  6141  1EEC  00D4               	movwf	(snprintf@s^(0+384)+1)
  6142  1EED  307F               	movlw	127
  6143  1EEE  00D5               	movwf	snprintf@n^(0+384)
  6144  1EEF  3000               	movlw	0
  6145  1EF0  00D6               	movwf	(snprintf@n^(0+384)+1)
  6146  1EF1  306E               	movlw	low (STR_19| (0+32768))
  6147  1EF2  00D7               	movwf	snprintf@fmt^(0+384)
  6148  1EF3  30BA               	movlw	high (STR_19| (0+32768))
  6149  1EF4  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6150  1EF5  3018               	movlw	24
  6151  1EF6  00F5               	movwf	readRegister@slaveAddress
  6152  1EF7  3000               	movlw	0
  6153  1EF8  00F6               	movwf	readRegister@slaveAddress+1
  6154  1EF9  3007               	movlw	7
  6155  1EFA  00F7               	movwf	readRegister@regAddress
  6156  1EFB  3000               	movlw	0
  6157  1EFC  00F8               	movwf	readRegister@regAddress+1
  6158  1EFD  31B0  2043  319E   	fcall	_readRegister
  6159  1F00  0876               	movf	?_readRegister+1,w
  6160  1F01  0023               	movlb	3	; select bank3
  6161  1F02  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6162  1F03  0875               	movf	?_readRegister,w
  6163  1F04  00D9               	movwf	(?_snprintf^(0+384)+6)
  6164  1F05  31BF  2747  319E   	fcall	_snprintf
  6165                           
  6166                           ;BQ76920.c: 279:     EUSART_Write_Text(messageBuffer);
  6167  1F08  3071               	movlw	113
  6168  1F09  00F2               	movwf	EUSART_Write_Text@text
  6169  1F0A  3027               	movlw	39
  6170  1F0B  00F3               	movwf	EUSART_Write_Text@text+1
  6171  1F0C  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  6172                           
  6173                           ;BQ76920.c: 280:     snprintf(messageBuffer, 127, "0x08 PROTECT3: %i \n\r", readRegister
      +                          (0x18, 0x08));
  6174  1F0F  3071               	movlw	113
  6175  1F10  0023               	movlb	3	; select bank3
  6176  1F11  00D3               	movwf	snprintf@s^(0+384)
  6177  1F12  3027               	movlw	39
  6178  1F13  00D4               	movwf	(snprintf@s^(0+384)+1)
  6179  1F14  307F               	movlw	127
  6180  1F15  00D5               	movwf	snprintf@n^(0+384)
  6181  1F16  3000               	movlw	0
  6182  1F17  00D6               	movwf	(snprintf@n^(0+384)+1)
  6183  1F18  3083               	movlw	low (STR_20| (0+32768))
  6184  1F19  00D7               	movwf	snprintf@fmt^(0+384)
  6185  1F1A  30BA               	movlw	high (STR_20| (0+32768))
  6186  1F1B  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6187  1F1C  3018               	movlw	24
  6188  1F1D  00F5               	movwf	readRegister@slaveAddress
  6189  1F1E  3000               	movlw	0
  6190  1F1F  00F6               	movwf	readRegister@slaveAddress+1
  6191  1F20  3008               	movlw	8
  6192  1F21  00F7               	movwf	readRegister@regAddress
  6193  1F22  3000               	movlw	0
  6194  1F23  00F8               	movwf	readRegister@regAddress+1
  6195  1F24  31B0  2043  319E   	fcall	_readRegister
  6196  1F27  0876               	movf	?_readRegister+1,w
  6197  1F28  0023               	movlb	3	; select bank3
  6198  1F29  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6199  1F2A  0875               	movf	?_readRegister,w
  6200  1F2B  00D9               	movwf	(?_snprintf^(0+384)+6)
  6201  1F2C  31BF  2747  319E   	fcall	_snprintf
  6202                           
  6203                           ;BQ76920.c: 281:     EUSART_Write_Text(messageBuffer);
  6204  1F2F  3071               	movlw	113
  6205  1F30  00F2               	movwf	EUSART_Write_Text@text
  6206  1F31  3027               	movlw	39
  6207  1F32  00F3               	movwf	EUSART_Write_Text@text+1
  6208  1F33  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  6209                           
  6210                           ;BQ76920.c: 282:     snprintf(messageBuffer, 127, "0x09 OV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x09));
  6211  1F36  3071               	movlw	113
  6212  1F37  0023               	movlb	3	; select bank3
  6213  1F38  00D3               	movwf	snprintf@s^(0+384)
  6214  1F39  3027               	movlw	39
  6215  1F3A  00D4               	movwf	(snprintf@s^(0+384)+1)
  6216  1F3B  307F               	movlw	127
  6217  1F3C  00D5               	movwf	snprintf@n^(0+384)
  6218  1F3D  3000               	movlw	0
  6219  1F3E  00D6               	movwf	(snprintf@n^(0+384)+1)
  6220  1F3F  30AD               	movlw	low (STR_21| (0+32768))
  6221  1F40  00D7               	movwf	snprintf@fmt^(0+384)
  6222  1F41  30BA               	movlw	high (STR_21| (0+32768))
  6223  1F42  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6224  1F43  3018               	movlw	24
  6225  1F44  00F5               	movwf	readRegister@slaveAddress
  6226  1F45  3000               	movlw	0
  6227  1F46  00F6               	movwf	readRegister@slaveAddress+1
  6228  1F47  3009               	movlw	9
  6229  1F48  00F7               	movwf	readRegister@regAddress
  6230  1F49  3000               	movlw	0
  6231  1F4A  00F8               	movwf	readRegister@regAddress+1
  6232  1F4B  31B0  2043  319E   	fcall	_readRegister
  6233  1F4E  0876               	movf	?_readRegister+1,w
  6234  1F4F  0023               	movlb	3	; select bank3
  6235  1F50  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6236  1F51  0875               	movf	?_readRegister,w
  6237  1F52  00D9               	movwf	(?_snprintf^(0+384)+6)
  6238  1F53  31BF  2747  319E   	fcall	_snprintf
  6239                           
  6240                           ;BQ76920.c: 283:     EUSART_Write_Text(messageBuffer);
  6241  1F56  3071               	movlw	113
  6242  1F57  00F2               	movwf	EUSART_Write_Text@text
  6243  1F58  3027               	movlw	39
  6244  1F59  00F3               	movwf	EUSART_Write_Text@text+1
  6245  1F5A  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  6246                           
  6247                           ;BQ76920.c: 284:     snprintf(messageBuffer, 127, "0x0A UV_TRIP: %i \n\r", readRegister(
      +                          0x18, 0x0A));
  6248  1F5D  3071               	movlw	113
  6249  1F5E  0023               	movlb	3	; select bank3
  6250  1F5F  00D3               	movwf	snprintf@s^(0+384)
  6251  1F60  3027               	movlw	39
  6252  1F61  00D4               	movwf	(snprintf@s^(0+384)+1)
  6253  1F62  307F               	movlw	127
  6254  1F63  00D5               	movwf	snprintf@n^(0+384)
  6255  1F64  3000               	movlw	0
  6256  1F65  00D6               	movwf	(snprintf@n^(0+384)+1)
  6257  1F66  30C1               	movlw	low (STR_22| (0+32768))
  6258  1F67  00D7               	movwf	snprintf@fmt^(0+384)
  6259  1F68  30BA               	movlw	high (STR_22| (0+32768))
  6260  1F69  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6261  1F6A  3018               	movlw	24
  6262  1F6B  00F5               	movwf	readRegister@slaveAddress
  6263  1F6C  3000               	movlw	0
  6264  1F6D  00F6               	movwf	readRegister@slaveAddress+1
  6265  1F6E  300A               	movlw	10
  6266  1F6F  00F7               	movwf	readRegister@regAddress
  6267  1F70  3000               	movlw	0
  6268  1F71  00F8               	movwf	readRegister@regAddress+1
  6269  1F72  31B0  2043  319E   	fcall	_readRegister
  6270  1F75  0876               	movf	?_readRegister+1,w
  6271  1F76  0023               	movlb	3	; select bank3
  6272  1F77  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6273  1F78  0875               	movf	?_readRegister,w
  6274  1F79  00D9               	movwf	(?_snprintf^(0+384)+6)
  6275  1F7A  31BF  2747  319E   	fcall	_snprintf
  6276                           
  6277                           ;BQ76920.c: 285:     EUSART_Write_Text(messageBuffer);
  6278  1F7D  3071               	movlw	113
  6279  1F7E  00F2               	movwf	EUSART_Write_Text@text
  6280  1F7F  3027               	movlw	39
  6281  1F80  00F3               	movwf	EUSART_Write_Text@text+1
  6282  1F81  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  6283                           
  6284                           ;BQ76920.c: 286:     snprintf(messageBuffer, 127, "0x0B CC_CFG: %i \n\r", readRegister(0
      +                          x18, 0x0B));
  6285  1F84  3071               	movlw	113
  6286  1F85  0023               	movlb	3	; select bank3
  6287  1F86  00D3               	movwf	snprintf@s^(0+384)
  6288  1F87  3027               	movlw	39
  6289  1F88  00D4               	movwf	(snprintf@s^(0+384)+1)
  6290  1F89  307F               	movlw	127
  6291  1F8A  00D5               	movwf	snprintf@n^(0+384)
  6292  1F8B  3000               	movlw	0
  6293  1F8C  00D6               	movwf	(snprintf@n^(0+384)+1)
  6294  1F8D  30D5               	movlw	low (STR_23| (0+32768))
  6295  1F8E  00D7               	movwf	snprintf@fmt^(0+384)
  6296  1F8F  30BA               	movlw	high (STR_23| (0+32768))
  6297  1F90  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6298  1F91  3018               	movlw	24
  6299  1F92  00F5               	movwf	readRegister@slaveAddress
  6300  1F93  3000               	movlw	0
  6301  1F94  00F6               	movwf	readRegister@slaveAddress+1
  6302  1F95  300B               	movlw	11
  6303  1F96  00F7               	movwf	readRegister@regAddress
  6304  1F97  3000               	movlw	0
  6305  1F98  00F8               	movwf	readRegister@regAddress+1
  6306  1F99  31B0  2043  319E   	fcall	_readRegister
  6307  1F9C  0876               	movf	?_readRegister+1,w
  6308  1F9D  0023               	movlb	3	; select bank3
  6309  1F9E  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6310  1F9F  0875               	movf	?_readRegister,w
  6311  1FA0  00D9               	movwf	(?_snprintf^(0+384)+6)
  6312  1FA1  31BF  2747  319E   	fcall	_snprintf
  6313                           
  6314                           ;BQ76920.c: 287:     EUSART_Write_Text(messageBuffer);
  6315  1FA4  3071               	movlw	113
  6316  1FA5  00F2               	movwf	EUSART_Write_Text@text
  6317  1FA6  3027               	movlw	39
  6318  1FA7  00F3               	movwf	EUSART_Write_Text@text+1
  6319  1FA8  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  6320                           
  6321                           ;BQ76920.c: 288:     snprintf(messageBuffer, 127, "0x32 CC_HI: %i \n\r", readRegister(0x
      +                          18, 0x32));
  6322  1FAB  3071               	movlw	113
  6323  1FAC  0023               	movlb	3	; select bank3
  6324  1FAD  00D3               	movwf	snprintf@s^(0+384)
  6325  1FAE  3027               	movlw	39
  6326  1FAF  00D4               	movwf	(snprintf@s^(0+384)+1)
  6327  1FB0  307F               	movlw	127
  6328  1FB1  00D5               	movwf	snprintf@n^(0+384)
  6329  1FB2  3000               	movlw	0
  6330  1FB3  00D6               	movwf	(snprintf@n^(0+384)+1)
  6331  1FB4  30E8               	movlw	low (STR_24| (0+32768))
  6332  1FB5  00D7               	movwf	snprintf@fmt^(0+384)
  6333  1FB6  30BA               	movlw	high (STR_24| (0+32768))
  6334  1FB7  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6335  1FB8  3018               	movlw	24
  6336  1FB9  00F5               	movwf	readRegister@slaveAddress
  6337  1FBA  3000               	movlw	0
  6338  1FBB  00F6               	movwf	readRegister@slaveAddress+1
  6339  1FBC  3032               	movlw	50
  6340  1FBD  00F7               	movwf	readRegister@regAddress
  6341  1FBE  3000               	movlw	0
  6342  1FBF  00F8               	movwf	readRegister@regAddress+1
  6343  1FC0  31B0  2043  319E   	fcall	_readRegister
  6344  1FC3  0876               	movf	?_readRegister+1,w
  6345  1FC4  0023               	movlb	3	; select bank3
  6346  1FC5  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6347  1FC6  0875               	movf	?_readRegister,w
  6348  1FC7  00D9               	movwf	(?_snprintf^(0+384)+6)
  6349  1FC8  31BF  2747  319E   	fcall	_snprintf
  6350                           
  6351                           ;BQ76920.c: 289:     EUSART_Write_Text(messageBuffer);
  6352  1FCB  3071               	movlw	113
  6353  1FCC  00F2               	movwf	EUSART_Write_Text@text
  6354  1FCD  3027               	movlw	39
  6355  1FCE  00F3               	movwf	EUSART_Write_Text@text+1
  6356  1FCF  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  6357                           
  6358                           ;BQ76920.c: 290:     snprintf(messageBuffer, 127, "0x33 CC_LO: %i \n\r", readRegister(0x
      +                          18, 0x33));
  6359  1FD2  3071               	movlw	113
  6360  1FD3  0023               	movlb	3	; select bank3
  6361  1FD4  00D3               	movwf	snprintf@s^(0+384)
  6362  1FD5  3027               	movlw	39
  6363  1FD6  00D4               	movwf	(snprintf@s^(0+384)+1)
  6364  1FD7  307F               	movlw	127
  6365  1FD8  00D5               	movwf	snprintf@n^(0+384)
  6366  1FD9  3000               	movlw	0
  6367  1FDA  00D6               	movwf	(snprintf@n^(0+384)+1)
  6368  1FDB  30FA               	movlw	low (STR_25| (0+32768))
  6369  1FDC  00D7               	movwf	snprintf@fmt^(0+384)
  6370  1FDD  30BA               	movlw	high (STR_25| (0+32768))
  6371  1FDE  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6372  1FDF  3018               	movlw	24
  6373  1FE0  00F5               	movwf	readRegister@slaveAddress
  6374  1FE1  3000               	movlw	0
  6375  1FE2  00F6               	movwf	readRegister@slaveAddress+1
  6376  1FE3  3033               	movlw	51
  6377  1FE4  00F7               	movwf	readRegister@regAddress
  6378  1FE5  3000               	movlw	0
  6379  1FE6  00F8               	movwf	readRegister@regAddress+1
  6380  1FE7  31B0  2043  319E   	fcall	_readRegister
  6381  1FEA  0876               	movf	?_readRegister+1,w
  6382  1FEB  0023               	movlb	3	; select bank3
  6383  1FEC  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6384  1FED  0875               	movf	?_readRegister,w
  6385  1FEE  00D9               	movwf	(?_snprintf^(0+384)+6)
  6386  1FEF  31BF  2747  319E   	fcall	_snprintf
  6387                           
  6388                           ;BQ76920.c: 291:     EUSART_Write_Text(messageBuffer);
  6389  1FF2  3071               	movlw	113
  6390  1FF3  00F2               	movwf	EUSART_Write_Text@text
  6391  1FF4  3027               	movlw	39
  6392  1FF5  00F3               	movwf	EUSART_Write_Text@text+1
  6393  1FF6  31BD  25F6  319E   	fcall	_EUSART_Write_Text
  6394                           
  6395                           ;BQ76920.c: 292:     EUSART_Write_Text("\n\r");
  6396  1FF9  3056               	movlw	low ((STR_15+18)| (0+32768))
  6397  1FFA  00F2               	movwf	EUSART_Write_Text@text
  6398  1FFB  30BA               	movlw	high ((STR_15+18)| (0+32768))
  6399  1FFC  00F3               	movwf	EUSART_Write_Text@text+1
  6400  1FFD  31BD  25F6         	fcall	_EUSART_Write_Text
  6401  1FFF  0008               	return
  6402  2000                     __end_of_printotAFERegisters:	
  6403                           
  6404                           	psect	text5
  6405  30ED                     __ptext5:	
  6406 ;; *************** function _printcellParameters *****************
  6407 ;; Defined at:
  6408 ;;		line 258 in file "BQ76920.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:   10
  6429 ;; This function calls:
  6430 ;;		_EUSART_Write_Text
  6431 ;;		_snprintf
  6432 ;; This function is called by:
  6433 ;;		_statemachine
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           
  6438                           ;psect for function _printcellParameters
  6439  30ED                     _printcellParameters:	
  6440                           
  6441                           ;BQ76920.c: 259:     snprintf(messageBuffer, 127, "Cell batt: %i ,%d, %d , %d, %d, %d Ba
      +                          tt Curr: %i \n\r", batVoltage,cellVoltages[0],cellVoltages[1],cellVoltages[2],cellVoltag
      +                          es[3],cellVoltages[4], batCurrent);;
  6442                           
  6443                           ;incstack = 0
  6444                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6445  30ED  3071               	movlw	113
  6446  30EE  0023               	movlb	3	; select bank3
  6447  30EF  00D3               	movwf	snprintf@s^(0+384)
  6448  30F0  3027               	movlw	39
  6449  30F1  00D4               	movwf	(snprintf@s^(0+384)+1)
  6450  30F2  307F               	movlw	127
  6451  30F3  00D5               	movwf	snprintf@n^(0+384)
  6452  30F4  3000               	movlw	0
  6453  30F5  00D6               	movwf	(snprintf@n^(0+384)+1)
  6454  30F6  3070               	movlw	low (STR_11| (0+32768))
  6455  30F7  00D7               	movwf	snprintf@fmt^(0+384)
  6456  30F8  30B8               	movlw	high (STR_11| (0+32768))
  6457  30F9  00D8               	movwf	(snprintf@fmt^(0+384)+1)
  6458  30FA  0024               	movlb	4	; select bank4
  6459  30FB  082F               	movf	(_batVoltage+3)^(0+512),w
  6460  30FC  0023               	movlb	3	; select bank3
  6461  30FD  00DC               	movwf	((?_snprintf+3)^(0+384)+6)
  6462  30FE  0024               	movlb	4	; select bank4
  6463  30FF  082E               	movf	(_batVoltage+2)^(0+512),w
  6464  3100  0023               	movlb	3	; select bank3
  6465  3101  00DB               	movwf	((?_snprintf+2)^(0+384)+6)
  6466  3102  0024               	movlb	4	; select bank4
  6467  3103  082D               	movf	(_batVoltage+1)^(0+512),w
  6468  3104  0023               	movlb	3	; select bank3
  6469  3105  00DA               	movwf	((?_snprintf+1)^(0+384)+6)
  6470  3106  0024               	movlb	4	; select bank4
  6471  3107  082C               	movf	_batVoltage^(0+512),w
  6472  3108  0023               	movlb	3	; select bank3
  6473  3109  00D9               	movwf	(?_snprintf^(0+384)+6)
  6474  310A  0821               	movf	(_cellVoltages+1)^(0+384),w
  6475  310B  00DE               	movwf	((?_snprintf+1)^(0+384)+10)
  6476  310C  0820               	movf	_cellVoltages^(0+384),w
  6477  310D  00DD               	movwf	(?_snprintf^(0+384)+10)
  6478  310E  0823               	movf	((_cellVoltages+1)^(0+384)+2),w
  6479  310F  00E0               	movwf	((?_snprintf+1)^(0+384)+12)
  6480  3110  0822               	movf	(_cellVoltages^(0+384)+2),w
  6481  3111  00DF               	movwf	(?_snprintf^(0+384)+12)
  6482  3112  0825               	movf	((_cellVoltages+1)^(0+384)+4),w
  6483  3113  00E2               	movwf	((?_snprintf+1)^(0+384)+14)
  6484  3114  0824               	movf	(_cellVoltages^(0+384)+4),w
  6485  3115  00E1               	movwf	(?_snprintf^(0+384)+14)
  6486  3116  0827               	movf	((_cellVoltages+1)^(0+384)+6),w
  6487  3117  00E4               	movwf	((?_snprintf+1)^(0+384)+16)
  6488  3118  0826               	movf	(_cellVoltages^(0+384)+6),w
  6489  3119  00E3               	movwf	(?_snprintf^(0+384)+16)
  6490  311A  0829               	movf	((_cellVoltages+1)^(0+384)+8),w
  6491  311B  00E6               	movwf	((?_snprintf+1)^(0+384)+18)
  6492  311C  0828               	movf	(_cellVoltages^(0+384)+8),w
  6493  311D  00E5               	movwf	(?_snprintf^(0+384)+18)
  6494  311E  0831               	movf	(_batCurrent+3)^(0+384),w
  6495  311F  00EA               	movwf	((?_snprintf+3)^(0+384)+20)
  6496  3120  0830               	movf	(_batCurrent+2)^(0+384),w
  6497  3121  00E9               	movwf	((?_snprintf+2)^(0+384)+20)
  6498  3122  082F               	movf	(_batCurrent+1)^(0+384),w
  6499  3123  00E8               	movwf	((?_snprintf+1)^(0+384)+20)
  6500  3124  082E               	movf	_batCurrent^(0+384),w
  6501  3125  00E7               	movwf	(?_snprintf^(0+384)+20)
  6502  3126  31BF  2747  31B0   	fcall	_snprintf
  6503                           
  6504                           ;BQ76920.c: 260:     EUSART_Write_Text(messageBuffer);
  6505  3129  3071               	movlw	113
  6506  312A  00F2               	movwf	EUSART_Write_Text@text
  6507  312B  3027               	movlw	39
  6508  312C  00F3               	movwf	EUSART_Write_Text@text+1
  6509  312D  31BD  25F6         	fcall	_EUSART_Write_Text
  6510  312F  0008               	return
  6511  3130                     __end_of_printcellParameters:	
  6512                           
  6513                           	psect	text6
  6514  3F47                     __ptext6:	
  6515 ;; *************** function _snprintf *****************
  6516 ;; Defined at:
  6517 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  s               2    0[BANK3 ] PTR unsigned char 
  6520 ;;		 -> messageBuffer(127), 
  6521 ;;  n               2    2[BANK3 ] unsigned int 
  6522 ;;  fmt             2    4[BANK3 ] PTR const unsigned char 
  6523 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6524 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6525 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6526 ;;		 -> STR_11(52), STR_8(57), STR_7(44), STR_6(42), 
  6527 ;;		 -> STR_3(43), 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  ret             2    0        int 
  6530 ;;  ap              1   75[BANK2 ] PTR void [1]
  6531 ;;		 -> ?_snprintf(2), 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  2    0[BANK3 ] int 
  6534 ;; Registers used:
  6535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6541 ;;      Params:         0       0       0       0      24       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6542 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6543 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6544 ;;      Totals:         0       0       0       4      24       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6545 ;;Total ram usage:       28 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:    9
  6548 ;; This function calls:
  6549 ;;		_vsnprintf
  6550 ;; This function is called by:
  6551 ;;		_statemachine
  6552 ;;		_printcellParameters
  6553 ;;		_printotAFERegisters
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556                           
  6557                           
  6558                           ;psect for function _snprintf
  6559  3F47                     _snprintf:	
  6560                           
  6561                           ;incstack = 0
  6562                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6563  3F47  30D9               	movlw	(low ((?_snprintf| (0+256)+6)))& (0+255)
  6564  3F48  0022               	movlb	2	; select bank2
  6565  3F49  00E8               	movwf	??_snprintf^(0+256)
  6566  3F4A  0868               	movf	??_snprintf^(0+256),w
  6567  3F4B  00EB               	movwf	snprintf@ap^(0+256)
  6568  3F4C  0023               	movlb	3	; select bank3
  6569  3F4D  0854               	movf	(snprintf@s+1)^(0+384),w
  6570  3F4E  0022               	movlb	2	; select bank2
  6571  3F4F  00D6               	movwf	(vsnprintf@s+1)^(0+256)
  6572  3F50  0023               	movlb	3	; select bank3
  6573  3F51  0853               	movf	snprintf@s^(0+384),w
  6574  3F52  0022               	movlb	2	; select bank2
  6575  3F53  00D5               	movwf	vsnprintf@s^(0+256)
  6576  3F54  0023               	movlb	3	; select bank3
  6577  3F55  0856               	movf	(snprintf@n+1)^(0+384),w
  6578  3F56  0022               	movlb	2	; select bank2
  6579  3F57  00D8               	movwf	(vsnprintf@n+1)^(0+256)
  6580  3F58  0023               	movlb	3	; select bank3
  6581  3F59  0855               	movf	snprintf@n^(0+384),w
  6582  3F5A  0022               	movlb	2	; select bank2
  6583  3F5B  00D7               	movwf	vsnprintf@n^(0+256)
  6584  3F5C  0023               	movlb	3	; select bank3
  6585  3F5D  0858               	movf	(snprintf@fmt+1)^(0+384),w
  6586  3F5E  0022               	movlb	2	; select bank2
  6587  3F5F  00DA               	movwf	(vsnprintf@fmt+1)^(0+256)
  6588  3F60  0023               	movlb	3	; select bank3
  6589  3F61  0857               	movf	snprintf@fmt^(0+384),w
  6590  3F62  0022               	movlb	2	; select bank2
  6591  3F63  00D9               	movwf	vsnprintf@fmt^(0+256)
  6592  3F64  306B               	movlw	(low (snprintf@ap| (0+256)))& (0+255)
  6593  3F65  00E8               	movwf	??_snprintf^(0+256)
  6594  3F66  0868               	movf	??_snprintf^(0+256),w
  6595  3F67  00DB               	movwf	vsnprintf@ap^(0+256)
  6596  3F68  31B5  251D         	fcall	_vsnprintf
  6597  3F6A  0008               	return
  6598  3F6B                     __end_of_snprintf:	
  6599                           
  6600                           	psect	text7
  6601  351D                     __ptext7:	
  6602 ;; *************** function _vsnprintf *****************
  6603 ;; Defined at:
  6604 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  s               2   53[BANK2 ] PTR unsigned char 
  6607 ;;		 -> messageBuffer(127), 
  6608 ;;  n               2   55[BANK2 ] unsigned int 
  6609 ;;  fmt             2   57[BANK2 ] PTR const unsigned char 
  6610 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6611 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6612 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6613 ;;		 -> STR_11(52), STR_8(57), STR_7(44), STR_6(42), 
  6614 ;;		 -> STR_3(43), 
  6615 ;;  ap              1   59[BANK2 ] PTR PTR void 
  6616 ;;		 -> snprintf@ap(1), 
  6617 ;; Auto vars:     Size  Location     Type
  6618 ;;  f               6   66[BANK2 ] struct _IO_FILE
  6619 ;;  cnt             2   64[BANK2 ] int 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  2   53[BANK2 ] int 
  6622 ;; Registers used:
  6623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6629 ;;      Params:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6630 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6631 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6632 ;;      Totals:         0       0       0      19       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6633 ;;Total ram usage:       19 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:    8
  6636 ;; This function calls:
  6637 ;;		_vfprintf
  6638 ;; This function is called by:
  6639 ;;		_snprintf
  6640 ;; This function uses a non-reentrant model
  6641 ;;
  6642                           
  6643                           
  6644                           ;psect for function _vsnprintf
  6645  351D                     _vsnprintf:	
  6646                           
  6647                           ;incstack = 0
  6648                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6649  351D  3080               	movlw	128
  6650  351E  0022               	movlb	2	; select bank2
  6651  351F  0258               	subwf	(vsnprintf@n+1)^(0+256),w
  6652  3520  3000               	movlw	0
  6653  3521  1903               	skipnz
  6654  3522  0257               	subwf	vsnprintf@n^(0+256),w
  6655  3523  1C03               	skipc
  6656  3524  2D30               	goto	l8435
  6657  3525  304B               	movlw	75
  6658  3526  0024               	movlb	4	; select bank4
  6659  3527  00B0               	movwf	_errno^(0+512)
  6660  3528  3000               	movlw	0
  6661  3529  00B1               	movwf	(_errno^(0+512)+1)
  6662  352A  30FF               	movlw	255
  6663  352B  0022               	movlb	2	; select bank2
  6664  352C  00D5               	movwf	?_vsnprintf^(0+256)
  6665  352D  30FF               	movlw	255
  6666  352E  00D6               	movwf	(?_vsnprintf^(0+256)+1)
  6667  352F  0008               	return
  6668  3530                     l8435:	
  6669  3530  0856               	movf	(vsnprintf@s+1)^(0+256),w
  6670  3531  00E3               	movwf	(vsnprintf@f+1)^(0+256)
  6671  3532  0855               	movf	vsnprintf@s^(0+256),w
  6672  3533  00E2               	movwf	vsnprintf@f^(0+256)
  6673  3534  3000               	movlw	0
  6674  3535  0258               	subwf	(vsnprintf@n+1)^(0+256),w
  6675  3536  3002               	movlw	2
  6676  3537  1903               	skipnz
  6677  3538  0257               	subwf	vsnprintf@n^(0+256),w
  6678  3539  1C03               	skipc
  6679  353A  2D44               	goto	l8441
  6680  353B  0857               	movf	vsnprintf@n^(0+256),w
  6681  353C  3EFF               	addlw	255
  6682  353D  00E6               	movwf	(vsnprintf@f^(0+256)+4)
  6683  353E  30FF               	movlw	255
  6684  353F  3D58               	addwfc	(vsnprintf@n+1)^(0+256),w
  6685  3540  00E7               	movwf	((vsnprintf@f+1)^(0+256)+4)
  6686  3541  01E4               	clrf	(vsnprintf@f^(0+256)+2)
  6687  3542  01E5               	clrf	((vsnprintf@f+1)^(0+256)+2)
  6688  3543  2D4C               	goto	l8443
  6689  3544                     l8441:	
  6690  3544  3001               	movlw	1
  6691  3545  00E6               	movwf	(vsnprintf@f^(0+256)+4)
  6692  3546  3000               	movlw	0
  6693  3547  00E7               	movwf	(vsnprintf@f^(0+256)+5)
  6694  3548  3001               	movlw	1
  6695  3549  00E4               	movwf	(vsnprintf@f^(0+256)+2)
  6696  354A  3000               	movlw	0
  6697  354B  00E5               	movwf	(vsnprintf@f^(0+256)+3)
  6698  354C                     l8443:	
  6699  354C  3062               	movlw	low vsnprintf@f
  6700  354D  00CE               	movwf	vfprintf@fp^(0+256)
  6701  354E  3001               	movlw	high vsnprintf@f
  6702  354F  00CF               	movwf	(vfprintf@fp^(0+256)+1)
  6703  3550  085A               	movf	(vsnprintf@fmt+1)^(0+256),w
  6704  3551  00D1               	movwf	(vfprintf@fmt+1)^(0+256)
  6705  3552  0859               	movf	vsnprintf@fmt^(0+256),w
  6706  3553  00D0               	movwf	vfprintf@fmt^(0+256)
  6707  3554  085B               	movf	vsnprintf@ap^(0+256),w
  6708  3555  00DC               	movwf	??_vsnprintf^(0+256)
  6709  3556  085C               	movf	??_vsnprintf^(0+256),w
  6710  3557  00D2               	movwf	vfprintf@ap^(0+256)
  6711  3558  31B0  2079  31B5   	fcall	_vfprintf
  6712  355B  0022               	movlb	2	; select bank2
  6713  355C  084F               	movf	(?_vfprintf+1)^(0+256),w
  6714  355D  00E1               	movwf	(vsnprintf@cnt+1)^(0+256)
  6715  355E  084E               	movf	?_vfprintf^(0+256),w
  6716  355F  00E0               	movwf	vsnprintf@cnt^(0+256)
  6717  3560  0857               	movf	vsnprintf@n^(0+256),w
  6718  3561  0458               	iorwf	(vsnprintf@n+1)^(0+256),w
  6719  3562  1D03               	btfss	3,2
  6720  3563  1BE1               	btfsc	(vsnprintf@cnt+1)^(0+256),7
  6721  3564  2D85               	goto	l8457
  6722  3565  0857               	movf	vsnprintf@n^(0+256),w
  6723  3566  3EFF               	addlw	255
  6724  3567  00DC               	movwf	??_vsnprintf^(0+256)
  6725  3568  30FF               	movlw	255
  6726  3569  3D58               	addwfc	(vsnprintf@n+1)^(0+256),w
  6727  356A  00DD               	movwf	(??_vsnprintf+1)^(0+256)
  6728  356B  085D               	movf	(??_vsnprintf+1)^(0+256),w
  6729  356C  0261               	subwf	(vsnprintf@cnt+1)^(0+256),w
  6730  356D  1D03               	skipz
  6731  356E  2D71               	goto	u11835
  6732  356F  085C               	movf	??_vsnprintf^(0+256),w
  6733  3570  0260               	subwf	vsnprintf@cnt^(0+256),w
  6734  3571                     u11835:	
  6735  3571  1C03               	skipc
  6736  3572  2D7A               	goto	l8453
  6737  3573  0857               	movf	vsnprintf@n^(0+256),w
  6738  3574  3EFF               	addlw	255
  6739  3575  00DE               	movwf	_vsnprintf$1940^(0+256)
  6740  3576  30FF               	movlw	255
  6741  3577  3D58               	addwfc	(vsnprintf@n+1)^(0+256),w
  6742  3578  00DF               	movwf	(_vsnprintf$1940+1)^(0+256)
  6743  3579  2D7E               	goto	l8455
  6744  357A                     l8453:	
  6745  357A  0861               	movf	(vsnprintf@cnt+1)^(0+256),w
  6746  357B  00DF               	movwf	(_vsnprintf$1940+1)^(0+256)
  6747  357C  0860               	movf	vsnprintf@cnt^(0+256),w
  6748  357D  00DE               	movwf	_vsnprintf$1940^(0+256)
  6749  357E                     l8455:	
  6750  357E  085E               	movf	_vsnprintf$1940^(0+256),w
  6751  357F  0755               	addwf	vsnprintf@s^(0+256),w
  6752  3580  0086               	movwf	6
  6753  3581  085F               	movf	(_vsnprintf$1940+1)^(0+256),w
  6754  3582  3D56               	addwfc	(vsnprintf@s+1)^(0+256),w
  6755  3583  0087               	movwf	7
  6756  3584  0181               	clrf	1
  6757  3585                     l8457:	
  6758  3585  0861               	movf	(vsnprintf@cnt+1)^(0+256),w
  6759  3586  00D6               	movwf	(?_vsnprintf+1)^(0+256)
  6760  3587  0860               	movf	vsnprintf@cnt^(0+256),w
  6761  3588  00D5               	movwf	?_vsnprintf^(0+256)
  6762  3589  0008               	return
  6763  358A                     __end_of_vsnprintf:	
  6764                           
  6765                           	psect	text8
  6766  3079                     __ptext8:	
  6767 ;; *************** function _vfprintf *****************
  6768 ;; Defined at:
  6769 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6770 ;; Parameters:    Size  Location     Type
  6771 ;;  fp              2   46[BANK2 ] PTR struct _IO_FILE
  6772 ;;		 -> vsnprintf@f(6), 
  6773 ;;  fmt             2   48[BANK2 ] PTR const unsigned char 
  6774 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6775 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6776 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6777 ;;		 -> STR_11(52), STR_8(57), STR_7(44), STR_6(42), 
  6778 ;;		 -> STR_3(43), 
  6779 ;;  ap              1   50[BANK2 ] PTR PTR void 
  6780 ;;		 -> snprintf@ap(1), 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  cfmt            2   51[BANK2 ] PTR unsigned char 
  6783 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
  6784 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
  6785 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
  6786 ;;		 -> STR_11(52), STR_8(57), STR_7(44), STR_6(42), 
  6787 ;;		 -> STR_3(43), 
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  2   46[BANK2 ] int 
  6790 ;; Registers used:
  6791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6797 ;;      Params:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6798 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6799 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6800 ;;      Totals:         0       2       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6801 ;;Total ram usage:        9 bytes
  6802 ;; Hardware stack levels used:    1
  6803 ;; Hardware stack levels required when called:    7
  6804 ;; This function calls:
  6805 ;;		_vfpfcnvrt
  6806 ;; This function is called by:
  6807 ;;		_vsnprintf
  6808 ;; This function uses a non-reentrant model
  6809 ;;
  6810                           
  6811                           
  6812                           ;psect for function _vfprintf
  6813  3079                     _vfprintf:	
  6814                           
  6815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6816                           
  6817                           ;incstack = 0
  6818                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6819  3079  0022               	movlb	2	; select bank2
  6820  307A  0851               	movf	(vfprintf@fmt+1)^(0+256),w
  6821  307B  00D4               	movwf	(vfprintf@cfmt+1)^(0+256)
  6822  307C  0850               	movf	vfprintf@fmt^(0+256),w
  6823  307D  00D3               	movwf	vfprintf@cfmt^(0+256)
  6824                           
  6825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  6826  307E  0023               	movlb	3	; select bank3
  6827  307F  01B2               	clrf	_nout^(0+384)
  6828  3080  01B3               	clrf	(_nout+1)^(0+384)
  6829  3081                     l8369:	
  6830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6831                           
  6832                           
  6833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  6834  3081  0022               	movlb	2	; select bank2
  6835  3082  0853               	movf	vfprintf@cfmt^(0+256),w
  6836  3083  0084               	movwf	4
  6837  3084  0854               	movf	(vfprintf@cfmt+1)^(0+256),w
  6838  3085  0085               	movwf	5
  6839  3086  0012               	moviw fsr0++
  6840  3087  1903               	btfsc	3,2
  6841  3088  28A9               	goto	l8371
  6842                           
  6843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  6844  3089  084F               	movf	(vfprintf@fp+1)^(0+256),w
  6845  308A  0021               	movlb	1	; select bank1
  6846  308B  00ED               	movwf	(vfpfcnvrt@fp+1)^(0+128)
  6847  308C  0022               	movlb	2	; select bank2
  6848  308D  084E               	movf	vfprintf@fp^(0+256),w
  6849  308E  0021               	movlb	1	; select bank1
  6850  308F  00EC               	movwf	vfpfcnvrt@fp^(0+128)
  6851  3090  3053               	movlw	(low (vfprintf@cfmt| (0+256)))& (0+255)
  6852  3091  0020               	movlb	0	; select bank0
  6853  3092  00EE               	movwf	??_vfprintf
  6854  3093  086E               	movf	??_vfprintf,w
  6855  3094  0021               	movlb	1	; select bank1
  6856  3095  00EE               	movwf	vfpfcnvrt@fmt^(0+128)
  6857  3096  0022               	movlb	2	; select bank2
  6858  3097  0852               	movf	vfprintf@ap^(0+256),w
  6859  3098  0020               	movlb	0	; select bank0
  6860  3099  00EF               	movwf	??_vfprintf+1
  6861  309A  086F               	movf	??_vfprintf+1,w
  6862  309B  0021               	movlb	1	; select bank1
  6863  309C  00EF               	movwf	vfpfcnvrt@ap^(0+128)
  6864  309D  3193  2301  31B0   	fcall	_vfpfcnvrt
  6865  30A0  0021               	movlb	1	; select bank1
  6866  30A1  086C               	movf	?_vfpfcnvrt^(0+128),w
  6867  30A2  0023               	movlb	3	; select bank3
  6868  30A3  07B2               	addwf	_nout^(0+384),f
  6869  30A4  0021               	movlb	1	; select bank1
  6870  30A5  086D               	movf	(?_vfpfcnvrt+1)^(0+128),w
  6871  30A6  0023               	movlb	3	; select bank3
  6872  30A7  3DB3               	addwfc	(_nout+1)^(0+384),f
  6873  30A8  2881               	goto	l8369
  6874  30A9                     l8371:	
  6875                           
  6876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  6877  30A9  0023               	movlb	3	; select bank3
  6878  30AA  0833               	movf	(_nout+1)^(0+384),w
  6879  30AB  0022               	movlb	2	; select bank2
  6880  30AC  00CF               	movwf	(?_vfprintf+1)^(0+256)
  6881  30AD  0023               	movlb	3	; select bank3
  6882  30AE  0832               	movf	_nout^(0+384),w
  6883  30AF  0022               	movlb	2	; select bank2
  6884  30B0  00CE               	movwf	?_vfprintf^(0+256)
  6885  30B1  0008               	return
  6886  30B2                     __end_of_vfprintf:	
  6887                           
  6888                           	psect	text9
  6889  1301                     __ptext9:	
  6890 ;; *************** function _vfpfcnvrt *****************
  6891 ;; Defined at:
  6892 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6893 ;; Parameters:    Size  Location     Type
  6894 ;;  fp              2   76[BANK1 ] PTR struct _IO_FILE
  6895 ;;		 -> vsnprintf@f(6), 
  6896 ;;  fmt             1   78[BANK1 ] PTR PTR unsigned char 
  6897 ;;		 -> vfprintf@cfmt(2), 
  6898 ;;  ap              1   79[BANK1 ] PTR PTR void 
  6899 ;;		 -> snprintf@ap(1), 
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;  llu             8   38[BANK2 ] unsigned long long 
  6902 ;;  ll              8   28[BANK2 ] long long 
  6903 ;;  f               4   24[BANK2 ] long long 
  6904 ;;  ct              3   21[BANK2 ] unsigned char [3]
  6905 ;;  done            2   13[BANK2 ] int 
  6906 ;;  i               2    0        int 
  6907 ;;  c               1   37[BANK2 ] unsigned char 
  6908 ;;  vp              1   36[BANK2 ] PTR void 
  6909 ;;		 -> ?_snprintf(2), adcGain(2), 
  6910 ;;  cp              1   12[BANK2 ] PTR unsigned char 
  6911 ;;		 -> ?_snprintf(2), adcGain(2), 
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  2   76[BANK1 ] int 
  6914 ;; Registers used:
  6915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6921 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6922 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6923 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6924 ;;      Totals:         0       0       4      46       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6925 ;;Total ram usage:       50 bytes
  6926 ;; Hardware stack levels used:    1
  6927 ;; Hardware stack levels required when called:    6
  6928 ;; This function calls:
  6929 ;;		_atoi
  6930 ;;		_ctoa
  6931 ;;		_dtoa
  6932 ;;		_efgtoa
  6933 ;;		_fputc
  6934 ;;		_isdigit
  6935 ;;		_isupper
  6936 ;;		_otoa
  6937 ;;		_stoa
  6938 ;;		_strncmp
  6939 ;;		_tolower
  6940 ;;		_utoa
  6941 ;;		_xtoa
  6942 ;; This function is called by:
  6943 ;;		_vfprintf
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           
  6948                           ;psect for function _vfpfcnvrt
  6949  1301                     _vfpfcnvrt:	
  6950                           
  6951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  6952                           
  6953                           ;incstack = 0
  6954                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6955  1301  0021               	movlb	1	; select bank1
  6956  1302  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  6957  1303  0086               	movwf	6
  6958  1304  3001               	movlw	1	; select bank2/3
  6959  1305  0087               	movwf	7
  6960  1306  3F40               	moviw [0]fsr1
  6961  1307  0022               	movlb	2	; select bank2
  6962  1308  00A0               	movwf	??_vfpfcnvrt^(0+256)
  6963  1309  3F41               	moviw [1]fsr1
  6964  130A  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  6965  130B  0820               	movf	??_vfpfcnvrt^(0+256),w
  6966  130C  0084               	movwf	4
  6967  130D  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  6968  130E  0085               	movwf	5
  6969  130F  0012               	moviw fsr0++
  6970  1310  3A25               	xorlw	37
  6971  1311  1D03               	btfss	3,2
  6972  1312  2D2B               	goto	L16
  6973                           
  6974                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  6975  1313  0021               	movlb	1	; select bank1
  6976  1314  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  6977  1315  0086               	movwf	6
  6978  1316  3001               	movlw	1	; select bank2/3
  6979  1317  0087               	movwf	7
  6980  1318  3001               	movlw	1
  6981  1319  0781               	addwf	1,f
  6982  131A  3141               	addfsr 1,1
  6983  131B  1803               	skipnc
  6984  131C  0A81               	incf	1,f
  6985                           
  6986                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  6987  131D  0023               	movlb	3	; select bank3
  6988  131E  01B4               	clrf	_width^(0+384)
  6989  131F  01B5               	clrf	(_width+1)^(0+384)
  6990  1320  01B8               	clrf	_flags^(0+384)
  6991  1321  01B9               	clrf	(_flags+1)^(0+384)
  6992                           
  6993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  6994  1322  30FF               	movlw	255
  6995  1323  00B6               	movwf	_prec^(0+384)
  6996  1324  30FF               	movlw	255
  6997  1325  00B7               	movwf	(_prec^(0+384)+1)
  6998                           
  6999                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  7000  1326  0022               	movlb	2	; select bank2
  7001  1327  01AD               	clrf	vfpfcnvrt@done^(0+256)
  7002  1328  01AE               	clrf	(vfpfcnvrt@done+1)^(0+256)
  7003                           
  7004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7005  1329  2B47               	goto	l7927
  7006  132A                     l843:	
  7007                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  7008                           
  7009                           
  7010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  7011  132A  0023               	movlb	3	; select bank3
  7012  132B  1438               	bsf	_flags^(0+384),0
  7013  132C                     l7911:	
  7014                           
  7015                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  7016  132C  0021               	movlb	1	; select bank1
  7017  132D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7018  132E  0086               	movwf	6
  7019  132F  3001               	movlw	1	; select bank2/3
  7020  1330  0087               	movwf	7
  7021  1331  3001               	movlw	1
  7022  1332  0781               	addwf	1,f
  7023  1333  3141               	addfsr 1,1
  7024  1334  1803               	skipnc
  7025  1335  0A81               	incf	1,f
  7026                           
  7027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  7028  1336  2B47               	goto	l7927
  7029  1337                     l845:	
  7030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  7031                           
  7032                           
  7033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  7034  1337  0023               	movlb	3	; select bank3
  7035  1338  14B8               	bsf	_flags^(0+384),1
  7036  1339  2B2C               	goto	l7911
  7037  133A                     l846:	
  7038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  7039                           
  7040                           
  7041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  7042  133A  0023               	movlb	3	; select bank3
  7043  133B  1538               	bsf	_flags^(0+384),2
  7044  133C  2B2C               	goto	l7911
  7045  133D                     l847:	
  7046                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  7047                           
  7048                           
  7049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  7050  133D  0023               	movlb	3	; select bank3
  7051  133E  15B8               	bsf	_flags^(0+384),3
  7052  133F  2B2C               	goto	l7911
  7053  1340                     l848:	
  7054                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  7055                           
  7056                           
  7057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  7058  1340  0023               	movlb	3	; select bank3
  7059  1341  1638               	bsf	_flags^(0+384),4
  7060  1342  2B2C               	goto	l7911
  7061  1343                     l7921:	
  7062                           
  7063                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  7064  1343  3001               	movlw	1
  7065  1344  00AD               	movwf	vfpfcnvrt@done^(0+256)
  7066  1345  3000               	movlw	0
  7067  1346  00AE               	movwf	(vfpfcnvrt@done^(0+256)+1)
  7068  1347                     l7927:	
  7069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  7070                           
  7071                           
  7072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  7073  1347  0022               	movlb	2	; select bank2
  7074  1348  082D               	movf	vfpfcnvrt@done^(0+256),w
  7075  1349  042E               	iorwf	(vfpfcnvrt@done+1)^(0+256),w
  7076  134A  1D03               	btfss	3,2
  7077  134B  2B74               	goto	l850
  7078  134C  0021               	movlb	1	; select bank1
  7079  134D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7080  134E  0086               	movwf	6
  7081  134F  3001               	movlw	1	; select bank2/3
  7082  1350  0087               	movwf	7
  7083  1351  3F40               	moviw [0]fsr1
  7084  1352  0022               	movlb	2	; select bank2
  7085  1353  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7086  1354  3F41               	moviw [1]fsr1
  7087  1355  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7088  1356  0820               	movf	??_vfpfcnvrt^(0+256),w
  7089  1357  0084               	movwf	4
  7090  1358  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7091  1359  0085               	movwf	5
  7092  135A  0800               	movf	0,w	;code access
  7093  135B  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7094  135C  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7095                           
  7096                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7097                           ; Switch size 1, requested type "simple"
  7098                           ; Number of cases is 1, Range of values is 0 to 0
  7099                           ; switch strategies available:
  7100                           ; Name         Instructions Cycles
  7101                           ; simple_byte            4     3 (average)
  7102                           ; direct_byte            8     6 (fixed)
  7103                           ; jumptable            260     6 (fixed)
  7104                           ;	Chosen strategy is simple_byte
  7105  135D  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7106  135E  3A00               	xorlw	0	; case 0
  7107  135F  1903               	skipnz
  7108  1360  2B62               	goto	l8873
  7109  1361  2B43               	goto	l7921
  7110  1362                     l8873:	
  7111                           
  7112                           ; Switch size 1, requested type "simple"
  7113                           ; Number of cases is 5, Range of values is 32 to 48
  7114                           ; switch strategies available:
  7115                           ; Name         Instructions Cycles
  7116                           ; simple_byte           16     9 (average)
  7117                           ; direct_byte           43     9 (fixed)
  7118                           ; jumptable            263     9 (fixed)
  7119                           ;	Chosen strategy is simple_byte
  7120  1362  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7121  1363  3A20               	xorlw	32	; case 32
  7122  1364  1903               	skipnz
  7123  1365  2B3D               	goto	l847
  7124  1366  3A03               	xorlw	3	; case 35
  7125  1367  1903               	skipnz
  7126  1368  2B40               	goto	l848
  7127  1369  3A08               	xorlw	8	; case 43
  7128  136A  1903               	skipnz
  7129  136B  2B3A               	goto	l846
  7130  136C  3A06               	xorlw	6	; case 45
  7131  136D  1903               	skipnz
  7132  136E  2B2A               	goto	l843
  7133  136F  3A1D               	xorlw	29	; case 48
  7134  1370  1903               	skipnz
  7135  1371  2B37               	goto	l845
  7136  1372  2B43               	goto	l7921
  7137  1373  2B47               	goto	l7927
  7138  1374                     l850:	
  7139                           
  7140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  7141  1374  0023               	movlb	3	; select bank3
  7142  1375  1C38               	btfss	_flags^(0+384),0
  7143  1376  2B7B               	goto	l7931
  7144                           
  7145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  7146  1377  30FD               	movlw	253
  7147  1378  05B8               	andwf	_flags^(0+384),f
  7148  1379  30FF               	movlw	255
  7149  137A  05B9               	andwf	(_flags+1)^(0+384),f
  7150  137B                     l7931:	
  7151                           
  7152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  7153  137B  0021               	movlb	1	; select bank1
  7154  137C  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7155  137D  0086               	movwf	6
  7156  137E  3001               	movlw	1	; select bank2/3
  7157  137F  0087               	movwf	7
  7158  1380  3F40               	moviw [0]fsr1
  7159  1381  0022               	movlb	2	; select bank2
  7160  1382  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7161  1383  3F41               	moviw [1]fsr1
  7162  1384  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7163  1385  0820               	movf	??_vfpfcnvrt^(0+256),w
  7164  1386  0084               	movwf	4
  7165  1387  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7166  1388  0085               	movwf	5
  7167  1389  0012               	moviw fsr0++
  7168  138A  3A2A               	xorlw	42
  7169  138B  1D03               	btfss	3,2
  7170  138C  2BAF               	goto	l7943
  7171                           
  7172                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  7173  138D  0021               	movlb	1	; select bank1
  7174  138E  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7175  138F  0086               	movwf	6
  7176  1390  3001               	movlw	1	; select bank2/3
  7177  1391  0087               	movwf	7
  7178  1392  3001               	movlw	1
  7179  1393  0781               	addwf	1,f
  7180  1394  3141               	addfsr 1,1
  7181  1395  1803               	skipnc
  7182  1396  0A81               	incf	1,f
  7183                           
  7184                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7185  1397  086F               	movf	vfpfcnvrt@ap^(0+128),w
  7186  1398  0086               	movwf	6
  7187  1399  3001               	movlw	1	; select bank2/3
  7188  139A  0087               	movwf	7
  7189  139B  0801               	movf	1,w
  7190  139C  0084               	movwf	4
  7191  139D  3001               	movlw	1	; select bank2/3
  7192  139E  0085               	movwf	5
  7193  139F  3002               	movlw	2
  7194  13A0  0781               	addwf	1,f
  7195  13A1  3F00               	moviw [0]fsr0
  7196  13A2  0023               	movlb	3	; select bank3
  7197  13A3  00B4               	movwf	_width^(0+384)
  7198  13A4  3F01               	moviw [1]fsr0
  7199  13A5  00B5               	movwf	(_width+1)^(0+384)
  7200                           
  7201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  7202  13A6  1FB5               	btfss	(_width+1)^(0+384),7
  7203  13A7  2BF4               	goto	l7953
  7204                           
  7205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  7206  13A8  1438               	bsf	_flags^(0+384),0
  7207                           
  7208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  7209  13A9  09B4               	comf	_width^(0+384),f
  7210  13AA  09B5               	comf	(_width+1)^(0+384),f
  7211  13AB  0AB4               	incf	_width^(0+384),f
  7212  13AC  1903               	skipnz
  7213  13AD  0AB5               	incf	(_width+1)^(0+384),f
  7214  13AE  2BF4               	goto	l7953
  7215  13AF                     l7943:	
  7216                           
  7217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  7218  13AF  0021               	movlb	1	; select bank1
  7219  13B0  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7220  13B1  0086               	movwf	6
  7221  13B2  3001               	movlw	1	; select bank2/3
  7222  13B3  0087               	movwf	7
  7223  13B4  3F40               	moviw [0]fsr1
  7224  13B5  00F7               	movwf	atoi@s
  7225  13B6  3F41               	moviw [1]fsr1
  7226  13B7  00F8               	movwf	atoi@s+1
  7227  13B8  31A9  21D5  3193   	fcall	_atoi
  7228  13BB  0878               	movf	?_atoi+1,w
  7229  13BC  0023               	movlb	3	; select bank3
  7230  13BD  00B5               	movwf	(_width+1)^(0+384)
  7231  13BE  0877               	movf	?_atoi,w
  7232  13BF  00B4               	movwf	_width^(0+384)
  7233                           
  7234                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7235  13C0  2BCB               	goto	l7947
  7236  13C1                     l7945:	
  7237                           
  7238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  7239  13C1  0021               	movlb	1	; select bank1
  7240  13C2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7241  13C3  0086               	movwf	6
  7242  13C4  3001               	movlw	1	; select bank2/3
  7243  13C5  0087               	movwf	7
  7244  13C6  3001               	movlw	1
  7245  13C7  0781               	addwf	1,f
  7246  13C8  3141               	addfsr 1,1
  7247  13C9  1803               	skipnc
  7248  13CA  0A81               	incf	1,f
  7249  13CB                     l7947:	
  7250  13CB  0021               	movlb	1	; select bank1
  7251  13CC  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7252  13CD  0086               	movwf	6
  7253  13CE  3001               	movlw	1	; select bank2/3
  7254  13CF  0087               	movwf	7
  7255  13D0  3F40               	moviw [0]fsr1
  7256  13D1  0022               	movlb	2	; select bank2
  7257  13D2  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7258  13D3  3F41               	moviw [1]fsr1
  7259  13D4  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7260  13D5  0820               	movf	??_vfpfcnvrt^(0+256),w
  7261  13D6  0084               	movwf	4
  7262  13D7  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7263  13D8  0085               	movwf	5
  7264  13D9  0800               	movf	0,w	;code access
  7265  13DA  3ED0               	addlw	208
  7266  13DB  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7267  13DC  30FF               	movlw	255
  7268  13DD  1803               	skipnc
  7269  13DE  3000               	movlw	0
  7270  13DF  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  7271  13E0  3000               	movlw	0
  7272  13E1  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  7273  13E2  300A               	movlw	10
  7274  13E3  1903               	skipnz
  7275  13E4  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  7276  13E5  1803               	btfsc	3,0
  7277  13E6  2BE9               	goto	u11100
  7278  13E7  3001               	movlw	1
  7279  13E8  2BEA               	goto	u11110
  7280  13E9                     u11100:	
  7281  13E9  3000               	movlw	0
  7282  13EA                     u11110:	
  7283  13EA  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7284  13EB  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  7285  13EC  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7286  13ED  00AF               	movwf	_vfpfcnvrt$1311^(0+256)
  7287  13EE  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  7288  13EF  00B0               	movwf	(_vfpfcnvrt$1311+1)^(0+256)
  7289  13F0  082F               	movf	_vfpfcnvrt$1311^(0+256),w
  7290  13F1  0430               	iorwf	(_vfpfcnvrt$1311+1)^(0+256),w
  7291  13F2  1D03               	btfss	3,2
  7292  13F3  2BC1               	goto	l7945
  7293  13F4                     l7953:	
  7294                           
  7295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  7296  13F4  0021               	movlb	1	; select bank1
  7297  13F5  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7298  13F6  0086               	movwf	6
  7299  13F7  3001               	movlw	1	; select bank2/3
  7300  13F8  0087               	movwf	7
  7301  13F9  3F40               	moviw [0]fsr1
  7302  13FA  0022               	movlb	2	; select bank2
  7303  13FB  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7304  13FC  3F41               	moviw [1]fsr1
  7305  13FD  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7306  13FE  0820               	movf	??_vfpfcnvrt^(0+256),w
  7307  13FF  0084               	movwf	4
  7308  1400  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7309  1401  0085               	movwf	5
  7310  1402  0012               	moviw fsr0++
  7311  1403  3A2E               	xorlw	46
  7312  1404  1D03               	btfss	3,2
  7313  1405  2C83               	goto	l7975
  7314                           
  7315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  7316  1406  0023               	movlb	3	; select bank3
  7317  1407  01B6               	clrf	_prec^(0+384)
  7318  1408  01B7               	clrf	(_prec+1)^(0+384)
  7319                           
  7320                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  7321  1409  0021               	movlb	1	; select bank1
  7322  140A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7323  140B  0086               	movwf	6
  7324  140C  3001               	movlw	1	; select bank2/3
  7325  140D  0087               	movwf	7
  7326  140E  3001               	movlw	1
  7327  140F  0781               	addwf	1,f
  7328  1410  3141               	addfsr 1,1
  7329  1411  1803               	skipnc
  7330  1412  0A81               	incf	1,f
  7331                           
  7332                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  7333  1413  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7334  1414  0086               	movwf	6
  7335  1415  3001               	movlw	1	; select bank2/3
  7336  1416  0087               	movwf	7
  7337  1417  3F40               	moviw [0]fsr1
  7338  1418  0022               	movlb	2	; select bank2
  7339  1419  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7340  141A  3F41               	moviw [1]fsr1
  7341  141B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7342  141C  0820               	movf	??_vfpfcnvrt^(0+256),w
  7343  141D  0084               	movwf	4
  7344  141E  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7345  141F  0085               	movwf	5
  7346  1420  0012               	moviw fsr0++
  7347  1421  3A2A               	xorlw	42
  7348  1422  1D03               	btfss	3,2
  7349  1423  2C3E               	goto	l7965
  7350                           
  7351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  7352  1424  0021               	movlb	1	; select bank1
  7353  1425  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7354  1426  0086               	movwf	6
  7355  1427  3001               	movlw	1	; select bank2/3
  7356  1428  0087               	movwf	7
  7357  1429  3001               	movlw	1
  7358  142A  0781               	addwf	1,f
  7359  142B  3141               	addfsr 1,1
  7360  142C  1803               	skipnc
  7361  142D  0A81               	incf	1,f
  7362                           
  7363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7364  142E  086F               	movf	vfpfcnvrt@ap^(0+128),w
  7365  142F  0086               	movwf	6
  7366  1430  3001               	movlw	1	; select bank2/3
  7367  1431  0087               	movwf	7
  7368  1432  0801               	movf	1,w
  7369  1433  0084               	movwf	4
  7370  1434  3001               	movlw	1	; select bank2/3
  7371  1435  0085               	movwf	5
  7372  1436  3002               	movlw	2
  7373  1437  0781               	addwf	1,f
  7374  1438  3F00               	moviw [0]fsr0
  7375  1439  0023               	movlb	3	; select bank3
  7376  143A  00B6               	movwf	_prec^(0+384)
  7377  143B  3F01               	moviw [1]fsr0
  7378  143C  00B7               	movwf	(_prec+1)^(0+384)
  7379                           
  7380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  7381  143D  2C83               	goto	l7975
  7382  143E                     l7965:	
  7383                           
  7384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  7385  143E  0021               	movlb	1	; select bank1
  7386  143F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7387  1440  0086               	movwf	6
  7388  1441  3001               	movlw	1	; select bank2/3
  7389  1442  0087               	movwf	7
  7390  1443  3F40               	moviw [0]fsr1
  7391  1444  00F7               	movwf	atoi@s
  7392  1445  3F41               	moviw [1]fsr1
  7393  1446  00F8               	movwf	atoi@s+1
  7394  1447  31A9  21D5  3193   	fcall	_atoi
  7395  144A  0878               	movf	?_atoi+1,w
  7396  144B  0023               	movlb	3	; select bank3
  7397  144C  00B7               	movwf	(_prec+1)^(0+384)
  7398  144D  0877               	movf	?_atoi,w
  7399  144E  00B6               	movwf	_prec^(0+384)
  7400                           
  7401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7402  144F  2C5A               	goto	l7969
  7403  1450                     l7967:	
  7404                           
  7405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  7406  1450  0021               	movlb	1	; select bank1
  7407  1451  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7408  1452  0086               	movwf	6
  7409  1453  3001               	movlw	1	; select bank2/3
  7410  1454  0087               	movwf	7
  7411  1455  3001               	movlw	1
  7412  1456  0781               	addwf	1,f
  7413  1457  3141               	addfsr 1,1
  7414  1458  1803               	skipnc
  7415  1459  0A81               	incf	1,f
  7416  145A                     l7969:	
  7417  145A  0021               	movlb	1	; select bank1
  7418  145B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7419  145C  0086               	movwf	6
  7420  145D  3001               	movlw	1	; select bank2/3
  7421  145E  0087               	movwf	7
  7422  145F  3F40               	moviw [0]fsr1
  7423  1460  0022               	movlb	2	; select bank2
  7424  1461  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7425  1462  3F41               	moviw [1]fsr1
  7426  1463  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7427  1464  0820               	movf	??_vfpfcnvrt^(0+256),w
  7428  1465  0084               	movwf	4
  7429  1466  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7430  1467  0085               	movwf	5
  7431  1468  0800               	movf	0,w	;code access
  7432  1469  3ED0               	addlw	208
  7433  146A  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7434  146B  30FF               	movlw	255
  7435  146C  1803               	skipnc
  7436  146D  3000               	movlw	0
  7437  146E  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
  7438  146F  3000               	movlw	0
  7439  1470  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
  7440  1471  300A               	movlw	10
  7441  1472  1903               	skipnz
  7442  1473  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
  7443  1474  1803               	btfsc	3,0
  7444  1475  2C78               	goto	u11150
  7445  1476  3001               	movlw	1
  7446  1477  2C79               	goto	u11160
  7447  1478                     u11150:	
  7448  1478  3000               	movlw	0
  7449  1479                     u11160:	
  7450  1479  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7451  147A  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
  7452  147B  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7453  147C  00B1               	movwf	_vfpfcnvrt$1312^(0+256)
  7454  147D  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
  7455  147E  00B2               	movwf	(_vfpfcnvrt$1312+1)^(0+256)
  7456  147F  0831               	movf	_vfpfcnvrt$1312^(0+256),w
  7457  1480  0432               	iorwf	(_vfpfcnvrt$1312+1)^(0+256),w
  7458  1481  1D03               	btfss	3,2
  7459  1482  2C50               	goto	l7967
  7460  1483                     l7975:	
  7461                           
  7462                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  7463  1483  0021               	movlb	1	; select bank1
  7464  1484  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7465  1485  0086               	movwf	6
  7466  1486  3001               	movlw	1	; select bank2/3
  7467  1487  0087               	movwf	7
  7468  1488  3F40               	moviw [0]fsr1
  7469  1489  0022               	movlb	2	; select bank2
  7470  148A  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7471  148B  3F41               	moviw [1]fsr1
  7472  148C  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7473  148D  0820               	movf	??_vfpfcnvrt^(0+256),w
  7474  148E  0084               	movwf	4
  7475  148F  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7476  1490  0085               	movwf	5
  7477  1491  0800               	movf	0,w	;code access
  7478  1492  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7479  1493  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7480  1494  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7481  1495  00F7               	movwf	tolower@c
  7482  1496  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7483  1497  00F8               	movwf	tolower@c+1
  7484  1498  31BF  2703  3193   	fcall	_tolower
  7485  149B  0877               	movf	?_tolower,w
  7486  149C  0022               	movlb	2	; select bank2
  7487  149D  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7488  149E  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7489  149F  00B5               	movwf	vfpfcnvrt@ct^(0+256)
  7490                           
  7491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  7492  14A0  0835               	movf	vfpfcnvrt@ct^(0+256),w
  7493  14A1  1903               	btfsc	3,2
  7494  14A2  2CE6               	goto	l7985
  7495                           
  7496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  7497  14A3  0021               	movlb	1	; select bank1
  7498  14A4  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7499  14A5  0086               	movwf	6
  7500  14A6  3001               	movlw	1	; select bank2/3
  7501  14A7  0087               	movwf	7
  7502  14A8  3F40               	moviw [0]fsr1
  7503  14A9  0022               	movlb	2	; select bank2
  7504  14AA  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7505  14AB  3F41               	moviw [1]fsr1
  7506  14AC  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7507  14AD  3001               	movlw	1
  7508  14AE  0720               	addwf	??_vfpfcnvrt^(0+256),w
  7509  14AF  0084               	movwf	4
  7510  14B0  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  7511  14B1  1803               	skipnc
  7512  14B2  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  7513  14B3  0085               	movwf	5
  7514  14B4  0800               	movf	0,w	;code access
  7515  14B5  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7516  14B6  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7517  14B7  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7518  14B8  00F7               	movwf	tolower@c
  7519  14B9  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7520  14BA  00F8               	movwf	tolower@c+1
  7521  14BB  31BF  2703  3193   	fcall	_tolower
  7522  14BE  0877               	movf	?_tolower,w
  7523  14BF  0022               	movlb	2	; select bank2
  7524  14C0  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7525  14C1  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7526  14C2  00B6               	movwf	(vfpfcnvrt@ct^(0+256)+1)
  7527                           
  7528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  7529  14C3  0836               	movf	(vfpfcnvrt@ct^(0+256)+1),w
  7530  14C4  1903               	btfsc	3,2
  7531  14C5  2CE6               	goto	l7985
  7532                           
  7533                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  7534  14C6  0021               	movlb	1	; select bank1
  7535  14C7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7536  14C8  0086               	movwf	6
  7537  14C9  3001               	movlw	1	; select bank2/3
  7538  14CA  0087               	movwf	7
  7539  14CB  3F40               	moviw [0]fsr1
  7540  14CC  0022               	movlb	2	; select bank2
  7541  14CD  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7542  14CE  3F41               	moviw [1]fsr1
  7543  14CF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7544  14D0  3002               	movlw	2
  7545  14D1  0720               	addwf	??_vfpfcnvrt^(0+256),w
  7546  14D2  0084               	movwf	4
  7547  14D3  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
  7548  14D4  1803               	skipnc
  7549  14D5  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
  7550  14D6  0085               	movwf	5
  7551  14D7  0800               	movf	0,w	;code access
  7552  14D8  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
  7553  14D9  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
  7554  14DA  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
  7555  14DB  00F7               	movwf	tolower@c
  7556  14DC  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
  7557  14DD  00F8               	movwf	tolower@c+1
  7558  14DE  31BF  2703  3193   	fcall	_tolower
  7559  14E1  0877               	movf	?_tolower,w
  7560  14E2  0022               	movlb	2	; select bank2
  7561  14E3  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
  7562  14E4  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
  7563  14E5  00B7               	movwf	(vfpfcnvrt@ct^(0+256)+2)
  7564  14E6                     l7985:	
  7565                           
  7566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  7567  14E6  0021               	movlb	1	; select bank1
  7568  14E7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7569  14E8  0086               	movwf	6
  7570  14E9  3001               	movlw	1	; select bank2/3
  7571  14EA  0087               	movwf	7
  7572  14EB  3F40               	moviw [0]fsr1
  7573  14EC  0022               	movlb	2	; select bank2
  7574  14ED  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7575  14EE  3F41               	moviw [1]fsr1
  7576  14EF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
  7577  14F0  0820               	movf	??_vfpfcnvrt^(0+256),w
  7578  14F1  0084               	movwf	4
  7579  14F2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
  7580  14F3  0085               	movwf	5
  7581  14F4  0012               	moviw fsr0++
  7582  14F5  3A63               	xorlw	99
  7583  14F6  31A8  1D03         	btfss	3,2
  7584  14F8  282E               	goto	l7995
  7585                           
  7586                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  7587  14F9  0021               	movlb	1	; select bank1
  7588  14FA  086E               	movf	vfpfcnvrt@fmt^(0+128),w
  7589  14FB  0086               	movwf	6
  7590  14FC  3001               	movlw	1	; select bank2/3
  7591  14FD  0087               	movwf	7
  7592  14FE  3001               	movlw	1
  7593  14FF  0781               	addwf	1,f
  7594  1500  3141               	addfsr 1,1
  7595  1501  1803               	skipnc
  7596  1502  0A81               	incf	1,f
  7597                           
  7598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7599  1503  086F               	movf	vfpfcnvrt@ap^(0+128),w
  7600  1504  0086               	movwf	6
  7601  1505  3001               	movlw	1	; select bank2/3
  7602  1506  0087               	movwf	7
  7603  1507  0801               	movf	1,w
  7604  1508  0084               	movwf	4
  7605  1509  3001               	movlw	1	; select bank2/3
  7606  150A  0085               	movwf	5
  7607  150B  3002               	movlw	2
  7608  150C  0781               	addwf	1,f
  7609  150D  0800               	movf	0,w
  7610  150E  0022               	movlb	2	; select bank2
  7611  150F  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7612  1510  0820               	movf	??_vfpfcnvrt^(0+256),w
  7613  1511  00C5               	movwf	vfpfcnvrt@c^(0+256)
  7614                           
  7615                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  7616  1512  0021               	movlb	1	; select bank1
  7617  1513  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
  7618  1514  0020               	movlb	0	; select bank0
  7619  1515  00B1               	movwf	ctoa@fp+1
  7620  1516  0021               	movlb	1	; select bank1
  7621  1517  086C               	movf	vfpfcnvrt@fp^(0+128),w
  7622  1518  0020               	movlb	0	; select bank0
  7623  1519  00B0               	movwf	ctoa@fp
  7624  151A  0022               	movlb	2	; select bank2
  7625  151B  0845               	movf	vfpfcnvrt@c^(0+256),w
  7626  151C  00A0               	movwf	??_vfpfcnvrt^(0+256)
  7627  151D  0820               	movf	??_vfpfcnvrt^(0+256),w
  7628  151E  0020               	movlb	0	; select bank0
  7629  151F  00B2               	movwf	ctoa@c
  7630  1520  31BF  276B         	fcall	_ctoa
  7631  1522  0020               	movlb	0	; select bank0
  7632  1523  0831               	movf	?_ctoa+1,w
  7633  1524  0021               	movlb	1	; select bank1
  7634  1525  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
  7635  1526  0020               	movlb	0	; select bank0
  7636  1527  0830               	movf	?_ctoa,w
  7637  1528  0021               	movlb	1	; select bank1
  7638  1529  00EC               	movwf	?_vfpfcnvrt^(0+128)
  7639  152A  0008               	return
  7640  152B                     L16:	
  7641  152B                     L15:	
  7642  152B  318F  2FD8         	ljmp	l8351
  7643                           
  7644                           	psect	text10
  7645  195A                     __ptext10:	
  7646 ;; *************** function _xtoa *****************
  7647 ;; Defined at:
  7648 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7651 ;;		 -> vsnprintf@f(6), 
  7652 ;;  d               8   18[BANK0 ] unsigned long long 
  7653 ;;  x               1   26[BANK0 ] unsigned char 
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;  n               8   43[BANK0 ] unsigned long long 
  7656 ;;  c               2   53[BANK0 ] int 
  7657 ;;  i               2   51[BANK0 ] int 
  7658 ;;  w               2   41[BANK0 ] int 
  7659 ;;  p               2   39[BANK0 ] int 
  7660 ;; Return value:  Size  Location     Type
  7661 ;;                  2   16[BANK0 ] int 
  7662 ;; Registers used:
  7663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7669 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7670 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7671 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7672 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7673 ;;Total ram usage:       39 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; Hardware stack levels required when called:    5
  7676 ;; This function calls:
  7677 ;;		_isalpha
  7678 ;;		_isupper
  7679 ;;		_pad
  7680 ;;		_toupper
  7681 ;; This function is called by:
  7682 ;;		_vfpfcnvrt
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           
  7687                           ;psect for function _xtoa
  7688  195A                     _xtoa:	
  7689                           
  7690                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  7691                           
  7692                           ;incstack = 0
  7693                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7694  195A  0023               	movlb	3	; select bank3
  7695  195B  1BB7               	btfsc	(_prec+1)^(0+384),7
  7696  195C  2961               	goto	l809
  7697                           
  7698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  7699  195D  30FD               	movlw	253
  7700  195E  05B8               	andwf	_flags^(0+384),f
  7701  195F  30FF               	movlw	255
  7702  1960  05B9               	andwf	(_flags+1)^(0+384),f
  7703  1961                     l809:	
  7704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  7705                           
  7706                           
  7707                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  7708  1961  0837               	movf	(_prec+1)^(0+384),w
  7709  1962  3A80               	xorlw	128
  7710  1963  0020               	movlb	0	; select bank0
  7711  1964  00BB               	movwf	??_xtoa
  7712  1965  3080               	movlw	128
  7713  1966  023B               	subwf	??_xtoa,w
  7714  1967  1D03               	skipz
  7715  1968  296C               	goto	u10825
  7716  1969  3001               	movlw	1
  7717  196A  0023               	movlb	3	; select bank3
  7718  196B  0236               	subwf	_prec^(0+384),w
  7719  196C                     u10825:	
  7720  196C  1803               	skipnc
  7721  196D  2974               	goto	l7797
  7722  196E  3001               	movlw	1
  7723  196F  0020               	movlb	0	; select bank0
  7724  1970  00C7               	movwf	xtoa@p
  7725  1971  3000               	movlw	0
  7726  1972  00C8               	movwf	xtoa@p+1
  7727  1973  297C               	goto	l813
  7728  1974                     l7797:	
  7729  1974  0023               	movlb	3	; select bank3
  7730  1975  0837               	movf	(_prec+1)^(0+384),w
  7731  1976  0020               	movlb	0	; select bank0
  7732  1977  00C8               	movwf	xtoa@p+1
  7733  1978  0023               	movlb	3	; select bank3
  7734  1979  0836               	movf	_prec^(0+384),w
  7735  197A  0020               	movlb	0	; select bank0
  7736  197B  00C7               	movwf	xtoa@p
  7737  197C                     l813:	
  7738                           
  7739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  7740  197C  0023               	movlb	3	; select bank3
  7741  197D  0835               	movf	(_width+1)^(0+384),w
  7742  197E  0020               	movlb	0	; select bank0
  7743  197F  00CA               	movwf	xtoa@w+1
  7744  1980  0023               	movlb	3	; select bank3
  7745  1981  0834               	movf	_width^(0+384),w
  7746  1982  0020               	movlb	0	; select bank0
  7747  1983  00C9               	movwf	xtoa@w
  7748                           
  7749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  7750  1984  0023               	movlb	3	; select bank3
  7751  1985  1E38               	btfss	_flags^(0+384),4
  7752  1986  298C               	goto	l7803
  7753                           
  7754                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  7755  1987  30FE               	movlw	254
  7756  1988  0020               	movlb	0	; select bank0
  7757  1989  07C9               	addwf	xtoa@w,f
  7758  198A  30FF               	movlw	255
  7759  198B  3DCA               	addwfc	xtoa@w+1,f
  7760  198C                     l7803:	
  7761                           
  7762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  7763  198C  0020               	movlb	0	; select bank0
  7764  198D  0832               	movf	xtoa@d,w
  7765  198E  00CB               	movwf	xtoa@n
  7766  198F  0833               	movf	xtoa@d+1,w
  7767  1990  00CC               	movwf	xtoa@n+1
  7768  1991  0834               	movf	xtoa@d+2,w
  7769  1992  00CD               	movwf	xtoa@n+2
  7770  1993  0835               	movf	xtoa@d+3,w
  7771  1994  00CE               	movwf	xtoa@n+3
  7772  1995  0836               	movf	xtoa@d+4,w
  7773  1996  00CF               	movwf	xtoa@n+4
  7774  1997  0837               	movf	xtoa@d+5,w
  7775  1998  00D0               	movwf	xtoa@n+5
  7776  1999  0838               	movf	xtoa@d+6,w
  7777  199A  00D1               	movwf	xtoa@n+6
  7778  199B  0839               	movf	xtoa@d+7,w
  7779  199C  00D2               	movwf	xtoa@n+7
  7780                           
  7781                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  7782  199D  304F               	movlw	79
  7783  199E  00D3               	movwf	xtoa@i
  7784  199F  3000               	movlw	0
  7785  19A0  00D4               	movwf	xtoa@i+1
  7786                           
  7787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  7788  19A1  0025               	movlb	5	; select bank5
  7789  19A2  01EF               	clrf	(_dbuf^(0+640)+79)
  7790                           
  7791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7792  19A3  2A4E               	goto	l7835
  7793  19A4                     l7807:	
  7794                           
  7795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  7796  19A4  30FF               	movlw	255
  7797  19A5  0020               	movlb	0	; select bank0
  7798  19A6  07D3               	addwf	xtoa@i,f
  7799  19A7  30FF               	movlw	255
  7800  19A8  3DD4               	addwfc	xtoa@i+1,f
  7801                           
  7802                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  7803  19A9  300F               	movlw	15
  7804  19AA  054B               	andwf	xtoa@n,w
  7805  19AB  00D5               	movwf	xtoa@c
  7806  19AC  3000               	movlw	0
  7807  19AD  054C               	andwf	xtoa@n+1,w
  7808  19AE  00D6               	movwf	xtoa@c+1
  7809                           
  7810                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  7811  19AF  0856               	movf	xtoa@c+1,w
  7812  19B0  3A80               	xorlw	128
  7813  19B1  00BB               	movwf	??_xtoa
  7814  19B2  3080               	movlw	128
  7815  19B3  023B               	subwf	??_xtoa,w
  7816  19B4  1D03               	skipz
  7817  19B5  29B8               	goto	u10845
  7818  19B6  300A               	movlw	10
  7819  19B7  0255               	subwf	xtoa@c,w
  7820  19B8                     u10845:	
  7821  19B8  1C03               	skipc
  7822  19B9  29BE               	goto	l7811
  7823  19BA  0020               	movlb	0	; select bank0
  7824  19BB  0855               	movf	xtoa@c,w
  7825  19BC  3E57               	addlw	87
  7826  19BD  29C1               	goto	L2
  7827  19BE                     l7811:	
  7828  19BE  0020               	movlb	0	; select bank0
  7829  19BF  0855               	movf	xtoa@c,w
  7830  19C0  3E30               	addlw	48
  7831  19C1                     L2:	
  7832  19C1  00D5               	movwf	xtoa@c
  7833  19C2  3000               	movlw	0
  7834  19C3  3D56               	addwfc	xtoa@c+1,w
  7835  19C4  00D6               	movwf	xtoa@c+1
  7836  19C5  083A               	movf	xtoa@x,w
  7837  19C6  3EBF               	addlw	191
  7838  19C7  00BB               	movwf	??_xtoa
  7839  19C8  30FF               	movlw	255
  7840  19C9  1803               	skipnc
  7841  19CA  3000               	movlw	0
  7842  19CB  00BC               	movwf	??_xtoa+1
  7843  19CC  3000               	movlw	0
  7844  19CD  023C               	subwf	??_xtoa+1,w
  7845  19CE  301A               	movlw	26
  7846  19CF  1903               	skipnz
  7847  19D0  023B               	subwf	??_xtoa,w
  7848  19D1  1803               	btfsc	3,0
  7849  19D2  29D5               	goto	u10850
  7850  19D3  3001               	movlw	1
  7851  19D4  29D6               	goto	u10860
  7852  19D5                     u10850:	
  7853  19D5  3000               	movlw	0
  7854  19D6                     u10860:	
  7855  19D6  00BD               	movwf	??_xtoa+2
  7856  19D7  01BE               	clrf	??_xtoa+3
  7857  19D8  083D               	movf	??_xtoa+2,w
  7858  19D9  00C3               	movwf	_xtoa$1296
  7859  19DA  083E               	movf	??_xtoa+3,w
  7860  19DB  00C4               	movwf	_xtoa$1296+1
  7861  19DC  0843               	movf	_xtoa$1296,w
  7862  19DD  0444               	iorwf	_xtoa$1296+1,w
  7863  19DE  1903               	btfsc	3,2
  7864  19DF  2A0C               	goto	l7827
  7865  19E0  3020               	movlw	32
  7866  19E1  0455               	iorwf	xtoa@c,w
  7867  19E2  00BB               	movwf	??_xtoa
  7868  19E3  3000               	movlw	0
  7869  19E4  0456               	iorwf	xtoa@c+1,w
  7870  19E5  00BC               	movwf	??_xtoa+1
  7871  19E6  083B               	movf	??_xtoa,w
  7872  19E7  3E9F               	addlw	159
  7873  19E8  00BD               	movwf	??_xtoa+2
  7874  19E9  30FF               	movlw	255
  7875  19EA  3D3C               	addwfc	??_xtoa+1,w
  7876  19EB  00BE               	movwf	??_xtoa+3
  7877  19EC  3000               	movlw	0
  7878  19ED  023E               	subwf	??_xtoa+3,w
  7879  19EE  301A               	movlw	26
  7880  19EF  1903               	skipnz
  7881  19F0  023D               	subwf	??_xtoa+2,w
  7882  19F1  1803               	btfsc	3,0
  7883  19F2  29F5               	goto	u10880
  7884  19F3  3001               	movlw	1
  7885  19F4  29F6               	goto	u10890
  7886  19F5                     u10880:	
  7887  19F5  3000               	movlw	0
  7888  19F6                     u10890:	
  7889  19F6  00BF               	movwf	??_xtoa+4
  7890  19F7  01C0               	clrf	??_xtoa+5
  7891  19F8  083F               	movf	??_xtoa+4,w
  7892  19F9  00C5               	movwf	_xtoa$1297
  7893  19FA  0840               	movf	??_xtoa+5,w
  7894  19FB  00C6               	movwf	_xtoa$1297+1
  7895  19FC  0845               	movf	_xtoa$1297,w
  7896  19FD  0446               	iorwf	_xtoa$1297+1,w
  7897  19FE  1903               	btfsc	3,2
  7898  19FF  2A0C               	goto	l7827
  7899                           
  7900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  7901  1A00  0856               	movf	xtoa@c+1,w
  7902  1A01  00F8               	movwf	toupper@c+1
  7903  1A02  0855               	movf	xtoa@c,w
  7904  1A03  00F7               	movwf	toupper@c
  7905  1A04  31BF  2725  3199   	fcall	_toupper
  7906  1A07  0878               	movf	?_toupper+1,w
  7907  1A08  0020               	movlb	0	; select bank0
  7908  1A09  00D6               	movwf	xtoa@c+1
  7909  1A0A  0877               	movf	?_toupper,w
  7910  1A0B  00D5               	movwf	xtoa@c
  7911  1A0C                     l7827:	
  7912                           
  7913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  7914  1A0C  0855               	movf	xtoa@c,w
  7915  1A0D  00BB               	movwf	??_xtoa
  7916  1A0E  0853               	movf	xtoa@i,w
  7917  1A0F  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7918  1A10  0086               	movwf	6
  7919  1A11  3002               	movlw	2	; select bank5/6
  7920  1A12  0087               	movwf	7
  7921  1A13  083B               	movf	??_xtoa,w
  7922  1A14  0081               	movwf	1
  7923                           
  7924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  7925  1A15  30FF               	movlw	255
  7926  1A16  07C7               	addwf	xtoa@p,f
  7927  1A17  30FF               	movlw	255
  7928  1A18  3DC8               	addwfc	xtoa@p+1,f
  7929                           
  7930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  7931  1A19  30FF               	movlw	255
  7932  1A1A  07C9               	addwf	xtoa@w,f
  7933  1A1B  30FF               	movlw	255
  7934  1A1C  3DCA               	addwfc	xtoa@w+1,f
  7935                           
  7936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  7937  1A1D  304B               	movlw	low xtoa@n
  7938  1A1E  0086               	movwf	6
  7939  1A1F  3000               	movlw	high xtoa@n
  7940  1A20  0087               	movwf	7
  7941  1A21  3F40               	moviw [0]fsr1
  7942  1A22  00BB               	movwf	??_xtoa
  7943  1A23  3F41               	moviw [1]fsr1
  7944  1A24  00BC               	movwf	??_xtoa+1
  7945  1A25  3F42               	moviw [2]fsr1
  7946  1A26  00BD               	movwf	??_xtoa+2
  7947  1A27  3F43               	moviw [3]fsr1
  7948  1A28  00BE               	movwf	??_xtoa+3
  7949  1A29  3F44               	moviw [4]fsr1
  7950  1A2A  00BF               	movwf	??_xtoa+4
  7951  1A2B  3F45               	moviw [5]fsr1
  7952  1A2C  00C0               	movwf	??_xtoa+5
  7953  1A2D  3F46               	moviw [6]fsr1
  7954  1A2E  00C1               	movwf	??_xtoa+6
  7955  1A2F  3F47               	moviw [7]fsr1
  7956  1A30  00C2               	movwf	??_xtoa+7
  7957  1A31  3004               	movlw	4
  7958  1A32                     u10915:	
  7959  1A32  0020               	movlb	0	; select bank0
  7960  1A33  36C2               	lsrf	??_xtoa+7,f
  7961  1A34  0CC1               	rrf	??_xtoa+6,f
  7962  1A35  0CC0               	rrf	??_xtoa+5,f
  7963  1A36  0CBF               	rrf	??_xtoa+4,f
  7964  1A37  0CBE               	rrf	??_xtoa+3,f
  7965  1A38  0CBD               	rrf	??_xtoa+2,f
  7966  1A39  0CBC               	rrf	??_xtoa+1,f
  7967  1A3A  0CBB               	rrf	??_xtoa,f
  7968  1A3B  0B89               	decfsz	9,f
  7969  1A3C  2A32               	goto	u10915
  7970  1A3D  0020               	movlb	0	; select bank0
  7971  1A3E  0842               	movf	??_xtoa+7,w
  7972  1A3F  00D2               	movwf	xtoa@n+7
  7973  1A40  0841               	movf	??_xtoa+6,w
  7974  1A41  00D1               	movwf	xtoa@n+6
  7975  1A42  0840               	movf	??_xtoa+5,w
  7976  1A43  00D0               	movwf	xtoa@n+5
  7977  1A44  083F               	movf	??_xtoa+4,w
  7978  1A45  00CF               	movwf	xtoa@n+4
  7979  1A46  083E               	movf	??_xtoa+3,w
  7980  1A47  00CE               	movwf	xtoa@n+3
  7981  1A48  083D               	movf	??_xtoa+2,w
  7982  1A49  00CD               	movwf	xtoa@n+2
  7983  1A4A  083C               	movf	??_xtoa+1,w
  7984  1A4B  00CC               	movwf	xtoa@n+1
  7985  1A4C  083B               	movf	??_xtoa,w
  7986  1A4D  00CB               	movwf	xtoa@n
  7987  1A4E                     l7835:	
  7988                           
  7989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7990  1A4E  0020               	movlb	0	; select bank0
  7991  1A4F  0854               	movf	xtoa@i+1,w
  7992  1A50  3A80               	xorlw	128
  7993  1A51  00BB               	movwf	??_xtoa
  7994  1A52  3080               	movlw	128
  7995  1A53  023B               	subwf	??_xtoa,w
  7996  1A54  1D03               	skipz
  7997  1A55  2A58               	goto	u10925
  7998  1A56  3002               	movlw	2
  7999  1A57  0253               	subwf	xtoa@i,w
  8000  1A58                     u10925:	
  8001  1A58  1C03               	skipc
  8002  1A59  2A7F               	goto	l834
  8003  1A5A  0020               	movlb	0	; select bank0
  8004  1A5B  084B               	movf	xtoa@n,w
  8005  1A5C  044C               	iorwf	xtoa@n+1,w
  8006  1A5D  044D               	iorwf	xtoa@n+2,w
  8007  1A5E  044E               	iorwf	xtoa@n+3,w
  8008  1A5F  044F               	iorwf	xtoa@n+4,w
  8009  1A60  0450               	iorwf	xtoa@n+5,w
  8010  1A61  0451               	iorwf	xtoa@n+6,w
  8011  1A62  0452               	iorwf	xtoa@n+7,w
  8012  1A63  1D03               	skipz
  8013  1A64  29A4               	goto	l7807
  8014  1A65  0848               	movf	xtoa@p+1,w
  8015  1A66  3A80               	xorlw	128
  8016  1A67  00BB               	movwf	??_xtoa
  8017  1A68  3080               	movlw	128
  8018  1A69  023B               	subwf	??_xtoa,w
  8019  1A6A  1D03               	skipz
  8020  1A6B  2A6E               	goto	u10945
  8021  1A6C  3001               	movlw	1
  8022  1A6D  0247               	subwf	xtoa@p,w
  8023  1A6E                     u10945:	
  8024  1A6E  1803               	skipnc
  8025  1A6F  29A4               	goto	l7807
  8026  1A70  0020               	movlb	0	; select bank0
  8027  1A71  084A               	movf	xtoa@w+1,w
  8028  1A72  3A80               	xorlw	128
  8029  1A73  00BB               	movwf	??_xtoa
  8030  1A74  3080               	movlw	128
  8031  1A75  023B               	subwf	??_xtoa,w
  8032  1A76  1D03               	skipz
  8033  1A77  2A7A               	goto	u10955
  8034  1A78  3001               	movlw	1
  8035  1A79  0249               	subwf	xtoa@w,w
  8036  1A7A                     u10955:	
  8037  1A7A  1C03               	skipc
  8038  1A7B  2A7F               	goto	l834
  8039  1A7C  0023               	movlb	3	; select bank3
  8040  1A7D  18B8               	btfsc	_flags^(0+384),1
  8041  1A7E  29A4               	goto	l7807
  8042  1A7F                     l834:	
  8043                           
  8044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  8045  1A7F  0023               	movlb	3	; select bank3
  8046  1A80  1E38               	btfss	_flags^(0+384),4
  8047  1A81  2A9D               	goto	l7851
  8048                           
  8049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  8050  1A82  30FF               	movlw	255
  8051  1A83  0020               	movlb	0	; select bank0
  8052  1A84  07D3               	addwf	xtoa@i,f
  8053  1A85  30FF               	movlw	255
  8054  1A86  3DD4               	addwfc	xtoa@i+1,f
  8055                           
  8056                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  8057  1A87  083A               	movf	xtoa@x,w
  8058  1A88  00BB               	movwf	??_xtoa
  8059  1A89  0853               	movf	xtoa@i,w
  8060  1A8A  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8061  1A8B  0086               	movwf	6
  8062  1A8C  3002               	movlw	2	; select bank5/6
  8063  1A8D  0087               	movwf	7
  8064  1A8E  083B               	movf	??_xtoa,w
  8065  1A8F  0081               	movwf	1
  8066                           
  8067                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  8068  1A90  30FF               	movlw	255
  8069  1A91  07D3               	addwf	xtoa@i,f
  8070  1A92  30FF               	movlw	255
  8071  1A93  3DD4               	addwfc	xtoa@i+1,f
  8072                           
  8073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  8074  1A94  3030               	movlw	48
  8075  1A95  00BB               	movwf	??_xtoa
  8076  1A96  0853               	movf	xtoa@i,w
  8077  1A97  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8078  1A98  0086               	movwf	6
  8079  1A99  3002               	movlw	2	; select bank5/6
  8080  1A9A  0087               	movwf	7
  8081  1A9B  083B               	movf	??_xtoa,w
  8082  1A9C  0081               	movwf	1
  8083  1A9D                     l7851:	
  8084                           
  8085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  8086  1A9D  0020               	movlb	0	; select bank0
  8087  1A9E  0831               	movf	xtoa@fp+1,w
  8088  1A9F  00A7               	movwf	pad@fp+1
  8089  1AA0  0830               	movf	xtoa@fp,w
  8090  1AA1  00A6               	movwf	pad@fp
  8091  1AA2  0853               	movf	xtoa@i,w
  8092  1AA3  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8093  1AA4  00BB               	movwf	??_xtoa
  8094  1AA5  083B               	movf	??_xtoa,w
  8095  1AA6  00A8               	movwf	pad@buf
  8096  1AA7  084A               	movf	xtoa@w+1,w
  8097  1AA8  00AA               	movwf	pad@p+1
  8098  1AA9  0849               	movf	xtoa@w,w
  8099  1AAA  00A9               	movwf	pad@p
  8100  1AAB  31B2  2202         	fcall	_pad
  8101  1AAD  0020               	movlb	0	; select bank0
  8102  1AAE  0827               	movf	?_pad+1,w
  8103  1AAF  00B1               	movwf	?_xtoa+1
  8104  1AB0  0826               	movf	?_pad,w
  8105  1AB1  00B0               	movwf	?_xtoa
  8106  1AB2  0008               	return
  8107  1AB3                     __end_of_xtoa:	
  8108                           
  8109                           	psect	text11
  8110  3F25                     __ptext11:	
  8111 ;; *************** function _toupper *****************
  8112 ;; Defined at:
  8113 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;  c               2    7[COMMON] int 
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;		None
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  2    7[COMMON] int 
  8120 ;; Registers used:
  8121 ;;		wreg, status,2, status,0
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8129 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8130 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8131 ;;Total ram usage:        8 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; Hardware stack levels required when called:    2
  8134 ;; This function calls:
  8135 ;;		_islower
  8136 ;; This function is called by:
  8137 ;;		_xtoa
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           
  8142                           ;psect for function _toupper
  8143  3F25                     _toupper:	
  8144                           
  8145                           ;incstack = 0
  8146                           ; Regs used in _toupper: [wreg+status,2+status,0]
  8147  3F25  0877               	movf	toupper@c,w
  8148  3F26  3E9F               	addlw	159
  8149  3F27  0020               	movlb	0	; select bank0
  8150  3F28  00A0               	movwf	??_toupper
  8151  3F29  30FF               	movlw	255
  8152  3F2A  3D78               	addwfc	toupper@c+1,w
  8153  3F2B  00A1               	movwf	??_toupper+1
  8154  3F2C  3000               	movlw	0
  8155  3F2D  0221               	subwf	??_toupper+1,w
  8156  3F2E  301A               	movlw	26
  8157  3F2F  1903               	skipnz
  8158  3F30  0220               	subwf	??_toupper,w
  8159  3F31  1803               	btfsc	3,0
  8160  3F32  2F35               	goto	u9800
  8161  3F33  3001               	movlw	1
  8162  3F34  2F36               	goto	u9810
  8163  3F35                     u9800:	
  8164  3F35  3000               	movlw	0
  8165  3F36                     u9810:	
  8166  3F36  00A2               	movwf	??_toupper+2
  8167  3F37  01A3               	clrf	??_toupper+3
  8168  3F38  0822               	movf	??_toupper+2,w
  8169  3F39  00F9               	movwf	_toupper$1903
  8170  3F3A  0823               	movf	??_toupper+3,w
  8171  3F3B  00FA               	movwf	_toupper$1903+1
  8172  3F3C  0879               	movf	_toupper$1903,w
  8173  3F3D  047A               	iorwf	_toupper$1903+1,w
  8174  3F3E  1903               	btfsc	3,2
  8175  3F3F  0008               	return
  8176  3F40  305F               	movlw	95
  8177  3F41  0577               	andwf	toupper@c,w
  8178  3F42  00F7               	movwf	?_toupper
  8179  3F43  3000               	movlw	0
  8180  3F44  0578               	andwf	toupper@c+1,w
  8181  3F45  00F8               	movwf	?_toupper+1
  8182  3F46  0008               	return
  8183  3F47                     __end_of_toupper:	
  8184                           
  8185                           	psect	text12
  8186  07E9                     __ptext12:	
  8187 ;; *************** function _islower *****************
  8188 ;; Defined at:
  8189 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  c               2    1[COMMON] int 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;		None
  8194 ;; Return value:  Size  Location     Type
  8195 ;;                  2    1[COMMON] int 
  8196 ;; Registers used:
  8197 ;;		wreg, status,2, status,0
  8198 ;; Tracked objects:
  8199 ;;		On entry : 0/0
  8200 ;;		On exit  : 0/0
  8201 ;;		Unchanged: 0/0
  8202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8205 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8206 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8207 ;;Total ram usage:        6 bytes
  8208 ;; Hardware stack levels used:    1
  8209 ;; Hardware stack levels required when called:    1
  8210 ;; This function calls:
  8211 ;;		Nothing
  8212 ;; This function is called by:
  8213 ;;		_toupper
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           
  8218                           ;psect for function _islower
  8219  07E9                     _islower:	
  8220                           
  8221                           ;incstack = 0
  8222                           ; Regs used in _islower: [wreg+status,2+status,0]
  8223  07E9  0871               	movf	islower@c,w
  8224  07EA  3E9F               	addlw	159
  8225  07EB  00F3               	movwf	??_islower
  8226  07EC  30FF               	movlw	255
  8227  07ED  3D72               	addwfc	islower@c+1,w
  8228  07EE  00F4               	movwf	??_islower+1
  8229  07EF  3000               	movlw	0
  8230  07F0  0274               	subwf	??_islower+1,w
  8231  07F1  301A               	movlw	26
  8232  07F2  1903               	skipnz
  8233  07F3  0273               	subwf	??_islower,w
  8234  07F4  1803               	btfsc	3,0
  8235  07F5  2FF8               	goto	u9710
  8236  07F6  3001               	movlw	1
  8237  07F7  2FF9               	goto	u9720
  8238  07F8                     u9710:	
  8239  07F8  3000               	movlw	0
  8240  07F9                     u9720:	
  8241  07F9  00F5               	movwf	??_islower+2
  8242  07FA  01F6               	clrf	??_islower+3
  8243  07FB  0875               	movf	??_islower+2,w
  8244  07FC  00F1               	movwf	?_islower
  8245  07FD  0876               	movf	??_islower+3,w
  8246  07FE  00F2               	movwf	?_islower+1
  8247  07FF  0008               	return
  8248  0800                     __end_of_islower:	
  8249                           
  8250                           	psect	text13
  8251  3E47                     __ptext13:	
  8252 ;; *************** function _isalpha *****************
  8253 ;; Defined at:
  8254 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  c               2    1[COMMON] int 
  8257 ;; Auto vars:     Size  Location     Type
  8258 ;;		None
  8259 ;; Return value:  Size  Location     Type
  8260 ;;                  2    1[COMMON] int 
  8261 ;; Registers used:
  8262 ;;		wreg, status,2, status,0
  8263 ;; Tracked objects:
  8264 ;;		On entry : 0/0
  8265 ;;		On exit  : 0/0
  8266 ;;		Unchanged: 0/0
  8267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8270 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8271 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8272 ;;Total ram usage:        8 bytes
  8273 ;; Hardware stack levels used:    1
  8274 ;; Hardware stack levels required when called:    1
  8275 ;; This function calls:
  8276 ;;		Nothing
  8277 ;; This function is called by:
  8278 ;;		_xtoa
  8279 ;; This function uses a non-reentrant model
  8280 ;;
  8281                           
  8282                           
  8283                           ;psect for function _isalpha
  8284  3E47                     _isalpha:	
  8285                           
  8286                           ;incstack = 0
  8287                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  8288  3E47  3020               	movlw	32
  8289  3E48  0471               	iorwf	isalpha@c,w
  8290  3E49  00F3               	movwf	??_isalpha
  8291  3E4A  3000               	movlw	0
  8292  3E4B  0472               	iorwf	isalpha@c+1,w
  8293  3E4C  00F4               	movwf	??_isalpha+1
  8294  3E4D  0873               	movf	??_isalpha,w
  8295  3E4E  3E9F               	addlw	159
  8296  3E4F  00F5               	movwf	??_isalpha+2
  8297  3E50  30FF               	movlw	255
  8298  3E51  3D74               	addwfc	??_isalpha+1,w
  8299  3E52  00F6               	movwf	??_isalpha+3
  8300  3E53  3000               	movlw	0
  8301  3E54  0276               	subwf	??_isalpha+3,w
  8302  3E55  301A               	movlw	26
  8303  3E56  1903               	skipnz
  8304  3E57  0275               	subwf	??_isalpha+2,w
  8305  3E58  1803               	btfsc	3,0
  8306  3E59  2E5C               	goto	u5710
  8307  3E5A  3001               	movlw	1
  8308  3E5B  2E5D               	goto	u5720
  8309  3E5C                     u5710:	
  8310  3E5C  3000               	movlw	0
  8311  3E5D                     u5720:	
  8312  3E5D  00F7               	movwf	??_isalpha+4
  8313  3E5E  01F8               	clrf	??_isalpha+5
  8314  3E5F  0877               	movf	??_isalpha+4,w
  8315  3E60  00F1               	movwf	?_isalpha
  8316  3E61  0878               	movf	??_isalpha+5,w
  8317  3E62  00F2               	movwf	?_isalpha+1
  8318  3E63  0008               	return
  8319  3E64                     __end_of_isalpha:	
  8320                           
  8321                           	psect	text14
  8322  2F1F                     __ptext14:	
  8323 ;; *************** function _utoa *****************
  8324 ;; Defined at:
  8325 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8326 ;; Parameters:    Size  Location     Type
  8327 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8328 ;;		 -> vsnprintf@f(6), 
  8329 ;;  d               8   18[BANK0 ] unsigned long long 
  8330 ;; Auto vars:     Size  Location     Type
  8331 ;;  n               8   31[BANK0 ] unsigned long long 
  8332 ;;  i               2   39[BANK0 ] int 
  8333 ;;  w               2   29[BANK0 ] int 
  8334 ;;  p               2   27[BANK0 ] int 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  2   16[BANK0 ] int 
  8337 ;; Registers used:
  8338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8344 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8345 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8346 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8347 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8348 ;;Total ram usage:       25 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:    5
  8351 ;; This function calls:
  8352 ;;		___lodiv
  8353 ;;		___lomod
  8354 ;;		_pad
  8355 ;; This function is called by:
  8356 ;;		_vfpfcnvrt
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           
  8361                           ;psect for function _utoa
  8362  2F1F                     _utoa:	
  8363                           
  8364                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  8365                           
  8366                           ;incstack = 0
  8367                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8368  2F1F  0023               	movlb	3	; select bank3
  8369  2F20  1BB7               	btfsc	(_prec+1)^(0+384),7
  8370  2F21  2F26               	goto	l794
  8371                           
  8372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  8373  2F22  30FD               	movlw	253
  8374  2F23  05B8               	andwf	_flags^(0+384),f
  8375  2F24  30FF               	movlw	255
  8376  2F25  05B9               	andwf	(_flags+1)^(0+384),f
  8377  2F26                     l794:	
  8378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  8379                           
  8380                           
  8381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  8382  2F26  0837               	movf	(_prec+1)^(0+384),w
  8383  2F27  3A80               	xorlw	128
  8384  2F28  0020               	movlb	0	; select bank0
  8385  2F29  00BA               	movwf	??_utoa
  8386  2F2A  3080               	movlw	128
  8387  2F2B  023A               	subwf	??_utoa,w
  8388  2F2C  1D03               	skipz
  8389  2F2D  2F31               	goto	u10755
  8390  2F2E  3001               	movlw	1
  8391  2F2F  0023               	movlb	3	; select bank3
  8392  2F30  0236               	subwf	_prec^(0+384),w
  8393  2F31                     u10755:	
  8394  2F31  1803               	skipnc
  8395  2F32  2F39               	goto	l7761
  8396  2F33  3001               	movlw	1
  8397  2F34  0020               	movlb	0	; select bank0
  8398  2F35  00BB               	movwf	utoa@p
  8399  2F36  3000               	movlw	0
  8400  2F37  00BC               	movwf	utoa@p+1
  8401  2F38  2F41               	goto	l798
  8402  2F39                     l7761:	
  8403  2F39  0023               	movlb	3	; select bank3
  8404  2F3A  0837               	movf	(_prec+1)^(0+384),w
  8405  2F3B  0020               	movlb	0	; select bank0
  8406  2F3C  00BC               	movwf	utoa@p+1
  8407  2F3D  0023               	movlb	3	; select bank3
  8408  2F3E  0836               	movf	_prec^(0+384),w
  8409  2F3F  0020               	movlb	0	; select bank0
  8410  2F40  00BB               	movwf	utoa@p
  8411  2F41                     l798:	
  8412                           
  8413                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  8414  2F41  0023               	movlb	3	; select bank3
  8415  2F42  0835               	movf	(_width+1)^(0+384),w
  8416  2F43  0020               	movlb	0	; select bank0
  8417  2F44  00BE               	movwf	utoa@w+1
  8418  2F45  0023               	movlb	3	; select bank3
  8419  2F46  0834               	movf	_width^(0+384),w
  8420  2F47  0020               	movlb	0	; select bank0
  8421  2F48  00BD               	movwf	utoa@w
  8422                           
  8423                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  8424  2F49  0832               	movf	utoa@d,w
  8425  2F4A  00BF               	movwf	utoa@n
  8426  2F4B  0833               	movf	utoa@d+1,w
  8427  2F4C  00C0               	movwf	utoa@n+1
  8428  2F4D  0834               	movf	utoa@d+2,w
  8429  2F4E  00C1               	movwf	utoa@n+2
  8430  2F4F  0835               	movf	utoa@d+3,w
  8431  2F50  00C2               	movwf	utoa@n+3
  8432  2F51  0836               	movf	utoa@d+4,w
  8433  2F52  00C3               	movwf	utoa@n+4
  8434  2F53  0837               	movf	utoa@d+5,w
  8435  2F54  00C4               	movwf	utoa@n+5
  8436  2F55  0838               	movf	utoa@d+6,w
  8437  2F56  00C5               	movwf	utoa@n+6
  8438  2F57  0839               	movf	utoa@d+7,w
  8439  2F58  00C6               	movwf	utoa@n+7
  8440                           
  8441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  8442  2F59  304F               	movlw	79
  8443  2F5A  00C7               	movwf	utoa@i
  8444  2F5B  3000               	movlw	0
  8445  2F5C  00C8               	movwf	utoa@i+1
  8446                           
  8447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  8448  2F5D  0025               	movlb	5	; select bank5
  8449  2F5E  01EF               	clrf	(_dbuf^(0+640)+79)
  8450                           
  8451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8452  2F5F  2FE5               	goto	l7777
  8453  2F60                     l7779:	
  8454  2F60  083F               	movf	utoa@n,w
  8455  2F61  0440               	iorwf	utoa@n+1,w
  8456  2F62  0441               	iorwf	utoa@n+2,w
  8457  2F63  0442               	iorwf	utoa@n+3,w
  8458  2F64  0443               	iorwf	utoa@n+4,w
  8459  2F65  0444               	iorwf	utoa@n+5,w
  8460  2F66  0445               	iorwf	utoa@n+6,w
  8461  2F67  0446               	iorwf	utoa@n+7,w
  8462  2F68  1D03               	skipz
  8463  2F69  2F84               	goto	l7767
  8464  2F6A  083C               	movf	utoa@p+1,w
  8465  2F6B  3A80               	xorlw	128
  8466  2F6C  00BA               	movwf	??_utoa
  8467  2F6D  3080               	movlw	128
  8468  2F6E  023A               	subwf	??_utoa,w
  8469  2F6F  1D03               	skipz
  8470  2F70  2F73               	goto	u10785
  8471  2F71  3001               	movlw	1
  8472  2F72  023B               	subwf	utoa@p,w
  8473  2F73                     u10785:	
  8474  2F73  1803               	skipnc
  8475  2F74  2F84               	goto	l7767
  8476  2F75  0020               	movlb	0	; select bank0
  8477  2F76  083E               	movf	utoa@w+1,w
  8478  2F77  3A80               	xorlw	128
  8479  2F78  00BA               	movwf	??_utoa
  8480  2F79  3080               	movlw	128
  8481  2F7A  023A               	subwf	??_utoa,w
  8482  2F7B  1D03               	skipz
  8483  2F7C  2F7F               	goto	u10795
  8484  2F7D  3001               	movlw	1
  8485  2F7E  023D               	subwf	utoa@w,w
  8486  2F7F                     u10795:	
  8487  2F7F  1C03               	skipc
  8488  2F80  2FEA               	goto	l7787
  8489  2F81  0023               	movlb	3	; select bank3
  8490  2F82  1CB8               	btfss	_flags^(0+384),1
  8491  2F83  2FEA               	goto	l7787
  8492  2F84                     l7767:	
  8493                           
  8494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  8495  2F84  30FF               	movlw	255
  8496  2F85  0020               	movlb	0	; select bank0
  8497  2F86  07C7               	addwf	utoa@i,f
  8498  2F87  30FF               	movlw	255
  8499  2F88  3DC8               	addwfc	utoa@i+1,f
  8500                           
  8501                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  8502  2F89  300A               	movlw	10
  8503  2F8A  00A0               	movwf	___lomod@divisor
  8504  2F8B  01A1               	clrf	___lomod@divisor+1
  8505  2F8C  01A2               	clrf	___lomod@divisor+2
  8506  2F8D  01A3               	clrf	___lomod@divisor+3
  8507  2F8E  01A4               	clrf	___lomod@divisor+4
  8508  2F8F  01A5               	clrf	___lomod@divisor+5
  8509  2F90  01A6               	clrf	___lomod@divisor+6
  8510  2F91  01A7               	clrf	___lomod@divisor+7
  8511  2F92  083F               	movf	utoa@n,w
  8512  2F93  00A8               	movwf	___lomod@dividend
  8513  2F94  0840               	movf	utoa@n+1,w
  8514  2F95  00A9               	movwf	___lomod@dividend+1
  8515  2F96  0841               	movf	utoa@n+2,w
  8516  2F97  00AA               	movwf	___lomod@dividend+2
  8517  2F98  0842               	movf	utoa@n+3,w
  8518  2F99  00AB               	movwf	___lomod@dividend+3
  8519  2F9A  0843               	movf	utoa@n+4,w
  8520  2F9B  00AC               	movwf	___lomod@dividend+4
  8521  2F9C  0844               	movf	utoa@n+5,w
  8522  2F9D  00AD               	movwf	___lomod@dividend+5
  8523  2F9E  0845               	movf	utoa@n+6,w
  8524  2F9F  00AE               	movwf	___lomod@dividend+6
  8525  2FA0  0846               	movf	utoa@n+7,w
  8526  2FA1  00AF               	movwf	___lomod@dividend+7
  8527  2FA2  31B4  24B4  31AF   	fcall	___lomod
  8528  2FA5  0020               	movlb	0	; select bank0
  8529  2FA6  0820               	movf	?___lomod,w
  8530  2FA7  3E30               	addlw	48
  8531  2FA8  00BA               	movwf	??_utoa
  8532  2FA9  0847               	movf	utoa@i,w
  8533  2FAA  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8534  2FAB  0086               	movwf	6
  8535  2FAC  3002               	movlw	2	; select bank5/6
  8536  2FAD  0087               	movwf	7
  8537  2FAE  083A               	movf	??_utoa,w
  8538  2FAF  0081               	movwf	1
  8539                           
  8540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  8541  2FB0  30FF               	movlw	255
  8542  2FB1  07BB               	addwf	utoa@p,f
  8543  2FB2  30FF               	movlw	255
  8544  2FB3  3DBC               	addwfc	utoa@p+1,f
  8545                           
  8546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  8547  2FB4  30FF               	movlw	255
  8548  2FB5  07BD               	addwf	utoa@w,f
  8549  2FB6  30FF               	movlw	255
  8550  2FB7  3DBE               	addwfc	utoa@w+1,f
  8551                           
  8552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  8553  2FB8  300A               	movlw	10
  8554  2FB9  00A0               	movwf	___lodiv@divisor
  8555  2FBA  01A1               	clrf	___lodiv@divisor+1
  8556  2FBB  01A2               	clrf	___lodiv@divisor+2
  8557  2FBC  01A3               	clrf	___lodiv@divisor+3
  8558  2FBD  01A4               	clrf	___lodiv@divisor+4
  8559  2FBE  01A5               	clrf	___lodiv@divisor+5
  8560  2FBF  01A6               	clrf	___lodiv@divisor+6
  8561  2FC0  01A7               	clrf	___lodiv@divisor+7
  8562  2FC1  083F               	movf	utoa@n,w
  8563  2FC2  00A8               	movwf	___lodiv@dividend
  8564  2FC3  0840               	movf	utoa@n+1,w
  8565  2FC4  00A9               	movwf	___lodiv@dividend+1
  8566  2FC5  0841               	movf	utoa@n+2,w
  8567  2FC6  00AA               	movwf	___lodiv@dividend+2
  8568  2FC7  0842               	movf	utoa@n+3,w
  8569  2FC8  00AB               	movwf	___lodiv@dividend+3
  8570  2FC9  0843               	movf	utoa@n+4,w
  8571  2FCA  00AC               	movwf	___lodiv@dividend+4
  8572  2FCB  0844               	movf	utoa@n+5,w
  8573  2FCC  00AD               	movwf	___lodiv@dividend+5
  8574  2FCD  0845               	movf	utoa@n+6,w
  8575  2FCE  00AE               	movwf	___lodiv@dividend+6
  8576  2FCF  0846               	movf	utoa@n+7,w
  8577  2FD0  00AF               	movwf	___lodiv@dividend+7
  8578  2FD1  31B6  267E  31AF   	fcall	___lodiv
  8579  2FD4  0020               	movlb	0	; select bank0
  8580  2FD5  0820               	movf	?___lodiv,w
  8581  2FD6  00BF               	movwf	utoa@n
  8582  2FD7  0821               	movf	?___lodiv+1,w
  8583  2FD8  00C0               	movwf	utoa@n+1
  8584  2FD9  0822               	movf	?___lodiv+2,w
  8585  2FDA  00C1               	movwf	utoa@n+2
  8586  2FDB  0823               	movf	?___lodiv+3,w
  8587  2FDC  00C2               	movwf	utoa@n+3
  8588  2FDD  0824               	movf	?___lodiv+4,w
  8589  2FDE  00C3               	movwf	utoa@n+4
  8590  2FDF  0825               	movf	?___lodiv+5,w
  8591  2FE0  00C4               	movwf	utoa@n+5
  8592  2FE1  0826               	movf	?___lodiv+6,w
  8593  2FE2  00C5               	movwf	utoa@n+6
  8594  2FE3  0827               	movf	?___lodiv+7,w
  8595  2FE4  00C6               	movwf	utoa@n+7
  8596  2FE5                     l7777:	
  8597                           
  8598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8599  2FE5  0020               	movlb	0	; select bank0
  8600  2FE6  0847               	movf	utoa@i,w
  8601  2FE7  0448               	iorwf	utoa@i+1,w
  8602  2FE8  1D03               	btfss	3,2
  8603  2FE9  2F60               	goto	l7779
  8604  2FEA                     l7787:	
  8605                           
  8606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  8607  2FEA  0020               	movlb	0	; select bank0
  8608  2FEB  0831               	movf	utoa@fp+1,w
  8609  2FEC  00A7               	movwf	pad@fp+1
  8610  2FED  0830               	movf	utoa@fp,w
  8611  2FEE  00A6               	movwf	pad@fp
  8612  2FEF  0847               	movf	utoa@i,w
  8613  2FF0  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8614  2FF1  00BA               	movwf	??_utoa
  8615  2FF2  083A               	movf	??_utoa,w
  8616  2FF3  00A8               	movwf	pad@buf
  8617  2FF4  083E               	movf	utoa@w+1,w
  8618  2FF5  00AA               	movwf	pad@p+1
  8619  2FF6  083D               	movf	utoa@w,w
  8620  2FF7  00A9               	movwf	pad@p
  8621  2FF8  31B2  2202         	fcall	_pad
  8622  2FFA  0020               	movlb	0	; select bank0
  8623  2FFB  0827               	movf	?_pad+1,w
  8624  2FFC  00B1               	movwf	?_utoa+1
  8625  2FFD  0826               	movf	?_pad,w
  8626  2FFE  00B0               	movwf	?_utoa
  8627  2FFF  0008               	return
  8628  3000                     __end_of_utoa:	
  8629                           
  8630                           	psect	text15
  8631  34B4                     __ptext15:	
  8632 ;; *************** function ___lomod *****************
  8633 ;; Defined at:
  8634 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8637 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8638 ;; Auto vars:     Size  Location     Type
  8639 ;;  counter         1    2[COMMON] unsigned char 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  8    0[BANK0 ] unsigned long long 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8649 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8651 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8652 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8653 ;;Total ram usage:       18 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:    1
  8656 ;; This function calls:
  8657 ;;		Nothing
  8658 ;; This function is called by:
  8659 ;;		_utoa
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           
  8664                           ;psect for function ___lomod
  8665  34B4                     ___lomod:	
  8666                           
  8667                           ;incstack = 0
  8668                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  8669  34B4  0020               	movlb	0	; select bank0
  8670  34B5  0820               	movf	___lomod@divisor,w
  8671  34B6  0421               	iorwf	___lomod@divisor+1,w
  8672  34B7  0422               	iorwf	___lomod@divisor+2,w
  8673  34B8  0423               	iorwf	___lomod@divisor+3,w
  8674  34B9  0424               	iorwf	___lomod@divisor+4,w
  8675  34BA  0425               	iorwf	___lomod@divisor+5,w
  8676  34BB  0426               	iorwf	___lomod@divisor+6,w
  8677  34BC  0427               	iorwf	___lomod@divisor+7,w
  8678  34BD  1903               	skipnz
  8679  34BE  2D0C               	goto	l1184
  8680  34BF  01F2               	clrf	___lomod@counter
  8681  34C0  0AF2               	incf	___lomod@counter,f
  8682  34C1                     l5081:	
  8683  34C1  1BA7               	btfsc	___lomod@divisor+7,7
  8684  34C2  2CD0               	goto	l5083
  8685  34C3  35A0               	lslf	___lomod@divisor,f
  8686  34C4  0DA1               	rlf	___lomod@divisor+1,f
  8687  34C5  0DA2               	rlf	___lomod@divisor+2,f
  8688  34C6  0DA3               	rlf	___lomod@divisor+3,f
  8689  34C7  0DA4               	rlf	___lomod@divisor+4,f
  8690  34C8  0DA5               	rlf	___lomod@divisor+5,f
  8691  34C9  0DA6               	rlf	___lomod@divisor+6,f
  8692  34CA  0DA7               	rlf	___lomod@divisor+7,f
  8693  34CB  3001               	movlw	1
  8694  34CC  00F1               	movwf	??___lomod
  8695  34CD  0871               	movf	??___lomod,w
  8696  34CE  07F2               	addwf	___lomod@counter,f
  8697  34CF  2CC1               	goto	l5081
  8698  34D0                     l5083:	
  8699  34D0  0827               	movf	___lomod@divisor+7,w
  8700  34D1  022F               	subwf	___lomod@dividend+7,w
  8701  34D2  1D03               	skipz
  8702  34D3  2CEE               	goto	u6485
  8703  34D4  0826               	movf	___lomod@divisor+6,w
  8704  34D5  022E               	subwf	___lomod@dividend+6,w
  8705  34D6  1D03               	skipz
  8706  34D7  2CEE               	goto	u6485
  8707  34D8  0825               	movf	___lomod@divisor+5,w
  8708  34D9  022D               	subwf	___lomod@dividend+5,w
  8709  34DA  1D03               	skipz
  8710  34DB  2CEE               	goto	u6485
  8711  34DC  0824               	movf	___lomod@divisor+4,w
  8712  34DD  022C               	subwf	___lomod@dividend+4,w
  8713  34DE  1D03               	skipz
  8714  34DF  2CEE               	goto	u6485
  8715  34E0  0823               	movf	___lomod@divisor+3,w
  8716  34E1  022B               	subwf	___lomod@dividend+3,w
  8717  34E2  1D03               	skipz
  8718  34E3  2CEE               	goto	u6485
  8719  34E4  0822               	movf	___lomod@divisor+2,w
  8720  34E5  022A               	subwf	___lomod@dividend+2,w
  8721  34E6  1D03               	skipz
  8722  34E7  2CEE               	goto	u6485
  8723  34E8  0821               	movf	___lomod@divisor+1,w
  8724  34E9  0229               	subwf	___lomod@dividend+1,w
  8725  34EA  1D03               	skipz
  8726  34EB  2CEE               	goto	u6485
  8727  34EC  0820               	movf	___lomod@divisor,w
  8728  34ED  0228               	subwf	___lomod@dividend,w
  8729  34EE                     u6485:	
  8730  34EE  1C03               	skipc
  8731  34EF  2D00               	goto	l5087
  8732  34F0  0820               	movf	___lomod@divisor,w
  8733  34F1  02A8               	subwf	___lomod@dividend,f
  8734  34F2  0821               	movf	___lomod@divisor+1,w
  8735  34F3  3BA9               	subwfb	___lomod@dividend+1,f
  8736  34F4  0822               	movf	___lomod@divisor+2,w
  8737  34F5  3BAA               	subwfb	___lomod@dividend+2,f
  8738  34F6  0823               	movf	___lomod@divisor+3,w
  8739  34F7  3BAB               	subwfb	___lomod@dividend+3,f
  8740  34F8  0824               	movf	___lomod@divisor+4,w
  8741  34F9  3BAC               	subwfb	___lomod@dividend+4,f
  8742  34FA  0825               	movf	___lomod@divisor+5,w
  8743  34FB  3BAD               	subwfb	___lomod@dividend+5,f
  8744  34FC  0826               	movf	___lomod@divisor+6,w
  8745  34FD  3BAE               	subwfb	___lomod@dividend+6,f
  8746  34FE  0827               	movf	___lomod@divisor+7,w
  8747  34FF  3BAF               	subwfb	___lomod@dividend+7,f
  8748  3500                     l5087:	
  8749  3500  36A7               	lsrf	___lomod@divisor+7,f
  8750  3501  0CA6               	rrf	___lomod@divisor+6,f
  8751  3502  0CA5               	rrf	___lomod@divisor+5,f
  8752  3503  0CA4               	rrf	___lomod@divisor+4,f
  8753  3504  0CA3               	rrf	___lomod@divisor+3,f
  8754  3505  0CA2               	rrf	___lomod@divisor+2,f
  8755  3506  0CA1               	rrf	___lomod@divisor+1,f
  8756  3507  0CA0               	rrf	___lomod@divisor,f
  8757  3508  3001               	movlw	1
  8758  3509  02F2               	subwf	___lomod@counter,f
  8759  350A  1D03               	btfss	3,2
  8760  350B  2CD0               	goto	l5083
  8761  350C                     l1184:	
  8762  350C  0828               	movf	___lomod@dividend,w
  8763  350D  00A0               	movwf	?___lomod
  8764  350E  0829               	movf	___lomod@dividend+1,w
  8765  350F  00A1               	movwf	?___lomod+1
  8766  3510  082A               	movf	___lomod@dividend+2,w
  8767  3511  00A2               	movwf	?___lomod+2
  8768  3512  082B               	movf	___lomod@dividend+3,w
  8769  3513  00A3               	movwf	?___lomod+3
  8770  3514  082C               	movf	___lomod@dividend+4,w
  8771  3515  00A4               	movwf	?___lomod+4
  8772  3516  082D               	movf	___lomod@dividend+5,w
  8773  3517  00A5               	movwf	?___lomod+5
  8774  3518  082E               	movf	___lomod@dividend+6,w
  8775  3519  00A6               	movwf	?___lomod+6
  8776  351A  082F               	movf	___lomod@dividend+7,w
  8777  351B  00A7               	movwf	?___lomod+7
  8778  351C  0008               	return
  8779  351D                     __end_of___lomod:	
  8780                           
  8781                           	psect	text16
  8782  367E                     __ptext16:	
  8783 ;; *************** function ___lodiv *****************
  8784 ;; Defined at:
  8785 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  8786 ;; Parameters:    Size  Location     Type
  8787 ;;  divisor         8    0[BANK0 ] unsigned long long 
  8788 ;;  dividend        8    8[BANK0 ] unsigned long long 
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;  quotient        8    2[COMMON] unsigned long long 
  8791 ;;  counter         1   10[COMMON] unsigned char 
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  8    0[BANK0 ] unsigned long long 
  8794 ;; Registers used:
  8795 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8801 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8802 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8804 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8805 ;;Total ram usage:       26 bytes
  8806 ;; Hardware stack levels used:    1
  8807 ;; Hardware stack levels required when called:    1
  8808 ;; This function calls:
  8809 ;;		Nothing
  8810 ;; This function is called by:
  8811 ;;		_utoa
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           
  8816                           ;psect for function ___lodiv
  8817  367E                     ___lodiv:	
  8818                           
  8819                           ;incstack = 0
  8820                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  8821  367E  3072               	movlw	low ___lodiv@quotient
  8822  367F  0086               	movwf	6
  8823  3680  3000               	movlw	high ___lodiv@quotient
  8824  3681  0087               	movwf	7
  8825  3682  3008               	movlw	8
  8826  3683  00F1               	movwf	??___lodiv
  8827  3684  3000               	movlw	0
  8828  3685                     u6410:	
  8829  3685  001E               	movwi fsr1++
  8830  3686  0BF1               	decfsz	??___lodiv,f
  8831  3687  2E85               	goto	u6410
  8832  3688  0020               	movlb	0	; select bank0
  8833  3689  0820               	movf	___lodiv@divisor,w
  8834  368A  0421               	iorwf	___lodiv@divisor+1,w
  8835  368B  0422               	iorwf	___lodiv@divisor+2,w
  8836  368C  0423               	iorwf	___lodiv@divisor+3,w
  8837  368D  0424               	iorwf	___lodiv@divisor+4,w
  8838  368E  0425               	iorwf	___lodiv@divisor+5,w
  8839  368F  0426               	iorwf	___lodiv@divisor+6,w
  8840  3690  0427               	iorwf	___lodiv@divisor+7,w
  8841  3691  1903               	skipnz
  8842  3692  2EE9               	goto	l1174
  8843  3693  01FA               	clrf	___lodiv@counter
  8844  3694  0AFA               	incf	___lodiv@counter,f
  8845  3695                     l5061:	
  8846  3695  1BA7               	btfsc	___lodiv@divisor+7,7
  8847  3696  2EA4               	goto	l5063
  8848  3697  35A0               	lslf	___lodiv@divisor,f
  8849  3698  0DA1               	rlf	___lodiv@divisor+1,f
  8850  3699  0DA2               	rlf	___lodiv@divisor+2,f
  8851  369A  0DA3               	rlf	___lodiv@divisor+3,f
  8852  369B  0DA4               	rlf	___lodiv@divisor+4,f
  8853  369C  0DA5               	rlf	___lodiv@divisor+5,f
  8854  369D  0DA6               	rlf	___lodiv@divisor+6,f
  8855  369E  0DA7               	rlf	___lodiv@divisor+7,f
  8856  369F  3001               	movlw	1
  8857  36A0  00F1               	movwf	??___lodiv
  8858  36A1  0871               	movf	??___lodiv,w
  8859  36A2  07FA               	addwf	___lodiv@counter,f
  8860  36A3  2E95               	goto	l5061
  8861  36A4                     l5063:	
  8862  36A4  35F2               	lslf	___lodiv@quotient,f
  8863  36A5  0DF3               	rlf	___lodiv@quotient+1,f
  8864  36A6  0DF4               	rlf	___lodiv@quotient+2,f
  8865  36A7  0DF5               	rlf	___lodiv@quotient+3,f
  8866  36A8  0DF6               	rlf	___lodiv@quotient+4,f
  8867  36A9  0DF7               	rlf	___lodiv@quotient+5,f
  8868  36AA  0DF8               	rlf	___lodiv@quotient+6,f
  8869  36AB  0DF9               	rlf	___lodiv@quotient+7,f
  8870  36AC  0827               	movf	___lodiv@divisor+7,w
  8871  36AD  022F               	subwf	___lodiv@dividend+7,w
  8872  36AE  1D03               	skipz
  8873  36AF  2ECA               	goto	u6445
  8874  36B0  0826               	movf	___lodiv@divisor+6,w
  8875  36B1  022E               	subwf	___lodiv@dividend+6,w
  8876  36B2  1D03               	skipz
  8877  36B3  2ECA               	goto	u6445
  8878  36B4  0825               	movf	___lodiv@divisor+5,w
  8879  36B5  022D               	subwf	___lodiv@dividend+5,w
  8880  36B6  1D03               	skipz
  8881  36B7  2ECA               	goto	u6445
  8882  36B8  0824               	movf	___lodiv@divisor+4,w
  8883  36B9  022C               	subwf	___lodiv@dividend+4,w
  8884  36BA  1D03               	skipz
  8885  36BB  2ECA               	goto	u6445
  8886  36BC  0823               	movf	___lodiv@divisor+3,w
  8887  36BD  022B               	subwf	___lodiv@dividend+3,w
  8888  36BE  1D03               	skipz
  8889  36BF  2ECA               	goto	u6445
  8890  36C0  0822               	movf	___lodiv@divisor+2,w
  8891  36C1  022A               	subwf	___lodiv@dividend+2,w
  8892  36C2  1D03               	skipz
  8893  36C3  2ECA               	goto	u6445
  8894  36C4  0821               	movf	___lodiv@divisor+1,w
  8895  36C5  0229               	subwf	___lodiv@dividend+1,w
  8896  36C6  1D03               	skipz
  8897  36C7  2ECA               	goto	u6445
  8898  36C8  0820               	movf	___lodiv@divisor,w
  8899  36C9  0228               	subwf	___lodiv@dividend,w
  8900  36CA                     u6445:	
  8901  36CA  1C03               	skipc
  8902  36CB  2EDD               	goto	l5071
  8903  36CC  0820               	movf	___lodiv@divisor,w
  8904  36CD  02A8               	subwf	___lodiv@dividend,f
  8905  36CE  0821               	movf	___lodiv@divisor+1,w
  8906  36CF  3BA9               	subwfb	___lodiv@dividend+1,f
  8907  36D0  0822               	movf	___lodiv@divisor+2,w
  8908  36D1  3BAA               	subwfb	___lodiv@dividend+2,f
  8909  36D2  0823               	movf	___lodiv@divisor+3,w
  8910  36D3  3BAB               	subwfb	___lodiv@dividend+3,f
  8911  36D4  0824               	movf	___lodiv@divisor+4,w
  8912  36D5  3BAC               	subwfb	___lodiv@dividend+4,f
  8913  36D6  0825               	movf	___lodiv@divisor+5,w
  8914  36D7  3BAD               	subwfb	___lodiv@dividend+5,f
  8915  36D8  0826               	movf	___lodiv@divisor+6,w
  8916  36D9  3BAE               	subwfb	___lodiv@dividend+6,f
  8917  36DA  0827               	movf	___lodiv@divisor+7,w
  8918  36DB  3BAF               	subwfb	___lodiv@dividend+7,f
  8919  36DC  1472               	bsf	___lodiv@quotient,0
  8920  36DD                     l5071:	
  8921  36DD  36A7               	lsrf	___lodiv@divisor+7,f
  8922  36DE  0CA6               	rrf	___lodiv@divisor+6,f
  8923  36DF  0CA5               	rrf	___lodiv@divisor+5,f
  8924  36E0  0CA4               	rrf	___lodiv@divisor+4,f
  8925  36E1  0CA3               	rrf	___lodiv@divisor+3,f
  8926  36E2  0CA2               	rrf	___lodiv@divisor+2,f
  8927  36E3  0CA1               	rrf	___lodiv@divisor+1,f
  8928  36E4  0CA0               	rrf	___lodiv@divisor,f
  8929  36E5  3001               	movlw	1
  8930  36E6  02FA               	subwf	___lodiv@counter,f
  8931  36E7  1D03               	btfss	3,2
  8932  36E8  2EA4               	goto	l5063
  8933  36E9                     l1174:	
  8934  36E9  0872               	movf	___lodiv@quotient,w
  8935  36EA  00A0               	movwf	?___lodiv
  8936  36EB  0873               	movf	___lodiv@quotient+1,w
  8937  36EC  00A1               	movwf	?___lodiv+1
  8938  36ED  0874               	movf	___lodiv@quotient+2,w
  8939  36EE  00A2               	movwf	?___lodiv+2
  8940  36EF  0875               	movf	___lodiv@quotient+3,w
  8941  36F0  00A3               	movwf	?___lodiv+3
  8942  36F1  0876               	movf	___lodiv@quotient+4,w
  8943  36F2  00A4               	movwf	?___lodiv+4
  8944  36F3  0877               	movf	___lodiv@quotient+5,w
  8945  36F4  00A5               	movwf	?___lodiv+5
  8946  36F5  0878               	movf	___lodiv@quotient+6,w
  8947  36F6  00A6               	movwf	?___lodiv+6
  8948  36F7  0879               	movf	___lodiv@quotient+7,w
  8949  36F8  00A7               	movwf	?___lodiv+7
  8950  36F9  0008               	return
  8951  36FA                     __end_of___lodiv:	
  8952                           
  8953                           	psect	text17
  8954  32A4                     __ptext17:	
  8955 ;; *************** function _strncmp *****************
  8956 ;; Defined at:
  8957 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;  _l              2    1[COMMON] PTR const unsigned char 
  8960 ;;		 -> vfpfcnvrt@ct(3), STR_25(18), STR_24(18), STR_23(19), 
  8961 ;;		 -> STR_22(20), STR_21(20), STR_20(21), STR_19(21), 
  8962 ;;		 -> STR_18(21), STR_17(22), STR_16(22), STR_15(21), 
  8963 ;;		 -> STR_14(21), STR_11(52), STR_8(57), STR_7(44), 
  8964 ;;		 -> STR_6(42), STR_3(43), 
  8965 ;;  _r              2    3[COMMON] PTR const unsigned char 
  8966 ;;		 -> STR_169(3), STR_165(3), STR_160(3), STR_156(3), 
  8967 ;;		 -> STR_151(3), STR_147(3), STR_142(4), STR_138(4), 
  8968 ;;		 -> STR_133(3), STR_128(3), STR_123(3), STR_118(4), 
  8969 ;;		 -> STR_113(3), STR_108(3), STR_103(3), STR_98(4), 
  8970 ;;		 -> STR_93(3), STR_88(3), STR_83(3), STR_78(4), 
  8971 ;;		 -> STR_73(3), STR_68(3), STR_64(3), STR_59(3), 
  8972 ;;		 -> STR_55(3), STR_50(3), STR_46(3), STR_41(4), 
  8973 ;;		 -> STR_37(4), 
  8974 ;;  n               2    5[COMMON] unsigned int 
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;  r               2   10[COMMON] PTR const unsigned char 
  8977 ;;		 -> STR_169(3), STR_165(3), STR_160(3), STR_156(3), 
  8978 ;;		 -> STR_151(3), STR_147(3), STR_142(4), STR_138(4), 
  8979 ;;		 -> STR_133(3), STR_128(3), STR_123(3), STR_118(4), 
  8980 ;;		 -> STR_113(3), STR_108(3), STR_103(3), STR_98(4), 
  8981 ;;		 -> STR_93(3), STR_88(3), STR_83(3), STR_78(4), 
  8982 ;;		 -> STR_73(3), STR_68(3), STR_64(3), STR_59(3), 
  8983 ;;		 -> STR_55(3), STR_50(3), STR_46(3), STR_41(4), 
  8984 ;;		 -> STR_37(4), 
  8985 ;;  l               2    8[COMMON] PTR const unsigned char 
  8986 ;;		 -> vfpfcnvrt@ct(3), STR_25(18), STR_24(18), STR_23(19), 
  8987 ;;		 -> STR_22(20), STR_21(20), STR_20(21), STR_19(21), 
  8988 ;;		 -> STR_18(21), STR_17(22), STR_16(22), STR_15(21), 
  8989 ;;		 -> STR_14(21), STR_11(52), STR_8(57), STR_7(44), 
  8990 ;;		 -> STR_6(42), STR_3(43), 
  8991 ;; Return value:  Size  Location     Type
  8992 ;;                  2    1[COMMON] int 
  8993 ;; Registers used:
  8994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8995 ;; Tracked objects:
  8996 ;;		On entry : 0/0
  8997 ;;		On exit  : 0/0
  8998 ;;		Unchanged: 0/0
  8999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9000 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9001 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9003 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9004 ;;Total ram usage:       11 bytes
  9005 ;; Hardware stack levels used:    1
  9006 ;; Hardware stack levels required when called:    1
  9007 ;; This function calls:
  9008 ;;		Nothing
  9009 ;; This function is called by:
  9010 ;;		_vfpfcnvrt
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           
  9015                           ;psect for function _strncmp
  9016  32A4                     _strncmp:	
  9017                           
  9018                           ;incstack = 0
  9019                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  9020  32A4  0872               	movf	strncmp@_l+1,w
  9021  32A5  00F9               	movwf	strncmp@l+1
  9022  32A6  0871               	movf	strncmp@_l,w
  9023  32A7  00F8               	movwf	strncmp@l
  9024  32A8  0874               	movf	strncmp@_r+1,w
  9025  32A9  00FB               	movwf	strncmp@r+1
  9026  32AA  0873               	movf	strncmp@_r,w
  9027  32AB  00FA               	movwf	strncmp@r
  9028  32AC  3001               	movlw	1
  9029  32AD  02F5               	subwf	strncmp@n,f
  9030  32AE  3000               	movlw	0
  9031  32AF  3BF6               	subwfb	strncmp@n+1,f
  9032  32B0  0A75               	incf	strncmp@n,w
  9033  32B1  1D03               	skipz
  9034  32B2  2ADE               	goto	l6001
  9035  32B3  0A76               	incf	strncmp@n+1,w
  9036  32B4  1D03               	btfss	3,2
  9037  32B5  2ADE               	goto	l6001
  9038  32B6  01F1               	clrf	?_strncmp
  9039  32B7  01F2               	clrf	?_strncmp+1
  9040  32B8  0008               	return
  9041  32B9                     l6003:	
  9042  32B9  087A               	movf	strncmp@r,w
  9043  32BA  0084               	movwf	4
  9044  32BB  087B               	movf	strncmp@r+1,w
  9045  32BC  0085               	movwf	5
  9046  32BD  0012               	moviw fsr0++
  9047  32BE  1903               	btfsc	3,2
  9048  32BF  2AE5               	goto	l6009
  9049  32C0  0875               	movf	strncmp@n,w
  9050  32C1  0476               	iorwf	strncmp@n+1,w
  9051  32C2  1903               	btfsc	3,2
  9052  32C3  2AE5               	goto	l6009
  9053  32C4  087A               	movf	strncmp@r,w
  9054  32C5  0084               	movwf	4
  9055  32C6  087B               	movf	strncmp@r+1,w
  9056  32C7  0085               	movwf	5
  9057  32C8  0800               	movf	0,w	;code access
  9058  32C9  00F7               	movwf	??_strncmp
  9059  32CA  0878               	movf	strncmp@l,w
  9060  32CB  0084               	movwf	4
  9061  32CC  0879               	movf	strncmp@l+1,w
  9062  32CD  0085               	movwf	5
  9063  32CE  0800               	movf	0,w	;code access
  9064  32CF  0677               	xorwf	??_strncmp,w
  9065  32D0  1D03               	btfss	3,2
  9066  32D1  2AE5               	goto	l6009
  9067  32D2  3001               	movlw	1
  9068  32D3  07F8               	addwf	strncmp@l,f
  9069  32D4  3000               	movlw	0
  9070  32D5  3DF9               	addwfc	strncmp@l+1,f
  9071  32D6  3001               	movlw	1
  9072  32D7  07FA               	addwf	strncmp@r,f
  9073  32D8  3000               	movlw	0
  9074  32D9  3DFB               	addwfc	strncmp@r+1,f
  9075  32DA  3001               	movlw	1
  9076  32DB  02F5               	subwf	strncmp@n,f
  9077  32DC  3000               	movlw	0
  9078  32DD  3BF6               	subwfb	strncmp@n+1,f
  9079  32DE                     l6001:	
  9080  32DE  0878               	movf	strncmp@l,w
  9081  32DF  0084               	movwf	4
  9082  32E0  0879               	movf	strncmp@l+1,w
  9083  32E1  0085               	movwf	5
  9084  32E2  0012               	moviw fsr0++
  9085  32E3  1D03               	btfss	3,2
  9086  32E4  2AB9               	goto	l6003
  9087  32E5                     l6009:	
  9088  32E5  0878               	movf	strncmp@l,w
  9089  32E6  0084               	movwf	4
  9090  32E7  0879               	movf	strncmp@l+1,w
  9091  32E8  0085               	movwf	5
  9092  32E9  0800               	movf	0,w	;code access
  9093  32EA  00F7               	movwf	??_strncmp
  9094  32EB  087A               	movf	strncmp@r,w
  9095  32EC  0084               	movwf	4
  9096  32ED  087B               	movf	strncmp@r+1,w
  9097  32EE  0085               	movwf	5
  9098  32EF  0800               	movf	0,w	;code access
  9099  32F0  0277               	subwf	??_strncmp,w
  9100  32F1  00F1               	movwf	?_strncmp
  9101  32F2  01F2               	clrf	?_strncmp+1
  9102  32F3  1C03               	skipc
  9103  32F4  03F2               	decf	?_strncmp+1,f
  9104  32F5  0008               	return
  9105  32F6                     __end_of_strncmp:	
  9106                           
  9107                           	psect	text18
  9108  2BD3                     __ptext18:	
  9109 ;; *************** function _stoa *****************
  9110 ;; Defined at:
  9111 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9112 ;; Parameters:    Size  Location     Type
  9113 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  9114 ;;		 -> vsnprintf@f(6), 
  9115 ;;  s               1    2[BANK0 ] PTR unsigned char 
  9116 ;;		 -> ?_snprintf(2), adcGain(2), 
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  9119 ;;  l               2   18[BANK0 ] int 
  9120 ;;  p               2   16[BANK0 ] int 
  9121 ;;  cp              2   14[BANK0 ] PTR unsigned char 
  9122 ;;		 -> ?_snprintf(2), stoa@nuls(7), adcGain(2), 
  9123 ;;  w               2   12[BANK0 ] int 
  9124 ;;  i               2   10[BANK0 ] int 
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  2    0[BANK0 ] int 
  9127 ;; Registers used:
  9128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9134 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9135 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9137 ;;      Totals:         2      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9138 ;;Total ram usage:       22 bytes
  9139 ;; Hardware stack levels used:    1
  9140 ;; Hardware stack levels required when called:    3
  9141 ;; This function calls:
  9142 ;;		_fputc
  9143 ;;		_strlen
  9144 ;; This function is called by:
  9145 ;;		_vfpfcnvrt
  9146 ;; This function uses a non-reentrant model
  9147 ;;
  9148                           
  9149                           
  9150                           ;psect for function _stoa
  9151  2BD3                     _stoa:	
  9152                           
  9153                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9154                           
  9155                           ;incstack = 0
  9156                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9157  2BD3  3034               	movlw	low stoa@F1174
  9158  2BD4  0086               	movwf	6
  9159  2BD5  3002               	movlw	high stoa@F1174
  9160  2BD6  0087               	movwf	7
  9161  2BD7  3023               	movlw	low stoa@nuls
  9162  2BD8  0084               	movwf	4
  9163  2BD9  3000               	movlw	high stoa@nuls
  9164  2BDA  0085               	movwf	5
  9165  2BDB  3007               	movlw	7
  9166  2BDC  00FA               	movwf	??_stoa
  9167  2BDD                     u10650:	
  9168  2BDD  0016               	moviw fsr1++
  9169  2BDE  001A               	movwi fsr0++
  9170  2BDF  0BFA               	decfsz	??_stoa,f
  9171  2BE0  2BDD               	goto	u10650
  9172                           
  9173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  9174  2BE1  0020               	movlb	0	; select bank0
  9175  2BE2  0822               	movf	stoa@s,w
  9176  2BE3  00AE               	movwf	stoa@cp
  9177  2BE4  3001               	movlw	1
  9178  2BE5  00AF               	movwf	stoa@cp+1
  9179                           
  9180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  9181  2BE6  082E               	movf	stoa@cp,w
  9182  2BE7  042F               	iorwf	stoa@cp+1,w
  9183  2BE8  1D03               	btfss	3,2
  9184  2BE9  2BEE               	goto	l7713
  9185                           
  9186                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  9187  2BEA  3023               	movlw	low stoa@nuls
  9188  2BEB  00AE               	movwf	stoa@cp
  9189  2BEC  3000               	movlw	high stoa@nuls
  9190  2BED  00AF               	movwf	stoa@cp+1
  9191  2BEE                     l7713:	
  9192                           
  9193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  9194  2BEE  082F               	movf	stoa@cp+1,w
  9195  2BEF  00F2               	movwf	strlen@s+1
  9196  2BF0  082E               	movf	stoa@cp,w
  9197  2BF1  00F1               	movwf	strlen@s
  9198  2BF2  31BD  2599  31AB   	fcall	_strlen
  9199  2BF5  0872               	movf	?_strlen+1,w
  9200  2BF6  0020               	movlb	0	; select bank0
  9201  2BF7  00B3               	movwf	stoa@l+1
  9202  2BF8  0871               	movf	?_strlen,w
  9203  2BF9  00B2               	movwf	stoa@l
  9204                           
  9205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  9206  2BFA  0023               	movlb	3	; select bank3
  9207  2BFB  0837               	movf	(_prec+1)^(0+384),w
  9208  2BFC  0020               	movlb	0	; select bank0
  9209  2BFD  00B1               	movwf	stoa@p+1
  9210  2BFE  0023               	movlb	3	; select bank3
  9211  2BFF  0836               	movf	_prec^(0+384),w
  9212  2C00  0020               	movlb	0	; select bank0
  9213  2C01  00B0               	movwf	stoa@p
  9214                           
  9215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  9216  2C02  1BB1               	btfsc	stoa@p+1,7
  9217  2C03  2C15               	goto	l777
  9218  2C04  0831               	movf	stoa@p+1,w
  9219  2C05  3A80               	xorlw	128
  9220  2C06  00FA               	movwf	??_stoa
  9221  2C07  0833               	movf	stoa@l+1,w
  9222  2C08  3A80               	xorlw	128
  9223  2C09  027A               	subwf	??_stoa,w
  9224  2C0A  1D03               	skipz
  9225  2C0B  2C0E               	goto	u10685
  9226  2C0C  0832               	movf	stoa@l,w
  9227  2C0D  0230               	subwf	stoa@p,w
  9228  2C0E                     u10685:	
  9229  2C0E  1803               	btfsc	3,0
  9230  2C0F  2C15               	goto	l777
  9231  2C10  0020               	movlb	0	; select bank0
  9232  2C11  0831               	movf	stoa@p+1,w
  9233  2C12  00B3               	movwf	stoa@l+1
  9234  2C13  0830               	movf	stoa@p,w
  9235  2C14  00B2               	movwf	stoa@l
  9236  2C15                     l777:	
  9237                           
  9238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  9239  2C15  0020               	movlb	0	; select bank0
  9240  2C16  0833               	movf	stoa@l+1,w
  9241  2C17  00B1               	movwf	stoa@p+1
  9242  2C18  0832               	movf	stoa@l,w
  9243  2C19  00B0               	movwf	stoa@p
  9244                           
  9245                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  9246  2C1A  0023               	movlb	3	; select bank3
  9247  2C1B  0835               	movf	(_width+1)^(0+384),w
  9248  2C1C  0020               	movlb	0	; select bank0
  9249  2C1D  00AD               	movwf	stoa@w+1
  9250  2C1E  0023               	movlb	3	; select bank3
  9251  2C1F  0834               	movf	_width^(0+384),w
  9252  2C20  0020               	movlb	0	; select bank0
  9253  2C21  00AC               	movwf	stoa@w
  9254                           
  9255                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  9256  2C22  0023               	movlb	3	; select bank3
  9257  2C23  1C38               	btfss	_flags^(0+384),0
  9258  2C24  2C37               	goto	l7731
  9259  2C25  2C44               	goto	l7733
  9260  2C26                     l7727:	
  9261                           
  9262                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  9263  2C26  3020               	movlw	32
  9264  2C27  00F1               	movwf	fputc@c
  9265  2C28  3000               	movlw	0
  9266  2C29  00F2               	movwf	fputc@c+1
  9267  2C2A  0020               	movlb	0	; select bank0
  9268  2C2B  0821               	movf	stoa@fp+1,w
  9269  2C2C  00F4               	movwf	fputc@fp+1
  9270  2C2D  0820               	movf	stoa@fp,w
  9271  2C2E  00F3               	movwf	fputc@fp
  9272  2C2F  31B2  22F6  31AB   	fcall	_fputc
  9273                           
  9274                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  9275  2C32  3001               	movlw	1
  9276  2C33  0020               	movlb	0	; select bank0
  9277  2C34  07B2               	addwf	stoa@l,f
  9278  2C35  3000               	movlw	0
  9279  2C36  3DB3               	addwfc	stoa@l+1,f
  9280  2C37                     l7731:	
  9281                           
  9282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  9283  2C37  0020               	movlb	0	; select bank0
  9284  2C38  0833               	movf	stoa@l+1,w
  9285  2C39  3A80               	xorlw	128
  9286  2C3A  00FA               	movwf	??_stoa
  9287  2C3B  082D               	movf	stoa@w+1,w
  9288  2C3C  3A80               	xorlw	128
  9289  2C3D  027A               	subwf	??_stoa,w
  9290  2C3E  1D03               	skipz
  9291  2C3F  2C42               	goto	u10705
  9292  2C40  082C               	movf	stoa@w,w
  9293  2C41  0232               	subwf	stoa@l,w
  9294  2C42                     u10705:	
  9295  2C42  1C03               	skipc
  9296  2C43  2C26               	goto	l7727
  9297  2C44                     l7733:	
  9298                           
  9299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  9300  2C44  0020               	movlb	0	; select bank0
  9301  2C45  01AA               	clrf	stoa@i
  9302  2C46  01AB               	clrf	stoa@i+1
  9303  2C47                     l7741:	
  9304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9305                           
  9306                           
  9307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  9308  2C47  082B               	movf	stoa@i+1,w
  9309  2C48  3A80               	xorlw	128
  9310  2C49  00FA               	movwf	??_stoa
  9311  2C4A  0831               	movf	stoa@p+1,w
  9312  2C4B  3A80               	xorlw	128
  9313  2C4C  027A               	subwf	??_stoa,w
  9314  2C4D  1D03               	skipz
  9315  2C4E  2C51               	goto	u10715
  9316  2C4F  0830               	movf	stoa@p,w
  9317  2C50  022A               	subwf	stoa@i,w
  9318  2C51                     u10715:	
  9319  2C51  1803               	btfsc	3,0
  9320  2C52  2C70               	goto	l786
  9321                           
  9322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  9323  2C53  0020               	movlb	0	; select bank0
  9324  2C54  082E               	movf	stoa@cp,w
  9325  2C55  0086               	movwf	6
  9326  2C56  082F               	movf	stoa@cp+1,w
  9327  2C57  0087               	movwf	7
  9328  2C58  0801               	movf	1,w
  9329  2C59  00FA               	movwf	??_stoa
  9330  2C5A  01FB               	clrf	??_stoa+1
  9331  2C5B  087A               	movf	??_stoa,w
  9332  2C5C  00F1               	movwf	fputc@c
  9333  2C5D  087B               	movf	??_stoa+1,w
  9334  2C5E  00F2               	movwf	fputc@c+1
  9335  2C5F  0821               	movf	stoa@fp+1,w
  9336  2C60  00F4               	movwf	fputc@fp+1
  9337  2C61  0820               	movf	stoa@fp,w
  9338  2C62  00F3               	movwf	fputc@fp
  9339  2C63  31B2  22F6  31AB   	fcall	_fputc
  9340                           
  9341                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  9342  2C66  3001               	movlw	1
  9343  2C67  0020               	movlb	0	; select bank0
  9344  2C68  07AE               	addwf	stoa@cp,f
  9345  2C69  3000               	movlw	0
  9346  2C6A  3DAF               	addwfc	stoa@cp+1,f
  9347                           
  9348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  9349  2C6B  3001               	movlw	1
  9350  2C6C  07AA               	addwf	stoa@i,f
  9351  2C6D  3000               	movlw	0
  9352  2C6E  3DAB               	addwfc	stoa@i+1,f
  9353  2C6F  2C47               	goto	l7741
  9354  2C70                     l786:	
  9355                           
  9356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  9357  2C70  0023               	movlb	3	; select bank3
  9358  2C71  1838               	btfsc	_flags^(0+384),0
  9359  2C72  2C85               	goto	l7749
  9360  2C73  2C92               	goto	l7751
  9361  2C74                     l7745:	
  9362                           
  9363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  9364  2C74  3020               	movlw	32
  9365  2C75  00F1               	movwf	fputc@c
  9366  2C76  3000               	movlw	0
  9367  2C77  00F2               	movwf	fputc@c+1
  9368  2C78  0020               	movlb	0	; select bank0
  9369  2C79  0821               	movf	stoa@fp+1,w
  9370  2C7A  00F4               	movwf	fputc@fp+1
  9371  2C7B  0820               	movf	stoa@fp,w
  9372  2C7C  00F3               	movwf	fputc@fp
  9373  2C7D  31B2  22F6  31AB   	fcall	_fputc
  9374                           
  9375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  9376  2C80  3001               	movlw	1
  9377  2C81  0020               	movlb	0	; select bank0
  9378  2C82  07B2               	addwf	stoa@l,f
  9379  2C83  3000               	movlw	0
  9380  2C84  3DB3               	addwfc	stoa@l+1,f
  9381  2C85                     l7749:	
  9382                           
  9383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  9384  2C85  0020               	movlb	0	; select bank0
  9385  2C86  0833               	movf	stoa@l+1,w
  9386  2C87  3A80               	xorlw	128
  9387  2C88  00FA               	movwf	??_stoa
  9388  2C89  082D               	movf	stoa@w+1,w
  9389  2C8A  3A80               	xorlw	128
  9390  2C8B  027A               	subwf	??_stoa,w
  9391  2C8C  1D03               	skipz
  9392  2C8D  2C90               	goto	u10735
  9393  2C8E  082C               	movf	stoa@w,w
  9394  2C8F  0232               	subwf	stoa@l,w
  9395  2C90                     u10735:	
  9396  2C90  1C03               	skipc
  9397  2C91  2C74               	goto	l7745
  9398  2C92                     l7751:	
  9399                           
  9400                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  9401  2C92  0020               	movlb	0	; select bank0
  9402  2C93  0833               	movf	stoa@l+1,w
  9403  2C94  00A1               	movwf	?_stoa+1
  9404  2C95  0832               	movf	stoa@l,w
  9405  2C96  00A0               	movwf	?_stoa
  9406  2C97  0008               	return
  9407  2C98                     __end_of_stoa:	
  9408                           
  9409                           	psect	text19
  9410  21C7                     __ptext19:	
  9411 ;; *************** function _otoa *****************
  9412 ;; Defined at:
  9413 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9414 ;; Parameters:    Size  Location     Type
  9415 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9416 ;;		 -> vsnprintf@f(6), 
  9417 ;;  d               8   18[BANK0 ] unsigned long long 
  9418 ;; Auto vars:     Size  Location     Type
  9419 ;;  n               8   40[BANK0 ] unsigned long long 
  9420 ;;  i               2   48[BANK0 ] int 
  9421 ;;  w               2   38[BANK0 ] int 
  9422 ;;  t               2   36[BANK0 ] int 
  9423 ;;  p               2   34[BANK0 ] int 
  9424 ;; Return value:  Size  Location     Type
  9425 ;;                  2   16[BANK0 ] int 
  9426 ;; Registers used:
  9427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9428 ;; Tracked objects:
  9429 ;;		On entry : 0/0
  9430 ;;		On exit  : 0/0
  9431 ;;		Unchanged: 0/0
  9432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9433 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9434 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9435 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9436 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9437 ;;Total ram usage:       34 bytes
  9438 ;; Hardware stack levels used:    1
  9439 ;; Hardware stack levels required when called:    5
  9440 ;; This function calls:
  9441 ;;		_pad
  9442 ;; This function is called by:
  9443 ;;		_vfpfcnvrt
  9444 ;; This function uses a non-reentrant model
  9445 ;;
  9446                           
  9447                           
  9448                           ;psect for function _otoa
  9449  21C7                     _otoa:	
  9450                           
  9451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  9452                           
  9453                           ;incstack = 0
  9454                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9455  21C7  0023               	movlb	3	; select bank3
  9456  21C8  1BB7               	btfsc	(_prec+1)^(0+384),7
  9457  21C9  29CE               	goto	l755
  9458                           
  9459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  9460  21CA  30FD               	movlw	253
  9461  21CB  05B8               	andwf	_flags^(0+384),f
  9462  21CC  30FF               	movlw	255
  9463  21CD  05B9               	andwf	(_flags+1)^(0+384),f
  9464  21CE                     l755:	
  9465                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  9466                           
  9467                           
  9468                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  9469  21CE  0837               	movf	(_prec+1)^(0+384),w
  9470  21CF  3A80               	xorlw	128
  9471  21D0  0020               	movlb	0	; select bank0
  9472  21D1  00BA               	movwf	??_otoa
  9473  21D2  3080               	movlw	128
  9474  21D3  023A               	subwf	??_otoa,w
  9475  21D4  1D03               	skipz
  9476  21D5  29D9               	goto	u10565
  9477  21D6  3001               	movlw	1
  9478  21D7  0023               	movlb	3	; select bank3
  9479  21D8  0236               	subwf	_prec^(0+384),w
  9480  21D9                     u10565:	
  9481  21D9  1803               	skipnc
  9482  21DA  29E1               	goto	l7667
  9483  21DB  3001               	movlw	1
  9484  21DC  0020               	movlb	0	; select bank0
  9485  21DD  00C2               	movwf	otoa@p
  9486  21DE  3000               	movlw	0
  9487  21DF  00C3               	movwf	otoa@p+1
  9488  21E0  29E9               	goto	l759
  9489  21E1                     l7667:	
  9490  21E1  0023               	movlb	3	; select bank3
  9491  21E2  0837               	movf	(_prec+1)^(0+384),w
  9492  21E3  0020               	movlb	0	; select bank0
  9493  21E4  00C3               	movwf	otoa@p+1
  9494  21E5  0023               	movlb	3	; select bank3
  9495  21E6  0836               	movf	_prec^(0+384),w
  9496  21E7  0020               	movlb	0	; select bank0
  9497  21E8  00C2               	movwf	otoa@p
  9498  21E9                     l759:	
  9499                           
  9500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  9501  21E9  0023               	movlb	3	; select bank3
  9502  21EA  0835               	movf	(_width+1)^(0+384),w
  9503  21EB  0020               	movlb	0	; select bank0
  9504  21EC  00C7               	movwf	otoa@w+1
  9505  21ED  0023               	movlb	3	; select bank3
  9506  21EE  0834               	movf	_width^(0+384),w
  9507  21EF  0020               	movlb	0	; select bank0
  9508  21F0  00C6               	movwf	otoa@w
  9509                           
  9510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  9511  21F1  0832               	movf	otoa@d,w
  9512  21F2  00C8               	movwf	otoa@n
  9513  21F3  0833               	movf	otoa@d+1,w
  9514  21F4  00C9               	movwf	otoa@n+1
  9515  21F5  0834               	movf	otoa@d+2,w
  9516  21F6  00CA               	movwf	otoa@n+2
  9517  21F7  0835               	movf	otoa@d+3,w
  9518  21F8  00CB               	movwf	otoa@n+3
  9519  21F9  0836               	movf	otoa@d+4,w
  9520  21FA  00CC               	movwf	otoa@n+4
  9521  21FB  0837               	movf	otoa@d+5,w
  9522  21FC  00CD               	movwf	otoa@n+5
  9523  21FD  0838               	movf	otoa@d+6,w
  9524  21FE  00CE               	movwf	otoa@n+6
  9525  21FF  0839               	movf	otoa@d+7,w
  9526  2200  00CF               	movwf	otoa@n+7
  9527                           
  9528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  9529  2201  304F               	movlw	79
  9530  2202  00D0               	movwf	otoa@i
  9531  2203  3000               	movlw	0
  9532  2204  00D1               	movwf	otoa@i+1
  9533                           
  9534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  9535  2205  0025               	movlb	5	; select bank5
  9536  2206  01EF               	clrf	(_dbuf^(0+640)+79)
  9537                           
  9538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  9539  2207  0020               	movlb	0	; select bank0
  9540  2208  01C4               	clrf	otoa@t
  9541  2209  01C5               	clrf	otoa@t+1
  9542                           
  9543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9544  220A  2A7E               	goto	l760
  9545  220B                     l7685:	
  9546  220B  0020               	movlb	0	; select bank0
  9547  220C  0848               	movf	otoa@n,w
  9548  220D  0449               	iorwf	otoa@n+1,w
  9549  220E  044A               	iorwf	otoa@n+2,w
  9550  220F  044B               	iorwf	otoa@n+3,w
  9551  2210  044C               	iorwf	otoa@n+4,w
  9552  2211  044D               	iorwf	otoa@n+5,w
  9553  2212  044E               	iorwf	otoa@n+6,w
  9554  2213  044F               	iorwf	otoa@n+7,w
  9555  2214  1D03               	skipz
  9556  2215  2A30               	goto	l7675
  9557  2216  0843               	movf	otoa@p+1,w
  9558  2217  3A80               	xorlw	128
  9559  2218  00BA               	movwf	??_otoa
  9560  2219  3080               	movlw	128
  9561  221A  023A               	subwf	??_otoa,w
  9562  221B  1D03               	skipz
  9563  221C  2A1F               	goto	u10605
  9564  221D  3001               	movlw	1
  9565  221E  0242               	subwf	otoa@p,w
  9566  221F                     u10605:	
  9567  221F  1803               	skipnc
  9568  2220  2A30               	goto	l7675
  9569  2221  0020               	movlb	0	; select bank0
  9570  2222  0847               	movf	otoa@w+1,w
  9571  2223  3A80               	xorlw	128
  9572  2224  00BA               	movwf	??_otoa
  9573  2225  3080               	movlw	128
  9574  2226  023A               	subwf	??_otoa,w
  9575  2227  1D03               	skipz
  9576  2228  2A2B               	goto	u10615
  9577  2229  3001               	movlw	1
  9578  222A  0246               	subwf	otoa@w,w
  9579  222B                     u10615:	
  9580  222B  1C03               	skipc
  9581  222C  2A89               	goto	l766
  9582  222D  0023               	movlb	3	; select bank3
  9583  222E  1CB8               	btfss	_flags^(0+384),1
  9584  222F  2A89               	goto	l766
  9585  2230                     l7675:	
  9586                           
  9587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  9588  2230  30FF               	movlw	255
  9589  2231  0020               	movlb	0	; select bank0
  9590  2232  07D0               	addwf	otoa@i,f
  9591  2233  30FF               	movlw	255
  9592  2234  3DD1               	addwfc	otoa@i+1,f
  9593                           
  9594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  9595  2235  3007               	movlw	7
  9596  2236  0548               	andwf	otoa@n,w
  9597  2237  00C4               	movwf	otoa@t
  9598  2238  3000               	movlw	0
  9599  2239  0549               	andwf	otoa@n+1,w
  9600  223A  00C5               	movwf	otoa@t+1
  9601                           
  9602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  9603  223B  0844               	movf	otoa@t,w
  9604  223C  3E30               	addlw	48
  9605  223D  00BA               	movwf	??_otoa
  9606  223E  0850               	movf	otoa@i,w
  9607  223F  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9608  2240  0086               	movwf	6
  9609  2241  3002               	movlw	2	; select bank5/6
  9610  2242  0087               	movwf	7
  9611  2243  083A               	movf	??_otoa,w
  9612  2244  0081               	movwf	1
  9613                           
  9614                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  9615  2245  30FF               	movlw	255
  9616  2246  07C2               	addwf	otoa@p,f
  9617  2247  30FF               	movlw	255
  9618  2248  3DC3               	addwfc	otoa@p+1,f
  9619                           
  9620                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  9621  2249  30FF               	movlw	255
  9622  224A  07C6               	addwf	otoa@w,f
  9623  224B  30FF               	movlw	255
  9624  224C  3DC7               	addwfc	otoa@w+1,f
  9625                           
  9626                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  9627  224D  3048               	movlw	low otoa@n
  9628  224E  0086               	movwf	6
  9629  224F  3000               	movlw	high otoa@n
  9630  2250  0087               	movwf	7
  9631  2251  3F40               	moviw [0]fsr1
  9632  2252  00BA               	movwf	??_otoa
  9633  2253  3F41               	moviw [1]fsr1
  9634  2254  00BB               	movwf	??_otoa+1
  9635  2255  3F42               	moviw [2]fsr1
  9636  2256  00BC               	movwf	??_otoa+2
  9637  2257  3F43               	moviw [3]fsr1
  9638  2258  00BD               	movwf	??_otoa+3
  9639  2259  3F44               	moviw [4]fsr1
  9640  225A  00BE               	movwf	??_otoa+4
  9641  225B  3F45               	moviw [5]fsr1
  9642  225C  00BF               	movwf	??_otoa+5
  9643  225D  3F46               	moviw [6]fsr1
  9644  225E  00C0               	movwf	??_otoa+6
  9645  225F  3F47               	moviw [7]fsr1
  9646  2260  00C1               	movwf	??_otoa+7
  9647  2261  3003               	movlw	3
  9648  2262                     u10575:	
  9649  2262  0020               	movlb	0	; select bank0
  9650  2263  36C1               	lsrf	??_otoa+7,f
  9651  2264  0CC0               	rrf	??_otoa+6,f
  9652  2265  0CBF               	rrf	??_otoa+5,f
  9653  2266  0CBE               	rrf	??_otoa+4,f
  9654  2267  0CBD               	rrf	??_otoa+3,f
  9655  2268  0CBC               	rrf	??_otoa+2,f
  9656  2269  0CBB               	rrf	??_otoa+1,f
  9657  226A  0CBA               	rrf	??_otoa,f
  9658  226B  0B89               	decfsz	9,f
  9659  226C  2A62               	goto	u10575
  9660  226D  0020               	movlb	0	; select bank0
  9661  226E  0841               	movf	??_otoa+7,w
  9662  226F  00CF               	movwf	otoa@n+7
  9663  2270  0840               	movf	??_otoa+6,w
  9664  2271  00CE               	movwf	otoa@n+6
  9665  2272  083F               	movf	??_otoa+5,w
  9666  2273  00CD               	movwf	otoa@n+5
  9667  2274  083E               	movf	??_otoa+4,w
  9668  2275  00CC               	movwf	otoa@n+4
  9669  2276  083D               	movf	??_otoa+3,w
  9670  2277  00CB               	movwf	otoa@n+3
  9671  2278  083C               	movf	??_otoa+2,w
  9672  2279  00CA               	movwf	otoa@n+2
  9673  227A  083B               	movf	??_otoa+1,w
  9674  227B  00C9               	movwf	otoa@n+1
  9675  227C  083A               	movf	??_otoa,w
  9676  227D  00C8               	movwf	otoa@n
  9677  227E                     l760:	
  9678                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  9679                           
  9680                           
  9681                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9682  227E  0851               	movf	otoa@i+1,w
  9683  227F  3A80               	xorlw	128
  9684  2280  00BA               	movwf	??_otoa
  9685  2281  3080               	movlw	128
  9686  2282  023A               	subwf	??_otoa,w
  9687  2283  1D03               	skipz
  9688  2284  2A87               	goto	u10585
  9689  2285  3001               	movlw	1
  9690  2286  0250               	subwf	otoa@i,w
  9691  2287                     u10585:	
  9692  2287  1803               	btfsc	3,0
  9693  2288  2A0B               	goto	l7685
  9694  2289                     l766:	
  9695                           
  9696                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  9697  2289  0023               	movlb	3	; select bank3
  9698  228A  1E38               	btfss	_flags^(0+384),4
  9699  228B  2AA2               	goto	l7701
  9700  228C  0020               	movlb	0	; select bank0
  9701  228D  0844               	movf	otoa@t,w
  9702  228E  0445               	iorwf	otoa@t+1,w
  9703  228F  1903               	btfsc	3,2
  9704  2290  2AA2               	goto	l7701
  9705                           
  9706                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  9707  2291  30FF               	movlw	255
  9708  2292  07D0               	addwf	otoa@i,f
  9709  2293  30FF               	movlw	255
  9710  2294  3DD1               	addwfc	otoa@i+1,f
  9711                           
  9712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  9713  2295  3030               	movlw	48
  9714  2296  00BA               	movwf	??_otoa
  9715  2297  0850               	movf	otoa@i,w
  9716  2298  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9717  2299  0086               	movwf	6
  9718  229A  3002               	movlw	2	; select bank5/6
  9719  229B  0087               	movwf	7
  9720  229C  083A               	movf	??_otoa,w
  9721  229D  0081               	movwf	1
  9722                           
  9723                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  9724  229E  30FF               	movlw	255
  9725  229F  07C6               	addwf	otoa@w,f
  9726  22A0  30FF               	movlw	255
  9727  22A1  3DC7               	addwfc	otoa@w+1,f
  9728  22A2                     l7701:	
  9729                           
  9730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  9731  22A2  0020               	movlb	0	; select bank0
  9732  22A3  0831               	movf	otoa@fp+1,w
  9733  22A4  00A7               	movwf	pad@fp+1
  9734  22A5  0830               	movf	otoa@fp,w
  9735  22A6  00A6               	movwf	pad@fp
  9736  22A7  0850               	movf	otoa@i,w
  9737  22A8  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9738  22A9  00BA               	movwf	??_otoa
  9739  22AA  083A               	movf	??_otoa,w
  9740  22AB  00A8               	movwf	pad@buf
  9741  22AC  0847               	movf	otoa@w+1,w
  9742  22AD  00AA               	movwf	pad@p+1
  9743  22AE  0846               	movf	otoa@w,w
  9744  22AF  00A9               	movwf	pad@p
  9745  22B0  31B2  2202         	fcall	_pad
  9746  22B2  0020               	movlb	0	; select bank0
  9747  22B3  0827               	movf	?_pad+1,w
  9748  22B4  00B1               	movwf	?_otoa+1
  9749  22B5  0826               	movf	?_pad,w
  9750  22B6  00B0               	movwf	?_otoa
  9751  22B7  0008               	return
  9752  22B8                     __end_of_otoa:	
  9753                           
  9754                           	psect	text20
  9755  0063                     __ptext20:	
  9756 ;; *************** function _efgtoa *****************
  9757 ;; Defined at:
  9758 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9759 ;; Parameters:    Size  Location     Type
  9760 ;;  fp              2    9[BANK1 ] PTR struct _IO_FILE
  9761 ;;		 -> vsnprintf@f(6), 
  9762 ;;  f               4   11[BANK1 ] PTR struct _IO_FILE
  9763 ;;  c               1   15[BANK1 ] unsigned char 
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;  u               4   72[BANK1 ] unsigned char 
  9766 ;;  g               4   64[BANK1 ] unsigned char 
  9767 ;;  l               4   58[BANK1 ] unsigned char 
  9768 ;;  h               4   54[BANK1 ] unsigned char 
  9769 ;;  ou              4   20[BANK1 ] unsigned char 
  9770 ;;  n               2   70[BANK1 ] int 
  9771 ;;  e               2   68[BANK1 ] int 
  9772 ;;  i               2   62[BANK1 ] int 
  9773 ;;  w               2   51[BANK1 ] int 
  9774 ;;  p               2   48[BANK1 ] int 
  9775 ;;  sign            2   46[BANK1 ] int 
  9776 ;;  d               2   44[BANK1 ] int 
  9777 ;;  ne              2   42[BANK1 ] int 
  9778 ;;  m               2   40[BANK1 ] int 
  9779 ;;  pp              2   38[BANK1 ] int 
  9780 ;;  t               2   36[BANK1 ] int 
  9781 ;;  mode            1   53[BANK1 ] unsigned char 
  9782 ;;  nmode           1   50[BANK1 ] unsigned char 
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  2    9[BANK1 ] int 
  9785 ;; Registers used:
  9786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9792 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9793 ;;      Locals:         0       0      56       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9794 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9795 ;;      Totals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9796 ;;Total ram usage:       67 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; Hardware stack levels required when called:    5
  9799 ;; This function calls:
  9800 ;;		___awdiv
  9801 ;;		___awmod
  9802 ;;		___fladd
  9803 ;;		___fldiv
  9804 ;;		___fleq
  9805 ;;		___flge
  9806 ;;		___flmul
  9807 ;;		___flneg
  9808 ;;		___flsub
  9809 ;;		___fltol
  9810 ;;		___fpclassifyf
  9811 ;;		_floorf
  9812 ;;		_isupper
  9813 ;;		_pad
  9814 ;;		_strcpy
  9815 ;;		_tolower
  9816 ;; This function is called by:
  9817 ;;		_vfpfcnvrt
  9818 ;; This function uses a non-reentrant model
  9819 ;;
  9820                           
  9821                           
  9822                           ;psect for function _efgtoa
  9823  0063                     _efgtoa:	
  9824                           
  9825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.05\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  9826                           
  9827                           ;incstack = 0
  9828                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9829  0063  0021               	movlb	1	; select bank1
  9830  0064  01CE               	clrf	efgtoa@sign^(0+128)
  9831  0065  01CF               	clrf	(efgtoa@sign+1)^(0+128)
  9832                           
  9833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  9834  0066  082E               	movf	(efgtoa@f+3)^(0+128),w
  9835  0067  00E3               	movwf	(efgtoa@g+3)^(0+128)
  9836  0068  082D               	movf	(efgtoa@f+2)^(0+128),w
  9837  0069  00E2               	movwf	(efgtoa@g+2)^(0+128)
  9838  006A  082C               	movf	(efgtoa@f+1)^(0+128),w
  9839  006B  00E1               	movwf	(efgtoa@g+1)^(0+128)
  9840  006C  082B               	movf	efgtoa@f^(0+128),w
  9841  006D  00E0               	movwf	efgtoa@g^(0+128)
  9842                           
  9843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  9844  006E  0863               	movf	(efgtoa@g+3)^(0+128),w
  9845  006F  0020               	movlb	0	; select bank0
  9846  0070  00DD               	movwf	___flge@ff1+3
  9847  0071  0021               	movlb	1	; select bank1
  9848  0072  0862               	movf	(efgtoa@g+2)^(0+128),w
  9849  0073  0020               	movlb	0	; select bank0
  9850  0074  00DC               	movwf	___flge@ff1+2
  9851  0075  0021               	movlb	1	; select bank1
  9852  0076  0861               	movf	(efgtoa@g+1)^(0+128),w
  9853  0077  0020               	movlb	0	; select bank0
  9854  0078  00DB               	movwf	___flge@ff1+1
  9855  0079  0021               	movlb	1	; select bank1
  9856  007A  0860               	movf	efgtoa@g^(0+128),w
  9857  007B  0020               	movlb	0	; select bank0
  9858  007C  00DA               	movwf	___flge@ff1
  9859  007D  3000               	movlw	0
  9860  007E  00E1               	movwf	___flge@ff2+3
  9861  007F  3000               	movlw	0
  9862  0080  00E0               	movwf	___flge@ff2+2
  9863  0081  3000               	movlw	0
  9864  0082  00DF               	movwf	___flge@ff2+1
  9865  0083  3000               	movlw	0
  9866  0084  00DE               	movwf	___flge@ff2
  9867  0085  31B6  2602  3180   	fcall	___flge
  9868  0088  1803               	btfsc	3,0
  9869  0089  28A3               	goto	l7379
  9870                           
  9871                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  9872  008A  3001               	movlw	1
  9873  008B  0021               	movlb	1	; select bank1
  9874  008C  00CE               	movwf	efgtoa@sign^(0+128)
  9875  008D  3000               	movlw	0
  9876  008E  00CF               	movwf	(efgtoa@sign^(0+128)+1)
  9877                           
  9878                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  9879  008F  0863               	movf	(efgtoa@g+3)^(0+128),w
  9880  0090  00F4               	movwf	___flneg@f1+3
  9881  0091  0862               	movf	(efgtoa@g+2)^(0+128),w
  9882  0092  00F3               	movwf	___flneg@f1+2
  9883  0093  0861               	movf	(efgtoa@g+1)^(0+128),w
  9884  0094  00F2               	movwf	___flneg@f1+1
  9885  0095  0860               	movf	efgtoa@g^(0+128),w
  9886  0096  00F1               	movwf	___flneg@f1
  9887  0097  31BD  253B  3180   	fcall	___flneg
  9888  009A  0874               	movf	?___flneg+3,w
  9889  009B  0021               	movlb	1	; select bank1
  9890  009C  00E3               	movwf	(efgtoa@g+3)^(0+128)
  9891  009D  0873               	movf	?___flneg+2,w
  9892  009E  00E2               	movwf	(efgtoa@g+2)^(0+128)
  9893  009F  0872               	movf	?___flneg+1,w
  9894  00A0  00E1               	movwf	(efgtoa@g+1)^(0+128)
  9895  00A1  0871               	movf	?___flneg,w
  9896  00A2  00E0               	movwf	efgtoa@g^(0+128)
  9897  00A3                     l7379:	
  9898                           
  9899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  9900  00A3  0021               	movlb	1	; select bank1
  9901  00A4  01E6               	clrf	efgtoa@n^(0+128)
  9902  00A5  01E7               	clrf	(efgtoa@n+1)^(0+128)
  9903                           
  9904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  9905  00A6  0023               	movlb	3	; select bank3
  9906  00A7  0835               	movf	(_width+1)^(0+384),w
  9907  00A8  0021               	movlb	1	; select bank1
  9908  00A9  00D4               	movwf	(efgtoa@w+1)^(0+128)
  9909  00AA  0023               	movlb	3	; select bank3
  9910  00AB  0834               	movf	_width^(0+384),w
  9911  00AC  0021               	movlb	1	; select bank1
  9912  00AD  00D3               	movwf	efgtoa@w^(0+128)
  9913                           
  9914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  9915  00AE  084E               	movf	efgtoa@sign^(0+128),w
  9916  00AF  044F               	iorwf	(efgtoa@sign+1)^(0+128),w
  9917  00B0  1D03               	btfss	3,2
  9918  00B1  28B5               	goto	l7387
  9919  00B2  0023               	movlb	3	; select bank3
  9920  00B3  1D38               	btfss	_flags^(0+384),2
  9921  00B4  28CE               	goto	l7399
  9922  00B5                     l7387:	
  9923                           
  9924                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  9925  00B5  0021               	movlb	1	; select bank1
  9926  00B6  084E               	movf	efgtoa@sign^(0+128),w
  9927  00B7  044F               	iorwf	(efgtoa@sign+1)^(0+128),w
  9928  00B8  1D03               	btfss	3,2
  9929  00B9  28BC               	goto	l7391
  9930  00BA  302B               	movlw	43
  9931  00BB  28BD               	goto	L3
  9932  00BC                     l7391:	
  9933  00BC  302D               	movlw	45
  9934  00BD                     L3:	
  9935  00BD  00B8               	movwf	_efgtoa$1249^(0+128)
  9936  00BE  3000               	movlw	0
  9937  00BF  00B9               	movwf	(_efgtoa$1249^(0+128)+1)
  9938  00C0  0838               	movf	_efgtoa$1249^(0+128),w
  9939  00C1  00B0               	movwf	??_efgtoa^(0+128)
  9940  00C2  0830               	movf	??_efgtoa^(0+128),w
  9941  00C3  0025               	movlb	5	; select bank5
  9942  00C4  00A0               	movwf	_dbuf^(0+640)
  9943                           
  9944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  9945  00C5  3001               	movlw	1
  9946  00C6  0021               	movlb	1	; select bank1
  9947  00C7  07E6               	addwf	efgtoa@n^(0+128),f
  9948  00C8  3000               	movlw	0
  9949  00C9  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
  9950                           
  9951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  9952  00CA  30FF               	movlw	255
  9953  00CB  07D3               	addwf	efgtoa@w^(0+128),f
  9954  00CC  30FF               	movlw	255
  9955  00CD  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
  9956  00CE                     l7399:	
  9957                           
  9958                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  9959  00CE  0021               	movlb	1	; select bank1
  9960  00CF  0863               	movf	(efgtoa@g+3)^(0+128),w
  9961  00D0  00F4               	movwf	___fpclassifyf@x+3
  9962  00D1  0862               	movf	(efgtoa@g+2)^(0+128),w
  9963  00D2  00F3               	movwf	___fpclassifyf@x+2
  9964  00D3  0861               	movf	(efgtoa@g+1)^(0+128),w
  9965  00D4  00F2               	movwf	___fpclassifyf@x+1
  9966  00D5  0860               	movf	efgtoa@g^(0+128),w
  9967  00D6  00F1               	movwf	___fpclassifyf@x
  9968  00D7  31B5  258A  3180   	fcall	___fpclassifyf
  9969  00DA  0371               	decf	?___fpclassifyf,w
  9970  00DB  0472               	iorwf	?___fpclassifyf+1,w
  9971  00DC  1D03               	btfss	3,2
  9972  00DD  292C               	goto	l7417
  9973  00DE  0021               	movlb	1	; select bank1
  9974  00DF  082F               	movf	efgtoa@c^(0+128),w
  9975  00E0  3EBF               	addlw	191
  9976  00E1  00B0               	movwf	??_efgtoa^(0+128)
  9977  00E2  30FF               	movlw	255
  9978  00E3  1803               	skipnc
  9979  00E4  3000               	movlw	0
  9980  00E5  00B1               	movwf	(??_efgtoa^(0+128)+1)
  9981  00E6  3000               	movlw	0
  9982  00E7  0231               	subwf	(??_efgtoa+1)^(0+128),w
  9983  00E8  301A               	movlw	26
  9984  00E9  1903               	skipnz
  9985  00EA  0230               	subwf	??_efgtoa^(0+128),w
  9986  00EB  1803               	btfsc	3,0
  9987  00EC  28EF               	goto	u10080
  9988  00ED  3001               	movlw	1
  9989  00EE  28F0               	goto	u10090
  9990  00EF                     u10080:	
  9991  00EF  3000               	movlw	0
  9992  00F0                     u10090:	
  9993  00F0  00B2               	movwf	(??_efgtoa+2)^(0+128)
  9994  00F1  01B3               	clrf	((??_efgtoa+2)^(0+128)+1)
  9995  00F2  0832               	movf	(??_efgtoa+2)^(0+128),w
  9996  00F3  00BA               	movwf	_efgtoa$1250^(0+128)
  9997  00F4  0833               	movf	(??_efgtoa+3)^(0+128),w
  9998  00F5  00BB               	movwf	(_efgtoa$1250+1)^(0+128)
  9999  00F6  083A               	movf	_efgtoa$1250^(0+128),w
 10000  00F7  043B               	iorwf	(_efgtoa$1250+1)^(0+128),w
 10001  00F8  1903               	btfsc	3,2
 10002  00F9  28FE               	goto	l7409
 10003                           
 10004                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
 10005  00FA  3044               	movlw	low (STR_27| (0+32768))
 10006  00FB  00F1               	movwf	strcpy@src
 10007  00FC  30BB               	movlw	high (STR_27| (0+32768))
 10008  00FD  2901               	goto	L4
 10009  00FE                     l7409:	
 10010                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
 10011                           
 10012                           
 10013                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
 10014  00FE  3054               	movlw	low (STR_28| (0+32768))
 10015  00FF  00F1               	movwf	strcpy@src
 10016  0100  30BB               	movlw	high (STR_28| (0+32768))
 10017  0101                     L4:	
 10018  0101  00F2               	movwf	strcpy@src+1
 10019  0102  0866               	movf	efgtoa@n^(0+128),w
 10020  0103  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10021  0104  31BE  26A1  3180   	fcall	_strcpy
 10022                           
 10023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 10024  0107  30FD               	movlw	253
 10025  0108  0021               	movlb	1	; select bank1
 10026  0109  07D3               	addwf	efgtoa@w^(0+128),f
 10027  010A  30FF               	movlw	255
 10028  010B  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 10029                           
 10030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
 10031  010C  082A               	movf	(efgtoa@fp+1)^(0+128),w
 10032  010D  0020               	movlb	0	; select bank0
 10033  010E  00A7               	movwf	pad@fp+1
 10034  010F  0021               	movlb	1	; select bank1
 10035  0110  0829               	movf	efgtoa@fp^(0+128),w
 10036  0111  0020               	movlb	0	; select bank0
 10037  0112  00A6               	movwf	pad@fp
 10038  0113  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10039  0114  0021               	movlb	1	; select bank1
 10040  0115  00B0               	movwf	??_efgtoa^(0+128)
 10041  0116  0830               	movf	??_efgtoa^(0+128),w
 10042  0117  0020               	movlb	0	; select bank0
 10043  0118  00A8               	movwf	pad@buf
 10044  0119  0021               	movlb	1	; select bank1
 10045  011A  0854               	movf	(efgtoa@w+1)^(0+128),w
 10046  011B  0020               	movlb	0	; select bank0
 10047  011C  00AA               	movwf	pad@p+1
 10048  011D  0021               	movlb	1	; select bank1
 10049  011E  0853               	movf	efgtoa@w^(0+128),w
 10050  011F  0020               	movlb	0	; select bank0
 10051  0120  00A9               	movwf	pad@p
 10052  0121  31B2  2202         	fcall	_pad
 10053  0123  0020               	movlb	0	; select bank0
 10054  0124  0827               	movf	?_pad+1,w
 10055  0125  0021               	movlb	1	; select bank1
 10056  0126  00AA               	movwf	(?_efgtoa+1)^(0+128)
 10057  0127  0020               	movlb	0	; select bank0
 10058  0128  0826               	movf	?_pad,w
 10059  0129  0021               	movlb	1	; select bank1
 10060  012A  00A9               	movwf	?_efgtoa^(0+128)
 10061  012B  0008               	return
 10062  012C                     l7417:	
 10063                           
 10064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10065  012C  0021               	movlb	1	; select bank1
 10066  012D  0863               	movf	(efgtoa@g+3)^(0+128),w
 10067  012E  00F4               	movwf	___fpclassifyf@x+3
 10068  012F  0862               	movf	(efgtoa@g+2)^(0+128),w
 10069  0130  00F3               	movwf	___fpclassifyf@x+2
 10070  0131  0861               	movf	(efgtoa@g+1)^(0+128),w
 10071  0132  00F2               	movwf	___fpclassifyf@x+1
 10072  0133  0860               	movf	efgtoa@g^(0+128),w
 10073  0134  00F1               	movwf	___fpclassifyf@x
 10074  0135  31B5  258A  3180   	fcall	___fpclassifyf
 10075  0138  0871               	movf	?___fpclassifyf,w
 10076  0139  0472               	iorwf	?___fpclassifyf+1,w
 10077  013A  1D03               	btfss	3,2
 10078  013B  298A               	goto	l7435
 10079  013C  0021               	movlb	1	; select bank1
 10080  013D  082F               	movf	efgtoa@c^(0+128),w
 10081  013E  3EBF               	addlw	191
 10082  013F  00B0               	movwf	??_efgtoa^(0+128)
 10083  0140  30FF               	movlw	255
 10084  0141  1803               	skipnc
 10085  0142  3000               	movlw	0
 10086  0143  00B1               	movwf	(??_efgtoa^(0+128)+1)
 10087  0144  3000               	movlw	0
 10088  0145  0231               	subwf	(??_efgtoa+1)^(0+128),w
 10089  0146  301A               	movlw	26
 10090  0147  1903               	skipnz
 10091  0148  0230               	subwf	??_efgtoa^(0+128),w
 10092  0149  1803               	btfsc	3,0
 10093  014A  294D               	goto	u10120
 10094  014B  3001               	movlw	1
 10095  014C  294E               	goto	u10130
 10096  014D                     u10120:	
 10097  014D  3000               	movlw	0
 10098  014E                     u10130:	
 10099  014E  00B2               	movwf	(??_efgtoa+2)^(0+128)
 10100  014F  01B3               	clrf	((??_efgtoa+2)^(0+128)+1)
 10101  0150  0832               	movf	(??_efgtoa+2)^(0+128),w
 10102  0151  00BC               	movwf	_efgtoa$1254^(0+128)
 10103  0152  0833               	movf	(??_efgtoa+3)^(0+128),w
 10104  0153  00BD               	movwf	(_efgtoa$1254+1)^(0+128)
 10105  0154  083C               	movf	_efgtoa$1254^(0+128),w
 10106  0155  043D               	iorwf	(_efgtoa$1254+1)^(0+128),w
 10107  0156  1903               	btfsc	3,2
 10108  0157  295C               	goto	l7427
 10109                           
 10110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
 10111  0158  3048               	movlw	low (STR_31| (0+32768))
 10112  0159  00F1               	movwf	strcpy@src
 10113  015A  30BB               	movlw	high (STR_31| (0+32768))
 10114  015B  295F               	goto	L5
 10115  015C                     l7427:	
 10116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
 10117                           
 10118                           
 10119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
 10120  015C  305C               	movlw	low (STR_32| (0+32768))
 10121  015D  00F1               	movwf	strcpy@src
 10122  015E  30BB               	movlw	high (STR_32| (0+32768))
 10123  015F                     L5:	
 10124  015F  00F2               	movwf	strcpy@src+1
 10125  0160  0866               	movf	efgtoa@n^(0+128),w
 10126  0161  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10127  0162  31BE  26A1  3180   	fcall	_strcpy
 10128                           
 10129                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
 10130  0165  30FD               	movlw	253
 10131  0166  0021               	movlb	1	; select bank1
 10132  0167  07D3               	addwf	efgtoa@w^(0+128),f
 10133  0168  30FF               	movlw	255
 10134  0169  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 10135                           
 10136                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
 10137  016A  082A               	movf	(efgtoa@fp+1)^(0+128),w
 10138  016B  0020               	movlb	0	; select bank0
 10139  016C  00A7               	movwf	pad@fp+1
 10140  016D  0021               	movlb	1	; select bank1
 10141  016E  0829               	movf	efgtoa@fp^(0+128),w
 10142  016F  0020               	movlb	0	; select bank0
 10143  0170  00A6               	movwf	pad@fp
 10144  0171  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 10145  0172  0021               	movlb	1	; select bank1
 10146  0173  00B0               	movwf	??_efgtoa^(0+128)
 10147  0174  0830               	movf	??_efgtoa^(0+128),w
 10148  0175  0020               	movlb	0	; select bank0
 10149  0176  00A8               	movwf	pad@buf
 10150  0177  0021               	movlb	1	; select bank1
 10151  0178  0854               	movf	(efgtoa@w+1)^(0+128),w
 10152  0179  0020               	movlb	0	; select bank0
 10153  017A  00AA               	movwf	pad@p+1
 10154  017B  0021               	movlb	1	; select bank1
 10155  017C  0853               	movf	efgtoa@w^(0+128),w
 10156  017D  0020               	movlb	0	; select bank0
 10157  017E  00A9               	movwf	pad@p
 10158  017F  31B2  2202         	fcall	_pad
 10159  0181  0020               	movlb	0	; select bank0
 10160  0182  0827               	movf	?_pad+1,w
 10161  0183  0021               	movlb	1	; select bank1
 10162  0184  00AA               	movwf	(?_efgtoa+1)^(0+128)
 10163  0185  0020               	movlb	0	; select bank0
 10164  0186  0826               	movf	?_pad,w
 10165  0187  0021               	movlb	1	; select bank1
 10166  0188  00A9               	movwf	?_efgtoa^(0+128)
 10167  0189  0008               	return
 10168  018A                     l7435:	
 10169                           
 10170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
 10171  018A  303F               	movlw	63
 10172  018B  0021               	movlb	1	; select bank1
 10173  018C  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10174  018D  3080               	movlw	128
 10175  018E  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10176  018F  3000               	movlw	0
 10177  0190  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10178  0191  3000               	movlw	0
 10179  0192  00E8               	movwf	efgtoa@u^(0+128)
 10180                           
 10181                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
 10182  0193  01E4               	clrf	efgtoa@e^(0+128)
 10183  0194  01E5               	clrf	(efgtoa@e+1)^(0+128)
 10184                           
 10185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
 10186  0195  0863               	movf	(efgtoa@g+3)^(0+128),w
 10187  0196  00F4               	movwf	___fleq@ff1+3
 10188  0197  0862               	movf	(efgtoa@g+2)^(0+128),w
 10189  0198  00F3               	movwf	___fleq@ff1+2
 10190  0199  0861               	movf	(efgtoa@g+1)^(0+128),w
 10191  019A  00F2               	movwf	___fleq@ff1+1
 10192  019B  0860               	movf	efgtoa@g^(0+128),w
 10193  019C  00F1               	movwf	___fleq@ff1
 10194  019D  3000               	movlw	0
 10195  019E  00F8               	movwf	___fleq@ff2+3
 10196  019F  3000               	movlw	0
 10197  01A0  00F7               	movwf	___fleq@ff2+2
 10198  01A1  3000               	movlw	0
 10199  01A2  00F6               	movwf	___fleq@ff2+1
 10200  01A3  3000               	movlw	0
 10201  01A4  00F5               	movwf	___fleq@ff2
 10202  01A5  31B1  21B9  3180   	fcall	___fleq
 10203  01A8  1C03               	btfss	3,0
 10204  01A9  29DB               	goto	l7447
 10205  01AA  2A6A               	goto	l7455
 10206  01AB                     l7443:	
 10207                           
 10208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
 10209  01AB  3041               	movlw	65
 10210  01AC  0020               	movlb	0	; select bank0
 10211  01AD  00A9               	movwf	___flmul@b+3
 10212  01AE  3020               	movlw	32
 10213  01AF  00A8               	movwf	___flmul@b+2
 10214  01B0  3000               	movlw	0
 10215  01B1  00A7               	movwf	___flmul@b+1
 10216  01B2  3000               	movlw	0
 10217  01B3  00A6               	movwf	___flmul@b
 10218  01B4  0021               	movlb	1	; select bank1
 10219  01B5  086B               	movf	(efgtoa@u+3)^(0+128),w
 10220  01B6  0020               	movlb	0	; select bank0
 10221  01B7  00AD               	movwf	___flmul@a+3
 10222  01B8  0021               	movlb	1	; select bank1
 10223  01B9  086A               	movf	(efgtoa@u+2)^(0+128),w
 10224  01BA  0020               	movlb	0	; select bank0
 10225  01BB  00AC               	movwf	___flmul@a+2
 10226  01BC  0021               	movlb	1	; select bank1
 10227  01BD  0869               	movf	(efgtoa@u+1)^(0+128),w
 10228  01BE  0020               	movlb	0	; select bank0
 10229  01BF  00AB               	movwf	___flmul@a+1
 10230  01C0  0021               	movlb	1	; select bank1
 10231  01C1  0868               	movf	efgtoa@u^(0+128),w
 10232  01C2  0020               	movlb	0	; select bank0
 10233  01C3  00AA               	movwf	___flmul@a
 10234  01C4  3190  20D5  3180   	fcall	___flmul
 10235  01C7  0020               	movlb	0	; select bank0
 10236  01C8  0829               	movf	?___flmul+3,w
 10237  01C9  0021               	movlb	1	; select bank1
 10238  01CA  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10239  01CB  0020               	movlb	0	; select bank0
 10240  01CC  0828               	movf	?___flmul+2,w
 10241  01CD  0021               	movlb	1	; select bank1
 10242  01CE  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10243  01CF  0020               	movlb	0	; select bank0
 10244  01D0  0827               	movf	?___flmul+1,w
 10245  01D1  0021               	movlb	1	; select bank1
 10246  01D2  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10247  01D3  0020               	movlb	0	; select bank0
 10248  01D4  0826               	movf	?___flmul,w
 10249  01D5  0021               	movlb	1	; select bank1
 10250  01D6  00E8               	movwf	efgtoa@u^(0+128)
 10251                           
 10252                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
 10253  01D7  3001               	movlw	1
 10254  01D8  07E4               	addwf	efgtoa@e^(0+128),f
 10255  01D9  3000               	movlw	0
 10256  01DA  3DE5               	addwfc	(efgtoa@e+1)^(0+128),f
 10257  01DB                     l7447:	
 10258                           
 10259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
 10260  01DB  0021               	movlb	1	; select bank1
 10261  01DC  0863               	movf	(efgtoa@g+3)^(0+128),w
 10262  01DD  0020               	movlb	0	; select bank0
 10263  01DE  00DD               	movwf	___flge@ff1+3
 10264  01DF  0021               	movlb	1	; select bank1
 10265  01E0  0862               	movf	(efgtoa@g+2)^(0+128),w
 10266  01E1  0020               	movlb	0	; select bank0
 10267  01E2  00DC               	movwf	___flge@ff1+2
 10268  01E3  0021               	movlb	1	; select bank1
 10269  01E4  0861               	movf	(efgtoa@g+1)^(0+128),w
 10270  01E5  0020               	movlb	0	; select bank0
 10271  01E6  00DB               	movwf	___flge@ff1+1
 10272  01E7  0021               	movlb	1	; select bank1
 10273  01E8  0860               	movf	efgtoa@g^(0+128),w
 10274  01E9  0020               	movlb	0	; select bank0
 10275  01EA  00DA               	movwf	___flge@ff1
 10276  01EB  3041               	movlw	65
 10277  01EC  00A9               	movwf	___flmul@b+3
 10278  01ED  3020               	movlw	32
 10279  01EE  00A8               	movwf	___flmul@b+2
 10280  01EF  3000               	movlw	0
 10281  01F0  00A7               	movwf	___flmul@b+1
 10282  01F1  3000               	movlw	0
 10283  01F2  00A6               	movwf	___flmul@b
 10284  01F3  0021               	movlb	1	; select bank1
 10285  01F4  086B               	movf	(efgtoa@u+3)^(0+128),w
 10286  01F5  0020               	movlb	0	; select bank0
 10287  01F6  00AD               	movwf	___flmul@a+3
 10288  01F7  0021               	movlb	1	; select bank1
 10289  01F8  086A               	movf	(efgtoa@u+2)^(0+128),w
 10290  01F9  0020               	movlb	0	; select bank0
 10291  01FA  00AC               	movwf	___flmul@a+2
 10292  01FB  0021               	movlb	1	; select bank1
 10293  01FC  0869               	movf	(efgtoa@u+1)^(0+128),w
 10294  01FD  0020               	movlb	0	; select bank0
 10295  01FE  00AB               	movwf	___flmul@a+1
 10296  01FF  0021               	movlb	1	; select bank1
 10297  0200  0868               	movf	efgtoa@u^(0+128),w
 10298  0201  0020               	movlb	0	; select bank0
 10299  0202  00AA               	movwf	___flmul@a
 10300  0203  3190  20D5  3180   	fcall	___flmul
 10301  0206  0020               	movlb	0	; select bank0
 10302  0207  0829               	movf	?___flmul+3,w
 10303  0208  00E1               	movwf	___flge@ff2+3
 10304  0209  0828               	movf	?___flmul+2,w
 10305  020A  00E0               	movwf	___flge@ff2+2
 10306  020B  0827               	movf	?___flmul+1,w
 10307  020C  00DF               	movwf	___flge@ff2+1
 10308  020D  0826               	movf	?___flmul,w
 10309  020E  00DE               	movwf	___flge@ff2
 10310  020F  31B6  2602  3180   	fcall	___flge
 10311  0212  1C03               	btfss	3,0
 10312  0213  2A45               	goto	l7453
 10313  0214  29AB               	goto	l7443
 10314  0215                     l7449:	
 10315                           
 10316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
 10317  0215  3041               	movlw	65
 10318  0216  0020               	movlb	0	; select bank0
 10319  0217  00C3               	movwf	___fldiv@a+3
 10320  0218  3020               	movlw	32
 10321  0219  00C2               	movwf	___fldiv@a+2
 10322  021A  3000               	movlw	0
 10323  021B  00C1               	movwf	___fldiv@a+1
 10324  021C  3000               	movlw	0
 10325  021D  00C0               	movwf	___fldiv@a
 10326  021E  0021               	movlb	1	; select bank1
 10327  021F  086B               	movf	(efgtoa@u+3)^(0+128),w
 10328  0220  0020               	movlb	0	; select bank0
 10329  0221  00C7               	movwf	___fldiv@b+3
 10330  0222  0021               	movlb	1	; select bank1
 10331  0223  086A               	movf	(efgtoa@u+2)^(0+128),w
 10332  0224  0020               	movlb	0	; select bank0
 10333  0225  00C6               	movwf	___fldiv@b+2
 10334  0226  0021               	movlb	1	; select bank1
 10335  0227  0869               	movf	(efgtoa@u+1)^(0+128),w
 10336  0228  0020               	movlb	0	; select bank0
 10337  0229  00C5               	movwf	___fldiv@b+1
 10338  022A  0021               	movlb	1	; select bank1
 10339  022B  0868               	movf	efgtoa@u^(0+128),w
 10340  022C  0020               	movlb	0	; select bank0
 10341  022D  00C4               	movwf	___fldiv@b
 10342  022E  319A  22B3  3180   	fcall	___fldiv
 10343  0231  0020               	movlb	0	; select bank0
 10344  0232  0843               	movf	?___fldiv+3,w
 10345  0233  0021               	movlb	1	; select bank1
 10346  0234  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10347  0235  0020               	movlb	0	; select bank0
 10348  0236  0842               	movf	?___fldiv+2,w
 10349  0237  0021               	movlb	1	; select bank1
 10350  0238  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10351  0239  0020               	movlb	0	; select bank0
 10352  023A  0841               	movf	?___fldiv+1,w
 10353  023B  0021               	movlb	1	; select bank1
 10354  023C  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10355  023D  0020               	movlb	0	; select bank0
 10356  023E  0840               	movf	?___fldiv,w
 10357  023F  0021               	movlb	1	; select bank1
 10358  0240  00E8               	movwf	efgtoa@u^(0+128)
 10359                           
 10360                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
 10361  0241  30FF               	movlw	255
 10362  0242  07E4               	addwf	efgtoa@e^(0+128),f
 10363  0243  30FF               	movlw	255
 10364  0244  3DE5               	addwfc	(efgtoa@e+1)^(0+128),f
 10365  0245                     l7453:	
 10366                           
 10367                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
 10368  0245  0021               	movlb	1	; select bank1
 10369  0246  0863               	movf	(efgtoa@g+3)^(0+128),w
 10370  0247  0020               	movlb	0	; select bank0
 10371  0248  00DD               	movwf	___flge@ff1+3
 10372  0249  0021               	movlb	1	; select bank1
 10373  024A  0862               	movf	(efgtoa@g+2)^(0+128),w
 10374  024B  0020               	movlb	0	; select bank0
 10375  024C  00DC               	movwf	___flge@ff1+2
 10376  024D  0021               	movlb	1	; select bank1
 10377  024E  0861               	movf	(efgtoa@g+1)^(0+128),w
 10378  024F  0020               	movlb	0	; select bank0
 10379  0250  00DB               	movwf	___flge@ff1+1
 10380  0251  0021               	movlb	1	; select bank1
 10381  0252  0860               	movf	efgtoa@g^(0+128),w
 10382  0253  0020               	movlb	0	; select bank0
 10383  0254  00DA               	movwf	___flge@ff1
 10384  0255  0021               	movlb	1	; select bank1
 10385  0256  086B               	movf	(efgtoa@u+3)^(0+128),w
 10386  0257  0020               	movlb	0	; select bank0
 10387  0258  00E1               	movwf	___flge@ff2+3
 10388  0259  0021               	movlb	1	; select bank1
 10389  025A  086A               	movf	(efgtoa@u+2)^(0+128),w
 10390  025B  0020               	movlb	0	; select bank0
 10391  025C  00E0               	movwf	___flge@ff2+2
 10392  025D  0021               	movlb	1	; select bank1
 10393  025E  0869               	movf	(efgtoa@u+1)^(0+128),w
 10394  025F  0020               	movlb	0	; select bank0
 10395  0260  00DF               	movwf	___flge@ff2+1
 10396  0261  0021               	movlb	1	; select bank1
 10397  0262  0868               	movf	efgtoa@u^(0+128),w
 10398  0263  0020               	movlb	0	; select bank0
 10399  0264  00DE               	movwf	___flge@ff2
 10400  0265  31B6  2602  3180   	fcall	___flge
 10401  0268  1C03               	btfss	3,0
 10402  0269  2A15               	goto	l7449
 10403  026A                     l7455:	
 10404                           
 10405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
 10406  026A  0021               	movlb	1	; select bank1
 10407  026B  082F               	movf	efgtoa@c^(0+128),w
 10408  026C  00B0               	movwf	??_efgtoa^(0+128)
 10409  026D  01B1               	clrf	(??_efgtoa^(0+128)+1)
 10410  026E  0830               	movf	??_efgtoa^(0+128),w
 10411  026F  00F7               	movwf	tolower@c
 10412  0270  0831               	movf	(??_efgtoa+1)^(0+128),w
 10413  0271  00F8               	movwf	tolower@c+1
 10414  0272  31BF  2703  3180   	fcall	_tolower
 10415  0275  0877               	movf	?_tolower,w
 10416  0276  0021               	movlb	1	; select bank1
 10417  0277  00B2               	movwf	(??_efgtoa+2)^(0+128)
 10418  0278  0832               	movf	(??_efgtoa+2)^(0+128),w
 10419  0279  00D5               	movwf	efgtoa@mode^(0+128)
 10420                           
 10421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
 10422  027A  0855               	movf	efgtoa@mode^(0+128),w
 10423  027B  00B0               	movwf	??_efgtoa^(0+128)
 10424  027C  0830               	movf	??_efgtoa^(0+128),w
 10425  027D  00D2               	movwf	efgtoa@nmode^(0+128)
 10426                           
 10427                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
 10428  027E  3067               	movlw	103
 10429  027F  0655               	xorwf	efgtoa@mode^(0+128),w
 10430  0280  1D03               	btfss	3,2
 10431  0281  2A9E               	goto	l694
 10432                           
 10433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
 10434  0282  0023               	movlb	3	; select bank3
 10435  0283  0836               	movf	_prec^(0+384),w
 10436  0284  0437               	iorwf	(_prec+1)^(0+384),w
 10437  0285  1D03               	btfss	3,2
 10438  0286  2A8B               	goto	l695
 10439                           
 10440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
 10441  0287  3001               	movlw	1
 10442  0288  00B6               	movwf	_prec^(0+384)
 10443  0289  3000               	movlw	0
 10444  028A  00B7               	movwf	(_prec^(0+384)+1)
 10445  028B                     l695:	
 10446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 382:   }
 10447                           
 10448                           
 10449                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
 10450  028B  0837               	movf	(_prec+1)^(0+384),w
 10451  028C  3A80               	xorlw	128
 10452  028D  0021               	movlb	1	; select bank1
 10453  028E  00B0               	movwf	??_efgtoa^(0+128)
 10454  028F  3080               	movlw	128
 10455  0290  0230               	subwf	??_efgtoa^(0+128),w
 10456  0291  1D03               	skipz
 10457  0292  2A96               	goto	u10205
 10458  0293  3001               	movlw	1
 10459  0294  0023               	movlb	3	; select bank3
 10460  0295  0236               	subwf	_prec^(0+384),w
 10461  0296                     u10205:	
 10462  0296  1803               	skipnc
 10463  0297  2AA1               	goto	l7467
 10464  0298                     l7465:	
 10465  0298  3006               	movlw	6
 10466  0299  0021               	movlb	1	; select bank1
 10467  029A  00D0               	movwf	efgtoa@p^(0+128)
 10468  029B  3000               	movlw	0
 10469  029C  00D1               	movwf	(efgtoa@p^(0+128)+1)
 10470  029D  2AA9               	goto	l7473
 10471  029E                     l694:	
 10472                           
 10473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
 10474  029E  0023               	movlb	3	; select bank3
 10475  029F  1BB7               	btfsc	(_prec+1)^(0+384),7
 10476  02A0  2A98               	goto	l7465
 10477  02A1                     l7467:	
 10478  02A1  0023               	movlb	3	; select bank3
 10479  02A2  0837               	movf	(_prec+1)^(0+384),w
 10480  02A3  0021               	movlb	1	; select bank1
 10481  02A4  00D1               	movwf	(efgtoa@p+1)^(0+128)
 10482  02A5  0023               	movlb	3	; select bank3
 10483  02A6  0836               	movf	_prec^(0+384),w
 10484  02A7  0021               	movlb	1	; select bank1
 10485  02A8  00D0               	movwf	efgtoa@p^(0+128)
 10486  02A9                     l7473:	
 10487                           
 10488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
 10489  02A9  3067               	movlw	103
 10490  02AA  0655               	xorwf	efgtoa@mode^(0+128),w
 10491  02AB  1D03               	btfss	3,2
 10492  02AC  2AD2               	goto	l705
 10493                           
 10494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
 10495  02AD  0865               	movf	(efgtoa@e+1)^(0+128),w
 10496  02AE  3A80               	xorlw	128
 10497  02AF  00B0               	movwf	??_efgtoa^(0+128)
 10498  02B0  307F               	movlw	127
 10499  02B1  0230               	subwf	??_efgtoa^(0+128),w
 10500  02B2  1D03               	skipz
 10501  02B3  2AB6               	goto	u10235
 10502  02B4  30FC               	movlw	252
 10503  02B5  0264               	subwf	efgtoa@e^(0+128),w
 10504  02B6                     u10235:	
 10505  02B6  1C03               	skipc
 10506  02B7  2ACD               	goto	l7481
 10507  02B8  0021               	movlb	1	; select bank1
 10508  02B9  0850               	movf	efgtoa@p^(0+128),w
 10509  02BA  3EFF               	addlw	255
 10510  02BB  00B0               	movwf	??_efgtoa^(0+128)
 10511  02BC  30FF               	movlw	255
 10512  02BD  3D51               	addwfc	(efgtoa@p+1)^(0+128),w
 10513  02BE  00B1               	movwf	(??_efgtoa+1)^(0+128)
 10514  02BF  0831               	movf	(??_efgtoa+1)^(0+128),w
 10515  02C0  3A80               	xorlw	128
 10516  02C1  00B2               	movwf	(??_efgtoa+2)^(0+128)
 10517  02C2  0865               	movf	(efgtoa@e+1)^(0+128),w
 10518  02C3  3A80               	xorlw	128
 10519  02C4  0232               	subwf	(??_efgtoa+2)^(0+128),w
 10520  02C5  1D03               	skipz
 10521  02C6  2AC9               	goto	u10245
 10522  02C7  0864               	movf	efgtoa@e^(0+128),w
 10523  02C8  0230               	subwf	??_efgtoa^(0+128),w
 10524  02C9                     u10245:	
 10525  02C9  1C03               	skipc
 10526  02CA  2ACD               	goto	l7481
 10527                           
 10528                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
 10529  02CB  3066               	movlw	102
 10530  02CC  2ACE               	goto	L6
 10531  02CD                     l7481:	
 10532                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
 10533                           
 10534                           
 10535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
 10536  02CD  3065               	movlw	101
 10537  02CE                     L6:	
 10538  02CE  0021               	movlb	1	; select bank1
 10539  02CF  00B0               	movwf	??_efgtoa^(0+128)
 10540  02D0  0830               	movf	??_efgtoa^(0+128),w
 10541  02D1  00D2               	movwf	efgtoa@nmode^(0+128)
 10542  02D2                     l705:	
 10543                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 395:     }
 10544                           
 10545                           
 10546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
 10547  02D2  0851               	movf	(efgtoa@p+1)^(0+128),w
 10548  02D3  00C9               	movwf	(efgtoa@m+1)^(0+128)
 10549  02D4  0850               	movf	efgtoa@p^(0+128),w
 10550  02D5  00C8               	movwf	efgtoa@m^(0+128)
 10551                           
 10552                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
 10553  02D6  3067               	movlw	103
 10554  02D7  0655               	xorwf	efgtoa@mode^(0+128),w
 10555  02D8  1D03               	btfss	3,2
 10556  02D9  2ADF               	goto	l7489
 10557  02DA  3066               	movlw	102
 10558  02DB  0652               	xorwf	efgtoa@nmode^(0+128),w
 10559  02DC  1903               	btfsc	3,2
 10560  02DD  1FE5               	btfss	(efgtoa@e+1)^(0+128),7
 10561  02DE  2AE3               	goto	l7491
 10562  02DF                     l7489:	
 10563                           
 10564                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
 10565  02DF  3001               	movlw	1
 10566  02E0  07C8               	addwf	efgtoa@m^(0+128),f
 10567  02E1  3000               	movlw	0
 10568  02E2  3DC9               	addwfc	(efgtoa@m+1)^(0+128),f
 10569  02E3                     l7491:	
 10570                           
 10571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
 10572  02E3  3066               	movlw	102
 10573  02E4  0652               	xorwf	efgtoa@nmode^(0+128),w
 10574  02E5  1D03               	btfss	3,2
 10575  02E6  2AFB               	goto	l7503
 10576                           
 10577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
 10578  02E7  1FE5               	btfss	(efgtoa@e+1)^(0+128),7
 10579  02E8  2AF3               	goto	l7499
 10580                           
 10581                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
 10582  02E9  303F               	movlw	63
 10583  02EA  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10584  02EB  3080               	movlw	128
 10585  02EC  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10586  02ED  3000               	movlw	0
 10587  02EE  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10588  02EF  3000               	movlw	0
 10589  02F0  00E8               	movwf	efgtoa@u^(0+128)
 10590                           
 10591                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
 10592  02F1  01E4               	clrf	efgtoa@e^(0+128)
 10593  02F2  01E5               	clrf	(efgtoa@e+1)^(0+128)
 10594  02F3                     l7499:	
 10595                           
 10596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
 10597  02F3  3067               	movlw	103
 10598  02F4  0655               	xorwf	efgtoa@mode^(0+128),w
 10599  02F5  1903               	btfsc	3,2
 10600  02F6  2AFB               	goto	l7503
 10601                           
 10602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
 10603  02F7  0864               	movf	efgtoa@e^(0+128),w
 10604  02F8  07C8               	addwf	efgtoa@m^(0+128),f
 10605  02F9  0865               	movf	(efgtoa@e+1)^(0+128),w
 10606  02FA  3DC9               	addwfc	(efgtoa@m+1)^(0+128),f
 10607  02FB                     l7503:	
 10608                           
 10609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
 10610  02FB  01DE               	clrf	efgtoa@i^(0+128)
 10611  02FC  01DF               	clrf	(efgtoa@i+1)^(0+128)
 10612                           
 10613                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
 10614  02FD  0863               	movf	(efgtoa@g+3)^(0+128),w
 10615  02FE  00D9               	movwf	(efgtoa@h+3)^(0+128)
 10616  02FF  0862               	movf	(efgtoa@g+2)^(0+128),w
 10617  0300  00D8               	movwf	(efgtoa@h+2)^(0+128)
 10618  0301  0861               	movf	(efgtoa@g+1)^(0+128),w
 10619  0302  00D7               	movwf	(efgtoa@h+1)^(0+128)
 10620  0303  0860               	movf	efgtoa@g^(0+128),w
 10621  0304  00D6               	movwf	efgtoa@h^(0+128)
 10622                           
 10623                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
 10624  0305  086B               	movf	(efgtoa@u+3)^(0+128),w
 10625  0306  00B7               	movwf	(efgtoa@ou+3)^(0+128)
 10626  0307  086A               	movf	(efgtoa@u+2)^(0+128),w
 10627  0308  00B6               	movwf	(efgtoa@ou+2)^(0+128)
 10628  0309  0869               	movf	(efgtoa@u+1)^(0+128),w
 10629  030A  00B5               	movwf	(efgtoa@ou+1)^(0+128)
 10630  030B  0868               	movf	efgtoa@u^(0+128),w
 10631  030C  00B4               	movwf	efgtoa@ou^(0+128)
 10632  030D                     l7513:	
 10633                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10634                           
 10635                           
 10636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
 10637  030D  085F               	movf	(efgtoa@i+1)^(0+128),w
 10638  030E  3A80               	xorlw	128
 10639  030F  00B0               	movwf	??_efgtoa^(0+128)
 10640  0310  0849               	movf	(efgtoa@m+1)^(0+128),w
 10641  0311  3A80               	xorlw	128
 10642  0312  0230               	subwf	??_efgtoa^(0+128),w
 10643  0313  1D03               	skipz
 10644  0314  2B17               	goto	u10315
 10645  0315  0848               	movf	efgtoa@m^(0+128),w
 10646  0316  025E               	subwf	efgtoa@i^(0+128),w
 10647  0317                     u10315:	
 10648  0317  1803               	btfsc	3,0
 10649  0318  2BDF               	goto	l7515
 10650                           
 10651                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
 10652  0319  0021               	movlb	1	; select bank1
 10653  031A  086B               	movf	(efgtoa@u+3)^(0+128),w
 10654  031B  0020               	movlb	0	; select bank0
 10655  031C  00C3               	movwf	___fldiv@a+3
 10656  031D  0021               	movlb	1	; select bank1
 10657  031E  086A               	movf	(efgtoa@u+2)^(0+128),w
 10658  031F  0020               	movlb	0	; select bank0
 10659  0320  00C2               	movwf	___fldiv@a+2
 10660  0321  0021               	movlb	1	; select bank1
 10661  0322  0869               	movf	(efgtoa@u+1)^(0+128),w
 10662  0323  0020               	movlb	0	; select bank0
 10663  0324  00C1               	movwf	___fldiv@a+1
 10664  0325  0021               	movlb	1	; select bank1
 10665  0326  0868               	movf	efgtoa@u^(0+128),w
 10666  0327  0020               	movlb	0	; select bank0
 10667  0328  00C0               	movwf	___fldiv@a
 10668  0329  0021               	movlb	1	; select bank1
 10669  032A  0859               	movf	(efgtoa@h+3)^(0+128),w
 10670  032B  0020               	movlb	0	; select bank0
 10671  032C  00C7               	movwf	___fldiv@b+3
 10672  032D  0021               	movlb	1	; select bank1
 10673  032E  0858               	movf	(efgtoa@h+2)^(0+128),w
 10674  032F  0020               	movlb	0	; select bank0
 10675  0330  00C6               	movwf	___fldiv@b+2
 10676  0331  0021               	movlb	1	; select bank1
 10677  0332  0857               	movf	(efgtoa@h+1)^(0+128),w
 10678  0333  0020               	movlb	0	; select bank0
 10679  0334  00C5               	movwf	___fldiv@b+1
 10680  0335  0021               	movlb	1	; select bank1
 10681  0336  0856               	movf	efgtoa@h^(0+128),w
 10682  0337  0020               	movlb	0	; select bank0
 10683  0338  00C4               	movwf	___fldiv@b
 10684  0339  319A  22B3  3180   	fcall	___fldiv
 10685  033C  0020               	movlb	0	; select bank0
 10686  033D  0843               	movf	?___fldiv+3,w
 10687  033E  00DD               	movwf	floorf@x+3
 10688  033F  0842               	movf	?___fldiv+2,w
 10689  0340  00DC               	movwf	floorf@x+2
 10690  0341  0841               	movf	?___fldiv+1,w
 10691  0342  00DB               	movwf	floorf@x+1
 10692  0343  0840               	movf	?___fldiv,w
 10693  0344  00DA               	movwf	floorf@x
 10694  0345  31AD  256C  3180   	fcall	_floorf
 10695  0348  0020               	movlb	0	; select bank0
 10696  0349  085D               	movf	?_floorf+3,w
 10697  034A  0021               	movlb	1	; select bank1
 10698  034B  00DD               	movwf	(efgtoa@l+3)^(0+128)
 10699  034C  0020               	movlb	0	; select bank0
 10700  034D  085C               	movf	?_floorf+2,w
 10701  034E  0021               	movlb	1	; select bank1
 10702  034F  00DC               	movwf	(efgtoa@l+2)^(0+128)
 10703  0350  0020               	movlb	0	; select bank0
 10704  0351  085B               	movf	?_floorf+1,w
 10705  0352  0021               	movlb	1	; select bank1
 10706  0353  00DB               	movwf	(efgtoa@l+1)^(0+128)
 10707  0354  0020               	movlb	0	; select bank0
 10708  0355  085A               	movf	?_floorf,w
 10709  0356  0021               	movlb	1	; select bank1
 10710  0357  00DA               	movwf	efgtoa@l^(0+128)
 10711                           
 10712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
 10713  0358  085D               	movf	(efgtoa@l+3)^(0+128),w
 10714  0359  00A3               	movwf	(___fltol@f1+3)^(0+128)
 10715  035A  085C               	movf	(efgtoa@l+2)^(0+128),w
 10716  035B  00A2               	movwf	(___fltol@f1+2)^(0+128)
 10717  035C  085B               	movf	(efgtoa@l+1)^(0+128),w
 10718  035D  00A1               	movwf	(___fltol@f1+1)^(0+128)
 10719  035E  085A               	movf	efgtoa@l^(0+128),w
 10720  035F  00A0               	movwf	___fltol@f1^(0+128)
 10721  0360  31B4  244E  3180   	fcall	___fltol
 10722  0363  0021               	movlb	1	; select bank1
 10723  0364  0821               	movf	(?___fltol+1)^(0+128),w
 10724  0365  00CD               	movwf	(efgtoa@d+1)^(0+128)
 10725  0366  0820               	movf	?___fltol^(0+128),w
 10726  0367  00CC               	movwf	efgtoa@d^(0+128)
 10727                           
 10728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
 10729  0368  085D               	movf	(efgtoa@l+3)^(0+128),w
 10730  0369  0020               	movlb	0	; select bank0
 10731  036A  00AD               	movwf	___flmul@a+3
 10732  036B  0021               	movlb	1	; select bank1
 10733  036C  085C               	movf	(efgtoa@l+2)^(0+128),w
 10734  036D  0020               	movlb	0	; select bank0
 10735  036E  00AC               	movwf	___flmul@a+2
 10736  036F  0021               	movlb	1	; select bank1
 10737  0370  085B               	movf	(efgtoa@l+1)^(0+128),w
 10738  0371  0020               	movlb	0	; select bank0
 10739  0372  00AB               	movwf	___flmul@a+1
 10740  0373  0021               	movlb	1	; select bank1
 10741  0374  085A               	movf	efgtoa@l^(0+128),w
 10742  0375  0020               	movlb	0	; select bank0
 10743  0376  00AA               	movwf	___flmul@a
 10744  0377  0021               	movlb	1	; select bank1
 10745  0378  086B               	movf	(efgtoa@u+3)^(0+128),w
 10746  0379  0020               	movlb	0	; select bank0
 10747  037A  00A9               	movwf	___flmul@b+3
 10748  037B  0021               	movlb	1	; select bank1
 10749  037C  086A               	movf	(efgtoa@u+2)^(0+128),w
 10750  037D  0020               	movlb	0	; select bank0
 10751  037E  00A8               	movwf	___flmul@b+2
 10752  037F  0021               	movlb	1	; select bank1
 10753  0380  0869               	movf	(efgtoa@u+1)^(0+128),w
 10754  0381  0020               	movlb	0	; select bank0
 10755  0382  00A7               	movwf	___flmul@b+1
 10756  0383  0021               	movlb	1	; select bank1
 10757  0384  0868               	movf	efgtoa@u^(0+128),w
 10758  0385  0020               	movlb	0	; select bank0
 10759  0386  00A6               	movwf	___flmul@b
 10760  0387  3190  20D5  3180   	fcall	___flmul
 10761  038A  0020               	movlb	0	; select bank0
 10762  038B  0829               	movf	?___flmul+3,w
 10763  038C  0021               	movlb	1	; select bank1
 10764  038D  00A3               	movwf	(___flsub@a+3)^(0+128)
 10765  038E  0020               	movlb	0	; select bank0
 10766  038F  0828               	movf	?___flmul+2,w
 10767  0390  0021               	movlb	1	; select bank1
 10768  0391  00A2               	movwf	(___flsub@a+2)^(0+128)
 10769  0392  0020               	movlb	0	; select bank0
 10770  0393  0827               	movf	?___flmul+1,w
 10771  0394  0021               	movlb	1	; select bank1
 10772  0395  00A1               	movwf	(___flsub@a+1)^(0+128)
 10773  0396  0020               	movlb	0	; select bank0
 10774  0397  0826               	movf	?___flmul,w
 10775  0398  0021               	movlb	1	; select bank1
 10776  0399  00A0               	movwf	___flsub@a^(0+128)
 10777  039A  0859               	movf	(efgtoa@h+3)^(0+128),w
 10778  039B  00A7               	movwf	(___flsub@b+3)^(0+128)
 10779  039C  0858               	movf	(efgtoa@h+2)^(0+128),w
 10780  039D  00A6               	movwf	(___flsub@b+2)^(0+128)
 10781  039E  0857               	movf	(efgtoa@h+1)^(0+128),w
 10782  039F  00A5               	movwf	(___flsub@b+1)^(0+128)
 10783  03A0  0856               	movf	efgtoa@h^(0+128),w
 10784  03A1  00A4               	movwf	___flsub@b^(0+128)
 10785  03A2  31B0  200E  3180   	fcall	___flsub
 10786  03A5  0021               	movlb	1	; select bank1
 10787  03A6  0823               	movf	(?___flsub+3)^(0+128),w
 10788  03A7  00D9               	movwf	(efgtoa@h+3)^(0+128)
 10789  03A8  0822               	movf	(?___flsub+2)^(0+128),w
 10790  03A9  00D8               	movwf	(efgtoa@h+2)^(0+128)
 10791  03AA  0821               	movf	(?___flsub+1)^(0+128),w
 10792  03AB  00D7               	movwf	(efgtoa@h+1)^(0+128)
 10793  03AC  0820               	movf	?___flsub^(0+128),w
 10794  03AD  00D6               	movwf	efgtoa@h^(0+128)
 10795                           
 10796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
 10797  03AE  3041               	movlw	65
 10798  03AF  0020               	movlb	0	; select bank0
 10799  03B0  00C3               	movwf	___fldiv@a+3
 10800  03B1  3020               	movlw	32
 10801  03B2  00C2               	movwf	___fldiv@a+2
 10802  03B3  3000               	movlw	0
 10803  03B4  00C1               	movwf	___fldiv@a+1
 10804  03B5  3000               	movlw	0
 10805  03B6  00C0               	movwf	___fldiv@a
 10806  03B7  0021               	movlb	1	; select bank1
 10807  03B8  086B               	movf	(efgtoa@u+3)^(0+128),w
 10808  03B9  0020               	movlb	0	; select bank0
 10809  03BA  00C7               	movwf	___fldiv@b+3
 10810  03BB  0021               	movlb	1	; select bank1
 10811  03BC  086A               	movf	(efgtoa@u+2)^(0+128),w
 10812  03BD  0020               	movlb	0	; select bank0
 10813  03BE  00C6               	movwf	___fldiv@b+2
 10814  03BF  0021               	movlb	1	; select bank1
 10815  03C0  0869               	movf	(efgtoa@u+1)^(0+128),w
 10816  03C1  0020               	movlb	0	; select bank0
 10817  03C2  00C5               	movwf	___fldiv@b+1
 10818  03C3  0021               	movlb	1	; select bank1
 10819  03C4  0868               	movf	efgtoa@u^(0+128),w
 10820  03C5  0020               	movlb	0	; select bank0
 10821  03C6  00C4               	movwf	___fldiv@b
 10822  03C7  319A  22B3  3180   	fcall	___fldiv
 10823  03CA  0020               	movlb	0	; select bank0
 10824  03CB  0843               	movf	?___fldiv+3,w
 10825  03CC  0021               	movlb	1	; select bank1
 10826  03CD  00EB               	movwf	(efgtoa@u+3)^(0+128)
 10827  03CE  0020               	movlb	0	; select bank0
 10828  03CF  0842               	movf	?___fldiv+2,w
 10829  03D0  0021               	movlb	1	; select bank1
 10830  03D1  00EA               	movwf	(efgtoa@u+2)^(0+128)
 10831  03D2  0020               	movlb	0	; select bank0
 10832  03D3  0841               	movf	?___fldiv+1,w
 10833  03D4  0021               	movlb	1	; select bank1
 10834  03D5  00E9               	movwf	(efgtoa@u+1)^(0+128)
 10835  03D6  0020               	movlb	0	; select bank0
 10836  03D7  0840               	movf	?___fldiv,w
 10837  03D8  0021               	movlb	1	; select bank1
 10838  03D9  00E8               	movwf	efgtoa@u^(0+128)
 10839                           
 10840                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
 10841  03DA  3001               	movlw	1
 10842  03DB  07DE               	addwf	efgtoa@i^(0+128),f
 10843  03DC  3000               	movlw	0
 10844  03DD  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 10845  03DE  2B0D               	goto	l7513
 10846  03DF                     l7515:	
 10847                           
 10848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
 10849  03DF  3040               	movlw	64
 10850  03E0  0020               	movlb	0	; select bank0
 10851  03E1  00A9               	movwf	___flmul@b+3
 10852  03E2  30A0               	movlw	160
 10853  03E3  00A8               	movwf	___flmul@b+2
 10854  03E4  3000               	movlw	0
 10855  03E5  00A7               	movwf	___flmul@b+1
 10856  03E6  3000               	movlw	0
 10857  03E7  00A6               	movwf	___flmul@b
 10858  03E8  0021               	movlb	1	; select bank1
 10859  03E9  086B               	movf	(efgtoa@u+3)^(0+128),w
 10860  03EA  0020               	movlb	0	; select bank0
 10861  03EB  00AD               	movwf	___flmul@a+3
 10862  03EC  0021               	movlb	1	; select bank1
 10863  03ED  086A               	movf	(efgtoa@u+2)^(0+128),w
 10864  03EE  0020               	movlb	0	; select bank0
 10865  03EF  00AC               	movwf	___flmul@a+2
 10866  03F0  0021               	movlb	1	; select bank1
 10867  03F1  0869               	movf	(efgtoa@u+1)^(0+128),w
 10868  03F2  0020               	movlb	0	; select bank0
 10869  03F3  00AB               	movwf	___flmul@a+1
 10870  03F4  0021               	movlb	1	; select bank1
 10871  03F5  0868               	movf	efgtoa@u^(0+128),w
 10872  03F6  0020               	movlb	0	; select bank0
 10873  03F7  00AA               	movwf	___flmul@a
 10874  03F8  3190  20D5  3180   	fcall	___flmul
 10875  03FB  0020               	movlb	0	; select bank0
 10876  03FC  0829               	movf	?___flmul+3,w
 10877  03FD  0021               	movlb	1	; select bank1
 10878  03FE  00DD               	movwf	(efgtoa@l+3)^(0+128)
 10879  03FF  0020               	movlb	0	; select bank0
 10880  0400  0828               	movf	?___flmul+2,w
 10881  0401  0021               	movlb	1	; select bank1
 10882  0402  00DC               	movwf	(efgtoa@l+2)^(0+128)
 10883  0403  0020               	movlb	0	; select bank0
 10884  0404  0827               	movf	?___flmul+1,w
 10885  0405  0021               	movlb	1	; select bank1
 10886  0406  00DB               	movwf	(efgtoa@l+1)^(0+128)
 10887  0407  0020               	movlb	0	; select bank0
 10888  0408  0826               	movf	?___flmul,w
 10889  0409  0021               	movlb	1	; select bank1
 10890  040A  00DA               	movwf	efgtoa@l^(0+128)
 10891                           
 10892                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
 10893  040B  0859               	movf	(efgtoa@h+3)^(0+128),w
 10894  040C  0020               	movlb	0	; select bank0
 10895  040D  00DD               	movwf	___flge@ff1+3
 10896  040E  0021               	movlb	1	; select bank1
 10897  040F  0858               	movf	(efgtoa@h+2)^(0+128),w
 10898  0410  0020               	movlb	0	; select bank0
 10899  0411  00DC               	movwf	___flge@ff1+2
 10900  0412  0021               	movlb	1	; select bank1
 10901  0413  0857               	movf	(efgtoa@h+1)^(0+128),w
 10902  0414  0020               	movlb	0	; select bank0
 10903  0415  00DB               	movwf	___flge@ff1+1
 10904  0416  0021               	movlb	1	; select bank1
 10905  0417  0856               	movf	efgtoa@h^(0+128),w
 10906  0418  0020               	movlb	0	; select bank0
 10907  0419  00DA               	movwf	___flge@ff1
 10908  041A  0021               	movlb	1	; select bank1
 10909  041B  085D               	movf	(efgtoa@l+3)^(0+128),w
 10910  041C  0020               	movlb	0	; select bank0
 10911  041D  00E1               	movwf	___flge@ff2+3
 10912  041E  0021               	movlb	1	; select bank1
 10913  041F  085C               	movf	(efgtoa@l+2)^(0+128),w
 10914  0420  0020               	movlb	0	; select bank0
 10915  0421  00E0               	movwf	___flge@ff2+2
 10916  0422  0021               	movlb	1	; select bank1
 10917  0423  085B               	movf	(efgtoa@l+1)^(0+128),w
 10918  0424  0020               	movlb	0	; select bank0
 10919  0425  00DF               	movwf	___flge@ff2+1
 10920  0426  0021               	movlb	1	; select bank1
 10921  0427  085A               	movf	efgtoa@l^(0+128),w
 10922  0428  0020               	movlb	0	; select bank0
 10923  0429  00DE               	movwf	___flge@ff2
 10924  042A  31B6  2602  3180   	fcall	___flge
 10925  042D  1803               	btfsc	3,0
 10926  042E  2C32               	goto	l7519
 10927                           
 10928                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
 10929  042F  3000               	movlw	0
 10930  0430  0021               	movlb	1	; select bank1
 10931  0431  2C4C               	goto	L7
 10932  0432                     l7519:	
 10933                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
 10934                           
 10935                           
 10936                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
 10937  0432  0021               	movlb	1	; select bank1
 10938  0433  0859               	movf	(efgtoa@h+3)^(0+128),w
 10939  0434  00F4               	movwf	___fleq@ff1+3
 10940  0435  0858               	movf	(efgtoa@h+2)^(0+128),w
 10941  0436  00F3               	movwf	___fleq@ff1+2
 10942  0437  0857               	movf	(efgtoa@h+1)^(0+128),w
 10943  0438  00F2               	movwf	___fleq@ff1+1
 10944  0439  0856               	movf	efgtoa@h^(0+128),w
 10945  043A  00F1               	movwf	___fleq@ff1
 10946  043B  085D               	movf	(efgtoa@l+3)^(0+128),w
 10947  043C  00F8               	movwf	___fleq@ff2+3
 10948  043D  085C               	movf	(efgtoa@l+2)^(0+128),w
 10949  043E  00F7               	movwf	___fleq@ff2+2
 10950  043F  085B               	movf	(efgtoa@l+1)^(0+128),w
 10951  0440  00F6               	movwf	___fleq@ff2+1
 10952  0441  085A               	movf	efgtoa@l^(0+128),w
 10953  0442  00F5               	movwf	___fleq@ff2
 10954  0443  31B1  21B9  3180   	fcall	___fleq
 10955  0446  1C03               	btfss	3,0
 10956  0447  2C53               	goto	l7525
 10957  0448  0021               	movlb	1	; select bank1
 10958  0449  184C               	btfsc	efgtoa@d^(0+128),0
 10959  044A  2C53               	goto	l7525
 10960                           
 10961                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
 10962  044B  3000               	movlw	0
 10963  044C                     L7:	
 10964  044C  00DD               	movwf	(efgtoa@l+3)^(0+128)
 10965  044D  3000               	movlw	0
 10966  044E  00DC               	movwf	(efgtoa@l+2)^(0+128)
 10967  044F  3000               	movlw	0
 10968  0450  00DB               	movwf	(efgtoa@l+1)^(0+128)
 10969  0451  3000               	movlw	0
 10970  0452  00DA               	movwf	efgtoa@l^(0+128)
 10971  0453                     l7525:	
 10972                           
 10973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
 10974  0453  0021               	movlb	1	; select bank1
 10975  0454  085D               	movf	(efgtoa@l+3)^(0+128),w
 10976  0455  0020               	movlb	0	; select bank0
 10977  0456  00DD               	movwf	___fladd@b+3
 10978  0457  0021               	movlb	1	; select bank1
 10979  0458  085C               	movf	(efgtoa@l+2)^(0+128),w
 10980  0459  0020               	movlb	0	; select bank0
 10981  045A  00DC               	movwf	___fladd@b+2
 10982  045B  0021               	movlb	1	; select bank1
 10983  045C  085B               	movf	(efgtoa@l+1)^(0+128),w
 10984  045D  0020               	movlb	0	; select bank0
 10985  045E  00DB               	movwf	___fladd@b+1
 10986  045F  0021               	movlb	1	; select bank1
 10987  0460  085A               	movf	efgtoa@l^(0+128),w
 10988  0461  0020               	movlb	0	; select bank0
 10989  0462  00DA               	movwf	___fladd@b
 10990  0463  0021               	movlb	1	; select bank1
 10991  0464  0863               	movf	(efgtoa@g+3)^(0+128),w
 10992  0465  0020               	movlb	0	; select bank0
 10993  0466  00E1               	movwf	___fladd@a+3
 10994  0467  0021               	movlb	1	; select bank1
 10995  0468  0862               	movf	(efgtoa@g+2)^(0+128),w
 10996  0469  0020               	movlb	0	; select bank0
 10997  046A  00E0               	movwf	___fladd@a+2
 10998  046B  0021               	movlb	1	; select bank1
 10999  046C  0861               	movf	(efgtoa@g+1)^(0+128),w
 11000  046D  0020               	movlb	0	; select bank0
 11001  046E  00DF               	movwf	___fladd@a+1
 11002  046F  0021               	movlb	1	; select bank1
 11003  0470  0860               	movf	efgtoa@g^(0+128),w
 11004  0471  0020               	movlb	0	; select bank0
 11005  0472  00DE               	movwf	___fladd@a
 11006  0473  319C  242D  3180   	fcall	___fladd
 11007  0476  0020               	movlb	0	; select bank0
 11008  0477  085D               	movf	?___fladd+3,w
 11009  0478  0021               	movlb	1	; select bank1
 11010  0479  00D9               	movwf	(efgtoa@h+3)^(0+128)
 11011  047A  0020               	movlb	0	; select bank0
 11012  047B  085C               	movf	?___fladd+2,w
 11013  047C  0021               	movlb	1	; select bank1
 11014  047D  00D8               	movwf	(efgtoa@h+2)^(0+128)
 11015  047E  0020               	movlb	0	; select bank0
 11016  047F  085B               	movf	?___fladd+1,w
 11017  0480  0021               	movlb	1	; select bank1
 11018  0481  00D7               	movwf	(efgtoa@h+1)^(0+128)
 11019  0482  0020               	movlb	0	; select bank0
 11020  0483  085A               	movf	?___fladd,w
 11021  0484  0021               	movlb	1	; select bank1
 11022  0485  00D6               	movwf	efgtoa@h^(0+128)
 11023                           
 11024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
 11025  0486  0837               	movf	(efgtoa@ou+3)^(0+128),w
 11026  0487  00EB               	movwf	(efgtoa@u+3)^(0+128)
 11027  0488  0836               	movf	(efgtoa@ou+2)^(0+128),w
 11028  0489  00EA               	movwf	(efgtoa@u+2)^(0+128)
 11029  048A  0835               	movf	(efgtoa@ou+1)^(0+128),w
 11030  048B  00E9               	movwf	(efgtoa@u+1)^(0+128)
 11031  048C  0834               	movf	efgtoa@ou^(0+128),w
 11032  048D  00E8               	movwf	efgtoa@u^(0+128)
 11033                           
 11034                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
 11035  048E  3065               	movlw	101
 11036  048F  0652               	xorwf	efgtoa@nmode^(0+128),w
 11037  0490  1903               	btfsc	3,2
 11038  0491  2C97               	goto	l7533
 11039  0492  0865               	movf	(efgtoa@e+1)^(0+128),w
 11040  0493  00CB               	movwf	(efgtoa@ne+1)^(0+128)
 11041  0494  0864               	movf	efgtoa@e^(0+128),w
 11042  0495  00CA               	movwf	efgtoa@ne^(0+128)
 11043  0496  2C99               	goto	l723
 11044  0497                     l7533:	
 11045  0497  01CA               	clrf	efgtoa@ne^(0+128)
 11046  0498  01CB               	clrf	(efgtoa@ne+1)^(0+128)
 11047  0499                     l723:	
 11048                           
 11049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
 11050  0499  01C6               	clrf	efgtoa@pp^(0+128)
 11051  049A  01C7               	clrf	(efgtoa@pp+1)^(0+128)
 11052                           
 11053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
 11054  049B  01C4               	clrf	efgtoa@t^(0+128)
 11055  049C  01C5               	clrf	(efgtoa@t+1)^(0+128)
 11056                           
 11057                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
 11058  049D  01DE               	clrf	efgtoa@i^(0+128)
 11059  049E  01DF               	clrf	(efgtoa@i+1)^(0+128)
 11060                           
 11061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 11062  049F  2DC2               	goto	l7583
 11063  04A0                     l7535:	
 11064                           
 11065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
 11066  04A0  0021               	movlb	1	; select bank1
 11067  04A1  086B               	movf	(efgtoa@u+3)^(0+128),w
 11068  04A2  0020               	movlb	0	; select bank0
 11069  04A3  00C3               	movwf	___fldiv@a+3
 11070  04A4  0021               	movlb	1	; select bank1
 11071  04A5  086A               	movf	(efgtoa@u+2)^(0+128),w
 11072  04A6  0020               	movlb	0	; select bank0
 11073  04A7  00C2               	movwf	___fldiv@a+2
 11074  04A8  0021               	movlb	1	; select bank1
 11075  04A9  0869               	movf	(efgtoa@u+1)^(0+128),w
 11076  04AA  0020               	movlb	0	; select bank0
 11077  04AB  00C1               	movwf	___fldiv@a+1
 11078  04AC  0021               	movlb	1	; select bank1
 11079  04AD  0868               	movf	efgtoa@u^(0+128),w
 11080  04AE  0020               	movlb	0	; select bank0
 11081  04AF  00C0               	movwf	___fldiv@a
 11082  04B0  0021               	movlb	1	; select bank1
 11083  04B1  0859               	movf	(efgtoa@h+3)^(0+128),w
 11084  04B2  0020               	movlb	0	; select bank0
 11085  04B3  00C7               	movwf	___fldiv@b+3
 11086  04B4  0021               	movlb	1	; select bank1
 11087  04B5  0858               	movf	(efgtoa@h+2)^(0+128),w
 11088  04B6  0020               	movlb	0	; select bank0
 11089  04B7  00C6               	movwf	___fldiv@b+2
 11090  04B8  0021               	movlb	1	; select bank1
 11091  04B9  0857               	movf	(efgtoa@h+1)^(0+128),w
 11092  04BA  0020               	movlb	0	; select bank0
 11093  04BB  00C5               	movwf	___fldiv@b+1
 11094  04BC  0021               	movlb	1	; select bank1
 11095  04BD  0856               	movf	efgtoa@h^(0+128),w
 11096  04BE  0020               	movlb	0	; select bank0
 11097  04BF  00C4               	movwf	___fldiv@b
 11098  04C0  319A  22B3  3180   	fcall	___fldiv
 11099  04C3  0020               	movlb	0	; select bank0
 11100  04C4  0843               	movf	?___fldiv+3,w
 11101  04C5  00DD               	movwf	floorf@x+3
 11102  04C6  0842               	movf	?___fldiv+2,w
 11103  04C7  00DC               	movwf	floorf@x+2
 11104  04C8  0841               	movf	?___fldiv+1,w
 11105  04C9  00DB               	movwf	floorf@x+1
 11106  04CA  0840               	movf	?___fldiv,w
 11107  04CB  00DA               	movwf	floorf@x
 11108  04CC  31AD  256C  3180   	fcall	_floorf
 11109  04CF  0020               	movlb	0	; select bank0
 11110  04D0  085D               	movf	?_floorf+3,w
 11111  04D1  0021               	movlb	1	; select bank1
 11112  04D2  00DD               	movwf	(efgtoa@l+3)^(0+128)
 11113  04D3  0020               	movlb	0	; select bank0
 11114  04D4  085C               	movf	?_floorf+2,w
 11115  04D5  0021               	movlb	1	; select bank1
 11116  04D6  00DC               	movwf	(efgtoa@l+2)^(0+128)
 11117  04D7  0020               	movlb	0	; select bank0
 11118  04D8  085B               	movf	?_floorf+1,w
 11119  04D9  0021               	movlb	1	; select bank1
 11120  04DA  00DB               	movwf	(efgtoa@l+1)^(0+128)
 11121  04DB  0020               	movlb	0	; select bank0
 11122  04DC  085A               	movf	?_floorf,w
 11123  04DD  0021               	movlb	1	; select bank1
 11124  04DE  00DA               	movwf	efgtoa@l^(0+128)
 11125                           
 11126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
 11127  04DF  085D               	movf	(efgtoa@l+3)^(0+128),w
 11128  04E0  00A3               	movwf	(___fltol@f1+3)^(0+128)
 11129  04E1  085C               	movf	(efgtoa@l+2)^(0+128),w
 11130  04E2  00A2               	movwf	(___fltol@f1+2)^(0+128)
 11131  04E3  085B               	movf	(efgtoa@l+1)^(0+128),w
 11132  04E4  00A1               	movwf	(___fltol@f1+1)^(0+128)
 11133  04E5  085A               	movf	efgtoa@l^(0+128),w
 11134  04E6  00A0               	movwf	___fltol@f1^(0+128)
 11135  04E7  31B4  244E  3180   	fcall	___fltol
 11136  04EA  0021               	movlb	1	; select bank1
 11137  04EB  0821               	movf	(?___fltol+1)^(0+128),w
 11138  04EC  00CD               	movwf	(efgtoa@d+1)^(0+128)
 11139  04ED  0820               	movf	?___fltol^(0+128),w
 11140  04EE  00CC               	movwf	efgtoa@d^(0+128)
 11141                           
 11142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11143  04EF  0023               	movlb	3	; select bank3
 11144  04F0  1A38               	btfsc	_flags^(0+384),4
 11145  04F1  2D01               	goto	l7547
 11146  04F2  0021               	movlb	1	; select bank1
 11147  04F3  084C               	movf	efgtoa@d^(0+128),w
 11148  04F4  044D               	iorwf	(efgtoa@d+1)^(0+128),w
 11149  04F5  1D03               	btfss	3,2
 11150  04F6  2D01               	goto	l7547
 11151  04F7  3067               	movlw	103
 11152  04F8  0655               	xorwf	efgtoa@mode^(0+128),w
 11153  04F9  1903               	btfsc	3,2
 11154  04FA  1FCB               	btfss	(efgtoa@ne+1)^(0+128),7
 11155  04FB  2D01               	goto	l7547
 11156                           
 11157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
 11158  04FC  3001               	movlw	1
 11159  04FD  07C4               	addwf	efgtoa@t^(0+128),f
 11160  04FE  3000               	movlw	0
 11161  04FF  3DC5               	addwfc	(efgtoa@t+1)^(0+128),f
 11162                           
 11163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
 11164  0500  2D48               	goto	l7575
 11165  0501                     l7547:	
 11166                           
 11167                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
 11168  0501  0021               	movlb	1	; select bank1
 11169  0502  0846               	movf	efgtoa@pp^(0+128),w
 11170  0503  0447               	iorwf	(efgtoa@pp+1)^(0+128),w
 11171  0504  1903               	btfsc	3,2
 11172  0505  1FCB               	btfss	(efgtoa@ne+1)^(0+128),7
 11173  0506  2D1C               	goto	l7567
 11174                           
 11175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
 11176  0507  302E               	movlw	46
 11177  0508  00B0               	movwf	??_efgtoa^(0+128)
 11178  0509  0866               	movf	efgtoa@n^(0+128),w
 11179  050A  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11180  050B  0086               	movwf	6
 11181  050C  3002               	movlw	2	; select bank5/6
 11182  050D  0087               	movwf	7
 11183  050E  0830               	movf	??_efgtoa^(0+128),w
 11184  050F  0081               	movwf	1
 11185  0510  3001               	movlw	1
 11186  0511  07E6               	addwf	efgtoa@n^(0+128),f
 11187  0512  3000               	movlw	0
 11188  0513  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11189                           
 11190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
 11191  0514  30FF               	movlw	255
 11192  0515  07D3               	addwf	efgtoa@w^(0+128),f
 11193  0516  30FF               	movlw	255
 11194  0517  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11195                           
 11196                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
 11197  0518  3001               	movlw	1
 11198  0519  00C6               	movwf	efgtoa@pp^(0+128)
 11199  051A  3000               	movlw	0
 11200  051B  00C7               	movwf	(efgtoa@pp^(0+128)+1)
 11201  051C                     l7567:	
 11202                           
 11203                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
 11204  051C  0844               	movf	efgtoa@t^(0+128),w
 11205  051D  0445               	iorwf	(efgtoa@t+1)^(0+128),w
 11206  051E  1903               	btfsc	3,2
 11207  051F  2D36               	goto	l7569
 11208                           
 11209                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
 11210  0520  3030               	movlw	48
 11211  0521  00B0               	movwf	??_efgtoa^(0+128)
 11212  0522  0866               	movf	efgtoa@n^(0+128),w
 11213  0523  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11214  0524  0086               	movwf	6
 11215  0525  3002               	movlw	2	; select bank5/6
 11216  0526  0087               	movwf	7
 11217  0527  0830               	movf	??_efgtoa^(0+128),w
 11218  0528  0081               	movwf	1
 11219  0529  3001               	movlw	1
 11220  052A  07E6               	addwf	efgtoa@n^(0+128),f
 11221  052B  3000               	movlw	0
 11222  052C  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11223                           
 11224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
 11225  052D  30FF               	movlw	255
 11226  052E  07D3               	addwf	efgtoa@w^(0+128),f
 11227  052F  30FF               	movlw	255
 11228  0530  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11229                           
 11230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
 11231  0531  30FF               	movlw	255
 11232  0532  07C4               	addwf	efgtoa@t^(0+128),f
 11233  0533  30FF               	movlw	255
 11234  0534  3DC5               	addwfc	(efgtoa@t+1)^(0+128),f
 11235  0535  2D1C               	goto	l7567
 11236  0536                     l7569:	
 11237                           
 11238                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
 11239  0536  084C               	movf	efgtoa@d^(0+128),w
 11240  0537  3E30               	addlw	48
 11241  0538  00B0               	movwf	??_efgtoa^(0+128)
 11242  0539  0866               	movf	efgtoa@n^(0+128),w
 11243  053A  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11244  053B  0086               	movwf	6
 11245  053C  3002               	movlw	2	; select bank5/6
 11246  053D  0087               	movwf	7
 11247  053E  0830               	movf	??_efgtoa^(0+128),w
 11248  053F  0081               	movwf	1
 11249  0540  3001               	movlw	1
 11250  0541  07E6               	addwf	efgtoa@n^(0+128),f
 11251  0542  3000               	movlw	0
 11252  0543  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11253                           
 11254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
 11255  0544  30FF               	movlw	255
 11256  0545  07D3               	addwf	efgtoa@w^(0+128),f
 11257  0546  30FF               	movlw	255
 11258  0547  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11259  0548                     l7575:	
 11260                           
 11261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
 11262  0548  085D               	movf	(efgtoa@l+3)^(0+128),w
 11263  0549  0020               	movlb	0	; select bank0
 11264  054A  00AD               	movwf	___flmul@a+3
 11265  054B  0021               	movlb	1	; select bank1
 11266  054C  085C               	movf	(efgtoa@l+2)^(0+128),w
 11267  054D  0020               	movlb	0	; select bank0
 11268  054E  00AC               	movwf	___flmul@a+2
 11269  054F  0021               	movlb	1	; select bank1
 11270  0550  085B               	movf	(efgtoa@l+1)^(0+128),w
 11271  0551  0020               	movlb	0	; select bank0
 11272  0552  00AB               	movwf	___flmul@a+1
 11273  0553  0021               	movlb	1	; select bank1
 11274  0554  085A               	movf	efgtoa@l^(0+128),w
 11275  0555  0020               	movlb	0	; select bank0
 11276  0556  00AA               	movwf	___flmul@a
 11277  0557  0021               	movlb	1	; select bank1
 11278  0558  086B               	movf	(efgtoa@u+3)^(0+128),w
 11279  0559  0020               	movlb	0	; select bank0
 11280  055A  00A9               	movwf	___flmul@b+3
 11281  055B  0021               	movlb	1	; select bank1
 11282  055C  086A               	movf	(efgtoa@u+2)^(0+128),w
 11283  055D  0020               	movlb	0	; select bank0
 11284  055E  00A8               	movwf	___flmul@b+2
 11285  055F  0021               	movlb	1	; select bank1
 11286  0560  0869               	movf	(efgtoa@u+1)^(0+128),w
 11287  0561  0020               	movlb	0	; select bank0
 11288  0562  00A7               	movwf	___flmul@b+1
 11289  0563  0021               	movlb	1	; select bank1
 11290  0564  0868               	movf	efgtoa@u^(0+128),w
 11291  0565  0020               	movlb	0	; select bank0
 11292  0566  00A6               	movwf	___flmul@b
 11293  0567  3190  20D5  3180   	fcall	___flmul
 11294  056A  0020               	movlb	0	; select bank0
 11295  056B  0829               	movf	?___flmul+3,w
 11296  056C  0021               	movlb	1	; select bank1
 11297  056D  00A3               	movwf	(___flsub@a+3)^(0+128)
 11298  056E  0020               	movlb	0	; select bank0
 11299  056F  0828               	movf	?___flmul+2,w
 11300  0570  0021               	movlb	1	; select bank1
 11301  0571  00A2               	movwf	(___flsub@a+2)^(0+128)
 11302  0572  0020               	movlb	0	; select bank0
 11303  0573  0827               	movf	?___flmul+1,w
 11304  0574  0021               	movlb	1	; select bank1
 11305  0575  00A1               	movwf	(___flsub@a+1)^(0+128)
 11306  0576  0020               	movlb	0	; select bank0
 11307  0577  0826               	movf	?___flmul,w
 11308  0578  0021               	movlb	1	; select bank1
 11309  0579  00A0               	movwf	___flsub@a^(0+128)
 11310  057A  0859               	movf	(efgtoa@h+3)^(0+128),w
 11311  057B  00A7               	movwf	(___flsub@b+3)^(0+128)
 11312  057C  0858               	movf	(efgtoa@h+2)^(0+128),w
 11313  057D  00A6               	movwf	(___flsub@b+2)^(0+128)
 11314  057E  0857               	movf	(efgtoa@h+1)^(0+128),w
 11315  057F  00A5               	movwf	(___flsub@b+1)^(0+128)
 11316  0580  0856               	movf	efgtoa@h^(0+128),w
 11317  0581  00A4               	movwf	___flsub@b^(0+128)
 11318  0582  31B0  200E  3180   	fcall	___flsub
 11319  0585  0021               	movlb	1	; select bank1
 11320  0586  0823               	movf	(?___flsub+3)^(0+128),w
 11321  0587  00D9               	movwf	(efgtoa@h+3)^(0+128)
 11322  0588  0822               	movf	(?___flsub+2)^(0+128),w
 11323  0589  00D8               	movwf	(efgtoa@h+2)^(0+128)
 11324  058A  0821               	movf	(?___flsub+1)^(0+128),w
 11325  058B  00D7               	movwf	(efgtoa@h+1)^(0+128)
 11326  058C  0820               	movf	?___flsub^(0+128),w
 11327  058D  00D6               	movwf	efgtoa@h^(0+128)
 11328                           
 11329                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
 11330  058E  3041               	movlw	65
 11331  058F  0020               	movlb	0	; select bank0
 11332  0590  00C3               	movwf	___fldiv@a+3
 11333  0591  3020               	movlw	32
 11334  0592  00C2               	movwf	___fldiv@a+2
 11335  0593  3000               	movlw	0
 11336  0594  00C1               	movwf	___fldiv@a+1
 11337  0595  3000               	movlw	0
 11338  0596  00C0               	movwf	___fldiv@a
 11339  0597  0021               	movlb	1	; select bank1
 11340  0598  086B               	movf	(efgtoa@u+3)^(0+128),w
 11341  0599  0020               	movlb	0	; select bank0
 11342  059A  00C7               	movwf	___fldiv@b+3
 11343  059B  0021               	movlb	1	; select bank1
 11344  059C  086A               	movf	(efgtoa@u+2)^(0+128),w
 11345  059D  0020               	movlb	0	; select bank0
 11346  059E  00C6               	movwf	___fldiv@b+2
 11347  059F  0021               	movlb	1	; select bank1
 11348  05A0  0869               	movf	(efgtoa@u+1)^(0+128),w
 11349  05A1  0020               	movlb	0	; select bank0
 11350  05A2  00C5               	movwf	___fldiv@b+1
 11351  05A3  0021               	movlb	1	; select bank1
 11352  05A4  0868               	movf	efgtoa@u^(0+128),w
 11353  05A5  0020               	movlb	0	; select bank0
 11354  05A6  00C4               	movwf	___fldiv@b
 11355  05A7  319A  22B3  3180   	fcall	___fldiv
 11356  05AA  0020               	movlb	0	; select bank0
 11357  05AB  0843               	movf	?___fldiv+3,w
 11358  05AC  0021               	movlb	1	; select bank1
 11359  05AD  00EB               	movwf	(efgtoa@u+3)^(0+128)
 11360  05AE  0020               	movlb	0	; select bank0
 11361  05AF  0842               	movf	?___fldiv+2,w
 11362  05B0  0021               	movlb	1	; select bank1
 11363  05B1  00EA               	movwf	(efgtoa@u+2)^(0+128)
 11364  05B2  0020               	movlb	0	; select bank0
 11365  05B3  0841               	movf	?___fldiv+1,w
 11366  05B4  0021               	movlb	1	; select bank1
 11367  05B5  00E9               	movwf	(efgtoa@u+1)^(0+128)
 11368  05B6  0020               	movlb	0	; select bank0
 11369  05B7  0840               	movf	?___fldiv,w
 11370  05B8  0021               	movlb	1	; select bank1
 11371  05B9  00E8               	movwf	efgtoa@u^(0+128)
 11372                           
 11373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
 11374  05BA  30FF               	movlw	255
 11375  05BB  07CA               	addwf	efgtoa@ne^(0+128),f
 11376  05BC  30FF               	movlw	255
 11377  05BD  3DCB               	addwfc	(efgtoa@ne+1)^(0+128),f
 11378                           
 11379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
 11380  05BE  3001               	movlw	1
 11381  05BF  07DE               	addwf	efgtoa@i^(0+128),f
 11382  05C0  3000               	movlw	0
 11383  05C1  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11384  05C2                     l7583:	
 11385                           
 11386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
 11387  05C2  085F               	movf	(efgtoa@i+1)^(0+128),w
 11388  05C3  3A80               	xorlw	128
 11389  05C4  00B0               	movwf	??_efgtoa^(0+128)
 11390  05C5  0849               	movf	(efgtoa@m+1)^(0+128),w
 11391  05C6  3A80               	xorlw	128
 11392  05C7  0230               	subwf	??_efgtoa^(0+128),w
 11393  05C8  1D03               	skipz
 11394  05C9  2DCC               	goto	u10435
 11395  05CA  0848               	movf	efgtoa@m^(0+128),w
 11396  05CB  025E               	subwf	efgtoa@i^(0+128),w
 11397  05CC                     u10435:	
 11398  05CC  1803               	skipnc
 11399  05CD  2DDA               	goto	l7587
 11400  05CE  0021               	movlb	1	; select bank1
 11401  05CF  0867               	movf	(efgtoa@n+1)^(0+128),w
 11402  05D0  3A80               	xorlw	128
 11403  05D1  00B0               	movwf	??_efgtoa^(0+128)
 11404  05D2  3080               	movlw	128
 11405  05D3  0230               	subwf	??_efgtoa^(0+128),w
 11406  05D4  1D03               	skipz
 11407  05D5  2DD8               	goto	u10445
 11408  05D6  304B               	movlw	75
 11409  05D7  0266               	subwf	efgtoa@n^(0+128),w
 11410  05D8                     u10445:	
 11411  05D8  1C03               	skipc
 11412  05D9  2CA0               	goto	l7535
 11413  05DA                     l7587:	
 11414                           
 11415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
 11416  05DA  0021               	movlb	1	; select bank1
 11417  05DB  0846               	movf	efgtoa@pp^(0+128),w
 11418  05DC  0447               	iorwf	(efgtoa@pp+1)^(0+128),w
 11419  05DD  1D03               	btfss	3,2
 11420  05DE  2DF0               	goto	l7595
 11421  05DF  0023               	movlb	3	; select bank3
 11422  05E0  1E38               	btfss	_flags^(0+384),4
 11423  05E1  2DF0               	goto	l7595
 11424                           
 11425                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
 11426  05E2  302E               	movlw	46
 11427  05E3  0021               	movlb	1	; select bank1
 11428  05E4  00B0               	movwf	??_efgtoa^(0+128)
 11429  05E5  0866               	movf	efgtoa@n^(0+128),w
 11430  05E6  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11431  05E7  0086               	movwf	6
 11432  05E8  3002               	movlw	2	; select bank5/6
 11433  05E9  0087               	movwf	7
 11434  05EA  0830               	movf	??_efgtoa^(0+128),w
 11435  05EB  0081               	movwf	1
 11436  05EC  3001               	movlw	1
 11437  05ED  07E6               	addwf	efgtoa@n^(0+128),f
 11438  05EE  3000               	movlw	0
 11439  05EF  3DE7               	addwfc	(efgtoa@n+1)^(0+128),f
 11440  05F0                     l7595:	
 11441                           
 11442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
 11443  05F0  0021               	movlb	1	; select bank1
 11444  05F1  0866               	movf	efgtoa@n^(0+128),w
 11445  05F2  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11446  05F3  0086               	movwf	6
 11447  05F4  3002               	movlw	2	; select bank5/6
 11448  05F5  0087               	movwf	7
 11449  05F6  0181               	clrf	1
 11450                           
 11451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
 11452  05F7  3065               	movlw	101
 11453  05F8  0652               	xorwf	efgtoa@nmode^(0+128),w
 11454  05F9  1D03               	btfss	3,2
 11455  05FA  2EB1               	goto	l7657
 11456                           
 11457                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
 11458  05FB  304F               	movlw	79
 11459  05FC  00DE               	movwf	efgtoa@i^(0+128)
 11460  05FD  3000               	movlw	0
 11461  05FE  00DF               	movwf	(efgtoa@i^(0+128)+1)
 11462                           
 11463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
 11464  05FF  085E               	movf	efgtoa@i^(0+128),w
 11465  0600  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11466  0601  0086               	movwf	6
 11467  0602  3002               	movlw	2	; select bank5/6
 11468  0603  0087               	movwf	7
 11469  0604  0181               	clrf	1
 11470                           
 11471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
 11472  0605  01CE               	clrf	efgtoa@sign^(0+128)
 11473  0606  01CF               	clrf	(efgtoa@sign+1)^(0+128)
 11474                           
 11475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
 11476  0607  1FE5               	btfss	(efgtoa@e+1)^(0+128),7
 11477  0608  2E12               	goto	l7611
 11478                           
 11479                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
 11480  0609  3001               	movlw	1
 11481  060A  00CE               	movwf	efgtoa@sign^(0+128)
 11482  060B  3000               	movlw	0
 11483  060C  00CF               	movwf	(efgtoa@sign^(0+128)+1)
 11484                           
 11485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
 11486  060D  09E4               	comf	efgtoa@e^(0+128),f
 11487  060E  09E5               	comf	(efgtoa@e+1)^(0+128),f
 11488  060F  0AE4               	incf	efgtoa@e^(0+128),f
 11489  0610  1903               	skipnz
 11490  0611  0AE5               	incf	(efgtoa@e+1)^(0+128),f
 11491  0612                     l7611:	
 11492                           
 11493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
 11494  0612  3002               	movlw	2
 11495  0613  00D0               	movwf	efgtoa@p^(0+128)
 11496  0614  3000               	movlw	0
 11497  0615  00D1               	movwf	(efgtoa@p^(0+128)+1)
 11498  0616                     l7623:	
 11499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 11500                           
 11501                           
 11502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
 11503  0616  0864               	movf	efgtoa@e^(0+128),w
 11504  0617  0465               	iorwf	(efgtoa@e+1)^(0+128),w
 11505  0618  1903               	btfsc	3,2
 11506  0619  2E4E               	goto	l7625
 11507  061A                     l7613:	
 11508                           
 11509                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
 11510  061A  30FF               	movlw	255
 11511  061B  0021               	movlb	1	; select bank1
 11512  061C  07DE               	addwf	efgtoa@i^(0+128),f
 11513  061D  30FF               	movlw	255
 11514  061E  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11515                           
 11516                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
 11517  061F  300A               	movlw	10
 11518  0620  00F1               	movwf	___awmod@divisor
 11519  0621  3000               	movlw	0
 11520  0622  00F2               	movwf	___awmod@divisor+1
 11521  0623  0865               	movf	(efgtoa@e+1)^(0+128),w
 11522  0624  00F4               	movwf	___awmod@dividend+1
 11523  0625  0864               	movf	efgtoa@e^(0+128),w
 11524  0626  00F3               	movwf	___awmod@dividend
 11525  0627  31B1  2174  3180   	fcall	___awmod
 11526  062A  0871               	movf	?___awmod,w
 11527  062B  3E30               	addlw	48
 11528  062C  0021               	movlb	1	; select bank1
 11529  062D  00B0               	movwf	??_efgtoa^(0+128)
 11530  062E  085E               	movf	efgtoa@i^(0+128),w
 11531  062F  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11532  0630  0086               	movwf	6
 11533  0631  3002               	movlw	2	; select bank5/6
 11534  0632  0087               	movwf	7
 11535  0633  0830               	movf	??_efgtoa^(0+128),w
 11536  0634  0081               	movwf	1
 11537                           
 11538                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
 11539  0635  300A               	movlw	10
 11540  0636  00F1               	movwf	___awdiv@divisor
 11541  0637  3000               	movlw	0
 11542  0638  00F2               	movwf	___awdiv@divisor+1
 11543  0639  0865               	movf	(efgtoa@e+1)^(0+128),w
 11544  063A  00F4               	movwf	___awdiv@dividend+1
 11545  063B  0864               	movf	efgtoa@e^(0+128),w
 11546  063C  00F3               	movwf	___awdiv@dividend
 11547  063D  31B2  2253  3180   	fcall	___awdiv
 11548  0640  0872               	movf	?___awdiv+1,w
 11549  0641  0021               	movlb	1	; select bank1
 11550  0642  00E5               	movwf	(efgtoa@e+1)^(0+128)
 11551  0643  0871               	movf	?___awdiv,w
 11552  0644  00E4               	movwf	efgtoa@e^(0+128)
 11553                           
 11554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
 11555  0645  30FF               	movlw	255
 11556  0646  07D0               	addwf	efgtoa@p^(0+128),f
 11557  0647  30FF               	movlw	255
 11558  0648  3DD1               	addwfc	(efgtoa@p+1)^(0+128),f
 11559                           
 11560                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
 11561  0649  30FF               	movlw	255
 11562  064A  07D3               	addwf	efgtoa@w^(0+128),f
 11563  064B  30FF               	movlw	255
 11564  064C  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11565  064D  2E16               	goto	l7623
 11566  064E                     l7625:	
 11567  064E  0851               	movf	(efgtoa@p+1)^(0+128),w
 11568  064F  3A80               	xorlw	128
 11569  0650  00B0               	movwf	??_efgtoa^(0+128)
 11570  0651  3080               	movlw	128
 11571  0652  0230               	subwf	??_efgtoa^(0+128),w
 11572  0653  1D03               	skipz
 11573  0654  2E57               	goto	u10505
 11574  0655  3001               	movlw	1
 11575  0656  0250               	subwf	efgtoa@p^(0+128),w
 11576  0657                     u10505:	
 11577  0657  1803               	skipnc
 11578  0658  2E1A               	goto	l7613
 11579                           
 11580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
 11581  0659  30FF               	movlw	255
 11582  065A  0021               	movlb	1	; select bank1
 11583  065B  07DE               	addwf	efgtoa@i^(0+128),f
 11584  065C  30FF               	movlw	255
 11585  065D  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11586                           
 11587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
 11588  065E  084E               	movf	efgtoa@sign^(0+128),w
 11589  065F  044F               	iorwf	(efgtoa@sign+1)^(0+128),w
 11590  0660  1D03               	btfss	3,2
 11591  0661  2E64               	goto	l7633
 11592  0662  302B               	movlw	43
 11593  0663  2E65               	goto	L8
 11594  0664                     l7633:	
 11595  0664  302D               	movlw	45
 11596  0665                     L8:	
 11597  0665  00BE               	movwf	_efgtoa$1258^(0+128)
 11598  0666  3000               	movlw	0
 11599  0667  00BF               	movwf	(_efgtoa$1258^(0+128)+1)
 11600  0668  083E               	movf	_efgtoa$1258^(0+128),w
 11601  0669  00B0               	movwf	??_efgtoa^(0+128)
 11602  066A  085E               	movf	efgtoa@i^(0+128),w
 11603  066B  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11604  066C  0086               	movwf	6
 11605  066D  3002               	movlw	2	; select bank5/6
 11606  066E  0087               	movwf	7
 11607  066F  0830               	movf	??_efgtoa^(0+128),w
 11608  0670  0081               	movwf	1
 11609                           
 11610                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
 11611  0671  30FF               	movlw	255
 11612  0672  07D3               	addwf	efgtoa@w^(0+128),f
 11613  0673  30FF               	movlw	255
 11614  0674  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11615                           
 11616                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 11617  0675  30FF               	movlw	255
 11618  0676  07DE               	addwf	efgtoa@i^(0+128),f
 11619  0677  30FF               	movlw	255
 11620  0678  3DDF               	addwfc	(efgtoa@i+1)^(0+128),f
 11621  0679  082F               	movf	efgtoa@c^(0+128),w
 11622  067A  3EBF               	addlw	191
 11623  067B  00B0               	movwf	??_efgtoa^(0+128)
 11624  067C  30FF               	movlw	255
 11625  067D  1803               	skipnc
 11626  067E  3000               	movlw	0
 11627  067F  00B1               	movwf	(??_efgtoa^(0+128)+1)
 11628  0680  3000               	movlw	0
 11629  0681  0231               	subwf	(??_efgtoa+1)^(0+128),w
 11630  0682  301A               	movlw	26
 11631  0683  1903               	skipnz
 11632  0684  0230               	subwf	??_efgtoa^(0+128),w
 11633  0685  1803               	btfsc	3,0
 11634  0686  2E89               	goto	u10520
 11635  0687  3001               	movlw	1
 11636  0688  2E8A               	goto	u10530
 11637  0689                     u10520:	
 11638  0689  3000               	movlw	0
 11639  068A                     u10530:	
 11640  068A  00B2               	movwf	(??_efgtoa+2)^(0+128)
 11641  068B  01B3               	clrf	((??_efgtoa+2)^(0+128)+1)
 11642  068C  0832               	movf	(??_efgtoa+2)^(0+128),w
 11643  068D  00C2               	movwf	_efgtoa$1260^(0+128)
 11644  068E  0833               	movf	(??_efgtoa+3)^(0+128),w
 11645  068F  00C3               	movwf	(_efgtoa$1260+1)^(0+128)
 11646  0690  0842               	movf	_efgtoa$1260^(0+128),w
 11647  0691  0443               	iorwf	(_efgtoa$1260+1)^(0+128),w
 11648  0692  1D03               	btfss	3,2
 11649  0693  2E96               	goto	l7649
 11650  0694  3065               	movlw	101
 11651  0695  2E97               	goto	L9
 11652  0696                     l7649:	
 11653  0696  3045               	movlw	69
 11654  0697                     L9:	
 11655  0697  00C0               	movwf	_efgtoa$1259^(0+128)
 11656  0698  3000               	movlw	0
 11657  0699  00C1               	movwf	(_efgtoa$1259^(0+128)+1)
 11658  069A  0840               	movf	_efgtoa$1259^(0+128),w
 11659  069B  00B0               	movwf	??_efgtoa^(0+128)
 11660  069C  085E               	movf	efgtoa@i^(0+128),w
 11661  069D  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11662  069E  0086               	movwf	6
 11663  069F  3002               	movlw	2	; select bank5/6
 11664  06A0  0087               	movwf	7
 11665  06A1  0830               	movf	??_efgtoa^(0+128),w
 11666  06A2  0081               	movwf	1
 11667                           
 11668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
 11669  06A3  30FF               	movlw	255
 11670  06A4  07D3               	addwf	efgtoa@w^(0+128),f
 11671  06A5  30FF               	movlw	255
 11672  06A6  3DD4               	addwfc	(efgtoa@w+1)^(0+128),f
 11673                           
 11674                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
 11675  06A7  085E               	movf	efgtoa@i^(0+128),w
 11676  06A8  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11677  06A9  00F1               	movwf	strcpy@src
 11678  06AA  3002               	movlw	2
 11679  06AB  00F2               	movwf	strcpy@src+1
 11680  06AC  0866               	movf	efgtoa@n^(0+128),w
 11681  06AD  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11682  06AE  31BE  26A1  3180   	fcall	_strcpy
 11683  06B1                     l7657:	
 11684                           
 11685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
 11686  06B1  0021               	movlb	1	; select bank1
 11687  06B2  082A               	movf	(efgtoa@fp+1)^(0+128),w
 11688  06B3  0020               	movlb	0	; select bank0
 11689  06B4  00A7               	movwf	pad@fp+1
 11690  06B5  0021               	movlb	1	; select bank1
 11691  06B6  0829               	movf	efgtoa@fp^(0+128),w
 11692  06B7  0020               	movlb	0	; select bank0
 11693  06B8  00A6               	movwf	pad@fp
 11694  06B9  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 11695  06BA  0021               	movlb	1	; select bank1
 11696  06BB  00B0               	movwf	??_efgtoa^(0+128)
 11697  06BC  0830               	movf	??_efgtoa^(0+128),w
 11698  06BD  0020               	movlb	0	; select bank0
 11699  06BE  00A8               	movwf	pad@buf
 11700  06BF  0021               	movlb	1	; select bank1
 11701  06C0  0854               	movf	(efgtoa@w+1)^(0+128),w
 11702  06C1  0020               	movlb	0	; select bank0
 11703  06C2  00AA               	movwf	pad@p+1
 11704  06C3  0021               	movlb	1	; select bank1
 11705  06C4  0853               	movf	efgtoa@w^(0+128),w
 11706  06C5  0020               	movlb	0	; select bank0
 11707  06C6  00A9               	movwf	pad@p
 11708  06C7  31B2  2202         	fcall	_pad
 11709  06C9  0020               	movlb	0	; select bank0
 11710  06CA  0827               	movf	?_pad+1,w
 11711  06CB  0021               	movlb	1	; select bank1
 11712  06CC  00AA               	movwf	(?_efgtoa+1)^(0+128)
 11713  06CD  0020               	movlb	0	; select bank0
 11714  06CE  0826               	movf	?_pad,w
 11715  06CF  0021               	movlb	1	; select bank1
 11716  06D0  00A9               	movwf	?_efgtoa^(0+128)
 11717  06D1  0008               	return
 11718  06D2                     __end_of_efgtoa:	
 11719                           
 11720                           	psect	text21
 11721  3F03                     __ptext21:	
 11722 ;; *************** function _tolower *****************
 11723 ;; Defined at:
 11724 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\tolower.c"
 11725 ;; Parameters:    Size  Location     Type
 11726 ;;  c               2    7[COMMON] int 
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;		None
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  2    7[COMMON] int 
 11731 ;; Registers used:
 11732 ;;		wreg, status,2, status,0
 11733 ;; Tracked objects:
 11734 ;;		On entry : 0/0
 11735 ;;		On exit  : 0/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11740 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11741 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11742 ;;Total ram usage:        8 bytes
 11743 ;; Hardware stack levels used:    1
 11744 ;; Hardware stack levels required when called:    2
 11745 ;; This function calls:
 11746 ;;		_isupper
 11747 ;; This function is called by:
 11748 ;;		_efgtoa
 11749 ;;		_vfpfcnvrt
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           
 11754                           ;psect for function _tolower
 11755  3F03                     _tolower:	
 11756                           
 11757                           ;incstack = 0
 11758                           ; Regs used in _tolower: [wreg+status,2+status,0]
 11759  3F03  0877               	movf	tolower@c,w
 11760  3F04  3EBF               	addlw	191
 11761  3F05  0020               	movlb	0	; select bank0
 11762  3F06  00A0               	movwf	??_tolower
 11763  3F07  30FF               	movlw	255
 11764  3F08  3D78               	addwfc	tolower@c+1,w
 11765  3F09  00A1               	movwf	??_tolower+1
 11766  3F0A  3000               	movlw	0
 11767  3F0B  0221               	subwf	??_tolower+1,w
 11768  3F0C  301A               	movlw	26
 11769  3F0D  1903               	skipnz
 11770  3F0E  0220               	subwf	??_tolower,w
 11771  3F0F  1803               	btfsc	3,0
 11772  3F10  2F13               	goto	u9770
 11773  3F11  3001               	movlw	1
 11774  3F12  2F14               	goto	u9780
 11775  3F13                     u9770:	
 11776  3F13  3000               	movlw	0
 11777  3F14                     u9780:	
 11778  3F14  00A2               	movwf	??_tolower+2
 11779  3F15  01A3               	clrf	??_tolower+3
 11780  3F16  0822               	movf	??_tolower+2,w
 11781  3F17  00F9               	movwf	_tolower$1888
 11782  3F18  0823               	movf	??_tolower+3,w
 11783  3F19  00FA               	movwf	_tolower$1888+1
 11784  3F1A  0879               	movf	_tolower$1888,w
 11785  3F1B  047A               	iorwf	_tolower$1888+1,w
 11786  3F1C  1903               	btfsc	3,2
 11787  3F1D  0008               	return
 11788  3F1E  3020               	movlw	32
 11789  3F1F  0477               	iorwf	tolower@c,w
 11790  3F20  00F7               	movwf	?_tolower
 11791  3F21  3000               	movlw	0
 11792  3F22  0478               	iorwf	tolower@c+1,w
 11793  3F23  00F8               	movwf	?_tolower+1
 11794  3F24  0008               	return
 11795  3F25                     __end_of_tolower:	
 11796                           
 11797                           	psect	text22
 11798  3DC7                     __ptext22:	
 11799 ;; *************** function _isupper *****************
 11800 ;; Defined at:
 11801 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
 11802 ;; Parameters:    Size  Location     Type
 11803 ;;  c               2    1[COMMON] int 
 11804 ;; Auto vars:     Size  Location     Type
 11805 ;;		None
 11806 ;; Return value:  Size  Location     Type
 11807 ;;                  2    1[COMMON] int 
 11808 ;; Registers used:
 11809 ;;		wreg, status,2, status,0
 11810 ;; Tracked objects:
 11811 ;;		On entry : 0/0
 11812 ;;		On exit  : 0/0
 11813 ;;		Unchanged: 0/0
 11814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11815 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11817 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11818 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11819 ;;Total ram usage:        6 bytes
 11820 ;; Hardware stack levels used:    1
 11821 ;; Hardware stack levels required when called:    1
 11822 ;; This function calls:
 11823 ;;		Nothing
 11824 ;; This function is called by:
 11825 ;;		_efgtoa
 11826 ;;		_xtoa
 11827 ;;		_vfpfcnvrt
 11828 ;;		_tolower
 11829 ;; This function uses a non-reentrant model
 11830 ;;
 11831                           
 11832                           
 11833                           ;psect for function _isupper
 11834  3DC7                     _isupper:	
 11835                           
 11836                           ;incstack = 0
 11837                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11838  3DC7  0871               	movf	isupper@c,w
 11839  3DC8  3EBF               	addlw	191
 11840  3DC9  00F3               	movwf	??_isupper
 11841  3DCA  30FF               	movlw	255
 11842  3DCB  3D72               	addwfc	isupper@c+1,w
 11843  3DCC  00F4               	movwf	??_isupper+1
 11844  3DCD  3000               	movlw	0
 11845  3DCE  0274               	subwf	??_isupper+1,w
 11846  3DCF  301A               	movlw	26
 11847  3DD0  1903               	skipnz
 11848  3DD1  0273               	subwf	??_isupper,w
 11849  3DD2  1803               	btfsc	3,0
 11850  3DD3  2DD6               	goto	u9690
 11851  3DD4  3001               	movlw	1
 11852  3DD5  2DD7               	goto	u9700
 11853  3DD6                     u9690:	
 11854  3DD6  3000               	movlw	0
 11855  3DD7                     u9700:	
 11856  3DD7  00F5               	movwf	??_isupper+2
 11857  3DD8  01F6               	clrf	??_isupper+3
 11858  3DD9  0875               	movf	??_isupper+2,w
 11859  3DDA  00F1               	movwf	?_isupper
 11860  3DDB  0876               	movf	??_isupper+3,w
 11861  3DDC  00F2               	movwf	?_isupper+1
 11862  3DDD  0008               	return
 11863  3DDE                     __end_of_isupper:	
 11864                           
 11865                           	psect	text23
 11866  3EA1                     __ptext23:	
 11867 ;; *************** function _strcpy *****************
 11868 ;; Defined at:
 11869 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strcpy.c"
 11870 ;; Parameters:    Size  Location     Type
 11871 ;;  dest            1    wreg     PTR unsigned char 
 11872 ;;		 -> dbuf(80), 
 11873 ;;  src             2    1[COMMON] PTR const unsigned char 
 11874 ;;		 -> STR_32(4), STR_31(4), STR_28(4), STR_27(4), 
 11875 ;;		 -> dbuf(80), 
 11876 ;; Auto vars:     Size  Location     Type
 11877 ;;  dest            1    8[COMMON] PTR unsigned char 
 11878 ;;		 -> dbuf(80), 
 11879 ;;  s               2    5[COMMON] PTR const unsigned char 
 11880 ;;		 -> STR_32(4), STR_31(4), STR_28(4), STR_27(4), 
 11881 ;;		 -> dbuf(80), 
 11882 ;;  d               1    7[COMMON] PTR unsigned char 
 11883 ;;		 -> dbuf(80), 
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  1    wreg      PTR unsigned char 
 11886 ;; Registers used:
 11887 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 0/0
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11894 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11895 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11896 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11897 ;;Total ram usage:        8 bytes
 11898 ;; Hardware stack levels used:    1
 11899 ;; Hardware stack levels required when called:    1
 11900 ;; This function calls:
 11901 ;;		Nothing
 11902 ;; This function is called by:
 11903 ;;		_efgtoa
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           
 11908                           ;psect for function _strcpy
 11909  3EA1                     _strcpy:	
 11910                           
 11911                           ;incstack = 0
 11912                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 11913                           ;strcpy@dest stored from wreg
 11914  3EA1  00F8               	movwf	strcpy@dest
 11915  3EA2  0872               	movf	strcpy@src+1,w
 11916  3EA3  00F6               	movwf	strcpy@s+1
 11917  3EA4  0871               	movf	strcpy@src,w
 11918  3EA5  00F5               	movwf	strcpy@s
 11919  3EA6  0878               	movf	strcpy@dest,w
 11920  3EA7  00F3               	movwf	??_strcpy
 11921  3EA8  0873               	movf	??_strcpy,w
 11922  3EA9  00F7               	movwf	strcpy@d
 11923  3EAA                     l4751:	
 11924  3EAA  0877               	movf	strcpy@d,w
 11925  3EAB  0086               	movwf	6
 11926  3EAC  3002               	movlw	2	; select bank4/5
 11927  3EAD  0087               	movwf	7
 11928  3EAE  0AF7               	incf	strcpy@d,f
 11929  3EAF  0876               	movf	strcpy@s+1,w
 11930  3EB0  00F4               	movwf	??_strcpy+1
 11931  3EB1  0875               	movf	strcpy@s,w
 11932  3EB2  00F3               	movwf	??_strcpy
 11933  3EB3  0AF5               	incf	strcpy@s,f
 11934  3EB4  1903               	skipnz
 11935  3EB5  0AF6               	incf	strcpy@s+1,f
 11936  3EB6  0873               	movf	??_strcpy,w
 11937  3EB7  0084               	movwf	4
 11938  3EB8  0874               	movf	??_strcpy+1,w
 11939  3EB9  0085               	movwf	5
 11940  3EBA  0800               	movf	0,w	;code access
 11941  3EBB  3FC0               	movwi [0]fsr1
 11942  3EBC  0889               	movf	9,f
 11943  3EBD  1903               	btfsc	3,2
 11944  3EBE  0008               	return
 11945  3EBF  2EAA               	goto	l4751
 11946  3EC0                     __end_of_strcpy:	
 11947                           
 11948                           	psect	text24
 11949  2D6C                     __ptext24:	
 11950 ;; *************** function _floorf *****************
 11951 ;; Defined at:
 11952 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\floorf.c"
 11953 ;; Parameters:    Size  Location     Type
 11954 ;;  x               4   58[BANK0 ] float 
 11955 ;; Auto vars:     Size  Location     Type
 11956 ;;  u               4   74[BANK0 ] struct .
 11957 ;;  m               4   68[BANK0 ] unsigned long 
 11958 ;;  e               2   72[BANK0 ] int 
 11959 ;; Return value:  Size  Location     Type
 11960 ;;                  4   58[BANK0 ] float 
 11961 ;; Registers used:
 11962 ;;		wreg, status,2, status,0
 11963 ;; Tracked objects:
 11964 ;;		On entry : 0/0
 11965 ;;		On exit  : 0/0
 11966 ;;		Unchanged: 0/0
 11967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11968 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11969 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11970 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11971 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11972 ;;Total ram usage:       20 bytes
 11973 ;; Hardware stack levels used:    1
 11974 ;; Hardware stack levels required when called:    1
 11975 ;; This function calls:
 11976 ;;		Nothing
 11977 ;; This function is called by:
 11978 ;;		_efgtoa
 11979 ;; This function uses a non-reentrant model
 11980 ;;
 11981                           
 11982                           
 11983                           ;psect for function _floorf
 11984  2D6C                     _floorf:	
 11985                           
 11986                           ;incstack = 0
 11987                           ; Regs used in _floorf: [wreg+status,2+status,0]
 11988  2D6C  0024               	movlb	4	; select bank4
 11989  2D6D  0823               	movf	(floorf@F524+3)^(0+512),w
 11990  2D6E  0020               	movlb	0	; select bank0
 11991  2D6F  00ED               	movwf	floorf@u+3
 11992  2D70  0024               	movlb	4	; select bank4
 11993  2D71  0822               	movf	(floorf@F524+2)^(0+512),w
 11994  2D72  0020               	movlb	0	; select bank0
 11995  2D73  00EC               	movwf	floorf@u+2
 11996  2D74  0024               	movlb	4	; select bank4
 11997  2D75  0821               	movf	(floorf@F524+1)^(0+512),w
 11998  2D76  0020               	movlb	0	; select bank0
 11999  2D77  00EB               	movwf	floorf@u+1
 12000  2D78  0024               	movlb	4	; select bank4
 12001  2D79  0820               	movf	floorf@F524^(0+512),w
 12002  2D7A  0020               	movlb	0	; select bank0
 12003  2D7B  00EA               	movwf	floorf@u
 12004  2D7C  085D               	movf	floorf@x+3,w
 12005  2D7D  00ED               	movwf	floorf@u+3
 12006  2D7E  085C               	movf	floorf@x+2,w
 12007  2D7F  00EC               	movwf	floorf@u+2
 12008  2D80  085B               	movf	floorf@x+1,w
 12009  2D81  00EB               	movwf	floorf@u+1
 12010  2D82  085A               	movf	floorf@x,w
 12011  2D83  00EA               	movwf	floorf@u
 12012  2D84  086A               	movf	floorf@u,w
 12013  2D85  00DE               	movwf	??_floorf
 12014  2D86  086B               	movf	floorf@u+1,w
 12015  2D87  00DF               	movwf	??_floorf+1
 12016  2D88  086C               	movf	floorf@u+2,w
 12017  2D89  00E0               	movwf	??_floorf+2
 12018  2D8A  086D               	movf	floorf@u+3,w
 12019  2D8B  00E1               	movwf	??_floorf+3
 12020  2D8C  3017               	movlw	23
 12021  2D8D                     u5605:	
 12022  2D8D  36E1               	lsrf	??_floorf+3,f
 12023  2D8E  0CE0               	rrf	??_floorf+2,f
 12024  2D8F  0CDF               	rrf	??_floorf+1,f
 12025  2D90  0CDE               	rrf	??_floorf,f
 12026  2D91  0B89               	decfsz	9,f
 12027  2D92  2D8D               	goto	u5605
 12028  2D93  30FF               	movlw	255
 12029  2D94  055E               	andwf	??_floorf,w
 12030  2D95  00E2               	movwf	??_floorf+4
 12031  2D96  3000               	movlw	0
 12032  2D97  055F               	andwf	??_floorf+1,w
 12033  2D98  00E3               	movwf	??_floorf+5
 12034  2D99  0862               	movf	??_floorf+4,w
 12035  2D9A  3E81               	addlw	129
 12036  2D9B  00E8               	movwf	floorf@e
 12037  2D9C  30FF               	movlw	255
 12038  2D9D  3D63               	addwfc	??_floorf+5,w
 12039  2D9E  00E9               	movwf	floorf@e+1
 12040  2D9F  0869               	movf	floorf@e+1,w
 12041  2DA0  3A80               	xorlw	128
 12042  2DA1  00DE               	movwf	??_floorf
 12043  2DA2  3080               	movlw	128
 12044  2DA3  025E               	subwf	??_floorf,w
 12045  2DA4  1D03               	skipz
 12046  2DA5  2DA8               	goto	u5615
 12047  2DA6  3017               	movlw	23
 12048  2DA7  0268               	subwf	floorf@e,w
 12049  2DA8                     u5615:	
 12050  2DA8  1803               	btfsc	3,0
 12051  2DA9  0008               	return
 12052  2DAA  0020               	movlb	0	; select bank0
 12053  2DAB  1BE9               	btfsc	floorf@e+1,7
 12054  2DAC  2E05               	goto	l4783
 12055  2DAD  30FF               	movlw	255
 12056  2DAE  00DE               	movwf	??_floorf
 12057  2DAF  30FF               	movlw	255
 12058  2DB0  00DF               	movwf	??_floorf+1
 12059  2DB1  307F               	movlw	127
 12060  2DB2  00E0               	movwf	??_floorf+2
 12061  2DB3  3000               	movlw	0
 12062  2DB4  00E1               	movwf	??_floorf+3
 12063  2DB5  0A68               	incf	floorf@e,w
 12064  2DB6  2DBB               	goto	u5630
 12065  2DB7                     u5635:	
 12066  2DB7  37E1               	asrf	??_floorf+3,f
 12067  2DB8  0CE0               	rrf	??_floorf+2,f
 12068  2DB9  0CDF               	rrf	??_floorf+1,f
 12069  2DBA  0CDE               	rrf	??_floorf,f
 12070  2DBB                     u5630:	
 12071  2DBB  0B89               	decfsz	9,f
 12072  2DBC  2DB7               	goto	u5635
 12073  2DBD  0861               	movf	??_floorf+3,w
 12074  2DBE  00E7               	movwf	floorf@m+3
 12075  2DBF  0860               	movf	??_floorf+2,w
 12076  2DC0  00E6               	movwf	floorf@m+2
 12077  2DC1  085F               	movf	??_floorf+1,w
 12078  2DC2  00E5               	movwf	floorf@m+1
 12079  2DC3  085E               	movf	??_floorf,w
 12080  2DC4  00E4               	movwf	floorf@m
 12081  2DC5  086A               	movf	floorf@u,w
 12082  2DC6  0564               	andwf	floorf@m,w
 12083  2DC7  00DE               	movwf	??_floorf
 12084  2DC8  086B               	movf	floorf@u+1,w
 12085  2DC9  0565               	andwf	floorf@m+1,w
 12086  2DCA  00DF               	movwf	??_floorf+1
 12087  2DCB  086C               	movf	floorf@u+2,w
 12088  2DCC  0566               	andwf	floorf@m+2,w
 12089  2DCD  00E0               	movwf	??_floorf+2
 12090  2DCE  086D               	movf	floorf@u+3,w
 12091  2DCF  0567               	andwf	floorf@m+3,w
 12092  2DD0  00E1               	movwf	??_floorf+3
 12093  2DD1  0861               	movf	??_floorf+3,w
 12094  2DD2  0460               	iorwf	??_floorf+2,w
 12095  2DD3  045F               	iorwf	??_floorf+1,w
 12096  2DD4  045E               	iorwf	??_floorf,w
 12097  2DD5  1903               	btfsc	3,2
 12098  2DD6  0008               	return
 12099  2DD7  086A               	movf	floorf@u,w
 12100  2DD8  00DE               	movwf	??_floorf
 12101  2DD9  086B               	movf	floorf@u+1,w
 12102  2DDA  00DF               	movwf	??_floorf+1
 12103  2DDB  086C               	movf	floorf@u+2,w
 12104  2DDC  00E0               	movwf	??_floorf+2
 12105  2DDD  086D               	movf	floorf@u+3,w
 12106  2DDE  00E1               	movwf	??_floorf+3
 12107  2DDF  301F               	movlw	31
 12108  2DE0                     u5655:	
 12109  2DE0  36E1               	lsrf	??_floorf+3,f
 12110  2DE1  0CE0               	rrf	??_floorf+2,f
 12111  2DE2  0CDF               	rrf	??_floorf+1,f
 12112  2DE3  0CDE               	rrf	??_floorf,f
 12113  2DE4  0B89               	decfsz	9,f
 12114  2DE5  2DE0               	goto	u5655
 12115  2DE6  0861               	movf	??_floorf+3,w
 12116  2DE7  0460               	iorwf	??_floorf+2,w
 12117  2DE8  045F               	iorwf	??_floorf+1,w
 12118  2DE9  045E               	iorwf	??_floorf,w
 12119  2DEA  1903               	skipnz
 12120  2DEB  2DF4               	goto	l4781
 12121  2DEC  0864               	movf	floorf@m,w
 12122  2DED  07EA               	addwf	floorf@u,f
 12123  2DEE  0865               	movf	floorf@m+1,w
 12124  2DEF  3DEB               	addwfc	floorf@u+1,f
 12125  2DF0  0866               	movf	floorf@m+2,w
 12126  2DF1  3DEC               	addwfc	floorf@u+2,f
 12127  2DF2  0867               	movf	floorf@m+3,w
 12128  2DF3  3DED               	addwfc	floorf@u+3,f
 12129  2DF4                     l4781:	
 12130  2DF4  0964               	comf	floorf@m,w
 12131  2DF5  00DE               	movwf	??_floorf
 12132  2DF6  0965               	comf	floorf@m+1,w
 12133  2DF7  00DF               	movwf	??_floorf+1
 12134  2DF8  0966               	comf	floorf@m+2,w
 12135  2DF9  00E0               	movwf	??_floorf+2
 12136  2DFA  0967               	comf	floorf@m+3,w
 12137  2DFB  00E1               	movwf	??_floorf+3
 12138  2DFC  085E               	movf	??_floorf,w
 12139  2DFD  05EA               	andwf	floorf@u,f
 12140  2DFE  085F               	movf	??_floorf+1,w
 12141  2DFF  05EB               	andwf	floorf@u+1,f
 12142  2E00  0860               	movf	??_floorf+2,w
 12143  2E01  05EC               	andwf	floorf@u+2,f
 12144  2E02  0861               	movf	??_floorf+3,w
 12145  2E03  05ED               	andwf	floorf@u+3,f
 12146  2E04  2E3B               	goto	l1450
 12147  2E05                     l4783:	
 12148  2E05  086A               	movf	floorf@u,w
 12149  2E06  00DE               	movwf	??_floorf
 12150  2E07  086B               	movf	floorf@u+1,w
 12151  2E08  00DF               	movwf	??_floorf+1
 12152  2E09  086C               	movf	floorf@u+2,w
 12153  2E0A  00E0               	movwf	??_floorf+2
 12154  2E0B  086D               	movf	floorf@u+3,w
 12155  2E0C  00E1               	movwf	??_floorf+3
 12156  2E0D  301F               	movlw	31
 12157  2E0E                     u5675:	
 12158  2E0E  36E1               	lsrf	??_floorf+3,f
 12159  2E0F  0CE0               	rrf	??_floorf+2,f
 12160  2E10  0CDF               	rrf	??_floorf+1,f
 12161  2E11  0CDE               	rrf	??_floorf,f
 12162  2E12  0B89               	decfsz	9,f
 12163  2E13  2E0E               	goto	u5675
 12164  2E14  0861               	movf	??_floorf+3,w
 12165  2E15  0460               	iorwf	??_floorf+2,w
 12166  2E16  045F               	iorwf	??_floorf+1,w
 12167  2E17  045E               	iorwf	??_floorf,w
 12168  2E18  1D03               	skipz
 12169  2E19  2E1E               	goto	l4787
 12170  2E1A  3000               	movlw	0
 12171  2E1B  00ED               	movwf	floorf@u+3
 12172  2E1C  3000               	movlw	0
 12173  2E1D  2E36               	goto	L10
 12174  2E1E                     l4787:	
 12175  2E1E  086A               	movf	floorf@u,w
 12176  2E1F  00DE               	movwf	??_floorf
 12177  2E20  086B               	movf	floorf@u+1,w
 12178  2E21  00DF               	movwf	??_floorf+1
 12179  2E22  086C               	movf	floorf@u+2,w
 12180  2E23  00E0               	movwf	??_floorf+2
 12181  2E24  086D               	movf	floorf@u+3,w
 12182  2E25  00E1               	movwf	??_floorf+3
 12183  2E26  3001               	movlw	1
 12184  2E27                     u5695:	
 12185  2E27  35DE               	lslf	??_floorf,f
 12186  2E28  0DDF               	rlf	??_floorf+1,f
 12187  2E29  0DE0               	rlf	??_floorf+2,f
 12188  2E2A  0DE1               	rlf	??_floorf+3,f
 12189  2E2B  0B89               	decfsz	9,f
 12190  2E2C  2E27               	goto	u5695
 12191  2E2D  0861               	movf	??_floorf+3,w
 12192  2E2E  0460               	iorwf	??_floorf+2,w
 12193  2E2F  045F               	iorwf	??_floorf+1,w
 12194  2E30  045E               	iorwf	??_floorf,w
 12195  2E31  1903               	skipnz
 12196  2E32  2E3B               	goto	l1450
 12197  2E33  30BF               	movlw	191
 12198  2E34  00ED               	movwf	floorf@u+3
 12199  2E35  3080               	movlw	128
 12200  2E36                     L10:	
 12201  2E36  00EC               	movwf	floorf@u+2
 12202  2E37  3000               	movlw	0
 12203  2E38  00EB               	movwf	floorf@u+1
 12204  2E39  3000               	movlw	0
 12205  2E3A  00EA               	movwf	floorf@u
 12206  2E3B                     l1450:	
 12207  2E3B  086D               	movf	floorf@u+3,w
 12208  2E3C  00DD               	movwf	?_floorf+3
 12209  2E3D  086C               	movf	floorf@u+2,w
 12210  2E3E  00DC               	movwf	?_floorf+2
 12211  2E3F  086B               	movf	floorf@u+1,w
 12212  2E40  00DB               	movwf	?_floorf+1
 12213  2E41  086A               	movf	floorf@u,w
 12214  2E42  00DA               	movwf	?_floorf
 12215  2E43  0008               	return
 12216  2E44                     __end_of_floorf:	
 12217                           
 12218                           	psect	text25
 12219  358A                     __ptext25:	
 12220 ;; *************** function ___fpclassifyf *****************
 12221 ;; Defined at:
 12222 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\__fpclassifyf.c"
 12223 ;; Parameters:    Size  Location     Type
 12224 ;;  x               4    1[COMMON] float 
 12225 ;; Auto vars:     Size  Location     Type
 12226 ;;  u               4    2[BANK0 ] struct .
 12227 ;;  e               2    0[BANK0 ] int 
 12228 ;; Return value:  Size  Location     Type
 12229 ;;                  2    1[COMMON] int 
 12230 ;; Registers used:
 12231 ;;		wreg, status,2, status,0
 12232 ;; Tracked objects:
 12233 ;;		On entry : 0/0
 12234 ;;		On exit  : 0/0
 12235 ;;		Unchanged: 0/0
 12236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12238 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12239 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12240 ;;      Totals:        10       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12241 ;;Total ram usage:       16 bytes
 12242 ;; Hardware stack levels used:    1
 12243 ;; Hardware stack levels required when called:    1
 12244 ;; This function calls:
 12245 ;;		Nothing
 12246 ;; This function is called by:
 12247 ;;		_efgtoa
 12248 ;; This function uses a non-reentrant model
 12249 ;;
 12250                           
 12251                           
 12252                           ;psect for function ___fpclassifyf
 12253  358A                     ___fpclassifyf:	
 12254                           
 12255                           ;incstack = 0
 12256                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
 12257  358A  0024               	movlb	4	; select bank4
 12258  358B  0827               	movf	(___fpclassifyf@F463+3)^(0+512),w
 12259  358C  0020               	movlb	0	; select bank0
 12260  358D  00A5               	movwf	___fpclassifyf@u+3
 12261  358E  0024               	movlb	4	; select bank4
 12262  358F  0826               	movf	(___fpclassifyf@F463+2)^(0+512),w
 12263  3590  0020               	movlb	0	; select bank0
 12264  3591  00A4               	movwf	___fpclassifyf@u+2
 12265  3592  0024               	movlb	4	; select bank4
 12266  3593  0825               	movf	(___fpclassifyf@F463+1)^(0+512),w
 12267  3594  0020               	movlb	0	; select bank0
 12268  3595  00A3               	movwf	___fpclassifyf@u+1
 12269  3596  0024               	movlb	4	; select bank4
 12270  3597  0824               	movf	___fpclassifyf@F463^(0+512),w
 12271  3598  0020               	movlb	0	; select bank0
 12272  3599  00A2               	movwf	___fpclassifyf@u
 12273  359A  0874               	movf	___fpclassifyf@x+3,w
 12274  359B  00A5               	movwf	___fpclassifyf@u+3
 12275  359C  0873               	movf	___fpclassifyf@x+2,w
 12276  359D  00A4               	movwf	___fpclassifyf@u+2
 12277  359E  0872               	movf	___fpclassifyf@x+1,w
 12278  359F  00A3               	movwf	___fpclassifyf@u+1
 12279  35A0  0871               	movf	___fpclassifyf@x,w
 12280  35A1  00A2               	movwf	___fpclassifyf@u
 12281  35A2  0822               	movf	___fpclassifyf@u,w
 12282  35A3  00F5               	movwf	??___fpclassifyf
 12283  35A4  0823               	movf	___fpclassifyf@u+1,w
 12284  35A5  00F6               	movwf	??___fpclassifyf+1
 12285  35A6  0824               	movf	___fpclassifyf@u+2,w
 12286  35A7  00F7               	movwf	??___fpclassifyf+2
 12287  35A8  0825               	movf	___fpclassifyf@u+3,w
 12288  35A9  00F8               	movwf	??___fpclassifyf+3
 12289  35AA  3017               	movlw	23
 12290  35AB                     u5485:	
 12291  35AB  36F8               	lsrf	??___fpclassifyf+3,f
 12292  35AC  0CF7               	rrf	??___fpclassifyf+2,f
 12293  35AD  0CF6               	rrf	??___fpclassifyf+1,f
 12294  35AE  0CF5               	rrf	??___fpclassifyf,f
 12295  35AF  0B89               	decfsz	9,f
 12296  35B0  2DAB               	goto	u5485
 12297  35B1  30FF               	movlw	255
 12298  35B2  0575               	andwf	??___fpclassifyf,w
 12299  35B3  00A0               	movwf	___fpclassifyf@e
 12300  35B4  3000               	movlw	0
 12301  35B5  0576               	andwf	??___fpclassifyf+1,w
 12302  35B6  00A1               	movwf	___fpclassifyf@e+1
 12303  35B7  0820               	movf	___fpclassifyf@e,w
 12304  35B8  0421               	iorwf	___fpclassifyf@e+1,w
 12305  35B9  1D03               	btfss	3,2
 12306  35BA  2DDA               	goto	l4739
 12307  35BB  0822               	movf	___fpclassifyf@u,w
 12308  35BC  00F5               	movwf	??___fpclassifyf
 12309  35BD  0823               	movf	___fpclassifyf@u+1,w
 12310  35BE  00F6               	movwf	??___fpclassifyf+1
 12311  35BF  0824               	movf	___fpclassifyf@u+2,w
 12312  35C0  00F7               	movwf	??___fpclassifyf+2
 12313  35C1  0825               	movf	___fpclassifyf@u+3,w
 12314  35C2  00F8               	movwf	??___fpclassifyf+3
 12315  35C3  3001               	movlw	1
 12316  35C4                     u5505:	
 12317  35C4  35F5               	lslf	??___fpclassifyf,f
 12318  35C5  0DF6               	rlf	??___fpclassifyf+1,f
 12319  35C6  0DF7               	rlf	??___fpclassifyf+2,f
 12320  35C7  0DF8               	rlf	??___fpclassifyf+3,f
 12321  35C8  0B89               	decfsz	9,f
 12322  35C9  2DC4               	goto	u5505
 12323  35CA  0878               	movf	??___fpclassifyf+3,w
 12324  35CB  0477               	iorwf	??___fpclassifyf+2,w
 12325  35CC  0476               	iorwf	??___fpclassifyf+1,w
 12326  35CD  0475               	iorwf	??___fpclassifyf,w
 12327  35CE  1D03               	skipz
 12328  35CF  2DD5               	goto	l4735
 12329  35D0  3002               	movlw	2
 12330  35D1  00F1               	movwf	?___fpclassifyf
 12331  35D2  3000               	movlw	0
 12332  35D3  00F2               	movwf	?___fpclassifyf+1
 12333  35D4  0008               	return
 12334  35D5                     l4735:	
 12335  35D5  3003               	movlw	3
 12336  35D6  00F1               	movwf	?___fpclassifyf
 12337  35D7  3000               	movlw	0
 12338  35D8  00F2               	movwf	?___fpclassifyf+1
 12339  35D9  0008               	return
 12340  35DA                     l4739:	
 12341  35DA  0A20               	incf	___fpclassifyf@e,w
 12342  35DB  0421               	iorwf	___fpclassifyf@e+1,w
 12343  35DC  1D03               	btfss	3,2
 12344  35DD  2DFD               	goto	l4745
 12345  35DE  0822               	movf	___fpclassifyf@u,w
 12346  35DF  00F5               	movwf	??___fpclassifyf
 12347  35E0  0823               	movf	___fpclassifyf@u+1,w
 12348  35E1  00F6               	movwf	??___fpclassifyf+1
 12349  35E2  0824               	movf	___fpclassifyf@u+2,w
 12350  35E3  00F7               	movwf	??___fpclassifyf+2
 12351  35E4  0825               	movf	___fpclassifyf@u+3,w
 12352  35E5  00F8               	movwf	??___fpclassifyf+3
 12353  35E6  3009               	movlw	9
 12354  35E7                     u5535:	
 12355  35E7  35F5               	lslf	??___fpclassifyf,f
 12356  35E8  0DF6               	rlf	??___fpclassifyf+1,f
 12357  35E9  0DF7               	rlf	??___fpclassifyf+2,f
 12358  35EA  0DF8               	rlf	??___fpclassifyf+3,f
 12359  35EB  0B89               	decfsz	9,f
 12360  35EC  2DE7               	goto	u5535
 12361  35ED  0878               	movf	??___fpclassifyf+3,w
 12362  35EE  0477               	iorwf	??___fpclassifyf+2,w
 12363  35EF  0476               	iorwf	??___fpclassifyf+1,w
 12364  35F0  0475               	iorwf	??___fpclassifyf,w
 12365  35F1  1D03               	btfss	3,2
 12366  35F2  2DF5               	goto	u5540
 12367  35F3  3001               	movlw	1
 12368  35F4  2DF6               	goto	u5550
 12369  35F5                     u5540:	
 12370  35F5  3000               	movlw	0
 12371  35F6                     u5550:	
 12372  35F6  00F9               	movwf	??___fpclassifyf+4
 12373  35F7  01FA               	clrf	??___fpclassifyf+5
 12374  35F8  0879               	movf	??___fpclassifyf+4,w
 12375  35F9  00F1               	movwf	?___fpclassifyf
 12376  35FA  087A               	movf	??___fpclassifyf+5,w
 12377  35FB  00F2               	movwf	?___fpclassifyf+1
 12378  35FC  0008               	return
 12379  35FD                     l4745:	
 12380  35FD  3004               	movlw	4
 12381  35FE  00F1               	movwf	?___fpclassifyf
 12382  35FF  3000               	movlw	0
 12383  3600  00F2               	movwf	?___fpclassifyf+1
 12384  3601  0008               	return
 12385  3602                     __end_of___fpclassifyf:	
 12386                           
 12387                           	psect	text26
 12388  300E                     __ptext26:	
 12389 ;; *************** function ___flsub *****************
 12390 ;; Defined at:
 12391 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 12392 ;; Parameters:    Size  Location     Type
 12393 ;;  a               4    0[BANK1 ] int 
 12394 ;;  b               4    4[BANK1 ] int 
 12395 ;; Auto vars:     Size  Location     Type
 12396 ;;		None
 12397 ;; Return value:  Size  Location     Type
 12398 ;;                  4    0[BANK1 ] int 
 12399 ;; Registers used:
 12400 ;;		wreg, status,2, status,0, pclath, cstack
 12401 ;; Tracked objects:
 12402 ;;		On entry : 0/0
 12403 ;;		On exit  : 0/0
 12404 ;;		Unchanged: 0/0
 12405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12406 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12409 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12410 ;;Total ram usage:        8 bytes
 12411 ;; Hardware stack levels used:    1
 12412 ;; Hardware stack levels required when called:    2
 12413 ;; This function calls:
 12414 ;;		___fladd
 12415 ;; This function is called by:
 12416 ;;		_efgtoa
 12417 ;; This function uses a non-reentrant model
 12418 ;;
 12419                           
 12420                           
 12421                           ;psect for function ___flsub
 12422  300E                     ___flsub:	
 12423                           
 12424                           ;incstack = 0
 12425                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12426  300E  3080               	movlw	128
 12427  300F  0021               	movlb	1	; select bank1
 12428  3010  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 12429  3011  0827               	movf	(___flsub@b+3)^(0+128),w
 12430  3012  0020               	movlb	0	; select bank0
 12431  3013  00DD               	movwf	___fladd@b+3
 12432  3014  0021               	movlb	1	; select bank1
 12433  3015  0826               	movf	(___flsub@b+2)^(0+128),w
 12434  3016  0020               	movlb	0	; select bank0
 12435  3017  00DC               	movwf	___fladd@b+2
 12436  3018  0021               	movlb	1	; select bank1
 12437  3019  0825               	movf	(___flsub@b+1)^(0+128),w
 12438  301A  0020               	movlb	0	; select bank0
 12439  301B  00DB               	movwf	___fladd@b+1
 12440  301C  0021               	movlb	1	; select bank1
 12441  301D  0824               	movf	___flsub@b^(0+128),w
 12442  301E  0020               	movlb	0	; select bank0
 12443  301F  00DA               	movwf	___fladd@b
 12444  3020  0021               	movlb	1	; select bank1
 12445  3021  0823               	movf	(___flsub@a+3)^(0+128),w
 12446  3022  0020               	movlb	0	; select bank0
 12447  3023  00E1               	movwf	___fladd@a+3
 12448  3024  0021               	movlb	1	; select bank1
 12449  3025  0822               	movf	(___flsub@a+2)^(0+128),w
 12450  3026  0020               	movlb	0	; select bank0
 12451  3027  00E0               	movwf	___fladd@a+2
 12452  3028  0021               	movlb	1	; select bank1
 12453  3029  0821               	movf	(___flsub@a+1)^(0+128),w
 12454  302A  0020               	movlb	0	; select bank0
 12455  302B  00DF               	movwf	___fladd@a+1
 12456  302C  0021               	movlb	1	; select bank1
 12457  302D  0820               	movf	___flsub@a^(0+128),w
 12458  302E  0020               	movlb	0	; select bank0
 12459  302F  00DE               	movwf	___fladd@a
 12460  3030  319C  242D         	fcall	___fladd
 12461  3032  0020               	movlb	0	; select bank0
 12462  3033  085D               	movf	?___fladd+3,w
 12463  3034  0021               	movlb	1	; select bank1
 12464  3035  00A3               	movwf	(?___flsub+3)^(0+128)
 12465  3036  0020               	movlb	0	; select bank0
 12466  3037  085C               	movf	?___fladd+2,w
 12467  3038  0021               	movlb	1	; select bank1
 12468  3039  00A2               	movwf	(?___flsub+2)^(0+128)
 12469  303A  0020               	movlb	0	; select bank0
 12470  303B  085B               	movf	?___fladd+1,w
 12471  303C  0021               	movlb	1	; select bank1
 12472  303D  00A1               	movwf	(?___flsub+1)^(0+128)
 12473  303E  0020               	movlb	0	; select bank0
 12474  303F  085A               	movf	?___fladd,w
 12475  3040  0021               	movlb	1	; select bank1
 12476  3041  00A0               	movwf	?___flsub^(0+128)
 12477  3042  0008               	return
 12478  3043                     __end_of___flsub:	
 12479                           
 12480                           	psect	text27
 12481  3D3B                     __ptext27:	
 12482 ;; *************** function ___flneg *****************
 12483 ;; Defined at:
 12484 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 12485 ;; Parameters:    Size  Location     Type
 12486 ;;  f1              4    1[COMMON] int 
 12487 ;; Auto vars:     Size  Location     Type
 12488 ;;		None
 12489 ;; Return value:  Size  Location     Type
 12490 ;;                  4    1[COMMON] int 
 12491 ;; Registers used:
 12492 ;;		wreg
 12493 ;; Tracked objects:
 12494 ;;		On entry : 0/0
 12495 ;;		On exit  : 0/0
 12496 ;;		Unchanged: 0/0
 12497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12498 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12501 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12502 ;;Total ram usage:        4 bytes
 12503 ;; Hardware stack levels used:    1
 12504 ;; Hardware stack levels required when called:    1
 12505 ;; This function calls:
 12506 ;;		Nothing
 12507 ;; This function is called by:
 12508 ;;		_efgtoa
 12509 ;; This function uses a non-reentrant model
 12510 ;;
 12511                           
 12512                           
 12513                           ;psect for function ___flneg
 12514  3D3B                     ___flneg:	
 12515                           
 12516                           ;incstack = 0
 12517                           ; Regs used in ___flneg: [wreg]
 12518  3D3B  0874               	movf	___flneg@f1+3,w
 12519  3D3C  0473               	iorwf	___flneg@f1+2,w
 12520  3D3D  0472               	iorwf	___flneg@f1+1,w
 12521  3D3E  0471               	iorwf	___flneg@f1,w
 12522  3D3F  1903               	skipnz
 12523  3D40  0008               	return
 12524  3D41  3080               	movlw	128
 12525  3D42  06F4               	xorwf	___flneg@f1+3,f
 12526  3D43  0008               	return
 12527  3D44                     __end_of___flneg:	
 12528                           
 12529                           	psect	text28
 12530  31B9                     __ptext28:	
 12531 ;; *************** function ___fleq *****************
 12532 ;; Defined at:
 12533 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fleq.c"
 12534 ;; Parameters:    Size  Location     Type
 12535 ;;  ff1             4    1[COMMON] int 
 12536 ;;  ff2             4    5[COMMON] int 
 12537 ;; Auto vars:     Size  Location     Type
 12538 ;;		None
 12539 ;; Return value:  Size  Location     Type
 12540 ;;		None               void
 12541 ;; Registers used:
 12542 ;;		wreg, status,2, status,0
 12543 ;; Tracked objects:
 12544 ;;		On entry : 0/0
 12545 ;;		On exit  : 0/0
 12546 ;;		Unchanged: 0/0
 12547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12548 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12550 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12551 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12552 ;;Total ram usage:       12 bytes
 12553 ;; Hardware stack levels used:    1
 12554 ;; Hardware stack levels required when called:    1
 12555 ;; This function calls:
 12556 ;;		Nothing
 12557 ;; This function is called by:
 12558 ;;		_efgtoa
 12559 ;; This function uses a non-reentrant model
 12560 ;;
 12561                           
 12562                           
 12563                           ;psect for function ___fleq
 12564  31B9                     ___fleq:	
 12565                           
 12566                           ;incstack = 0
 12567                           ; Regs used in ___fleq: [wreg+status,2+status,0]
 12568  31B9  3000               	movlw	0
 12569  31BA  0571               	andwf	___fleq@ff1,w
 12570  31BB  0020               	movlb	0	; select bank0
 12571  31BC  00A0               	movwf	??___fleq
 12572  31BD  3000               	movlw	0
 12573  31BE  0572               	andwf	___fleq@ff1+1,w
 12574  31BF  00A1               	movwf	??___fleq+1
 12575  31C0  3080               	movlw	128
 12576  31C1  0573               	andwf	___fleq@ff1+2,w
 12577  31C2  00A2               	movwf	??___fleq+2
 12578  31C3  307F               	movlw	127
 12579  31C4  0574               	andwf	___fleq@ff1+3,w
 12580  31C5  00A3               	movwf	??___fleq+3
 12581  31C6  0823               	movf	??___fleq+3,w
 12582  31C7  0422               	iorwf	??___fleq+2,w
 12583  31C8  0421               	iorwf	??___fleq+1,w
 12584  31C9  0420               	iorwf	??___fleq,w
 12585  31CA  1D03               	skipz
 12586  31CB  29D4               	goto	l1110
 12587  31CC  3000               	movlw	0
 12588  31CD  00F4               	movwf	___fleq@ff1+3
 12589  31CE  3000               	movlw	0
 12590  31CF  00F3               	movwf	___fleq@ff1+2
 12591  31D0  3000               	movlw	0
 12592  31D1  00F2               	movwf	___fleq@ff1+1
 12593  31D2  3000               	movlw	0
 12594  31D3  00F1               	movwf	___fleq@ff1
 12595  31D4                     l1110:	
 12596  31D4  3000               	movlw	0
 12597  31D5  0575               	andwf	___fleq@ff2,w
 12598  31D6  00A0               	movwf	??___fleq
 12599  31D7  3000               	movlw	0
 12600  31D8  0576               	andwf	___fleq@ff2+1,w
 12601  31D9  00A1               	movwf	??___fleq+1
 12602  31DA  3080               	movlw	128
 12603  31DB  0577               	andwf	___fleq@ff2+2,w
 12604  31DC  00A2               	movwf	??___fleq+2
 12605  31DD  307F               	movlw	127
 12606  31DE  0578               	andwf	___fleq@ff2+3,w
 12607  31DF  00A3               	movwf	??___fleq+3
 12608  31E0  0823               	movf	??___fleq+3,w
 12609  31E1  0422               	iorwf	??___fleq+2,w
 12610  31E2  0421               	iorwf	??___fleq+1,w
 12611  31E3  0420               	iorwf	??___fleq,w
 12612  31E4  1D03               	skipz
 12613  31E5  29EE               	goto	l1111
 12614  31E6  3000               	movlw	0
 12615  31E7  00F8               	movwf	___fleq@ff2+3
 12616  31E8  3000               	movlw	0
 12617  31E9  00F7               	movwf	___fleq@ff2+2
 12618  31EA  3000               	movlw	0
 12619  31EB  00F6               	movwf	___fleq@ff2+1
 12620  31EC  3000               	movlw	0
 12621  31ED  00F5               	movwf	___fleq@ff2
 12622  31EE                     l1111:	
 12623  31EE  0878               	movf	___fleq@ff2+3,w
 12624  31EF  0674               	xorwf	___fleq@ff1+3,w
 12625  31F0  1D03               	skipz
 12626  31F1  29FC               	goto	u9855
 12627  31F2  0877               	movf	___fleq@ff2+2,w
 12628  31F3  0673               	xorwf	___fleq@ff1+2,w
 12629  31F4  1D03               	skipz
 12630  31F5  29FC               	goto	u9855
 12631  31F6  0876               	movf	___fleq@ff2+1,w
 12632  31F7  0672               	xorwf	___fleq@ff1+1,w
 12633  31F8  1D03               	skipz
 12634  31F9  29FC               	goto	u9855
 12635  31FA  0875               	movf	___fleq@ff2,w
 12636  31FB  0671               	xorwf	___fleq@ff1,w
 12637  31FC                     u9855:	
 12638  31FC  1903               	skipnz
 12639  31FD  2A00               	goto	l7293
 12640  31FE  1003               	clrc
 12641  31FF  0008               	return
 12642  3200                     l7293:	
 12643  3200  1403               	setc
 12644  3201  0008               	return
 12645  3202                     __end_of___fleq:	
 12646                           
 12647                           	psect	text29
 12648  3174                     __ptext29:	
 12649 ;; *************** function ___awmod *****************
 12650 ;; Defined at:
 12651 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 12652 ;; Parameters:    Size  Location     Type
 12653 ;;  divisor         2    1[COMMON] int 
 12654 ;;  dividend        2    3[COMMON] int 
 12655 ;; Auto vars:     Size  Location     Type
 12656 ;;  sign            1    7[COMMON] unsigned char 
 12657 ;;  counter         1    6[COMMON] unsigned char 
 12658 ;; Return value:  Size  Location     Type
 12659 ;;                  2    1[COMMON] int 
 12660 ;; Registers used:
 12661 ;;		wreg, status,2, status,0
 12662 ;; Tracked objects:
 12663 ;;		On entry : 0/0
 12664 ;;		On exit  : 0/0
 12665 ;;		Unchanged: 0/0
 12666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12667 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12668 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12670 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12671 ;;Total ram usage:        7 bytes
 12672 ;; Hardware stack levels used:    1
 12673 ;; Hardware stack levels required when called:    1
 12674 ;; This function calls:
 12675 ;;		Nothing
 12676 ;; This function is called by:
 12677 ;;		_efgtoa
 12678 ;; This function uses a non-reentrant model
 12679 ;;
 12680                           
 12681                           
 12682                           ;psect for function ___awmod
 12683  3174                     ___awmod:	
 12684                           
 12685                           ;incstack = 0
 12686                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12687  3174  01F7               	clrf	___awmod@sign
 12688  3175  1FF4               	btfss	___awmod@dividend+1,7
 12689  3176  297E               	goto	l4945
 12690  3177  09F3               	comf	___awmod@dividend,f
 12691  3178  09F4               	comf	___awmod@dividend+1,f
 12692  3179  0AF3               	incf	___awmod@dividend,f
 12693  317A  1903               	skipnz
 12694  317B  0AF4               	incf	___awmod@dividend+1,f
 12695  317C  01F7               	clrf	___awmod@sign
 12696  317D  0AF7               	incf	___awmod@sign,f
 12697  317E                     l4945:	
 12698  317E  1FF2               	btfss	___awmod@divisor+1,7
 12699  317F  2985               	goto	l4949
 12700  3180  09F1               	comf	___awmod@divisor,f
 12701  3181  09F2               	comf	___awmod@divisor+1,f
 12702  3182  0AF1               	incf	___awmod@divisor,f
 12703  3183  1903               	skipnz
 12704  3184  0AF2               	incf	___awmod@divisor+1,f
 12705  3185                     l4949:	
 12706  3185  0871               	movf	___awmod@divisor,w
 12707  3186  0472               	iorwf	___awmod@divisor+1,w
 12708  3187  1903               	btfsc	3,2
 12709  3188  29AC               	goto	l4967
 12710  3189  01F6               	clrf	___awmod@counter
 12711  318A  0AF6               	incf	___awmod@counter,f
 12712  318B                     l4957:	
 12713  318B  1BF2               	btfsc	___awmod@divisor+1,7
 12714  318C  2997               	goto	l4959
 12715  318D  3001               	movlw	1
 12716  318E                     u6165:	
 12717  318E  35F1               	lslf	___awmod@divisor,f
 12718  318F  0DF2               	rlf	___awmod@divisor+1,f
 12719  3190  0B89               	decfsz	9,f
 12720  3191  298E               	goto	u6165
 12721  3192  3001               	movlw	1
 12722  3193  00F5               	movwf	??___awmod
 12723  3194  0875               	movf	??___awmod,w
 12724  3195  07F6               	addwf	___awmod@counter,f
 12725  3196  298B               	goto	l4957
 12726  3197                     l4959:	
 12727  3197  0872               	movf	___awmod@divisor+1,w
 12728  3198  0274               	subwf	___awmod@dividend+1,w
 12729  3199  1D03               	skipz
 12730  319A  299D               	goto	u6185
 12731  319B  0871               	movf	___awmod@divisor,w
 12732  319C  0273               	subwf	___awmod@dividend,w
 12733  319D                     u6185:	
 12734  319D  1C03               	skipc
 12735  319E  29A3               	goto	l4963
 12736  319F  0871               	movf	___awmod@divisor,w
 12737  31A0  02F3               	subwf	___awmod@dividend,f
 12738  31A1  0872               	movf	___awmod@divisor+1,w
 12739  31A2  3BF4               	subwfb	___awmod@dividend+1,f
 12740  31A3                     l4963:	
 12741  31A3  3001               	movlw	1
 12742  31A4                     u6195:	
 12743  31A4  36F2               	lsrf	___awmod@divisor+1,f
 12744  31A5  0CF1               	rrf	___awmod@divisor,f
 12745  31A6  0B89               	decfsz	9,f
 12746  31A7  29A4               	goto	u6195
 12747  31A8  3001               	movlw	1
 12748  31A9  02F6               	subwf	___awmod@counter,f
 12749  31AA  1D03               	btfss	3,2
 12750  31AB  2997               	goto	l4959
 12751  31AC                     l4967:	
 12752  31AC  0877               	movf	___awmod@sign,w
 12753  31AD  1903               	btfsc	3,2
 12754  31AE  29B4               	goto	l4971
 12755  31AF  09F3               	comf	___awmod@dividend,f
 12756  31B0  09F4               	comf	___awmod@dividend+1,f
 12757  31B1  0AF3               	incf	___awmod@dividend,f
 12758  31B2  1903               	skipnz
 12759  31B3  0AF4               	incf	___awmod@dividend+1,f
 12760  31B4                     l4971:	
 12761  31B4  0874               	movf	___awmod@dividend+1,w
 12762  31B5  00F2               	movwf	?___awmod+1
 12763  31B6  0873               	movf	___awmod@dividend,w
 12764  31B7  00F1               	movwf	?___awmod
 12765  31B8  0008               	return
 12766  31B9                     __end_of___awmod:	
 12767                           
 12768                           	psect	text30
 12769  3253                     __ptext30:	
 12770 ;; *************** function ___awdiv *****************
 12771 ;; Defined at:
 12772 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 12773 ;; Parameters:    Size  Location     Type
 12774 ;;  divisor         2    1[COMMON] int 
 12775 ;;  dividend        2    3[COMMON] int 
 12776 ;; Auto vars:     Size  Location     Type
 12777 ;;  quotient        2    8[COMMON] int 
 12778 ;;  sign            1    7[COMMON] unsigned char 
 12779 ;;  counter         1    6[COMMON] unsigned char 
 12780 ;; Return value:  Size  Location     Type
 12781 ;;                  2    1[COMMON] int 
 12782 ;; Registers used:
 12783 ;;		wreg, status,2, status,0
 12784 ;; Tracked objects:
 12785 ;;		On entry : 0/0
 12786 ;;		On exit  : 0/0
 12787 ;;		Unchanged: 0/0
 12788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12790 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12791 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12792 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12793 ;;Total ram usage:        9 bytes
 12794 ;; Hardware stack levels used:    1
 12795 ;; Hardware stack levels required when called:    1
 12796 ;; This function calls:
 12797 ;;		Nothing
 12798 ;; This function is called by:
 12799 ;;		_efgtoa
 12800 ;; This function uses a non-reentrant model
 12801 ;;
 12802                           
 12803                           
 12804                           ;psect for function ___awdiv
 12805  3253                     ___awdiv:	
 12806                           
 12807                           ;incstack = 0
 12808                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12809  3253  01F7               	clrf	___awdiv@sign
 12810  3254  1FF2               	btfss	___awdiv@divisor+1,7
 12811  3255  2A5D               	goto	l4901
 12812  3256  09F1               	comf	___awdiv@divisor,f
 12813  3257  09F2               	comf	___awdiv@divisor+1,f
 12814  3258  0AF1               	incf	___awdiv@divisor,f
 12815  3259  1903               	skipnz
 12816  325A  0AF2               	incf	___awdiv@divisor+1,f
 12817  325B  01F7               	clrf	___awdiv@sign
 12818  325C  0AF7               	incf	___awdiv@sign,f
 12819  325D                     l4901:	
 12820  325D  1FF4               	btfss	___awdiv@dividend+1,7
 12821  325E  2A68               	goto	l4907
 12822  325F  09F3               	comf	___awdiv@dividend,f
 12823  3260  09F4               	comf	___awdiv@dividend+1,f
 12824  3261  0AF3               	incf	___awdiv@dividend,f
 12825  3262  1903               	skipnz
 12826  3263  0AF4               	incf	___awdiv@dividend+1,f
 12827  3264  3001               	movlw	1
 12828  3265  00F5               	movwf	??___awdiv
 12829  3266  0875               	movf	??___awdiv,w
 12830  3267  06F7               	xorwf	___awdiv@sign,f
 12831  3268                     l4907:	
 12832  3268  01F8               	clrf	___awdiv@quotient
 12833  3269  01F9               	clrf	___awdiv@quotient+1
 12834  326A  0871               	movf	___awdiv@divisor,w
 12835  326B  0472               	iorwf	___awdiv@divisor+1,w
 12836  326C  1903               	btfsc	3,2
 12837  326D  2A97               	goto	l4929
 12838  326E  01F6               	clrf	___awdiv@counter
 12839  326F  0AF6               	incf	___awdiv@counter,f
 12840  3270                     l4917:	
 12841  3270  1BF2               	btfsc	___awdiv@divisor+1,7
 12842  3271  2A7C               	goto	l4919
 12843  3272  3001               	movlw	1
 12844  3273                     u6065:	
 12845  3273  35F1               	lslf	___awdiv@divisor,f
 12846  3274  0DF2               	rlf	___awdiv@divisor+1,f
 12847  3275  0B89               	decfsz	9,f
 12848  3276  2A73               	goto	u6065
 12849  3277  3001               	movlw	1
 12850  3278  00F5               	movwf	??___awdiv
 12851  3279  0875               	movf	??___awdiv,w
 12852  327A  07F6               	addwf	___awdiv@counter,f
 12853  327B  2A70               	goto	l4917
 12854  327C                     l4919:	
 12855  327C  3001               	movlw	1
 12856  327D                     u6085:	
 12857  327D  35F8               	lslf	___awdiv@quotient,f
 12858  327E  0DF9               	rlf	___awdiv@quotient+1,f
 12859  327F  0B89               	decfsz	9,f
 12860  3280  2A7D               	goto	u6085
 12861  3281  0872               	movf	___awdiv@divisor+1,w
 12862  3282  0274               	subwf	___awdiv@dividend+1,w
 12863  3283  1D03               	skipz
 12864  3284  2A87               	goto	u6095
 12865  3285  0871               	movf	___awdiv@divisor,w
 12866  3286  0273               	subwf	___awdiv@dividend,w
 12867  3287                     u6095:	
 12868  3287  1C03               	skipc
 12869  3288  2A8E               	goto	l4925
 12870  3289  0871               	movf	___awdiv@divisor,w
 12871  328A  02F3               	subwf	___awdiv@dividend,f
 12872  328B  0872               	movf	___awdiv@divisor+1,w
 12873  328C  3BF4               	subwfb	___awdiv@dividend+1,f
 12874  328D  1478               	bsf	___awdiv@quotient,0
 12875  328E                     l4925:	
 12876  328E  3001               	movlw	1
 12877  328F                     u6105:	
 12878  328F  36F2               	lsrf	___awdiv@divisor+1,f
 12879  3290  0CF1               	rrf	___awdiv@divisor,f
 12880  3291  0B89               	decfsz	9,f
 12881  3292  2A8F               	goto	u6105
 12882  3293  3001               	movlw	1
 12883  3294  02F6               	subwf	___awdiv@counter,f
 12884  3295  1D03               	btfss	3,2
 12885  3296  2A7C               	goto	l4919
 12886  3297                     l4929:	
 12887  3297  0877               	movf	___awdiv@sign,w
 12888  3298  1903               	btfsc	3,2
 12889  3299  2A9F               	goto	l4933
 12890  329A  09F8               	comf	___awdiv@quotient,f
 12891  329B  09F9               	comf	___awdiv@quotient+1,f
 12892  329C  0AF8               	incf	___awdiv@quotient,f
 12893  329D  1903               	skipnz
 12894  329E  0AF9               	incf	___awdiv@quotient+1,f
 12895  329F                     l4933:	
 12896  329F  0879               	movf	___awdiv@quotient+1,w
 12897  32A0  00F2               	movwf	?___awdiv+1
 12898  32A1  0878               	movf	___awdiv@quotient,w
 12899  32A2  00F1               	movwf	?___awdiv
 12900  32A3  0008               	return
 12901  32A4                     __end_of___awdiv:	
 12902                           
 12903                           	psect	text31
 12904  1807                     __ptext31:	
 12905 ;; *************** function _dtoa *****************
 12906 ;; Defined at:
 12907 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 12908 ;; Parameters:    Size  Location     Type
 12909 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 12910 ;;		 -> vsnprintf@f(6), 
 12911 ;;  d               8   18[BANK0 ] long long 
 12912 ;; Auto vars:     Size  Location     Type
 12913 ;;  n               8   37[BANK0 ] long long 
 12914 ;;  i               2   45[BANK0 ] int 
 12915 ;;  s               2   35[BANK0 ] int 
 12916 ;;  w               2   33[BANK0 ] int 
 12917 ;;  p               2   31[BANK0 ] int 
 12918 ;; Return value:  Size  Location     Type
 12919 ;;                  2   16[BANK0 ] int 
 12920 ;; Registers used:
 12921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12922 ;; Tracked objects:
 12923 ;;		On entry : 0/0
 12924 ;;		On exit  : 0/0
 12925 ;;		Unchanged: 0/0
 12926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12927 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12928 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12929 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12930 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12931 ;;Total ram usage:       31 bytes
 12932 ;; Hardware stack levels used:    1
 12933 ;; Hardware stack levels required when called:    5
 12934 ;; This function calls:
 12935 ;;		___aodiv
 12936 ;;		___aomod
 12937 ;;		_abs
 12938 ;;		_pad
 12939 ;; This function is called by:
 12940 ;;		_vfpfcnvrt
 12941 ;; This function uses a non-reentrant model
 12942 ;;
 12943                           
 12944                           
 12945                           ;psect for function _dtoa
 12946  1807                     _dtoa:	
 12947                           
 12948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
 12949                           
 12950                           ;incstack = 0
 12951                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12952  1807  0020               	movlb	0	; select bank0
 12953  1808  0832               	movf	dtoa@d,w
 12954  1809  00C5               	movwf	dtoa@n
 12955  180A  0833               	movf	dtoa@d+1,w
 12956  180B  00C6               	movwf	dtoa@n+1
 12957  180C  0834               	movf	dtoa@d+2,w
 12958  180D  00C7               	movwf	dtoa@n+2
 12959  180E  0835               	movf	dtoa@d+3,w
 12960  180F  00C8               	movwf	dtoa@n+3
 12961  1810  0836               	movf	dtoa@d+4,w
 12962  1811  00C9               	movwf	dtoa@n+4
 12963  1812  0837               	movf	dtoa@d+5,w
 12964  1813  00CA               	movwf	dtoa@n+5
 12965  1814  0838               	movf	dtoa@d+6,w
 12966  1815  00CB               	movwf	dtoa@n+6
 12967  1816  0839               	movf	dtoa@d+7,w
 12968  1817  00CC               	movwf	dtoa@n+7
 12969                           
 12970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
 12971  1818  3045               	movlw	low dtoa@n
 12972  1819  0086               	movwf	6
 12973  181A  3000               	movlw	high dtoa@n
 12974  181B  0087               	movwf	7
 12975  181C  3F47               	moviw [7]fsr1
 12976  181D  00BA               	movwf	??_dtoa
 12977  181E  1FBA               	btfss	??_dtoa,7
 12978  181F  2822               	goto	u9870
 12979  1820  3001               	movlw	1
 12980  1821  2823               	goto	u9880
 12981  1822                     u9870:	
 12982  1822  3000               	movlw	0
 12983  1823                     u9880:	
 12984  1823  0020               	movlb	0	; select bank0
 12985  1824  00BB               	movwf	??_dtoa+1
 12986  1825  01BC               	clrf	??_dtoa+2
 12987  1826  083B               	movf	??_dtoa+1,w
 12988  1827  00C3               	movwf	dtoa@s
 12989  1828  083C               	movf	??_dtoa+2,w
 12990  1829  00C4               	movwf	dtoa@s+1
 12991                           
 12992                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
 12993  182A  0843               	movf	dtoa@s,w
 12994  182B  0444               	iorwf	dtoa@s+1,w
 12995  182C  1903               	btfsc	3,2
 12996  182D  284C               	goto	l638
 12997                           
 12998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
 12999  182E  09C5               	comf	dtoa@n,f
 13000  182F  09C6               	comf	dtoa@n+1,f
 13001  1830  09C7               	comf	dtoa@n+2,f
 13002  1831  09C8               	comf	dtoa@n+3,f
 13003  1832  09C9               	comf	dtoa@n+4,f
 13004  1833  09CA               	comf	dtoa@n+5,f
 13005  1834  09CB               	comf	dtoa@n+6,f
 13006  1835  09CC               	comf	dtoa@n+7,f
 13007  1836  0AC5               	incf	dtoa@n,f
 13008  1837  1D03               	skipz
 13009  1838  284C               	goto	l638
 13010  1839  0AC6               	incf	dtoa@n+1,f
 13011  183A  1D03               	skipz
 13012  183B  284C               	goto	l638
 13013  183C  0AC7               	incf	dtoa@n+2,f
 13014  183D  1D03               	skipz
 13015  183E  284C               	goto	l638
 13016  183F  0AC8               	incf	dtoa@n+3,f
 13017  1840  1D03               	skipz
 13018  1841  284C               	goto	l638
 13019  1842  0AC9               	incf	dtoa@n+4,f
 13020  1843  1D03               	skipz
 13021  1844  284C               	goto	l638
 13022  1845  0ACA               	incf	dtoa@n+5,f
 13023  1846  1D03               	skipz
 13024  1847  284C               	goto	l638
 13025  1848  0ACB               	incf	dtoa@n+6,f
 13026  1849  1D03               	skipz
 13027  184A  284C               	goto	l638
 13028  184B  0ACC               	incf	dtoa@n+7,f
 13029  184C                     l638:	
 13030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
 13031                           
 13032                           
 13033                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
 13034  184C  0023               	movlb	3	; select bank3
 13035  184D  1BB7               	btfsc	(_prec+1)^(0+384),7
 13036  184E  2853               	goto	l639
 13037                           
 13038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
 13039  184F  30FD               	movlw	253
 13040  1850  05B8               	andwf	_flags^(0+384),f
 13041  1851  30FF               	movlw	255
 13042  1852  05B9               	andwf	(_flags+1)^(0+384),f
 13043  1853                     l639:	
 13044                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
 13045                           
 13046                           
 13047                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
 13048  1853  0837               	movf	(_prec+1)^(0+384),w
 13049  1854  3A80               	xorlw	128
 13050  1855  0020               	movlb	0	; select bank0
 13051  1856  00BA               	movwf	??_dtoa
 13052  1857  3080               	movlw	128
 13053  1858  023A               	subwf	??_dtoa,w
 13054  1859  1D03               	skipz
 13055  185A  285E               	goto	u9925
 13056  185B  3001               	movlw	1
 13057  185C  0023               	movlb	3	; select bank3
 13058  185D  0236               	subwf	_prec^(0+384),w
 13059  185E                     u9925:	
 13060  185E  1803               	skipnc
 13061  185F  2866               	goto	l7323
 13062  1860  3001               	movlw	1
 13063  1861  0020               	movlb	0	; select bank0
 13064  1862  00BF               	movwf	dtoa@p
 13065  1863  3000               	movlw	0
 13066  1864  00C0               	movwf	dtoa@p+1
 13067  1865  286E               	goto	l643
 13068  1866                     l7323:	
 13069  1866  0023               	movlb	3	; select bank3
 13070  1867  0837               	movf	(_prec+1)^(0+384),w
 13071  1868  0020               	movlb	0	; select bank0
 13072  1869  00C0               	movwf	dtoa@p+1
 13073  186A  0023               	movlb	3	; select bank3
 13074  186B  0836               	movf	_prec^(0+384),w
 13075  186C  0020               	movlb	0	; select bank0
 13076  186D  00BF               	movwf	dtoa@p
 13077  186E                     l643:	
 13078                           
 13079                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
 13080  186E  0023               	movlb	3	; select bank3
 13081  186F  0835               	movf	(_width+1)^(0+384),w
 13082  1870  0020               	movlb	0	; select bank0
 13083  1871  00C2               	movwf	dtoa@w+1
 13084  1872  0023               	movlb	3	; select bank3
 13085  1873  0834               	movf	_width^(0+384),w
 13086  1874  0020               	movlb	0	; select bank0
 13087  1875  00C1               	movwf	dtoa@w
 13088                           
 13089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
 13090  1876  0843               	movf	dtoa@s,w
 13091  1877  0444               	iorwf	dtoa@s+1,w
 13092  1878  1D03               	btfss	3,2
 13093  1879  287D               	goto	l7329
 13094  187A  0023               	movlb	3	; select bank3
 13095  187B  1D38               	btfss	_flags^(0+384),2
 13096  187C  2882               	goto	l644
 13097  187D                     l7329:	
 13098                           
 13099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
 13100  187D  30FF               	movlw	255
 13101  187E  0020               	movlb	0	; select bank0
 13102  187F  07C1               	addwf	dtoa@w,f
 13103  1880  30FF               	movlw	255
 13104  1881  3DC2               	addwfc	dtoa@w+1,f
 13105  1882                     l644:	
 13106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
 13107                           
 13108                           
 13109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
 13110  1882  304F               	movlw	79
 13111  1883  0020               	movlb	0	; select bank0
 13112  1884  00CD               	movwf	dtoa@i
 13113  1885  3000               	movlw	0
 13114  1886  00CE               	movwf	dtoa@i+1
 13115                           
 13116                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
 13117  1887  0025               	movlb	5	; select bank5
 13118  1888  01EF               	clrf	(_dbuf^(0+640)+79)
 13119                           
 13120                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13121  1889  2918               	goto	l647
 13122  188A                     l7343:	
 13123  188A  0020               	movlb	0	; select bank0
 13124  188B  0845               	movf	dtoa@n,w
 13125  188C  0446               	iorwf	dtoa@n+1,w
 13126  188D  0447               	iorwf	dtoa@n+2,w
 13127  188E  0448               	iorwf	dtoa@n+3,w
 13128  188F  0449               	iorwf	dtoa@n+4,w
 13129  1890  044A               	iorwf	dtoa@n+5,w
 13130  1891  044B               	iorwf	dtoa@n+6,w
 13131  1892  044C               	iorwf	dtoa@n+7,w
 13132  1893  1D03               	skipz
 13133  1894  28AF               	goto	l7333
 13134  1895  0840               	movf	dtoa@p+1,w
 13135  1896  3A80               	xorlw	128
 13136  1897  00BA               	movwf	??_dtoa
 13137  1898  3080               	movlw	128
 13138  1899  023A               	subwf	??_dtoa,w
 13139  189A  1D03               	skipz
 13140  189B  289E               	goto	u9975
 13141  189C  3001               	movlw	1
 13142  189D  023F               	subwf	dtoa@p,w
 13143  189E                     u9975:	
 13144  189E  1803               	skipnc
 13145  189F  28AF               	goto	l7333
 13146  18A0  0020               	movlb	0	; select bank0
 13147  18A1  0842               	movf	dtoa@w+1,w
 13148  18A2  3A80               	xorlw	128
 13149  18A3  00BA               	movwf	??_dtoa
 13150  18A4  3080               	movlw	128
 13151  18A5  023A               	subwf	??_dtoa,w
 13152  18A6  1D03               	skipz
 13153  18A7  28AA               	goto	u9985
 13154  18A8  3001               	movlw	1
 13155  18A9  0241               	subwf	dtoa@w,w
 13156  18AA                     u9985:	
 13157  18AA  1C03               	skipc
 13158  18AB  2924               	goto	l7351
 13159  18AC  0023               	movlb	3	; select bank3
 13160  18AD  1CB8               	btfss	_flags^(0+384),1
 13161  18AE  2924               	goto	l7351
 13162  18AF                     l7333:	
 13163                           
 13164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
 13165  18AF  30FF               	movlw	255
 13166  18B0  0020               	movlb	0	; select bank0
 13167  18B1  07CD               	addwf	dtoa@i,f
 13168  18B2  30FF               	movlw	255
 13169  18B3  3DCE               	addwfc	dtoa@i+1,f
 13170                           
 13171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
 13172  18B4  300A               	movlw	10
 13173  18B5  00A0               	movwf	___aomod@divisor
 13174  18B6  01A1               	clrf	___aomod@divisor+1
 13175  18B7  01A2               	clrf	___aomod@divisor+2
 13176  18B8  01A3               	clrf	___aomod@divisor+3
 13177  18B9  01A4               	clrf	___aomod@divisor+4
 13178  18BA  01A5               	clrf	___aomod@divisor+5
 13179  18BB  01A6               	clrf	___aomod@divisor+6
 13180  18BC  01A7               	clrf	___aomod@divisor+7
 13181  18BD  0845               	movf	dtoa@n,w
 13182  18BE  00A8               	movwf	___aomod@dividend
 13183  18BF  0846               	movf	dtoa@n+1,w
 13184  18C0  00A9               	movwf	___aomod@dividend+1
 13185  18C1  0847               	movf	dtoa@n+2,w
 13186  18C2  00AA               	movwf	___aomod@dividend+2
 13187  18C3  0848               	movf	dtoa@n+3,w
 13188  18C4  00AB               	movwf	___aomod@dividend+3
 13189  18C5  0849               	movf	dtoa@n+4,w
 13190  18C6  00AC               	movwf	___aomod@dividend+4
 13191  18C7  084A               	movf	dtoa@n+5,w
 13192  18C8  00AD               	movwf	___aomod@dividend+5
 13193  18C9  084B               	movf	dtoa@n+6,w
 13194  18CA  00AE               	movwf	___aomod@dividend+6
 13195  18CB  084C               	movf	dtoa@n+7,w
 13196  18CC  00AF               	movwf	___aomod@dividend+7
 13197  18CD  31A0  2001  3198   	fcall	___aomod
 13198  18D0  0020               	movlb	0	; select bank0
 13199  18D1  0821               	movf	?___aomod+1,w
 13200  18D2  00F5               	movwf	abs@a+1
 13201  18D3  0820               	movf	?___aomod,w
 13202  18D4  00F4               	movwf	abs@a
 13203  18D5  31BD  25B0  3198   	fcall	_abs
 13204  18D8  0874               	movf	?_abs,w
 13205  18D9  3E30               	addlw	48
 13206  18DA  0020               	movlb	0	; select bank0
 13207  18DB  00BA               	movwf	??_dtoa
 13208  18DC  084D               	movf	dtoa@i,w
 13209  18DD  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13210  18DE  0086               	movwf	6
 13211  18DF  3002               	movlw	2	; select bank5/6
 13212  18E0  0087               	movwf	7
 13213  18E1  083A               	movf	??_dtoa,w
 13214  18E2  0081               	movwf	1
 13215                           
 13216                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
 13217  18E3  30FF               	movlw	255
 13218  18E4  07BF               	addwf	dtoa@p,f
 13219  18E5  30FF               	movlw	255
 13220  18E6  3DC0               	addwfc	dtoa@p+1,f
 13221                           
 13222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
 13223  18E7  30FF               	movlw	255
 13224  18E8  07C1               	addwf	dtoa@w,f
 13225  18E9  30FF               	movlw	255
 13226  18EA  3DC2               	addwfc	dtoa@w+1,f
 13227                           
 13228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
 13229  18EB  300A               	movlw	10
 13230  18EC  00A0               	movwf	___aodiv@divisor
 13231  18ED  01A1               	clrf	___aodiv@divisor+1
 13232  18EE  01A2               	clrf	___aodiv@divisor+2
 13233  18EF  01A3               	clrf	___aodiv@divisor+3
 13234  18F0  01A4               	clrf	___aodiv@divisor+4
 13235  18F1  01A5               	clrf	___aodiv@divisor+5
 13236  18F2  01A6               	clrf	___aodiv@divisor+6
 13237  18F3  01A7               	clrf	___aodiv@divisor+7
 13238  18F4  0845               	movf	dtoa@n,w
 13239  18F5  00A8               	movwf	___aodiv@dividend
 13240  18F6  0846               	movf	dtoa@n+1,w
 13241  18F7  00A9               	movwf	___aodiv@dividend+1
 13242  18F8  0847               	movf	dtoa@n+2,w
 13243  18F9  00AA               	movwf	___aodiv@dividend+2
 13244  18FA  0848               	movf	dtoa@n+3,w
 13245  18FB  00AB               	movwf	___aodiv@dividend+3
 13246  18FC  0849               	movf	dtoa@n+4,w
 13247  18FD  00AC               	movwf	___aodiv@dividend+4
 13248  18FE  084A               	movf	dtoa@n+5,w
 13249  18FF  00AD               	movwf	___aodiv@dividend+5
 13250  1900  084B               	movf	dtoa@n+6,w
 13251  1901  00AE               	movwf	___aodiv@dividend+6
 13252  1902  084C               	movf	dtoa@n+7,w
 13253  1903  00AF               	movwf	___aodiv@dividend+7
 13254  1904  31A2  22B8  3198   	fcall	___aodiv
 13255  1907  0020               	movlb	0	; select bank0
 13256  1908  0820               	movf	?___aodiv,w
 13257  1909  00C5               	movwf	dtoa@n
 13258  190A  0821               	movf	?___aodiv+1,w
 13259  190B  00C6               	movwf	dtoa@n+1
 13260  190C  0822               	movf	?___aodiv+2,w
 13261  190D  00C7               	movwf	dtoa@n+2
 13262  190E  0823               	movf	?___aodiv+3,w
 13263  190F  00C8               	movwf	dtoa@n+3
 13264  1910  0824               	movf	?___aodiv+4,w
 13265  1911  00C9               	movwf	dtoa@n+4
 13266  1912  0825               	movf	?___aodiv+5,w
 13267  1913  00CA               	movwf	dtoa@n+5
 13268  1914  0826               	movf	?___aodiv+6,w
 13269  1915  00CB               	movwf	dtoa@n+6
 13270  1916  0827               	movf	?___aodiv+7,w
 13271  1917  00CC               	movwf	dtoa@n+7
 13272  1918                     l647:	
 13273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
 13274                           
 13275                           
 13276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13277  1918  0020               	movlb	0	; select bank0
 13278  1919  084E               	movf	dtoa@i+1,w
 13279  191A  3A80               	xorlw	128
 13280  191B  00BA               	movwf	??_dtoa
 13281  191C  3080               	movlw	128
 13282  191D  023A               	subwf	??_dtoa,w
 13283  191E  1D03               	skipz
 13284  191F  2922               	goto	u9955
 13285  1920  3001               	movlw	1
 13286  1921  024D               	subwf	dtoa@i,w
 13287  1922                     u9955:	
 13288  1922  1803               	btfsc	3,0
 13289  1923  288A               	goto	l7343
 13290  1924                     l7351:	
 13291                           
 13292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
 13293  1924  0020               	movlb	0	; select bank0
 13294  1925  0843               	movf	dtoa@s,w
 13295  1926  0444               	iorwf	dtoa@s+1,w
 13296  1927  1D03               	btfss	3,2
 13297  1928  292C               	goto	l7355
 13298  1929  0023               	movlb	3	; select bank3
 13299  192A  1D38               	btfss	_flags^(0+384),2
 13300  192B  2944               	goto	l7365
 13301  192C                     l7355:	
 13302                           
 13303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
 13304  192C  30FF               	movlw	255
 13305  192D  0020               	movlb	0	; select bank0
 13306  192E  07CD               	addwf	dtoa@i,f
 13307  192F  30FF               	movlw	255
 13308  1930  3DCE               	addwfc	dtoa@i+1,f
 13309                           
 13310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
 13311  1931  0843               	movf	dtoa@s,w
 13312  1932  0444               	iorwf	dtoa@s+1,w
 13313  1933  1D03               	btfss	3,2
 13314  1934  2937               	goto	l7361
 13315  1935  302B               	movlw	43
 13316  1936  2938               	goto	L11
 13317  1937                     l7361:	
 13318  1937  302D               	movlw	45
 13319  1938                     L11:	
 13320  1938  00BD               	movwf	_dtoa$1226
 13321  1939  3000               	movlw	0
 13322  193A  00BE               	movwf	_dtoa$1226+1
 13323  193B  083D               	movf	_dtoa$1226,w
 13324  193C  00BA               	movwf	??_dtoa
 13325  193D  084D               	movf	dtoa@i,w
 13326  193E  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13327  193F  0086               	movwf	6
 13328  1940  3002               	movlw	2	; select bank5/6
 13329  1941  0087               	movwf	7
 13330  1942  083A               	movf	??_dtoa,w
 13331  1943  0081               	movwf	1
 13332  1944                     l7365:	
 13333                           
 13334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
 13335  1944  0020               	movlb	0	; select bank0
 13336  1945  0831               	movf	dtoa@fp+1,w
 13337  1946  00A7               	movwf	pad@fp+1
 13338  1947  0830               	movf	dtoa@fp,w
 13339  1948  00A6               	movwf	pad@fp
 13340  1949  084D               	movf	dtoa@i,w
 13341  194A  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13342  194B  00BA               	movwf	??_dtoa
 13343  194C  083A               	movf	??_dtoa,w
 13344  194D  00A8               	movwf	pad@buf
 13345  194E  0842               	movf	dtoa@w+1,w
 13346  194F  00AA               	movwf	pad@p+1
 13347  1950  0841               	movf	dtoa@w,w
 13348  1951  00A9               	movwf	pad@p
 13349  1952  31B2  2202         	fcall	_pad
 13350  1954  0020               	movlb	0	; select bank0
 13351  1955  0827               	movf	?_pad+1,w
 13352  1956  00B1               	movwf	?_dtoa+1
 13353  1957  0826               	movf	?_pad,w
 13354  1958  00B0               	movwf	?_dtoa
 13355  1959  0008               	return
 13356  195A                     __end_of_dtoa:	
 13357                           
 13358                           	psect	text32
 13359  3DB0                     __ptext32:	
 13360 ;; *************** function _abs *****************
 13361 ;; Defined at:
 13362 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
 13363 ;; Parameters:    Size  Location     Type
 13364 ;;  a               2    4[COMMON] int 
 13365 ;; Auto vars:     Size  Location     Type
 13366 ;;		None
 13367 ;; Return value:  Size  Location     Type
 13368 ;;                  2    4[COMMON] int 
 13369 ;; Registers used:
 13370 ;;		wreg, status,2, status,0
 13371 ;; Tracked objects:
 13372 ;;		On entry : 0/0
 13373 ;;		On exit  : 0/0
 13374 ;;		Unchanged: 0/0
 13375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13379 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13380 ;;Total ram usage:        4 bytes
 13381 ;; Hardware stack levels used:    1
 13382 ;; Hardware stack levels required when called:    1
 13383 ;; This function calls:
 13384 ;;		Nothing
 13385 ;; This function is called by:
 13386 ;;		_dtoa
 13387 ;; This function uses a non-reentrant model
 13388 ;;
 13389                           
 13390                           
 13391                           ;psect for function _abs
 13392  3DB0                     _abs:	
 13393                           
 13394                           ;incstack = 0
 13395                           ; Regs used in _abs: [wreg+status,2+status,0]
 13396  3DB0  0875               	movf	abs@a+1,w
 13397  3DB1  3A80               	xorlw	128
 13398  3DB2  00F6               	movwf	??_abs
 13399  3DB3  3080               	movlw	128
 13400  3DB4  0276               	subwf	??_abs,w
 13401  3DB5  1D03               	skipz
 13402  3DB6  2DB9               	goto	u5475
 13403  3DB7  3001               	movlw	1
 13404  3DB8  0274               	subwf	abs@a,w
 13405  3DB9                     u5475:	
 13406  3DB9  1803               	skipnc
 13407  3DBA  0008               	return
 13408  3DBB  0974               	comf	abs@a,w
 13409  3DBC  00F6               	movwf	??_abs
 13410  3DBD  0975               	comf	abs@a+1,w
 13411  3DBE  00F7               	movwf	??_abs+1
 13412  3DBF  0AF6               	incf	??_abs,f
 13413  3DC0  1903               	skipnz
 13414  3DC1  0AF7               	incf	??_abs+1,f
 13415  3DC2  0876               	movf	??_abs,w
 13416  3DC3  00F4               	movwf	?_abs
 13417  3DC4  0877               	movf	??_abs+1,w
 13418  3DC5  00F5               	movwf	?_abs+1
 13419  3DC6  0008               	return
 13420  3DC7                     __end_of_abs:	
 13421                           
 13422                           	psect	text33
 13423  2001                     __ptext33:	
 13424 ;; *************** function ___aomod *****************
 13425 ;; Defined at:
 13426 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
 13427 ;; Parameters:    Size  Location     Type
 13428 ;;  divisor         8    0[BANK0 ] long long 
 13429 ;;  dividend        8    8[BANK0 ] long long 
 13430 ;; Auto vars:     Size  Location     Type
 13431 ;;  sign            1    3[COMMON] unsigned char 
 13432 ;;  counter         1    2[COMMON] unsigned char 
 13433 ;; Return value:  Size  Location     Type
 13434 ;;                  8    0[BANK0 ] long long 
 13435 ;; Registers used:
 13436 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13437 ;; Tracked objects:
 13438 ;;		On entry : 0/0
 13439 ;;		On exit  : 0/0
 13440 ;;		Unchanged: 0/0
 13441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13442 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13445 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13446 ;;Total ram usage:       19 bytes
 13447 ;; Hardware stack levels used:    1
 13448 ;; Hardware stack levels required when called:    1
 13449 ;; This function calls:
 13450 ;;		Nothing
 13451 ;; This function is called by:
 13452 ;;		_dtoa
 13453 ;; This function uses a non-reentrant model
 13454 ;;
 13455                           
 13456                           
 13457                           ;psect for function ___aomod
 13458  2001                     ___aomod:	
 13459                           
 13460                           ;incstack = 0
 13461                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13462  2001  01F3               	clrf	___aomod@sign
 13463  2002  3028               	movlw	low ___aomod@dividend
 13464  2003  0086               	movwf	6
 13465  2004  3000               	movlw	high ___aomod@dividend
 13466  2005  0087               	movwf	7
 13467  2006  3F47               	moviw [7]fsr1
 13468  2007  00F1               	movwf	??___aomod
 13469  2008  1FF1               	btfss	??___aomod,7
 13470  2009  282B               	goto	l4869
 13471  200A  0020               	movlb	0	; select bank0
 13472  200B  09A8               	comf	___aomod@dividend,f
 13473  200C  09A9               	comf	___aomod@dividend+1,f
 13474  200D  09AA               	comf	___aomod@dividend+2,f
 13475  200E  09AB               	comf	___aomod@dividend+3,f
 13476  200F  09AC               	comf	___aomod@dividend+4,f
 13477  2010  09AD               	comf	___aomod@dividend+5,f
 13478  2011  09AE               	comf	___aomod@dividend+6,f
 13479  2012  09AF               	comf	___aomod@dividend+7,f
 13480  2013  0AA8               	incf	___aomod@dividend,f
 13481  2014  1D03               	skipz
 13482  2015  2829               	goto	u594lld
 13483  2016  0AA9               	incf	___aomod@dividend+1,f
 13484  2017  1D03               	skipz
 13485  2018  2829               	goto	u594lld
 13486  2019  0AAA               	incf	___aomod@dividend+2,f
 13487  201A  1D03               	skipz
 13488  201B  2829               	goto	u594lld
 13489  201C  0AAB               	incf	___aomod@dividend+3,f
 13490  201D  1D03               	skipz
 13491  201E  2829               	goto	u594lld
 13492  201F  0AAC               	incf	___aomod@dividend+4,f
 13493  2020  1D03               	skipz
 13494  2021  2829               	goto	u594lld
 13495  2022  0AAD               	incf	___aomod@dividend+5,f
 13496  2023  1D03               	skipz
 13497  2024  2829               	goto	u594lld
 13498  2025  0AAE               	incf	___aomod@dividend+6,f
 13499  2026  1D03               	skipz
 13500  2027  2829               	goto	u594lld
 13501  2028  0AAF               	incf	___aomod@dividend+7,f
 13502  2029                     u594lld:	
 13503  2029  01F3               	clrf	___aomod@sign
 13504  202A  0AF3               	incf	___aomod@sign,f
 13505  202B                     l4869:	
 13506  202B  3020               	movlw	low ___aomod@divisor
 13507  202C  0086               	movwf	6
 13508  202D  3000               	movlw	high ___aomod@divisor
 13509  202E  0087               	movwf	7
 13510  202F  3F47               	moviw [7]fsr1
 13511  2030  00F1               	movwf	??___aomod
 13512  2031  1FF1               	btfss	??___aomod,7
 13513  2032  2852               	goto	l4873
 13514  2033  0020               	movlb	0	; select bank0
 13515  2034  09A0               	comf	___aomod@divisor,f
 13516  2035  09A1               	comf	___aomod@divisor+1,f
 13517  2036  09A2               	comf	___aomod@divisor+2,f
 13518  2037  09A3               	comf	___aomod@divisor+3,f
 13519  2038  09A4               	comf	___aomod@divisor+4,f
 13520  2039  09A5               	comf	___aomod@divisor+5,f
 13521  203A  09A6               	comf	___aomod@divisor+6,f
 13522  203B  09A7               	comf	___aomod@divisor+7,f
 13523  203C  0AA0               	incf	___aomod@divisor,f
 13524  203D  1D03               	skipz
 13525  203E  2852               	goto	l4873
 13526  203F  0AA1               	incf	___aomod@divisor+1,f
 13527  2040  1D03               	skipz
 13528  2041  2852               	goto	l4873
 13529  2042  0AA2               	incf	___aomod@divisor+2,f
 13530  2043  1D03               	skipz
 13531  2044  2852               	goto	l4873
 13532  2045  0AA3               	incf	___aomod@divisor+3,f
 13533  2046  1D03               	skipz
 13534  2047  2852               	goto	l4873
 13535  2048  0AA4               	incf	___aomod@divisor+4,f
 13536  2049  1D03               	skipz
 13537  204A  2852               	goto	l4873
 13538  204B  0AA5               	incf	___aomod@divisor+5,f
 13539  204C  1D03               	skipz
 13540  204D  2852               	goto	l4873
 13541  204E  0AA6               	incf	___aomod@divisor+6,f
 13542  204F  1D03               	skipz
 13543  2050  2852               	goto	l4873
 13544  2051  0AA7               	incf	___aomod@divisor+7,f
 13545  2052                     l4873:	
 13546  2052  0020               	movlb	0	; select bank0
 13547  2053  0820               	movf	___aomod@divisor,w
 13548  2054  0421               	iorwf	___aomod@divisor+1,w
 13549  2055  0422               	iorwf	___aomod@divisor+2,w
 13550  2056  0423               	iorwf	___aomod@divisor+3,w
 13551  2057  0424               	iorwf	___aomod@divisor+4,w
 13552  2058  0425               	iorwf	___aomod@divisor+5,w
 13553  2059  0426               	iorwf	___aomod@divisor+6,w
 13554  205A  0427               	iorwf	___aomod@divisor+7,w
 13555  205B  1903               	skipnz
 13556  205C  28AA               	goto	l4889
 13557  205D  01F2               	clrf	___aomod@counter
 13558  205E  0AF2               	incf	___aomod@counter,f
 13559  205F                     l4881:	
 13560  205F  1BA7               	btfsc	___aomod@divisor+7,7
 13561  2060  286E               	goto	l4883
 13562  2061  35A0               	lslf	___aomod@divisor,f
 13563  2062  0DA1               	rlf	___aomod@divisor+1,f
 13564  2063  0DA2               	rlf	___aomod@divisor+2,f
 13565  2064  0DA3               	rlf	___aomod@divisor+3,f
 13566  2065  0DA4               	rlf	___aomod@divisor+4,f
 13567  2066  0DA5               	rlf	___aomod@divisor+5,f
 13568  2067  0DA6               	rlf	___aomod@divisor+6,f
 13569  2068  0DA7               	rlf	___aomod@divisor+7,f
 13570  2069  3001               	movlw	1
 13571  206A  00F1               	movwf	??___aomod
 13572  206B  0871               	movf	??___aomod,w
 13573  206C  07F2               	addwf	___aomod@counter,f
 13574  206D  285F               	goto	l4881
 13575  206E                     l4883:	
 13576  206E  0827               	movf	___aomod@divisor+7,w
 13577  206F  022F               	subwf	___aomod@dividend+7,w
 13578  2070  1D03               	skipz
 13579  2071  288C               	goto	u5995
 13580  2072  0826               	movf	___aomod@divisor+6,w
 13581  2073  022E               	subwf	___aomod@dividend+6,w
 13582  2074  1D03               	skipz
 13583  2075  288C               	goto	u5995
 13584  2076  0825               	movf	___aomod@divisor+5,w
 13585  2077  022D               	subwf	___aomod@dividend+5,w
 13586  2078  1D03               	skipz
 13587  2079  288C               	goto	u5995
 13588  207A  0824               	movf	___aomod@divisor+4,w
 13589  207B  022C               	subwf	___aomod@dividend+4,w
 13590  207C  1D03               	skipz
 13591  207D  288C               	goto	u5995
 13592  207E  0823               	movf	___aomod@divisor+3,w
 13593  207F  022B               	subwf	___aomod@dividend+3,w
 13594  2080  1D03               	skipz
 13595  2081  288C               	goto	u5995
 13596  2082  0822               	movf	___aomod@divisor+2,w
 13597  2083  022A               	subwf	___aomod@dividend+2,w
 13598  2084  1D03               	skipz
 13599  2085  288C               	goto	u5995
 13600  2086  0821               	movf	___aomod@divisor+1,w
 13601  2087  0229               	subwf	___aomod@dividend+1,w
 13602  2088  1D03               	skipz
 13603  2089  288C               	goto	u5995
 13604  208A  0820               	movf	___aomod@divisor,w
 13605  208B  0228               	subwf	___aomod@dividend,w
 13606  208C                     u5995:	
 13607  208C  1C03               	skipc
 13608  208D  289E               	goto	l4887
 13609  208E  0820               	movf	___aomod@divisor,w
 13610  208F  02A8               	subwf	___aomod@dividend,f
 13611  2090  0821               	movf	___aomod@divisor+1,w
 13612  2091  3BA9               	subwfb	___aomod@dividend+1,f
 13613  2092  0822               	movf	___aomod@divisor+2,w
 13614  2093  3BAA               	subwfb	___aomod@dividend+2,f
 13615  2094  0823               	movf	___aomod@divisor+3,w
 13616  2095  3BAB               	subwfb	___aomod@dividend+3,f
 13617  2096  0824               	movf	___aomod@divisor+4,w
 13618  2097  3BAC               	subwfb	___aomod@dividend+4,f
 13619  2098  0825               	movf	___aomod@divisor+5,w
 13620  2099  3BAD               	subwfb	___aomod@dividend+5,f
 13621  209A  0826               	movf	___aomod@divisor+6,w
 13622  209B  3BAE               	subwfb	___aomod@dividend+6,f
 13623  209C  0827               	movf	___aomod@divisor+7,w
 13624  209D  3BAF               	subwfb	___aomod@dividend+7,f
 13625  209E                     l4887:	
 13626  209E  36A7               	lsrf	___aomod@divisor+7,f
 13627  209F  0CA6               	rrf	___aomod@divisor+6,f
 13628  20A0  0CA5               	rrf	___aomod@divisor+5,f
 13629  20A1  0CA4               	rrf	___aomod@divisor+4,f
 13630  20A2  0CA3               	rrf	___aomod@divisor+3,f
 13631  20A3  0CA2               	rrf	___aomod@divisor+2,f
 13632  20A4  0CA1               	rrf	___aomod@divisor+1,f
 13633  20A5  0CA0               	rrf	___aomod@divisor,f
 13634  20A6  3001               	movlw	1
 13635  20A7  02F2               	subwf	___aomod@counter,f
 13636  20A8  1D03               	btfss	3,2
 13637  20A9  286E               	goto	l4883
 13638  20AA                     l4889:	
 13639  20AA  0873               	movf	___aomod@sign,w
 13640  20AB  1903               	btfsc	3,2
 13641  20AC  28CB               	goto	l1054
 13642  20AD  09A8               	comf	___aomod@dividend,f
 13643  20AE  09A9               	comf	___aomod@dividend+1,f
 13644  20AF  09AA               	comf	___aomod@dividend+2,f
 13645  20B0  09AB               	comf	___aomod@dividend+3,f
 13646  20B1  09AC               	comf	___aomod@dividend+4,f
 13647  20B2  09AD               	comf	___aomod@dividend+5,f
 13648  20B3  09AE               	comf	___aomod@dividend+6,f
 13649  20B4  09AF               	comf	___aomod@dividend+7,f
 13650  20B5  0AA8               	incf	___aomod@dividend,f
 13651  20B6  1D03               	skipz
 13652  20B7  28CB               	goto	l1054
 13653  20B8  0AA9               	incf	___aomod@dividend+1,f
 13654  20B9  1D03               	skipz
 13655  20BA  28CB               	goto	l1054
 13656  20BB  0AAA               	incf	___aomod@dividend+2,f
 13657  20BC  1D03               	skipz
 13658  20BD  28CB               	goto	l1054
 13659  20BE  0AAB               	incf	___aomod@dividend+3,f
 13660  20BF  1D03               	skipz
 13661  20C0  28CB               	goto	l1054
 13662  20C1  0AAC               	incf	___aomod@dividend+4,f
 13663  20C2  1D03               	skipz
 13664  20C3  28CB               	goto	l1054
 13665  20C4  0AAD               	incf	___aomod@dividend+5,f
 13666  20C5  1D03               	skipz
 13667  20C6  28CB               	goto	l1054
 13668  20C7  0AAE               	incf	___aomod@dividend+6,f
 13669  20C8  1D03               	skipz
 13670  20C9  28CB               	goto	l1054
 13671  20CA  0AAF               	incf	___aomod@dividend+7,f
 13672  20CB                     l1054:	
 13673  20CB  0020               	movlb	0	; select bank0
 13674  20CC  0828               	movf	___aomod@dividend,w
 13675  20CD  00A0               	movwf	?___aomod
 13676  20CE  0829               	movf	___aomod@dividend+1,w
 13677  20CF  00A1               	movwf	?___aomod+1
 13678  20D0  082A               	movf	___aomod@dividend+2,w
 13679  20D1  00A2               	movwf	?___aomod+2
 13680  20D2  082B               	movf	___aomod@dividend+3,w
 13681  20D3  00A3               	movwf	?___aomod+3
 13682  20D4  082C               	movf	___aomod@dividend+4,w
 13683  20D5  00A4               	movwf	?___aomod+4
 13684  20D6  082D               	movf	___aomod@dividend+5,w
 13685  20D7  00A5               	movwf	?___aomod+5
 13686  20D8  082E               	movf	___aomod@dividend+6,w
 13687  20D9  00A6               	movwf	?___aomod+6
 13688  20DA  082F               	movf	___aomod@dividend+7,w
 13689  20DB  00A7               	movwf	?___aomod+7
 13690  20DC  0008               	return
 13691  20DD                     __end_of___aomod:	
 13692                           
 13693                           	psect	text34
 13694  22B8                     __ptext34:	
 13695 ;; *************** function ___aodiv *****************
 13696 ;; Defined at:
 13697 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
 13698 ;; Parameters:    Size  Location     Type
 13699 ;;  divisor         8    0[BANK0 ] long long 
 13700 ;;  dividend        8    8[BANK0 ] long long 
 13701 ;; Auto vars:     Size  Location     Type
 13702 ;;  quotient        8    4[COMMON] long long 
 13703 ;;  sign            1    3[COMMON] unsigned char 
 13704 ;;  counter         1    2[COMMON] unsigned char 
 13705 ;; Return value:  Size  Location     Type
 13706 ;;                  8    0[BANK0 ] long long 
 13707 ;; Registers used:
 13708 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13709 ;; Tracked objects:
 13710 ;;		On entry : 0/0
 13711 ;;		On exit  : 0/0
 13712 ;;		Unchanged: 0/0
 13713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13714 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13715 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13717 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13718 ;;Total ram usage:       27 bytes
 13719 ;; Hardware stack levels used:    1
 13720 ;; Hardware stack levels required when called:    1
 13721 ;; This function calls:
 13722 ;;		Nothing
 13723 ;; This function is called by:
 13724 ;;		_dtoa
 13725 ;; This function uses a non-reentrant model
 13726 ;;
 13727                           
 13728                           
 13729                           ;psect for function ___aodiv
 13730  22B8                     ___aodiv:	
 13731                           
 13732                           ;incstack = 0
 13733                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 13734  22B8  01F3               	clrf	___aodiv@sign
 13735  22B9  3020               	movlw	low ___aodiv@divisor
 13736  22BA  0086               	movwf	6
 13737  22BB  3000               	movlw	high ___aodiv@divisor
 13738  22BC  0087               	movwf	7
 13739  22BD  3F47               	moviw [7]fsr1
 13740  22BE  00F1               	movwf	??___aodiv
 13741  22BF  1FF1               	btfss	??___aodiv,7
 13742  22C0  2AE2               	goto	l4831
 13743  22C1  0020               	movlb	0	; select bank0
 13744  22C2  09A0               	comf	___aodiv@divisor,f
 13745  22C3  09A1               	comf	___aodiv@divisor+1,f
 13746  22C4  09A2               	comf	___aodiv@divisor+2,f
 13747  22C5  09A3               	comf	___aodiv@divisor+3,f
 13748  22C6  09A4               	comf	___aodiv@divisor+4,f
 13749  22C7  09A5               	comf	___aodiv@divisor+5,f
 13750  22C8  09A6               	comf	___aodiv@divisor+6,f
 13751  22C9  09A7               	comf	___aodiv@divisor+7,f
 13752  22CA  0AA0               	incf	___aodiv@divisor,f
 13753  22CB  1D03               	skipz
 13754  22CC  2AE0               	goto	u583lld
 13755  22CD  0AA1               	incf	___aodiv@divisor+1,f
 13756  22CE  1D03               	skipz
 13757  22CF  2AE0               	goto	u583lld
 13758  22D0  0AA2               	incf	___aodiv@divisor+2,f
 13759  22D1  1D03               	skipz
 13760  22D2  2AE0               	goto	u583lld
 13761  22D3  0AA3               	incf	___aodiv@divisor+3,f
 13762  22D4  1D03               	skipz
 13763  22D5  2AE0               	goto	u583lld
 13764  22D6  0AA4               	incf	___aodiv@divisor+4,f
 13765  22D7  1D03               	skipz
 13766  22D8  2AE0               	goto	u583lld
 13767  22D9  0AA5               	incf	___aodiv@divisor+5,f
 13768  22DA  1D03               	skipz
 13769  22DB  2AE0               	goto	u583lld
 13770  22DC  0AA6               	incf	___aodiv@divisor+6,f
 13771  22DD  1D03               	skipz
 13772  22DE  2AE0               	goto	u583lld
 13773  22DF  0AA7               	incf	___aodiv@divisor+7,f
 13774  22E0                     u583lld:	
 13775  22E0  01F3               	clrf	___aodiv@sign
 13776  22E1  0AF3               	incf	___aodiv@sign,f
 13777  22E2                     l4831:	
 13778  22E2  3028               	movlw	low ___aodiv@dividend
 13779  22E3  0086               	movwf	6
 13780  22E4  3000               	movlw	high ___aodiv@dividend
 13781  22E5  0087               	movwf	7
 13782  22E6  3F47               	moviw [7]fsr1
 13783  22E7  00F1               	movwf	??___aodiv
 13784  22E8  1FF1               	btfss	??___aodiv,7
 13785  22E9  2B0D               	goto	l4837
 13786  22EA  0020               	movlb	0	; select bank0
 13787  22EB  09A8               	comf	___aodiv@dividend,f
 13788  22EC  09A9               	comf	___aodiv@dividend+1,f
 13789  22ED  09AA               	comf	___aodiv@dividend+2,f
 13790  22EE  09AB               	comf	___aodiv@dividend+3,f
 13791  22EF  09AC               	comf	___aodiv@dividend+4,f
 13792  22F0  09AD               	comf	___aodiv@dividend+5,f
 13793  22F1  09AE               	comf	___aodiv@dividend+6,f
 13794  22F2  09AF               	comf	___aodiv@dividend+7,f
 13795  22F3  0AA8               	incf	___aodiv@dividend,f
 13796  22F4  1D03               	skipz
 13797  22F5  2B09               	goto	l4835
 13798  22F6  0AA9               	incf	___aodiv@dividend+1,f
 13799  22F7  1D03               	skipz
 13800  22F8  2B09               	goto	l4835
 13801  22F9  0AAA               	incf	___aodiv@dividend+2,f
 13802  22FA  1D03               	skipz
 13803  22FB  2B09               	goto	l4835
 13804  22FC  0AAB               	incf	___aodiv@dividend+3,f
 13805  22FD  1D03               	skipz
 13806  22FE  2B09               	goto	l4835
 13807  22FF  0AAC               	incf	___aodiv@dividend+4,f
 13808  2300  1D03               	skipz
 13809  2301  2B09               	goto	l4835
 13810  2302  0AAD               	incf	___aodiv@dividend+5,f
 13811  2303  1D03               	skipz
 13812  2304  2B09               	goto	l4835
 13813  2305  0AAE               	incf	___aodiv@dividend+6,f
 13814  2306  1D03               	skipz
 13815  2307  2B09               	goto	l4835
 13816  2308  0AAF               	incf	___aodiv@dividend+7,f
 13817  2309                     l4835:	
 13818  2309  3001               	movlw	1
 13819  230A  00F1               	movwf	??___aodiv
 13820  230B  0871               	movf	??___aodiv,w
 13821  230C  06F3               	xorwf	___aodiv@sign,f
 13822  230D                     l4837:	
 13823  230D  3074               	movlw	low ___aodiv@quotient
 13824  230E  0086               	movwf	6
 13825  230F  3000               	movlw	high ___aodiv@quotient
 13826  2310  0087               	movwf	7
 13827  2311  3008               	movlw	8
 13828  2312  00F1               	movwf	??___aodiv
 13829  2313  3000               	movlw	0
 13830  2314                     u5860:	
 13831  2314  001E               	movwi fsr1++
 13832  2315  0BF1               	decfsz	??___aodiv,f
 13833  2316  2B14               	goto	u5860
 13834  2317  0020               	movlb	0	; select bank0
 13835  2318  0820               	movf	___aodiv@divisor,w
 13836  2319  0421               	iorwf	___aodiv@divisor+1,w
 13837  231A  0422               	iorwf	___aodiv@divisor+2,w
 13838  231B  0423               	iorwf	___aodiv@divisor+3,w
 13839  231C  0424               	iorwf	___aodiv@divisor+4,w
 13840  231D  0425               	iorwf	___aodiv@divisor+5,w
 13841  231E  0426               	iorwf	___aodiv@divisor+6,w
 13842  231F  0427               	iorwf	___aodiv@divisor+7,w
 13843  2320  1903               	skipnz
 13844  2321  2B78               	goto	l4859
 13845  2322  01F2               	clrf	___aodiv@counter
 13846  2323  0AF2               	incf	___aodiv@counter,f
 13847  2324                     l4847:	
 13848  2324  1BA7               	btfsc	___aodiv@divisor+7,7
 13849  2325  2B33               	goto	l4849
 13850  2326  35A0               	lslf	___aodiv@divisor,f
 13851  2327  0DA1               	rlf	___aodiv@divisor+1,f
 13852  2328  0DA2               	rlf	___aodiv@divisor+2,f
 13853  2329  0DA3               	rlf	___aodiv@divisor+3,f
 13854  232A  0DA4               	rlf	___aodiv@divisor+4,f
 13855  232B  0DA5               	rlf	___aodiv@divisor+5,f
 13856  232C  0DA6               	rlf	___aodiv@divisor+6,f
 13857  232D  0DA7               	rlf	___aodiv@divisor+7,f
 13858  232E  3001               	movlw	1
 13859  232F  00F1               	movwf	??___aodiv
 13860  2330  0871               	movf	??___aodiv,w
 13861  2331  07F2               	addwf	___aodiv@counter,f
 13862  2332  2B24               	goto	l4847
 13863  2333                     l4849:	
 13864  2333  35F4               	lslf	___aodiv@quotient,f
 13865  2334  0DF5               	rlf	___aodiv@quotient+1,f
 13866  2335  0DF6               	rlf	___aodiv@quotient+2,f
 13867  2336  0DF7               	rlf	___aodiv@quotient+3,f
 13868  2337  0DF8               	rlf	___aodiv@quotient+4,f
 13869  2338  0DF9               	rlf	___aodiv@quotient+5,f
 13870  2339  0DFA               	rlf	___aodiv@quotient+6,f
 13871  233A  0DFB               	rlf	___aodiv@quotient+7,f
 13872  233B  0827               	movf	___aodiv@divisor+7,w
 13873  233C  022F               	subwf	___aodiv@dividend+7,w
 13874  233D  1D03               	skipz
 13875  233E  2B59               	goto	u5895
 13876  233F  0826               	movf	___aodiv@divisor+6,w
 13877  2340  022E               	subwf	___aodiv@dividend+6,w
 13878  2341  1D03               	skipz
 13879  2342  2B59               	goto	u5895
 13880  2343  0825               	movf	___aodiv@divisor+5,w
 13881  2344  022D               	subwf	___aodiv@dividend+5,w
 13882  2345  1D03               	skipz
 13883  2346  2B59               	goto	u5895
 13884  2347  0824               	movf	___aodiv@divisor+4,w
 13885  2348  022C               	subwf	___aodiv@dividend+4,w
 13886  2349  1D03               	skipz
 13887  234A  2B59               	goto	u5895
 13888  234B  0823               	movf	___aodiv@divisor+3,w
 13889  234C  022B               	subwf	___aodiv@dividend+3,w
 13890  234D  1D03               	skipz
 13891  234E  2B59               	goto	u5895
 13892  234F  0822               	movf	___aodiv@divisor+2,w
 13893  2350  022A               	subwf	___aodiv@dividend+2,w
 13894  2351  1D03               	skipz
 13895  2352  2B59               	goto	u5895
 13896  2353  0821               	movf	___aodiv@divisor+1,w
 13897  2354  0229               	subwf	___aodiv@dividend+1,w
 13898  2355  1D03               	skipz
 13899  2356  2B59               	goto	u5895
 13900  2357  0820               	movf	___aodiv@divisor,w
 13901  2358  0228               	subwf	___aodiv@dividend,w
 13902  2359                     u5895:	
 13903  2359  1C03               	skipc
 13904  235A  2B6C               	goto	l4857
 13905  235B  0820               	movf	___aodiv@divisor,w
 13906  235C  02A8               	subwf	___aodiv@dividend,f
 13907  235D  0821               	movf	___aodiv@divisor+1,w
 13908  235E  3BA9               	subwfb	___aodiv@dividend+1,f
 13909  235F  0822               	movf	___aodiv@divisor+2,w
 13910  2360  3BAA               	subwfb	___aodiv@dividend+2,f
 13911  2361  0823               	movf	___aodiv@divisor+3,w
 13912  2362  3BAB               	subwfb	___aodiv@dividend+3,f
 13913  2363  0824               	movf	___aodiv@divisor+4,w
 13914  2364  3BAC               	subwfb	___aodiv@dividend+4,f
 13915  2365  0825               	movf	___aodiv@divisor+5,w
 13916  2366  3BAD               	subwfb	___aodiv@dividend+5,f
 13917  2367  0826               	movf	___aodiv@divisor+6,w
 13918  2368  3BAE               	subwfb	___aodiv@dividend+6,f
 13919  2369  0827               	movf	___aodiv@divisor+7,w
 13920  236A  3BAF               	subwfb	___aodiv@dividend+7,f
 13921  236B  1474               	bsf	___aodiv@quotient,0
 13922  236C                     l4857:	
 13923  236C  36A7               	lsrf	___aodiv@divisor+7,f
 13924  236D  0CA6               	rrf	___aodiv@divisor+6,f
 13925  236E  0CA5               	rrf	___aodiv@divisor+5,f
 13926  236F  0CA4               	rrf	___aodiv@divisor+4,f
 13927  2370  0CA3               	rrf	___aodiv@divisor+3,f
 13928  2371  0CA2               	rrf	___aodiv@divisor+2,f
 13929  2372  0CA1               	rrf	___aodiv@divisor+1,f
 13930  2373  0CA0               	rrf	___aodiv@divisor,f
 13931  2374  3001               	movlw	1
 13932  2375  02F2               	subwf	___aodiv@counter,f
 13933  2376  1D03               	btfss	3,2
 13934  2377  2B33               	goto	l4849
 13935  2378                     l4859:	
 13936  2378  0873               	movf	___aodiv@sign,w
 13937  2379  1903               	btfsc	3,2
 13938  237A  2B99               	goto	l1041
 13939  237B  09F4               	comf	___aodiv@quotient,f
 13940  237C  09F5               	comf	___aodiv@quotient+1,f
 13941  237D  09F6               	comf	___aodiv@quotient+2,f
 13942  237E  09F7               	comf	___aodiv@quotient+3,f
 13943  237F  09F8               	comf	___aodiv@quotient+4,f
 13944  2380  09F9               	comf	___aodiv@quotient+5,f
 13945  2381  09FA               	comf	___aodiv@quotient+6,f
 13946  2382  09FB               	comf	___aodiv@quotient+7,f
 13947  2383  0AF4               	incf	___aodiv@quotient,f
 13948  2384  1D03               	skipz
 13949  2385  2B99               	goto	l1041
 13950  2386  0AF5               	incf	___aodiv@quotient+1,f
 13951  2387  1D03               	skipz
 13952  2388  2B99               	goto	l1041
 13953  2389  0AF6               	incf	___aodiv@quotient+2,f
 13954  238A  1D03               	skipz
 13955  238B  2B99               	goto	l1041
 13956  238C  0AF7               	incf	___aodiv@quotient+3,f
 13957  238D  1D03               	skipz
 13958  238E  2B99               	goto	l1041
 13959  238F  0AF8               	incf	___aodiv@quotient+4,f
 13960  2390  1D03               	skipz
 13961  2391  2B99               	goto	l1041
 13962  2392  0AF9               	incf	___aodiv@quotient+5,f
 13963  2393  1D03               	skipz
 13964  2394  2B99               	goto	l1041
 13965  2395  0AFA               	incf	___aodiv@quotient+6,f
 13966  2396  1D03               	skipz
 13967  2397  2B99               	goto	l1041
 13968  2398  0AFB               	incf	___aodiv@quotient+7,f
 13969  2399                     l1041:	
 13970  2399  0874               	movf	___aodiv@quotient,w
 13971  239A  0020               	movlb	0	; select bank0
 13972  239B  00A0               	movwf	?___aodiv
 13973  239C  0875               	movf	___aodiv@quotient+1,w
 13974  239D  00A1               	movwf	?___aodiv+1
 13975  239E  0876               	movf	___aodiv@quotient+2,w
 13976  239F  00A2               	movwf	?___aodiv+2
 13977  23A0  0877               	movf	___aodiv@quotient+3,w
 13978  23A1  00A3               	movwf	?___aodiv+3
 13979  23A2  0878               	movf	___aodiv@quotient+4,w
 13980  23A3  00A4               	movwf	?___aodiv+4
 13981  23A4  0879               	movf	___aodiv@quotient+5,w
 13982  23A5  00A5               	movwf	?___aodiv+5
 13983  23A6  087A               	movf	___aodiv@quotient+6,w
 13984  23A7  00A6               	movwf	?___aodiv+6
 13985  23A8  087B               	movf	___aodiv@quotient+7,w
 13986  23A9  00A7               	movwf	?___aodiv+7
 13987  23AA  0008               	return
 13988  23AB                     __end_of___aodiv:	
 13989                           
 13990                           	psect	text35
 13991  3F6B                     __ptext35:	
 13992 ;; *************** function _ctoa *****************
 13993 ;; Defined at:
 13994 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 13995 ;; Parameters:    Size  Location     Type
 13996 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
 13997 ;;		 -> vsnprintf@f(6), 
 13998 ;;  c               1   18[BANK0 ] unsigned char 
 13999 ;; Auto vars:     Size  Location     Type
 14000 ;;  w               2   20[BANK0 ] int 
 14001 ;;  l               2    0        int 
 14002 ;; Return value:  Size  Location     Type
 14003 ;;                  2   16[BANK0 ] int 
 14004 ;; Registers used:
 14005 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14006 ;; Tracked objects:
 14007 ;;		On entry : 0/0
 14008 ;;		On exit  : 0/0
 14009 ;;		Unchanged: 0/0
 14010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14011 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14012 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14013 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14014 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14015 ;;Total ram usage:        6 bytes
 14016 ;; Hardware stack levels used:    1
 14017 ;; Hardware stack levels required when called:    5
 14018 ;; This function calls:
 14019 ;;		_pad
 14020 ;; This function is called by:
 14021 ;;		_vfpfcnvrt
 14022 ;; This function uses a non-reentrant model
 14023 ;;
 14024                           
 14025                           
 14026                           ;psect for function _ctoa
 14027  3F6B                     _ctoa:	
 14028                           
 14029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
 14030                           
 14031                           ;incstack = 0
 14032                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14033  3F6B  0023               	movlb	3	; select bank3
 14034  3F6C  0834               	movf	_width^(0+384),w
 14035  3F6D  0435               	iorwf	(_width+1)^(0+384),w
 14036  3F6E  1D03               	btfss	3,2
 14037  3F6F  2F78               	goto	l7301
 14038  3F70  0835               	movf	(_width+1)^(0+384),w
 14039  3F71  0020               	movlb	0	; select bank0
 14040  3F72  00B5               	movwf	ctoa@w+1
 14041  3F73  0023               	movlb	3	; select bank3
 14042  3F74  0834               	movf	_width^(0+384),w
 14043  3F75  0020               	movlb	0	; select bank0
 14044  3F76  00B4               	movwf	ctoa@w
 14045  3F77  2F81               	goto	l7303
 14046  3F78                     l7301:	
 14047  3F78  0834               	movf	_width^(0+384),w
 14048  3F79  3EFF               	addlw	255
 14049  3F7A  0020               	movlb	0	; select bank0
 14050  3F7B  00B4               	movwf	ctoa@w
 14051  3F7C  30FF               	movlw	255
 14052  3F7D  0023               	movlb	3	; select bank3
 14053  3F7E  3D35               	addwfc	(_width+1)^(0+384),w
 14054  3F7F  0020               	movlb	0	; select bank0
 14055  3F80  00B5               	movwf	ctoa@w+1
 14056  3F81                     l7303:	
 14057                           
 14058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
 14059  3F81  0832               	movf	ctoa@c,w
 14060  3F82  00B3               	movwf	??_ctoa
 14061  3F83  0833               	movf	??_ctoa,w
 14062  3F84  0025               	movlb	5	; select bank5
 14063  3F85  00A0               	movwf	_dbuf^(0+640)
 14064                           
 14065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
 14066  3F86  01A1               	clrf	(_dbuf^(0+640)+1)
 14067                           
 14068                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
 14069  3F87  0020               	movlb	0	; select bank0
 14070  3F88  0831               	movf	ctoa@fp+1,w
 14071  3F89  00A7               	movwf	pad@fp+1
 14072  3F8A  0830               	movf	ctoa@fp,w
 14073  3F8B  00A6               	movwf	pad@fp
 14074  3F8C  30A0               	movlw	(low (_dbuf| (0+512)))& (0+255)
 14075  3F8D  00B3               	movwf	??_ctoa
 14076  3F8E  0833               	movf	??_ctoa,w
 14077  3F8F  00A8               	movwf	pad@buf
 14078  3F90  0835               	movf	ctoa@w+1,w
 14079  3F91  00AA               	movwf	pad@p+1
 14080  3F92  0834               	movf	ctoa@w,w
 14081  3F93  00A9               	movwf	pad@p
 14082  3F94  31B2  2202         	fcall	_pad
 14083  3F96  0020               	movlb	0	; select bank0
 14084  3F97  0827               	movf	?_pad+1,w
 14085  3F98  00B1               	movwf	?_ctoa+1
 14086  3F99  0826               	movf	?_pad,w
 14087  3F9A  00B0               	movwf	?_ctoa
 14088  3F9B  0008               	return
 14089  3F9C                     __end_of_ctoa:	
 14090                           
 14091                           	psect	text36
 14092  3202                     __ptext36:	
 14093 ;; *************** function _pad *****************
 14094 ;; Defined at:
 14095 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
 14096 ;; Parameters:    Size  Location     Type
 14097 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
 14098 ;;		 -> vsnprintf@f(6), 
 14099 ;;  buf             1    8[BANK0 ] PTR unsigned char 
 14100 ;;		 -> dbuf(80), 
 14101 ;;  p               2    9[BANK0 ] int 
 14102 ;; Auto vars:     Size  Location     Type
 14103 ;;  w               2   14[BANK0 ] int 
 14104 ;;  i               2   12[BANK0 ] int 
 14105 ;; Return value:  Size  Location     Type
 14106 ;;                  2    6[BANK0 ] int 
 14107 ;; Registers used:
 14108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14109 ;; Tracked objects:
 14110 ;;		On entry : 0/0
 14111 ;;		On exit  : 0/0
 14112 ;;		Unchanged: 0/0
 14113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14114 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14115 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14116 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14117 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14118 ;;Total ram usage:       10 bytes
 14119 ;; Hardware stack levels used:    1
 14120 ;; Hardware stack levels required when called:    4
 14121 ;; This function calls:
 14122 ;;		_fputc
 14123 ;;		_fputs
 14124 ;;		_strlen
 14125 ;; This function is called by:
 14126 ;;		_ctoa
 14127 ;;		_dtoa
 14128 ;;		_efgtoa
 14129 ;;		_otoa
 14130 ;;		_utoa
 14131 ;;		_xtoa
 14132 ;; This function uses a non-reentrant model
 14133 ;;
 14134                           
 14135                           
 14136                           ;psect for function _pad
 14137  3202                     _pad:	
 14138                           
 14139                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
 14140                           
 14141                           ;incstack = 0
 14142                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14143  3202  0023               	movlb	3	; select bank3
 14144  3203  1C38               	btfss	_flags^(0+384),0
 14145  3204  2A0E               	goto	l7247
 14146                           
 14147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
 14148  3205  0020               	movlb	0	; select bank0
 14149  3206  0827               	movf	pad@fp+1,w
 14150  3207  00FB               	movwf	fputs@fp+1
 14151  3208  0826               	movf	pad@fp,w
 14152  3209  00FA               	movwf	fputs@fp
 14153  320A  0828               	movf	pad@buf,w
 14154  320B  31A8  2008  31B2   	fcall	_fputs
 14155  320E                     l7247:	
 14156                           
 14157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
 14158  320E  0020               	movlb	0	; select bank0
 14159  320F  1BAA               	btfsc	pad@p+1,7
 14160  3210  2A16               	goto	l7251
 14161  3211  082A               	movf	pad@p+1,w
 14162  3212  00AF               	movwf	pad@w+1
 14163  3213  0829               	movf	pad@p,w
 14164  3214  00AE               	movwf	pad@w
 14165  3215  2A18               	goto	l623
 14166  3216                     l7251:	
 14167  3216  01AE               	clrf	pad@w
 14168  3217  01AF               	clrf	pad@w+1
 14169  3218                     l623:	
 14170                           
 14171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
 14172  3218  01AC               	clrf	pad@i
 14173  3219  01AD               	clrf	pad@i+1
 14174  321A                     l7257:	
 14175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14176                           
 14177                           
 14178                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
 14179  321A  082D               	movf	pad@i+1,w
 14180  321B  3A80               	xorlw	128
 14181  321C  00AB               	movwf	??_pad
 14182  321D  082F               	movf	pad@w+1,w
 14183  321E  3A80               	xorlw	128
 14184  321F  022B               	subwf	??_pad,w
 14185  3220  1D03               	skipz
 14186  3221  2A24               	goto	u9755
 14187  3222  082E               	movf	pad@w,w
 14188  3223  022C               	subwf	pad@i,w
 14189  3224                     u9755:	
 14190  3224  1803               	btfsc	3,0
 14191  3225  2A38               	goto	l626
 14192                           
 14193                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
 14194  3226  3020               	movlw	32
 14195  3227  00F1               	movwf	fputc@c
 14196  3228  3000               	movlw	0
 14197  3229  00F2               	movwf	fputc@c+1
 14198  322A  0020               	movlb	0	; select bank0
 14199  322B  0827               	movf	pad@fp+1,w
 14200  322C  00F4               	movwf	fputc@fp+1
 14201  322D  0826               	movf	pad@fp,w
 14202  322E  00F3               	movwf	fputc@fp
 14203  322F  31B2  22F6  31B2   	fcall	_fputc
 14204                           
 14205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
 14206  3232  3001               	movlw	1
 14207  3233  0020               	movlb	0	; select bank0
 14208  3234  07AC               	addwf	pad@i,f
 14209  3235  3000               	movlw	0
 14210  3236  3DAD               	addwfc	pad@i+1,f
 14211  3237  2A1A               	goto	l7257
 14212  3238                     l626:	
 14213                           
 14214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
 14215  3238  0023               	movlb	3	; select bank3
 14216  3239  1838               	btfsc	_flags^(0+384),0
 14217  323A  2A44               	goto	l7261
 14218                           
 14219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
 14220  323B  0020               	movlb	0	; select bank0
 14221  323C  0827               	movf	pad@fp+1,w
 14222  323D  00FB               	movwf	fputs@fp+1
 14223  323E  0826               	movf	pad@fp,w
 14224  323F  00FA               	movwf	fputs@fp
 14225  3240  0828               	movf	pad@buf,w
 14226  3241  31A8  2008  31B2   	fcall	_fputs
 14227  3244                     l7261:	
 14228                           
 14229                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
 14230  3244  0020               	movlb	0	; select bank0
 14231  3245  0828               	movf	pad@buf,w
 14232  3246  00F1               	movwf	strlen@s
 14233  3247  3002               	movlw	2
 14234  3248  00F2               	movwf	strlen@s+1
 14235  3249  31BD  2599         	fcall	_strlen
 14236  324B  0020               	movlb	0	; select bank0
 14237  324C  082E               	movf	pad@w,w
 14238  324D  0771               	addwf	?_strlen,w
 14239  324E  00A6               	movwf	?_pad
 14240  324F  082F               	movf	pad@w+1,w
 14241  3250  3D72               	addwfc	?_strlen+1,w
 14242  3251  00A7               	movwf	?_pad+1
 14243  3252  0008               	return
 14244  3253                     __end_of_pad:	
 14245                           
 14246                           	psect	text37
 14247  3D99                     __ptext37:	
 14248 ;; *************** function _strlen *****************
 14249 ;; Defined at:
 14250 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
 14251 ;; Parameters:    Size  Location     Type
 14252 ;;  s               2    1[COMMON] PTR const unsigned char 
 14253 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), adcGain(2), 
 14254 ;; Auto vars:     Size  Location     Type
 14255 ;;  a               2    3[COMMON] PTR const unsigned char 
 14256 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(80), adcGain(2), 
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  2    1[COMMON] unsigned int 
 14259 ;; Registers used:
 14260 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14261 ;; Tracked objects:
 14262 ;;		On entry : 0/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14269 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14270 ;;Total ram usage:        4 bytes
 14271 ;; Hardware stack levels used:    1
 14272 ;; Hardware stack levels required when called:    1
 14273 ;; This function calls:
 14274 ;;		Nothing
 14275 ;; This function is called by:
 14276 ;;		_pad
 14277 ;;		_stoa
 14278 ;; This function uses a non-reentrant model
 14279 ;;
 14280                           
 14281                           
 14282                           ;psect for function _strlen
 14283  3D99                     _strlen:	
 14284                           
 14285                           ;incstack = 0
 14286                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 14287  3D99  0872               	movf	strlen@s+1,w
 14288  3D9A  00F4               	movwf	strlen@a+1
 14289  3D9B  0871               	movf	strlen@s,w
 14290  3D9C  00F3               	movwf	strlen@a
 14291  3D9D                     l4477:	
 14292  3D9D  0871               	movf	strlen@s,w
 14293  3D9E  0086               	movwf	6
 14294  3D9F  0872               	movf	strlen@s+1,w
 14295  3DA0  0087               	movwf	7
 14296  3DA1  0801               	movf	1,w
 14297  3DA2  1903               	btfsc	3,2
 14298  3DA3  2DA9               	goto	l4479
 14299  3DA4  3001               	movlw	1
 14300  3DA5  07F1               	addwf	strlen@s,f
 14301  3DA6  3000               	movlw	0
 14302  3DA7  3DF2               	addwfc	strlen@s+1,f
 14303  3DA8  2D9D               	goto	l4477
 14304  3DA9                     l4479:	
 14305  3DA9  0873               	movf	strlen@a,w
 14306  3DAA  0271               	subwf	strlen@s,w
 14307  3DAB  00F1               	movwf	?_strlen
 14308  3DAC  0874               	movf	strlen@a+1,w
 14309  3DAD  3B72               	subwfb	strlen@s+1,w
 14310  3DAE  00F2               	movwf	?_strlen+1
 14311  3DAF  0008               	return
 14312  3DB0                     __end_of_strlen:	
 14313                           
 14314                           	psect	text38
 14315  2808                     __ptext38:	
 14316 ;; *************** function _fputs *****************
 14317 ;; Defined at:
 14318 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 14319 ;; Parameters:    Size  Location     Type
 14320 ;;  s               1    wreg     PTR const unsigned char 
 14321 ;;		 -> dbuf(80), 
 14322 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 14323 ;;		 -> vsnprintf@f(6), 
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 14326 ;;		 -> dbuf(80), 
 14327 ;;  i               2    3[BANK0 ] int 
 14328 ;;  c               1    2[BANK0 ] unsigned char 
 14329 ;; Return value:  Size  Location     Type
 14330 ;;                  2   10[COMMON] int 
 14331 ;; Registers used:
 14332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14333 ;; Tracked objects:
 14334 ;;		On entry : 0/0
 14335 ;;		On exit  : 0/0
 14336 ;;		Unchanged: 0/0
 14337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14338 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14339 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14340 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14341 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14342 ;;Total ram usage:        8 bytes
 14343 ;; Hardware stack levels used:    1
 14344 ;; Hardware stack levels required when called:    3
 14345 ;; This function calls:
 14346 ;;		_fputc
 14347 ;; This function is called by:
 14348 ;;		_pad
 14349 ;; This function uses a non-reentrant model
 14350 ;;
 14351                           
 14352                           
 14353                           ;psect for function _fputs
 14354  2808                     _fputs:	
 14355                           
 14356                           ;incstack = 0
 14357                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14358                           ;fputs@s stored from wreg
 14359  2808  0020               	movlb	0	; select bank0
 14360  2809  00A5               	movwf	fputs@s
 14361  280A  01A3               	clrf	fputs@i
 14362  280B  01A4               	clrf	fputs@i+1
 14363  280C                     l4471:	
 14364  280C  0823               	movf	fputs@i,w
 14365  280D  0725               	addwf	fputs@s,w
 14366  280E  00A0               	movwf	??_fputs
 14367  280F  0820               	movf	??_fputs,w
 14368  2810  0086               	movwf	6
 14369  2811  3002               	movlw	2	; select bank4/5
 14370  2812  0087               	movwf	7
 14371  2813  0801               	movf	1,w
 14372  2814  00A1               	movwf	??_fputs+1
 14373  2815  0821               	movf	??_fputs+1,w
 14374  2816  00A2               	movwf	fputs@c
 14375  2817  0822               	movf	fputs@c,w
 14376  2818  1903               	btfsc	3,2
 14377  2819  0008               	return
 14378  281A  0822               	movf	fputs@c,w
 14379  281B  00A0               	movwf	??_fputs
 14380  281C  01A1               	clrf	??_fputs+1
 14381  281D  0820               	movf	??_fputs,w
 14382  281E  00F1               	movwf	fputc@c
 14383  281F  0821               	movf	??_fputs+1,w
 14384  2820  00F2               	movwf	fputc@c+1
 14385  2821  087B               	movf	fputs@fp+1,w
 14386  2822  00F4               	movwf	fputc@fp+1
 14387  2823  087A               	movf	fputs@fp,w
 14388  2824  00F3               	movwf	fputc@fp
 14389  2825  31B2  22F6  31A8   	fcall	_fputc
 14390  2828  3001               	movlw	1
 14391  2829  0020               	movlb	0	; select bank0
 14392  282A  07A3               	addwf	fputs@i,f
 14393  282B  3000               	movlw	0
 14394  282C  3DA4               	addwfc	fputs@i+1,f
 14395  282D  280C               	goto	l4471
 14396  282E                     __end_of_fputs:	
 14397                           
 14398                           	psect	text39
 14399  32F6                     __ptext39:	
 14400 ;; *************** function _fputc *****************
 14401 ;; Defined at:
 14402 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 14403 ;; Parameters:    Size  Location     Type
 14404 ;;  c               2    1[COMMON] int 
 14405 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 14406 ;;		 -> vsnprintf@f(6), 
 14407 ;; Auto vars:     Size  Location     Type
 14408 ;;		None
 14409 ;; Return value:  Size  Location     Type
 14410 ;;                  2    1[COMMON] int 
 14411 ;; Registers used:
 14412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14413 ;; Tracked objects:
 14414 ;;		On entry : 0/0
 14415 ;;		On exit  : 0/0
 14416 ;;		Unchanged: 0/0
 14417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14418 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14420 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14421 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14422 ;;Total ram usage:        9 bytes
 14423 ;; Hardware stack levels used:    1
 14424 ;; Hardware stack levels required when called:    2
 14425 ;; This function calls:
 14426 ;;		_putch
 14427 ;; This function is called by:
 14428 ;;		_pad
 14429 ;;		_stoa
 14430 ;;		_vfpfcnvrt
 14431 ;;		_fputs
 14432 ;; This function uses a non-reentrant model
 14433 ;;
 14434                           
 14435                           
 14436                           ;psect for function _fputc
 14437  32F6                     _fputc:	
 14438                           
 14439                           ;incstack = 0
 14440                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14441  32F6  0873               	movf	fputc@fp,w
 14442  32F7  0474               	iorwf	fputc@fp+1,w
 14443  32F8  1903               	btfsc	3,2
 14444  32F9  2AFE               	goto	l4453
 14445  32FA  0873               	movf	fputc@fp,w
 14446  32FB  0474               	iorwf	fputc@fp+1,w
 14447  32FC  1D03               	btfss	3,2
 14448  32FD  2B02               	goto	l4455
 14449  32FE                     l4453:	
 14450  32FE  0871               	movf	fputc@c,w
 14451  32FF  3180  2003         	fcall	_putch
 14452  3301  0008               	return
 14453  3302                     l4455:	
 14454  3302  0873               	movf	fputc@fp,w
 14455  3303  0086               	movwf	6
 14456  3304  0874               	movf	fputc@fp+1,w
 14457  3305  0087               	movwf	7
 14458  3306  3144               	addfsr 1,4
 14459  3307  0016               	moviw fsr1++
 14460  3308  0401               	iorwf	1,w
 14461  3309  1903               	btfsc	3,2
 14462  330A  2B29               	goto	l4459
 14463  330B  0873               	movf	fputc@fp,w
 14464  330C  0086               	movwf	6
 14465  330D  0874               	movf	fputc@fp+1,w
 14466  330E  0087               	movwf	7
 14467  330F  3144               	addfsr 1,4
 14468  3310  3F40               	moviw [0]fsr1
 14469  3311  00F5               	movwf	??_fputc
 14470  3312  3F41               	moviw [1]fsr1
 14471  3313  00F6               	movwf	??_fputc+1
 14472  3314  0873               	movf	fputc@fp,w
 14473  3315  0086               	movwf	6
 14474  3316  0874               	movf	fputc@fp+1,w
 14475  3317  0087               	movwf	7
 14476  3318  3142               	addfsr 1,2
 14477  3319  3F40               	moviw [0]fsr1
 14478  331A  00F7               	movwf	??_fputc+2
 14479  331B  3F41               	moviw [1]fsr1
 14480  331C  00F8               	movwf	??_fputc+3
 14481  331D  0878               	movf	??_fputc+3,w
 14482  331E  3A80               	xorlw	128
 14483  331F  00F9               	movwf	??_fputc+4
 14484  3320  0876               	movf	??_fputc+1,w
 14485  3321  3A80               	xorlw	128
 14486  3322  0279               	subwf	??_fputc+4,w
 14487  3323  1D03               	skipz
 14488  3324  2B27               	goto	u4905
 14489  3325  0875               	movf	??_fputc,w
 14490  3326  0277               	subwf	??_fputc+2,w
 14491  3327                     u4905:	
 14492  3327  1803               	skipnc
 14493  3328  0008               	return
 14494  3329                     l4459:	
 14495  3329  0873               	movf	fputc@fp,w
 14496  332A  0086               	movwf	6
 14497  332B  0874               	movf	fputc@fp+1,w
 14498  332C  0087               	movwf	7
 14499  332D  3142               	addfsr 1,2
 14500  332E  0873               	movf	fputc@fp,w
 14501  332F  0084               	movwf	4
 14502  3330  0874               	movf	fputc@fp+1,w
 14503  3331  0085               	movwf	5
 14504  3332  3F40               	moviw [0]fsr1
 14505  3333  0700               	addwf	0,w
 14506  3334  00F5               	movwf	??_fputc
 14507  3335  3101               	addfsr 0,1
 14508  3336  3F41               	moviw [1]fsr1
 14509  3337  3D00               	addwfc	0,w
 14510  3338  00F6               	movwf	??_fputc+1
 14511  3339  0875               	movf	??_fputc,w
 14512  333A  0086               	movwf	6
 14513  333B  0876               	movf	??_fputc+1,w
 14514  333C  0087               	movwf	7
 14515  333D  0871               	movf	fputc@c,w
 14516  333E  0081               	movwf	1
 14517  333F  0873               	movf	fputc@fp,w
 14518  3340  0086               	movwf	6
 14519  3341  0874               	movf	fputc@fp+1,w
 14520  3342  0087               	movwf	7
 14521  3343  3142               	addfsr 1,2
 14522  3344  3001               	movlw	1
 14523  3345  0781               	addwf	1,f
 14524  3346  3141               	addfsr 1,1
 14525  3347  1803               	skipnc
 14526  3348  0A81               	incf	1,f
 14527  3349  0008               	return
 14528  334A                     __end_of_fputc:	
 14529                           
 14530                           	psect	text40
 14531  0003                     __ptext40:	
 14532 ;; *************** function _putch *****************
 14533 ;; Defined at:
 14534 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 14535 ;; Parameters:    Size  Location     Type
 14536 ;;  c               1    wreg     unsigned char 
 14537 ;; Auto vars:     Size  Location     Type
 14538 ;;  c               1    0[COMMON] unsigned char 
 14539 ;; Return value:  Size  Location     Type
 14540 ;;                  1    wreg      void 
 14541 ;; Registers used:
 14542 ;;		wreg
 14543 ;; Tracked objects:
 14544 ;;		On entry : 0/0
 14545 ;;		On exit  : 0/0
 14546 ;;		Unchanged: 0/0
 14547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14552 ;;Total ram usage:        0 bytes
 14553 ;; Hardware stack levels used:    1
 14554 ;; Hardware stack levels required when called:    1
 14555 ;; This function calls:
 14556 ;;		Nothing
 14557 ;; This function is called by:
 14558 ;;		_fputc
 14559 ;; This function uses a non-reentrant model
 14560 ;;
 14561                           
 14562                           
 14563                           ;psect for function _putch
 14564  0003                     _putch:	
 14565                           
 14566                           ;incstack = 0
 14567                           ; Regs used in _putch: [wreg]
 14568  0003  0008               	return
 14569  0004                     __end_of_putch:	
 14570                           
 14571                           	psect	text41
 14572  29D5                     __ptext41:	
 14573 ;; *************** function _atoi *****************
 14574 ;; Defined at:
 14575 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 14576 ;; Parameters:    Size  Location     Type
 14577 ;;  s               2    7[COMMON] PTR const unsigned char 
 14578 ;;		 -> STR_25(18), STR_24(18), STR_23(19), STR_22(20), 
 14579 ;;		 -> STR_21(20), STR_20(21), STR_19(21), STR_18(21), 
 14580 ;;		 -> STR_17(22), STR_16(22), STR_15(21), STR_14(21), 
 14581 ;;		 -> STR_11(52), STR_8(57), STR_7(44), STR_6(42), 
 14582 ;;		 -> STR_3(43), 
 14583 ;; Auto vars:     Size  Location     Type
 14584 ;;  n               2   11[BANK0 ] int 
 14585 ;;  neg             2    4[BANK0 ] int 
 14586 ;; Return value:  Size  Location     Type
 14587 ;;                  2    7[COMMON] int 
 14588 ;; Registers used:
 14589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14590 ;; Tracked objects:
 14591 ;;		On entry : 0/0
 14592 ;;		On exit  : 0/0
 14593 ;;		Unchanged: 0/0
 14594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14596 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14597 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14598 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14599 ;;Total ram usage:       15 bytes
 14600 ;; Hardware stack levels used:    1
 14601 ;; Hardware stack levels required when called:    2
 14602 ;; This function calls:
 14603 ;;		___wmul
 14604 ;;		_isdigit
 14605 ;;		_isspace
 14606 ;; This function is called by:
 14607 ;;		_vfpfcnvrt
 14608 ;; This function uses a non-reentrant model
 14609 ;;
 14610                           
 14611                           
 14612                           ;psect for function _atoi
 14613  29D5                     _atoi:	
 14614                           
 14615                           ;incstack = 0
 14616                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14617  29D5  0020               	movlb	0	; select bank0
 14618  29D6  01AB               	clrf	atoi@n
 14619  29D7  01AC               	clrf	atoi@n+1
 14620  29D8  01A4               	clrf	atoi@neg
 14621  29D9  01A5               	clrf	atoi@neg+1
 14622  29DA                     l7859:	
 14623  29DA  01AA               	clrf	_atoi$1766
 14624  29DB  0AAA               	incf	_atoi$1766,f
 14625  29DC  0877               	movf	atoi@s,w
 14626  29DD  0084               	movwf	4
 14627  29DE  0878               	movf	atoi@s+1,w
 14628  29DF  0085               	movwf	5
 14629  29E0  0012               	moviw fsr0++
 14630  29E1  3A20               	xorlw	32
 14631  29E2  1903               	btfsc	3,2
 14632  29E3  29F6               	goto	l7867
 14633  29E4  0877               	movf	atoi@s,w
 14634  29E5  0084               	movwf	4
 14635  29E6  0878               	movf	atoi@s+1,w
 14636  29E7  0085               	movwf	5
 14637  29E8  0800               	movf	0,w	;code access
 14638  29E9  3EF7               	addlw	247
 14639  29EA  00A0               	movwf	??_atoi
 14640  29EB  30FF               	movlw	255
 14641  29EC  1803               	skipnc
 14642  29ED  3000               	movlw	0
 14643  29EE  00A1               	movwf	??_atoi+1
 14644  29EF  3000               	movlw	0
 14645  29F0  0221               	subwf	??_atoi+1,w
 14646  29F1  3005               	movlw	5
 14647  29F2  1903               	skipnz
 14648  29F3  0220               	subwf	??_atoi,w
 14649  29F4  1803               	btfsc	3,0
 14650  29F5  01AA               	clrf	_atoi$1766
 14651  29F6                     l7867:	
 14652  29F6  082A               	movf	_atoi$1766,w
 14653  29F7  00A0               	movwf	??_atoi
 14654  29F8  01A1               	clrf	??_atoi+1
 14655  29F9  0820               	movf	??_atoi,w
 14656  29FA  00A6               	movwf	_atoi$1765
 14657  29FB  0821               	movf	??_atoi+1,w
 14658  29FC  00A7               	movwf	_atoi$1765+1
 14659  29FD  0826               	movf	_atoi$1765,w
 14660  29FE  0427               	iorwf	_atoi$1765+1,w
 14661  29FF  1903               	btfsc	3,2
 14662  2A00  2A0B               	goto	l7875
 14663  2A01  3001               	movlw	1
 14664  2A02  07F7               	addwf	atoi@s,f
 14665  2A03  3000               	movlw	0
 14666  2A04  3DF8               	addwfc	atoi@s+1,f
 14667  2A05  29DA               	goto	l7859
 14668  2A06                     l7873:	
 14669  2A06  3001               	movlw	1
 14670  2A07  00A4               	movwf	atoi@neg
 14671  2A08  3000               	movlw	0
 14672  2A09  00A5               	movwf	atoi@neg+1
 14673  2A0A  2A3E               	goto	l1427
 14674  2A0B                     l7875:	
 14675  2A0B  0877               	movf	atoi@s,w
 14676  2A0C  0084               	movwf	4
 14677  2A0D  0878               	movf	atoi@s+1,w
 14678  2A0E  0085               	movwf	5
 14679  2A0F  0800               	movf	0,w	;code access
 14680  2A10  00A0               	movwf	??_atoi
 14681  2A11  01A1               	clrf	??_atoi+1
 14682                           
 14683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14684                           ; Switch size 1, requested type "simple"
 14685                           ; Number of cases is 1, Range of values is 0 to 0
 14686                           ; switch strategies available:
 14687                           ; Name         Instructions Cycles
 14688                           ; simple_byte            4     3 (average)
 14689                           ; direct_byte            8     6 (fixed)
 14690                           ; jumptable            260     6 (fixed)
 14691                           ;	Chosen strategy is simple_byte
 14692  2A12  0821               	movf	??_atoi+1,w
 14693  2A13  3A00               	xorlw	0	; case 0
 14694  2A14  1903               	skipnz
 14695  2A15  2A17               	goto	l8875
 14696  2A16  2A42               	goto	l7881
 14697  2A17                     l8875:	
 14698                           
 14699                           ; Switch size 1, requested type "simple"
 14700                           ; Number of cases is 2, Range of values is 43 to 45
 14701                           ; switch strategies available:
 14702                           ; Name         Instructions Cycles
 14703                           ; simple_byte            7     4 (average)
 14704                           ; direct_byte           15     9 (fixed)
 14705                           ; jumptable            263     9 (fixed)
 14706                           ;	Chosen strategy is simple_byte
 14707  2A17  0820               	movf	??_atoi,w
 14708  2A18  3A2B               	xorlw	43	; case 43
 14709  2A19  1903               	skipnz
 14710  2A1A  2A3E               	goto	l1427
 14711  2A1B  3A06               	xorlw	6	; case 45
 14712  2A1C  1903               	skipnz
 14713  2A1D  2A06               	goto	l7873
 14714  2A1E  2A42               	goto	l7881
 14715  2A1F                     l7877:	
 14716  2A1F  0877               	movf	atoi@s,w
 14717  2A20  0084               	movwf	4
 14718  2A21  0878               	movf	atoi@s+1,w
 14719  2A22  0085               	movwf	5
 14720  2A23  0800               	movf	0,w	;code access
 14721  2A24  00A0               	movwf	??_atoi
 14722  2A25  082C               	movf	atoi@n+1,w
 14723  2A26  00F2               	movwf	___wmul@multiplier+1
 14724  2A27  082B               	movf	atoi@n,w
 14725  2A28  00F1               	movwf	___wmul@multiplier
 14726  2A29  300A               	movlw	10
 14727  2A2A  00F3               	movwf	___wmul@multiplicand
 14728  2A2B  3000               	movlw	0
 14729  2A2C  00F4               	movwf	___wmul@multiplicand+1
 14730  2A2D  31BE  2610  31A9   	fcall	___wmul
 14731  2A30  0872               	movf	?___wmul+1,w
 14732  2A31  0020               	movlb	0	; select bank0
 14733  2A32  00A2               	movwf	??_atoi+2
 14734  2A33  0820               	movf	??_atoi,w
 14735  2A34  0271               	subwf	?___wmul,w
 14736  2A35  00A1               	movwf	??_atoi+1
 14737  2A36  1C03               	skipc
 14738  2A37  03A2               	decf	??_atoi+2,f
 14739  2A38  0821               	movf	??_atoi+1,w
 14740  2A39  3E30               	addlw	48
 14741  2A3A  00AB               	movwf	atoi@n
 14742  2A3B  3000               	movlw	0
 14743  2A3C  3D22               	addwfc	??_atoi+2,w
 14744  2A3D  00AC               	movwf	atoi@n+1
 14745  2A3E                     l1427:	
 14746  2A3E  3001               	movlw	1
 14747  2A3F  07F7               	addwf	atoi@s,f
 14748  2A40  3000               	movlw	0
 14749  2A41  3DF8               	addwfc	atoi@s+1,f
 14750  2A42                     l7881:	
 14751  2A42  0877               	movf	atoi@s,w
 14752  2A43  0084               	movwf	4
 14753  2A44  0878               	movf	atoi@s+1,w
 14754  2A45  0085               	movwf	5
 14755  2A46  0800               	movf	0,w	;code access
 14756  2A47  3ED0               	addlw	208
 14757  2A48  00A0               	movwf	??_atoi
 14758  2A49  30FF               	movlw	255
 14759  2A4A  1803               	skipnc
 14760  2A4B  3000               	movlw	0
 14761  2A4C  00A1               	movwf	??_atoi+1
 14762  2A4D  3000               	movlw	0
 14763  2A4E  0221               	subwf	??_atoi+1,w
 14764  2A4F  300A               	movlw	10
 14765  2A50  1903               	skipnz
 14766  2A51  0220               	subwf	??_atoi,w
 14767  2A52  1803               	btfsc	3,0
 14768  2A53  2A56               	goto	u11010
 14769  2A54  3001               	movlw	1
 14770  2A55  2A57               	goto	u11020
 14771  2A56                     u11010:	
 14772  2A56  3000               	movlw	0
 14773  2A57                     u11020:	
 14774  2A57  00A2               	movwf	??_atoi+2
 14775  2A58  01A3               	clrf	??_atoi+3
 14776  2A59  0822               	movf	??_atoi+2,w
 14777  2A5A  00A8               	movwf	_atoi$1767
 14778  2A5B  0823               	movf	??_atoi+3,w
 14779  2A5C  00A9               	movwf	_atoi$1767+1
 14780  2A5D  0828               	movf	_atoi$1767,w
 14781  2A5E  0429               	iorwf	_atoi$1767+1,w
 14782  2A5F  1D03               	btfss	3,2
 14783  2A60  2A1F               	goto	l7877
 14784  2A61  0824               	movf	atoi@neg,w
 14785  2A62  0425               	iorwf	atoi@neg+1,w
 14786  2A63  1D03               	btfss	3,2
 14787  2A64  2A71               	goto	l7891
 14788  2A65  092B               	comf	atoi@n,w
 14789  2A66  00A0               	movwf	??_atoi
 14790  2A67  092C               	comf	atoi@n+1,w
 14791  2A68  00A1               	movwf	??_atoi+1
 14792  2A69  0AA0               	incf	??_atoi,f
 14793  2A6A  1903               	skipnz
 14794  2A6B  0AA1               	incf	??_atoi+1,f
 14795  2A6C  0820               	movf	??_atoi,w
 14796  2A6D  00F7               	movwf	?_atoi
 14797  2A6E  0821               	movf	??_atoi+1,w
 14798  2A6F  00F8               	movwf	?_atoi+1
 14799  2A70  0008               	return
 14800  2A71                     l7891:	
 14801  2A71  082C               	movf	atoi@n+1,w
 14802  2A72  00F8               	movwf	?_atoi+1
 14803  2A73  082B               	movf	atoi@n,w
 14804  2A74  00F7               	movwf	?_atoi
 14805  2A75  0008               	return
 14806  2A76                     __end_of_atoi:	
 14807                           
 14808                           	psect	text42
 14809  3E2B                     __ptext42:	
 14810 ;; *************** function _isspace *****************
 14811 ;; Defined at:
 14812 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 14813 ;; Parameters:    Size  Location     Type
 14814 ;;  c               2    1[COMMON] int 
 14815 ;; Auto vars:     Size  Location     Type
 14816 ;;		None
 14817 ;; Return value:  Size  Location     Type
 14818 ;;                  2    1[COMMON] int 
 14819 ;; Registers used:
 14820 ;;		wreg, status,2, status,0
 14821 ;; Tracked objects:
 14822 ;;		On entry : 0/0
 14823 ;;		On exit  : 0/0
 14824 ;;		Unchanged: 0/0
 14825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14829 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14830 ;;Total ram usage:        5 bytes
 14831 ;; Hardware stack levels used:    1
 14832 ;; Hardware stack levels required when called:    1
 14833 ;; This function calls:
 14834 ;;		Nothing
 14835 ;; This function is called by:
 14836 ;;		_atoi
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840                           
 14841                           ;psect for function _isspace
 14842  3E2B                     _isspace:	
 14843                           
 14844                           ;incstack = 0
 14845                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14846  3E2B  01F5               	clrf	_isspace$1805
 14847  3E2C  0AF5               	incf	_isspace$1805,f
 14848  3E2D  3020               	movlw	32
 14849  3E2E  0671               	xorwf	isspace@c,w
 14850  3E2F  0472               	iorwf	isspace@c+1,w
 14851  3E30  1903               	btfsc	3,2
 14852  3E31  2E3F               	goto	l5383
 14853  3E32  0871               	movf	isspace@c,w
 14854  3E33  3EF7               	addlw	247
 14855  3E34  00F3               	movwf	??_isspace
 14856  3E35  30FF               	movlw	255
 14857  3E36  3D72               	addwfc	isspace@c+1,w
 14858  3E37  00F4               	movwf	??_isspace+1
 14859  3E38  3000               	movlw	0
 14860  3E39  0274               	subwf	??_isspace+1,w
 14861  3E3A  3005               	movlw	5
 14862  3E3B  1903               	skipnz
 14863  3E3C  0273               	subwf	??_isspace,w
 14864  3E3D  1803               	btfsc	3,0
 14865  3E3E  01F5               	clrf	_isspace$1805
 14866  3E3F                     l5383:	
 14867  3E3F  0875               	movf	_isspace$1805,w
 14868  3E40  00F3               	movwf	??_isspace
 14869  3E41  01F4               	clrf	??_isspace+1
 14870  3E42  0873               	movf	??_isspace,w
 14871  3E43  00F1               	movwf	?_isspace
 14872  3E44  0874               	movf	??_isspace+1,w
 14873  3E45  00F2               	movwf	?_isspace+1
 14874  3E46  0008               	return
 14875  3E47                     __end_of_isspace:	
 14876                           
 14877                           	psect	text43
 14878  3D82                     __ptext43:	
 14879 ;; *************** function _isdigit *****************
 14880 ;; Defined at:
 14881 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 14882 ;; Parameters:    Size  Location     Type
 14883 ;;  c               2    1[COMMON] int 
 14884 ;; Auto vars:     Size  Location     Type
 14885 ;;		None
 14886 ;; Return value:  Size  Location     Type
 14887 ;;                  2    1[COMMON] int 
 14888 ;; Registers used:
 14889 ;;		wreg, status,2, status,0
 14890 ;; Tracked objects:
 14891 ;;		On entry : 0/0
 14892 ;;		On exit  : 0/0
 14893 ;;		Unchanged: 0/0
 14894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14897 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14898 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14899 ;;Total ram usage:        6 bytes
 14900 ;; Hardware stack levels used:    1
 14901 ;; Hardware stack levels required when called:    1
 14902 ;; This function calls:
 14903 ;;		Nothing
 14904 ;; This function is called by:
 14905 ;;		_vfpfcnvrt
 14906 ;;		_atoi
 14907 ;; This function uses a non-reentrant model
 14908 ;;
 14909                           
 14910                           
 14911                           ;psect for function _isdigit
 14912  3D82                     _isdigit:	
 14913                           
 14914                           ;incstack = 0
 14915                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14916  3D82  0871               	movf	isdigit@c,w
 14917  3D83  3ED0               	addlw	208
 14918  3D84  00F3               	movwf	??_isdigit
 14919  3D85  30FF               	movlw	255
 14920  3D86  3D72               	addwfc	isdigit@c+1,w
 14921  3D87  00F4               	movwf	??_isdigit+1
 14922  3D88  3000               	movlw	0
 14923  3D89  0274               	subwf	??_isdigit+1,w
 14924  3D8A  300A               	movlw	10
 14925  3D8B  1903               	skipnz
 14926  3D8C  0273               	subwf	??_isdigit,w
 14927  3D8D  1803               	btfsc	3,0
 14928  3D8E  2D91               	goto	u5760
 14929  3D8F  3001               	movlw	1
 14930  3D90  2D92               	goto	u5770
 14931  3D91                     u5760:	
 14932  3D91  3000               	movlw	0
 14933  3D92                     u5770:	
 14934  3D92  00F5               	movwf	??_isdigit+2
 14935  3D93  01F6               	clrf	??_isdigit+3
 14936  3D94  0875               	movf	??_isdigit+2,w
 14937  3D95  00F1               	movwf	?_isdigit
 14938  3D96  0876               	movf	??_isdigit+3,w
 14939  3D97  00F2               	movwf	?_isdigit+1
 14940  3D98  0008               	return
 14941  3D99                     __end_of_isdigit:	
 14942                           
 14943                           	psect	text44
 14944  3DF6                     __ptext44:	
 14945 ;; *************** function _EUSART_Write_Text *****************
 14946 ;; Defined at:
 14947 ;;		line 75 in file "EUSART.c"
 14948 ;; Parameters:    Size  Location     Type
 14949 ;;  text            2    2[COMMON] PTR unsigned char 
 14950 ;;		 -> STR_26(3), STR_13(3), STR_12(38), STR_10(45), 
 14951 ;;		 -> STR_9(42), STR_5(3), STR_4(53), messageBuffer(127), 
 14952 ;;		 -> STR_2(46), STR_1(40), 
 14953 ;; Auto vars:     Size  Location     Type
 14954 ;;  i               2    5[COMMON] int 
 14955 ;; Return value:  Size  Location     Type
 14956 ;;                  1    wreg      void 
 14957 ;; Registers used:
 14958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14959 ;; Tracked objects:
 14960 ;;		On entry : 0/0
 14961 ;;		On exit  : 0/0
 14962 ;;		Unchanged: 0/0
 14963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14967 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14968 ;;Total ram usage:        5 bytes
 14969 ;; Hardware stack levels used:    1
 14970 ;; Hardware stack levels required when called:    2
 14971 ;; This function calls:
 14972 ;;		_EUSART_Write
 14973 ;; This function is called by:
 14974 ;;		_statemachine
 14975 ;;		_printcellParameters
 14976 ;;		_printotAFERegisters
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           
 14981                           ;psect for function _EUSART_Write_Text
 14982  3DF6                     _EUSART_Write_Text:	
 14983                           
 14984                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 14985                           
 14986                           ;incstack = 0
 14987                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14988  3DF6  01F5               	clrf	EUSART_Write_Text@i
 14989  3DF7  01F6               	clrf	EUSART_Write_Text@i+1
 14990  3DF8                     l6675:	
 14991  3DF8  0872               	movf	EUSART_Write_Text@text,w
 14992  3DF9  0775               	addwf	EUSART_Write_Text@i,w
 14993  3DFA  0084               	movwf	4
 14994  3DFB  0873               	movf	EUSART_Write_Text@text+1,w
 14995  3DFC  3D76               	addwfc	EUSART_Write_Text@i+1,w
 14996  3DFD  0085               	movwf	5
 14997  3DFE  0012               	moviw fsr0++
 14998  3DFF  1903               	btfsc	3,2
 14999  3E00  0008               	return
 15000                           
 15001                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 15002  3E01  0872               	movf	EUSART_Write_Text@text,w
 15003  3E02  0775               	addwf	EUSART_Write_Text@i,w
 15004  3E03  0084               	movwf	4
 15005  3E04  0873               	movf	EUSART_Write_Text@text+1,w
 15006  3E05  3D76               	addwfc	EUSART_Write_Text@i+1,w
 15007  3E06  0085               	movwf	5
 15008  3E07  0800               	movf	0,w	;code access
 15009  3E08  31A8  2000  31BD   	fcall	_EUSART_Write
 15010  3E0B  3001               	movlw	1
 15011  3E0C  07F5               	addwf	EUSART_Write_Text@i,f
 15012  3E0D  3000               	movlw	0
 15013  3E0E  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 15014  3E0F  2DF8               	goto	l6675
 15015  3E10                     __end_of_EUSART_Write_Text:	
 15016                           
 15017                           	psect	text45
 15018  2800                     __ptext45:	
 15019 ;; *************** function _EUSART_Write *****************
 15020 ;; Defined at:
 15021 ;;		line 56 in file "EUSART.c"
 15022 ;; Parameters:    Size  Location     Type
 15023 ;;  txData          1    wreg     unsigned char 
 15024 ;; Auto vars:     Size  Location     Type
 15025 ;;  txData          1    1[COMMON] unsigned char 
 15026 ;; Return value:  Size  Location     Type
 15027 ;;                  1    wreg      void 
 15028 ;; Registers used:
 15029 ;;		wreg
 15030 ;; Tracked objects:
 15031 ;;		On entry : 0/0
 15032 ;;		On exit  : 0/0
 15033 ;;		Unchanged: 0/0
 15034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15039 ;;Total ram usage:        1 bytes
 15040 ;; Hardware stack levels used:    1
 15041 ;; Hardware stack levels required when called:    1
 15042 ;; This function calls:
 15043 ;;		Nothing
 15044 ;; This function is called by:
 15045 ;;		_EUSART_Write_Text
 15046 ;; This function uses a non-reentrant model
 15047 ;;
 15048                           
 15049                           
 15050                           ;psect for function _EUSART_Write
 15051  2800                     _EUSART_Write:	
 15052                           
 15053                           ;incstack = 0
 15054                           ; Regs used in _EUSART_Write: [wreg]
 15055                           ;EUSART_Write@txData stored from wreg
 15056  2800  00F1               	movwf	EUSART_Write@txData
 15057  2801                     l248:	
 15058                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 15059                           
 15060                           
 15061                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 15062  2801  0020               	movlb	0	; select bank0
 15063  2802  1E11               	btfss	17,4	;volatile
 15064  2803  2801               	goto	l248
 15065                           
 15066                           ;EUSART.c: 62:     TX1REG = txData;
 15067  2804  0871               	movf	EUSART_Write@txData,w
 15068  2805  0023               	movlb	3	; select bank3
 15069  2806  009A               	movwf	26	;volatile
 15070  2807  0008               	return
 15071  2808                     __end_of_EUSART_Write:	
 15072                           
 15073                           	psect	text46
 15074  334A                     __ptext46:	
 15075 ;; *************** function _init_AFE *****************
 15076 ;; Defined at:
 15077 ;;		line 3 in file "BQ76920.c"
 15078 ;; Parameters:    Size  Location     Type
 15079 ;;		None
 15080 ;; Auto vars:     Size  Location     Type
 15081 ;;		None
 15082 ;; Return value:  Size  Location     Type
 15083 ;;                  1    wreg      void 
 15084 ;; Registers used:
 15085 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15086 ;; Tracked objects:
 15087 ;;		On entry : 0/0
 15088 ;;		On exit  : 0/0
 15089 ;;		Unchanged: 0/0
 15090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15095 ;;Total ram usage:        0 bytes
 15096 ;; Hardware stack levels used:    1
 15097 ;; Hardware stack levels required when called:    4
 15098 ;; This function calls:
 15099 ;;		_setCellOvervoltageProtection
 15100 ;;		_setCellUndervoltageProtection
 15101 ;;		_setOverCurrentDischargeProtection
 15102 ;;		_setShortCircuitProtection
 15103 ;;		_setShuntResistorValue
 15104 ;;		_setTemperatureLimitsint
 15105 ;; This function is called by:
 15106 ;;		_statemachine
 15107 ;; This function uses a non-reentrant model
 15108 ;;
 15109                           
 15110                           
 15111                           ;psect for function _init_AFE
 15112  334A                     _init_AFE:	
 15113                           
 15114                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 15115                           
 15116                           ;incstack = 0
 15117                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15118  334A  30EC               	movlw	236
 15119  334B  0020               	movlb	0	; select bank0
 15120  334C  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 15121  334D  30FF               	movlw	255
 15122  334E  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 15123  334F  302D               	movlw	45
 15124  3350  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 15125  3351  3000               	movlw	0
 15126  3352  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 15127  3353  3000               	movlw	0
 15128  3354  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 15129  3355  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 15130  3356  302D               	movlw	45
 15131  3357  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 15132  3358  3000               	movlw	0
 15133  3359  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 15134  335A  31B1  2130  31B3   	fcall	_setTemperatureLimitsint
 15135                           
 15136                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 15137  335D  303C               	movlw	60
 15138  335E  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 15139  335F  30A3               	movlw	163
 15140  3360  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 15141  3361  30D7               	movlw	215
 15142  3362  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 15143  3363  300A               	movlw	10
 15144  3364  00F1               	movwf	setShuntResistorValue@res_mOhm
 15145  3365  31BD  2558  31B3   	fcall	_setShuntResistorValue
 15146                           
 15147                           ;BQ76920.c: 7:     setShortCircuitProtection(2500, 200);
 15148  3368  3000               	movlw	0
 15149  3369  0020               	movlb	0	; select bank0
 15150  336A  00E9               	movwf	setShortCircuitProtection@current_mA+3
 15151  336B  3000               	movlw	0
 15152  336C  00E8               	movwf	setShortCircuitProtection@current_mA+2
 15153  336D  3009               	movlw	9
 15154  336E  00E7               	movwf	setShortCircuitProtection@current_mA+1
 15155  336F  30C4               	movlw	196
 15156  3370  00E6               	movwf	setShortCircuitProtection@current_mA
 15157  3371  30C8               	movlw	200
 15158  3372  00EA               	movwf	setShortCircuitProtection@delay_us
 15159  3373  3000               	movlw	0
 15160  3374  00EB               	movwf	setShortCircuitProtection@delay_us+1
 15161  3375  3186  26D2  31B3   	fcall	_setShortCircuitProtection
 15162                           
 15163                           ;BQ76920.c: 9:     setOverCurrentDischargeProtection(20000, 320);
 15164  3378  3000               	movlw	0
 15165  3379  0020               	movlb	0	; select bank0
 15166  337A  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 15167  337B  3000               	movlw	0
 15168  337C  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 15169  337D  304E               	movlw	78
 15170  337E  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 15171  337F  3020               	movlw	32
 15172  3380  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 15173  3381  3040               	movlw	64
 15174  3382  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 15175  3383  3001               	movlw	1
 15176  3384  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 15177  3385  31A5  25B7  31B3   	fcall	_setOverCurrentDischargeProtection
 15178                           
 15179                           ;BQ76920.c: 10:     setCellUndervoltageProtection(2900, 2);
 15180  3388  3054               	movlw	84
 15181  3389  0020               	movlb	0	; select bank0
 15182  338A  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 15183  338B  300B               	movlw	11
 15184  338C  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 15185  338D  3002               	movlw	2
 15186  338E  00B4               	movwf	setCellUndervoltageProtection@delay_s
 15187  338F  3000               	movlw	0
 15188  3390  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 15189  3391  31AE  2644  31B3   	fcall	_setCellUndervoltageProtection
 15190                           
 15191                           ;BQ76920.c: 11:     setCellOvervoltageProtection(4100,2);
 15192  3394  3004               	movlw	4
 15193  3395  0020               	movlb	0	; select bank0
 15194  3396  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 15195  3397  3010               	movlw	16
 15196  3398  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 15197  3399  3002               	movlw	2
 15198  339A  00B4               	movwf	setCellOvervoltageProtection@delay_s
 15199  339B  3000               	movlw	0
 15200  339C  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 15201  339D  31AC  2498         	fcall	_setCellOvervoltageProtection
 15202  339F  0008               	return
 15203  33A0                     __end_of_init_AFE:	
 15204                           
 15205                           	psect	text47
 15206  3130                     __ptext47:	
 15207 ;; *************** function _setTemperatureLimitsint *****************
 15208 ;; Defined at:
 15209 ;;		line 56 in file "BQ76920.c"
 15210 ;; Parameters:    Size  Location     Type
 15211 ;;  minDischarge    2    0[BANK0 ] int 
 15212 ;;  maxDischarge    2    2[BANK0 ] int 
 15213 ;;  minCharge_de    2    4[BANK0 ] int 
 15214 ;;  maxCharge_de    2    6[BANK0 ] int 
 15215 ;; Auto vars:     Size  Location     Type
 15216 ;;		None
 15217 ;; Return value:  Size  Location     Type
 15218 ;;                  1    wreg      void 
 15219 ;; Registers used:
 15220 ;;		wreg, status,2, status,0, pclath, cstack
 15221 ;; Tracked objects:
 15222 ;;		On entry : 0/0
 15223 ;;		On exit  : 0/0
 15224 ;;		Unchanged: 0/0
 15225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15226 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15229 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15230 ;;Total ram usage:        8 bytes
 15231 ;; Hardware stack levels used:    1
 15232 ;; Hardware stack levels required when called:    2
 15233 ;; This function calls:
 15234 ;;		___wmul
 15235 ;; This function is called by:
 15236 ;;		_init_AFE
 15237 ;; This function uses a non-reentrant model
 15238 ;;
 15239                           
 15240                           
 15241                           ;psect for function _setTemperatureLimitsint
 15242  3130                     _setTemperatureLimitsint:	
 15243                           
 15244                           ;BQ76920.c: 58:     minCellTempDischarge = minDischarge_degC * 10;
 15245                           
 15246                           ;incstack = 0
 15247                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 15248  3130  0020               	movlb	0	; select bank0
 15249  3131  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 15250  3132  00F2               	movwf	___wmul@multiplier+1
 15251  3133  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 15252  3134  00F1               	movwf	___wmul@multiplier
 15253  3135  300A               	movlw	10
 15254  3136  00F3               	movwf	___wmul@multiplicand
 15255  3137  3000               	movlw	0
 15256  3138  00F4               	movwf	___wmul@multiplicand+1
 15257  3139  31BE  2610  31B1   	fcall	___wmul
 15258  313C  0872               	movf	?___wmul+1,w
 15259  313D  0023               	movlb	3	; select bank3
 15260  313E  00C3               	movwf	(_minCellTempDischarge+1)^(0+384)
 15261  313F  0871               	movf	?___wmul,w
 15262  3140  00C2               	movwf	_minCellTempDischarge^(0+384)
 15263                           
 15264                           ;BQ76920.c: 59:     maxCellTempDischarge = maxDischarge_degC * 10;
 15265  3141  0020               	movlb	0	; select bank0
 15266  3142  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 15267  3143  00F2               	movwf	___wmul@multiplier+1
 15268  3144  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 15269  3145  00F1               	movwf	___wmul@multiplier
 15270  3146  300A               	movlw	10
 15271  3147  00F3               	movwf	___wmul@multiplicand
 15272  3148  3000               	movlw	0
 15273  3149  00F4               	movwf	___wmul@multiplicand+1
 15274  314A  31BE  2610  31B1   	fcall	___wmul
 15275  314D  0872               	movf	?___wmul+1,w
 15276  314E  0023               	movlb	3	; select bank3
 15277  314F  00BF               	movwf	(_maxCellTempDischarge+1)^(0+384)
 15278  3150  0871               	movf	?___wmul,w
 15279  3151  00BE               	movwf	_maxCellTempDischarge^(0+384)
 15280                           
 15281                           ;BQ76920.c: 60:     minCellTempCharge = minCharge_degC * 10;
 15282  3152  0020               	movlb	0	; select bank0
 15283  3153  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 15284  3154  00F2               	movwf	___wmul@multiplier+1
 15285  3155  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 15286  3156  00F1               	movwf	___wmul@multiplier
 15287  3157  300A               	movlw	10
 15288  3158  00F3               	movwf	___wmul@multiplicand
 15289  3159  3000               	movlw	0
 15290  315A  00F4               	movwf	___wmul@multiplicand+1
 15291  315B  31BE  2610  31B1   	fcall	___wmul
 15292  315E  0872               	movf	?___wmul+1,w
 15293  315F  0023               	movlb	3	; select bank3
 15294  3160  00C5               	movwf	(_minCellTempCharge+1)^(0+384)
 15295  3161  0871               	movf	?___wmul,w
 15296  3162  00C4               	movwf	_minCellTempCharge^(0+384)
 15297                           
 15298                           ;BQ76920.c: 61:     maxCellTempCharge = maxCharge_degC * 10;
 15299  3163  0020               	movlb	0	; select bank0
 15300  3164  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 15301  3165  00F2               	movwf	___wmul@multiplier+1
 15302  3166  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 15303  3167  00F1               	movwf	___wmul@multiplier
 15304  3168  300A               	movlw	10
 15305  3169  00F3               	movwf	___wmul@multiplicand
 15306  316A  3000               	movlw	0
 15307  316B  00F4               	movwf	___wmul@multiplicand+1
 15308  316C  31BE  2610         	fcall	___wmul
 15309  316E  0872               	movf	?___wmul+1,w
 15310  316F  0023               	movlb	3	; select bank3
 15311  3170  00C1               	movwf	(_maxCellTempCharge+1)^(0+384)
 15312  3171  0871               	movf	?___wmul,w
 15313  3172  00C0               	movwf	_maxCellTempCharge^(0+384)
 15314  3173  0008               	return
 15315  3174                     __end_of_setTemperatureLimitsint:	
 15316                           
 15317                           	psect	text48
 15318  3E10                     __ptext48:	
 15319 ;; *************** function ___wmul *****************
 15320 ;; Defined at:
 15321 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;  multiplier      2    1[COMMON] unsigned int 
 15324 ;;  multiplicand    2    3[COMMON] unsigned int 
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;  product         2    5[COMMON] unsigned int 
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  2    1[COMMON] unsigned int 
 15329 ;; Registers used:
 15330 ;;		wreg, status,2, status,0
 15331 ;; Tracked objects:
 15332 ;;		On entry : 0/0
 15333 ;;		On exit  : 0/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15336 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15339 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15340 ;;Total ram usage:        6 bytes
 15341 ;; Hardware stack levels used:    1
 15342 ;; Hardware stack levels required when called:    1
 15343 ;; This function calls:
 15344 ;;		Nothing
 15345 ;; This function is called by:
 15346 ;;		_setTemperatureLimitsint
 15347 ;;		_atoi
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           
 15352                           ;psect for function ___wmul
 15353  3E10                     ___wmul:	
 15354                           
 15355                           ;incstack = 0
 15356                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15357  3E10  01F5               	clrf	___wmul@product
 15358  3E11  01F6               	clrf	___wmul@product+1
 15359  3E12                     l4813:	
 15360  3E12  1C71               	btfss	___wmul@multiplier,0
 15361  3E13  2E18               	goto	l941
 15362  3E14  0873               	movf	___wmul@multiplicand,w
 15363  3E15  07F5               	addwf	___wmul@product,f
 15364  3E16  0874               	movf	___wmul@multiplicand+1,w
 15365  3E17  3DF6               	addwfc	___wmul@product+1,f
 15366  3E18                     l941:	
 15367  3E18  3001               	movlw	1
 15368  3E19                     u5795:	
 15369  3E19  35F3               	lslf	___wmul@multiplicand,f
 15370  3E1A  0DF4               	rlf	___wmul@multiplicand+1,f
 15371  3E1B  0B89               	decfsz	9,f
 15372  3E1C  2E19               	goto	u5795
 15373  3E1D  3001               	movlw	1
 15374  3E1E                     u5805:	
 15375  3E1E  36F2               	lsrf	___wmul@multiplier+1,f
 15376  3E1F  0CF1               	rrf	___wmul@multiplier,f
 15377  3E20  0B89               	decfsz	9,f
 15378  3E21  2E1E               	goto	u5805
 15379  3E22  0871               	movf	___wmul@multiplier,w
 15380  3E23  0472               	iorwf	___wmul@multiplier+1,w
 15381  3E24  1D03               	btfss	3,2
 15382  3E25  2E12               	goto	l4813
 15383  3E26  0876               	movf	___wmul@product+1,w
 15384  3E27  00F2               	movwf	?___wmul+1
 15385  3E28  0875               	movf	___wmul@product,w
 15386  3E29  00F1               	movwf	?___wmul
 15387  3E2A  0008               	return
 15388  3E2B                     __end_of___wmul:	
 15389                           
 15390                           	psect	text49
 15391  3D58                     __ptext49:	
 15392 ;; *************** function _setShuntResistorValue *****************
 15393 ;; Defined at:
 15394 ;;		line 68 in file "BQ76920.c"
 15395 ;; Parameters:    Size  Location     Type
 15396 ;;  res_mOhm        4    1[COMMON] float 
 15397 ;; Auto vars:     Size  Location     Type
 15398 ;;		None
 15399 ;; Return value:  Size  Location     Type
 15400 ;;                  1    wreg      void 
 15401 ;; Registers used:
 15402 ;;		wreg
 15403 ;; Tracked objects:
 15404 ;;		On entry : 0/0
 15405 ;;		On exit  : 0/0
 15406 ;;		Unchanged: 0/0
 15407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15412 ;;Total ram usage:        4 bytes
 15413 ;; Hardware stack levels used:    1
 15414 ;; Hardware stack levels required when called:    1
 15415 ;; This function calls:
 15416 ;;		Nothing
 15417 ;; This function is called by:
 15418 ;;		_init_AFE
 15419 ;; This function uses a non-reentrant model
 15420 ;;
 15421                           
 15422                           
 15423                           ;psect for function _setShuntResistorValue
 15424  3D58                     _setShuntResistorValue:	
 15425                           
 15426                           ;BQ76920.c: 69:     shuntResistorValue_mOhm = res_mOhm;
 15427                           
 15428                           ;incstack = 0
 15429                           ; Regs used in _setShuntResistorValue: [wreg]
 15430  3D58  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 15431  3D59  0023               	movlb	3	; select bank3
 15432  3D5A  00AD               	movwf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384)
 15433  3D5B  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 15434  3D5C  00AC               	movwf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384)
 15435  3D5D  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 15436  3D5E  00AB               	movwf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384)
 15437  3D5F  0871               	movf	setShuntResistorValue@res_mOhm,w
 15438  3D60  00AA               	movwf	BQ76920@shuntResistorValue_mOhm^(0+384)
 15439  3D61  0008               	return
 15440  3D62                     __end_of_setShuntResistorValue:	
 15441                           
 15442                           	psect	text50
 15443  06D2                     __ptext50:	
 15444 ;; *************** function _setShortCircuitProtection *****************
 15445 ;; Defined at:
 15446 ;;		line 76 in file "BQ76920.c"
 15447 ;; Parameters:    Size  Location     Type
 15448 ;;  current_mA      4   70[BANK0 ] long 
 15449 ;;  delay_us        2   74[BANK0 ] int 
 15450 ;; Auto vars:     Size  Location     Type
 15451 ;;  i               2   10[BANK1 ] int 
 15452 ;;  i               2    8[BANK1 ] int 
 15453 ;;  scaler          4    0[BANK1 ] float 
 15454 ;; Return value:  Size  Location     Type
 15455 ;;                  1    wreg      void 
 15456 ;; Registers used:
 15457 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15458 ;; Tracked objects:
 15459 ;;		On entry : 0/0
 15460 ;;		On exit  : 0/0
 15461 ;;		Unchanged: 0/0
 15462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15463 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15464 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15465 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15466 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15467 ;;Total ram usage:       21 bytes
 15468 ;; Hardware stack levels used:    1
 15469 ;; Hardware stack levels required when called:    3
 15470 ;; This function calls:
 15471 ;;		_I2C_writeRegister
 15472 ;;		___fldiv
 15473 ;;		___flge
 15474 ;;		___flmul
 15475 ;;		___xxtofl
 15476 ;; This function is called by:
 15477 ;;		_init_AFE
 15478 ;; This function uses a non-reentrant model
 15479 ;;
 15480                           
 15481                           
 15482                           ;psect for function _setShortCircuitProtection
 15483  06D2                     _setShortCircuitProtection:	
 15484                           
 15485                           ;BQ76920.c: 81:     float scaler = 1000.0;
 15486                           
 15487                           ;incstack = 0
 15488                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15489  06D2  3044               	movlw	68
 15490  06D3  0021               	movlb	1	; select bank1
 15491  06D4  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 15492  06D5  307A               	movlw	122
 15493  06D6  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 15494  06D7  3000               	movlw	0
 15495  06D8  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 15496  06D9  3000               	movlw	0
 15497  06DA  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 15498                           
 15499                           ;BQ76920.c: 82:     protect1.bits.SCD_THRESH = 0;
 15500  06DB  30F8               	movlw	-8
 15501  06DC  0023               	movlb	3	; select bank3
 15502  06DD  05CA               	andwf	BQ76920@protect1^(0+384),f
 15503                           
 15504                           ;BQ76920.c: 83:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15505  06DE  0021               	movlb	1	; select bank1
 15506  06DF  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 15507  06E0  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 15508  06E1                     l6707:	
 15509                           
 15510                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15511  06E1  0023               	movlb	3	; select bank3
 15512  06E2  082D               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15513  06E3  0020               	movlb	0	; select bank0
 15514  06E4  00A9               	movwf	___flmul@b+3
 15515  06E5  0023               	movlb	3	; select bank3
 15516  06E6  082C               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15517  06E7  0020               	movlb	0	; select bank0
 15518  06E8  00A8               	movwf	___flmul@b+2
 15519  06E9  0023               	movlb	3	; select bank3
 15520  06EA  082B               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15521  06EB  0020               	movlb	0	; select bank0
 15522  06EC  00A7               	movwf	___flmul@b+1
 15523  06ED  0023               	movlb	3	; select bank3
 15524  06EE  082A               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15525  06EF  0020               	movlb	0	; select bank0
 15526  06F0  00A6               	movwf	___flmul@b
 15527  06F1  0869               	movf	setShortCircuitProtection@current_mA+3,w
 15528  06F2  00F4               	movwf	___xxtofl@val+3
 15529  06F3  0868               	movf	setShortCircuitProtection@current_mA+2,w
 15530  06F4  00F3               	movwf	___xxtofl@val+2
 15531  06F5  0867               	movf	setShortCircuitProtection@current_mA+1,w
 15532  06F6  00F2               	movwf	___xxtofl@val+1
 15533  06F7  0866               	movf	setShortCircuitProtection@current_mA,w
 15534  06F8  00F1               	movwf	___xxtofl@val
 15535  06F9  3001               	movlw	1
 15536  06FA  31A9  213F  3186   	fcall	___xxtofl
 15537  06FD  0874               	movf	?___xxtofl+3,w
 15538  06FE  0020               	movlb	0	; select bank0
 15539  06FF  00AD               	movwf	___flmul@a+3
 15540  0700  0873               	movf	?___xxtofl+2,w
 15541  0701  00AC               	movwf	___flmul@a+2
 15542  0702  0872               	movf	?___xxtofl+1,w
 15543  0703  00AB               	movwf	___flmul@a+1
 15544  0704  0871               	movf	?___xxtofl,w
 15545  0705  00AA               	movwf	___flmul@a
 15546  0706  3190  20D5  3186   	fcall	___flmul
 15547  0709  0020               	movlb	0	; select bank0
 15548  070A  0829               	movf	?___flmul+3,w
 15549  070B  0021               	movlb	1	; select bank1
 15550  070C  00A7               	movwf	(_setShortCircuitProtection$2137+3)^(0+128)
 15551  070D  0020               	movlb	0	; select bank0
 15552  070E  0828               	movf	?___flmul+2,w
 15553  070F  0021               	movlb	1	; select bank1
 15554  0710  00A6               	movwf	(_setShortCircuitProtection$2137+2)^(0+128)
 15555  0711  0020               	movlb	0	; select bank0
 15556  0712  0827               	movf	?___flmul+1,w
 15557  0713  0021               	movlb	1	; select bank1
 15558  0714  00A5               	movwf	(_setShortCircuitProtection$2137+1)^(0+128)
 15559  0715  0020               	movlb	0	; select bank0
 15560  0716  0826               	movf	?___flmul,w
 15561  0717  0021               	movlb	1	; select bank1
 15562  0718  00A4               	movwf	_setShortCircuitProtection$2137^(0+128)
 15563                           
 15564                           ;BQ76920.c: 84:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 15565  0719  3044               	movlw	68
 15566  071A  0020               	movlb	0	; select bank0
 15567  071B  00C3               	movwf	___fldiv@a+3
 15568  071C  307A               	movlw	122
 15569  071D  00C2               	movwf	___fldiv@a+2
 15570  071E  3000               	movlw	0
 15571  071F  00C1               	movwf	___fldiv@a+1
 15572  0720  3000               	movlw	0
 15573  0721  00C0               	movwf	___fldiv@a
 15574  0722  0021               	movlb	1	; select bank1
 15575  0723  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 15576  0724  0020               	movlb	0	; select bank0
 15577  0725  00A9               	movwf	___flmul@b+3
 15578  0726  0021               	movlb	1	; select bank1
 15579  0727  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 15580  0728  0020               	movlb	0	; select bank0
 15581  0729  00A8               	movwf	___flmul@b+2
 15582  072A  0021               	movlb	1	; select bank1
 15583  072B  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 15584  072C  0020               	movlb	0	; select bank0
 15585  072D  00A7               	movwf	___flmul@b+1
 15586  072E  0021               	movlb	1	; select bank1
 15587  072F  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 15588  0730  0020               	movlb	0	; select bank0
 15589  0731  00A6               	movwf	___flmul@b
 15590  0732  0021               	movlb	1	; select bank1
 15591  0733  0827               	movf	(_setShortCircuitProtection$2137+3)^(0+128),w
 15592  0734  0020               	movlb	0	; select bank0
 15593  0735  00AD               	movwf	___flmul@a+3
 15594  0736  0021               	movlb	1	; select bank1
 15595  0737  0826               	movf	(_setShortCircuitProtection$2137+2)^(0+128),w
 15596  0738  0020               	movlb	0	; select bank0
 15597  0739  00AC               	movwf	___flmul@a+2
 15598  073A  0021               	movlb	1	; select bank1
 15599  073B  0825               	movf	(_setShortCircuitProtection$2137+1)^(0+128),w
 15600  073C  0020               	movlb	0	; select bank0
 15601  073D  00AB               	movwf	___flmul@a+1
 15602  073E  0021               	movlb	1	; select bank1
 15603  073F  0824               	movf	_setShortCircuitProtection$2137^(0+128),w
 15604  0740  0020               	movlb	0	; select bank0
 15605  0741  00AA               	movwf	___flmul@a
 15606  0742  3190  20D5  3186   	fcall	___flmul
 15607  0745  0020               	movlb	0	; select bank0
 15608  0746  0829               	movf	?___flmul+3,w
 15609  0747  00C7               	movwf	___fldiv@b+3
 15610  0748  0828               	movf	?___flmul+2,w
 15611  0749  00C6               	movwf	___fldiv@b+2
 15612  074A  0827               	movf	?___flmul+1,w
 15613  074B  00C5               	movwf	___fldiv@b+1
 15614  074C  0826               	movf	?___flmul,w
 15615  074D  00C4               	movwf	___fldiv@b
 15616  074E  319A  22B3  3186   	fcall	___fldiv
 15617  0751  0020               	movlb	0	; select bank0
 15618  0752  0843               	movf	?___fldiv+3,w
 15619  0753  00DD               	movwf	___flge@ff1+3
 15620  0754  0842               	movf	?___fldiv+2,w
 15621  0755  00DC               	movwf	___flge@ff1+2
 15622  0756  0841               	movf	?___fldiv+1,w
 15623  0757  00DB               	movwf	___flge@ff1+1
 15624  0758  0840               	movf	?___fldiv,w
 15625  0759  00DA               	movwf	___flge@ff1
 15626  075A  0021               	movlb	1	; select bank1
 15627  075B  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 15628  075C  0085               	movwf	5
 15629  075D  0828               	movf	setShortCircuitProtection@i^(0+128),w
 15630  075E  0084               	movwf	4
 15631  075F  3584               	lslf	4,f
 15632  0760  0D85               	rlf	5,f
 15633  0761  301C               	movlw	low (_SCD_threshold_setting| (0+32768))
 15634  0762  0784               	addwf	4,f
 15635  0763  30BB               	movlw	high (_SCD_threshold_setting| (0+32768))
 15636  0764  3D85               	addwfc	5,f
 15637  0765  3F00               	moviw [0]fsr0
 15638  0766  0020               	movlb	0	; select bank0
 15639  0767  00EC               	movwf	??_setShortCircuitProtection
 15640  0768  3F01               	moviw [1]fsr0
 15641  0769  00ED               	movwf	??_setShortCircuitProtection+1
 15642  076A  086C               	movf	??_setShortCircuitProtection,w
 15643  076B  00F1               	movwf	___xxtofl@val
 15644  076C  086D               	movf	??_setShortCircuitProtection+1,w
 15645  076D  00F2               	movwf	___xxtofl@val+1
 15646  076E  0D89               	rlf	9,f
 15647  076F  3B89               	subwfb	9,f
 15648  0770  0989               	comf	9,f
 15649  0771  00F3               	movwf	___xxtofl@val+2
 15650  0772  00F4               	movwf	___xxtofl@val+3
 15651  0773  3001               	movlw	1
 15652  0774  31A9  213F  3186   	fcall	___xxtofl
 15653  0777  0874               	movf	?___xxtofl+3,w
 15654  0778  0020               	movlb	0	; select bank0
 15655  0779  00E1               	movwf	___flge@ff2+3
 15656  077A  0873               	movf	?___xxtofl+2,w
 15657  077B  00E0               	movwf	___flge@ff2+2
 15658  077C  0872               	movf	?___xxtofl+1,w
 15659  077D  00DF               	movwf	___flge@ff2+1
 15660  077E  0871               	movf	?___xxtofl,w
 15661  077F  00DE               	movwf	___flge@ff2
 15662  0780  31B6  2602  3186   	fcall	___flge
 15663  0783  1C03               	btfss	3,0
 15664  0784  2F8D               	goto	l6713
 15665                           
 15666                           ;BQ76920.c: 85:             protect1.bits.SCD_THRESH = i;
 15667  0785  0023               	movlb	3	; select bank3
 15668  0786  084A               	movf	BQ76920@protect1^(0+384),w
 15669  0787  0021               	movlb	1	; select bank1
 15670  0788  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15671  0789  39F8               	andlw	-8
 15672  078A  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 15673  078B  0023               	movlb	3	; select bank3
 15674  078C  00CA               	movwf	BQ76920@protect1^(0+384)
 15675  078D                     l6713:	
 15676                           
 15677                           ;BQ76920.c: 87:     }
 15678  078D  3001               	movlw	1
 15679  078E  0021               	movlb	1	; select bank1
 15680  078F  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 15681  0790  3000               	movlw	0
 15682  0791  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 15683  0792  3000               	movlw	0
 15684  0793  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 15685  0794  3007               	movlw	7
 15686  0795  1903               	skipnz
 15687  0796  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 15688  0797  1C03               	skipc
 15689  0798  2EE1               	goto	l6707
 15690                           
 15691                           ;BQ76920.c: 89:     protect1.bits.SCD_DELAY = 0;
 15692  0799  30E7               	movlw	-25
 15693  079A  0023               	movlb	3	; select bank3
 15694  079B  05CA               	andwf	BQ76920@protect1^(0+384),f
 15695                           
 15696                           ;BQ76920.c: 90:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 15697  079C  0021               	movlb	1	; select bank1
 15698  079D  01AA               	clrf	setShortCircuitProtection@i_969^(0+128)
 15699  079E  01AB               	clrf	(setShortCircuitProtection@i_969+1)^(0+128)
 15700  079F                     l6725:	
 15701                           
 15702                           ;BQ76920.c: 91:         if (delay_us >= SCD_delay_setting[i]) {
 15703  079F  082B               	movf	(setShortCircuitProtection@i_969+1)^(0+128),w
 15704  07A0  0085               	movwf	5
 15705  07A1  082A               	movf	setShortCircuitProtection@i_969^(0+128),w
 15706  07A2  0084               	movwf	4
 15707  07A3  3584               	lslf	4,f
 15708  07A4  0D85               	rlf	5,f
 15709  07A5  303C               	movlw	low (_SCD_delay_setting| (0+32768))
 15710  07A6  0784               	addwf	4,f
 15711  07A7  30BB               	movlw	high (_SCD_delay_setting| (0+32768))
 15712  07A8  3D85               	addwfc	5,f
 15713  07A9  3F00               	moviw [0]fsr0
 15714  07AA  0020               	movlb	0	; select bank0
 15715  07AB  00EC               	movwf	??_setShortCircuitProtection
 15716  07AC  3F01               	moviw [1]fsr0
 15717  07AD  00ED               	movwf	??_setShortCircuitProtection+1
 15718  07AE  086B               	movf	setShortCircuitProtection@delay_us+1,w
 15719  07AF  3A80               	xorlw	128
 15720  07B0  00EE               	movwf	??_setShortCircuitProtection+2
 15721  07B1  086D               	movf	??_setShortCircuitProtection+1,w
 15722  07B2  3A80               	xorlw	128
 15723  07B3  026E               	subwf	??_setShortCircuitProtection+2,w
 15724  07B4  1D03               	skipz
 15725  07B5  2FB8               	goto	u9345
 15726  07B6  086C               	movf	??_setShortCircuitProtection,w
 15727  07B7  026A               	subwf	setShortCircuitProtection@delay_us,w
 15728  07B8                     u9345:	
 15729  07B8  1C03               	skipc
 15730  07B9  2FC9               	goto	l6729
 15731                           
 15732                           ;BQ76920.c: 92:             protect1.bits.SCD_DELAY = i;
 15733  07BA  0021               	movlb	1	; select bank1
 15734  07BB  082A               	movf	setShortCircuitProtection@i_969^(0+128),w
 15735  07BC  0020               	movlb	0	; select bank0
 15736  07BD  00EC               	movwf	??_setShortCircuitProtection
 15737  07BE  0DEC               	rlf	??_setShortCircuitProtection,f
 15738  07BF  0DEC               	rlf	??_setShortCircuitProtection,f
 15739  07C0  0DEC               	rlf	??_setShortCircuitProtection,f
 15740  07C1  0023               	movlb	3	; select bank3
 15741  07C2  084A               	movf	BQ76920@protect1^(0+384),w
 15742  07C3  0020               	movlb	0	; select bank0
 15743  07C4  066C               	xorwf	??_setShortCircuitProtection,w
 15744  07C5  39E7               	andlw	-25
 15745  07C6  066C               	xorwf	??_setShortCircuitProtection,w
 15746  07C7  0023               	movlb	3	; select bank3
 15747  07C8  00CA               	movwf	BQ76920@protect1^(0+384)
 15748  07C9                     l6729:	
 15749                           
 15750                           ;BQ76920.c: 94:     }
 15751  07C9  3001               	movlw	1
 15752  07CA  0021               	movlb	1	; select bank1
 15753  07CB  07AA               	addwf	setShortCircuitProtection@i_969^(0+128),f
 15754  07CC  3000               	movlw	0
 15755  07CD  3DAB               	addwfc	(setShortCircuitProtection@i_969+1)^(0+128),f
 15756  07CE  3000               	movlw	0
 15757  07CF  022B               	subwf	(setShortCircuitProtection@i_969+1)^(0+128),w
 15758  07D0  3007               	movlw	7
 15759  07D1  1903               	skipnz
 15760  07D2  022A               	subwf	setShortCircuitProtection@i_969^(0+128),w
 15761  07D3  1C03               	skipc
 15762  07D4  2F9F               	goto	l6725
 15763                           
 15764                           ;BQ76920.c: 96:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 15765  07D5  3018               	movlw	24
 15766  07D6  00F5               	movwf	I2C_writeRegister@slaveAddress
 15767  07D7  3000               	movlw	0
 15768  07D8  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 15769  07D9  3006               	movlw	6
 15770  07DA  00F7               	movwf	I2C_writeRegister@regAddress
 15771  07DB  3000               	movlw	0
 15772  07DC  00F8               	movwf	I2C_writeRegister@regAddress+1
 15773  07DD  0023               	movlb	3	; select bank3
 15774  07DE  084A               	movf	BQ76920@protect1^(0+384),w
 15775  07DF  0020               	movlb	0	; select bank0
 15776  07E0  00EC               	movwf	??_setShortCircuitProtection
 15777  07E1  01ED               	clrf	??_setShortCircuitProtection+1
 15778  07E2  086C               	movf	??_setShortCircuitProtection,w
 15779  07E3  00F9               	movwf	I2C_writeRegister@data
 15780  07E4  086D               	movf	??_setShortCircuitProtection+1,w
 15781  07E5  00FA               	movwf	I2C_writeRegister@data+1
 15782  07E6  31BE  2664         	fcall	_I2C_writeRegister
 15783  07E8  0008               	return
 15784  07E9                     __end_of_setShortCircuitProtection:	
 15785                           
 15786                           	psect	text51
 15787  25B7                     __ptext51:	
 15788 ;; *************** function _setOverCurrentDischargeProtection *****************
 15789 ;; Defined at:
 15790 ;;		line 103 in file "BQ76920.c"
 15791 ;; Parameters:    Size  Location     Type
 15792 ;;  current_mA      4   70[BANK0 ] long 
 15793 ;;  delay_ms        2   74[BANK0 ] int 
 15794 ;; Auto vars:     Size  Location     Type
 15795 ;;  i               2   10[BANK1 ] int 
 15796 ;;  i               2    8[BANK1 ] int 
 15797 ;;  scaler          4    0[BANK1 ] float 
 15798 ;; Return value:  Size  Location     Type
 15799 ;;                  1    wreg      void 
 15800 ;; Registers used:
 15801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15802 ;; Tracked objects:
 15803 ;;		On entry : 0/0
 15804 ;;		On exit  : 0/0
 15805 ;;		Unchanged: 0/0
 15806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15807 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15808 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15809 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15810 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15811 ;;Total ram usage:       21 bytes
 15812 ;; Hardware stack levels used:    1
 15813 ;; Hardware stack levels required when called:    3
 15814 ;; This function calls:
 15815 ;;		_I2C_writeRegister
 15816 ;;		___fldiv
 15817 ;;		___flge
 15818 ;;		___flmul
 15819 ;;		___xxtofl
 15820 ;; This function is called by:
 15821 ;;		_init_AFE
 15822 ;; This function uses a non-reentrant model
 15823 ;;
 15824                           
 15825                           
 15826                           ;psect for function _setOverCurrentDischargeProtection
 15827  25B7                     _setOverCurrentDischargeProtection:	
 15828                           
 15829                           ;BQ76920.c: 106:     float scaler = 1000.0;
 15830                           
 15831                           ;incstack = 0
 15832                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 15833  25B7  3044               	movlw	68
 15834  25B8  0021               	movlb	1	; select bank1
 15835  25B9  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 15836  25BA  307A               	movlw	122
 15837  25BB  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 15838  25BC  3000               	movlw	0
 15839  25BD  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 15840  25BE  3000               	movlw	0
 15841  25BF  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 15842                           
 15843                           ;BQ76920.c: 107:     protect2.bits.OCD_THRESH = 0;
 15844  25C0  30F0               	movlw	-16
 15845  25C1  0023               	movlb	3	; select bank3
 15846  25C2  05C9               	andwf	BQ76920@protect2^(0+384),f
 15847                           
 15848                           ;BQ76920.c: 108:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 15849  25C3  0021               	movlb	1	; select bank1
 15850  25C4  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 15851  25C5  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 15852  25C6                     l6745:	
 15853                           
 15854                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 15855  25C6  0023               	movlb	3	; select bank3
 15856  25C7  082D               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 15857  25C8  0020               	movlb	0	; select bank0
 15858  25C9  00A9               	movwf	___flmul@b+3
 15859  25CA  0023               	movlb	3	; select bank3
 15860  25CB  082C               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 15861  25CC  0020               	movlb	0	; select bank0
 15862  25CD  00A8               	movwf	___flmul@b+2
 15863  25CE  0023               	movlb	3	; select bank3
 15864  25CF  082B               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 15865  25D0  0020               	movlb	0	; select bank0
 15866  25D1  00A7               	movwf	___flmul@b+1
 15867  25D2  0023               	movlb	3	; select bank3
 15868  25D3  082A               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 15869  25D4  0020               	movlb	0	; select bank0
 15870  25D5  00A6               	movwf	___flmul@b
 15871  25D6  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 15872  25D7  00F4               	movwf	___xxtofl@val+3
 15873  25D8  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 15874  25D9  00F3               	movwf	___xxtofl@val+2
 15875  25DA  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 15876  25DB  00F2               	movwf	___xxtofl@val+1
 15877  25DC  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 15878  25DD  00F1               	movwf	___xxtofl@val
 15879  25DE  3001               	movlw	1
 15880  25DF  31A9  213F  31A5   	fcall	___xxtofl
 15881  25E2  0874               	movf	?___xxtofl+3,w
 15882  25E3  0020               	movlb	0	; select bank0
 15883  25E4  00AD               	movwf	___flmul@a+3
 15884  25E5  0873               	movf	?___xxtofl+2,w
 15885  25E6  00AC               	movwf	___flmul@a+2
 15886  25E7  0872               	movf	?___xxtofl+1,w
 15887  25E8  00AB               	movwf	___flmul@a+1
 15888  25E9  0871               	movf	?___xxtofl,w
 15889  25EA  00AA               	movwf	___flmul@a
 15890  25EB  3190  20D5  31A5   	fcall	___flmul
 15891  25EE  0020               	movlb	0	; select bank0
 15892  25EF  0829               	movf	?___flmul+3,w
 15893  25F0  0021               	movlb	1	; select bank1
 15894  25F1  00A7               	movwf	(_setOverCurrentDischargeProtection$2138+3)^(0+128)
 15895  25F2  0020               	movlb	0	; select bank0
 15896  25F3  0828               	movf	?___flmul+2,w
 15897  25F4  0021               	movlb	1	; select bank1
 15898  25F5  00A6               	movwf	(_setOverCurrentDischargeProtection$2138+2)^(0+128)
 15899  25F6  0020               	movlb	0	; select bank0
 15900  25F7  0827               	movf	?___flmul+1,w
 15901  25F8  0021               	movlb	1	; select bank1
 15902  25F9  00A5               	movwf	(_setOverCurrentDischargeProtection$2138+1)^(0+128)
 15903  25FA  0020               	movlb	0	; select bank0
 15904  25FB  0826               	movf	?___flmul,w
 15905  25FC  0021               	movlb	1	; select bank1
 15906  25FD  00A4               	movwf	_setOverCurrentDischargeProtection$2138^(0+128)
 15907                           
 15908                           ;BQ76920.c: 109:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 15909  25FE  3044               	movlw	68
 15910  25FF  0020               	movlb	0	; select bank0
 15911  2600  00C3               	movwf	___fldiv@a+3
 15912  2601  307A               	movlw	122
 15913  2602  00C2               	movwf	___fldiv@a+2
 15914  2603  3000               	movlw	0
 15915  2604  00C1               	movwf	___fldiv@a+1
 15916  2605  3000               	movlw	0
 15917  2606  00C0               	movwf	___fldiv@a
 15918  2607  0021               	movlb	1	; select bank1
 15919  2608  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 15920  2609  0020               	movlb	0	; select bank0
 15921  260A  00A9               	movwf	___flmul@b+3
 15922  260B  0021               	movlb	1	; select bank1
 15923  260C  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 15924  260D  0020               	movlb	0	; select bank0
 15925  260E  00A8               	movwf	___flmul@b+2
 15926  260F  0021               	movlb	1	; select bank1
 15927  2610  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 15928  2611  0020               	movlb	0	; select bank0
 15929  2612  00A7               	movwf	___flmul@b+1
 15930  2613  0021               	movlb	1	; select bank1
 15931  2614  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 15932  2615  0020               	movlb	0	; select bank0
 15933  2616  00A6               	movwf	___flmul@b
 15934  2617  0021               	movlb	1	; select bank1
 15935  2618  0827               	movf	(_setOverCurrentDischargeProtection$2138+3)^(0+128),w
 15936  2619  0020               	movlb	0	; select bank0
 15937  261A  00AD               	movwf	___flmul@a+3
 15938  261B  0021               	movlb	1	; select bank1
 15939  261C  0826               	movf	(_setOverCurrentDischargeProtection$2138+2)^(0+128),w
 15940  261D  0020               	movlb	0	; select bank0
 15941  261E  00AC               	movwf	___flmul@a+2
 15942  261F  0021               	movlb	1	; select bank1
 15943  2620  0825               	movf	(_setOverCurrentDischargeProtection$2138+1)^(0+128),w
 15944  2621  0020               	movlb	0	; select bank0
 15945  2622  00AB               	movwf	___flmul@a+1
 15946  2623  0021               	movlb	1	; select bank1
 15947  2624  0824               	movf	_setOverCurrentDischargeProtection$2138^(0+128),w
 15948  2625  0020               	movlb	0	; select bank0
 15949  2626  00AA               	movwf	___flmul@a
 15950  2627  3190  20D5  31A5   	fcall	___flmul
 15951  262A  0020               	movlb	0	; select bank0
 15952  262B  0829               	movf	?___flmul+3,w
 15953  262C  00C7               	movwf	___fldiv@b+3
 15954  262D  0828               	movf	?___flmul+2,w
 15955  262E  00C6               	movwf	___fldiv@b+2
 15956  262F  0827               	movf	?___flmul+1,w
 15957  2630  00C5               	movwf	___fldiv@b+1
 15958  2631  0826               	movf	?___flmul,w
 15959  2632  00C4               	movwf	___fldiv@b
 15960  2633  319A  22B3  31A5   	fcall	___fldiv
 15961  2636  0020               	movlb	0	; select bank0
 15962  2637  0843               	movf	?___fldiv+3,w
 15963  2638  00DD               	movwf	___flge@ff1+3
 15964  2639  0842               	movf	?___fldiv+2,w
 15965  263A  00DC               	movwf	___flge@ff1+2
 15966  263B  0841               	movf	?___fldiv+1,w
 15967  263C  00DB               	movwf	___flge@ff1+1
 15968  263D  0840               	movf	?___fldiv,w
 15969  263E  00DA               	movwf	___flge@ff1
 15970  263F  0021               	movlb	1	; select bank1
 15971  2640  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 15972  2641  0085               	movwf	5
 15973  2642  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 15974  2643  0084               	movwf	4
 15975  2644  3584               	lslf	4,f
 15976  2645  0D85               	rlf	5,f
 15977  2646  30F8               	movlw	low (_OCD_threshold_setting| (0+32768))
 15978  2647  0784               	addwf	4,f
 15979  2648  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 15980  2649  3D85               	addwfc	5,f
 15981  264A  3F00               	moviw [0]fsr0
 15982  264B  0020               	movlb	0	; select bank0
 15983  264C  00EC               	movwf	??_setOverCurrentDischargeProtection
 15984  264D  3F01               	moviw [1]fsr0
 15985  264E  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 15986  264F  086C               	movf	??_setOverCurrentDischargeProtection,w
 15987  2650  00F1               	movwf	___xxtofl@val
 15988  2651  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 15989  2652  00F2               	movwf	___xxtofl@val+1
 15990  2653  0D89               	rlf	9,f
 15991  2654  3B89               	subwfb	9,f
 15992  2655  0989               	comf	9,f
 15993  2656  00F3               	movwf	___xxtofl@val+2
 15994  2657  00F4               	movwf	___xxtofl@val+3
 15995  2658  3001               	movlw	1
 15996  2659  31A9  213F  31A5   	fcall	___xxtofl
 15997  265C  0874               	movf	?___xxtofl+3,w
 15998  265D  0020               	movlb	0	; select bank0
 15999  265E  00E1               	movwf	___flge@ff2+3
 16000  265F  0873               	movf	?___xxtofl+2,w
 16001  2660  00E0               	movwf	___flge@ff2+2
 16002  2661  0872               	movf	?___xxtofl+1,w
 16003  2662  00DF               	movwf	___flge@ff2+1
 16004  2663  0871               	movf	?___xxtofl,w
 16005  2664  00DE               	movwf	___flge@ff2
 16006  2665  31B6  2602  31A5   	fcall	___flge
 16007  2668  1C03               	btfss	3,0
 16008  2669  2E72               	goto	l6751
 16009                           
 16010                           ;BQ76920.c: 110:             protect2.bits.OCD_THRESH = i;
 16011  266A  0023               	movlb	3	; select bank3
 16012  266B  0849               	movf	BQ76920@protect2^(0+384),w
 16013  266C  0021               	movlb	1	; select bank1
 16014  266D  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 16015  266E  39F0               	andlw	-16
 16016  266F  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 16017  2670  0023               	movlb	3	; select bank3
 16018  2671  00C9               	movwf	BQ76920@protect2^(0+384)
 16019  2672                     l6751:	
 16020                           
 16021                           ;BQ76920.c: 112:     }
 16022  2672  3001               	movlw	1
 16023  2673  0021               	movlb	1	; select bank1
 16024  2674  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 16025  2675  3000               	movlw	0
 16026  2676  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 16027  2677  3000               	movlw	0
 16028  2678  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 16029  2679  300F               	movlw	15
 16030  267A  1903               	skipnz
 16031  267B  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 16032  267C  1C03               	skipc
 16033  267D  2DC6               	goto	l6745
 16034                           
 16035                           ;BQ76920.c: 114:     protect2.bits.OCD_DELAY = 0;
 16036  267E  308F               	movlw	-113
 16037  267F  0023               	movlb	3	; select bank3
 16038  2680  05C9               	andwf	BQ76920@protect2^(0+384),f
 16039                           
 16040                           ;BQ76920.c: 115:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 16041  2681  0021               	movlb	1	; select bank1
 16042  2682  01AA               	clrf	setOverCurrentDischargeProtection@i_978^(0+128)
 16043  2683  01AB               	clrf	(setOverCurrentDischargeProtection@i_978+1)^(0+128)
 16044  2684                     l6763:	
 16045                           
 16046                           ;BQ76920.c: 116:         if (delay_ms >= OCD_delay_setting[i]) {
 16047  2684  082B               	movf	(setOverCurrentDischargeProtection@i_978+1)^(0+128),w
 16048  2685  0085               	movwf	5
 16049  2686  082A               	movf	setOverCurrentDischargeProtection@i_978^(0+128),w
 16050  2687  0084               	movwf	4
 16051  2688  3584               	lslf	4,f
 16052  2689  0D85               	rlf	5,f
 16053  268A  300C               	movlw	low (_OCD_delay_setting| (0+32768))
 16054  268B  0784               	addwf	4,f
 16055  268C  30BB               	movlw	high (_OCD_delay_setting| (0+32768))
 16056  268D  3D85               	addwfc	5,f
 16057  268E  3F00               	moviw [0]fsr0
 16058  268F  0020               	movlb	0	; select bank0
 16059  2690  00EC               	movwf	??_setOverCurrentDischargeProtection
 16060  2691  3F01               	moviw [1]fsr0
 16061  2692  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 16062  2693  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 16063  2694  3A80               	xorlw	128
 16064  2695  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 16065  2696  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 16066  2697  3A80               	xorlw	128
 16067  2698  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 16068  2699  1D03               	skipz
 16069  269A  2E9D               	goto	u9385
 16070  269B  086C               	movf	??_setOverCurrentDischargeProtection,w
 16071  269C  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 16072  269D                     u9385:	
 16073  269D  1C03               	skipc
 16074  269E  2EAC               	goto	l6767
 16075                           
 16076                           ;BQ76920.c: 117:             protect2.bits.OCD_DELAY = i;
 16077  269F  0021               	movlb	1	; select bank1
 16078  26A0  082A               	movf	setOverCurrentDischargeProtection@i_978^(0+128),w
 16079  26A1  0020               	movlb	0	; select bank0
 16080  26A2  00EC               	movwf	??_setOverCurrentDischargeProtection
 16081  26A3  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 16082  26A4  0023               	movlb	3	; select bank3
 16083  26A5  0849               	movf	BQ76920@protect2^(0+384),w
 16084  26A6  0020               	movlb	0	; select bank0
 16085  26A7  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 16086  26A8  398F               	andlw	-113
 16087  26A9  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 16088  26AA  0023               	movlb	3	; select bank3
 16089  26AB  00C9               	movwf	BQ76920@protect2^(0+384)
 16090  26AC                     l6767:	
 16091                           
 16092                           ;BQ76920.c: 119:     }
 16093  26AC  3001               	movlw	1
 16094  26AD  0021               	movlb	1	; select bank1
 16095  26AE  07AA               	addwf	setOverCurrentDischargeProtection@i_978^(0+128),f
 16096  26AF  3000               	movlw	0
 16097  26B0  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_978+1)^(0+128),f
 16098  26B1  3000               	movlw	0
 16099  26B2  022B               	subwf	(setOverCurrentDischargeProtection@i_978+1)^(0+128),w
 16100  26B3  3007               	movlw	7
 16101  26B4  1903               	skipnz
 16102  26B5  022A               	subwf	setOverCurrentDischargeProtection@i_978^(0+128),w
 16103  26B6  1C03               	skipc
 16104  26B7  2E84               	goto	l6763
 16105                           
 16106                           ;BQ76920.c: 121:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 16107  26B8  3018               	movlw	24
 16108  26B9  00F5               	movwf	I2C_writeRegister@slaveAddress
 16109  26BA  3000               	movlw	0
 16110  26BB  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16111  26BC  3007               	movlw	7
 16112  26BD  00F7               	movwf	I2C_writeRegister@regAddress
 16113  26BE  3000               	movlw	0
 16114  26BF  00F8               	movwf	I2C_writeRegister@regAddress+1
 16115  26C0  0023               	movlb	3	; select bank3
 16116  26C1  0849               	movf	BQ76920@protect2^(0+384),w
 16117  26C2  0020               	movlb	0	; select bank0
 16118  26C3  00EC               	movwf	??_setOverCurrentDischargeProtection
 16119  26C4  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 16120  26C5  086C               	movf	??_setOverCurrentDischargeProtection,w
 16121  26C6  00F9               	movwf	I2C_writeRegister@data
 16122  26C7  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 16123  26C8  00FA               	movwf	I2C_writeRegister@data+1
 16124  26C9  31BE  2664         	fcall	_I2C_writeRegister
 16125  26CB  0008               	return
 16126  26CC                     __end_of_setOverCurrentDischargeProtection:	
 16127                           
 16128                           	psect	text52
 16129  3602                     __ptext52:	
 16130 ;; *************** function ___flge *****************
 16131 ;; Defined at:
 16132 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 16133 ;; Parameters:    Size  Location     Type
 16134 ;;  ff1             4   58[BANK0 ] void 
 16135 ;;  ff2             4   62[BANK0 ] void 
 16136 ;; Auto vars:     Size  Location     Type
 16137 ;;		None
 16138 ;; Return value:  Size  Location     Type
 16139 ;;		None               void
 16140 ;; Registers used:
 16141 ;;		wreg, status,2, status,0
 16142 ;; Tracked objects:
 16143 ;;		On entry : 0/0
 16144 ;;		On exit  : 0/0
 16145 ;;		Unchanged: 0/0
 16146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16147 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16149 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16150 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16151 ;;Total ram usage:       12 bytes
 16152 ;; Hardware stack levels used:    1
 16153 ;; Hardware stack levels required when called:    1
 16154 ;; This function calls:
 16155 ;;		Nothing
 16156 ;; This function is called by:
 16157 ;;		_setShortCircuitProtection
 16158 ;;		_setOverCurrentDischargeProtection
 16159 ;;		_efgtoa
 16160 ;; This function uses a non-reentrant model
 16161 ;;
 16162                           
 16163                           
 16164                           ;psect for function ___flge
 16165  3602                     ___flge:	
 16166                           
 16167                           ;incstack = 0
 16168                           ; Regs used in ___flge: [wreg+status,2+status,0]
 16169  3602  3000               	movlw	0
 16170  3603  0020               	movlb	0	; select bank0
 16171  3604  055A               	andwf	___flge@ff1,w
 16172  3605  00E2               	movwf	??___flge
 16173  3606  3000               	movlw	0
 16174  3607  055B               	andwf	___flge@ff1+1,w
 16175  3608  00E3               	movwf	??___flge+1
 16176  3609  3080               	movlw	128
 16177  360A  055C               	andwf	___flge@ff1+2,w
 16178  360B  00E4               	movwf	??___flge+2
 16179  360C  307F               	movlw	127
 16180  360D  055D               	andwf	___flge@ff1+3,w
 16181  360E  00E5               	movwf	??___flge+3
 16182  360F  0865               	movf	??___flge+3,w
 16183  3610  0464               	iorwf	??___flge+2,w
 16184  3611  0463               	iorwf	??___flge+1,w
 16185  3612  0462               	iorwf	??___flge,w
 16186  3613  1D03               	skipz
 16187  3614  2E1D               	goto	l1119
 16188  3615  3000               	movlw	0
 16189  3616  00DD               	movwf	___flge@ff1+3
 16190  3617  3000               	movlw	0
 16191  3618  00DC               	movwf	___flge@ff1+2
 16192  3619  3000               	movlw	0
 16193  361A  00DB               	movwf	___flge@ff1+1
 16194  361B  3000               	movlw	0
 16195  361C  00DA               	movwf	___flge@ff1
 16196  361D                     l1119:	
 16197  361D  3000               	movlw	0
 16198  361E  055E               	andwf	___flge@ff2,w
 16199  361F  00E2               	movwf	??___flge
 16200  3620  3000               	movlw	0
 16201  3621  055F               	andwf	___flge@ff2+1,w
 16202  3622  00E3               	movwf	??___flge+1
 16203  3623  3080               	movlw	128
 16204  3624  0560               	andwf	___flge@ff2+2,w
 16205  3625  00E4               	movwf	??___flge+2
 16206  3626  307F               	movlw	127
 16207  3627  0561               	andwf	___flge@ff2+3,w
 16208  3628  00E5               	movwf	??___flge+3
 16209  3629  0865               	movf	??___flge+3,w
 16210  362A  0464               	iorwf	??___flge+2,w
 16211  362B  0463               	iorwf	??___flge+1,w
 16212  362C  0462               	iorwf	??___flge,w
 16213  362D  1D03               	skipz
 16214  362E  2E37               	goto	l4993
 16215  362F  3000               	movlw	0
 16216  3630  00E1               	movwf	___flge@ff2+3
 16217  3631  3000               	movlw	0
 16218  3632  00E0               	movwf	___flge@ff2+2
 16219  3633  3000               	movlw	0
 16220  3634  00DF               	movwf	___flge@ff2+1
 16221  3635  3000               	movlw	0
 16222  3636  00DE               	movwf	___flge@ff2
 16223  3637                     l4993:	
 16224  3637  1FDD               	btfss	___flge@ff1+3,7
 16225  3638  2E51               	goto	l4997
 16226  3639  3000               	movlw	0
 16227  363A  00E2               	movwf	??___flge
 16228  363B  3000               	movlw	0
 16229  363C  00E3               	movwf	??___flge+1
 16230  363D  3000               	movlw	0
 16231  363E  00E4               	movwf	??___flge+2
 16232  363F  3080               	movlw	128
 16233  3640  00E5               	movwf	??___flge+3
 16234  3641  085A               	movf	___flge@ff1,w
 16235  3642  02E2               	subwf	??___flge,f
 16236  3643  085B               	movf	___flge@ff1+1,w
 16237  3644  3BE3               	subwfb	??___flge+1,f
 16238  3645  085C               	movf	___flge@ff1+2,w
 16239  3646  3BE4               	subwfb	??___flge+2,f
 16240  3647  085D               	movf	___flge@ff1+3,w
 16241  3648  3BE5               	subwfb	??___flge+3,f
 16242  3649  0865               	movf	??___flge+3,w
 16243  364A  00DD               	movwf	___flge@ff1+3
 16244  364B  0864               	movf	??___flge+2,w
 16245  364C  00DC               	movwf	___flge@ff1+2
 16246  364D  0863               	movf	??___flge+1,w
 16247  364E  00DB               	movwf	___flge@ff1+1
 16248  364F  0862               	movf	??___flge,w
 16249  3650  00DA               	movwf	___flge@ff1
 16250  3651                     l4997:	
 16251  3651  1FE1               	btfss	___flge@ff2+3,7
 16252  3652  2E6B               	goto	l1122
 16253  3653  3000               	movlw	0
 16254  3654  00E2               	movwf	??___flge
 16255  3655  3000               	movlw	0
 16256  3656  00E3               	movwf	??___flge+1
 16257  3657  3000               	movlw	0
 16258  3658  00E4               	movwf	??___flge+2
 16259  3659  3080               	movlw	128
 16260  365A  00E5               	movwf	??___flge+3
 16261  365B  085E               	movf	___flge@ff2,w
 16262  365C  02E2               	subwf	??___flge,f
 16263  365D  085F               	movf	___flge@ff2+1,w
 16264  365E  3BE3               	subwfb	??___flge+1,f
 16265  365F  0860               	movf	___flge@ff2+2,w
 16266  3660  3BE4               	subwfb	??___flge+2,f
 16267  3661  0861               	movf	___flge@ff2+3,w
 16268  3662  3BE5               	subwfb	??___flge+3,f
 16269  3663  0865               	movf	??___flge+3,w
 16270  3664  00E1               	movwf	___flge@ff2+3
 16271  3665  0864               	movf	??___flge+2,w
 16272  3666  00E0               	movwf	___flge@ff2+2
 16273  3667  0863               	movf	??___flge+1,w
 16274  3668  00DF               	movwf	___flge@ff2+1
 16275  3669  0862               	movf	??___flge,w
 16276  366A  00DE               	movwf	___flge@ff2
 16277  366B                     l1122:	
 16278  366B  3080               	movlw	128
 16279  366C  06DD               	xorwf	___flge@ff1+3,f
 16280  366D  3080               	movlw	128
 16281  366E  06E1               	xorwf	___flge@ff2+3,f
 16282  366F  0861               	movf	___flge@ff2+3,w
 16283  3670  025D               	subwf	___flge@ff1+3,w
 16284  3671  1D03               	skipz
 16285  3672  0008               	return
 16286  3673  0860               	movf	___flge@ff2+2,w
 16287  3674  025C               	subwf	___flge@ff1+2,w
 16288  3675  1D03               	skipz
 16289  3676  0008               	return
 16290  3677  085F               	movf	___flge@ff2+1,w
 16291  3678  025B               	subwf	___flge@ff1+1,w
 16292  3679  1D03               	skipz
 16293  367A  0008               	return
 16294  367B  085E               	movf	___flge@ff2,w
 16295  367C  025A               	subwf	___flge@ff1,w
 16296  367D  0008               	return
 16297  367E                     __end_of___flge:	
 16298                           
 16299                           	psect	text53
 16300  2E44                     __ptext53:	
 16301 ;; *************** function _setCellUndervoltageProtection *****************
 16302 ;; Defined at:
 16303 ;;		line 127 in file "BQ76920.c"
 16304 ;; Parameters:    Size  Location     Type
 16305 ;;  voltage_mV      2   18[BANK0 ] int 
 16306 ;;  delay_s         2   20[BANK0 ] int 
 16307 ;; Auto vars:     Size  Location     Type
 16308 ;;  i               2   37[BANK0 ] int 
 16309 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 16310 ;; Return value:  Size  Location     Type
 16311 ;;                  1    wreg      void 
 16312 ;; Registers used:
 16313 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16314 ;; Tracked objects:
 16315 ;;		On entry : 0/0
 16316 ;;		On exit  : 0/0
 16317 ;;		Unchanged: 0/0
 16318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16319 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16320 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16321 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16322 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16323 ;;Total ram usage:       21 bytes
 16324 ;; Hardware stack levels used:    1
 16325 ;; Hardware stack levels required when called:    3
 16326 ;; This function calls:
 16327 ;;		_I2C_writeRegister
 16328 ;;		___aldiv
 16329 ;;		___lmul
 16330 ;;		_readRegister
 16331 ;; This function is called by:
 16332 ;;		_init_AFE
 16333 ;; This function uses a non-reentrant model
 16334 ;;
 16335                           
 16336                           
 16337                           ;psect for function _setCellUndervoltageProtection
 16338  2E44                     _setCellUndervoltageProtection:	
 16339                           
 16340                           ;BQ76920.c: 129:     minCellVoltage = voltage_mV;
 16341                           
 16342                           ;incstack = 0
 16343                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 16344  2E44  0020               	movlb	0	; select bank0
 16345  2E45  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 16346  2E46  0023               	movlb	3	; select bank3
 16347  2E47  00BB               	movwf	(_minCellVoltage+1)^(0+384)
 16348  2E48  0020               	movlb	0	; select bank0
 16349  2E49  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 16350  2E4A  0023               	movlb	3	; select bank3
 16351  2E4B  00BA               	movwf	_minCellVoltage^(0+384)
 16352                           
 16353                           ;BQ76920.c: 131:     protect3.regByte = readRegister(0x18, 0x08);
 16354  2E4C  3018               	movlw	24
 16355  2E4D  00F5               	movwf	readRegister@slaveAddress
 16356  2E4E  3000               	movlw	0
 16357  2E4F  00F6               	movwf	readRegister@slaveAddress+1
 16358  2E50  3008               	movlw	8
 16359  2E51  00F7               	movwf	readRegister@regAddress
 16360  2E52  3000               	movlw	0
 16361  2E53  00F8               	movwf	readRegister@regAddress+1
 16362  2E54  31B0  2043  31AE   	fcall	_readRegister
 16363  2E57  0875               	movf	?_readRegister,w
 16364  2E58  0020               	movlb	0	; select bank0
 16365  2E59  00B6               	movwf	??_setCellUndervoltageProtection
 16366  2E5A  0836               	movf	??_setCellUndervoltageProtection,w
 16367  2E5B  0023               	movlb	3	; select bank3
 16368  2E5C  00C8               	movwf	BQ76920@protect3^(0+384)
 16369                           
 16370                           ;BQ76920.c: 132:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 16371  2E5D  0851               	movf	_adcGain^(0+384),w
 16372  2E5E  0020               	movlb	0	; select bank0
 16373  2E5F  00A4               	movwf	___aldiv@divisor
 16374  2E60  0023               	movlb	3	; select bank3
 16375  2E61  0852               	movf	(_adcGain+1)^(0+384),w
 16376  2E62  0020               	movlb	0	; select bank0
 16377  2E63  00A5               	movwf	___aldiv@divisor+1
 16378  2E64  0D89               	rlf	9,f
 16379  2E65  3B89               	subwfb	9,f
 16380  2E66  0989               	comf	9,f
 16381  2E67  00A6               	movwf	___aldiv@divisor+2
 16382  2E68  00A7               	movwf	___aldiv@divisor+3
 16383  2E69  0023               	movlb	3	; select bank3
 16384  2E6A  0846               	movf	_adcOffset^(0+384),w
 16385  2E6B  0020               	movlb	0	; select bank0
 16386  2E6C  00B6               	movwf	??_setCellUndervoltageProtection
 16387  2E6D  0023               	movlb	3	; select bank3
 16388  2E6E  0847               	movf	(_adcOffset+1)^(0+384),w
 16389  2E6F  0020               	movlb	0	; select bank0
 16390  2E70  00B7               	movwf	??_setCellUndervoltageProtection+1
 16391  2E71  3000               	movlw	0
 16392  2E72  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 16393  2E73  30FF               	movlw	255
 16394  2E74  00B8               	movwf	??_setCellUndervoltageProtection+2
 16395  2E75  00B9               	movwf	??_setCellUndervoltageProtection+3
 16396  2E76  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 16397  2E77  00BA               	movwf	??_setCellUndervoltageProtection+4
 16398  2E78  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 16399  2E79  00BB               	movwf	??_setCellUndervoltageProtection+5
 16400  2E7A  3000               	movlw	0
 16401  2E7B  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 16402  2E7C  30FF               	movlw	255
 16403  2E7D  00BC               	movwf	??_setCellUndervoltageProtection+6
 16404  2E7E  00BD               	movwf	??_setCellUndervoltageProtection+7
 16405  2E7F  0836               	movf	??_setCellUndervoltageProtection,w
 16406  2E80  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 16407  2E81  0837               	movf	??_setCellUndervoltageProtection+1,w
 16408  2E82  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 16409  2E83  0838               	movf	??_setCellUndervoltageProtection+2,w
 16410  2E84  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 16411  2E85  0839               	movf	??_setCellUndervoltageProtection+3,w
 16412  2E86  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 16413  2E87  083D               	movf	??_setCellUndervoltageProtection+7,w
 16414  2E88  00F4               	movwf	___lmul@multiplier+3
 16415  2E89  083C               	movf	??_setCellUndervoltageProtection+6,w
 16416  2E8A  00F3               	movwf	___lmul@multiplier+2
 16417  2E8B  083B               	movf	??_setCellUndervoltageProtection+5,w
 16418  2E8C  00F2               	movwf	___lmul@multiplier+1
 16419  2E8D  083A               	movf	??_setCellUndervoltageProtection+4,w
 16420  2E8E  00F1               	movwf	___lmul@multiplier
 16421  2E8F  3000               	movlw	0
 16422  2E90  00F8               	movwf	___lmul@multiplicand+3
 16423  2E91  3000               	movlw	0
 16424  2E92  00F7               	movwf	___lmul@multiplicand+2
 16425  2E93  3003               	movlw	3
 16426  2E94  00F6               	movwf	___lmul@multiplicand+1
 16427  2E95  30E8               	movlw	232
 16428  2E96  00F5               	movwf	___lmul@multiplicand
 16429  2E97  31BF  279C  31AE   	fcall	___lmul
 16430  2E9A  0874               	movf	?___lmul+3,w
 16431  2E9B  0020               	movlb	0	; select bank0
 16432  2E9C  00AB               	movwf	___aldiv@dividend+3
 16433  2E9D  0873               	movf	?___lmul+2,w
 16434  2E9E  00AA               	movwf	___aldiv@dividend+2
 16435  2E9F  0872               	movf	?___lmul+1,w
 16436  2EA0  00A9               	movwf	___aldiv@dividend+1
 16437  2EA1  0871               	movf	?___lmul,w
 16438  2EA2  00A8               	movwf	___aldiv@dividend
 16439  2EA3  31B6  26FA  31AE   	fcall	___aldiv
 16440  2EA6  0020               	movlb	0	; select bank0
 16441  2EA7  0824               	movf	?___aldiv,w
 16442  2EA8  00BE               	movwf	??_setCellUndervoltageProtection+8
 16443  2EA9  0825               	movf	?___aldiv+1,w
 16444  2EAA  00BF               	movwf	??_setCellUndervoltageProtection+9
 16445  2EAB  0826               	movf	?___aldiv+2,w
 16446  2EAC  00C0               	movwf	??_setCellUndervoltageProtection+10
 16447  2EAD  0827               	movf	?___aldiv+3,w
 16448  2EAE  00C1               	movwf	??_setCellUndervoltageProtection+11
 16449  2EAF  3004               	movlw	4
 16450  2EB0  00C2               	movwf	??_setCellUndervoltageProtection+12
 16451  2EB1                     u11845:	
 16452  2EB1  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 16453  2EB2  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 16454  2EB3  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 16455  2EB4  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 16456  2EB5  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 16457  2EB6  2EB1               	goto	u11845
 16458  2EB7  083E               	movf	??_setCellUndervoltageProtection+8,w
 16459  2EB8  00C3               	movwf	??_setCellUndervoltageProtection+13
 16460  2EB9  0843               	movf	??_setCellUndervoltageProtection+13,w
 16461  2EBA  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 16462                           
 16463                           ;BQ76920.c: 133:     uv_trip += 1;
 16464  2EBB  3001               	movlw	1
 16465  2EBC  00B6               	movwf	??_setCellUndervoltageProtection
 16466  2EBD  0836               	movf	??_setCellUndervoltageProtection,w
 16467  2EBE  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 16468                           
 16469                           ;BQ76920.c: 134:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 16470  2EBF  3018               	movlw	24
 16471  2EC0  00F5               	movwf	I2C_writeRegister@slaveAddress
 16472  2EC1  3000               	movlw	0
 16473  2EC2  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16474  2EC3  300A               	movlw	10
 16475  2EC4  00F7               	movwf	I2C_writeRegister@regAddress
 16476  2EC5  3000               	movlw	0
 16477  2EC6  00F8               	movwf	I2C_writeRegister@regAddress+1
 16478  2EC7  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 16479  2EC8  00B6               	movwf	??_setCellUndervoltageProtection
 16480  2EC9  01B7               	clrf	??_setCellUndervoltageProtection+1
 16481  2ECA  0836               	movf	??_setCellUndervoltageProtection,w
 16482  2ECB  00F9               	movwf	I2C_writeRegister@data
 16483  2ECC  0837               	movf	??_setCellUndervoltageProtection+1,w
 16484  2ECD  00FA               	movwf	I2C_writeRegister@data+1
 16485  2ECE  31BE  2664  31AE   	fcall	_I2C_writeRegister
 16486                           
 16487                           ;BQ76920.c: 136:     protect3.bits.UV_DELAY = 0;
 16488  2ED1  303F               	movlw	-193
 16489  2ED2  0023               	movlb	3	; select bank3
 16490  2ED3  05C8               	andwf	BQ76920@protect3^(0+384),f
 16491                           
 16492                           ;BQ76920.c: 137:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 16493  2ED4  0020               	movlb	0	; select bank0
 16494  2ED5  01C5               	clrf	setCellUndervoltageProtection@i
 16495  2ED6  01C6               	clrf	setCellUndervoltageProtection@i+1
 16496  2ED7                     l8487:	
 16497                           
 16498                           ;BQ76920.c: 138:         if (delay_s >= UV_delay_setting[i]) {
 16499  2ED7  0846               	movf	setCellUndervoltageProtection@i+1,w
 16500  2ED8  0085               	movwf	5
 16501  2ED9  0845               	movf	setCellUndervoltageProtection@i,w
 16502  2EDA  0084               	movwf	4
 16503  2EDB  3584               	lslf	4,f
 16504  2EDC  0D85               	rlf	5,f
 16505  2EDD  3034               	movlw	low (_UV_delay_setting| (0+32768))
 16506  2EDE  0784               	addwf	4,f
 16507  2EDF  30BB               	movlw	high (_UV_delay_setting| (0+32768))
 16508  2EE0  3D85               	addwfc	5,f
 16509  2EE1  3F00               	moviw [0]fsr0
 16510  2EE2  00B6               	movwf	??_setCellUndervoltageProtection
 16511  2EE3  3F01               	moviw [1]fsr0
 16512  2EE4  00B7               	movwf	??_setCellUndervoltageProtection+1
 16513  2EE5  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 16514  2EE6  3A80               	xorlw	128
 16515  2EE7  00B8               	movwf	??_setCellUndervoltageProtection+2
 16516  2EE8  0837               	movf	??_setCellUndervoltageProtection+1,w
 16517  2EE9  3A80               	xorlw	128
 16518  2EEA  0238               	subwf	??_setCellUndervoltageProtection+2,w
 16519  2EEB  1D03               	skipz
 16520  2EEC  2EEF               	goto	u11855
 16521  2EED  0836               	movf	??_setCellUndervoltageProtection,w
 16522  2EEE  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 16523  2EEF                     u11855:	
 16524  2EEF  1C03               	skipc
 16525  2EF0  2EFF               	goto	l8491
 16526                           
 16527                           ;BQ76920.c: 139:             protect3.bits.UV_DELAY = i;
 16528  2EF1  0020               	movlb	0	; select bank0
 16529  2EF2  0845               	movf	setCellUndervoltageProtection@i,w
 16530  2EF3  00B6               	movwf	??_setCellUndervoltageProtection
 16531  2EF4  0EB6               	swapf	??_setCellUndervoltageProtection,f
 16532  2EF5  0DB6               	rlf	??_setCellUndervoltageProtection,f
 16533  2EF6  0DB6               	rlf	??_setCellUndervoltageProtection,f
 16534  2EF7  0023               	movlb	3	; select bank3
 16535  2EF8  0848               	movf	BQ76920@protect3^(0+384),w
 16536  2EF9  0020               	movlb	0	; select bank0
 16537  2EFA  0636               	xorwf	??_setCellUndervoltageProtection,w
 16538  2EFB  393F               	andlw	-193
 16539  2EFC  0636               	xorwf	??_setCellUndervoltageProtection,w
 16540  2EFD  0023               	movlb	3	; select bank3
 16541  2EFE  00C8               	movwf	BQ76920@protect3^(0+384)
 16542  2EFF                     l8491:	
 16543                           
 16544                           ;BQ76920.c: 141:     }
 16545  2EFF  3001               	movlw	1
 16546  2F00  0020               	movlb	0	; select bank0
 16547  2F01  07C5               	addwf	setCellUndervoltageProtection@i,f
 16548  2F02  3000               	movlw	0
 16549  2F03  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 16550  2F04  3000               	movlw	0
 16551  2F05  0246               	subwf	setCellUndervoltageProtection@i+1,w
 16552  2F06  3003               	movlw	3
 16553  2F07  1903               	skipnz
 16554  2F08  0245               	subwf	setCellUndervoltageProtection@i,w
 16555  2F09  1C03               	skipc
 16556  2F0A  2ED7               	goto	l8487
 16557                           
 16558                           ;BQ76920.c: 142:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 16559  2F0B  3018               	movlw	24
 16560  2F0C  00F5               	movwf	I2C_writeRegister@slaveAddress
 16561  2F0D  3000               	movlw	0
 16562  2F0E  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16563  2F0F  3008               	movlw	8
 16564  2F10  00F7               	movwf	I2C_writeRegister@regAddress
 16565  2F11  3000               	movlw	0
 16566  2F12  00F8               	movwf	I2C_writeRegister@regAddress+1
 16567  2F13  0023               	movlb	3	; select bank3
 16568  2F14  0848               	movf	BQ76920@protect3^(0+384),w
 16569  2F15  0020               	movlb	0	; select bank0
 16570  2F16  00B6               	movwf	??_setCellUndervoltageProtection
 16571  2F17  01B7               	clrf	??_setCellUndervoltageProtection+1
 16572  2F18  0836               	movf	??_setCellUndervoltageProtection,w
 16573  2F19  00F9               	movwf	I2C_writeRegister@data
 16574  2F1A  0837               	movf	??_setCellUndervoltageProtection+1,w
 16575  2F1B  00FA               	movwf	I2C_writeRegister@data+1
 16576  2F1C  31BE  2664         	fcall	_I2C_writeRegister
 16577  2F1E  0008               	return
 16578  2F1F                     __end_of_setCellUndervoltageProtection:	
 16579                           
 16580                           	psect	text54
 16581  2C98                     __ptext54:	
 16582 ;; *************** function _setCellOvervoltageProtection *****************
 16583 ;; Defined at:
 16584 ;;		line 148 in file "BQ76920.c"
 16585 ;; Parameters:    Size  Location     Type
 16586 ;;  voltage_mV      2   18[BANK0 ] int 
 16587 ;;  delay_s         2   20[BANK0 ] int 
 16588 ;; Auto vars:     Size  Location     Type
 16589 ;;  i               2   37[BANK0 ] int 
 16590 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 16591 ;; Return value:  Size  Location     Type
 16592 ;;                  1    wreg      void 
 16593 ;; Registers used:
 16594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16595 ;; Tracked objects:
 16596 ;;		On entry : 0/0
 16597 ;;		On exit  : 0/0
 16598 ;;		Unchanged: 0/0
 16599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16600 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16601 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16602 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16603 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16604 ;;Total ram usage:       21 bytes
 16605 ;; Hardware stack levels used:    1
 16606 ;; Hardware stack levels required when called:    3
 16607 ;; This function calls:
 16608 ;;		_I2C_writeRegister
 16609 ;;		___aldiv
 16610 ;;		___lmul
 16611 ;;		_readRegister
 16612 ;; This function is called by:
 16613 ;;		_init_AFE
 16614 ;; This function uses a non-reentrant model
 16615 ;;
 16616                           
 16617                           
 16618                           ;psect for function _setCellOvervoltageProtection
 16619  2C98                     _setCellOvervoltageProtection:	
 16620                           
 16621                           ;BQ76920.c: 150:     maxCellVoltage = voltage_mV;
 16622                           
 16623                           ;incstack = 0
 16624                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 16625  2C98  0020               	movlb	0	; select bank0
 16626  2C99  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 16627  2C9A  0023               	movlb	3	; select bank3
 16628  2C9B  00BD               	movwf	(_maxCellVoltage+1)^(0+384)
 16629  2C9C  0020               	movlb	0	; select bank0
 16630  2C9D  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 16631  2C9E  0023               	movlb	3	; select bank3
 16632  2C9F  00BC               	movwf	_maxCellVoltage^(0+384)
 16633                           
 16634                           ;BQ76920.c: 151:     protect3.regByte = readRegister(0x18, 0x08);
 16635  2CA0  3018               	movlw	24
 16636  2CA1  00F5               	movwf	readRegister@slaveAddress
 16637  2CA2  3000               	movlw	0
 16638  2CA3  00F6               	movwf	readRegister@slaveAddress+1
 16639  2CA4  3008               	movlw	8
 16640  2CA5  00F7               	movwf	readRegister@regAddress
 16641  2CA6  3000               	movlw	0
 16642  2CA7  00F8               	movwf	readRegister@regAddress+1
 16643  2CA8  31B0  2043  31AC   	fcall	_readRegister
 16644  2CAB  0875               	movf	?_readRegister,w
 16645  2CAC  0020               	movlb	0	; select bank0
 16646  2CAD  00B6               	movwf	??_setCellOvervoltageProtection
 16647  2CAE  0836               	movf	??_setCellOvervoltageProtection,w
 16648  2CAF  0023               	movlb	3	; select bank3
 16649  2CB0  00C8               	movwf	BQ76920@protect3^(0+384)
 16650                           
 16651                           ;BQ76920.c: 152:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 16652  2CB1  0851               	movf	_adcGain^(0+384),w
 16653  2CB2  0020               	movlb	0	; select bank0
 16654  2CB3  00A4               	movwf	___aldiv@divisor
 16655  2CB4  0023               	movlb	3	; select bank3
 16656  2CB5  0852               	movf	(_adcGain+1)^(0+384),w
 16657  2CB6  0020               	movlb	0	; select bank0
 16658  2CB7  00A5               	movwf	___aldiv@divisor+1
 16659  2CB8  0D89               	rlf	9,f
 16660  2CB9  3B89               	subwfb	9,f
 16661  2CBA  0989               	comf	9,f
 16662  2CBB  00A6               	movwf	___aldiv@divisor+2
 16663  2CBC  00A7               	movwf	___aldiv@divisor+3
 16664  2CBD  0023               	movlb	3	; select bank3
 16665  2CBE  0846               	movf	_adcOffset^(0+384),w
 16666  2CBF  0020               	movlb	0	; select bank0
 16667  2CC0  00B6               	movwf	??_setCellOvervoltageProtection
 16668  2CC1  0023               	movlb	3	; select bank3
 16669  2CC2  0847               	movf	(_adcOffset+1)^(0+384),w
 16670  2CC3  0020               	movlb	0	; select bank0
 16671  2CC4  00B7               	movwf	??_setCellOvervoltageProtection+1
 16672  2CC5  3000               	movlw	0
 16673  2CC6  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 16674  2CC7  30FF               	movlw	255
 16675  2CC8  00B8               	movwf	??_setCellOvervoltageProtection+2
 16676  2CC9  00B9               	movwf	??_setCellOvervoltageProtection+3
 16677  2CCA  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 16678  2CCB  00BA               	movwf	??_setCellOvervoltageProtection+4
 16679  2CCC  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 16680  2CCD  00BB               	movwf	??_setCellOvervoltageProtection+5
 16681  2CCE  3000               	movlw	0
 16682  2CCF  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 16683  2CD0  30FF               	movlw	255
 16684  2CD1  00BC               	movwf	??_setCellOvervoltageProtection+6
 16685  2CD2  00BD               	movwf	??_setCellOvervoltageProtection+7
 16686  2CD3  0836               	movf	??_setCellOvervoltageProtection,w
 16687  2CD4  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 16688  2CD5  0837               	movf	??_setCellOvervoltageProtection+1,w
 16689  2CD6  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 16690  2CD7  0838               	movf	??_setCellOvervoltageProtection+2,w
 16691  2CD8  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 16692  2CD9  0839               	movf	??_setCellOvervoltageProtection+3,w
 16693  2CDA  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 16694  2CDB  083D               	movf	??_setCellOvervoltageProtection+7,w
 16695  2CDC  00F4               	movwf	___lmul@multiplier+3
 16696  2CDD  083C               	movf	??_setCellOvervoltageProtection+6,w
 16697  2CDE  00F3               	movwf	___lmul@multiplier+2
 16698  2CDF  083B               	movf	??_setCellOvervoltageProtection+5,w
 16699  2CE0  00F2               	movwf	___lmul@multiplier+1
 16700  2CE1  083A               	movf	??_setCellOvervoltageProtection+4,w
 16701  2CE2  00F1               	movwf	___lmul@multiplier
 16702  2CE3  3000               	movlw	0
 16703  2CE4  00F8               	movwf	___lmul@multiplicand+3
 16704  2CE5  3000               	movlw	0
 16705  2CE6  00F7               	movwf	___lmul@multiplicand+2
 16706  2CE7  3003               	movlw	3
 16707  2CE8  00F6               	movwf	___lmul@multiplicand+1
 16708  2CE9  30E8               	movlw	232
 16709  2CEA  00F5               	movwf	___lmul@multiplicand
 16710  2CEB  31BF  279C  31AC   	fcall	___lmul
 16711  2CEE  0874               	movf	?___lmul+3,w
 16712  2CEF  0020               	movlb	0	; select bank0
 16713  2CF0  00AB               	movwf	___aldiv@dividend+3
 16714  2CF1  0873               	movf	?___lmul+2,w
 16715  2CF2  00AA               	movwf	___aldiv@dividend+2
 16716  2CF3  0872               	movf	?___lmul+1,w
 16717  2CF4  00A9               	movwf	___aldiv@dividend+1
 16718  2CF5  0871               	movf	?___lmul,w
 16719  2CF6  00A8               	movwf	___aldiv@dividend
 16720  2CF7  31B6  26FA  31AC   	fcall	___aldiv
 16721  2CFA  0020               	movlb	0	; select bank0
 16722  2CFB  0824               	movf	?___aldiv,w
 16723  2CFC  00BE               	movwf	??_setCellOvervoltageProtection+8
 16724  2CFD  0825               	movf	?___aldiv+1,w
 16725  2CFE  00BF               	movwf	??_setCellOvervoltageProtection+9
 16726  2CFF  0826               	movf	?___aldiv+2,w
 16727  2D00  00C0               	movwf	??_setCellOvervoltageProtection+10
 16728  2D01  0827               	movf	?___aldiv+3,w
 16729  2D02  00C1               	movwf	??_setCellOvervoltageProtection+11
 16730  2D03  3004               	movlw	4
 16731  2D04  00C2               	movwf	??_setCellOvervoltageProtection+12
 16732  2D05                     u11875:	
 16733  2D05  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 16734  2D06  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 16735  2D07  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 16736  2D08  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 16737  2D09  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 16738  2D0A  2D05               	goto	u11875
 16739  2D0B  083E               	movf	??_setCellOvervoltageProtection+8,w
 16740  2D0C  00C3               	movwf	??_setCellOvervoltageProtection+13
 16741  2D0D  0843               	movf	??_setCellOvervoltageProtection+13,w
 16742  2D0E  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 16743                           
 16744                           ;BQ76920.c: 153:     I2C_writeRegister(0x18, 0x09, ov_trip);
 16745  2D0F  3018               	movlw	24
 16746  2D10  00F5               	movwf	I2C_writeRegister@slaveAddress
 16747  2D11  3000               	movlw	0
 16748  2D12  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16749  2D13  3009               	movlw	9
 16750  2D14  00F7               	movwf	I2C_writeRegister@regAddress
 16751  2D15  3000               	movlw	0
 16752  2D16  00F8               	movwf	I2C_writeRegister@regAddress+1
 16753  2D17  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 16754  2D18  00B6               	movwf	??_setCellOvervoltageProtection
 16755  2D19  01B7               	clrf	??_setCellOvervoltageProtection+1
 16756  2D1A  0836               	movf	??_setCellOvervoltageProtection,w
 16757  2D1B  00F9               	movwf	I2C_writeRegister@data
 16758  2D1C  0837               	movf	??_setCellOvervoltageProtection+1,w
 16759  2D1D  00FA               	movwf	I2C_writeRegister@data+1
 16760  2D1E  31BE  2664  31AC   	fcall	_I2C_writeRegister
 16761                           
 16762                           ;BQ76920.c: 155:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 16763  2D21  0020               	movlb	0	; select bank0
 16764  2D22  01C5               	clrf	setCellOvervoltageProtection@i
 16765  2D23  01C6               	clrf	setCellOvervoltageProtection@i+1
 16766  2D24                     l8513:	
 16767                           
 16768                           ;BQ76920.c: 156:         if (delay_s >= OV_delay_setting[i]) {
 16769  2D24  0846               	movf	setCellOvervoltageProtection@i+1,w
 16770  2D25  0085               	movwf	5
 16771  2D26  0845               	movf	setCellOvervoltageProtection@i,w
 16772  2D27  0084               	movwf	4
 16773  2D28  3584               	lslf	4,f
 16774  2D29  0D85               	rlf	5,f
 16775  2D2A  302C               	movlw	low (_OV_delay_setting| (0+32768))
 16776  2D2B  0784               	addwf	4,f
 16777  2D2C  30BB               	movlw	high (_OV_delay_setting| (0+32768))
 16778  2D2D  3D85               	addwfc	5,f
 16779  2D2E  3F00               	moviw [0]fsr0
 16780  2D2F  00B6               	movwf	??_setCellOvervoltageProtection
 16781  2D30  3F01               	moviw [1]fsr0
 16782  2D31  00B7               	movwf	??_setCellOvervoltageProtection+1
 16783  2D32  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 16784  2D33  3A80               	xorlw	128
 16785  2D34  00B8               	movwf	??_setCellOvervoltageProtection+2
 16786  2D35  0837               	movf	??_setCellOvervoltageProtection+1,w
 16787  2D36  3A80               	xorlw	128
 16788  2D37  0238               	subwf	??_setCellOvervoltageProtection+2,w
 16789  2D38  1D03               	skipz
 16790  2D39  2D3C               	goto	u11885
 16791  2D3A  0836               	movf	??_setCellOvervoltageProtection,w
 16792  2D3B  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 16793  2D3C                     u11885:	
 16794  2D3C  1C03               	skipc
 16795  2D3D  2D4C               	goto	l8517
 16796                           
 16797                           ;BQ76920.c: 157:             protect3.bits.UV_DELAY = i;
 16798  2D3E  0020               	movlb	0	; select bank0
 16799  2D3F  0845               	movf	setCellOvervoltageProtection@i,w
 16800  2D40  00B6               	movwf	??_setCellOvervoltageProtection
 16801  2D41  0EB6               	swapf	??_setCellOvervoltageProtection,f
 16802  2D42  0DB6               	rlf	??_setCellOvervoltageProtection,f
 16803  2D43  0DB6               	rlf	??_setCellOvervoltageProtection,f
 16804  2D44  0023               	movlb	3	; select bank3
 16805  2D45  0848               	movf	BQ76920@protect3^(0+384),w
 16806  2D46  0020               	movlb	0	; select bank0
 16807  2D47  0636               	xorwf	??_setCellOvervoltageProtection,w
 16808  2D48  393F               	andlw	-193
 16809  2D49  0636               	xorwf	??_setCellOvervoltageProtection,w
 16810  2D4A  0023               	movlb	3	; select bank3
 16811  2D4B  00C8               	movwf	BQ76920@protect3^(0+384)
 16812  2D4C                     l8517:	
 16813                           
 16814                           ;BQ76920.c: 159:     }
 16815  2D4C  3001               	movlw	1
 16816  2D4D  0020               	movlb	0	; select bank0
 16817  2D4E  07C5               	addwf	setCellOvervoltageProtection@i,f
 16818  2D4F  3000               	movlw	0
 16819  2D50  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 16820  2D51  3000               	movlw	0
 16821  2D52  0246               	subwf	setCellOvervoltageProtection@i+1,w
 16822  2D53  3003               	movlw	3
 16823  2D54  1903               	skipnz
 16824  2D55  0245               	subwf	setCellOvervoltageProtection@i,w
 16825  2D56  1C03               	skipc
 16826  2D57  2D24               	goto	l8513
 16827                           
 16828                           ;BQ76920.c: 160:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 16829  2D58  3018               	movlw	24
 16830  2D59  00F5               	movwf	I2C_writeRegister@slaveAddress
 16831  2D5A  3000               	movlw	0
 16832  2D5B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16833  2D5C  3008               	movlw	8
 16834  2D5D  00F7               	movwf	I2C_writeRegister@regAddress
 16835  2D5E  3000               	movlw	0
 16836  2D5F  00F8               	movwf	I2C_writeRegister@regAddress+1
 16837  2D60  0023               	movlb	3	; select bank3
 16838  2D61  0848               	movf	BQ76920@protect3^(0+384),w
 16839  2D62  0020               	movlb	0	; select bank0
 16840  2D63  00B6               	movwf	??_setCellOvervoltageProtection
 16841  2D64  01B7               	clrf	??_setCellOvervoltageProtection+1
 16842  2D65  0836               	movf	??_setCellOvervoltageProtection,w
 16843  2D66  00F9               	movwf	I2C_writeRegister@data
 16844  2D67  0837               	movf	??_setCellOvervoltageProtection+1,w
 16845  2D68  00FA               	movwf	I2C_writeRegister@data+1
 16846  2D69  31BE  2664         	fcall	_I2C_writeRegister
 16847  2D6B  0008               	return
 16848  2D6C                     __end_of_setCellOvervoltageProtection:	
 16849                           
 16850                           	psect	text55
 16851  2B1F                     __ptext55:	
 16852 ;; *************** function _beginAFEcommunication *****************
 16853 ;; Defined at:
 16854 ;;		line 23 in file "BQ76920.c"
 16855 ;; Parameters:    Size  Location     Type
 16856 ;;		None
 16857 ;; Auto vars:     Size  Location     Type
 16858 ;;  i               2   13[BANK0 ] int 
 16859 ;;  commSuccess     2   11[BANK0 ] int 
 16860 ;; Return value:  Size  Location     Type
 16861 ;;                  2    0[BANK0 ] int 
 16862 ;; Registers used:
 16863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16864 ;; Tracked objects:
 16865 ;;		On entry : 0/0
 16866 ;;		On exit  : 0/0
 16867 ;;		Unchanged: 0/0
 16868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16869 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16870 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16871 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16872 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16873 ;;Total ram usage:       15 bytes
 16874 ;; Hardware stack levels used:    1
 16875 ;; Hardware stack levels required when called:    3
 16876 ;; This function calls:
 16877 ;;		_I2C_writeRegister
 16878 ;;		_readRegister
 16879 ;; This function is called by:
 16880 ;;		_statemachine
 16881 ;; This function uses a non-reentrant model
 16882 ;;
 16883                           
 16884                           
 16885                           ;psect for function _beginAFEcommunication
 16886  2B1F                     _beginAFEcommunication:	
 16887                           
 16888                           ;BQ76920.c: 25:     int commSuccess = 0;
 16889                           
 16890                           ;incstack = 0
 16891                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16892  2B1F  0020               	movlb	0	; select bank0
 16893  2B20  01AB               	clrf	beginAFEcommunication@commSuccess
 16894  2B21  01AC               	clrf	beginAFEcommunication@commSuccess+1
 16895                           
 16896                           ;BQ76920.c: 28:     for (int i = 0; i < 4; i++) {
 16897  2B22  01AD               	clrf	beginAFEcommunication@i
 16898  2B23  01AE               	clrf	beginAFEcommunication@i+1
 16899  2B24                     l8559:	
 16900                           
 16901                           ;BQ76920.c: 29:         cellVoltages[i] = 0;
 16902  2B24  0020               	movlb	0	; select bank0
 16903  2B25  352D               	lslf	beginAFEcommunication@i,w
 16904  2B26  3EA0               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 16905  2B27  0086               	movwf	6
 16906  2B28  3001               	movlw	1	; select bank3/4
 16907  2B29  0087               	movwf	7
 16908  2B2A  3000               	movlw	0
 16909  2B2B  3FC0               	movwi [0]fsr1
 16910  2B2C  3FC1               	movwi [1]fsr1
 16911                           
 16912                           ;BQ76920.c: 30:     }
 16913  2B2D  3001               	movlw	1
 16914  2B2E  07AD               	addwf	beginAFEcommunication@i,f
 16915  2B2F  3000               	movlw	0
 16916  2B30  3DAE               	addwfc	beginAFEcommunication@i+1,f
 16917  2B31  082E               	movf	beginAFEcommunication@i+1,w
 16918  2B32  3A80               	xorlw	128
 16919  2B33  00A2               	movwf	??_beginAFEcommunication
 16920  2B34  3080               	movlw	128
 16921  2B35  0222               	subwf	??_beginAFEcommunication,w
 16922  2B36  1D03               	skipz
 16923  2B37  2B3A               	goto	u11905
 16924  2B38  3004               	movlw	4
 16925  2B39  022D               	subwf	beginAFEcommunication@i,w
 16926  2B3A                     u11905:	
 16927  2B3A  1C03               	skipc
 16928  2B3B  2B24               	goto	l8559
 16929                           
 16930                           ;BQ76920.c: 33:     I2C_writeRegister(0x18, 0x0B, 0x19);
 16931  2B3C  3018               	movlw	24
 16932  2B3D  00F5               	movwf	I2C_writeRegister@slaveAddress
 16933  2B3E  3000               	movlw	0
 16934  2B3F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16935  2B40  300B               	movlw	11
 16936  2B41  00F7               	movwf	I2C_writeRegister@regAddress
 16937  2B42  3000               	movlw	0
 16938  2B43  00F8               	movwf	I2C_writeRegister@regAddress+1
 16939  2B44  3019               	movlw	25
 16940  2B45  00F9               	movwf	I2C_writeRegister@data
 16941  2B46  3000               	movlw	0
 16942  2B47  00FA               	movwf	I2C_writeRegister@data+1
 16943  2B48  31BE  2664  31AB   	fcall	_I2C_writeRegister
 16944                           
 16945                           ;BQ76920.c: 35:     if (readRegister(0x18, 0x0B) == 0x19) {
 16946  2B4B  3018               	movlw	24
 16947  2B4C  00F5               	movwf	readRegister@slaveAddress
 16948  2B4D  3000               	movlw	0
 16949  2B4E  00F6               	movwf	readRegister@slaveAddress+1
 16950  2B4F  300B               	movlw	11
 16951  2B50  00F7               	movwf	readRegister@regAddress
 16952  2B51  3000               	movlw	0
 16953  2B52  00F8               	movwf	readRegister@regAddress+1
 16954  2B53  31B0  2043  31AB   	fcall	_readRegister
 16955  2B56  3019               	movlw	25
 16956  2B57  0675               	xorwf	?_readRegister,w
 16957  2B58  0476               	iorwf	?_readRegister+1,w
 16958  2B59  1D03               	btfss	3,2
 16959  2B5A  2BCD               	goto	l430
 16960                           
 16961                           ;BQ76920.c: 36:         commSuccess = 1;
 16962  2B5B  3001               	movlw	1
 16963  2B5C  0020               	movlb	0	; select bank0
 16964  2B5D  00AB               	movwf	beginAFEcommunication@commSuccess
 16965  2B5E  3000               	movlw	0
 16966  2B5F  00AC               	movwf	beginAFEcommunication@commSuccess+1
 16967                           
 16968                           ;BQ76920.c: 40:         I2C_writeRegister(0x18, 0x04, 0x18);
 16969  2B60  3018               	movlw	24
 16970  2B61  00F5               	movwf	I2C_writeRegister@slaveAddress
 16971  2B62  3000               	movlw	0
 16972  2B63  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16973  2B64  3004               	movlw	4
 16974  2B65  00F7               	movwf	I2C_writeRegister@regAddress
 16975  2B66  3000               	movlw	0
 16976  2B67  00F8               	movwf	I2C_writeRegister@regAddress+1
 16977  2B68  3018               	movlw	24
 16978  2B69  00F9               	movwf	I2C_writeRegister@data
 16979  2B6A  3000               	movlw	0
 16980  2B6B  00FA               	movwf	I2C_writeRegister@data+1
 16981  2B6C  31BE  2664  31AB   	fcall	_I2C_writeRegister
 16982                           
 16983                           ;BQ76920.c: 41:         I2C_writeRegister(0x18, 0x05, 0x40);
 16984  2B6F  3018               	movlw	24
 16985  2B70  00F5               	movwf	I2C_writeRegister@slaveAddress
 16986  2B71  3000               	movlw	0
 16987  2B72  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16988  2B73  3005               	movlw	5
 16989  2B74  00F7               	movwf	I2C_writeRegister@regAddress
 16990  2B75  3000               	movlw	0
 16991  2B76  00F8               	movwf	I2C_writeRegister@regAddress+1
 16992  2B77  3040               	movlw	64
 16993  2B78  00F9               	movwf	I2C_writeRegister@data
 16994  2B79  3000               	movlw	0
 16995  2B7A  00FA               	movwf	I2C_writeRegister@data+1
 16996  2B7B  31BE  2664  31AB   	fcall	_I2C_writeRegister
 16997                           
 16998                           ;BQ76920.c: 44:         adcOffset = (signed int) readRegister(0x18, 0x51);
 16999  2B7E  3018               	movlw	24
 17000  2B7F  00F5               	movwf	readRegister@slaveAddress
 17001  2B80  3000               	movlw	0
 17002  2B81  00F6               	movwf	readRegister@slaveAddress+1
 17003  2B82  3051               	movlw	81
 17004  2B83  00F7               	movwf	readRegister@regAddress
 17005  2B84  3000               	movlw	0
 17006  2B85  00F8               	movwf	readRegister@regAddress+1
 17007  2B86  31B0  2043  31AB   	fcall	_readRegister
 17008  2B89  0876               	movf	?_readRegister+1,w
 17009  2B8A  0023               	movlb	3	; select bank3
 17010  2B8B  00C7               	movwf	(_adcOffset+1)^(0+384)
 17011  2B8C  0875               	movf	?_readRegister,w
 17012  2B8D  00C6               	movwf	_adcOffset^(0+384)
 17013                           
 17014                           ;BQ76920.c: 45:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 17015  2B8E  3018               	movlw	24
 17016  2B8F  00F5               	movwf	readRegister@slaveAddress
 17017  2B90  3000               	movlw	0
 17018  2B91  00F6               	movwf	readRegister@slaveAddress+1
 17019  2B92  3059               	movlw	89
 17020  2B93  00F7               	movwf	readRegister@regAddress
 17021  2B94  3000               	movlw	0
 17022  2B95  00F8               	movwf	readRegister@regAddress+1
 17023  2B96  31B0  2043  31AB   	fcall	_readRegister
 17024  2B99  0875               	movf	?_readRegister,w
 17025  2B9A  0020               	movlb	0	; select bank0
 17026  2B9B  00A2               	movwf	??_beginAFEcommunication
 17027  2B9C  0876               	movf	?_readRegister+1,w
 17028  2B9D  00A3               	movwf	??_beginAFEcommunication+1
 17029  2B9E  3005               	movlw	5
 17030  2B9F  00A4               	movwf	??_beginAFEcommunication+2
 17031  2BA0                     u11925:	
 17032  2BA0  0D23               	rlf	??_beginAFEcommunication+1,w
 17033  2BA1  0CA3               	rrf	??_beginAFEcommunication+1,f
 17034  2BA2  0CA2               	rrf	??_beginAFEcommunication,f
 17035  2BA3  0BA4               	decfsz	??_beginAFEcommunication+2,f
 17036  2BA4  2BA0               	goto	u11925
 17037  2BA5  3007               	movlw	7
 17038  2BA6  0522               	andwf	??_beginAFEcommunication,w
 17039  2BA7  00A5               	movwf	??_beginAFEcommunication+3
 17040  2BA8  3000               	movlw	0
 17041  2BA9  0523               	andwf	??_beginAFEcommunication+1,w
 17042  2BAA  00A6               	movwf	??_beginAFEcommunication+4
 17043  2BAB  3018               	movlw	24
 17044  2BAC  00F5               	movwf	readRegister@slaveAddress
 17045  2BAD  3000               	movlw	0
 17046  2BAE  00F6               	movwf	readRegister@slaveAddress+1
 17047  2BAF  3050               	movlw	80
 17048  2BB0  00F7               	movwf	readRegister@regAddress
 17049  2BB1  3000               	movlw	0
 17050  2BB2  00F8               	movwf	readRegister@regAddress+1
 17051  2BB3  31B0  2043         	fcall	_readRegister
 17052  2BB5  300C               	movlw	12
 17053  2BB6  0575               	andwf	?_readRegister,w
 17054  2BB7  0020               	movlb	0	; select bank0
 17055  2BB8  00A7               	movwf	??_beginAFEcommunication+5
 17056  2BB9  3000               	movlw	0
 17057  2BBA  0576               	andwf	?_readRegister+1,w
 17058  2BBB  00A8               	movwf	??_beginAFEcommunication+6
 17059  2BBC  35A7               	lslf	??_beginAFEcommunication+5,f
 17060  2BBD  0DA8               	rlf	??_beginAFEcommunication+6,f
 17061  2BBE  0825               	movf	??_beginAFEcommunication+3,w
 17062  2BBF  0427               	iorwf	??_beginAFEcommunication+5,w
 17063  2BC0  00A9               	movwf	??_beginAFEcommunication+7
 17064  2BC1  0826               	movf	??_beginAFEcommunication+4,w
 17065  2BC2  0428               	iorwf	??_beginAFEcommunication+6,w
 17066  2BC3  00AA               	movwf	??_beginAFEcommunication+8
 17067  2BC4  0829               	movf	??_beginAFEcommunication+7,w
 17068  2BC5  3E6D               	addlw	109
 17069  2BC6  0023               	movlb	3	; select bank3
 17070  2BC7  00D1               	movwf	_adcGain^(0+384)
 17071  2BC8  3001               	movlw	1
 17072  2BC9  0020               	movlb	0	; select bank0
 17073  2BCA  3D2A               	addwfc	??_beginAFEcommunication+8,w
 17074  2BCB  0023               	movlb	3	; select bank3
 17075  2BCC  00D2               	movwf	(_adcGain+1)^(0+384)
 17076  2BCD                     l430:	
 17077                           ;BQ76920.c: 48:     }
 17078                           
 17079                           
 17080                           ;BQ76920.c: 49:     return commSuccess;
 17081  2BCD  0020               	movlb	0	; select bank0
 17082  2BCE  082C               	movf	beginAFEcommunication@commSuccess+1,w
 17083  2BCF  00A1               	movwf	?_beginAFEcommunication+1
 17084  2BD0  082B               	movf	beginAFEcommunication@commSuccess,w
 17085  2BD1  00A0               	movwf	?_beginAFEcommunication
 17086  2BD2  0008               	return
 17087  2BD3                     __end_of_beginAFEcommunication:	
 17088                           
 17089                           	psect	text56
 17090  3E64                     __ptext56:	
 17091 ;; *************** function _I2C_writeRegister *****************
 17092 ;; Defined at:
 17093 ;;		line 96 in file "I2C.c"
 17094 ;; Parameters:    Size  Location     Type
 17095 ;;  slaveAddress    2    5[COMMON] int 
 17096 ;;  regAddress      2    7[COMMON] int 
 17097 ;;  data            2    9[COMMON] int 
 17098 ;; Auto vars:     Size  Location     Type
 17099 ;;		None
 17100 ;; Return value:  Size  Location     Type
 17101 ;;                  1    wreg      void 
 17102 ;; Registers used:
 17103 ;;		wreg, status,2, status,0, pclath, cstack
 17104 ;; Tracked objects:
 17105 ;;		On entry : 0/0
 17106 ;;		On exit  : 0/0
 17107 ;;		Unchanged: 0/0
 17108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17109 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17112 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17113 ;;Total ram usage:        6 bytes
 17114 ;; Hardware stack levels used:    1
 17115 ;; Hardware stack levels required when called:    2
 17116 ;; This function calls:
 17117 ;;		_send_I2C_controlByte
 17118 ;;		_send_I2C_data
 17119 ;;		_send_I2C_startBit
 17120 ;;		_send_I2C_stopBit
 17121 ;; This function is called by:
 17122 ;;		_beginAFEcommunication
 17123 ;;		_setShortCircuitProtection
 17124 ;;		_setOverCurrentDischargeProtection
 17125 ;;		_setCellUndervoltageProtection
 17126 ;;		_setCellOvervoltageProtection
 17127 ;;		_updateCurrent
 17128 ;; This function uses a non-reentrant model
 17129 ;;
 17130                           
 17131                           
 17132                           ;psect for function _I2C_writeRegister
 17133  3E64                     _I2C_writeRegister:	
 17134                           
 17135                           ;I2C.c: 97:     send_I2C_startBit();
 17136                           
 17137                           ;incstack = 0
 17138                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 17139  3E64  31BD  2510  31BE   	fcall	_send_I2C_startBit
 17140                           
 17141                           ;I2C.c: 98:     send_I2C_controlByte(slaveAddress, 0);
 17142  3E67  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 17143  3E68  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 17144  3E69  0875               	movf	I2C_writeRegister@slaveAddress,w
 17145  3E6A  00F1               	movwf	send_I2C_controlByte@BlockAddress
 17146  3E6B  3000               	movlw	0
 17147  3E6C  00F3               	movwf	send_I2C_controlByte@RW_bit
 17148  3E6D  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 17149  3E6E  31BD  2544  31BE   	fcall	_send_I2C_controlByte
 17150                           
 17151                           ;I2C.c: 99:     send_I2C_data(regAddress);
 17152  3E71  0878               	movf	I2C_writeRegister@regAddress+1,w
 17153  3E72  00F2               	movwf	send_I2C_data@databyte+1
 17154  3E73  0877               	movf	I2C_writeRegister@regAddress,w
 17155  3E74  00F1               	movwf	send_I2C_data@databyte
 17156  3E75  31BD  2532  31BE   	fcall	_send_I2C_data
 17157                           
 17158                           ;I2C.c: 100:     send_I2C_data(data);
 17159  3E78  087A               	movf	I2C_writeRegister@data+1,w
 17160  3E79  00F2               	movwf	send_I2C_data@databyte+1
 17161  3E7A  0879               	movf	I2C_writeRegister@data,w
 17162  3E7B  00F1               	movwf	send_I2C_data@databyte
 17163  3E7C  31BD  2532  31BE   	fcall	_send_I2C_data
 17164                           
 17165                           ;I2C.c: 101:     send_I2C_stopBit();
 17166  3E7F  31BD  2518         	fcall	_send_I2C_stopBit
 17167  3E81  0008               	return
 17168  3E82                     __end_of_I2C_writeRegister:	
 17169                           
 17170                           	psect	text57
 17171  3EE1                     __ptext57:	
 17172 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 17173 ;; Defined at:
 17174 ;;		line 43 in file "RGB.c"
 17175 ;; Parameters:    Size  Location     Type
 17176 ;;		None
 17177 ;; Auto vars:     Size  Location     Type
 17178 ;;		None
 17179 ;; Return value:  Size  Location     Type
 17180 ;;                  1    wreg      void 
 17181 ;; Registers used:
 17182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17183 ;; Tracked objects:
 17184 ;;		On entry : 0/0
 17185 ;;		On exit  : 0/0
 17186 ;;		Unchanged: 0/0
 17187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17192 ;;Total ram usage:        1 bytes
 17193 ;; Hardware stack levels used:    1
 17194 ;; Hardware stack levels required when called:    2
 17195 ;; This function calls:
 17196 ;;		_RGB_color
 17197 ;; This function is called by:
 17198 ;;		_statemachine
 17199 ;; This function uses a non-reentrant model
 17200 ;;
 17201                           
 17202                           
 17203                           ;psect for function _RGB_AWAIT_AFE_CONN
 17204  3EE1                     _RGB_AWAIT_AFE_CONN:	
 17205                           
 17206                           ;RGB.c: 45:     if (toggleColor) {
 17207                           
 17208                           ;incstack = 0
 17209                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17210  3EE1  087C               	movf	_toggleColor,w
 17211  3EE2  1903               	btfsc	3,2
 17212  3EE3  2EF3               	goto	l6865
 17213                           
 17214                           ;RGB.c: 46:         toggleColor = !toggleColor;
 17215  3EE4  087C               	movf	_toggleColor,w
 17216  3EE5  1D03               	btfss	3,2
 17217  3EE6  2EE9               	goto	u9470
 17218  3EE7  3001               	movlw	1
 17219  3EE8  2EEA               	goto	u9480
 17220  3EE9                     u9470:	
 17221  3EE9  3000               	movlw	0
 17222  3EEA                     u9480:	
 17223  3EEA  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 17224  3EEB  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 17225  3EEC  00FC               	movwf	_toggleColor
 17226                           
 17227                           ;RGB.c: 47:         RGB_color(0);
 17228  3EED  3000               	movlw	0
 17229  3EEE  00F1               	movwf	RGB_color@color
 17230  3EEF  00F2               	movwf	RGB_color@color+1
 17231  3EF0  31BE  26C0         	fcall	_RGB_color
 17232                           
 17233                           ;RGB.c: 48:     } else {
 17234  3EF2  0008               	return
 17235  3EF3                     l6865:	
 17236                           
 17237                           ;RGB.c: 49:         toggleColor = !toggleColor;
 17238  3EF3  087C               	movf	_toggleColor,w
 17239  3EF4  1D03               	btfss	3,2
 17240  3EF5  2EF8               	goto	u9490
 17241  3EF6  3001               	movlw	1
 17242  3EF7  2EF9               	goto	u9500
 17243  3EF8                     u9490:	
 17244  3EF8  3000               	movlw	0
 17245  3EF9                     u9500:	
 17246  3EF9  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 17247  3EFA  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 17248  3EFB  00FC               	movwf	_toggleColor
 17249                           
 17250                           ;RGB.c: 50:         RGB_color(1);
 17251  3EFC  3001               	movlw	1
 17252  3EFD  00F1               	movwf	RGB_color@color
 17253  3EFE  3000               	movlw	0
 17254  3EFF  00F2               	movwf	RGB_color@color+1
 17255  3F00  31BE  26C0         	fcall	_RGB_color
 17256  3F02  0008               	return
 17257  3F03                     __end_of_RGB_AWAIT_AFE_CONN:	
 17258                           
 17259                           	psect	text58
 17260  3EC0                     __ptext58:	
 17261 ;; *************** function _RGB_color *****************
 17262 ;; Defined at:
 17263 ;;		line 17 in file "RGB.c"
 17264 ;; Parameters:    Size  Location     Type
 17265 ;;  color           2    1[COMMON] int 
 17266 ;; Auto vars:     Size  Location     Type
 17267 ;;		None
 17268 ;; Return value:  Size  Location     Type
 17269 ;;                  1    wreg      void 
 17270 ;; Registers used:
 17271 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 17272 ;; Tracked objects:
 17273 ;;		On entry : 0/0
 17274 ;;		On exit  : 0/0
 17275 ;;		Unchanged: 0/0
 17276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17280 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17281 ;;Total ram usage:        2 bytes
 17282 ;; Hardware stack levels used:    1
 17283 ;; Hardware stack levels required when called:    1
 17284 ;; This function calls:
 17285 ;;		Nothing
 17286 ;; This function is called by:
 17287 ;;		_statemachine
 17288 ;;		_RGB_AWAIT_AFE_CONN
 17289 ;;		_watchdog_timeout_shutdown
 17290 ;; This function uses a non-reentrant model
 17291 ;;
 17292                           
 17293                           
 17294                           ;psect for function _RGB_color
 17295  3EC0                     _RGB_color:	
 17296                           
 17297                           ;RGB.c: 19:     switch (color) {
 17298                           
 17299                           ;incstack = 0
 17300                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 17301  3EC0  2ED0               	goto	l6681
 17302  3EC1                     l341:	
 17303                           ;RGB.c: 20:         case 0:
 17304                           
 17305                           
 17306                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 17307  3EC1  0022               	movlb	2	; select bank2
 17308  3EC2  120C               	bcf	12,4	;volatile
 17309                           
 17310                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 17311  3EC3  168C               	bsf	12,5	;volatile
 17312                           
 17313                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 17314  3EC4  1410               	bsf	16,0	;volatile
 17315                           
 17316                           ;RGB.c: 24:             break;
 17317  3EC5  0008               	return
 17318  3EC6                     l343:	
 17319                           ;RGB.c: 25:         case 1:
 17320                           
 17321                           
 17322                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 17323  3EC6  0022               	movlb	2	; select bank2
 17324  3EC7  160C               	bsf	12,4	;volatile
 17325                           
 17326                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 17327  3EC8  128C               	bcf	12,5	;volatile
 17328                           
 17329                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 17330  3EC9  1410               	bsf	16,0	;volatile
 17331                           
 17332                           ;RGB.c: 29:             break;
 17333  3ECA  0008               	return
 17334  3ECB                     l344:	
 17335                           ;RGB.c: 30:         case 2:
 17336                           
 17337                           
 17338                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 17339  3ECB  0022               	movlb	2	; select bank2
 17340  3ECC  160C               	bsf	12,4	;volatile
 17341                           
 17342                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 17343  3ECD  168C               	bsf	12,5	;volatile
 17344                           
 17345                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 17346  3ECE  1010               	bcf	16,0	;volatile
 17347                           
 17348                           ;RGB.c: 34:             break;
 17349  3ECF  0008               	return
 17350  3ED0                     l6681:	
 17351                           
 17352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17353                           ; Switch size 1, requested type "simple"
 17354                           ; Number of cases is 1, Range of values is 0 to 0
 17355                           ; switch strategies available:
 17356                           ; Name         Instructions Cycles
 17357                           ; simple_byte            4     3 (average)
 17358                           ; direct_byte            8     6 (fixed)
 17359                           ; jumptable            260     6 (fixed)
 17360                           ;	Chosen strategy is simple_byte
 17361  3ED0  0872               	movf	RGB_color@color+1,w
 17362  3ED1  3A00               	xorlw	0	; case 0
 17363  3ED2  1903               	skipnz
 17364  3ED3  2ED5               	goto	l8877
 17365  3ED4  2EE0               	goto	l345
 17366  3ED5                     l8877:	
 17367                           
 17368                           ; Switch size 1, requested type "simple"
 17369                           ; Number of cases is 3, Range of values is 0 to 2
 17370                           ; switch strategies available:
 17371                           ; Name         Instructions Cycles
 17372                           ; simple_byte           10     6 (average)
 17373                           ; direct_byte           12     6 (fixed)
 17374                           ; jumptable            260     6 (fixed)
 17375                           ;	Chosen strategy is simple_byte
 17376  3ED5  0871               	movf	RGB_color@color,w
 17377  3ED6  3A00               	xorlw	0	; case 0
 17378  3ED7  1903               	skipnz
 17379  3ED8  2EC1               	goto	l341
 17380  3ED9  3A01               	xorlw	1	; case 1
 17381  3EDA  1903               	skipnz
 17382  3EDB  2EC6               	goto	l343
 17383  3EDC  3A03               	xorlw	3	; case 2
 17384  3EDD  1903               	skipnz
 17385  3EDE  2ECB               	goto	l344
 17386  3EDF  2EE0               	goto	l345
 17387  3EE0                     l345:	
 17388  3EE0  0008               	return
 17389  3EE1                     __end_of_RGB_color:	
 17390                           
 17391                           	psect	text59
 17392  33F7                     __ptext59:	
 17393 ;; *************** function _AFE_getSetShortCircuitCurrent *****************
 17394 ;; Defined at:
 17395 ;;		line 250 in file "BQ76920.c"
 17396 ;; Parameters:    Size  Location     Type
 17397 ;;		None
 17398 ;; Auto vars:     Size  Location     Type
 17399 ;;		None
 17400 ;; Return value:  Size  Location     Type
 17401 ;;                  4    9[BANK1 ] long 
 17402 ;; Registers used:
 17403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17404 ;; Tracked objects:
 17405 ;;		On entry : 0/0
 17406 ;;		On exit  : 0/0
 17407 ;;		Unchanged: 0/0
 17408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17409 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17411 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17412 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17413 ;;Total ram usage:        8 bytes
 17414 ;; Hardware stack levels used:    1
 17415 ;; Hardware stack levels required when called:    2
 17416 ;; This function calls:
 17417 ;;		___fldiv
 17418 ;;		___fltol
 17419 ;;		___xxtofl
 17420 ;; This function is called by:
 17421 ;;		_statemachine
 17422 ;; This function uses a non-reentrant model
 17423 ;;
 17424                           
 17425                           
 17426                           ;psect for function _AFE_getSetShortCircuitCurrent
 17427  33F7                     _AFE_getSetShortCircuitCurrent:	
 17428                           
 17429                           ;BQ76920.c: 251:     return (long) (SCD_threshold_setting[protect1.bits.SCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 17430                           
 17431                           ;incstack = 0
 17432                           ; Regs used in _AFE_getSetShortCircuitCurrent: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 17433  33F7  0023               	movlb	3	; select bank3
 17434  33F8  084A               	movf	BQ76920@protect1^(0+384),w
 17435  33F9  3907               	andlw	7
 17436  33FA  0021               	movlb	1	; select bank1
 17437  33FB  00AD               	movwf	??_AFE_getSetShortCircuitCurrent^(0+128)
 17438  33FC  01AE               	clrf	(??_AFE_getSetShortCircuitCurrent^(0+128)+1)
 17439  33FD  35AD               	lslf	??_AFE_getSetShortCircuitCurrent^(0+128),f
 17440  33FE  0DAE               	rlf	(??_AFE_getSetShortCircuitCurrent^(0+128)+1),f
 17441  33FF  301C               	movlw	low (_SCD_threshold_setting| (0+32768))
 17442  3400  072D               	addwf	??_AFE_getSetShortCircuitCurrent^(0+128),w
 17443  3401  0084               	movwf	4
 17444  3402  30BB               	movlw	high (_SCD_threshold_setting| (0+32768))
 17445  3403  3D2E               	addwfc	(??_AFE_getSetShortCircuitCurrent+1)^(0+128),w
 17446  3404  0085               	movwf	5
 17447  3405  3F00               	moviw [0]fsr0
 17448  3406  00AF               	movwf	(??_AFE_getSetShortCircuitCurrent+2)^(0+128)
 17449  3407  3F01               	moviw [1]fsr0
 17450  3408  00B0               	movwf	((??_AFE_getSetShortCircuitCurrent+2)^(0+128)+1)
 17451  3409  082F               	movf	(??_AFE_getSetShortCircuitCurrent+2)^(0+128),w
 17452  340A  00F1               	movwf	___xxtofl@val
 17453  340B  0830               	movf	(??_AFE_getSetShortCircuitCurrent+3)^(0+128),w
 17454  340C  00F2               	movwf	___xxtofl@val+1
 17455  340D  0D89               	rlf	9,f
 17456  340E  3B89               	subwfb	9,f
 17457  340F  0989               	comf	9,f
 17458  3410  00F3               	movwf	___xxtofl@val+2
 17459  3411  00F4               	movwf	___xxtofl@val+3
 17460  3412  3001               	movlw	1
 17461  3413  31A9  213F  31B3   	fcall	___xxtofl
 17462  3416  0874               	movf	?___xxtofl+3,w
 17463  3417  0020               	movlb	0	; select bank0
 17464  3418  00C7               	movwf	___fldiv@b+3
 17465  3419  0873               	movf	?___xxtofl+2,w
 17466  341A  00C6               	movwf	___fldiv@b+2
 17467  341B  0872               	movf	?___xxtofl+1,w
 17468  341C  00C5               	movwf	___fldiv@b+1
 17469  341D  0871               	movf	?___xxtofl,w
 17470  341E  00C4               	movwf	___fldiv@b
 17471  341F  0023               	movlb	3	; select bank3
 17472  3420  082D               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17473  3421  0020               	movlb	0	; select bank0
 17474  3422  00C3               	movwf	___fldiv@a+3
 17475  3423  0023               	movlb	3	; select bank3
 17476  3424  082C               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17477  3425  0020               	movlb	0	; select bank0
 17478  3426  00C2               	movwf	___fldiv@a+2
 17479  3427  0023               	movlb	3	; select bank3
 17480  3428  082B               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17481  3429  0020               	movlb	0	; select bank0
 17482  342A  00C1               	movwf	___fldiv@a+1
 17483  342B  0023               	movlb	3	; select bank3
 17484  342C  082A               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17485  342D  0020               	movlb	0	; select bank0
 17486  342E  00C0               	movwf	___fldiv@a
 17487  342F  319A  22B3  31B3   	fcall	___fldiv
 17488  3432  0020               	movlb	0	; select bank0
 17489  3433  0843               	movf	?___fldiv+3,w
 17490  3434  0021               	movlb	1	; select bank1
 17491  3435  00A3               	movwf	(___fltol@f1+3)^(0+128)
 17492  3436  0020               	movlb	0	; select bank0
 17493  3437  0842               	movf	?___fldiv+2,w
 17494  3438  0021               	movlb	1	; select bank1
 17495  3439  00A2               	movwf	(___fltol@f1+2)^(0+128)
 17496  343A  0020               	movlb	0	; select bank0
 17497  343B  0841               	movf	?___fldiv+1,w
 17498  343C  0021               	movlb	1	; select bank1
 17499  343D  00A1               	movwf	(___fltol@f1+1)^(0+128)
 17500  343E  0020               	movlb	0	; select bank0
 17501  343F  0840               	movf	?___fldiv,w
 17502  3440  0021               	movlb	1	; select bank1
 17503  3441  00A0               	movwf	___fltol@f1^(0+128)
 17504  3442  31B4  244E         	fcall	___fltol
 17505  3444  0021               	movlb	1	; select bank1
 17506  3445  0823               	movf	(?___fltol+3)^(0+128),w
 17507  3446  00AC               	movwf	(?_AFE_getSetShortCircuitCurrent+3)^(0+128)
 17508  3447  0822               	movf	(?___fltol+2)^(0+128),w
 17509  3448  00AB               	movwf	(?_AFE_getSetShortCircuitCurrent+2)^(0+128)
 17510  3449  0821               	movf	(?___fltol+1)^(0+128),w
 17511  344A  00AA               	movwf	(?_AFE_getSetShortCircuitCurrent+1)^(0+128)
 17512  344B  0820               	movf	?___fltol^(0+128),w
 17513  344C  00A9               	movwf	?_AFE_getSetShortCircuitCurrent^(0+128)
 17514  344D  0008               	return
 17515  344E                     __end_of_AFE_getSetShortCircuitCurrent:	
 17516                           
 17517                           	psect	text60
 17518  3D4E                     __ptext60:	
 17519 ;; *************** function _AFE_getSetCurrentSenseRes *****************
 17520 ;; Defined at:
 17521 ;;		line 246 in file "BQ76920.c"
 17522 ;; Parameters:    Size  Location     Type
 17523 ;;		None
 17524 ;; Auto vars:     Size  Location     Type
 17525 ;;		None
 17526 ;; Return value:  Size  Location     Type
 17527 ;;                  4    1[COMMON] float 
 17528 ;; Registers used:
 17529 ;;		wreg
 17530 ;; Tracked objects:
 17531 ;;		On entry : 0/0
 17532 ;;		On exit  : 0/0
 17533 ;;		Unchanged: 0/0
 17534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17535 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17538 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17539 ;;Total ram usage:        4 bytes
 17540 ;; Hardware stack levels used:    1
 17541 ;; Hardware stack levels required when called:    1
 17542 ;; This function calls:
 17543 ;;		Nothing
 17544 ;; This function is called by:
 17545 ;;		_statemachine
 17546 ;; This function uses a non-reentrant model
 17547 ;;
 17548                           
 17549                           
 17550                           ;psect for function _AFE_getSetCurrentSenseRes
 17551  3D4E                     _AFE_getSetCurrentSenseRes:	
 17552                           
 17553                           ;BQ76920.c: 247:     return (float) shuntResistorValue_mOhm;
 17554                           
 17555                           ;incstack = 0
 17556                           ; Regs used in _AFE_getSetCurrentSenseRes: [wreg]
 17557  3D4E  0023               	movlb	3	; select bank3
 17558  3D4F  082D               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17559  3D50  00F4               	movwf	?_AFE_getSetCurrentSenseRes+3
 17560  3D51  082C               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17561  3D52  00F3               	movwf	?_AFE_getSetCurrentSenseRes+2
 17562  3D53  082B               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17563  3D54  00F2               	movwf	?_AFE_getSetCurrentSenseRes+1
 17564  3D55  082A               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17565  3D56  00F1               	movwf	?_AFE_getSetCurrentSenseRes
 17566  3D57  0008               	return
 17567  3D58                     __end_of_AFE_getSetCurrentSenseRes:	
 17568                           
 17569                           	psect	text61
 17570  33A0                     __ptext61:	
 17571 ;; *************** function _AFE_getOverCurrentDischargeCurrent *****************
 17572 ;; Defined at:
 17573 ;;		line 254 in file "BQ76920.c"
 17574 ;; Parameters:    Size  Location     Type
 17575 ;;		None
 17576 ;; Auto vars:     Size  Location     Type
 17577 ;;		None
 17578 ;; Return value:  Size  Location     Type
 17579 ;;                  4    9[BANK1 ] long 
 17580 ;; Registers used:
 17581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17582 ;; Tracked objects:
 17583 ;;		On entry : 0/0
 17584 ;;		On exit  : 0/0
 17585 ;;		Unchanged: 0/0
 17586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17587 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17589 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17590 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17591 ;;Total ram usage:        8 bytes
 17592 ;; Hardware stack levels used:    1
 17593 ;; Hardware stack levels required when called:    2
 17594 ;; This function calls:
 17595 ;;		___fldiv
 17596 ;;		___fltol
 17597 ;;		___xxtofl
 17598 ;; This function is called by:
 17599 ;;		_statemachine
 17600 ;; This function uses a non-reentrant model
 17601 ;;
 17602                           
 17603                           
 17604                           ;psect for function _AFE_getOverCurrentDischargeCurrent
 17605  33A0                     _AFE_getOverCurrentDischargeCurrent:	
 17606                           
 17607                           ;BQ76920.c: 255:     return (long) (OCD_threshold_setting[protect2.bits.OCD_THRESH]) / s
      +                          huntResistorValue_mOhm;
 17608                           
 17609                           ;incstack = 0
 17610                           ; Regs used in _AFE_getOverCurrentDischargeCurrent: [wreg-fsr0h+status,2+status,0+pclath
      +                          +cstack]
 17611  33A0  0023               	movlb	3	; select bank3
 17612  33A1  0849               	movf	BQ76920@protect2^(0+384),w
 17613  33A2  390F               	andlw	15
 17614  33A3  0021               	movlb	1	; select bank1
 17615  33A4  00AD               	movwf	??_AFE_getOverCurrentDischargeCurrent^(0+128)
 17616  33A5  01AE               	clrf	(??_AFE_getOverCurrentDischargeCurrent^(0+128)+1)
 17617  33A6  35AD               	lslf	??_AFE_getOverCurrentDischargeCurrent^(0+128),f
 17618  33A7  0DAE               	rlf	(??_AFE_getOverCurrentDischargeCurrent^(0+128)+1),f
 17619  33A8  30F8               	movlw	low (_OCD_threshold_setting| (0+32768))
 17620  33A9  072D               	addwf	??_AFE_getOverCurrentDischargeCurrent^(0+128),w
 17621  33AA  0084               	movwf	4
 17622  33AB  30B9               	movlw	high (_OCD_threshold_setting| (0+32768))
 17623  33AC  3D2E               	addwfc	(??_AFE_getOverCurrentDischargeCurrent+1)^(0+128),w
 17624  33AD  0085               	movwf	5
 17625  33AE  3F00               	moviw [0]fsr0
 17626  33AF  00AF               	movwf	(??_AFE_getOverCurrentDischargeCurrent+2)^(0+128)
 17627  33B0  3F01               	moviw [1]fsr0
 17628  33B1  00B0               	movwf	((??_AFE_getOverCurrentDischargeCurrent+2)^(0+128)+1)
 17629  33B2  082F               	movf	(??_AFE_getOverCurrentDischargeCurrent+2)^(0+128),w
 17630  33B3  00F1               	movwf	___xxtofl@val
 17631  33B4  0830               	movf	(??_AFE_getOverCurrentDischargeCurrent+3)^(0+128),w
 17632  33B5  00F2               	movwf	___xxtofl@val+1
 17633  33B6  0D89               	rlf	9,f
 17634  33B7  3B89               	subwfb	9,f
 17635  33B8  0989               	comf	9,f
 17636  33B9  00F3               	movwf	___xxtofl@val+2
 17637  33BA  00F4               	movwf	___xxtofl@val+3
 17638  33BB  3001               	movlw	1
 17639  33BC  31A9  213F  31B3   	fcall	___xxtofl
 17640  33BF  0874               	movf	?___xxtofl+3,w
 17641  33C0  0020               	movlb	0	; select bank0
 17642  33C1  00C7               	movwf	___fldiv@b+3
 17643  33C2  0873               	movf	?___xxtofl+2,w
 17644  33C3  00C6               	movwf	___fldiv@b+2
 17645  33C4  0872               	movf	?___xxtofl+1,w
 17646  33C5  00C5               	movwf	___fldiv@b+1
 17647  33C6  0871               	movf	?___xxtofl,w
 17648  33C7  00C4               	movwf	___fldiv@b
 17649  33C8  0023               	movlb	3	; select bank3
 17650  33C9  082D               	movf	(BQ76920@shuntResistorValue_mOhm+3)^(0+384),w
 17651  33CA  0020               	movlb	0	; select bank0
 17652  33CB  00C3               	movwf	___fldiv@a+3
 17653  33CC  0023               	movlb	3	; select bank3
 17654  33CD  082C               	movf	(BQ76920@shuntResistorValue_mOhm+2)^(0+384),w
 17655  33CE  0020               	movlb	0	; select bank0
 17656  33CF  00C2               	movwf	___fldiv@a+2
 17657  33D0  0023               	movlb	3	; select bank3
 17658  33D1  082B               	movf	(BQ76920@shuntResistorValue_mOhm+1)^(0+384),w
 17659  33D2  0020               	movlb	0	; select bank0
 17660  33D3  00C1               	movwf	___fldiv@a+1
 17661  33D4  0023               	movlb	3	; select bank3
 17662  33D5  082A               	movf	BQ76920@shuntResistorValue_mOhm^(0+384),w
 17663  33D6  0020               	movlb	0	; select bank0
 17664  33D7  00C0               	movwf	___fldiv@a
 17665  33D8  319A  22B3  31B3   	fcall	___fldiv
 17666  33DB  0020               	movlb	0	; select bank0
 17667  33DC  0843               	movf	?___fldiv+3,w
 17668  33DD  0021               	movlb	1	; select bank1
 17669  33DE  00A3               	movwf	(___fltol@f1+3)^(0+128)
 17670  33DF  0020               	movlb	0	; select bank0
 17671  33E0  0842               	movf	?___fldiv+2,w
 17672  33E1  0021               	movlb	1	; select bank1
 17673  33E2  00A2               	movwf	(___fltol@f1+2)^(0+128)
 17674  33E3  0020               	movlb	0	; select bank0
 17675  33E4  0841               	movf	?___fldiv+1,w
 17676  33E5  0021               	movlb	1	; select bank1
 17677  33E6  00A1               	movwf	(___fltol@f1+1)^(0+128)
 17678  33E7  0020               	movlb	0	; select bank0
 17679  33E8  0840               	movf	?___fldiv,w
 17680  33E9  0021               	movlb	1	; select bank1
 17681  33EA  00A0               	movwf	___fltol@f1^(0+128)
 17682  33EB  31B4  244E         	fcall	___fltol
 17683  33ED  0021               	movlb	1	; select bank1
 17684  33EE  0823               	movf	(?___fltol+3)^(0+128),w
 17685  33EF  00AC               	movwf	(?_AFE_getOverCurrentDischargeCurrent+3)^(0+128)
 17686  33F0  0822               	movf	(?___fltol+2)^(0+128),w
 17687  33F1  00AB               	movwf	(?_AFE_getOverCurrentDischargeCurrent+2)^(0+128)
 17688  33F2  0821               	movf	(?___fltol+1)^(0+128),w
 17689  33F3  00AA               	movwf	(?_AFE_getOverCurrentDischargeCurrent+1)^(0+128)
 17690  33F4  0820               	movf	?___fltol^(0+128),w
 17691  33F5  00A9               	movwf	?_AFE_getOverCurrentDischargeCurrent^(0+128)
 17692  33F6  0008               	return
 17693  33F7                     __end_of_AFE_getOverCurrentDischargeCurrent:	
 17694                           
 17695                           	psect	text62
 17696  3D02                     __ptext62:	
 17697 ;; *************** function _AFE_UPDATE *****************
 17698 ;; Defined at:
 17699 ;;		line 166 in file "BQ76920.c"
 17700 ;; Parameters:    Size  Location     Type
 17701 ;;		None
 17702 ;; Auto vars:     Size  Location     Type
 17703 ;;		None
 17704 ;; Return value:  Size  Location     Type
 17705 ;;                  1    wreg      void 
 17706 ;; Registers used:
 17707 ;;		wreg, status,2, status,0, pclath, cstack
 17708 ;; Tracked objects:
 17709 ;;		On entry : 0/0
 17710 ;;		On exit  : 0/0
 17711 ;;		Unchanged: 0/0
 17712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17717 ;;Total ram usage:        0 bytes
 17718 ;; Hardware stack levels used:    1
 17719 ;; Hardware stack levels required when called:    4
 17720 ;; This function calls:
 17721 ;;		_updateVoltages
 17722 ;; This function is called by:
 17723 ;;		_statemachine
 17724 ;; This function uses a non-reentrant model
 17725 ;;
 17726                           
 17727                           
 17728                           ;psect for function _AFE_UPDATE
 17729  3D02                     _AFE_UPDATE:	
 17730                           
 17731                           ;BQ76920.c: 168:     updateVoltages();
 17732                           
 17733                           ;incstack = 0
 17734                           ; Regs used in _AFE_UPDATE: [wreg+status,2+status,0+pclath+cstack]
 17735  3D02  3195  252D         	fcall	_updateVoltages
 17736  3D04  0008               	return
 17737  3D05                     __end_of_AFE_UPDATE:	
 17738                           
 17739                           	psect	text63
 17740  152D                     __ptext63:	
 17741 ;; *************** function _updateVoltages *****************
 17742 ;; Defined at:
 17743 ;;		line 202 in file "BQ76920.c"
 17744 ;; Parameters:    Size  Location     Type
 17745 ;;		None
 17746 ;; Auto vars:     Size  Location     Type
 17747 ;;  adcVal          4   16[BANK1 ] long 
 17748 ;; Return value:  Size  Location     Type
 17749 ;;                  1    wreg      void 
 17750 ;; Registers used:
 17751 ;;		wreg, status,2, status,0, pclath, cstack
 17752 ;; Tracked objects:
 17753 ;;		On entry : 0/0
 17754 ;;		On exit  : 0/0
 17755 ;;		Unchanged: 0/0
 17756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17758 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17759 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17760 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17761 ;;Total ram usage:       11 bytes
 17762 ;; Hardware stack levels used:    1
 17763 ;; Hardware stack levels required when called:    3
 17764 ;; This function calls:
 17765 ;;		___aldiv
 17766 ;;		___fladd
 17767 ;;		___fldiv
 17768 ;;		___flmul
 17769 ;;		___fltol
 17770 ;;		___lmul
 17771 ;;		___xxtofl
 17772 ;;		_readRegister
 17773 ;; This function is called by:
 17774 ;;		_AFE_UPDATE
 17775 ;; This function uses a non-reentrant model
 17776 ;;
 17777                           
 17778                           
 17779                           ;psect for function _updateVoltages
 17780  152D                     _updateVoltages:	
 17781                           
 17782                           ;BQ76920.c: 206:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 17783                           
 17784                           ;incstack = 0
 17785                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 17786  152D  3018               	movlw	24
 17787  152E  00F5               	movwf	readRegister@slaveAddress
 17788  152F  3000               	movlw	0
 17789  1530  00F6               	movwf	readRegister@slaveAddress+1
 17790  1531  302A               	movlw	42
 17791  1532  00F7               	movwf	readRegister@regAddress
 17792  1533  3000               	movlw	0
 17793  1534  00F8               	movwf	readRegister@regAddress+1
 17794  1535  31B0  2043  3195   	fcall	_readRegister
 17795  1538  0875               	movf	?_readRegister,w
 17796  1539  0021               	movlb	1	; select bank1
 17797  153A  00A9               	movwf	??_updateVoltages^(0+128)
 17798  153B  0876               	movf	?_readRegister+1,w
 17799  153C  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 17800  153D  0829               	movf	??_updateVoltages^(0+128),w
 17801  153E  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 17802  153F  01A9               	clrf	??_updateVoltages^(0+128)
 17803  1540  3018               	movlw	24
 17804  1541  00F5               	movwf	readRegister@slaveAddress
 17805  1542  3000               	movlw	0
 17806  1543  00F6               	movwf	readRegister@slaveAddress+1
 17807  1544  302B               	movlw	43
 17808  1545  00F7               	movwf	readRegister@regAddress
 17809  1546  3000               	movlw	0
 17810  1547  00F8               	movwf	readRegister@regAddress+1
 17811  1548  31B0  2043  3195   	fcall	_readRegister
 17812  154B  0875               	movf	?_readRegister,w
 17813  154C  0021               	movlb	1	; select bank1
 17814  154D  0429               	iorwf	??_updateVoltages^(0+128),w
 17815  154E  00B0               	movwf	updateVoltages@adcVal^(0+128)
 17816  154F  0876               	movf	?_readRegister+1,w
 17817  1550  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 17818  1551  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 17819  1552  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 17820  1553  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 17821  1554  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 17822  1555  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 17823  1556  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 17824                           
 17825                           ;BQ76920.c: 207:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 17826  1557  0023               	movlb	3	; select bank3
 17827  1558  0851               	movf	_adcGain^(0+384),w
 17828  1559  00F1               	movwf	___xxtofl@val
 17829  155A  0852               	movf	(_adcGain+1)^(0+384),w
 17830  155B  00F2               	movwf	___xxtofl@val+1
 17831  155C  0D89               	rlf	9,f
 17832  155D  3B89               	subwfb	9,f
 17833  155E  0989               	comf	9,f
 17834  155F  00F3               	movwf	___xxtofl@val+2
 17835  1560  00F4               	movwf	___xxtofl@val+3
 17836  1561  3001               	movlw	1
 17837  1562  31A9  213F  3195   	fcall	___xxtofl
 17838  1565  0874               	movf	?___xxtofl+3,w
 17839  1566  0020               	movlb	0	; select bank0
 17840  1567  00AD               	movwf	___flmul@a+3
 17841  1568  0873               	movf	?___xxtofl+2,w
 17842  1569  00AC               	movwf	___flmul@a+2
 17843  156A  0872               	movf	?___xxtofl+1,w
 17844  156B  00AB               	movwf	___flmul@a+1
 17845  156C  0871               	movf	?___xxtofl,w
 17846  156D  00AA               	movwf	___flmul@a
 17847  156E  3040               	movlw	64
 17848  156F  00A9               	movwf	___flmul@b+3
 17849  1570  3080               	movlw	128
 17850  1571  00A8               	movwf	___flmul@b+2
 17851  1572  3000               	movlw	0
 17852  1573  00A7               	movwf	___flmul@b+1
 17853  1574  3000               	movlw	0
 17854  1575  00A6               	movwf	___flmul@b
 17855  1576  3190  20D5  3195   	fcall	___flmul
 17856  1579  0020               	movlb	0	; select bank0
 17857  157A  0829               	movf	?___flmul+3,w
 17858  157B  0021               	movlb	1	; select bank1
 17859  157C  00AF               	movwf	(_updateVoltages$2139+3)^(0+128)
 17860  157D  0020               	movlb	0	; select bank0
 17861  157E  0828               	movf	?___flmul+2,w
 17862  157F  0021               	movlb	1	; select bank1
 17863  1580  00AE               	movwf	(_updateVoltages$2139+2)^(0+128)
 17864  1581  0020               	movlb	0	; select bank0
 17865  1582  0827               	movf	?___flmul+1,w
 17866  1583  0021               	movlb	1	; select bank1
 17867  1584  00AD               	movwf	(_updateVoltages$2139+1)^(0+128)
 17868  1585  0020               	movlb	0	; select bank0
 17869  1586  0826               	movf	?___flmul,w
 17870  1587  0021               	movlb	1	; select bank1
 17871  1588  00AC               	movwf	_updateVoltages$2139^(0+128)
 17872                           
 17873                           ;BQ76920.c: 207:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 17874  1589  082F               	movf	(_updateVoltages$2139+3)^(0+128),w
 17875  158A  0020               	movlb	0	; select bank0
 17876  158B  00AD               	movwf	___flmul@a+3
 17877  158C  0021               	movlb	1	; select bank1
 17878  158D  082E               	movf	(_updateVoltages$2139+2)^(0+128),w
 17879  158E  0020               	movlb	0	; select bank0
 17880  158F  00AC               	movwf	___flmul@a+2
 17881  1590  0021               	movlb	1	; select bank1
 17882  1591  082D               	movf	(_updateVoltages$2139+1)^(0+128),w
 17883  1592  0020               	movlb	0	; select bank0
 17884  1593  00AB               	movwf	___flmul@a+1
 17885  1594  0021               	movlb	1	; select bank1
 17886  1595  082C               	movf	_updateVoltages$2139^(0+128),w
 17887  1596  0020               	movlb	0	; select bank0
 17888  1597  00AA               	movwf	___flmul@a
 17889  1598  0021               	movlb	1	; select bank1
 17890  1599  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 17891  159A  00F4               	movwf	___xxtofl@val+3
 17892  159B  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 17893  159C  00F3               	movwf	___xxtofl@val+2
 17894  159D  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 17895  159E  00F2               	movwf	___xxtofl@val+1
 17896  159F  0830               	movf	updateVoltages@adcVal^(0+128),w
 17897  15A0  00F1               	movwf	___xxtofl@val
 17898  15A1  3001               	movlw	1
 17899  15A2  31A9  213F  3195   	fcall	___xxtofl
 17900  15A5  0874               	movf	?___xxtofl+3,w
 17901  15A6  0020               	movlb	0	; select bank0
 17902  15A7  00A9               	movwf	___flmul@b+3
 17903  15A8  0873               	movf	?___xxtofl+2,w
 17904  15A9  00A8               	movwf	___flmul@b+2
 17905  15AA  0872               	movf	?___xxtofl+1,w
 17906  15AB  00A7               	movwf	___flmul@b+1
 17907  15AC  0871               	movf	?___xxtofl,w
 17908  15AD  00A6               	movwf	___flmul@b
 17909  15AE  3190  20D5  3195   	fcall	___flmul
 17910  15B1  0020               	movlb	0	; select bank0
 17911  15B2  0829               	movf	?___flmul+3,w
 17912  15B3  00C7               	movwf	___fldiv@b+3
 17913  15B4  0828               	movf	?___flmul+2,w
 17914  15B5  00C6               	movwf	___fldiv@b+2
 17915  15B6  0827               	movf	?___flmul+1,w
 17916  15B7  00C5               	movwf	___fldiv@b+1
 17917  15B8  0826               	movf	?___flmul,w
 17918  15B9  00C4               	movwf	___fldiv@b
 17919  15BA  3044               	movlw	68
 17920  15BB  00C3               	movwf	___fldiv@a+3
 17921  15BC  307A               	movlw	122
 17922  15BD  00C2               	movwf	___fldiv@a+2
 17923  15BE  3000               	movlw	0
 17924  15BF  00C1               	movwf	___fldiv@a+1
 17925  15C0  3000               	movlw	0
 17926  15C1  00C0               	movwf	___fldiv@a
 17927  15C2  319A  22B3  3195   	fcall	___fldiv
 17928  15C5  0020               	movlb	0	; select bank0
 17929  15C6  0843               	movf	?___fldiv+3,w
 17930  15C7  00E1               	movwf	___fladd@a+3
 17931  15C8  0842               	movf	?___fldiv+2,w
 17932  15C9  00E0               	movwf	___fladd@a+2
 17933  15CA  0841               	movf	?___fldiv+1,w
 17934  15CB  00DF               	movwf	___fladd@a+1
 17935  15CC  0840               	movf	?___fldiv,w
 17936  15CD  00DE               	movwf	___fladd@a
 17937  15CE  0023               	movlb	3	; select bank3
 17938  15CF  0847               	movf	(_adcOffset+1)^(0+384),w
 17939  15D0  0021               	movlb	1	; select bank1
 17940  15D1  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 17941  15D2  0023               	movlb	3	; select bank3
 17942  15D3  0846               	movf	_adcOffset^(0+384),w
 17943  15D4  0021               	movlb	1	; select bank1
 17944  15D5  00A9               	movwf	??_updateVoltages^(0+128)
 17945  15D6  35A9               	lslf	??_updateVoltages^(0+128),f
 17946  15D7  0DAA               	rlf	(??_updateVoltages^(0+128)+1),f
 17947  15D8  35A9               	lslf	??_updateVoltages^(0+128),f
 17948  15D9  0DAA               	rlf	(??_updateVoltages^(0+128)+1),f
 17949  15DA  0829               	movf	??_updateVoltages^(0+128),w
 17950  15DB  00F1               	movwf	___xxtofl@val
 17951  15DC  082A               	movf	(??_updateVoltages+1)^(0+128),w
 17952  15DD  00F2               	movwf	___xxtofl@val+1
 17953  15DE  0D89               	rlf	9,f
 17954  15DF  3B89               	subwfb	9,f
 17955  15E0  0989               	comf	9,f
 17956  15E1  00F3               	movwf	___xxtofl@val+2
 17957  15E2  00F4               	movwf	___xxtofl@val+3
 17958  15E3  3001               	movlw	1
 17959  15E4  31A9  213F  3195   	fcall	___xxtofl
 17960  15E7  0874               	movf	?___xxtofl+3,w
 17961  15E8  0020               	movlb	0	; select bank0
 17962  15E9  00DD               	movwf	___fladd@b+3
 17963  15EA  0873               	movf	?___xxtofl+2,w
 17964  15EB  00DC               	movwf	___fladd@b+2
 17965  15EC  0872               	movf	?___xxtofl+1,w
 17966  15ED  00DB               	movwf	___fladd@b+1
 17967  15EE  0871               	movf	?___xxtofl,w
 17968  15EF  00DA               	movwf	___fladd@b
 17969  15F0  319C  242D  3195   	fcall	___fladd
 17970  15F3  0020               	movlb	0	; select bank0
 17971  15F4  085D               	movf	?___fladd+3,w
 17972  15F5  0021               	movlb	1	; select bank1
 17973  15F6  00A3               	movwf	(___fltol@f1+3)^(0+128)
 17974  15F7  0020               	movlb	0	; select bank0
 17975  15F8  085C               	movf	?___fladd+2,w
 17976  15F9  0021               	movlb	1	; select bank1
 17977  15FA  00A2               	movwf	(___fltol@f1+2)^(0+128)
 17978  15FB  0020               	movlb	0	; select bank0
 17979  15FC  085B               	movf	?___fladd+1,w
 17980  15FD  0021               	movlb	1	; select bank1
 17981  15FE  00A1               	movwf	(___fltol@f1+1)^(0+128)
 17982  15FF  0020               	movlb	0	; select bank0
 17983  1600  085A               	movf	?___fladd,w
 17984  1601  0021               	movlb	1	; select bank1
 17985  1602  00A0               	movwf	___fltol@f1^(0+128)
 17986  1603  31B4  244E  3195   	fcall	___fltol
 17987  1606  0021               	movlb	1	; select bank1
 17988  1607  0823               	movf	(?___fltol+3)^(0+128),w
 17989  1608  0024               	movlb	4	; select bank4
 17990  1609  00AF               	movwf	(_batVoltage+3)^(0+512)
 17991  160A  0021               	movlb	1	; select bank1
 17992  160B  0822               	movf	(?___fltol+2)^(0+128),w
 17993  160C  0024               	movlb	4	; select bank4
 17994  160D  00AE               	movwf	(_batVoltage+2)^(0+512)
 17995  160E  0021               	movlb	1	; select bank1
 17996  160F  0821               	movf	(?___fltol+1)^(0+128),w
 17997  1610  0024               	movlb	4	; select bank4
 17998  1611  00AD               	movwf	(_batVoltage+1)^(0+512)
 17999  1612  0021               	movlb	1	; select bank1
 18000  1613  0820               	movf	?___fltol^(0+128),w
 18001  1614  0024               	movlb	4	; select bank4
 18002  1615  00AC               	movwf	_batVoltage^(0+512)
 18003                           
 18004                           ;BQ76920.c: 228:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 18005  1616  3018               	movlw	24
 18006  1617  00F5               	movwf	readRegister@slaveAddress
 18007  1618  3000               	movlw	0
 18008  1619  00F6               	movwf	readRegister@slaveAddress+1
 18009  161A  300C               	movlw	12
 18010  161B  00F7               	movwf	readRegister@regAddress
 18011  161C  3000               	movlw	0
 18012  161D  00F8               	movwf	readRegister@regAddress+1
 18013  161E  31B0  2043  3195   	fcall	_readRegister
 18014  1621  303F               	movlw	63
 18015  1622  0575               	andwf	?_readRegister,w
 18016  1623  0021               	movlb	1	; select bank1
 18017  1624  00A9               	movwf	??_updateVoltages^(0+128)
 18018  1625  3000               	movlw	0
 18019  1626  0576               	andwf	?_readRegister+1,w
 18020  1627  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 18021  1628  0829               	movf	??_updateVoltages^(0+128),w
 18022  1629  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 18023  162A  01A9               	clrf	??_updateVoltages^(0+128)
 18024  162B  3018               	movlw	24
 18025  162C  00F5               	movwf	readRegister@slaveAddress
 18026  162D  3000               	movlw	0
 18027  162E  00F6               	movwf	readRegister@slaveAddress+1
 18028  162F  300D               	movlw	13
 18029  1630  00F7               	movwf	readRegister@regAddress
 18030  1631  3000               	movlw	0
 18031  1632  00F8               	movwf	readRegister@regAddress+1
 18032  1633  31B0  2043  3195   	fcall	_readRegister
 18033  1636  0875               	movf	?_readRegister,w
 18034  1637  0021               	movlb	1	; select bank1
 18035  1638  0429               	iorwf	??_updateVoltages^(0+128),w
 18036  1639  00B0               	movwf	updateVoltages@adcVal^(0+128)
 18037  163A  0876               	movf	?_readRegister+1,w
 18038  163B  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 18039  163C  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 18040  163D  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 18041  163E  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 18042  163F  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 18043  1640  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 18044  1641  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 18045                           
 18046                           ;BQ76920.c: 229:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 18047  1642  3000               	movlw	0
 18048  1643  0020               	movlb	0	; select bank0
 18049  1644  00A7               	movwf	___aldiv@divisor+3
 18050  1645  3000               	movlw	0
 18051  1646  00A6               	movwf	___aldiv@divisor+2
 18052  1647  3003               	movlw	3
 18053  1648  00A5               	movwf	___aldiv@divisor+1
 18054  1649  30E8               	movlw	232
 18055  164A  00A4               	movwf	___aldiv@divisor
 18056  164B  0023               	movlb	3	; select bank3
 18057  164C  0851               	movf	_adcGain^(0+384),w
 18058  164D  00F1               	movwf	___lmul@multiplier
 18059  164E  0852               	movf	(_adcGain+1)^(0+384),w
 18060  164F  00F2               	movwf	___lmul@multiplier+1
 18061  1650  0D89               	rlf	9,f
 18062  1651  3B89               	subwfb	9,f
 18063  1652  0989               	comf	9,f
 18064  1653  00F3               	movwf	___lmul@multiplier+2
 18065  1654  00F4               	movwf	___lmul@multiplier+3
 18066  1655  0021               	movlb	1	; select bank1
 18067  1656  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 18068  1657  00F8               	movwf	___lmul@multiplicand+3
 18069  1658  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 18070  1659  00F7               	movwf	___lmul@multiplicand+2
 18071  165A  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 18072  165B  00F6               	movwf	___lmul@multiplicand+1
 18073  165C  0830               	movf	updateVoltages@adcVal^(0+128),w
 18074  165D  00F5               	movwf	___lmul@multiplicand
 18075  165E  31BF  279C  3195   	fcall	___lmul
 18076  1661  0874               	movf	?___lmul+3,w
 18077  1662  0020               	movlb	0	; select bank0
 18078  1663  00AB               	movwf	___aldiv@dividend+3
 18079  1664  0873               	movf	?___lmul+2,w
 18080  1665  00AA               	movwf	___aldiv@dividend+2
 18081  1666  0872               	movf	?___lmul+1,w
 18082  1667  00A9               	movwf	___aldiv@dividend+1
 18083  1668  0871               	movf	?___lmul,w
 18084  1669  00A8               	movwf	___aldiv@dividend
 18085  166A  31B6  26FA  3195   	fcall	___aldiv
 18086  166D  0023               	movlb	3	; select bank3
 18087  166E  0846               	movf	_adcOffset^(0+384),w
 18088  166F  0020               	movlb	0	; select bank0
 18089  1670  0724               	addwf	?___aldiv,w
 18090  1671  0023               	movlb	3	; select bank3
 18091  1672  00A0               	movwf	_cellVoltages^(0+384)
 18092  1673  0847               	movf	(_adcOffset+1)^(0+384),w
 18093  1674  0020               	movlb	0	; select bank0
 18094  1675  3D25               	addwfc	?___aldiv+1,w
 18095  1676  0023               	movlb	3	; select bank3
 18096  1677  00A1               	movwf	(_cellVoltages+1)^(0+384)
 18097                           
 18098                           ;BQ76920.c: 230:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 18099  1678  3018               	movlw	24
 18100  1679  00F5               	movwf	readRegister@slaveAddress
 18101  167A  3000               	movlw	0
 18102  167B  00F6               	movwf	readRegister@slaveAddress+1
 18103  167C  300E               	movlw	14
 18104  167D  00F7               	movwf	readRegister@regAddress
 18105  167E  3000               	movlw	0
 18106  167F  00F8               	movwf	readRegister@regAddress+1
 18107  1680  31B0  2043  3195   	fcall	_readRegister
 18108  1683  303F               	movlw	63
 18109  1684  0575               	andwf	?_readRegister,w
 18110  1685  0021               	movlb	1	; select bank1
 18111  1686  00A9               	movwf	??_updateVoltages^(0+128)
 18112  1687  3000               	movlw	0
 18113  1688  0576               	andwf	?_readRegister+1,w
 18114  1689  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 18115  168A  0829               	movf	??_updateVoltages^(0+128),w
 18116  168B  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 18117  168C  01A9               	clrf	??_updateVoltages^(0+128)
 18118  168D  3018               	movlw	24
 18119  168E  00F5               	movwf	readRegister@slaveAddress
 18120  168F  3000               	movlw	0
 18121  1690  00F6               	movwf	readRegister@slaveAddress+1
 18122  1691  300F               	movlw	15
 18123  1692  00F7               	movwf	readRegister@regAddress
 18124  1693  3000               	movlw	0
 18125  1694  00F8               	movwf	readRegister@regAddress+1
 18126  1695  31B0  2043  3195   	fcall	_readRegister
 18127  1698  0875               	movf	?_readRegister,w
 18128  1699  0021               	movlb	1	; select bank1
 18129  169A  0429               	iorwf	??_updateVoltages^(0+128),w
 18130  169B  00B0               	movwf	updateVoltages@adcVal^(0+128)
 18131  169C  0876               	movf	?_readRegister+1,w
 18132  169D  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 18133  169E  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 18134  169F  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 18135  16A0  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 18136  16A1  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 18137  16A2  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 18138  16A3  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 18139                           
 18140                           ;BQ76920.c: 231:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 18141  16A4  3000               	movlw	0
 18142  16A5  0020               	movlb	0	; select bank0
 18143  16A6  00A7               	movwf	___aldiv@divisor+3
 18144  16A7  3000               	movlw	0
 18145  16A8  00A6               	movwf	___aldiv@divisor+2
 18146  16A9  3003               	movlw	3
 18147  16AA  00A5               	movwf	___aldiv@divisor+1
 18148  16AB  30E8               	movlw	232
 18149  16AC  00A4               	movwf	___aldiv@divisor
 18150  16AD  0023               	movlb	3	; select bank3
 18151  16AE  0851               	movf	_adcGain^(0+384),w
 18152  16AF  00F1               	movwf	___lmul@multiplier
 18153  16B0  0852               	movf	(_adcGain+1)^(0+384),w
 18154  16B1  00F2               	movwf	___lmul@multiplier+1
 18155  16B2  0D89               	rlf	9,f
 18156  16B3  3B89               	subwfb	9,f
 18157  16B4  0989               	comf	9,f
 18158  16B5  00F3               	movwf	___lmul@multiplier+2
 18159  16B6  00F4               	movwf	___lmul@multiplier+3
 18160  16B7  0021               	movlb	1	; select bank1
 18161  16B8  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 18162  16B9  00F8               	movwf	___lmul@multiplicand+3
 18163  16BA  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 18164  16BB  00F7               	movwf	___lmul@multiplicand+2
 18165  16BC  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 18166  16BD  00F6               	movwf	___lmul@multiplicand+1
 18167  16BE  0830               	movf	updateVoltages@adcVal^(0+128),w
 18168  16BF  00F5               	movwf	___lmul@multiplicand
 18169  16C0  31BF  279C  3195   	fcall	___lmul
 18170  16C3  0874               	movf	?___lmul+3,w
 18171  16C4  0020               	movlb	0	; select bank0
 18172  16C5  00AB               	movwf	___aldiv@dividend+3
 18173  16C6  0873               	movf	?___lmul+2,w
 18174  16C7  00AA               	movwf	___aldiv@dividend+2
 18175  16C8  0872               	movf	?___lmul+1,w
 18176  16C9  00A9               	movwf	___aldiv@dividend+1
 18177  16CA  0871               	movf	?___lmul,w
 18178  16CB  00A8               	movwf	___aldiv@dividend
 18179  16CC  31B6  26FA  3195   	fcall	___aldiv
 18180  16CF  0023               	movlb	3	; select bank3
 18181  16D0  0846               	movf	_adcOffset^(0+384),w
 18182  16D1  0020               	movlb	0	; select bank0
 18183  16D2  0724               	addwf	?___aldiv,w
 18184  16D3  0023               	movlb	3	; select bank3
 18185  16D4  00A2               	movwf	(_cellVoltages^(0+384)+2)
 18186  16D5  0847               	movf	(_adcOffset+1)^(0+384),w
 18187  16D6  0020               	movlb	0	; select bank0
 18188  16D7  3D25               	addwfc	?___aldiv+1,w
 18189  16D8  0023               	movlb	3	; select bank3
 18190  16D9  00A3               	movwf	((_cellVoltages+1)^(0+384)+2)
 18191                           
 18192                           ;BQ76920.c: 232:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 18193  16DA  3018               	movlw	24
 18194  16DB  00F5               	movwf	readRegister@slaveAddress
 18195  16DC  3000               	movlw	0
 18196  16DD  00F6               	movwf	readRegister@slaveAddress+1
 18197  16DE  3010               	movlw	16
 18198  16DF  00F7               	movwf	readRegister@regAddress
 18199  16E0  3000               	movlw	0
 18200  16E1  00F8               	movwf	readRegister@regAddress+1
 18201  16E2  31B0  2043  3195   	fcall	_readRegister
 18202  16E5  303F               	movlw	63
 18203  16E6  0575               	andwf	?_readRegister,w
 18204  16E7  0021               	movlb	1	; select bank1
 18205  16E8  00A9               	movwf	??_updateVoltages^(0+128)
 18206  16E9  3000               	movlw	0
 18207  16EA  0576               	andwf	?_readRegister+1,w
 18208  16EB  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 18209  16EC  0829               	movf	??_updateVoltages^(0+128),w
 18210  16ED  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 18211  16EE  01A9               	clrf	??_updateVoltages^(0+128)
 18212  16EF  3018               	movlw	24
 18213  16F0  00F5               	movwf	readRegister@slaveAddress
 18214  16F1  3000               	movlw	0
 18215  16F2  00F6               	movwf	readRegister@slaveAddress+1
 18216  16F3  3011               	movlw	17
 18217  16F4  00F7               	movwf	readRegister@regAddress
 18218  16F5  3000               	movlw	0
 18219  16F6  00F8               	movwf	readRegister@regAddress+1
 18220  16F7  31B0  2043  3195   	fcall	_readRegister
 18221  16FA  0875               	movf	?_readRegister,w
 18222  16FB  0021               	movlb	1	; select bank1
 18223  16FC  0429               	iorwf	??_updateVoltages^(0+128),w
 18224  16FD  00B0               	movwf	updateVoltages@adcVal^(0+128)
 18225  16FE  0876               	movf	?_readRegister+1,w
 18226  16FF  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 18227  1700  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 18228  1701  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 18229  1702  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 18230  1703  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 18231  1704  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 18232  1705  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 18233                           
 18234                           ;BQ76920.c: 233:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 18235  1706  3000               	movlw	0
 18236  1707  0020               	movlb	0	; select bank0
 18237  1708  00A7               	movwf	___aldiv@divisor+3
 18238  1709  3000               	movlw	0
 18239  170A  00A6               	movwf	___aldiv@divisor+2
 18240  170B  3003               	movlw	3
 18241  170C  00A5               	movwf	___aldiv@divisor+1
 18242  170D  30E8               	movlw	232
 18243  170E  00A4               	movwf	___aldiv@divisor
 18244  170F  0023               	movlb	3	; select bank3
 18245  1710  0851               	movf	_adcGain^(0+384),w
 18246  1711  00F1               	movwf	___lmul@multiplier
 18247  1712  0852               	movf	(_adcGain+1)^(0+384),w
 18248  1713  00F2               	movwf	___lmul@multiplier+1
 18249  1714  0D89               	rlf	9,f
 18250  1715  3B89               	subwfb	9,f
 18251  1716  0989               	comf	9,f
 18252  1717  00F3               	movwf	___lmul@multiplier+2
 18253  1718  00F4               	movwf	___lmul@multiplier+3
 18254  1719  0021               	movlb	1	; select bank1
 18255  171A  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 18256  171B  00F8               	movwf	___lmul@multiplicand+3
 18257  171C  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 18258  171D  00F7               	movwf	___lmul@multiplicand+2
 18259  171E  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 18260  171F  00F6               	movwf	___lmul@multiplicand+1
 18261  1720  0830               	movf	updateVoltages@adcVal^(0+128),w
 18262  1721  00F5               	movwf	___lmul@multiplicand
 18263  1722  31BF  279C  3195   	fcall	___lmul
 18264  1725  0874               	movf	?___lmul+3,w
 18265  1726  0020               	movlb	0	; select bank0
 18266  1727  00AB               	movwf	___aldiv@dividend+3
 18267  1728  0873               	movf	?___lmul+2,w
 18268  1729  00AA               	movwf	___aldiv@dividend+2
 18269  172A  0872               	movf	?___lmul+1,w
 18270  172B  00A9               	movwf	___aldiv@dividend+1
 18271  172C  0871               	movf	?___lmul,w
 18272  172D  00A8               	movwf	___aldiv@dividend
 18273  172E  31B6  26FA  3195   	fcall	___aldiv
 18274  1731  0023               	movlb	3	; select bank3
 18275  1732  0846               	movf	_adcOffset^(0+384),w
 18276  1733  0020               	movlb	0	; select bank0
 18277  1734  0724               	addwf	?___aldiv,w
 18278  1735  0023               	movlb	3	; select bank3
 18279  1736  00A4               	movwf	(_cellVoltages^(0+384)+4)
 18280  1737  0847               	movf	(_adcOffset+1)^(0+384),w
 18281  1738  0020               	movlb	0	; select bank0
 18282  1739  3D25               	addwfc	?___aldiv+1,w
 18283  173A  0023               	movlb	3	; select bank3
 18284  173B  00A5               	movwf	((_cellVoltages+1)^(0+384)+4)
 18285                           
 18286                           ;BQ76920.c: 234:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 18287  173C  3018               	movlw	24
 18288  173D  00F5               	movwf	readRegister@slaveAddress
 18289  173E  3000               	movlw	0
 18290  173F  00F6               	movwf	readRegister@slaveAddress+1
 18291  1740  3012               	movlw	18
 18292  1741  00F7               	movwf	readRegister@regAddress
 18293  1742  3000               	movlw	0
 18294  1743  00F8               	movwf	readRegister@regAddress+1
 18295  1744  31B0  2043  3195   	fcall	_readRegister
 18296  1747  303F               	movlw	63
 18297  1748  0575               	andwf	?_readRegister,w
 18298  1749  0021               	movlb	1	; select bank1
 18299  174A  00A9               	movwf	??_updateVoltages^(0+128)
 18300  174B  3000               	movlw	0
 18301  174C  0576               	andwf	?_readRegister+1,w
 18302  174D  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 18303  174E  0829               	movf	??_updateVoltages^(0+128),w
 18304  174F  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 18305  1750  01A9               	clrf	??_updateVoltages^(0+128)
 18306  1751  3018               	movlw	24
 18307  1752  00F5               	movwf	readRegister@slaveAddress
 18308  1753  3000               	movlw	0
 18309  1754  00F6               	movwf	readRegister@slaveAddress+1
 18310  1755  3013               	movlw	19
 18311  1756  00F7               	movwf	readRegister@regAddress
 18312  1757  3000               	movlw	0
 18313  1758  00F8               	movwf	readRegister@regAddress+1
 18314  1759  31B0  2043  3195   	fcall	_readRegister
 18315  175C  0875               	movf	?_readRegister,w
 18316  175D  0021               	movlb	1	; select bank1
 18317  175E  0429               	iorwf	??_updateVoltages^(0+128),w
 18318  175F  00B0               	movwf	updateVoltages@adcVal^(0+128)
 18319  1760  0876               	movf	?_readRegister+1,w
 18320  1761  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 18321  1762  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 18322  1763  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 18323  1764  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 18324  1765  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 18325  1766  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 18326  1767  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 18327                           
 18328                           ;BQ76920.c: 235:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 18329  1768  3000               	movlw	0
 18330  1769  0020               	movlb	0	; select bank0
 18331  176A  00A7               	movwf	___aldiv@divisor+3
 18332  176B  3000               	movlw	0
 18333  176C  00A6               	movwf	___aldiv@divisor+2
 18334  176D  3003               	movlw	3
 18335  176E  00A5               	movwf	___aldiv@divisor+1
 18336  176F  30E8               	movlw	232
 18337  1770  00A4               	movwf	___aldiv@divisor
 18338  1771  0023               	movlb	3	; select bank3
 18339  1772  0851               	movf	_adcGain^(0+384),w
 18340  1773  00F1               	movwf	___lmul@multiplier
 18341  1774  0852               	movf	(_adcGain+1)^(0+384),w
 18342  1775  00F2               	movwf	___lmul@multiplier+1
 18343  1776  0D89               	rlf	9,f
 18344  1777  3B89               	subwfb	9,f
 18345  1778  0989               	comf	9,f
 18346  1779  00F3               	movwf	___lmul@multiplier+2
 18347  177A  00F4               	movwf	___lmul@multiplier+3
 18348  177B  0021               	movlb	1	; select bank1
 18349  177C  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 18350  177D  00F8               	movwf	___lmul@multiplicand+3
 18351  177E  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 18352  177F  00F7               	movwf	___lmul@multiplicand+2
 18353  1780  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 18354  1781  00F6               	movwf	___lmul@multiplicand+1
 18355  1782  0830               	movf	updateVoltages@adcVal^(0+128),w
 18356  1783  00F5               	movwf	___lmul@multiplicand
 18357  1784  31BF  279C  3195   	fcall	___lmul
 18358  1787  0874               	movf	?___lmul+3,w
 18359  1788  0020               	movlb	0	; select bank0
 18360  1789  00AB               	movwf	___aldiv@dividend+3
 18361  178A  0873               	movf	?___lmul+2,w
 18362  178B  00AA               	movwf	___aldiv@dividend+2
 18363  178C  0872               	movf	?___lmul+1,w
 18364  178D  00A9               	movwf	___aldiv@dividend+1
 18365  178E  0871               	movf	?___lmul,w
 18366  178F  00A8               	movwf	___aldiv@dividend
 18367  1790  31B6  26FA  3195   	fcall	___aldiv
 18368  1793  0023               	movlb	3	; select bank3
 18369  1794  0846               	movf	_adcOffset^(0+384),w
 18370  1795  0020               	movlb	0	; select bank0
 18371  1796  0724               	addwf	?___aldiv,w
 18372  1797  0023               	movlb	3	; select bank3
 18373  1798  00A6               	movwf	(_cellVoltages^(0+384)+6)
 18374  1799  0847               	movf	(_adcOffset+1)^(0+384),w
 18375  179A  0020               	movlb	0	; select bank0
 18376  179B  3D25               	addwfc	?___aldiv+1,w
 18377  179C  0023               	movlb	3	; select bank3
 18378  179D  00A7               	movwf	((_cellVoltages+1)^(0+384)+6)
 18379                           
 18380                           ;BQ76920.c: 236:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 18381  179E  3018               	movlw	24
 18382  179F  00F5               	movwf	readRegister@slaveAddress
 18383  17A0  3000               	movlw	0
 18384  17A1  00F6               	movwf	readRegister@slaveAddress+1
 18385  17A2  3014               	movlw	20
 18386  17A3  00F7               	movwf	readRegister@regAddress
 18387  17A4  3000               	movlw	0
 18388  17A5  00F8               	movwf	readRegister@regAddress+1
 18389  17A6  31B0  2043  3195   	fcall	_readRegister
 18390  17A9  303F               	movlw	63
 18391  17AA  0575               	andwf	?_readRegister,w
 18392  17AB  0021               	movlb	1	; select bank1
 18393  17AC  00A9               	movwf	??_updateVoltages^(0+128)
 18394  17AD  3000               	movlw	0
 18395  17AE  0576               	andwf	?_readRegister+1,w
 18396  17AF  00AA               	movwf	(??_updateVoltages+1)^(0+128)
 18397  17B0  0829               	movf	??_updateVoltages^(0+128),w
 18398  17B1  00AA               	movwf	(??_updateVoltages^(0+128)+1)
 18399  17B2  01A9               	clrf	??_updateVoltages^(0+128)
 18400  17B3  3018               	movlw	24
 18401  17B4  00F5               	movwf	readRegister@slaveAddress
 18402  17B5  3000               	movlw	0
 18403  17B6  00F6               	movwf	readRegister@slaveAddress+1
 18404  17B7  3015               	movlw	21
 18405  17B8  00F7               	movwf	readRegister@regAddress
 18406  17B9  3000               	movlw	0
 18407  17BA  00F8               	movwf	readRegister@regAddress+1
 18408  17BB  31B0  2043  3195   	fcall	_readRegister
 18409  17BE  0875               	movf	?_readRegister,w
 18410  17BF  0021               	movlb	1	; select bank1
 18411  17C0  0429               	iorwf	??_updateVoltages^(0+128),w
 18412  17C1  00B0               	movwf	updateVoltages@adcVal^(0+128)
 18413  17C2  0876               	movf	?_readRegister+1,w
 18414  17C3  042A               	iorwf	(??_updateVoltages+1)^(0+128),w
 18415  17C4  00B1               	movwf	(updateVoltages@adcVal+1)^(0+128)
 18416  17C5  01B2               	clrf	(updateVoltages@adcVal^(0+128)+2)
 18417  17C6  1BB1               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 18418  17C7  03B2               	decf	(updateVoltages@adcVal+2)^(0+128),f
 18419  17C8  0832               	movf	(updateVoltages@adcVal^(0+128)+2),w
 18420  17C9  00B3               	movwf	(updateVoltages@adcVal+3)^(0+128)
 18421                           
 18422                           ;BQ76920.c: 237:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 18423  17CA  3000               	movlw	0
 18424  17CB  0020               	movlb	0	; select bank0
 18425  17CC  00A7               	movwf	___aldiv@divisor+3
 18426  17CD  3000               	movlw	0
 18427  17CE  00A6               	movwf	___aldiv@divisor+2
 18428  17CF  3003               	movlw	3
 18429  17D0  00A5               	movwf	___aldiv@divisor+1
 18430  17D1  30E8               	movlw	232
 18431  17D2  00A4               	movwf	___aldiv@divisor
 18432  17D3  0023               	movlb	3	; select bank3
 18433  17D4  0851               	movf	_adcGain^(0+384),w
 18434  17D5  00F1               	movwf	___lmul@multiplier
 18435  17D6  0852               	movf	(_adcGain+1)^(0+384),w
 18436  17D7  00F2               	movwf	___lmul@multiplier+1
 18437  17D8  0D89               	rlf	9,f
 18438  17D9  3B89               	subwfb	9,f
 18439  17DA  0989               	comf	9,f
 18440  17DB  00F3               	movwf	___lmul@multiplier+2
 18441  17DC  00F4               	movwf	___lmul@multiplier+3
 18442  17DD  0021               	movlb	1	; select bank1
 18443  17DE  0833               	movf	(updateVoltages@adcVal+3)^(0+128),w
 18444  17DF  00F8               	movwf	___lmul@multiplicand+3
 18445  17E0  0832               	movf	(updateVoltages@adcVal+2)^(0+128),w
 18446  17E1  00F7               	movwf	___lmul@multiplicand+2
 18447  17E2  0831               	movf	(updateVoltages@adcVal+1)^(0+128),w
 18448  17E3  00F6               	movwf	___lmul@multiplicand+1
 18449  17E4  0830               	movf	updateVoltages@adcVal^(0+128),w
 18450  17E5  00F5               	movwf	___lmul@multiplicand
 18451  17E6  31BF  279C  3195   	fcall	___lmul
 18452  17E9  0874               	movf	?___lmul+3,w
 18453  17EA  0020               	movlb	0	; select bank0
 18454  17EB  00AB               	movwf	___aldiv@dividend+3
 18455  17EC  0873               	movf	?___lmul+2,w
 18456  17ED  00AA               	movwf	___aldiv@dividend+2
 18457  17EE  0872               	movf	?___lmul+1,w
 18458  17EF  00A9               	movwf	___aldiv@dividend+1
 18459  17F0  0871               	movf	?___lmul,w
 18460  17F1  00A8               	movwf	___aldiv@dividend
 18461  17F2  31B6  26FA         	fcall	___aldiv
 18462  17F4  0023               	movlb	3	; select bank3
 18463  17F5  0846               	movf	_adcOffset^(0+384),w
 18464  17F6  0020               	movlb	0	; select bank0
 18465  17F7  0724               	addwf	?___aldiv,w
 18466  17F8  0023               	movlb	3	; select bank3
 18467  17F9  00A8               	movwf	(_cellVoltages^(0+384)+8)
 18468  17FA  0847               	movf	(_adcOffset+1)^(0+384),w
 18469  17FB  0020               	movlb	0	; select bank0
 18470  17FC  3D25               	addwfc	?___aldiv+1,w
 18471  17FD  0023               	movlb	3	; select bank3
 18472  17FE  00A9               	movwf	((_cellVoltages+1)^(0+384)+8)
 18473  17FF  0008               	return
 18474  1800                     __end_of_updateVoltages:	
 18475                           
 18476                           	psect	text64
 18477  3043                     __ptext64:	
 18478 ;; *************** function _readRegister *****************
 18479 ;; Defined at:
 18480 ;;		line 107 in file "I2C.c"
 18481 ;; Parameters:    Size  Location     Type
 18482 ;;  slaveAddress    2    5[COMMON] int 
 18483 ;;  regAddress      2    7[COMMON] int 
 18484 ;; Auto vars:     Size  Location     Type
 18485 ;;  recievedData    2    9[COMMON] int 
 18486 ;; Return value:  Size  Location     Type
 18487 ;;                  2    5[COMMON] int 
 18488 ;; Registers used:
 18489 ;;		wreg, status,2, status,0, pclath, cstack
 18490 ;; Tracked objects:
 18491 ;;		On entry : 0/0
 18492 ;;		On exit  : 0/0
 18493 ;;		Unchanged: 0/0
 18494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18496 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18499 ;;Total ram usage:        6 bytes
 18500 ;; Hardware stack levels used:    1
 18501 ;; Hardware stack levels required when called:    2
 18502 ;; This function calls:
 18503 ;;		_read_I2C_data
 18504 ;;		_send_I2C_NACK
 18505 ;;		_send_I2C_controlByte
 18506 ;;		_send_I2C_data
 18507 ;;		_send_I2C_startBit
 18508 ;;		_send_I2C_stopBit
 18509 ;; This function is called by:
 18510 ;;		_beginAFEcommunication
 18511 ;;		_setCellUndervoltageProtection
 18512 ;;		_setCellOvervoltageProtection
 18513 ;;		_updateVoltages
 18514 ;;		_printotAFERegisters
 18515 ;;		_updateCurrent
 18516 ;; This function uses a non-reentrant model
 18517 ;;
 18518                           
 18519                           
 18520                           ;psect for function _readRegister
 18521  3043                     _readRegister:	
 18522                           
 18523                           ;I2C.c: 108:     int recievedData;;I2C.c: 109:     send_I2C_startBit();
 18524                           
 18525                           ;incstack = 0
 18526                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 18527  3043  31BD  2510  31B0   	fcall	_send_I2C_startBit
 18528                           
 18529                           ;I2C.c: 110:     send_I2C_controlByte(slaveAddress, 0);
 18530  3046  0876               	movf	readRegister@slaveAddress+1,w
 18531  3047  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18532  3048  0875               	movf	readRegister@slaveAddress,w
 18533  3049  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18534  304A  3000               	movlw	0
 18535  304B  00F3               	movwf	send_I2C_controlByte@RW_bit
 18536  304C  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18537  304D  31BD  2544  31B0   	fcall	_send_I2C_controlByte
 18538                           
 18539                           ;I2C.c: 111:     send_I2C_data(regAddress);
 18540  3050  0878               	movf	readRegister@regAddress+1,w
 18541  3051  00F2               	movwf	send_I2C_data@databyte+1
 18542  3052  0877               	movf	readRegister@regAddress,w
 18543  3053  00F1               	movwf	send_I2C_data@databyte
 18544  3054  31BD  2532  31B0   	fcall	_send_I2C_data
 18545                           
 18546                           ;I2C.c: 112:     send_I2C_stopBit();
 18547  3057  31BD  2518  31B0   	fcall	_send_I2C_stopBit
 18548                           
 18549                           ;I2C.c: 113:     send_I2C_startBit();
 18550  305A  31BD  2510  31B0   	fcall	_send_I2C_startBit
 18551                           
 18552                           ;I2C.c: 114:     send_I2C_controlByte(slaveAddress, 1);
 18553  305D  0876               	movf	readRegister@slaveAddress+1,w
 18554  305E  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 18555  305F  0875               	movf	readRegister@slaveAddress,w
 18556  3060  00F1               	movwf	send_I2C_controlByte@BlockAddress
 18557  3061  3001               	movlw	1
 18558  3062  00F3               	movwf	send_I2C_controlByte@RW_bit
 18559  3063  3000               	movlw	0
 18560  3064  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 18561  3065  31BD  2544  31B0   	fcall	_send_I2C_controlByte
 18562                           
 18563                           ;I2C.c: 115:     recievedData = read_I2C_data();
 18564  3068  31BD  2572  31B0   	fcall	_read_I2C_data
 18565  306B  0872               	movf	?_read_I2C_data+1,w
 18566  306C  00FA               	movwf	readRegister@recievedData+1
 18567  306D  0871               	movf	?_read_I2C_data,w
 18568  306E  00F9               	movwf	readRegister@recievedData
 18569                           
 18570                           ;I2C.c: 116:     send_I2C_NACK();
 18571  306F  31BD  2529  31B0   	fcall	_send_I2C_NACK
 18572                           
 18573                           ;I2C.c: 117:     send_I2C_stopBit();
 18574  3072  31BD  2518         	fcall	_send_I2C_stopBit
 18575                           
 18576                           ;I2C.c: 118:     return recievedData;
 18577  3074  087A               	movf	readRegister@recievedData+1,w
 18578  3075  00F6               	movwf	?_readRegister+1
 18579  3076  0879               	movf	readRegister@recievedData,w
 18580  3077  00F5               	movwf	?_readRegister
 18581  3078  0008               	return
 18582  3079                     __end_of_readRegister:	
 18583                           
 18584                           	psect	text65
 18585  3D18                     __ptext65:	
 18586 ;; *************** function _send_I2C_stopBit *****************
 18587 ;; Defined at:
 18588 ;;		line 70 in file "I2C.c"
 18589 ;; Parameters:    Size  Location     Type
 18590 ;;		None
 18591 ;; Auto vars:     Size  Location     Type
 18592 ;;		None
 18593 ;; Return value:  Size  Location     Type
 18594 ;;                  1    wreg      void 
 18595 ;; Registers used:
 18596 ;;		None
 18597 ;; Tracked objects:
 18598 ;;		On entry : 0/0
 18599 ;;		On exit  : 0/0
 18600 ;;		Unchanged: 0/0
 18601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18606 ;;Total ram usage:        0 bytes
 18607 ;; Hardware stack levels used:    1
 18608 ;; Hardware stack levels required when called:    1
 18609 ;; This function calls:
 18610 ;;		Nothing
 18611 ;; This function is called by:
 18612 ;;		_I2C_writeRegister
 18613 ;;		_readRegister
 18614 ;; This function uses a non-reentrant model
 18615 ;;
 18616                           
 18617                           
 18618                           ;psect for function _send_I2C_stopBit
 18619  3D18                     _send_I2C_stopBit:	
 18620                           
 18621                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
 18622                           
 18623                           ;incstack = 0
 18624                           ; Regs used in _send_I2C_stopBit: []
 18625  3D18  0020               	movlb	0	; select bank0
 18626  3D19  1191               	bcf	17,3	;volatile
 18627                           
 18628                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
 18629  3D1A  0024               	movlb	4	; select bank4
 18630  3D1B  1516               	bsf	22,2	;volatile
 18631  3D1C                     l307:	
 18632                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
 18633                           
 18634  3D1C  0020               	movlb	0	; select bank0
 18635  3D1D  1991               	btfsc	17,3	;volatile
 18636  3D1E  0008               	return
 18637  3D1F  2D1C               	goto	l307
 18638  3D20                     __end_of_send_I2C_stopBit:	
 18639                           
 18640                           	psect	text66
 18641  3D10                     __ptext66:	
 18642 ;; *************** function _send_I2C_startBit *****************
 18643 ;; Defined at:
 18644 ;;		line 64 in file "I2C.c"
 18645 ;; Parameters:    Size  Location     Type
 18646 ;;		None
 18647 ;; Auto vars:     Size  Location     Type
 18648 ;;		None
 18649 ;; Return value:  Size  Location     Type
 18650 ;;                  1    wreg      void 
 18651 ;; Registers used:
 18652 ;;		None
 18653 ;; Tracked objects:
 18654 ;;		On entry : 0/0
 18655 ;;		On exit  : 0/0
 18656 ;;		Unchanged: 0/0
 18657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18662 ;;Total ram usage:        0 bytes
 18663 ;; Hardware stack levels used:    1
 18664 ;; Hardware stack levels required when called:    1
 18665 ;; This function calls:
 18666 ;;		Nothing
 18667 ;; This function is called by:
 18668 ;;		_I2C_writeRegister
 18669 ;;		_readRegister
 18670 ;; This function uses a non-reentrant model
 18671 ;;
 18672                           
 18673                           
 18674                           ;psect for function _send_I2C_startBit
 18675  3D10                     _send_I2C_startBit:	
 18676                           
 18677                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
 18678                           
 18679                           ;incstack = 0
 18680                           ; Regs used in _send_I2C_startBit: []
 18681  3D10  0020               	movlb	0	; select bank0
 18682  3D11  1191               	bcf	17,3	;volatile
 18683                           
 18684                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
 18685  3D12  0024               	movlb	4	; select bank4
 18686  3D13  1416               	bsf	22,0	;volatile
 18687  3D14                     l301:	
 18688                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
 18689                           
 18690  3D14  0020               	movlb	0	; select bank0
 18691  3D15  1991               	btfsc	17,3	;volatile
 18692  3D16  0008               	return
 18693  3D17  2D14               	goto	l301
 18694  3D18                     __end_of_send_I2C_startBit:	
 18695                           
 18696                           	psect	text67
 18697  3D32                     __ptext67:	
 18698 ;; *************** function _send_I2C_data *****************
 18699 ;; Defined at:
 18700 ;;		line 33 in file "I2C.c"
 18701 ;; Parameters:    Size  Location     Type
 18702 ;;  databyte        2    1[COMMON] unsigned int 
 18703 ;; Auto vars:     Size  Location     Type
 18704 ;;		None
 18705 ;; Return value:  Size  Location     Type
 18706 ;;                  1    wreg      void 
 18707 ;; Registers used:
 18708 ;;		wreg
 18709 ;; Tracked objects:
 18710 ;;		On entry : 0/0
 18711 ;;		On exit  : 0/0
 18712 ;;		Unchanged: 0/0
 18713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18717 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18718 ;;Total ram usage:        2 bytes
 18719 ;; Hardware stack levels used:    1
 18720 ;; Hardware stack levels required when called:    1
 18721 ;; This function calls:
 18722 ;;		Nothing
 18723 ;; This function is called by:
 18724 ;;		_I2C_writeRegister
 18725 ;;		_readRegister
 18726 ;; This function uses a non-reentrant model
 18727 ;;
 18728                           
 18729                           
 18730                           ;psect for function _send_I2C_data
 18731  3D32                     _send_I2C_data:	
 18732                           
 18733                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 18734                           
 18735                           ;incstack = 0
 18736                           ; Regs used in _send_I2C_data: [wreg]
 18737  3D32  0020               	movlb	0	; select bank0
 18738  3D33  1191               	bcf	17,3	;volatile
 18739                           
 18740                           ;I2C.c: 35:     SSPBUF = databyte;
 18741  3D34  0871               	movf	send_I2C_data@databyte,w
 18742  3D35  0024               	movlb	4	; select bank4
 18743  3D36  0091               	movwf	17	;volatile
 18744  3D37                     l283:	
 18745                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
 18746                           
 18747  3D37  0020               	movlb	0	; select bank0
 18748  3D38  1991               	btfsc	17,3	;volatile
 18749  3D39  0008               	return
 18750  3D3A  2D37               	goto	l283
 18751  3D3B                     __end_of_send_I2C_data:	
 18752                           
 18753                           	psect	text68
 18754  3D44                     __ptext68:	
 18755 ;; *************** function _send_I2C_controlByte *****************
 18756 ;; Defined at:
 18757 ;;		line 52 in file "I2C.c"
 18758 ;; Parameters:    Size  Location     Type
 18759 ;;  BlockAddress    2    1[COMMON] unsigned int 
 18760 ;;  RW_bit          2    3[COMMON] unsigned int 
 18761 ;; Auto vars:     Size  Location     Type
 18762 ;;		None
 18763 ;; Return value:  Size  Location     Type
 18764 ;;                  1    wreg      void 
 18765 ;; Registers used:
 18766 ;;		wreg, status,2, status,0
 18767 ;; Tracked objects:
 18768 ;;		On entry : 0/0
 18769 ;;		On exit  : 0/0
 18770 ;;		Unchanged: 0/0
 18771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18775 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18776 ;;Total ram usage:        4 bytes
 18777 ;; Hardware stack levels used:    1
 18778 ;; Hardware stack levels required when called:    1
 18779 ;; This function calls:
 18780 ;;		Nothing
 18781 ;; This function is called by:
 18782 ;;		_I2C_writeRegister
 18783 ;;		_readRegister
 18784 ;; This function uses a non-reentrant model
 18785 ;;
 18786                           
 18787                           
 18788                           ;psect for function _send_I2C_controlByte
 18789  3D44                     _send_I2C_controlByte:	
 18790                           
 18791                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
 18792                           
 18793                           ;incstack = 0
 18794                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 18795  3D44  0020               	movlb	0	; select bank0
 18796  3D45  1191               	bcf	17,3	;volatile
 18797                           
 18798                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 18799  3D46  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 18800  3D47  0773               	addwf	send_I2C_controlByte@RW_bit,w
 18801  3D48  0024               	movlb	4	; select bank4
 18802  3D49  0091               	movwf	17	;volatile
 18803  3D4A                     l295:	
 18804                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
 18805                           
 18806  3D4A  0020               	movlb	0	; select bank0
 18807  3D4B  1991               	btfsc	17,3	;volatile
 18808  3D4C  0008               	return
 18809  3D4D  2D4A               	goto	l295
 18810  3D4E                     __end_of_send_I2C_controlByte:	
 18811                           
 18812                           	psect	text69
 18813  3D29                     __ptext69:	
 18814 ;; *************** function _send_I2C_NACK *****************
 18815 ;; Defined at:
 18816 ;;		line 83 in file "I2C.c"
 18817 ;; Parameters:    Size  Location     Type
 18818 ;;		None
 18819 ;; Auto vars:     Size  Location     Type
 18820 ;;		None
 18821 ;; Return value:  Size  Location     Type
 18822 ;;                  1    wreg      void 
 18823 ;; Registers used:
 18824 ;;		None
 18825 ;; Tracked objects:
 18826 ;;		On entry : 0/0
 18827 ;;		On exit  : 0/0
 18828 ;;		Unchanged: 0/0
 18829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18834 ;;Total ram usage:        0 bytes
 18835 ;; Hardware stack levels used:    1
 18836 ;; Hardware stack levels required when called:    1
 18837 ;; This function calls:
 18838 ;;		Nothing
 18839 ;; This function is called by:
 18840 ;;		_readRegister
 18841 ;; This function uses a non-reentrant model
 18842 ;;
 18843                           
 18844                           
 18845                           ;psect for function _send_I2C_NACK
 18846  3D29                     _send_I2C_NACK:	
 18847                           
 18848                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
 18849                           
 18850                           ;incstack = 0
 18851                           ; Regs used in _send_I2C_NACK: []
 18852  3D29  0020               	movlb	0	; select bank0
 18853  3D2A  1191               	bcf	17,3	;volatile
 18854                           
 18855                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
 18856  3D2B  0024               	movlb	4	; select bank4
 18857  3D2C  1696               	bsf	22,5	;volatile
 18858                           
 18859                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
 18860  3D2D  1616               	bsf	22,4	;volatile
 18861  3D2E                     l319:	
 18862                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
 18863                           
 18864  3D2E  0020               	movlb	0	; select bank0
 18865  3D2F  1991               	btfsc	17,3	;volatile
 18866  3D30  0008               	return
 18867  3D31  2D2E               	goto	l319
 18868  3D32                     __end_of_send_I2C_NACK:	
 18869                           
 18870                           	psect	text70
 18871  3D72                     __ptext70:	
 18872 ;; *************** function _read_I2C_data *****************
 18873 ;; Defined at:
 18874 ;;		line 42 in file "I2C.c"
 18875 ;; Parameters:    Size  Location     Type
 18876 ;;		None
 18877 ;; Auto vars:     Size  Location     Type
 18878 ;;		None
 18879 ;; Return value:  Size  Location     Type
 18880 ;;                  2    1[COMMON] unsigned int 
 18881 ;; Registers used:
 18882 ;;		wreg
 18883 ;; Tracked objects:
 18884 ;;		On entry : 0/0
 18885 ;;		On exit  : 0/0
 18886 ;;		Unchanged: 0/0
 18887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18890 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18891 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18892 ;;Total ram usage:        4 bytes
 18893 ;; Hardware stack levels used:    1
 18894 ;; Hardware stack levels required when called:    1
 18895 ;; This function calls:
 18896 ;;		Nothing
 18897 ;; This function is called by:
 18898 ;;		_readRegister
 18899 ;; This function uses a non-reentrant model
 18900 ;;
 18901                           
 18902                           
 18903                           ;psect for function _read_I2C_data
 18904  3D72                     _read_I2C_data:	
 18905                           
 18906                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
 18907                           
 18908                           ;incstack = 0
 18909                           ; Regs used in _read_I2C_data: [wreg]
 18910  3D72  0020               	movlb	0	; select bank0
 18911  3D73  1191               	bcf	17,3	;volatile
 18912                           
 18913                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
 18914  3D74  0024               	movlb	4	; select bank4
 18915  3D75  1596               	bsf	22,3	;volatile
 18916  3D76                     l289:	
 18917                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
 18918                           
 18919  3D76  0020               	movlb	0	; select bank0
 18920  3D77  1D91               	btfss	17,3	;volatile
 18921  3D78  2D76               	goto	l289
 18922                           
 18923                           ;I2C.c: 46:     return (SSPBUF);
 18924  3D79  0024               	movlb	4	; select bank4
 18925  3D7A  0811               	movf	17,w	;volatile
 18926  3D7B  00F3               	movwf	??_read_I2C_data
 18927  3D7C  01F4               	clrf	??_read_I2C_data+1
 18928  3D7D  0873               	movf	??_read_I2C_data,w
 18929  3D7E  00F1               	movwf	?_read_I2C_data
 18930  3D7F  0874               	movf	??_read_I2C_data+1,w
 18931  3D80  00F2               	movwf	?_read_I2C_data+1
 18932  3D81  0008               	return
 18933  3D82                     __end_of_read_I2C_data:	
 18934                           
 18935                           	psect	text71
 18936  293F                     __ptext71:	
 18937 ;; *************** function ___xxtofl *****************
 18938 ;; Defined at:
 18939 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 18940 ;; Parameters:    Size  Location     Type
 18941 ;;  sign            1    wreg     unsigned char 
 18942 ;;  val             4    1[COMMON] long 
 18943 ;; Auto vars:     Size  Location     Type
 18944 ;;  sign            1    0[BANK0 ] unsigned char 
 18945 ;;  arg             4    2[BANK0 ] unsigned long 
 18946 ;;  exp             1    1[BANK0 ] unsigned char 
 18947 ;; Return value:  Size  Location     Type
 18948 ;;                  4    1[COMMON] unsigned char 
 18949 ;; Registers used:
 18950 ;;		wreg, status,2, status,0
 18951 ;; Tracked objects:
 18952 ;;		On entry : 0/0
 18953 ;;		On exit  : 0/0
 18954 ;;		Unchanged: 0/0
 18955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18957 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18958 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18959 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18960 ;;Total ram usage:       14 bytes
 18961 ;; Hardware stack levels used:    1
 18962 ;; Hardware stack levels required when called:    1
 18963 ;; This function calls:
 18964 ;;		Nothing
 18965 ;; This function is called by:
 18966 ;;		_setShortCircuitProtection
 18967 ;;		_setOverCurrentDischargeProtection
 18968 ;;		_updateVoltages
 18969 ;;		_AFE_getSetShortCircuitCurrent
 18970 ;;		_AFE_getOverCurrentDischargeCurrent
 18971 ;;		_updateCurrent
 18972 ;; This function uses a non-reentrant model
 18973 ;;
 18974                           
 18975                           
 18976                           ;psect for function ___xxtofl
 18977  293F                     ___xxtofl:	
 18978                           
 18979                           ;incstack = 0
 18980                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18981                           ;___xxtofl@sign stored from wreg
 18982  293F  0020               	movlb	0	; select bank0
 18983  2940  00A0               	movwf	___xxtofl@sign
 18984  2941  0820               	movf	___xxtofl@sign,w
 18985  2942  1D03               	btfss	3,2
 18986  2943  1FF4               	btfss	___xxtofl@val+3,7
 18987  2944  2955               	goto	l6599
 18988  2945  0971               	comf	___xxtofl@val,w
 18989  2946  00A2               	movwf	___xxtofl@arg
 18990  2947  0972               	comf	___xxtofl@val+1,w
 18991  2948  00A3               	movwf	___xxtofl@arg+1
 18992  2949  0973               	comf	___xxtofl@val+2,w
 18993  294A  00A4               	movwf	___xxtofl@arg+2
 18994  294B  0974               	comf	___xxtofl@val+3,w
 18995  294C  00A5               	movwf	___xxtofl@arg+3
 18996  294D  0AA2               	incf	___xxtofl@arg,f
 18997  294E  1903               	skipnz
 18998  294F  0AA3               	incf	___xxtofl@arg+1,f
 18999  2950  1903               	skipnz
 19000  2951  0AA4               	incf	___xxtofl@arg+2,f
 19001  2952  1903               	skipnz
 19002  2953  0AA5               	incf	___xxtofl@arg+3,f
 19003  2954  295D               	goto	l1376
 19004  2955                     l6599:	
 19005  2955  0874               	movf	___xxtofl@val+3,w
 19006  2956  00A5               	movwf	___xxtofl@arg+3
 19007  2957  0873               	movf	___xxtofl@val+2,w
 19008  2958  00A4               	movwf	___xxtofl@arg+2
 19009  2959  0872               	movf	___xxtofl@val+1,w
 19010  295A  00A3               	movwf	___xxtofl@arg+1
 19011  295B  0871               	movf	___xxtofl@val,w
 19012  295C  00A2               	movwf	___xxtofl@arg
 19013  295D                     l1376:	
 19014  295D  0874               	movf	___xxtofl@val+3,w
 19015  295E  0473               	iorwf	___xxtofl@val+2,w
 19016  295F  0472               	iorwf	___xxtofl@val+1,w
 19017  2960  0471               	iorwf	___xxtofl@val,w
 19018  2961  1D03               	skipz
 19019  2962  296C               	goto	l6605
 19020  2963  3000               	movlw	0
 19021  2964  00F4               	movwf	?___xxtofl+3
 19022  2965  3000               	movlw	0
 19023  2966  00F3               	movwf	?___xxtofl+2
 19024  2967  3000               	movlw	0
 19025  2968  00F2               	movwf	?___xxtofl+1
 19026  2969  3000               	movlw	0
 19027  296A  00F1               	movwf	?___xxtofl
 19028  296B  0008               	return
 19029  296C                     l6605:	
 19030  296C  3096               	movlw	150
 19031  296D  00F5               	movwf	??___xxtofl
 19032  296E  0875               	movf	??___xxtofl,w
 19033  296F  00A1               	movwf	___xxtofl@exp
 19034  2970                     l6609:	
 19035  2970  30FE               	movlw	254
 19036  2971  0525               	andwf	___xxtofl@arg+3,w
 19037  2972  1903               	btfsc	3,2
 19038  2973  2993               	goto	l1382
 19039  2974  3001               	movlw	1
 19040  2975  00F5               	movwf	??___xxtofl
 19041  2976  0875               	movf	??___xxtofl,w
 19042  2977  07A1               	addwf	___xxtofl@exp,f
 19043  2978  3001               	movlw	1
 19044  2979                     u9155:	
 19045  2979  36A5               	lsrf	___xxtofl@arg+3,f
 19046  297A  0CA4               	rrf	___xxtofl@arg+2,f
 19047  297B  0CA3               	rrf	___xxtofl@arg+1,f
 19048  297C  0CA2               	rrf	___xxtofl@arg,f
 19049  297D  0B89               	decfsz	9,f
 19050  297E  2979               	goto	u9155
 19051  297F  2970               	goto	l6609
 19052  2980                     l6611:	
 19053  2980  3001               	movlw	1
 19054  2981  00F5               	movwf	??___xxtofl
 19055  2982  0875               	movf	??___xxtofl,w
 19056  2983  07A1               	addwf	___xxtofl@exp,f
 19057  2984  3001               	movlw	1
 19058  2985  07A2               	addwf	___xxtofl@arg,f
 19059  2986  3000               	movlw	0
 19060  2987  3DA3               	addwfc	___xxtofl@arg+1,f
 19061  2988  3000               	movlw	0
 19062  2989  3DA4               	addwfc	___xxtofl@arg+2,f
 19063  298A  3000               	movlw	0
 19064  298B  3DA5               	addwfc	___xxtofl@arg+3,f
 19065  298C  3001               	movlw	1
 19066  298D                     u9175:	
 19067  298D  36A5               	lsrf	___xxtofl@arg+3,f
 19068  298E  0CA4               	rrf	___xxtofl@arg+2,f
 19069  298F  0CA3               	rrf	___xxtofl@arg+1,f
 19070  2990  0CA2               	rrf	___xxtofl@arg,f
 19071  2991  0B89               	decfsz	9,f
 19072  2992  298D               	goto	u9175
 19073  2993                     l1382:	
 19074  2993  30FF               	movlw	255
 19075  2994  0525               	andwf	___xxtofl@arg+3,w
 19076  2995  1903               	btfsc	3,2
 19077  2996  29A5               	goto	l6619
 19078  2997  2980               	goto	l6611
 19079  2998                     l6621:	
 19080  2998  3002               	movlw	2
 19081  2999  0221               	subwf	___xxtofl@exp,w
 19082  299A  1C03               	btfss	3,0
 19083  299B  29A7               	goto	l1389
 19084  299C  3001               	movlw	1
 19085  299D  02A1               	subwf	___xxtofl@exp,f
 19086  299E  3001               	movlw	1
 19087  299F                     u9195:	
 19088  299F  35A2               	lslf	___xxtofl@arg,f
 19089  29A0  0DA3               	rlf	___xxtofl@arg+1,f
 19090  29A1  0DA4               	rlf	___xxtofl@arg+2,f
 19091  29A2  0DA5               	rlf	___xxtofl@arg+3,f
 19092  29A3  0B89               	decfsz	9,f
 19093  29A4  299F               	goto	u9195
 19094  29A5                     l6619:	
 19095  29A5  1FA4               	btfss	___xxtofl@arg+2,7
 19096  29A6  2998               	goto	l6621
 19097  29A7                     l1389:	
 19098  29A7  1821               	btfsc	___xxtofl@exp,0
 19099  29A8  29B1               	goto	l1390
 19100  29A9  30FF               	movlw	255
 19101  29AA  05A2               	andwf	___xxtofl@arg,f
 19102  29AB  30FF               	movlw	255
 19103  29AC  05A3               	andwf	___xxtofl@arg+1,f
 19104  29AD  307F               	movlw	127
 19105  29AE  05A4               	andwf	___xxtofl@arg+2,f
 19106  29AF  30FF               	movlw	255
 19107  29B0  05A5               	andwf	___xxtofl@arg+3,f
 19108  29B1                     l1390:	
 19109  29B1  1003               	clrc
 19110  29B2  0CA1               	rrf	___xxtofl@exp,f
 19111  29B3  0821               	movf	___xxtofl@exp,w
 19112  29B4  00F5               	movwf	??___xxtofl
 19113  29B5  01F6               	clrf	??___xxtofl+1
 19114  29B6  01F7               	clrf	??___xxtofl+2
 19115  29B7  01F8               	clrf	??___xxtofl+3
 19116  29B8  3018               	movlw	24
 19117  29B9                     u9235:	
 19118  29B9  35F5               	lslf	??___xxtofl,f
 19119  29BA  0DF6               	rlf	??___xxtofl+1,f
 19120  29BB  0DF7               	rlf	??___xxtofl+2,f
 19121  29BC  0DF8               	rlf	??___xxtofl+3,f
 19122  29BD  0B89               	decfsz	9,f
 19123  29BE  29B9               	goto	u9235
 19124  29BF  0875               	movf	??___xxtofl,w
 19125  29C0  04A2               	iorwf	___xxtofl@arg,f
 19126  29C1  0876               	movf	??___xxtofl+1,w
 19127  29C2  04A3               	iorwf	___xxtofl@arg+1,f
 19128  29C3  0877               	movf	??___xxtofl+2,w
 19129  29C4  04A4               	iorwf	___xxtofl@arg+2,f
 19130  29C5  0878               	movf	??___xxtofl+3,w
 19131  29C6  04A5               	iorwf	___xxtofl@arg+3,f
 19132  29C7  0820               	movf	___xxtofl@sign,w
 19133  29C8  1D03               	btfss	3,2
 19134  29C9  1FF4               	btfss	___xxtofl@val+3,7
 19135  29CA  29CC               	goto	l6633
 19136  29CB  17A5               	bsf	___xxtofl@arg+3,7
 19137  29CC                     l6633:	
 19138  29CC  0825               	movf	___xxtofl@arg+3,w
 19139  29CD  00F4               	movwf	?___xxtofl+3
 19140  29CE  0824               	movf	___xxtofl@arg+2,w
 19141  29CF  00F3               	movwf	?___xxtofl+2
 19142  29D0  0823               	movf	___xxtofl@arg+1,w
 19143  29D1  00F2               	movwf	?___xxtofl+1
 19144  29D2  0822               	movf	___xxtofl@arg,w
 19145  29D3  00F1               	movwf	?___xxtofl
 19146  29D4  0008               	return
 19147  29D5                     __end_of___xxtofl:	
 19148                           
 19149                           	psect	text72
 19150  3F9C                     __ptext72:	
 19151 ;; *************** function ___lmul *****************
 19152 ;; Defined at:
 19153 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 19154 ;; Parameters:    Size  Location     Type
 19155 ;;  multiplier      4    1[COMMON] unsigned long 
 19156 ;;  multiplicand    4    5[COMMON] unsigned long 
 19157 ;; Auto vars:     Size  Location     Type
 19158 ;;  product         4    0[BANK0 ] unsigned long 
 19159 ;; Return value:  Size  Location     Type
 19160 ;;                  4    1[COMMON] unsigned long 
 19161 ;; Registers used:
 19162 ;;		wreg, status,2, status,0
 19163 ;; Tracked objects:
 19164 ;;		On entry : 0/0
 19165 ;;		On exit  : 0/0
 19166 ;;		Unchanged: 0/0
 19167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19168 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19169 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19171 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19172 ;;Total ram usage:       12 bytes
 19173 ;; Hardware stack levels used:    1
 19174 ;; Hardware stack levels required when called:    1
 19175 ;; This function calls:
 19176 ;;		Nothing
 19177 ;; This function is called by:
 19178 ;;		_setCellUndervoltageProtection
 19179 ;;		_setCellOvervoltageProtection
 19180 ;;		_updateVoltages
 19181 ;; This function uses a non-reentrant model
 19182 ;;
 19183                           
 19184                           
 19185                           ;psect for function ___lmul
 19186  3F9C                     ___lmul:	
 19187                           
 19188                           ;incstack = 0
 19189                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 19190  3F9C  3000               	movlw	0
 19191  3F9D  0020               	movlb	0	; select bank0
 19192  3F9E  00A3               	movwf	___lmul@product+3
 19193  3F9F  3000               	movlw	0
 19194  3FA0  00A2               	movwf	___lmul@product+2
 19195  3FA1  3000               	movlw	0
 19196  3FA2  00A1               	movwf	___lmul@product+1
 19197  3FA3  3000               	movlw	0
 19198  3FA4  00A0               	movwf	___lmul@product
 19199  3FA5                     l8377:	
 19200  3FA5  1C71               	btfss	___lmul@multiplier,0
 19201  3FA6  2FB0               	goto	l8381
 19202  3FA7  0875               	movf	___lmul@multiplicand,w
 19203  3FA8  0020               	movlb	0	; select bank0
 19204  3FA9  07A0               	addwf	___lmul@product,f
 19205  3FAA  0876               	movf	___lmul@multiplicand+1,w
 19206  3FAB  3DA1               	addwfc	___lmul@product+1,f
 19207  3FAC  0877               	movf	___lmul@multiplicand+2,w
 19208  3FAD  3DA2               	addwfc	___lmul@product+2,f
 19209  3FAE  0878               	movf	___lmul@multiplicand+3,w
 19210  3FAF  3DA3               	addwfc	___lmul@product+3,f
 19211  3FB0                     l8381:	
 19212  3FB0  3001               	movlw	1
 19213  3FB1                     u11665:	
 19214  3FB1  35F5               	lslf	___lmul@multiplicand,f
 19215  3FB2  0DF6               	rlf	___lmul@multiplicand+1,f
 19216  3FB3  0DF7               	rlf	___lmul@multiplicand+2,f
 19217  3FB4  0DF8               	rlf	___lmul@multiplicand+3,f
 19218  3FB5  0B89               	decfsz	9,f
 19219  3FB6  2FB1               	goto	u11665
 19220  3FB7  3001               	movlw	1
 19221  3FB8                     u11675:	
 19222  3FB8  36F4               	lsrf	___lmul@multiplier+3,f
 19223  3FB9  0CF3               	rrf	___lmul@multiplier+2,f
 19224  3FBA  0CF2               	rrf	___lmul@multiplier+1,f
 19225  3FBB  0CF1               	rrf	___lmul@multiplier,f
 19226  3FBC  0B89               	decfsz	9,f
 19227  3FBD  2FB8               	goto	u11675
 19228  3FBE  0874               	movf	___lmul@multiplier+3,w
 19229  3FBF  0473               	iorwf	___lmul@multiplier+2,w
 19230  3FC0  0472               	iorwf	___lmul@multiplier+1,w
 19231  3FC1  0471               	iorwf	___lmul@multiplier,w
 19232  3FC2  1D03               	skipz
 19233  3FC3  2FA5               	goto	l8377
 19234  3FC4  0020               	movlb	0	; select bank0
 19235  3FC5  0823               	movf	___lmul@product+3,w
 19236  3FC6  00F4               	movwf	?___lmul+3
 19237  3FC7  0822               	movf	___lmul@product+2,w
 19238  3FC8  00F3               	movwf	?___lmul+2
 19239  3FC9  0821               	movf	___lmul@product+1,w
 19240  3FCA  00F2               	movwf	?___lmul+1
 19241  3FCB  0820               	movf	___lmul@product,w
 19242  3FCC  00F1               	movwf	?___lmul
 19243  3FCD  0008               	return
 19244  3FCE                     __end_of___lmul:	
 19245                           
 19246                           	psect	text73
 19247  344E                     __ptext73:	
 19248 ;; *************** function ___fltol *****************
 19249 ;; Defined at:
 19250 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 19251 ;; Parameters:    Size  Location     Type
 19252 ;;  f1              4    0[BANK1 ] unsigned long 
 19253 ;; Auto vars:     Size  Location     Type
 19254 ;;  exp1            1   11[COMMON] unsigned char 
 19255 ;;  sign1           1   10[COMMON] unsigned char 
 19256 ;; Return value:  Size  Location     Type
 19257 ;;                  4    0[BANK1 ] long 
 19258 ;; Registers used:
 19259 ;;		wreg, status,2, status,0
 19260 ;; Tracked objects:
 19261 ;;		On entry : 0/0
 19262 ;;		On exit  : 0/0
 19263 ;;		Unchanged: 0/0
 19264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19265 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19266 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19267 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19268 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19269 ;;Total ram usage:       11 bytes
 19270 ;; Hardware stack levels used:    1
 19271 ;; Hardware stack levels required when called:    1
 19272 ;; This function calls:
 19273 ;;		Nothing
 19274 ;; This function is called by:
 19275 ;;		_updateVoltages
 19276 ;;		_AFE_getSetShortCircuitCurrent
 19277 ;;		_AFE_getOverCurrentDischargeCurrent
 19278 ;;		_efgtoa
 19279 ;;		_updateCurrent
 19280 ;; This function uses a non-reentrant model
 19281 ;;
 19282                           
 19283                           
 19284                           ;psect for function ___fltol
 19285  344E                     ___fltol:	
 19286                           
 19287                           ;incstack = 0
 19288                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 19289  344E  1003               	clrc
 19290  344F  0021               	movlb	1	; select bank1
 19291  3450  0D22               	rlf	(___fltol@f1+2)^(0+128),w
 19292  3451  0D23               	rlf	(___fltol@f1+3)^(0+128),w
 19293  3452  00A4               	movwf	??___fltol^(0+128)
 19294  3453  0824               	movf	??___fltol^(0+128),w
 19295  3454  00FB               	movwf	___fltol@exp1
 19296  3455  087B               	movf	___fltol@exp1,w
 19297  3456  1D03               	btfss	3,2
 19298  3457  2C61               	goto	l5021
 19299  3458                     l5017:	
 19300  3458  3000               	movlw	0
 19301  3459  00A3               	movwf	(?___fltol+3)^(0+128)
 19302  345A  3000               	movlw	0
 19303  345B  00A2               	movwf	(?___fltol+2)^(0+128)
 19304  345C  3000               	movlw	0
 19305  345D  00A1               	movwf	(?___fltol+1)^(0+128)
 19306  345E  3000               	movlw	0
 19307  345F  00A0               	movwf	?___fltol^(0+128)
 19308  3460  0008               	return
 19309  3461                     l5021:	
 19310  3461  0820               	movf	___fltol@f1^(0+128),w
 19311  3462  00A4               	movwf	??___fltol^(0+128)
 19312  3463  0821               	movf	(___fltol@f1+1)^(0+128),w
 19313  3464  00A5               	movwf	(??___fltol^(0+128)+1)
 19314  3465  0822               	movf	(___fltol@f1+2)^(0+128),w
 19315  3466  00A6               	movwf	(??___fltol^(0+128)+2)
 19316  3467  0823               	movf	(___fltol@f1+3)^(0+128),w
 19317  3468  00A7               	movwf	(??___fltol^(0+128)+3)
 19318  3469  301F               	movlw	31
 19319  346A                     u6325:	
 19320  346A  36A7               	lsrf	(??___fltol^(0+128)+3),f
 19321  346B  0CA6               	rrf	(??___fltol^(0+128)+2),f
 19322  346C  0CA5               	rrf	(??___fltol^(0+128)+1),f
 19323  346D  0CA4               	rrf	??___fltol^(0+128),f
 19324  346E  0B89               	decfsz	9,f
 19325  346F  2C6A               	goto	u6325
 19326  3470  0824               	movf	??___fltol^(0+128),w
 19327  3471  00A8               	movwf	(??___fltol+4)^(0+128)
 19328  3472  0828               	movf	(??___fltol+4)^(0+128),w
 19329  3473  00FA               	movwf	___fltol@sign1
 19330  3474  17A2               	bsf	(___fltol@f1^(0+128)+2),7
 19331  3475  30FF               	movlw	255
 19332  3476  05A0               	andwf	___fltol@f1^(0+128),f
 19333  3477  30FF               	movlw	255
 19334  3478  05A1               	andwf	(___fltol@f1+1)^(0+128),f
 19335  3479  30FF               	movlw	255
 19336  347A  05A2               	andwf	(___fltol@f1+2)^(0+128),f
 19337  347B  3000               	movlw	0
 19338  347C  05A3               	andwf	(___fltol@f1+3)^(0+128),f
 19339  347D  3096               	movlw	150
 19340  347E  02FB               	subwf	___fltol@exp1,f
 19341  347F  1FFB               	btfss	___fltol@exp1,7
 19342  3480  2C94               	goto	l5039
 19343  3481  087B               	movf	___fltol@exp1,w
 19344  3482  3A80               	xorlw	128
 19345  3483  3E97               	addlw	151
 19346  3484  1C03               	btfss	3,0
 19347  3485  2C58               	goto	l5017
 19348  3486                     l5037:	
 19349  3486  3001               	movlw	1
 19350  3487                     u6355:	
 19351  3487  36A3               	lsrf	(___fltol@f1+3)^(0+128),f
 19352  3488  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
 19353  3489  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
 19354  348A  0CA0               	rrf	___fltol@f1^(0+128),f
 19355  348B  0B89               	decfsz	9,f
 19356  348C  2C87               	goto	u6355
 19357  348D  3001               	movlw	1
 19358  348E  00A4               	movwf	??___fltol^(0+128)
 19359  348F  0824               	movf	??___fltol^(0+128),w
 19360  3490  07FB               	addwf	___fltol@exp1,f
 19361  3491  1903               	btfsc	3,2
 19362  3492  2CA5               	goto	l5047
 19363  3493  2C86               	goto	l5037
 19364  3494                     l5039:	
 19365  3494  3020               	movlw	32
 19366  3495  027B               	subwf	___fltol@exp1,w
 19367  3496  1803               	btfsc	3,0
 19368  3497  2C58               	goto	l5017
 19369  3498                     l1142:	
 19370  3498  087B               	movf	___fltol@exp1,w
 19371  3499  1903               	btfsc	3,2
 19372  349A  2CA5               	goto	l5047
 19373  349B  3001               	movlw	1
 19374  349C                     u6385:	
 19375  349C  35A0               	lslf	___fltol@f1^(0+128),f
 19376  349D  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
 19377  349E  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
 19378  349F  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
 19379  34A0  0B89               	decfsz	9,f
 19380  34A1  2C9C               	goto	u6385
 19381  34A2  3001               	movlw	1
 19382  34A3  02FB               	subwf	___fltol@exp1,f
 19383  34A4  2C98               	goto	l1142
 19384  34A5                     l5047:	
 19385  34A5  087A               	movf	___fltol@sign1,w
 19386  34A6  1903               	btfsc	3,2
 19387  34A7  0008               	return
 19388  34A8  09A0               	comf	___fltol@f1^(0+128),f
 19389  34A9  09A1               	comf	(___fltol@f1+1)^(0+128),f
 19390  34AA  09A2               	comf	(___fltol@f1+2)^(0+128),f
 19391  34AB  09A3               	comf	(___fltol@f1+3)^(0+128),f
 19392  34AC  0AA0               	incf	___fltol@f1^(0+128),f
 19393  34AD  1903               	skipnz
 19394  34AE  0AA1               	incf	(___fltol@f1+1)^(0+128),f
 19395  34AF  1903               	skipnz
 19396  34B0  0AA2               	incf	(___fltol@f1+2)^(0+128),f
 19397  34B1  1903               	skipnz
 19398  34B2  0AA3               	incf	(___fltol@f1+3)^(0+128),f
 19399  34B3  0008               	return
 19400  34B4                     __end_of___fltol:	
 19401                           
 19402                           	psect	text74
 19403  10D5                     __ptext74:	
 19404 ;; *************** function ___flmul *****************
 19405 ;; Defined at:
 19406 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 19407 ;; Parameters:    Size  Location     Type
 19408 ;;  b               4    6[BANK0 ] long 
 19409 ;;  a               4   10[BANK0 ] long 
 19410 ;; Auto vars:     Size  Location     Type
 19411 ;;  prod            4   26[BANK0 ] struct .
 19412 ;;  grs             4   20[BANK0 ] unsigned long 
 19413 ;;  temp            2   30[BANK0 ] struct .
 19414 ;;  bexp            1   25[BANK0 ] unsigned char 
 19415 ;;  aexp            1   24[BANK0 ] unsigned char 
 19416 ;;  sign            1   19[BANK0 ] unsigned char 
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  4    6[BANK0 ] unsigned char 
 19419 ;; Registers used:
 19420 ;;		wreg, status,2, status,0, pclath, cstack
 19421 ;; Tracked objects:
 19422 ;;		On entry : 0/0
 19423 ;;		On exit  : 0/0
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19426 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19427 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19428 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19429 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19430 ;;Total ram usage:       26 bytes
 19431 ;; Hardware stack levels used:    1
 19432 ;; Hardware stack levels required when called:    2
 19433 ;; This function calls:
 19434 ;;		__Umul8_16
 19435 ;; This function is called by:
 19436 ;;		_setShortCircuitProtection
 19437 ;;		_setOverCurrentDischargeProtection
 19438 ;;		_updateVoltages
 19439 ;;		_efgtoa
 19440 ;;		_updateCurrent
 19441 ;; This function uses a non-reentrant model
 19442 ;;
 19443                           
 19444                           
 19445                           ;psect for function ___flmul
 19446  10D5                     ___flmul:	
 19447                           
 19448                           ;incstack = 0
 19449                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 19450  10D5  0020               	movlb	0	; select bank0
 19451  10D6  0829               	movf	___flmul@b+3,w
 19452  10D7  3980               	andlw	128
 19453  10D8  00AE               	movwf	??___flmul
 19454  10D9  082E               	movf	??___flmul,w
 19455  10DA  00B3               	movwf	___flmul@sign
 19456  10DB  3529               	lslf	___flmul@b+3,w
 19457  10DC  00AE               	movwf	??___flmul
 19458  10DD  082E               	movf	??___flmul,w
 19459  10DE  00B9               	movwf	___flmul@bexp
 19460  10DF  1BA8               	btfsc	___flmul@b+2,7
 19461  10E0  1439               	bsf	___flmul@bexp,0
 19462  10E1  0839               	movf	___flmul@bexp,w
 19463  10E2  1903               	btfsc	3,2
 19464  10E3  28F1               	goto	l5251
 19465  10E4  0A39               	incf	___flmul@bexp,w
 19466  10E5  1D03               	btfss	3,2
 19467  10E6  28EF               	goto	l5249
 19468  10E7  3000               	movlw	0
 19469  10E8  00A9               	movwf	___flmul@b+3
 19470  10E9  3000               	movlw	0
 19471  10EA  00A8               	movwf	___flmul@b+2
 19472  10EB  3000               	movlw	0
 19473  10EC  00A7               	movwf	___flmul@b+1
 19474  10ED  3000               	movlw	0
 19475  10EE  00A6               	movwf	___flmul@b
 19476  10EF                     l5249:	
 19477  10EF  17A8               	bsf	___flmul@b+2,7
 19478  10F0  28F9               	goto	l5253
 19479  10F1                     l5251:	
 19480  10F1  3000               	movlw	0
 19481  10F2  00A9               	movwf	___flmul@b+3
 19482  10F3  3000               	movlw	0
 19483  10F4  00A8               	movwf	___flmul@b+2
 19484  10F5  3000               	movlw	0
 19485  10F6  00A7               	movwf	___flmul@b+1
 19486  10F7  3000               	movlw	0
 19487  10F8  00A6               	movwf	___flmul@b
 19488  10F9                     l5253:	
 19489  10F9  082D               	movf	___flmul@a+3,w
 19490  10FA  3980               	andlw	128
 19491  10FB  00AE               	movwf	??___flmul
 19492  10FC  082E               	movf	??___flmul,w
 19493  10FD  06B3               	xorwf	___flmul@sign,f
 19494  10FE  352D               	lslf	___flmul@a+3,w
 19495  10FF  00AE               	movwf	??___flmul
 19496  1100  082E               	movf	??___flmul,w
 19497  1101  00B8               	movwf	___flmul@aexp
 19498  1102  1BAC               	btfsc	___flmul@a+2,7
 19499  1103  1438               	bsf	___flmul@aexp,0
 19500  1104  0838               	movf	___flmul@aexp,w
 19501  1105  1903               	btfsc	3,2
 19502  1106  2914               	goto	l5269
 19503  1107  0A38               	incf	___flmul@aexp,w
 19504  1108  1D03               	btfss	3,2
 19505  1109  2912               	goto	l5267
 19506  110A  3000               	movlw	0
 19507  110B  00AD               	movwf	___flmul@a+3
 19508  110C  3000               	movlw	0
 19509  110D  00AC               	movwf	___flmul@a+2
 19510  110E  3000               	movlw	0
 19511  110F  00AB               	movwf	___flmul@a+1
 19512  1110  3000               	movlw	0
 19513  1111  00AA               	movwf	___flmul@a
 19514  1112                     l5267:	
 19515  1112  17AC               	bsf	___flmul@a+2,7
 19516  1113  291C               	goto	l5271
 19517  1114                     l5269:	
 19518  1114  3000               	movlw	0
 19519  1115  00AD               	movwf	___flmul@a+3
 19520  1116  3000               	movlw	0
 19521  1117  00AC               	movwf	___flmul@a+2
 19522  1118  3000               	movlw	0
 19523  1119  00AB               	movwf	___flmul@a+1
 19524  111A  3000               	movlw	0
 19525  111B  00AA               	movwf	___flmul@a
 19526  111C                     l5271:	
 19527  111C  0838               	movf	___flmul@aexp,w
 19528  111D  1D03               	btfss	3,2
 19529  111E  0839               	movf	___flmul@bexp,w
 19530  111F  1D03               	btfss	3,2
 19531  1120  292A               	goto	l5279
 19532  1121  3000               	movlw	0
 19533  1122  00A9               	movwf	?___flmul+3
 19534  1123  3000               	movlw	0
 19535  1124  00A8               	movwf	?___flmul+2
 19536  1125  3000               	movlw	0
 19537  1126  00A7               	movwf	?___flmul+1
 19538  1127  3000               	movlw	0
 19539  1128  00A6               	movwf	?___flmul
 19540  1129  0008               	return
 19541  112A                     l5279:	
 19542  112A  0826               	movf	___flmul@b,w
 19543  112B  00AE               	movwf	??___flmul
 19544  112C  082E               	movf	??___flmul,w
 19545  112D  00F1               	movwf	__Umul8_16@multiplicand
 19546  112E  082C               	movf	___flmul@a+2,w
 19547  112F  31BE  2682  3190   	fcall	__Umul8_16
 19548  1132  0872               	movf	?__Umul8_16+1,w
 19549  1133  0020               	movlb	0	; select bank0
 19550  1134  00BF               	movwf	___flmul@temp+1
 19551  1135  0871               	movf	?__Umul8_16,w
 19552  1136  00BE               	movwf	___flmul@temp
 19553  1137  083E               	movf	___flmul@temp,w
 19554  1138  00AE               	movwf	??___flmul
 19555  1139  01AF               	clrf	??___flmul+1
 19556  113A  01B0               	clrf	??___flmul+2
 19557  113B  01B1               	clrf	??___flmul+3
 19558  113C  0831               	movf	??___flmul+3,w
 19559  113D  00B7               	movwf	___flmul@grs+3
 19560  113E  0830               	movf	??___flmul+2,w
 19561  113F  00B6               	movwf	___flmul@grs+2
 19562  1140  082F               	movf	??___flmul+1,w
 19563  1141  00B5               	movwf	___flmul@grs+1
 19564  1142  082E               	movf	??___flmul,w
 19565  1143  00B4               	movwf	___flmul@grs
 19566  1144  083F               	movf	___flmul@temp+1,w
 19567  1145  00AE               	movwf	??___flmul
 19568  1146  01AF               	clrf	??___flmul+1
 19569  1147  01B0               	clrf	??___flmul+2
 19570  1148  01B1               	clrf	??___flmul+3
 19571  1149  0831               	movf	??___flmul+3,w
 19572  114A  00BD               	movwf	___flmul@prod+3
 19573  114B  0830               	movf	??___flmul+2,w
 19574  114C  00BC               	movwf	___flmul@prod+2
 19575  114D  082F               	movf	??___flmul+1,w
 19576  114E  00BB               	movwf	___flmul@prod+1
 19577  114F  082E               	movf	??___flmul,w
 19578  1150  00BA               	movwf	___flmul@prod
 19579  1151  0827               	movf	___flmul@b+1,w
 19580  1152  00AE               	movwf	??___flmul
 19581  1153  082E               	movf	??___flmul,w
 19582  1154  00F1               	movwf	__Umul8_16@multiplicand
 19583  1155  082B               	movf	___flmul@a+1,w
 19584  1156  31BE  2682  3190   	fcall	__Umul8_16
 19585  1159  0872               	movf	?__Umul8_16+1,w
 19586  115A  0020               	movlb	0	; select bank0
 19587  115B  00BF               	movwf	___flmul@temp+1
 19588  115C  0871               	movf	?__Umul8_16,w
 19589  115D  00BE               	movwf	___flmul@temp
 19590  115E  083E               	movf	___flmul@temp,w
 19591  115F  00AE               	movwf	??___flmul
 19592  1160  01AF               	clrf	??___flmul+1
 19593  1161  01B0               	clrf	??___flmul+2
 19594  1162  01B1               	clrf	??___flmul+3
 19595  1163  082E               	movf	??___flmul,w
 19596  1164  07B4               	addwf	___flmul@grs,f
 19597  1165  082F               	movf	??___flmul+1,w
 19598  1166  3DB5               	addwfc	___flmul@grs+1,f
 19599  1167  0830               	movf	??___flmul+2,w
 19600  1168  3DB6               	addwfc	___flmul@grs+2,f
 19601  1169  0831               	movf	??___flmul+3,w
 19602  116A  3DB7               	addwfc	___flmul@grs+3,f
 19603  116B  083F               	movf	___flmul@temp+1,w
 19604  116C  00AE               	movwf	??___flmul
 19605  116D  01AF               	clrf	??___flmul+1
 19606  116E  01B0               	clrf	??___flmul+2
 19607  116F  01B1               	clrf	??___flmul+3
 19608  1170  082E               	movf	??___flmul,w
 19609  1171  07BA               	addwf	___flmul@prod,f
 19610  1172  082F               	movf	??___flmul+1,w
 19611  1173  3DBB               	addwfc	___flmul@prod+1,f
 19612  1174  0830               	movf	??___flmul+2,w
 19613  1175  3DBC               	addwfc	___flmul@prod+2,f
 19614  1176  0831               	movf	??___flmul+3,w
 19615  1177  3DBD               	addwfc	___flmul@prod+3,f
 19616  1178  0828               	movf	___flmul@b+2,w
 19617  1179  00AE               	movwf	??___flmul
 19618  117A  082E               	movf	??___flmul,w
 19619  117B  00F1               	movwf	__Umul8_16@multiplicand
 19620  117C  082A               	movf	___flmul@a,w
 19621  117D  31BE  2682  3190   	fcall	__Umul8_16
 19622  1180  0872               	movf	?__Umul8_16+1,w
 19623  1181  0020               	movlb	0	; select bank0
 19624  1182  00BF               	movwf	___flmul@temp+1
 19625  1183  0871               	movf	?__Umul8_16,w
 19626  1184  00BE               	movwf	___flmul@temp
 19627  1185  083E               	movf	___flmul@temp,w
 19628  1186  00AE               	movwf	??___flmul
 19629  1187  01AF               	clrf	??___flmul+1
 19630  1188  01B0               	clrf	??___flmul+2
 19631  1189  01B1               	clrf	??___flmul+3
 19632  118A  082E               	movf	??___flmul,w
 19633  118B  07B4               	addwf	___flmul@grs,f
 19634  118C  082F               	movf	??___flmul+1,w
 19635  118D  3DB5               	addwfc	___flmul@grs+1,f
 19636  118E  0830               	movf	??___flmul+2,w
 19637  118F  3DB6               	addwfc	___flmul@grs+2,f
 19638  1190  0831               	movf	??___flmul+3,w
 19639  1191  3DB7               	addwfc	___flmul@grs+3,f
 19640  1192  083F               	movf	___flmul@temp+1,w
 19641  1193  00AE               	movwf	??___flmul
 19642  1194  01AF               	clrf	??___flmul+1
 19643  1195  01B0               	clrf	??___flmul+2
 19644  1196  01B1               	clrf	??___flmul+3
 19645  1197  082E               	movf	??___flmul,w
 19646  1198  07BA               	addwf	___flmul@prod,f
 19647  1199  082F               	movf	??___flmul+1,w
 19648  119A  3DBB               	addwfc	___flmul@prod+1,f
 19649  119B  0830               	movf	??___flmul+2,w
 19650  119C  3DBC               	addwfc	___flmul@prod+2,f
 19651  119D  0831               	movf	??___flmul+3,w
 19652  119E  3DBD               	addwfc	___flmul@prod+3,f
 19653  119F  3008               	movlw	8
 19654  11A0                     u6875:	
 19655  11A0  35B4               	lslf	___flmul@grs,f
 19656  11A1  0DB5               	rlf	___flmul@grs+1,f
 19657  11A2  0DB6               	rlf	___flmul@grs+2,f
 19658  11A3  0DB7               	rlf	___flmul@grs+3,f
 19659  11A4  0B89               	decfsz	9,f
 19660  11A5  29A0               	goto	u6875
 19661  11A6  0827               	movf	___flmul@b+1,w
 19662  11A7  00AE               	movwf	??___flmul
 19663  11A8  082E               	movf	??___flmul,w
 19664  11A9  00F1               	movwf	__Umul8_16@multiplicand
 19665  11AA  082A               	movf	___flmul@a,w
 19666  11AB  31BE  2682  3190   	fcall	__Umul8_16
 19667  11AE  0872               	movf	?__Umul8_16+1,w
 19668  11AF  0020               	movlb	0	; select bank0
 19669  11B0  00BF               	movwf	___flmul@temp+1
 19670  11B1  0871               	movf	?__Umul8_16,w
 19671  11B2  00BE               	movwf	___flmul@temp
 19672  11B3  083E               	movf	___flmul@temp,w
 19673  11B4  07B4               	addwf	___flmul@grs,f
 19674  11B5  083F               	movf	___flmul@temp+1,w
 19675  11B6  3DB5               	addwfc	___flmul@grs+1,f
 19676  11B7  3000               	movlw	0
 19677  11B8  3DB6               	addwfc	___flmul@grs+2,f
 19678  11B9  3DB7               	addwfc	___flmul@grs+3,f
 19679  11BA  0826               	movf	___flmul@b,w
 19680  11BB  00AE               	movwf	??___flmul
 19681  11BC  082E               	movf	??___flmul,w
 19682  11BD  00F1               	movwf	__Umul8_16@multiplicand
 19683  11BE  082B               	movf	___flmul@a+1,w
 19684  11BF  31BE  2682  3190   	fcall	__Umul8_16
 19685  11C2  0872               	movf	?__Umul8_16+1,w
 19686  11C3  0020               	movlb	0	; select bank0
 19687  11C4  00BF               	movwf	___flmul@temp+1
 19688  11C5  0871               	movf	?__Umul8_16,w
 19689  11C6  00BE               	movwf	___flmul@temp
 19690  11C7  083E               	movf	___flmul@temp,w
 19691  11C8  07B4               	addwf	___flmul@grs,f
 19692  11C9  083F               	movf	___flmul@temp+1,w
 19693  11CA  3DB5               	addwfc	___flmul@grs+1,f
 19694  11CB  3000               	movlw	0
 19695  11CC  3DB6               	addwfc	___flmul@grs+2,f
 19696  11CD  3DB7               	addwfc	___flmul@grs+3,f
 19697  11CE  3008               	movlw	8
 19698  11CF                     u6885:	
 19699  11CF  35B4               	lslf	___flmul@grs,f
 19700  11D0  0DB5               	rlf	___flmul@grs+1,f
 19701  11D1  0DB6               	rlf	___flmul@grs+2,f
 19702  11D2  0DB7               	rlf	___flmul@grs+3,f
 19703  11D3  0B89               	decfsz	9,f
 19704  11D4  29CF               	goto	u6885
 19705  11D5  0826               	movf	___flmul@b,w
 19706  11D6  00AE               	movwf	??___flmul
 19707  11D7  082E               	movf	??___flmul,w
 19708  11D8  00F1               	movwf	__Umul8_16@multiplicand
 19709  11D9  082A               	movf	___flmul@a,w
 19710  11DA  31BE  2682  3190   	fcall	__Umul8_16
 19711  11DD  0872               	movf	?__Umul8_16+1,w
 19712  11DE  0020               	movlb	0	; select bank0
 19713  11DF  00BF               	movwf	___flmul@temp+1
 19714  11E0  0871               	movf	?__Umul8_16,w
 19715  11E1  00BE               	movwf	___flmul@temp
 19716  11E2  083E               	movf	___flmul@temp,w
 19717  11E3  07B4               	addwf	___flmul@grs,f
 19718  11E4  083F               	movf	___flmul@temp+1,w
 19719  11E5  3DB5               	addwfc	___flmul@grs+1,f
 19720  11E6  3000               	movlw	0
 19721  11E7  3DB6               	addwfc	___flmul@grs+2,f
 19722  11E8  3DB7               	addwfc	___flmul@grs+3,f
 19723  11E9  0827               	movf	___flmul@b+1,w
 19724  11EA  00AE               	movwf	??___flmul
 19725  11EB  082E               	movf	??___flmul,w
 19726  11EC  00F1               	movwf	__Umul8_16@multiplicand
 19727  11ED  082C               	movf	___flmul@a+2,w
 19728  11EE  31BE  2682  3190   	fcall	__Umul8_16
 19729  11F1  0872               	movf	?__Umul8_16+1,w
 19730  11F2  0020               	movlb	0	; select bank0
 19731  11F3  00BF               	movwf	___flmul@temp+1
 19732  11F4  0871               	movf	?__Umul8_16,w
 19733  11F5  00BE               	movwf	___flmul@temp
 19734  11F6  083E               	movf	___flmul@temp,w
 19735  11F7  07BA               	addwf	___flmul@prod,f
 19736  11F8  083F               	movf	___flmul@temp+1,w
 19737  11F9  3DBB               	addwfc	___flmul@prod+1,f
 19738  11FA  3000               	movlw	0
 19739  11FB  3DBC               	addwfc	___flmul@prod+2,f
 19740  11FC  3DBD               	addwfc	___flmul@prod+3,f
 19741  11FD  0828               	movf	___flmul@b+2,w
 19742  11FE  00AE               	movwf	??___flmul
 19743  11FF  082E               	movf	??___flmul,w
 19744  1200  00F1               	movwf	__Umul8_16@multiplicand
 19745  1201  082B               	movf	___flmul@a+1,w
 19746  1202  31BE  2682  3190   	fcall	__Umul8_16
 19747  1205  0872               	movf	?__Umul8_16+1,w
 19748  1206  0020               	movlb	0	; select bank0
 19749  1207  00BF               	movwf	___flmul@temp+1
 19750  1208  0871               	movf	?__Umul8_16,w
 19751  1209  00BE               	movwf	___flmul@temp
 19752  120A  083E               	movf	___flmul@temp,w
 19753  120B  07BA               	addwf	___flmul@prod,f
 19754  120C  083F               	movf	___flmul@temp+1,w
 19755  120D  3DBB               	addwfc	___flmul@prod+1,f
 19756  120E  3000               	movlw	0
 19757  120F  3DBC               	addwfc	___flmul@prod+2,f
 19758  1210  3DBD               	addwfc	___flmul@prod+3,f
 19759  1211  0828               	movf	___flmul@b+2,w
 19760  1212  00AE               	movwf	??___flmul
 19761  1213  082E               	movf	??___flmul,w
 19762  1214  00F1               	movwf	__Umul8_16@multiplicand
 19763  1215  082C               	movf	___flmul@a+2,w
 19764  1216  31BE  2682  3190   	fcall	__Umul8_16
 19765  1219  0872               	movf	?__Umul8_16+1,w
 19766  121A  0020               	movlb	0	; select bank0
 19767  121B  00BF               	movwf	___flmul@temp+1
 19768  121C  0871               	movf	?__Umul8_16,w
 19769  121D  00BE               	movwf	___flmul@temp
 19770  121E  083E               	movf	___flmul@temp,w
 19771  121F  00AE               	movwf	??___flmul
 19772  1220  083F               	movf	___flmul@temp+1,w
 19773  1221  00AF               	movwf	??___flmul+1
 19774  1222  01B0               	clrf	??___flmul+2
 19775  1223  01B1               	clrf	??___flmul+3
 19776  1224  3008               	movlw	8
 19777  1225                     u6895:	
 19778  1225  35AE               	lslf	??___flmul,f
 19779  1226  0DAF               	rlf	??___flmul+1,f
 19780  1227  0DB0               	rlf	??___flmul+2,f
 19781  1228  0DB1               	rlf	??___flmul+3,f
 19782  1229  0B89               	decfsz	9,f
 19783  122A  2A25               	goto	u6895
 19784  122B  082E               	movf	??___flmul,w
 19785  122C  07BA               	addwf	___flmul@prod,f
 19786  122D  082F               	movf	??___flmul+1,w
 19787  122E  3DBB               	addwfc	___flmul@prod+1,f
 19788  122F  0830               	movf	??___flmul+2,w
 19789  1230  3DBC               	addwfc	___flmul@prod+2,f
 19790  1231  0831               	movf	??___flmul+3,w
 19791  1232  3DBD               	addwfc	___flmul@prod+3,f
 19792  1233  0834               	movf	___flmul@grs,w
 19793  1234  00AE               	movwf	??___flmul
 19794  1235  0835               	movf	___flmul@grs+1,w
 19795  1236  00AF               	movwf	??___flmul+1
 19796  1237  0836               	movf	___flmul@grs+2,w
 19797  1238  00B0               	movwf	??___flmul+2
 19798  1239  0837               	movf	___flmul@grs+3,w
 19799  123A  00B1               	movwf	??___flmul+3
 19800  123B  3018               	movlw	24
 19801  123C                     u6905:	
 19802  123C  36B1               	lsrf	??___flmul+3,f
 19803  123D  0CB0               	rrf	??___flmul+2,f
 19804  123E  0CAF               	rrf	??___flmul+1,f
 19805  123F  0CAE               	rrf	??___flmul,f
 19806  1240  0B89               	decfsz	9,f
 19807  1241  2A3C               	goto	u6905
 19808  1242  082E               	movf	??___flmul,w
 19809  1243  07BA               	addwf	___flmul@prod,f
 19810  1244  082F               	movf	??___flmul+1,w
 19811  1245  3DBB               	addwfc	___flmul@prod+1,f
 19812  1246  0830               	movf	??___flmul+2,w
 19813  1247  3DBC               	addwfc	___flmul@prod+2,f
 19814  1248  0831               	movf	??___flmul+3,w
 19815  1249  3DBD               	addwfc	___flmul@prod+3,f
 19816  124A  3008               	movlw	8
 19817  124B                     u6915:	
 19818  124B  35B4               	lslf	___flmul@grs,f
 19819  124C  0DB5               	rlf	___flmul@grs+1,f
 19820  124D  0DB6               	rlf	___flmul@grs+2,f
 19821  124E  0DB7               	rlf	___flmul@grs+3,f
 19822  124F  0B89               	decfsz	9,f
 19823  1250  2A4B               	goto	u6915
 19824  1251  0839               	movf	___flmul@bexp,w
 19825  1252  0738               	addwf	___flmul@aexp,w
 19826  1253  00AE               	movwf	??___flmul
 19827  1254  01AF               	clrf	??___flmul+1
 19828  1255  0DAF               	rlf	??___flmul+1,f
 19829  1256  082E               	movf	??___flmul,w
 19830  1257  3E82               	addlw	130
 19831  1258  00BE               	movwf	___flmul@temp
 19832  1259  30FF               	movlw	255
 19833  125A  3D2F               	addwfc	??___flmul+1,w
 19834  125B  00BF               	movwf	___flmul@temp+1
 19835  125C                     l5331:	
 19836  125C  1BBC               	btfsc	___flmul@prod+2,7
 19837  125D  2A73               	goto	l5333
 19838  125E  3001               	movlw	1
 19839  125F                     u6925:	
 19840  125F  35BA               	lslf	___flmul@prod,f
 19841  1260  0DBB               	rlf	___flmul@prod+1,f
 19842  1261  0DBC               	rlf	___flmul@prod+2,f
 19843  1262  0DBD               	rlf	___flmul@prod+3,f
 19844  1263  0B89               	decfsz	9,f
 19845  1264  2A5F               	goto	u6925
 19846  1265  1BB7               	btfsc	___flmul@grs+3,7
 19847  1266  143A               	bsf	___flmul@prod,0
 19848  1267  3001               	movlw	1
 19849  1268                     u6945:	
 19850  1268  35B4               	lslf	___flmul@grs,f
 19851  1269  0DB5               	rlf	___flmul@grs+1,f
 19852  126A  0DB6               	rlf	___flmul@grs+2,f
 19853  126B  0DB7               	rlf	___flmul@grs+3,f
 19854  126C  0B89               	decfsz	9,f
 19855  126D  2A68               	goto	u6945
 19856  126E  30FF               	movlw	255
 19857  126F  07BE               	addwf	___flmul@temp,f
 19858  1270  30FF               	movlw	255
 19859  1271  3DBF               	addwfc	___flmul@temp+1,f
 19860  1272  2A5C               	goto	l5331
 19861  1273                     l5333:	
 19862  1273  01B8               	clrf	___flmul@aexp
 19863  1274  1FB7               	btfss	___flmul@grs+3,7
 19864  1275  2A8C               	goto	l5343
 19865  1276  30FF               	movlw	255
 19866  1277  0534               	andwf	___flmul@grs,w
 19867  1278  00AE               	movwf	??___flmul
 19868  1279  30FF               	movlw	255
 19869  127A  0535               	andwf	___flmul@grs+1,w
 19870  127B  00AF               	movwf	??___flmul+1
 19871  127C  30FF               	movlw	255
 19872  127D  0536               	andwf	___flmul@grs+2,w
 19873  127E  00B0               	movwf	??___flmul+2
 19874  127F  307F               	movlw	127
 19875  1280  0537               	andwf	___flmul@grs+3,w
 19876  1281  00B1               	movwf	??___flmul+3
 19877  1282  0831               	movf	??___flmul+3,w
 19878  1283  0430               	iorwf	??___flmul+2,w
 19879  1284  042F               	iorwf	??___flmul+1,w
 19880  1285  042E               	iorwf	??___flmul,w
 19881  1286  1903               	skipnz
 19882  1287  183A               	btfsc	___flmul@prod,0
 19883  1288  2A8A               	goto	l5339
 19884  1289  2A8C               	goto	l5343
 19885  128A                     l5339:	
 19886  128A  01B8               	clrf	___flmul@aexp
 19887  128B  0AB8               	incf	___flmul@aexp,f
 19888  128C                     l5343:	
 19889  128C  0838               	movf	___flmul@aexp,w
 19890  128D  1903               	btfsc	3,2
 19891  128E  2AB5               	goto	l5353
 19892  128F  3001               	movlw	1
 19893  1290  07BA               	addwf	___flmul@prod,f
 19894  1291  3000               	movlw	0
 19895  1292  3DBB               	addwfc	___flmul@prod+1,f
 19896  1293  3000               	movlw	0
 19897  1294  3DBC               	addwfc	___flmul@prod+2,f
 19898  1295  3000               	movlw	0
 19899  1296  3DBD               	addwfc	___flmul@prod+3,f
 19900  1297  1C3D               	btfss	___flmul@prod+3,0
 19901  1298  2AB5               	goto	l5353
 19902  1299  083A               	movf	___flmul@prod,w
 19903  129A  00AE               	movwf	??___flmul
 19904  129B  083B               	movf	___flmul@prod+1,w
 19905  129C  00AF               	movwf	??___flmul+1
 19906  129D  083C               	movf	___flmul@prod+2,w
 19907  129E  00B0               	movwf	??___flmul+2
 19908  129F  083D               	movf	___flmul@prod+3,w
 19909  12A0  00B1               	movwf	??___flmul+3
 19910  12A1  3001               	movlw	1
 19911  12A2  00B2               	movwf	??___flmul+4
 19912  12A3                     u7015:	
 19913  12A3  37B1               	asrf	??___flmul+3,f
 19914  12A4  0CB0               	rrf	??___flmul+2,f
 19915  12A5  0CAF               	rrf	??___flmul+1,f
 19916  12A6  0CAE               	rrf	??___flmul,f
 19917  12A7  0BB2               	decfsz	??___flmul+4,f
 19918  12A8  2AA3               	goto	u7015
 19919  12A9  0831               	movf	??___flmul+3,w
 19920  12AA  00BD               	movwf	___flmul@prod+3
 19921  12AB  0830               	movf	??___flmul+2,w
 19922  12AC  00BC               	movwf	___flmul@prod+2
 19923  12AD  082F               	movf	??___flmul+1,w
 19924  12AE  00BB               	movwf	___flmul@prod+1
 19925  12AF  082E               	movf	??___flmul,w
 19926  12B0  00BA               	movwf	___flmul@prod
 19927  12B1  3001               	movlw	1
 19928  12B2  07BE               	addwf	___flmul@temp,f
 19929  12B3  3000               	movlw	0
 19930  12B4  3DBF               	addwfc	___flmul@temp+1,f
 19931  12B5                     l5353:	
 19932  12B5  083F               	movf	___flmul@temp+1,w
 19933  12B6  3A80               	xorlw	128
 19934  12B7  00AE               	movwf	??___flmul
 19935  12B8  3080               	movlw	128
 19936  12B9  022E               	subwf	??___flmul,w
 19937  12BA  1D03               	skipz
 19938  12BB  2ABE               	goto	u7025
 19939  12BC  30FF               	movlw	255
 19940  12BD  023E               	subwf	___flmul@temp,w
 19941  12BE                     u7025:	
 19942  12BE  1C03               	skipc
 19943  12BF  2ACA               	goto	l5357
 19944  12C0  307F               	movlw	127
 19945  12C1  0020               	movlb	0	; select bank0
 19946  12C2  00BD               	movwf	___flmul@prod+3
 19947  12C3  3080               	movlw	128
 19948  12C4  00BC               	movwf	___flmul@prod+2
 19949  12C5  3000               	movlw	0
 19950  12C6  00BB               	movwf	___flmul@prod+1
 19951  12C7  3000               	movlw	0
 19952  12C8  00BA               	movwf	___flmul@prod
 19953  12C9  2AF4               	goto	l1350
 19954  12CA                     l5357:	
 19955  12CA  0020               	movlb	0	; select bank0
 19956  12CB  083F               	movf	___flmul@temp+1,w
 19957  12CC  3A80               	xorlw	128
 19958  12CD  00AE               	movwf	??___flmul
 19959  12CE  3080               	movlw	128
 19960  12CF  022E               	subwf	??___flmul,w
 19961  12D0  1D03               	skipz
 19962  12D1  2AD4               	goto	u7035
 19963  12D2  3001               	movlw	1
 19964  12D3  023E               	subwf	___flmul@temp,w
 19965  12D4                     u7035:	
 19966  12D4  1803               	skipnc
 19967  12D5  2AE1               	goto	l5363
 19968  12D6  3000               	movlw	0
 19969  12D7  0020               	movlb	0	; select bank0
 19970  12D8  00BD               	movwf	___flmul@prod+3
 19971  12D9  3000               	movlw	0
 19972  12DA  00BC               	movwf	___flmul@prod+2
 19973  12DB  3000               	movlw	0
 19974  12DC  00BB               	movwf	___flmul@prod+1
 19975  12DD  3000               	movlw	0
 19976  12DE  00BA               	movwf	___flmul@prod
 19977  12DF  01B3               	clrf	___flmul@sign
 19978  12E0  2AF4               	goto	l1350
 19979  12E1                     l5363:	
 19980  12E1  0020               	movlb	0	; select bank0
 19981  12E2  083E               	movf	___flmul@temp,w
 19982  12E3  00AE               	movwf	??___flmul
 19983  12E4  082E               	movf	??___flmul,w
 19984  12E5  00B9               	movwf	___flmul@bexp
 19985  12E6  30FF               	movlw	255
 19986  12E7  05BA               	andwf	___flmul@prod,f
 19987  12E8  30FF               	movlw	255
 19988  12E9  05BB               	andwf	___flmul@prod+1,f
 19989  12EA  307F               	movlw	127
 19990  12EB  05BC               	andwf	___flmul@prod+2,f
 19991  12EC  3000               	movlw	0
 19992  12ED  05BD               	andwf	___flmul@prod+3,f
 19993  12EE  1839               	btfsc	___flmul@bexp,0
 19994  12EF  17BC               	bsf	___flmul@prod+2,7
 19995  12F0  3639               	lsrf	___flmul@bexp,w
 19996  12F1  00AE               	movwf	??___flmul
 19997  12F2  082E               	movf	??___flmul,w
 19998  12F3  00BD               	movwf	___flmul@prod+3
 19999  12F4                     l1350:	
 20000  12F4  0833               	movf	___flmul@sign,w
 20001  12F5  00AE               	movwf	??___flmul
 20002  12F6  082E               	movf	??___flmul,w
 20003  12F7  04BD               	iorwf	___flmul@prod+3,f
 20004  12F8  083D               	movf	___flmul@prod+3,w
 20005  12F9  00A9               	movwf	?___flmul+3
 20006  12FA  083C               	movf	___flmul@prod+2,w
 20007  12FB  00A8               	movwf	?___flmul+2
 20008  12FC  083B               	movf	___flmul@prod+1,w
 20009  12FD  00A7               	movwf	?___flmul+1
 20010  12FE  083A               	movf	___flmul@prod,w
 20011  12FF  00A6               	movwf	?___flmul
 20012  1300  0008               	return
 20013  1301                     __end_of___flmul:	
 20014                           
 20015                           	psect	text75
 20016  3E82                     __ptext75:	
 20017 ;; *************** function __Umul8_16 *****************
 20018 ;; Defined at:
 20019 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 20020 ;; Parameters:    Size  Location     Type
 20021 ;;  multiplier      1    wreg     unsigned char 
 20022 ;;  multiplicand    1    1[COMMON] unsigned char 
 20023 ;; Auto vars:     Size  Location     Type
 20024 ;;  multiplier      1    9[COMMON] unsigned char 
 20025 ;;  word_mpld       2    7[COMMON] unsigned int 
 20026 ;;  product         2    5[COMMON] unsigned int 
 20027 ;; Return value:  Size  Location     Type
 20028 ;;                  2    1[COMMON] unsigned int 
 20029 ;; Registers used:
 20030 ;;		wreg, status,2, status,0
 20031 ;; Tracked objects:
 20032 ;;		On entry : 0/0
 20033 ;;		On exit  : 0/0
 20034 ;;		Unchanged: 0/0
 20035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20037 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20038 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20039 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20040 ;;Total ram usage:        9 bytes
 20041 ;; Hardware stack levels used:    1
 20042 ;; Hardware stack levels required when called:    1
 20043 ;; This function calls:
 20044 ;;		Nothing
 20045 ;; This function is called by:
 20046 ;;		___flmul
 20047 ;; This function uses a non-reentrant model
 20048 ;;
 20049                           
 20050                           
 20051                           ;psect for function __Umul8_16
 20052  3E82                     __Umul8_16:	
 20053                           
 20054                           ;incstack = 0
 20055                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 20056                           ;__Umul8_16@multiplier stored from wreg
 20057  3E82  00F9               	movwf	__Umul8_16@multiplier
 20058  3E83  01F5               	clrf	__Umul8_16@product
 20059  3E84  01F6               	clrf	__Umul8_16@product+1
 20060  3E85  0871               	movf	__Umul8_16@multiplicand,w
 20061  3E86  00F3               	movwf	??__Umul8_16
 20062  3E87  01F4               	clrf	??__Umul8_16+1
 20063  3E88  0873               	movf	??__Umul8_16,w
 20064  3E89  00F7               	movwf	__Umul8_16@word_mpld
 20065  3E8A  0874               	movf	??__Umul8_16+1,w
 20066  3E8B  00F8               	movwf	__Umul8_16@word_mpld+1
 20067  3E8C                     l4685:	
 20068  3E8C  1C79               	btfss	__Umul8_16@multiplier,0
 20069  3E8D  2E92               	goto	l1560
 20070  3E8E  0877               	movf	__Umul8_16@word_mpld,w
 20071  3E8F  07F5               	addwf	__Umul8_16@product,f
 20072  3E90  0878               	movf	__Umul8_16@word_mpld+1,w
 20073  3E91  3DF6               	addwfc	__Umul8_16@product+1,f
 20074  3E92                     l1560:	
 20075  3E92  3001               	movlw	1
 20076  3E93                     u5395:	
 20077  3E93  35F7               	lslf	__Umul8_16@word_mpld,f
 20078  3E94  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 20079  3E95  0B89               	decfsz	9,f
 20080  3E96  2E93               	goto	u5395
 20081  3E97  1003               	clrc
 20082  3E98  0CF9               	rrf	__Umul8_16@multiplier,f
 20083  3E99  0879               	movf	__Umul8_16@multiplier,w
 20084  3E9A  1D03               	btfss	3,2
 20085  3E9B  2E8C               	goto	l4685
 20086  3E9C  0876               	movf	__Umul8_16@product+1,w
 20087  3E9D  00F2               	movwf	?__Umul8_16+1
 20088  3E9E  0875               	movf	__Umul8_16@product,w
 20089  3E9F  00F1               	movwf	?__Umul8_16
 20090  3EA0  0008               	return
 20091  3EA1                     __end_of__Umul8_16:	
 20092                           
 20093                           	psect	text76
 20094  1AB3                     __ptext76:	
 20095 ;; *************** function ___fldiv *****************
 20096 ;; Defined at:
 20097 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 20098 ;; Parameters:    Size  Location     Type
 20099 ;;  a               4   32[BANK0 ] unsigned int 
 20100 ;;  b               4   36[BANK0 ] unsigned int 
 20101 ;; Auto vars:     Size  Location     Type
 20102 ;;  grs             4   52[BANK0 ] unsigned long 
 20103 ;;  rem             4   45[BANK0 ] unsigned long 
 20104 ;;  new_exp         2   50[BANK0 ] int 
 20105 ;;  aexp            1   57[BANK0 ] unsigned char 
 20106 ;;  bexp            1   56[BANK0 ] unsigned char 
 20107 ;;  sign            1   49[BANK0 ] unsigned char 
 20108 ;; Return value:  Size  Location     Type
 20109 ;;                  4   32[BANK0 ] unsigned char 
 20110 ;; Registers used:
 20111 ;;		wreg, status,2, status,0
 20112 ;; Tracked objects:
 20113 ;;		On entry : 0/0
 20114 ;;		On exit  : 0/0
 20115 ;;		Unchanged: 0/0
 20116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20117 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20118 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20119 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20120 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20121 ;;Total ram usage:       26 bytes
 20122 ;; Hardware stack levels used:    1
 20123 ;; Hardware stack levels required when called:    1
 20124 ;; This function calls:
 20125 ;;		Nothing
 20126 ;; This function is called by:
 20127 ;;		_setShortCircuitProtection
 20128 ;;		_setOverCurrentDischargeProtection
 20129 ;;		_updateVoltages
 20130 ;;		_AFE_getSetShortCircuitCurrent
 20131 ;;		_AFE_getOverCurrentDischargeCurrent
 20132 ;;		_efgtoa
 20133 ;;		_updateCurrent
 20134 ;; This function uses a non-reentrant model
 20135 ;;
 20136                           
 20137                           
 20138                           ;psect for function ___fldiv
 20139  1AB3                     ___fldiv:	
 20140                           
 20141                           ;incstack = 0
 20142                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 20143  1AB3  0020               	movlb	0	; select bank0
 20144  1AB4  0847               	movf	___fldiv@b+3,w
 20145  1AB5  3980               	andlw	128
 20146  1AB6  00C8               	movwf	??___fldiv
 20147  1AB7  0848               	movf	??___fldiv,w
 20148  1AB8  00D1               	movwf	___fldiv@sign
 20149  1AB9  3547               	lslf	___fldiv@b+3,w
 20150  1ABA  00C8               	movwf	??___fldiv
 20151  1ABB  0848               	movf	??___fldiv,w
 20152  1ABC  00D8               	movwf	___fldiv@bexp
 20153  1ABD  1BC6               	btfsc	___fldiv@b+2,7
 20154  1ABE  1458               	bsf	___fldiv@bexp,0
 20155  1ABF  0858               	movf	___fldiv@bexp,w
 20156  1AC0  1903               	btfsc	3,2
 20157  1AC1  2AD0               	goto	l5113
 20158  1AC2  0A58               	incf	___fldiv@bexp,w
 20159  1AC3  1D03               	btfss	3,2
 20160  1AC4  2ACD               	goto	l5109
 20161  1AC5  3000               	movlw	0
 20162  1AC6  00C7               	movwf	___fldiv@b+3
 20163  1AC7  3000               	movlw	0
 20164  1AC8  00C6               	movwf	___fldiv@b+2
 20165  1AC9  3000               	movlw	0
 20166  1ACA  00C5               	movwf	___fldiv@b+1
 20167  1ACB  3000               	movlw	0
 20168  1ACC  00C4               	movwf	___fldiv@b
 20169  1ACD                     l5109:	
 20170  1ACD  17C6               	bsf	___fldiv@b+2,7
 20171  1ACE  01C7               	clrf	___fldiv@b+3
 20172  1ACF  2AD8               	goto	l5115
 20173  1AD0                     l5113:	
 20174  1AD0  3000               	movlw	0
 20175  1AD1  00C7               	movwf	___fldiv@b+3
 20176  1AD2  3000               	movlw	0
 20177  1AD3  00C6               	movwf	___fldiv@b+2
 20178  1AD4  3000               	movlw	0
 20179  1AD5  00C5               	movwf	___fldiv@b+1
 20180  1AD6  3000               	movlw	0
 20181  1AD7  00C4               	movwf	___fldiv@b
 20182  1AD8                     l5115:	
 20183  1AD8  0843               	movf	___fldiv@a+3,w
 20184  1AD9  3980               	andlw	128
 20185  1ADA  00C8               	movwf	??___fldiv
 20186  1ADB  0848               	movf	??___fldiv,w
 20187  1ADC  06D1               	xorwf	___fldiv@sign,f
 20188  1ADD  3543               	lslf	___fldiv@a+3,w
 20189  1ADE  00C8               	movwf	??___fldiv
 20190  1ADF  0848               	movf	??___fldiv,w
 20191  1AE0  00D9               	movwf	___fldiv@aexp
 20192  1AE1  1BC2               	btfsc	___fldiv@a+2,7
 20193  1AE2  1459               	bsf	___fldiv@aexp,0
 20194  1AE3  0859               	movf	___fldiv@aexp,w
 20195  1AE4  1903               	btfsc	3,2
 20196  1AE5  2AF4               	goto	l5133
 20197  1AE6  0A59               	incf	___fldiv@aexp,w
 20198  1AE7  1D03               	btfss	3,2
 20199  1AE8  2AF1               	goto	l5129
 20200  1AE9  3000               	movlw	0
 20201  1AEA  00C3               	movwf	___fldiv@a+3
 20202  1AEB  3000               	movlw	0
 20203  1AEC  00C2               	movwf	___fldiv@a+2
 20204  1AED  3000               	movlw	0
 20205  1AEE  00C1               	movwf	___fldiv@a+1
 20206  1AEF  3000               	movlw	0
 20207  1AF0  00C0               	movwf	___fldiv@a
 20208  1AF1                     l5129:	
 20209  1AF1  17C2               	bsf	___fldiv@a+2,7
 20210  1AF2  01C3               	clrf	___fldiv@a+3
 20211  1AF3  2AFC               	goto	l1298
 20212  1AF4                     l5133:	
 20213  1AF4  3000               	movlw	0
 20214  1AF5  00C3               	movwf	___fldiv@a+3
 20215  1AF6  3000               	movlw	0
 20216  1AF7  00C2               	movwf	___fldiv@a+2
 20217  1AF8  3000               	movlw	0
 20218  1AF9  00C1               	movwf	___fldiv@a+1
 20219  1AFA  3000               	movlw	0
 20220  1AFB  00C0               	movwf	___fldiv@a
 20221  1AFC                     l1298:	
 20222  1AFC  0843               	movf	___fldiv@a+3,w
 20223  1AFD  0442               	iorwf	___fldiv@a+2,w
 20224  1AFE  0441               	iorwf	___fldiv@a+1,w
 20225  1AFF  0440               	iorwf	___fldiv@a,w
 20226  1B00  1D03               	skipz
 20227  1B01  2B1B               	goto	l5143
 20228  1B02  3000               	movlw	0
 20229  1B03  00C7               	movwf	___fldiv@b+3
 20230  1B04  3000               	movlw	0
 20231  1B05  00C6               	movwf	___fldiv@b+2
 20232  1B06  3000               	movlw	0
 20233  1B07  00C5               	movwf	___fldiv@b+1
 20234  1B08  3000               	movlw	0
 20235  1B09  00C4               	movwf	___fldiv@b
 20236  1B0A  3080               	movlw	128
 20237  1B0B  04C6               	iorwf	___fldiv@b+2,f
 20238  1B0C  307F               	movlw	127
 20239  1B0D  04C7               	iorwf	___fldiv@b+3,f
 20240  1B0E                     L13:	
 20241  1B0E  0851               	movf	___fldiv@sign,w
 20242  1B0F  00C8               	movwf	??___fldiv
 20243  1B10  0848               	movf	??___fldiv,w
 20244  1B11  04C7               	iorwf	___fldiv@b+3,f
 20245  1B12  0847               	movf	___fldiv@b+3,w
 20246  1B13  00C3               	movwf	?___fldiv+3
 20247  1B14  0846               	movf	___fldiv@b+2,w
 20248  1B15  00C2               	movwf	?___fldiv+2
 20249  1B16  0845               	movf	___fldiv@b+1,w
 20250  1B17  00C1               	movwf	?___fldiv+1
 20251  1B18  0844               	movf	___fldiv@b,w
 20252  1B19  00C0               	movwf	?___fldiv
 20253  1B1A  0008               	return
 20254  1B1B                     l5143:	
 20255  1B1B  0858               	movf	___fldiv@bexp,w
 20256  1B1C  1D03               	btfss	3,2
 20257  1B1D  2B27               	goto	l5149
 20258  1B1E  3000               	movlw	0
 20259  1B1F  00C3               	movwf	?___fldiv+3
 20260  1B20  3000               	movlw	0
 20261  1B21  00C2               	movwf	?___fldiv+2
 20262  1B22  3000               	movlw	0
 20263  1B23  00C1               	movwf	?___fldiv+1
 20264  1B24  3000               	movlw	0
 20265  1B25  00C0               	movwf	?___fldiv
 20266  1B26  0008               	return
 20267  1B27                     l5149:	
 20268  1B27  0858               	movf	___fldiv@bexp,w
 20269  1B28  00C8               	movwf	??___fldiv
 20270  1B29  01C9               	clrf	??___fldiv+1
 20271  1B2A  0849               	movf	??___fldiv+1,w
 20272  1B2B  00CB               	movwf	??___fldiv+3
 20273  1B2C  0859               	movf	___fldiv@aexp,w
 20274  1B2D  0248               	subwf	??___fldiv,w
 20275  1B2E  00CA               	movwf	??___fldiv+2
 20276  1B2F  1C03               	skipc
 20277  1B30  03CB               	decf	??___fldiv+3,f
 20278  1B31  084A               	movf	??___fldiv+2,w
 20279  1B32  3E7F               	addlw	127
 20280  1B33  00D2               	movwf	___fldiv@new_exp
 20281  1B34  3000               	movlw	0
 20282  1B35  3D4B               	addwfc	??___fldiv+3,w
 20283  1B36  00D3               	movwf	___fldiv@new_exp+1
 20284  1B37  0847               	movf	___fldiv@b+3,w
 20285  1B38  00D0               	movwf	___fldiv@rem+3
 20286  1B39  0846               	movf	___fldiv@b+2,w
 20287  1B3A  00CF               	movwf	___fldiv@rem+2
 20288  1B3B  0845               	movf	___fldiv@b+1,w
 20289  1B3C  00CE               	movwf	___fldiv@rem+1
 20290  1B3D  0844               	movf	___fldiv@b,w
 20291  1B3E  00CD               	movwf	___fldiv@rem
 20292  1B3F  3000               	movlw	0
 20293  1B40  00C7               	movwf	___fldiv@b+3
 20294  1B41  3000               	movlw	0
 20295  1B42  00C6               	movwf	___fldiv@b+2
 20296  1B43  3000               	movlw	0
 20297  1B44  00C5               	movwf	___fldiv@b+1
 20298  1B45  3000               	movlw	0
 20299  1B46  00C4               	movwf	___fldiv@b
 20300  1B47  3000               	movlw	0
 20301  1B48  00D7               	movwf	___fldiv@grs+3
 20302  1B49  3000               	movlw	0
 20303  1B4A  00D6               	movwf	___fldiv@grs+2
 20304  1B4B  3000               	movlw	0
 20305  1B4C  00D5               	movwf	___fldiv@grs+1
 20306  1B4D  3000               	movlw	0
 20307  1B4E  00D4               	movwf	___fldiv@grs
 20308  1B4F  01D9               	clrf	___fldiv@aexp
 20309  1B50                     l5177:	
 20310  1B50  301A               	movlw	26
 20311  1B51  0259               	subwf	___fldiv@aexp,w
 20312  1B52  1803               	btfsc	3,0
 20313  1B53  2B8C               	goto	l5179
 20314  1B54  0859               	movf	___fldiv@aexp,w
 20315  1B55  1903               	btfsc	3,2
 20316  1B56  2B6E               	goto	l5169
 20317  1B57  3001               	movlw	1
 20318  1B58                     u6595:	
 20319  1B58  35CD               	lslf	___fldiv@rem,f
 20320  1B59  0DCE               	rlf	___fldiv@rem+1,f
 20321  1B5A  0DCF               	rlf	___fldiv@rem+2,f
 20322  1B5B  0DD0               	rlf	___fldiv@rem+3,f
 20323  1B5C  0B89               	decfsz	9,f
 20324  1B5D  2B58               	goto	u6595
 20325  1B5E  3001               	movlw	1
 20326  1B5F                     u6605:	
 20327  1B5F  35C4               	lslf	___fldiv@b,f
 20328  1B60  0DC5               	rlf	___fldiv@b+1,f
 20329  1B61  0DC6               	rlf	___fldiv@b+2,f
 20330  1B62  0DC7               	rlf	___fldiv@b+3,f
 20331  1B63  0B89               	decfsz	9,f
 20332  1B64  2B5F               	goto	u6605
 20333  1B65  1BD7               	btfsc	___fldiv@grs+3,7
 20334  1B66  1444               	bsf	___fldiv@b,0
 20335  1B67  3001               	movlw	1
 20336  1B68                     u6625:	
 20337  1B68  35D4               	lslf	___fldiv@grs,f
 20338  1B69  0DD5               	rlf	___fldiv@grs+1,f
 20339  1B6A  0DD6               	rlf	___fldiv@grs+2,f
 20340  1B6B  0DD7               	rlf	___fldiv@grs+3,f
 20341  1B6C  0B89               	decfsz	9,f
 20342  1B6D  2B68               	goto	u6625
 20343  1B6E                     l5169:	
 20344  1B6E  0843               	movf	___fldiv@a+3,w
 20345  1B6F  0250               	subwf	___fldiv@rem+3,w
 20346  1B70  1D03               	skipz
 20347  1B71  2B7C               	goto	u6635
 20348  1B72  0842               	movf	___fldiv@a+2,w
 20349  1B73  024F               	subwf	___fldiv@rem+2,w
 20350  1B74  1D03               	skipz
 20351  1B75  2B7C               	goto	u6635
 20352  1B76  0841               	movf	___fldiv@a+1,w
 20353  1B77  024E               	subwf	___fldiv@rem+1,w
 20354  1B78  1D03               	skipz
 20355  1B79  2B7C               	goto	u6635
 20356  1B7A  0840               	movf	___fldiv@a,w
 20357  1B7B  024D               	subwf	___fldiv@rem,w
 20358  1B7C                     u6635:	
 20359  1B7C  1C03               	skipc
 20360  1B7D  2B87               	goto	l5175
 20361  1B7E  1757               	bsf	___fldiv@grs+3,6
 20362  1B7F  0840               	movf	___fldiv@a,w
 20363  1B80  02CD               	subwf	___fldiv@rem,f
 20364  1B81  0841               	movf	___fldiv@a+1,w
 20365  1B82  3BCE               	subwfb	___fldiv@rem+1,f
 20366  1B83  0842               	movf	___fldiv@a+2,w
 20367  1B84  3BCF               	subwfb	___fldiv@rem+2,f
 20368  1B85  0843               	movf	___fldiv@a+3,w
 20369  1B86  3BD0               	subwfb	___fldiv@rem+3,f
 20370  1B87                     l5175:	
 20371  1B87  3001               	movlw	1
 20372  1B88  00C8               	movwf	??___fldiv
 20373  1B89  0848               	movf	??___fldiv,w
 20374  1B8A  07D9               	addwf	___fldiv@aexp,f
 20375  1B8B  2B50               	goto	l5177
 20376  1B8C                     l5179:	
 20377  1B8C  0850               	movf	___fldiv@rem+3,w
 20378  1B8D  044F               	iorwf	___fldiv@rem+2,w
 20379  1B8E  044E               	iorwf	___fldiv@rem+1,w
 20380  1B8F  044D               	iorwf	___fldiv@rem,w
 20381  1B90  1D03               	btfss	3,2
 20382  1B91  1454               	bsf	___fldiv@grs,0
 20383  1B92                     l5193:	
 20384  1B92  1BC6               	btfsc	___fldiv@b+2,7
 20385  1B93  2BA9               	goto	l5195
 20386  1B94  3001               	movlw	1
 20387  1B95                     u6665:	
 20388  1B95  35C4               	lslf	___fldiv@b,f
 20389  1B96  0DC5               	rlf	___fldiv@b+1,f
 20390  1B97  0DC6               	rlf	___fldiv@b+2,f
 20391  1B98  0DC7               	rlf	___fldiv@b+3,f
 20392  1B99  0B89               	decfsz	9,f
 20393  1B9A  2B95               	goto	u6665
 20394  1B9B  1BD7               	btfsc	___fldiv@grs+3,7
 20395  1B9C  1444               	bsf	___fldiv@b,0
 20396  1B9D  3001               	movlw	1
 20397  1B9E                     u6685:	
 20398  1B9E  35D4               	lslf	___fldiv@grs,f
 20399  1B9F  0DD5               	rlf	___fldiv@grs+1,f
 20400  1BA0  0DD6               	rlf	___fldiv@grs+2,f
 20401  1BA1  0DD7               	rlf	___fldiv@grs+3,f
 20402  1BA2  0B89               	decfsz	9,f
 20403  1BA3  2B9E               	goto	u6685
 20404  1BA4  30FF               	movlw	255
 20405  1BA5  07D2               	addwf	___fldiv@new_exp,f
 20406  1BA6  30FF               	movlw	255
 20407  1BA7  3DD3               	addwfc	___fldiv@new_exp+1,f
 20408  1BA8  2B92               	goto	l5193
 20409  1BA9                     l5195:	
 20410  1BA9  01D9               	clrf	___fldiv@aexp
 20411  1BAA  1FD7               	btfss	___fldiv@grs+3,7
 20412  1BAB  2BC2               	goto	l5205
 20413  1BAC  30FF               	movlw	255
 20414  1BAD  0554               	andwf	___fldiv@grs,w
 20415  1BAE  00C8               	movwf	??___fldiv
 20416  1BAF  30FF               	movlw	255
 20417  1BB0  0555               	andwf	___fldiv@grs+1,w
 20418  1BB1  00C9               	movwf	??___fldiv+1
 20419  1BB2  30FF               	movlw	255
 20420  1BB3  0556               	andwf	___fldiv@grs+2,w
 20421  1BB4  00CA               	movwf	??___fldiv+2
 20422  1BB5  307F               	movlw	127
 20423  1BB6  0557               	andwf	___fldiv@grs+3,w
 20424  1BB7  00CB               	movwf	??___fldiv+3
 20425  1BB8  084B               	movf	??___fldiv+3,w
 20426  1BB9  044A               	iorwf	??___fldiv+2,w
 20427  1BBA  0449               	iorwf	??___fldiv+1,w
 20428  1BBB  0448               	iorwf	??___fldiv,w
 20429  1BBC  1903               	skipnz
 20430  1BBD  1844               	btfsc	___fldiv@b,0
 20431  1BBE  2BC0               	goto	l5201
 20432  1BBF  2BC2               	goto	l5205
 20433  1BC0                     l5201:	
 20434  1BC0  01D9               	clrf	___fldiv@aexp
 20435  1BC1  0AD9               	incf	___fldiv@aexp,f
 20436  1BC2                     l5205:	
 20437  1BC2  0859               	movf	___fldiv@aexp,w
 20438  1BC3  1903               	btfsc	3,2
 20439  1BC4  2BEB               	goto	l5215
 20440  1BC5  3001               	movlw	1
 20441  1BC6  07C4               	addwf	___fldiv@b,f
 20442  1BC7  3000               	movlw	0
 20443  1BC8  3DC5               	addwfc	___fldiv@b+1,f
 20444  1BC9  3000               	movlw	0
 20445  1BCA  3DC6               	addwfc	___fldiv@b+2,f
 20446  1BCB  3000               	movlw	0
 20447  1BCC  3DC7               	addwfc	___fldiv@b+3,f
 20448  1BCD  1C47               	btfss	___fldiv@b+3,0
 20449  1BCE  2BEB               	goto	l5215
 20450  1BCF  0844               	movf	___fldiv@b,w
 20451  1BD0  00C8               	movwf	??___fldiv
 20452  1BD1  0845               	movf	___fldiv@b+1,w
 20453  1BD2  00C9               	movwf	??___fldiv+1
 20454  1BD3  0846               	movf	___fldiv@b+2,w
 20455  1BD4  00CA               	movwf	??___fldiv+2
 20456  1BD5  0847               	movf	___fldiv@b+3,w
 20457  1BD6  00CB               	movwf	??___fldiv+3
 20458  1BD7  3001               	movlw	1
 20459  1BD8  00CC               	movwf	??___fldiv+4
 20460  1BD9                     u6755:	
 20461  1BD9  37CB               	asrf	??___fldiv+3,f
 20462  1BDA  0CCA               	rrf	??___fldiv+2,f
 20463  1BDB  0CC9               	rrf	??___fldiv+1,f
 20464  1BDC  0CC8               	rrf	??___fldiv,f
 20465  1BDD  0BCC               	decfsz	??___fldiv+4,f
 20466  1BDE  2BD9               	goto	u6755
 20467  1BDF  084B               	movf	??___fldiv+3,w
 20468  1BE0  00C7               	movwf	___fldiv@b+3
 20469  1BE1  084A               	movf	??___fldiv+2,w
 20470  1BE2  00C6               	movwf	___fldiv@b+2
 20471  1BE3  0849               	movf	??___fldiv+1,w
 20472  1BE4  00C5               	movwf	___fldiv@b+1
 20473  1BE5  0848               	movf	??___fldiv,w
 20474  1BE6  00C4               	movwf	___fldiv@b
 20475  1BE7  3001               	movlw	1
 20476  1BE8  07D2               	addwf	___fldiv@new_exp,f
 20477  1BE9  3000               	movlw	0
 20478  1BEA  3DD3               	addwfc	___fldiv@new_exp+1,f
 20479  1BEB                     l5215:	
 20480  1BEB  0853               	movf	___fldiv@new_exp+1,w
 20481  1BEC  3A80               	xorlw	128
 20482  1BED  00C8               	movwf	??___fldiv
 20483  1BEE  3080               	movlw	128
 20484  1BEF  0248               	subwf	??___fldiv,w
 20485  1BF0  1D03               	skipz
 20486  1BF1  2BF4               	goto	u6765
 20487  1BF2  30FF               	movlw	255
 20488  1BF3  0252               	subwf	___fldiv@new_exp,w
 20489  1BF4                     u6765:	
 20490  1BF4  1C03               	skipc
 20491  1BF5  2C03               	goto	l1319
 20492  1BF6  30FF               	movlw	255
 20493  1BF7  0020               	movlb	0	; select bank0
 20494  1BF8  00D2               	movwf	___fldiv@new_exp
 20495  1BF9  3000               	movlw	0
 20496  1BFA  00D3               	movwf	___fldiv@new_exp+1
 20497  1BFB  3000               	movlw	0
 20498  1BFC  00C7               	movwf	___fldiv@b+3
 20499  1BFD  3000               	movlw	0
 20500  1BFE  00C6               	movwf	___fldiv@b+2
 20501  1BFF  3000               	movlw	0
 20502  1C00  00C5               	movwf	___fldiv@b+1
 20503  1C01  3000               	movlw	0
 20504  1C02  00C4               	movwf	___fldiv@b
 20505  1C03                     l1319:	
 20506  1C03  0020               	movlb	0	; select bank0
 20507  1C04  0853               	movf	___fldiv@new_exp+1,w
 20508  1C05  3A80               	xorlw	128
 20509  1C06  00C8               	movwf	??___fldiv
 20510  1C07  3080               	movlw	128
 20511  1C08  0248               	subwf	??___fldiv,w
 20512  1C09  1D03               	skipz
 20513  1C0A  2C0D               	goto	u6775
 20514  1C0B  3001               	movlw	1
 20515  1C0C  0252               	subwf	___fldiv@new_exp,w
 20516  1C0D                     u6775:	
 20517  1C0D  1803               	skipnc
 20518  1C0E  2C1B               	goto	l1320
 20519  1C0F  0020               	movlb	0	; select bank0
 20520  1C10  01D2               	clrf	___fldiv@new_exp
 20521  1C11  01D3               	clrf	___fldiv@new_exp+1
 20522  1C12  3000               	movlw	0
 20523  1C13  00C7               	movwf	___fldiv@b+3
 20524  1C14  3000               	movlw	0
 20525  1C15  00C6               	movwf	___fldiv@b+2
 20526  1C16  3000               	movlw	0
 20527  1C17  00C5               	movwf	___fldiv@b+1
 20528  1C18  3000               	movlw	0
 20529  1C19  00C4               	movwf	___fldiv@b
 20530  1C1A  01D1               	clrf	___fldiv@sign
 20531  1C1B                     l1320:	
 20532  1C1B  0020               	movlb	0	; select bank0
 20533  1C1C  0852               	movf	___fldiv@new_exp,w
 20534  1C1D  00C8               	movwf	??___fldiv
 20535  1C1E  0848               	movf	??___fldiv,w
 20536  1C1F  00D8               	movwf	___fldiv@bexp
 20537  1C20  1C58               	btfss	___fldiv@bexp,0
 20538  1C21  2C24               	goto	l5229
 20539  1C22  17C6               	bsf	___fldiv@b+2,7
 20540  1C23  2C28               	goto	l1322
 20541  1C24                     l5229:	
 20542  1C24  307F               	movlw	127
 20543  1C25  00C8               	movwf	??___fldiv
 20544  1C26  0848               	movf	??___fldiv,w
 20545  1C27  05C6               	andwf	___fldiv@b+2,f
 20546  1C28                     l1322:	
 20547  1C28  3658               	lsrf	___fldiv@bexp,w
 20548  1C29  00C8               	movwf	??___fldiv
 20549  1C2A  0848               	movf	??___fldiv,w
 20550  1C2B  00C7               	movwf	___fldiv@b+3
 20551  1C2C  2B0E               	goto	L13
 20552  1C2D                     __end_of___fldiv:	
 20553                           
 20554                           	psect	text77
 20555  1C2D                     __ptext77:	
 20556 ;; *************** function ___fladd *****************
 20557 ;; Defined at:
 20558 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 20559 ;; Parameters:    Size  Location     Type
 20560 ;;  b               4   58[BANK0 ] unsigned char 
 20561 ;;  a               4   62[BANK0 ] unsigned char 
 20562 ;; Auto vars:     Size  Location     Type
 20563 ;;  grs             1   77[BANK0 ] unsigned char 
 20564 ;;  bexp            1   76[BANK0 ] unsigned char 
 20565 ;;  aexp            1   75[BANK0 ] unsigned char 
 20566 ;;  signs           1   74[BANK0 ] unsigned char 
 20567 ;; Return value:  Size  Location     Type
 20568 ;;                  4   58[BANK0 ] unsigned char 
 20569 ;; Registers used:
 20570 ;;		wreg, status,2, status,0
 20571 ;; Tracked objects:
 20572 ;;		On entry : 0/0
 20573 ;;		On exit  : 0/0
 20574 ;;		Unchanged: 0/0
 20575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20576 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20577 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20578 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20579 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20580 ;;Total ram usage:       20 bytes
 20581 ;; Hardware stack levels used:    1
 20582 ;; Hardware stack levels required when called:    1
 20583 ;; This function calls:
 20584 ;;		Nothing
 20585 ;; This function is called by:
 20586 ;;		_updateVoltages
 20587 ;;		_efgtoa
 20588 ;;		___flsub
 20589 ;; This function uses a non-reentrant model
 20590 ;;
 20591                           
 20592                           
 20593                           ;psect for function ___fladd
 20594  1C2D                     ___fladd:	
 20595                           
 20596                           ;incstack = 0
 20597                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 20598  1C2D  0020               	movlb	0	; select bank0
 20599  1C2E  085D               	movf	___fladd@b+3,w
 20600  1C2F  3980               	andlw	128
 20601  1C30  00E2               	movwf	??___fladd
 20602  1C31  0862               	movf	??___fladd,w
 20603  1C32  00EA               	movwf	___fladd@signs
 20604  1C33  355D               	lslf	___fladd@b+3,w
 20605  1C34  00E2               	movwf	??___fladd
 20606  1C35  0862               	movf	??___fladd,w
 20607  1C36  00EC               	movwf	___fladd@bexp
 20608  1C37  1BDC               	btfsc	___fladd@b+2,7
 20609  1C38  146C               	bsf	___fladd@bexp,0
 20610  1C39  086C               	movf	___fladd@bexp,w
 20611  1C3A  1903               	btfsc	3,2
 20612  1C3B  2C4A               	goto	l4505
 20613  1C3C  0A6C               	incf	___fladd@bexp,w
 20614  1C3D  1D03               	btfss	3,2
 20615  1C3E  2C47               	goto	l4501
 20616  1C3F  3000               	movlw	0
 20617  1C40  00DD               	movwf	___fladd@b+3
 20618  1C41  3000               	movlw	0
 20619  1C42  00DC               	movwf	___fladd@b+2
 20620  1C43  3000               	movlw	0
 20621  1C44  00DB               	movwf	___fladd@b+1
 20622  1C45  3000               	movlw	0
 20623  1C46  00DA               	movwf	___fladd@b
 20624  1C47                     l4501:	
 20625  1C47  17DC               	bsf	___fladd@b+2,7
 20626  1C48  01DD               	clrf	___fladd@b+3
 20627  1C49  2C52               	goto	l4507
 20628  1C4A                     l4505:	
 20629  1C4A  3000               	movlw	0
 20630  1C4B  00DD               	movwf	___fladd@b+3
 20631  1C4C  3000               	movlw	0
 20632  1C4D  00DC               	movwf	___fladd@b+2
 20633  1C4E  3000               	movlw	0
 20634  1C4F  00DB               	movwf	___fladd@b+1
 20635  1C50  3000               	movlw	0
 20636  1C51  00DA               	movwf	___fladd@b
 20637  1C52                     l4507:	
 20638  1C52  0861               	movf	___fladd@a+3,w
 20639  1C53  3980               	andlw	128
 20640  1C54  00E2               	movwf	??___fladd
 20641  1C55  0862               	movf	??___fladd,w
 20642  1C56  00EB               	movwf	___fladd@aexp
 20643  1C57  086B               	movf	___fladd@aexp,w
 20644  1C58  066A               	xorwf	___fladd@signs,w
 20645  1C59  1D03               	btfss	3,2
 20646  1C5A  176A               	bsf	___fladd@signs,6
 20647  1C5B  3561               	lslf	___fladd@a+3,w
 20648  1C5C  00E2               	movwf	??___fladd
 20649  1C5D  0862               	movf	??___fladd,w
 20650  1C5E  00EB               	movwf	___fladd@aexp
 20651  1C5F  1BE0               	btfsc	___fladd@a+2,7
 20652  1C60  146B               	bsf	___fladd@aexp,0
 20653  1C61  086B               	movf	___fladd@aexp,w
 20654  1C62  1903               	btfsc	3,2
 20655  1C63  2C72               	goto	l4529
 20656  1C64  0A6B               	incf	___fladd@aexp,w
 20657  1C65  1D03               	btfss	3,2
 20658  1C66  2C6F               	goto	l4525
 20659  1C67  3000               	movlw	0
 20660  1C68  00E1               	movwf	___fladd@a+3
 20661  1C69  3000               	movlw	0
 20662  1C6A  00E0               	movwf	___fladd@a+2
 20663  1C6B  3000               	movlw	0
 20664  1C6C  00DF               	movwf	___fladd@a+1
 20665  1C6D  3000               	movlw	0
 20666  1C6E  00DE               	movwf	___fladd@a
 20667  1C6F                     l4525:	
 20668  1C6F  17E0               	bsf	___fladd@a+2,7
 20669  1C70  01E1               	clrf	___fladd@a+3
 20670  1C71  2C7A               	goto	l1242
 20671  1C72                     l4529:	
 20672  1C72  3000               	movlw	0
 20673  1C73  00E1               	movwf	___fladd@a+3
 20674  1C74  3000               	movlw	0
 20675  1C75  00E0               	movwf	___fladd@a+2
 20676  1C76  3000               	movlw	0
 20677  1C77  00DF               	movwf	___fladd@a+1
 20678  1C78  3000               	movlw	0
 20679  1C79  00DE               	movwf	___fladd@a
 20680  1C7A                     l1242:	
 20681  1C7A  086C               	movf	___fladd@bexp,w
 20682  1C7B  026B               	subwf	___fladd@aexp,w
 20683  1C7C  1803               	skipnc
 20684  1C7D  2CC0               	goto	l4565
 20685  1C7E  1F6A               	btfss	___fladd@signs,6
 20686  1C7F  2C84               	goto	l4535
 20687  1C80  3080               	movlw	128
 20688  1C81  00E2               	movwf	??___fladd
 20689  1C82  0862               	movf	??___fladd,w
 20690  1C83  06EA               	xorwf	___fladd@signs,f
 20691  1C84                     l4535:	
 20692  1C84  086C               	movf	___fladd@bexp,w
 20693  1C85  00E2               	movwf	??___fladd
 20694  1C86  0862               	movf	??___fladd,w
 20695  1C87  00ED               	movwf	___fladd@grs
 20696  1C88  086B               	movf	___fladd@aexp,w
 20697  1C89  00E2               	movwf	??___fladd
 20698  1C8A  0862               	movf	??___fladd,w
 20699  1C8B  00EC               	movwf	___fladd@bexp
 20700  1C8C  086D               	movf	___fladd@grs,w
 20701  1C8D  00E2               	movwf	??___fladd
 20702  1C8E  0862               	movf	??___fladd,w
 20703  1C8F  00EB               	movwf	___fladd@aexp
 20704  1C90  085A               	movf	___fladd@b,w
 20705  1C91  00E2               	movwf	??___fladd
 20706  1C92  0862               	movf	??___fladd,w
 20707  1C93  00ED               	movwf	___fladd@grs
 20708  1C94  085E               	movf	___fladd@a,w
 20709  1C95  00E2               	movwf	??___fladd
 20710  1C96  0862               	movf	??___fladd,w
 20711  1C97  00DA               	movwf	___fladd@b
 20712  1C98  086D               	movf	___fladd@grs,w
 20713  1C99  00E2               	movwf	??___fladd
 20714  1C9A  0862               	movf	??___fladd,w
 20715  1C9B  00DE               	movwf	___fladd@a
 20716  1C9C  085B               	movf	___fladd@b+1,w
 20717  1C9D  00E2               	movwf	??___fladd
 20718  1C9E  0862               	movf	??___fladd,w
 20719  1C9F  00ED               	movwf	___fladd@grs
 20720  1CA0  085F               	movf	___fladd@a+1,w
 20721  1CA1  00E2               	movwf	??___fladd
 20722  1CA2  0862               	movf	??___fladd,w
 20723  1CA3  00DB               	movwf	___fladd@b+1
 20724  1CA4  086D               	movf	___fladd@grs,w
 20725  1CA5  00E2               	movwf	??___fladd
 20726  1CA6  0862               	movf	??___fladd,w
 20727  1CA7  00DF               	movwf	___fladd@a+1
 20728  1CA8  085C               	movf	___fladd@b+2,w
 20729  1CA9  00E2               	movwf	??___fladd
 20730  1CAA  0862               	movf	??___fladd,w
 20731  1CAB  00ED               	movwf	___fladd@grs
 20732  1CAC  0860               	movf	___fladd@a+2,w
 20733  1CAD  00E2               	movwf	??___fladd
 20734  1CAE  0862               	movf	??___fladd,w
 20735  1CAF  00DC               	movwf	___fladd@b+2
 20736  1CB0  086D               	movf	___fladd@grs,w
 20737  1CB1  00E2               	movwf	??___fladd
 20738  1CB2  0862               	movf	??___fladd,w
 20739  1CB3  00E0               	movwf	___fladd@a+2
 20740  1CB4  085D               	movf	___fladd@b+3,w
 20741  1CB5  00E2               	movwf	??___fladd
 20742  1CB6  0862               	movf	??___fladd,w
 20743  1CB7  00ED               	movwf	___fladd@grs
 20744  1CB8  0861               	movf	___fladd@a+3,w
 20745  1CB9  00E2               	movwf	??___fladd
 20746  1CBA  0862               	movf	??___fladd,w
 20747  1CBB  00DD               	movwf	___fladd@b+3
 20748  1CBC  086D               	movf	___fladd@grs,w
 20749  1CBD  00E2               	movwf	??___fladd
 20750  1CBE  0862               	movf	??___fladd,w
 20751  1CBF  00E1               	movwf	___fladd@a+3
 20752  1CC0                     l4565:	
 20753  1CC0  01ED               	clrf	___fladd@grs
 20754  1CC1  086B               	movf	___fladd@aexp,w
 20755  1CC2  00E2               	movwf	??___fladd
 20756  1CC3  01E3               	clrf	??___fladd+1
 20757  1CC4  0863               	movf	??___fladd+1,w
 20758  1CC5  00E5               	movwf	??___fladd+3
 20759  1CC6  086C               	movf	___fladd@bexp,w
 20760  1CC7  0262               	subwf	??___fladd,w
 20761  1CC8  00E4               	movwf	??___fladd+2
 20762  1CC9  1C03               	skipc
 20763  1CCA  03E5               	decf	??___fladd+3,f
 20764  1CCB  0865               	movf	??___fladd+3,w
 20765  1CCC  3A80               	xorlw	128
 20766  1CCD  00E6               	movwf	??___fladd+4
 20767  1CCE  3080               	movlw	128
 20768  1CCF  0266               	subwf	??___fladd+4,w
 20769  1CD0  1D03               	skipz
 20770  1CD1  2CD4               	goto	u5045
 20771  1CD2  301A               	movlw	26
 20772  1CD3  0264               	subwf	??___fladd+2,w
 20773  1CD4                     u5045:	
 20774  1CD4  1C03               	skipc
 20775  1CD5  2D08               	goto	l4583
 20776  1CD6  0020               	movlb	0	; select bank0
 20777  1CD7  085D               	movf	___fladd@b+3,w
 20778  1CD8  045C               	iorwf	___fladd@b+2,w
 20779  1CD9  045B               	iorwf	___fladd@b+1,w
 20780  1CDA  045A               	iorwf	___fladd@b,w
 20781  1CDB  1903               	btfsc	3,2
 20782  1CDC  2CDF               	goto	u5050
 20783  1CDD  3001               	movlw	1
 20784  1CDE  2CE0               	goto	u5060
 20785  1CDF                     u5050:	
 20786  1CDF  3000               	movlw	0
 20787  1CE0                     u5060:	
 20788  1CE0  00E2               	movwf	??___fladd
 20789  1CE1  0862               	movf	??___fladd,w
 20790  1CE2  00ED               	movwf	___fladd@grs
 20791  1CE3  3000               	movlw	0
 20792  1CE4  00DD               	movwf	___fladd@b+3
 20793  1CE5  3000               	movlw	0
 20794  1CE6  00DC               	movwf	___fladd@b+2
 20795  1CE7  3000               	movlw	0
 20796  1CE8  00DB               	movwf	___fladd@b+1
 20797  1CE9  3000               	movlw	0
 20798  1CEA  00DA               	movwf	___fladd@b
 20799  1CEB  086B               	movf	___fladd@aexp,w
 20800  1CEC  00E2               	movwf	??___fladd
 20801  1CED  0862               	movf	??___fladd,w
 20802  1CEE  00EC               	movwf	___fladd@bexp
 20803  1CEF  2D0D               	goto	l1246
 20804  1CF0                     l1248:	
 20805  1CF0  1C6D               	btfss	___fladd@grs,0
 20806  1CF1  2CF8               	goto	l4573
 20807  1CF2  366D               	lsrf	___fladd@grs,w
 20808  1CF3  3801               	iorlw	1
 20809  1CF4  00E2               	movwf	??___fladd
 20810  1CF5  0862               	movf	??___fladd,w
 20811  1CF6  00ED               	movwf	___fladd@grs
 20812  1CF7  2CFA               	goto	l4575
 20813  1CF8                     l4573:	
 20814  1CF8  1003               	clrc
 20815  1CF9  0CED               	rrf	___fladd@grs,f
 20816  1CFA                     l4575:	
 20817  1CFA  185A               	btfsc	___fladd@b,0
 20818  1CFB  17ED               	bsf	___fladd@grs,7
 20819  1CFC  3001               	movlw	1
 20820  1CFD  00E2               	movwf	??___fladd
 20821  1CFE                     u5095:	
 20822  1CFE  37DD               	asrf	___fladd@b+3,f
 20823  1CFF  0CDC               	rrf	___fladd@b+2,f
 20824  1D00  0CDB               	rrf	___fladd@b+1,f
 20825  1D01  0CDA               	rrf	___fladd@b,f
 20826  1D02  0BE2               	decfsz	??___fladd& (0+127),f
 20827  1D03  2CFE               	goto	u5095
 20828  1D04  3001               	movlw	1
 20829  1D05  00E2               	movwf	??___fladd
 20830  1D06  0862               	movf	??___fladd,w
 20831  1D07  07EC               	addwf	___fladd@bexp,f
 20832  1D08                     l4583:	
 20833  1D08  0020               	movlb	0	; select bank0
 20834  1D09  086B               	movf	___fladd@aexp,w
 20835  1D0A  026C               	subwf	___fladd@bexp,w
 20836  1D0B  1C03               	skipc
 20837  1D0C  2CF0               	goto	l1248
 20838  1D0D                     l1246:	
 20839  1D0D  1B6A               	btfsc	___fladd@signs,6
 20840  1D0E  2D3E               	goto	l4609
 20841  1D0F  086C               	movf	___fladd@bexp,w
 20842  1D10  1D03               	btfss	3,2
 20843  1D11  2D1B               	goto	l4591
 20844  1D12  3000               	movlw	0
 20845  1D13  00DD               	movwf	?___fladd+3
 20846  1D14  3000               	movlw	0
 20847  1D15  00DC               	movwf	?___fladd+2
 20848  1D16  3000               	movlw	0
 20849  1D17  00DB               	movwf	?___fladd+1
 20850  1D18  3000               	movlw	0
 20851  1D19  00DA               	movwf	?___fladd
 20852  1D1A  0008               	return
 20853  1D1B                     l4591:	
 20854  1D1B  085E               	movf	___fladd@a,w
 20855  1D1C  07DA               	addwf	___fladd@b,f
 20856  1D1D  085F               	movf	___fladd@a+1,w
 20857  1D1E  3DDB               	addwfc	___fladd@b+1,f
 20858  1D1F  0860               	movf	___fladd@a+2,w
 20859  1D20  3DDC               	addwfc	___fladd@b+2,f
 20860  1D21  0861               	movf	___fladd@a+3,w
 20861  1D22  3DDD               	addwfc	___fladd@b+3,f
 20862  1D23  1C5D               	btfss	___fladd@b+3,0
 20863  1D24  2DB8               	goto	l4643
 20864  1D25  1C6D               	btfss	___fladd@grs,0
 20865  1D26  2D2D               	goto	l4599
 20866  1D27  366D               	lsrf	___fladd@grs,w
 20867  1D28  3801               	iorlw	1
 20868  1D29  00E2               	movwf	??___fladd
 20869  1D2A  0862               	movf	??___fladd,w
 20870  1D2B  00ED               	movwf	___fladd@grs
 20871  1D2C  2D2F               	goto	l4601
 20872  1D2D                     l4599:	
 20873  1D2D  1003               	clrc
 20874  1D2E  0CED               	rrf	___fladd@grs,f
 20875  1D2F                     l4601:	
 20876  1D2F  185A               	btfsc	___fladd@b,0
 20877  1D30  17ED               	bsf	___fladd@grs,7
 20878  1D31  3001               	movlw	1
 20879  1D32  00E2               	movwf	??___fladd
 20880  1D33                     u5165:	
 20881  1D33  37DD               	asrf	___fladd@b+3,f
 20882  1D34  0CDC               	rrf	___fladd@b+2,f
 20883  1D35  0CDB               	rrf	___fladd@b+1,f
 20884  1D36  0CDA               	rrf	___fladd@b,f
 20885  1D37  0BE2               	decfsz	??___fladd& (0+127),f
 20886  1D38  2D33               	goto	u5165
 20887  1D39  3001               	movlw	1
 20888  1D3A  00E2               	movwf	??___fladd
 20889  1D3B  0862               	movf	??___fladd,w
 20890  1D3C  07EC               	addwf	___fladd@bexp,f
 20891  1D3D  2DB8               	goto	l4643
 20892  1D3E                     l4609:	
 20893  1D3E  085D               	movf	___fladd@b+3,w
 20894  1D3F  3A80               	xorlw	128
 20895  1D40  00E2               	movwf	??___fladd
 20896  1D41  0861               	movf	___fladd@a+3,w
 20897  1D42  3A80               	xorlw	128
 20898  1D43  0262               	subwf	??___fladd,w
 20899  1D44  1D03               	skipz
 20900  1D45  2D50               	goto	u5173
 20901  1D46  0860               	movf	___fladd@a+2,w
 20902  1D47  025C               	subwf	___fladd@b+2,w
 20903  1D48  1D03               	skipz
 20904  1D49  2D50               	goto	u5173
 20905  1D4A  085F               	movf	___fladd@a+1,w
 20906  1D4B  025B               	subwf	___fladd@b+1,w
 20907  1D4C  1D03               	skipz
 20908  1D4D  2D50               	goto	u5173
 20909  1D4E  085E               	movf	___fladd@a,w
 20910  1D4F  025A               	subwf	___fladd@b,w
 20911  1D50                     u5173:	
 20912  1D50  1803               	skipnc
 20913  1D51  2D88               	goto	l4619
 20914  1D52  30FF               	movlw	255
 20915  1D53  00E2               	movwf	??___fladd
 20916  1D54  30FF               	movlw	255
 20917  1D55  00E3               	movwf	??___fladd+1
 20918  1D56  30FF               	movlw	255
 20919  1D57  00E4               	movwf	??___fladd+2
 20920  1D58  30FF               	movlw	255
 20921  1D59  00E5               	movwf	??___fladd+3
 20922  1D5A  085A               	movf	___fladd@b,w
 20923  1D5B  025E               	subwf	___fladd@a,w
 20924  1D5C  00E6               	movwf	??___fladd+4
 20925  1D5D  085B               	movf	___fladd@b+1,w
 20926  1D5E  3B5F               	subwfb	___fladd@a+1,w
 20927  1D5F  00E7               	movwf	??___fladd+5
 20928  1D60  085C               	movf	___fladd@b+2,w
 20929  1D61  3B60               	subwfb	___fladd@a+2,w
 20930  1D62  00E8               	movwf	??___fladd+6
 20931  1D63  085D               	movf	___fladd@b+3,w
 20932  1D64  3B61               	subwfb	___fladd@a+3,w
 20933  1D65  00E9               	movwf	??___fladd+7
 20934  1D66  0866               	movf	??___fladd+4,w
 20935  1D67  07E2               	addwf	??___fladd,f
 20936  1D68  0867               	movf	??___fladd+5,w
 20937  1D69  3DE3               	addwfc	??___fladd+1,f
 20938  1D6A  0868               	movf	??___fladd+6,w
 20939  1D6B  3DE4               	addwfc	??___fladd+2,f
 20940  1D6C  0869               	movf	??___fladd+7,w
 20941  1D6D  3DE5               	addwfc	??___fladd+3,f
 20942  1D6E  0865               	movf	??___fladd+3,w
 20943  1D6F  00DD               	movwf	___fladd@b+3
 20944  1D70  0864               	movf	??___fladd+2,w
 20945  1D71  00DC               	movwf	___fladd@b+2
 20946  1D72  0863               	movf	??___fladd+1,w
 20947  1D73  00DB               	movwf	___fladd@b+1
 20948  1D74  0862               	movf	??___fladd,w
 20949  1D75  00DA               	movwf	___fladd@b
 20950  1D76  3080               	movlw	128
 20951  1D77  00E2               	movwf	??___fladd
 20952  1D78  0862               	movf	??___fladd,w
 20953  1D79  06EA               	xorwf	___fladd@signs,f
 20954  1D7A  09ED               	comf	___fladd@grs,f
 20955  1D7B  0AED               	incf	___fladd@grs,f
 20956  1D7C  086D               	movf	___fladd@grs,w
 20957  1D7D  1D03               	btfss	3,2
 20958  1D7E  2D90               	goto	l1263
 20959  1D7F  3001               	movlw	1
 20960  1D80  07DA               	addwf	___fladd@b,f
 20961  1D81  3000               	movlw	0
 20962  1D82  3DDB               	addwfc	___fladd@b+1,f
 20963  1D83  3000               	movlw	0
 20964  1D84  3DDC               	addwfc	___fladd@b+2,f
 20965  1D85  3000               	movlw	0
 20966  1D86  3DDD               	addwfc	___fladd@b+3,f
 20967  1D87  2D90               	goto	l1263
 20968  1D88                     l4619:	
 20969  1D88  085E               	movf	___fladd@a,w
 20970  1D89  02DA               	subwf	___fladd@b,f
 20971  1D8A  085F               	movf	___fladd@a+1,w
 20972  1D8B  3BDB               	subwfb	___fladd@b+1,f
 20973  1D8C  0860               	movf	___fladd@a+2,w
 20974  1D8D  3BDC               	subwfb	___fladd@b+2,f
 20975  1D8E  0861               	movf	___fladd@a+3,w
 20976  1D8F  3BDD               	subwfb	___fladd@b+3,f
 20977  1D90                     l1263:	
 20978  1D90  085D               	movf	___fladd@b+3,w
 20979  1D91  045C               	iorwf	___fladd@b+2,w
 20980  1D92  045B               	iorwf	___fladd@b+1,w
 20981  1D93  045A               	iorwf	___fladd@b,w
 20982  1D94  1D03               	skipz
 20983  1D95  2DB6               	goto	l4641
 20984  1D96  086D               	movf	___fladd@grs,w
 20985  1D97  1D03               	btfss	3,2
 20986  1D98  2DB6               	goto	l4641
 20987  1D99  3000               	movlw	0
 20988  1D9A  00DD               	movwf	?___fladd+3
 20989  1D9B  3000               	movlw	0
 20990  1D9C  00DC               	movwf	?___fladd+2
 20991  1D9D  3000               	movlw	0
 20992  1D9E  00DB               	movwf	?___fladd+1
 20993  1D9F  3000               	movlw	0
 20994  1DA0  00DA               	movwf	?___fladd
 20995  1DA1  0008               	return
 20996  1DA2                     l4627:	
 20997  1DA2  3001               	movlw	1
 20998  1DA3                     u5215:	
 20999  1DA3  35DA               	lslf	___fladd@b,f
 21000  1DA4  0DDB               	rlf	___fladd@b+1,f
 21001  1DA5  0DDC               	rlf	___fladd@b+2,f
 21002  1DA6  0DDD               	rlf	___fladd@b+3,f
 21003  1DA7  0B89               	decfsz	9,f
 21004  1DA8  2DA3               	goto	u5215
 21005  1DA9  1BED               	btfsc	___fladd@grs,7
 21006  1DAA  145A               	bsf	___fladd@b,0
 21007  1DAB  1C6D               	btfss	___fladd@grs,0
 21008  1DAC  2DAF               	goto	l4635
 21009  1DAD  1403               	setc
 21010  1DAE  2DB0               	goto	L14
 21011  1DAF                     l4635:	
 21012  1DAF  1003               	clrc
 21013  1DB0                     L14:	
 21014  1DB0  0DED               	rlf	___fladd@grs,f
 21015  1DB1  086C               	movf	___fladd@bexp,w
 21016  1DB2  1903               	btfsc	3,2
 21017  1DB3  2DB6               	goto	l4641
 21018  1DB4  3001               	movlw	1
 21019  1DB5  02EC               	subwf	___fladd@bexp,f
 21020  1DB6                     l4641:	
 21021  1DB6  1FDC               	btfss	___fladd@b+2,7
 21022  1DB7  2DA2               	goto	l4627
 21023  1DB8                     l4643:	
 21024  1DB8  01EB               	clrf	___fladd@aexp
 21025  1DB9  1FED               	btfss	___fladd@grs,7
 21026  1DBA  2DC3               	goto	l4653
 21027  1DBB  086D               	movf	___fladd@grs,w
 21028  1DBC  397F               	andlw	127
 21029  1DBD  1903               	btfsc	3,2
 21030  1DBE  185A               	btfsc	___fladd@b,0
 21031  1DBF  2DC1               	goto	l4649
 21032  1DC0  2DC3               	goto	l4653
 21033  1DC1                     l4649:	
 21034  1DC1  01EB               	clrf	___fladd@aexp
 21035  1DC2  0AEB               	incf	___fladd@aexp,f
 21036  1DC3                     l4653:	
 21037  1DC3  086B               	movf	___fladd@aexp,w
 21038  1DC4  1903               	btfsc	3,2
 21039  1DC5  2DEF               	goto	l1276
 21040  1DC6  3001               	movlw	1
 21041  1DC7  07DA               	addwf	___fladd@b,f
 21042  1DC8  3000               	movlw	0
 21043  1DC9  3DDB               	addwfc	___fladd@b+1,f
 21044  1DCA  3000               	movlw	0
 21045  1DCB  3DDC               	addwfc	___fladd@b+2,f
 21046  1DCC  3000               	movlw	0
 21047  1DCD  3DDD               	addwfc	___fladd@b+3,f
 21048  1DCE  1C5D               	btfss	___fladd@b+3,0
 21049  1DCF  2DEF               	goto	l1276
 21050  1DD0  085A               	movf	___fladd@b,w
 21051  1DD1  00E2               	movwf	??___fladd
 21052  1DD2  085B               	movf	___fladd@b+1,w
 21053  1DD3  00E3               	movwf	??___fladd+1
 21054  1DD4  085C               	movf	___fladd@b+2,w
 21055  1DD5  00E4               	movwf	??___fladd+2
 21056  1DD6  085D               	movf	___fladd@b+3,w
 21057  1DD7  00E5               	movwf	??___fladd+3
 21058  1DD8  3001               	movlw	1
 21059  1DD9  00E6               	movwf	??___fladd+4
 21060  1DDA                     u5315:	
 21061  1DDA  37E5               	asrf	??___fladd+3,f
 21062  1DDB  0CE4               	rrf	??___fladd+2,f
 21063  1DDC  0CE3               	rrf	??___fladd+1,f
 21064  1DDD  0CE2               	rrf	??___fladd,f
 21065  1DDE  0BE6               	decfsz	??___fladd+4,f
 21066  1DDF  2DDA               	goto	u5315
 21067  1DE0  0865               	movf	??___fladd+3,w
 21068  1DE1  00DD               	movwf	___fladd@b+3
 21069  1DE2  0864               	movf	??___fladd+2,w
 21070  1DE3  00DC               	movwf	___fladd@b+2
 21071  1DE4  0863               	movf	??___fladd+1,w
 21072  1DE5  00DB               	movwf	___fladd@b+1
 21073  1DE6  0862               	movf	??___fladd,w
 21074  1DE7  00DA               	movwf	___fladd@b
 21075  1DE8  0A6C               	incf	___fladd@bexp,w
 21076  1DE9  1903               	btfsc	3,2
 21077  1DEA  2DEF               	goto	l1276
 21078  1DEB  3001               	movlw	1
 21079  1DEC  00E2               	movwf	??___fladd
 21080  1DED  0862               	movf	??___fladd,w
 21081  1DEE  07EC               	addwf	___fladd@bexp,f
 21082  1DEF                     l1276:	
 21083  1DEF  0A6C               	incf	___fladd@bexp,w
 21084  1DF0  1D03               	btfss	3,2
 21085  1DF1  086C               	movf	___fladd@bexp,w
 21086  1DF2  1D03               	btfss	3,2
 21087  1DF3  2DFF               	goto	l4671
 21088  1DF4  3000               	movlw	0
 21089  1DF5  00DD               	movwf	___fladd@b+3
 21090  1DF6  3000               	movlw	0
 21091  1DF7  00DC               	movwf	___fladd@b+2
 21092  1DF8  3000               	movlw	0
 21093  1DF9  00DB               	movwf	___fladd@b+1
 21094  1DFA  3000               	movlw	0
 21095  1DFB  00DA               	movwf	___fladd@b
 21096  1DFC  086C               	movf	___fladd@bexp,w
 21097  1DFD  1903               	btfsc	3,2
 21098  1DFE  01EA               	clrf	___fladd@signs
 21099  1DFF                     l4671:	
 21100  1DFF  1C6C               	btfss	___fladd@bexp,0
 21101  1E00  2E03               	goto	l4675
 21102  1E01  17DC               	bsf	___fladd@b+2,7
 21103  1E02  2E07               	goto	l1284
 21104  1E03                     l4675:	
 21105  1E03  307F               	movlw	127
 21106  1E04  00E2               	movwf	??___fladd
 21107  1E05  0862               	movf	??___fladd,w
 21108  1E06  05DC               	andwf	___fladd@b+2,f
 21109  1E07                     l1284:	
 21110  1E07  366C               	lsrf	___fladd@bexp,w
 21111  1E08  00E2               	movwf	??___fladd
 21112  1E09  0862               	movf	??___fladd,w
 21113  1E0A  00DD               	movwf	___fladd@b+3
 21114  1E0B  1FEA               	btfss	___fladd@signs,7
 21115  1E0C  0008               	return
 21116  1E0D  17DD               	bsf	___fladd@b+3,7
 21117  1E0E  0008               	return
 21118  1E0F                     __end_of___fladd:	
 21119                           
 21120                           	psect	text78
 21121  3003                     __ptext78:	
 21122 ;; *************** function _init_TMR1 *****************
 21123 ;; Defined at:
 21124 ;;		line 187 in file "main.c"
 21125 ;; Parameters:    Size  Location     Type
 21126 ;;		None
 21127 ;; Auto vars:     Size  Location     Type
 21128 ;;		None
 21129 ;; Return value:  Size  Location     Type
 21130 ;;                  1    wreg      void 
 21131 ;; Registers used:
 21132 ;;		wreg, status,2, status,0
 21133 ;; Tracked objects:
 21134 ;;		On entry : 0/0
 21135 ;;		On exit  : 0/0
 21136 ;;		Unchanged: 0/0
 21137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21142 ;;Total ram usage:        0 bytes
 21143 ;; Hardware stack levels used:    1
 21144 ;; Hardware stack levels required when called:    1
 21145 ;; This function calls:
 21146 ;;		Nothing
 21147 ;; This function is called by:
 21148 ;;		_main
 21149 ;; This function uses a non-reentrant model
 21150 ;;
 21151                           
 21152                           
 21153                           ;psect for function _init_TMR1
 21154  3003                     _init_TMR1:	
 21155                           
 21156                           ;main.c: 190:     T1CONbits.T1CKPS = 0b00;
 21157                           
 21158                           ;incstack = 0
 21159                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 21160  3003  30CF               	movlw	-49
 21161  3004  0020               	movlb	0	; select bank0
 21162  3005  0598               	andwf	24,f	;volatile
 21163                           
 21164                           ;main.c: 192:     TMR1 = 0;
 21165  3006  0196               	clrf	22	;volatile
 21166  3007  0197               	clrf	23	;volatile
 21167                           
 21168                           ;main.c: 194:     T1CONbits.TMR1ON = 1;
 21169  3008  1418               	bsf	24,0	;volatile
 21170                           
 21171                           ;main.c: 196:     PIE1bits.TMR1IE = 1;
 21172  3009  0021               	movlb	1	; select bank1
 21173  300A  1411               	bsf	17,0	;volatile
 21174                           
 21175                           ;main.c: 198:     INTCONbits.PEIE = 1;
 21176  300B  170B               	bsf	11,6	;volatile
 21177                           
 21178                           ;main.c: 200:     (INTCONbits.GIE = 1);
 21179  300C  178B               	bsf	11,7	;volatile
 21180  300D  0008               	return
 21181  300E                     __end_of_init_TMR1:	
 21182                           
 21183                           	psect	text79
 21184  3D05                     __ptext79:	
 21185 ;; *************** function _init_RGB *****************
 21186 ;; Defined at:
 21187 ;;		line 6 in file "RGB.c"
 21188 ;; Parameters:    Size  Location     Type
 21189 ;;		None
 21190 ;; Auto vars:     Size  Location     Type
 21191 ;;		None
 21192 ;; Return value:  Size  Location     Type
 21193 ;;                  1    wreg      void 
 21194 ;; Registers used:
 21195 ;;		None
 21196 ;; Tracked objects:
 21197 ;;		On entry : 0/0
 21198 ;;		On exit  : 0/0
 21199 ;;		Unchanged: 0/0
 21200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21205 ;;Total ram usage:        0 bytes
 21206 ;; Hardware stack levels used:    1
 21207 ;; Hardware stack levels required when called:    1
 21208 ;; This function calls:
 21209 ;;		Nothing
 21210 ;; This function is called by:
 21211 ;;		_main
 21212 ;; This function uses a non-reentrant model
 21213 ;;
 21214                           
 21215                           
 21216                           ;psect for function _init_RGB
 21217  3D05                     _init_RGB:	
 21218                           
 21219                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 21220                           
 21221                           ;incstack = 0
 21222                           ; Regs used in _init_RGB: []
 21223  3D05  0022               	movlb	2	; select bank2
 21224  3D06  160C               	bsf	12,4	;volatile
 21225                           
 21226                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 21227  3D07  168C               	bsf	12,5	;volatile
 21228                           
 21229                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 21230  3D08  1410               	bsf	16,0	;volatile
 21231  3D09  0008               	return
 21232  3D0A                     __end_of_init_RGB:	
 21233                           
 21234                           	psect	text80
 21235  3D62                     __ptext80:	
 21236 ;; *************** function _init_I2C *****************
 21237 ;; Defined at:
 21238 ;;		line 10 in file "I2C.c"
 21239 ;; Parameters:    Size  Location     Type
 21240 ;;		None
 21241 ;; Auto vars:     Size  Location     Type
 21242 ;;		None
 21243 ;; Return value:  Size  Location     Type
 21244 ;;                  1    wreg      void 
 21245 ;; Registers used:
 21246 ;;		wreg, status,2, status,0
 21247 ;; Tracked objects:
 21248 ;;		On entry : 0/0
 21249 ;;		On exit  : 0/0
 21250 ;;		Unchanged: 0/0
 21251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21254 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21255 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21256 ;;Total ram usage:        1 bytes
 21257 ;; Hardware stack levels used:    1
 21258 ;; Hardware stack levels required when called:    1
 21259 ;; This function calls:
 21260 ;;		Nothing
 21261 ;; This function is called by:
 21262 ;;		_main
 21263 ;; This function uses a non-reentrant model
 21264 ;;
 21265                           
 21266                           
 21267                           ;psect for function _init_I2C
 21268  3D62                     _init_I2C:	
 21269                           
 21270                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 21271                           
 21272                           ;incstack = 0
 21273                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 21274  3D62  0024               	movlb	4	; select bank4
 21275  3D63  0815               	movf	21,w	;volatile
 21276  3D64  39F0               	andlw	-16
 21277  3D65  3808               	iorlw	8
 21278  3D66  0095               	movwf	21	;volatile
 21279                           
 21280                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 21281  3D67  1695               	bsf	21,5	;volatile
 21282                           
 21283                           ;I2C.c: 24:     SSPADD = 39;
 21284  3D68  3027               	movlw	39
 21285  3D69  0092               	movwf	18	;volatile
 21286                           
 21287                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 21288  3D6A  3034               	movlw	52
 21289  3D6B  00F1               	movwf	??_init_I2C
 21290  3D6C  30F2               	movlw	242
 21291  3D6D                     u12077:	
 21292  3D6D  0B89               	decfsz	9,f
 21293  3D6E  2D6D               	goto	u12077
 21294  3D6F  0BF1               	decfsz	??_init_I2C,f
 21295  3D70  2D6D               	goto	u12077
 21296  3D71  0008               	return
 21297  3D72                     __end_of_init_I2C:	
 21298                           
 21299                           	psect	text81
 21300  30B2                     __ptext81:	
 21301 ;; *************** function _init_GPIO *****************
 21302 ;; Defined at:
 21303 ;;		line 204 in file "main.c"
 21304 ;; Parameters:    Size  Location     Type
 21305 ;;		None
 21306 ;; Auto vars:     Size  Location     Type
 21307 ;;		None
 21308 ;; Return value:  Size  Location     Type
 21309 ;;                  1    wreg      void 
 21310 ;; Registers used:
 21311 ;;		wreg, status,2, status,0
 21312 ;; Tracked objects:
 21313 ;;		On entry : 0/0
 21314 ;;		On exit  : 0/0
 21315 ;;		Unchanged: 0/0
 21316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21321 ;;Total ram usage:        0 bytes
 21322 ;; Hardware stack levels used:    1
 21323 ;; Hardware stack levels required when called:    1
 21324 ;; This function calls:
 21325 ;;		Nothing
 21326 ;; This function is called by:
 21327 ;;		_main
 21328 ;; This function uses a non-reentrant model
 21329 ;;
 21330                           
 21331                           
 21332                           ;psect for function _init_GPIO
 21333  30B2                     _init_GPIO:	
 21334                           
 21335                           ;main.c: 210:     TRISBbits.TRISB2 = 0;
 21336                           
 21337                           ;incstack = 0
 21338                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 21339  30B2  0021               	movlb	1	; select bank1
 21340  30B3  110D               	bcf	13,2	;volatile
 21341                           
 21342                           ;main.c: 211:     ANSELBbits.ANSB2 = 0;
 21343  30B4  0023               	movlb	3	; select bank3
 21344  30B5  110D               	bcf	13,2	;volatile
 21345                           
 21346                           ;main.c: 212:     TRISBbits.TRISB3 = 1;
 21347  30B6  0021               	movlb	1	; select bank1
 21348  30B7  158D               	bsf	13,3	;volatile
 21349                           
 21350                           ;main.c: 213:     ANSELBbits.ANSB3 = 0;
 21351  30B8  0023               	movlb	3	; select bank3
 21352  30B9  118D               	bcf	13,3	;volatile
 21353                           
 21354                           ;main.c: 218:     ANSELCbits.ANSC4 = 0;
 21355  30BA  120E               	bcf	14,4	;volatile
 21356                           
 21357                           ;main.c: 219:     ANSELCbits.ANSC5 = 0;
 21358  30BB  128E               	bcf	14,5	;volatile
 21359                           
 21360                           ;main.c: 220:     TRISCbits.TRISC4 = 1;
 21361  30BC  0021               	movlb	1	; select bank1
 21362  30BD  160E               	bsf	14,4	;volatile
 21363                           
 21364                           ;main.c: 221:     TRISCbits.TRISC5 = 1;
 21365  30BE  168E               	bsf	14,5	;volatile
 21366                           
 21367                           ;main.c: 230:     TRISAbits.TRISA4 = 0;
 21368  30BF  120C               	bcf	12,4	;volatile
 21369                           
 21370                           ;main.c: 231:     TRISAbits.TRISA5 = 0;
 21371  30C0  128C               	bcf	12,5	;volatile
 21372                           
 21373                           ;main.c: 232:     TRISEbits.TRISE0 = 0;
 21374  30C1  1010               	bcf	16,0	;volatile
 21375                           
 21376                           ;main.c: 237:     TRISAbits.TRISA3 = 0;
 21377  30C2  118C               	bcf	12,3	;volatile
 21378                           
 21379                           ;main.c: 238:     LATAbits.LATA3 = 0;
 21380  30C3  0022               	movlb	2	; select bank2
 21381  30C4  118C               	bcf	12,3	;volatile
 21382                           
 21383                           ;main.c: 244:     PPSLOCK = 0x55;
 21384  30C5  3055               	movlw	85
 21385  30C6  003C               	movlb	28	; select bank28
 21386  30C7  008F               	movwf	15	;volsfr
 21387                           
 21388                           ;main.c: 245:     PPSLOCK = 0xAA;
 21389  30C8  30AA               	movlw	170
 21390  30C9  008F               	movwf	15	;volsfr
 21391                           
 21392                           ;main.c: 246:     PPSLOCKbits.PPSLOCKED = 0x00;
 21393  30CA  100F               	bcf	15,0	;volsfr
 21394                           
 21395                           ;main.c: 250:     RC4PPSbits.RC4PPS = 0x0011;
 21396  30CB  003D               	movlb	29	; select bank29
 21397  30CC  0824               	movf	36,w	;volatile
 21398  30CD  39E0               	andlw	-32
 21399  30CE  3811               	iorlw	17
 21400  30CF  00A4               	movwf	36	;volatile
 21401                           
 21402                           ;main.c: 251:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 21403  30D0  003C               	movlb	28	; select bank28
 21404  30D1  0821               	movf	33,w	;volatile
 21405  30D2  39E0               	andlw	-32
 21406  30D3  3814               	iorlw	20
 21407  30D4  00A1               	movwf	33	;volatile
 21408                           
 21409                           ;main.c: 252:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 21410  30D5  0820               	movf	32,w	;volatile
 21411  30D6  39E0               	andlw	-32
 21412  30D7  3815               	iorlw	21
 21413  30D8  00A0               	movwf	32	;volatile
 21414                           
 21415                           ;main.c: 253:     RC5PPSbits.RC5PPS = 0x0010;
 21416  30D9  003D               	movlb	29	; select bank29
 21417  30DA  0825               	movf	37,w	;volatile
 21418  30DB  39E0               	andlw	-32
 21419  30DC  3810               	iorlw	16
 21420  30DD  00A5               	movwf	37	;volatile
 21421                           
 21422                           ;main.c: 256:     RB2PPSbits.RB2PPS = 0x14;
 21423  30DE  081A               	movf	26,w	;volatile
 21424  30DF  39E0               	andlw	-32
 21425  30E0  3814               	iorlw	20
 21426  30E1  009A               	movwf	26	;volatile
 21427                           
 21428                           ;main.c: 257:     RXPPSbits.RXPPS = 0x0B;
 21429  30E2  003C               	movlb	28	; select bank28
 21430  30E3  0824               	movf	36,w	;volatile
 21431  30E4  39E0               	andlw	-32
 21432  30E5  380B               	iorlw	11
 21433  30E6  00A4               	movwf	36	;volatile
 21434                           
 21435                           ;main.c: 259:     PPSLOCK = 0x55;
 21436  30E7  3055               	movlw	85
 21437  30E8  008F               	movwf	15	;volsfr
 21438                           
 21439                           ;main.c: 260:     PPSLOCK = 0xAA;
 21440  30E9  30AA               	movlw	170
 21441  30EA  008F               	movwf	15	;volsfr
 21442                           
 21443                           ;main.c: 261:     PPSLOCKbits.PPSLOCKED = 0x01;
 21444  30EB  140F               	bsf	15,0	;volsfr
 21445  30EC  0008               	return
 21446  30ED                     __end_of_init_GPIO:	
 21447                           
 21448                           	psect	text82
 21449  3D0A                     __ptext82:	
 21450 ;; *************** function _initWDT *****************
 21451 ;; Defined at:
 21452 ;;		line 265 in file "main.c"
 21453 ;; Parameters:    Size  Location     Type
 21454 ;;		None
 21455 ;; Auto vars:     Size  Location     Type
 21456 ;;		None
 21457 ;; Return value:  Size  Location     Type
 21458 ;;                  1    wreg      void 
 21459 ;; Registers used:
 21460 ;;		wreg, status,2, status,0
 21461 ;; Tracked objects:
 21462 ;;		On entry : 0/0
 21463 ;;		On exit  : 0/0
 21464 ;;		Unchanged: 0/0
 21465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21470 ;;Total ram usage:        0 bytes
 21471 ;; Hardware stack levels used:    1
 21472 ;; Hardware stack levels required when called:    1
 21473 ;; This function calls:
 21474 ;;		Nothing
 21475 ;; This function is called by:
 21476 ;;		_main
 21477 ;; This function uses a non-reentrant model
 21478 ;;
 21479                           
 21480                           
 21481                           ;psect for function _initWDT
 21482  3D0A                     _initWDT:	
 21483                           
 21484                           ;main.c: 267:     WDTCONbits.WDTPS = 0b01101;
 21485                           
 21486                           ;incstack = 0
 21487                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 21488  3D0A  0021               	movlb	1	; select bank1
 21489  3D0B  0817               	movf	23,w	;volatile
 21490  3D0C  39C1               	andlw	-63
 21491  3D0D  381A               	iorlw	26
 21492  3D0E  0097               	movwf	23	;volatile
 21493  3D0F  0008               	return
 21494  3D10                     __end_of_initWDT:	
 21495                           
 21496                           	psect	text83
 21497  3CFF                     __ptext83:	
 21498 ;; *************** function _initClock *****************
 21499 ;; Defined at:
 21500 ;;		line 178 in file "main.c"
 21501 ;; Parameters:    Size  Location     Type
 21502 ;;		None
 21503 ;; Auto vars:     Size  Location     Type
 21504 ;;		None
 21505 ;; Return value:  Size  Location     Type
 21506 ;;                  1    wreg      void 
 21507 ;; Registers used:
 21508 ;;		status,2, status,0, pclath, cstack
 21509 ;; Tracked objects:
 21510 ;;		On entry : 0/0
 21511 ;;		On exit  : 0/0
 21512 ;;		Unchanged: 0/0
 21513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21518 ;;Total ram usage:        0 bytes
 21519 ;; Hardware stack levels used:    1
 21520 ;; Hardware stack levels required when called:    2
 21521 ;; This function calls:
 21522 ;;		_internal_16
 21523 ;; This function is called by:
 21524 ;;		_main
 21525 ;; This function uses a non-reentrant model
 21526 ;;
 21527                           
 21528                           
 21529                           ;psect for function _initClock
 21530  3CFF                     _initClock:	
 21531                           
 21532                           ;main.c: 180:     internal_16();
 21533                           
 21534                           ;incstack = 0
 21535                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 21536  3CFF  31BD  2520         	fcall	_internal_16
 21537  3D01  0008               	return
 21538  3D02                     __end_of_initClock:	
 21539                           
 21540                           	psect	text84
 21541  3D20                     __ptext84:	
 21542 ;; *************** function _internal_16 *****************
 21543 ;; Defined at:
 21544 ;;		line 26 in file "pic16f1719_internals.c"
 21545 ;; Parameters:    Size  Location     Type
 21546 ;;		None
 21547 ;; Auto vars:     Size  Location     Type
 21548 ;;		None
 21549 ;; Return value:  Size  Location     Type
 21550 ;;                  1    wreg      void 
 21551 ;; Registers used:
 21552 ;;		None
 21553 ;; Tracked objects:
 21554 ;;		On entry : 0/0
 21555 ;;		On exit  : 0/0
 21556 ;;		Unchanged: 0/0
 21557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21562 ;;Total ram usage:        0 bytes
 21563 ;; Hardware stack levels used:    1
 21564 ;; Hardware stack levels required when called:    1
 21565 ;; This function calls:
 21566 ;;		Nothing
 21567 ;; This function is called by:
 21568 ;;		_initClock
 21569 ;; This function uses a non-reentrant model
 21570 ;;
 21571                           
 21572                           
 21573                           ;psect for function _internal_16
 21574  3D20                     _internal_16:	
 21575                           
 21576                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 21577                           
 21578                           ;incstack = 0
 21579                           ; Regs used in _internal_16: []
 21580  3D20  0021               	movlb	1	; select bank1
 21581  3D21  1019               	bcf	25,0	;volatile
 21582                           
 21583                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 21584  3D22  1099               	bcf	25,1	;volatile
 21585                           
 21586                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 21587  3D23  1599               	bsf	25,3	;volatile
 21588                           
 21589                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 21590  3D24  1619               	bsf	25,4	;volatile
 21591                           
 21592                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 21593  3D25  1699               	bsf	25,5	;volatile
 21594                           
 21595                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 21596  3D26  1719               	bsf	25,6	;volatile
 21597                           
 21598                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 21599  3D27  1399               	bcf	25,7	;volatile
 21600  3D28  0008               	return
 21601  3D29                     __end_of_internal_16:	
 21602                           
 21603                           	psect	text85
 21604  2A76                     __ptext85:	
 21605 ;; *************** function _EUSART_Initialize *****************
 21606 ;; Defined at:
 21607 ;;		line 6 in file "EUSART.c"
 21608 ;; Parameters:    Size  Location     Type
 21609 ;;  baudrate        4   18[BANK0 ] const long 
 21610 ;; Auto vars:     Size  Location     Type
 21611 ;;  x               2   10[COMMON] unsigned int 
 21612 ;; Return value:  Size  Location     Type
 21613 ;;                  1    wreg      unsigned char 
 21614 ;; Registers used:
 21615 ;;		wreg, status,2, status,0, pclath, cstack
 21616 ;; Tracked objects:
 21617 ;;		On entry : 0/0
 21618 ;;		On exit  : 0/0
 21619 ;;		Unchanged: 0/0
 21620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21621 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21623 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21624 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21625 ;;Total ram usage:       18 bytes
 21626 ;; Hardware stack levels used:    1
 21627 ;; Hardware stack levels required when called:    2
 21628 ;; This function calls:
 21629 ;;		___aldiv
 21630 ;; This function is called by:
 21631 ;;		_main
 21632 ;; This function uses a non-reentrant model
 21633 ;;
 21634                           
 21635                           
 21636                           ;psect for function _EUSART_Initialize
 21637  2A76                     _EUSART_Initialize:	
 21638                           
 21639                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 21640                           
 21641                           ;incstack = 0
 21642                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21643  2A76  0020               	movlb	0	; select bank0
 21644  2A77  0832               	movf	EUSART_Initialize@baudrate,w
 21645  2A78  00B6               	movwf	??_EUSART_Initialize
 21646  2A79  0833               	movf	EUSART_Initialize@baudrate+1,w
 21647  2A7A  00B7               	movwf	??_EUSART_Initialize+1
 21648  2A7B  0834               	movf	EUSART_Initialize@baudrate+2,w
 21649  2A7C  00B8               	movwf	??_EUSART_Initialize+2
 21650  2A7D  0835               	movf	EUSART_Initialize@baudrate+3,w
 21651  2A7E  00B9               	movwf	??_EUSART_Initialize+3
 21652  2A7F  3006               	movlw	6
 21653  2A80                     u11935:	
 21654  2A80  35B6               	lslf	??_EUSART_Initialize,f
 21655  2A81  0DB7               	rlf	??_EUSART_Initialize+1,f
 21656  2A82  0DB8               	rlf	??_EUSART_Initialize+2,f
 21657  2A83  0DB9               	rlf	??_EUSART_Initialize+3,f
 21658  2A84  0B89               	decfsz	9,f
 21659  2A85  2A80               	goto	u11935
 21660  2A86  0839               	movf	??_EUSART_Initialize+3,w
 21661  2A87  00A7               	movwf	___aldiv@divisor+3
 21662  2A88  0838               	movf	??_EUSART_Initialize+2,w
 21663  2A89  00A6               	movwf	___aldiv@divisor+2
 21664  2A8A  0837               	movf	??_EUSART_Initialize+1,w
 21665  2A8B  00A5               	movwf	___aldiv@divisor+1
 21666  2A8C  0836               	movf	??_EUSART_Initialize,w
 21667  2A8D  00A4               	movwf	___aldiv@divisor
 21668  2A8E  0832               	movf	EUSART_Initialize@baudrate,w
 21669  2A8F  00BA               	movwf	??_EUSART_Initialize+4
 21670  2A90  0833               	movf	EUSART_Initialize@baudrate+1,w
 21671  2A91  00BB               	movwf	??_EUSART_Initialize+5
 21672  2A92  0834               	movf	EUSART_Initialize@baudrate+2,w
 21673  2A93  00BC               	movwf	??_EUSART_Initialize+6
 21674  2A94  0835               	movf	EUSART_Initialize@baudrate+3,w
 21675  2A95  00BD               	movwf	??_EUSART_Initialize+7
 21676  2A96  3006               	movlw	6
 21677  2A97                     u11945:	
 21678  2A97  35BA               	lslf	??_EUSART_Initialize+4,f
 21679  2A98  0DBB               	rlf	??_EUSART_Initialize+5,f
 21680  2A99  0DBC               	rlf	??_EUSART_Initialize+6,f
 21681  2A9A  0DBD               	rlf	??_EUSART_Initialize+7,f
 21682  2A9B  0B89               	decfsz	9,f
 21683  2A9C  2A97               	goto	u11945
 21684  2A9D  3000               	movlw	0
 21685  2A9E  00BE               	movwf	??_EUSART_Initialize+8
 21686  2A9F  3024               	movlw	36
 21687  2AA0  00BF               	movwf	??_EUSART_Initialize+9
 21688  2AA1  30F4               	movlw	244
 21689  2AA2  00C0               	movwf	??_EUSART_Initialize+10
 21690  2AA3  3000               	movlw	0
 21691  2AA4  00C1               	movwf	??_EUSART_Initialize+11
 21692  2AA5  083A               	movf	??_EUSART_Initialize+4,w
 21693  2AA6  02BE               	subwf	??_EUSART_Initialize+8,f
 21694  2AA7  083B               	movf	??_EUSART_Initialize+5,w
 21695  2AA8  3BBF               	subwfb	??_EUSART_Initialize+9,f
 21696  2AA9  083C               	movf	??_EUSART_Initialize+6,w
 21697  2AAA  3BC0               	subwfb	??_EUSART_Initialize+10,f
 21698  2AAB  083D               	movf	??_EUSART_Initialize+7,w
 21699  2AAC  3BC1               	subwfb	??_EUSART_Initialize+11,f
 21700  2AAD  0841               	movf	??_EUSART_Initialize+11,w
 21701  2AAE  00AB               	movwf	___aldiv@dividend+3
 21702  2AAF  0840               	movf	??_EUSART_Initialize+10,w
 21703  2AB0  00AA               	movwf	___aldiv@dividend+2
 21704  2AB1  083F               	movf	??_EUSART_Initialize+9,w
 21705  2AB2  00A9               	movwf	___aldiv@dividend+1
 21706  2AB3  083E               	movf	??_EUSART_Initialize+8,w
 21707  2AB4  00A8               	movwf	___aldiv@dividend
 21708  2AB5  31B6  26FA  31AA   	fcall	___aldiv
 21709  2AB8  0020               	movlb	0	; select bank0
 21710  2AB9  0825               	movf	?___aldiv+1,w
 21711  2ABA  00FB               	movwf	EUSART_Initialize@x+1
 21712  2ABB  0824               	movf	?___aldiv,w
 21713  2ABC  00FA               	movwf	EUSART_Initialize@x
 21714                           
 21715                           ;EUSART.c: 10:  if(x>255)
 21716  2ABD  3001               	movlw	1
 21717  2ABE  027B               	subwf	EUSART_Initialize@x+1,w
 21718  2ABF  3000               	movlw	0
 21719  2AC0  1903               	skipnz
 21720  2AC1  027A               	subwf	EUSART_Initialize@x,w
 21721  2AC2  1C03               	skipc
 21722  2AC3  2B0C               	goto	l8659
 21723                           
 21724                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 21725  2AC4  0832               	movf	EUSART_Initialize@baudrate,w
 21726  2AC5  00B6               	movwf	??_EUSART_Initialize
 21727  2AC6  0833               	movf	EUSART_Initialize@baudrate+1,w
 21728  2AC7  00B7               	movwf	??_EUSART_Initialize+1
 21729  2AC8  0834               	movf	EUSART_Initialize@baudrate+2,w
 21730  2AC9  00B8               	movwf	??_EUSART_Initialize+2
 21731  2ACA  0835               	movf	EUSART_Initialize@baudrate+3,w
 21732  2ACB  00B9               	movwf	??_EUSART_Initialize+3
 21733  2ACC  3004               	movlw	4
 21734  2ACD                     u11965:	
 21735  2ACD  35B6               	lslf	??_EUSART_Initialize,f
 21736  2ACE  0DB7               	rlf	??_EUSART_Initialize+1,f
 21737  2ACF  0DB8               	rlf	??_EUSART_Initialize+2,f
 21738  2AD0  0DB9               	rlf	??_EUSART_Initialize+3,f
 21739  2AD1  0B89               	decfsz	9,f
 21740  2AD2  2ACD               	goto	u11965
 21741  2AD3  0839               	movf	??_EUSART_Initialize+3,w
 21742  2AD4  00A7               	movwf	___aldiv@divisor+3
 21743  2AD5  0838               	movf	??_EUSART_Initialize+2,w
 21744  2AD6  00A6               	movwf	___aldiv@divisor+2
 21745  2AD7  0837               	movf	??_EUSART_Initialize+1,w
 21746  2AD8  00A5               	movwf	___aldiv@divisor+1
 21747  2AD9  0836               	movf	??_EUSART_Initialize,w
 21748  2ADA  00A4               	movwf	___aldiv@divisor
 21749  2ADB  0832               	movf	EUSART_Initialize@baudrate,w
 21750  2ADC  00BA               	movwf	??_EUSART_Initialize+4
 21751  2ADD  0833               	movf	EUSART_Initialize@baudrate+1,w
 21752  2ADE  00BB               	movwf	??_EUSART_Initialize+5
 21753  2ADF  0834               	movf	EUSART_Initialize@baudrate+2,w
 21754  2AE0  00BC               	movwf	??_EUSART_Initialize+6
 21755  2AE1  0835               	movf	EUSART_Initialize@baudrate+3,w
 21756  2AE2  00BD               	movwf	??_EUSART_Initialize+7
 21757  2AE3  3004               	movlw	4
 21758  2AE4                     u11975:	
 21759  2AE4  35BA               	lslf	??_EUSART_Initialize+4,f
 21760  2AE5  0DBB               	rlf	??_EUSART_Initialize+5,f
 21761  2AE6  0DBC               	rlf	??_EUSART_Initialize+6,f
 21762  2AE7  0DBD               	rlf	??_EUSART_Initialize+7,f
 21763  2AE8  0B89               	decfsz	9,f
 21764  2AE9  2AE4               	goto	u11975
 21765  2AEA  3000               	movlw	0
 21766  2AEB  00BE               	movwf	??_EUSART_Initialize+8
 21767  2AEC  3024               	movlw	36
 21768  2AED  00BF               	movwf	??_EUSART_Initialize+9
 21769  2AEE  30F4               	movlw	244
 21770  2AEF  00C0               	movwf	??_EUSART_Initialize+10
 21771  2AF0  3000               	movlw	0
 21772  2AF1  00C1               	movwf	??_EUSART_Initialize+11
 21773  2AF2  083A               	movf	??_EUSART_Initialize+4,w
 21774  2AF3  02BE               	subwf	??_EUSART_Initialize+8,f
 21775  2AF4  083B               	movf	??_EUSART_Initialize+5,w
 21776  2AF5  3BBF               	subwfb	??_EUSART_Initialize+9,f
 21777  2AF6  083C               	movf	??_EUSART_Initialize+6,w
 21778  2AF7  3BC0               	subwfb	??_EUSART_Initialize+10,f
 21779  2AF8  083D               	movf	??_EUSART_Initialize+7,w
 21780  2AF9  3BC1               	subwfb	??_EUSART_Initialize+11,f
 21781  2AFA  0841               	movf	??_EUSART_Initialize+11,w
 21782  2AFB  00AB               	movwf	___aldiv@dividend+3
 21783  2AFC  0840               	movf	??_EUSART_Initialize+10,w
 21784  2AFD  00AA               	movwf	___aldiv@dividend+2
 21785  2AFE  083F               	movf	??_EUSART_Initialize+9,w
 21786  2AFF  00A9               	movwf	___aldiv@dividend+1
 21787  2B00  083E               	movf	??_EUSART_Initialize+8,w
 21788  2B01  00A8               	movwf	___aldiv@dividend
 21789  2B02  31B6  26FA  31AA   	fcall	___aldiv
 21790  2B05  0020               	movlb	0	; select bank0
 21791  2B06  0825               	movf	?___aldiv+1,w
 21792  2B07  00FB               	movwf	EUSART_Initialize@x+1
 21793  2B08  0824               	movf	?___aldiv,w
 21794  2B09  00FA               	movwf	EUSART_Initialize@x
 21795                           
 21796                           ;EUSART.c: 13:   BRGH = 1;
 21797  2B0A  0023               	movlb	3	; select bank3
 21798  2B0B  151E               	bsf	30,2	;volatile
 21799  2B0C                     l8659:	
 21800                           
 21801                           ;EUSART.c: 15:  if(x<256)
 21802  2B0C  3001               	movlw	1
 21803  2B0D  027B               	subwf	EUSART_Initialize@x+1,w
 21804  2B0E  3000               	movlw	0
 21805  2B0F  1903               	skipnz
 21806  2B10  027A               	subwf	EUSART_Initialize@x,w
 21807  2B11  1803               	skipnc
 21808  2B12  0008               	return
 21809                           
 21810                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 21811  2B13  087A               	movf	EUSART_Initialize@x,w
 21812  2B14  0023               	movlb	3	; select bank3
 21813  2B15  009B               	movwf	27	;volatile
 21814                           
 21815                           ;EUSART.c: 18:    SYNC = 0;
 21816  2B16  121E               	bcf	30,4	;volatile
 21817                           
 21818                           ;EUSART.c: 19:    SPEN = 1;
 21819  2B17  179D               	bsf	29,7	;volatile
 21820                           
 21821                           ;EUSART.c: 20:           TRISC7 = 1;
 21822  2B18  0021               	movlb	1	; select bank1
 21823  2B19  178E               	bsf	14,7	;volatile
 21824                           
 21825                           ;EUSART.c: 21:           TRISC6 = 1;
 21826  2B1A  170E               	bsf	14,6	;volatile
 21827                           
 21828                           ;EUSART.c: 22:           CREN = 1;
 21829  2B1B  0023               	movlb	3	; select bank3
 21830  2B1C  161D               	bsf	29,4	;volatile
 21831                           
 21832                           ;EUSART.c: 23:           TXEN = 1;
 21833  2B1D  169E               	bsf	30,5	;volatile
 21834  2B1E  0008               	return
 21835  2B1F                     __end_of_EUSART_Initialize:	
 21836                           
 21837                           	psect	text86
 21838  36FA                     __ptext86:	
 21839 ;; *************** function ___aldiv *****************
 21840 ;; Defined at:
 21841 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 21842 ;; Parameters:    Size  Location     Type
 21843 ;;  divisor         4    4[BANK0 ] long 
 21844 ;;  dividend        4    8[BANK0 ] long 
 21845 ;; Auto vars:     Size  Location     Type
 21846 ;;  quotient        4   14[BANK0 ] long 
 21847 ;;  sign            1   13[BANK0 ] unsigned char 
 21848 ;;  counter         1   12[BANK0 ] unsigned char 
 21849 ;; Return value:  Size  Location     Type
 21850 ;;                  4    4[BANK0 ] long 
 21851 ;; Registers used:
 21852 ;;		wreg, status,2, status,0
 21853 ;; Tracked objects:
 21854 ;;		On entry : 0/0
 21855 ;;		On exit  : 0/0
 21856 ;;		Unchanged: 0/0
 21857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21858 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21859 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21861 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21862 ;;Total ram usage:       15 bytes
 21863 ;; Hardware stack levels used:    1
 21864 ;; Hardware stack levels required when called:    1
 21865 ;; This function calls:
 21866 ;;		Nothing
 21867 ;; This function is called by:
 21868 ;;		_EUSART_Initialize
 21869 ;;		_setCellUndervoltageProtection
 21870 ;;		_setCellOvervoltageProtection
 21871 ;;		_updateVoltages
 21872 ;; This function uses a non-reentrant model
 21873 ;;
 21874                           
 21875                           
 21876                           ;psect for function ___aldiv
 21877  36FA                     ___aldiv:	
 21878                           
 21879                           ;incstack = 0
 21880                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 21881  36FA  0020               	movlb	0	; select bank0
 21882  36FB  01AD               	clrf	___aldiv@sign
 21883  36FC  1FA7               	btfss	___aldiv@divisor+3,7
 21884  36FD  2F0B               	goto	l1006
 21885  36FE  09A4               	comf	___aldiv@divisor,f
 21886  36FF  09A5               	comf	___aldiv@divisor+1,f
 21887  3700  09A6               	comf	___aldiv@divisor+2,f
 21888  3701  09A7               	comf	___aldiv@divisor+3,f
 21889  3702  0AA4               	incf	___aldiv@divisor,f
 21890  3703  1903               	skipnz
 21891  3704  0AA5               	incf	___aldiv@divisor+1,f
 21892  3705  1903               	skipnz
 21893  3706  0AA6               	incf	___aldiv@divisor+2,f
 21894  3707  1903               	skipnz
 21895  3708  0AA7               	incf	___aldiv@divisor+3,f
 21896  3709  01AD               	clrf	___aldiv@sign
 21897  370A  0AAD               	incf	___aldiv@sign,f
 21898  370B                     l1006:	
 21899  370B  1FAB               	btfss	___aldiv@dividend+3,7
 21900  370C  2F1C               	goto	l8399
 21901  370D  09A8               	comf	___aldiv@dividend,f
 21902  370E  09A9               	comf	___aldiv@dividend+1,f
 21903  370F  09AA               	comf	___aldiv@dividend+2,f
 21904  3710  09AB               	comf	___aldiv@dividend+3,f
 21905  3711  0AA8               	incf	___aldiv@dividend,f
 21906  3712  1903               	skipnz
 21907  3713  0AA9               	incf	___aldiv@dividend+1,f
 21908  3714  1903               	skipnz
 21909  3715  0AAA               	incf	___aldiv@dividend+2,f
 21910  3716  1903               	skipnz
 21911  3717  0AAB               	incf	___aldiv@dividend+3,f
 21912  3718  3001               	movlw	1
 21913  3719  00F9               	movwf	??___aldiv
 21914  371A  0879               	movf	??___aldiv,w
 21915  371B  06AD               	xorwf	___aldiv@sign,f
 21916  371C                     l8399:	
 21917  371C  3000               	movlw	0
 21918  371D  00B1               	movwf	___aldiv@quotient+3
 21919  371E  3000               	movlw	0
 21920  371F  00B0               	movwf	___aldiv@quotient+2
 21921  3720  3000               	movlw	0
 21922  3721  00AF               	movwf	___aldiv@quotient+1
 21923  3722  3000               	movlw	0
 21924  3723  00AE               	movwf	___aldiv@quotient
 21925  3724  0827               	movf	___aldiv@divisor+3,w
 21926  3725  0426               	iorwf	___aldiv@divisor+2,w
 21927  3726  0425               	iorwf	___aldiv@divisor+1,w
 21928  3727  0424               	iorwf	___aldiv@divisor,w
 21929  3728  1903               	skipnz
 21930  3729  2F65               	goto	l8421
 21931  372A  01AC               	clrf	___aldiv@counter
 21932  372B  0AAC               	incf	___aldiv@counter,f
 21933  372C                     l8407:	
 21934  372C  1BA7               	btfsc	___aldiv@divisor+3,7
 21935  372D  2F3A               	goto	l8409
 21936  372E  3001               	movlw	1
 21937  372F                     u11725:	
 21938  372F  35A4               	lslf	___aldiv@divisor,f
 21939  3730  0DA5               	rlf	___aldiv@divisor+1,f
 21940  3731  0DA6               	rlf	___aldiv@divisor+2,f
 21941  3732  0DA7               	rlf	___aldiv@divisor+3,f
 21942  3733  0B89               	decfsz	9,f
 21943  3734  2F2F               	goto	u11725
 21944  3735  3001               	movlw	1
 21945  3736  00F9               	movwf	??___aldiv
 21946  3737  0879               	movf	??___aldiv,w
 21947  3738  07AC               	addwf	___aldiv@counter,f
 21948  3739  2F2C               	goto	l8407
 21949  373A                     l8409:	
 21950  373A  3001               	movlw	1
 21951  373B                     u11745:	
 21952  373B  35AE               	lslf	___aldiv@quotient,f
 21953  373C  0DAF               	rlf	___aldiv@quotient+1,f
 21954  373D  0DB0               	rlf	___aldiv@quotient+2,f
 21955  373E  0DB1               	rlf	___aldiv@quotient+3,f
 21956  373F  0B89               	decfsz	9,f
 21957  3740  2F3B               	goto	u11745
 21958  3741  0827               	movf	___aldiv@divisor+3,w
 21959  3742  022B               	subwf	___aldiv@dividend+3,w
 21960  3743  1D03               	skipz
 21961  3744  2F4F               	goto	u11755
 21962  3745  0826               	movf	___aldiv@divisor+2,w
 21963  3746  022A               	subwf	___aldiv@dividend+2,w
 21964  3747  1D03               	skipz
 21965  3748  2F4F               	goto	u11755
 21966  3749  0825               	movf	___aldiv@divisor+1,w
 21967  374A  0229               	subwf	___aldiv@dividend+1,w
 21968  374B  1D03               	skipz
 21969  374C  2F4F               	goto	u11755
 21970  374D  0824               	movf	___aldiv@divisor,w
 21971  374E  0228               	subwf	___aldiv@dividend,w
 21972  374F                     u11755:	
 21973  374F  1C03               	skipc
 21974  3750  2F5A               	goto	l8417
 21975  3751  0824               	movf	___aldiv@divisor,w
 21976  3752  02A8               	subwf	___aldiv@dividend,f
 21977  3753  0825               	movf	___aldiv@divisor+1,w
 21978  3754  3BA9               	subwfb	___aldiv@dividend+1,f
 21979  3755  0826               	movf	___aldiv@divisor+2,w
 21980  3756  3BAA               	subwfb	___aldiv@dividend+2,f
 21981  3757  0827               	movf	___aldiv@divisor+3,w
 21982  3758  3BAB               	subwfb	___aldiv@dividend+3,f
 21983  3759  142E               	bsf	___aldiv@quotient,0
 21984  375A                     l8417:	
 21985  375A  3001               	movlw	1
 21986  375B                     u11765:	
 21987  375B  36A7               	lsrf	___aldiv@divisor+3,f
 21988  375C  0CA6               	rrf	___aldiv@divisor+2,f
 21989  375D  0CA5               	rrf	___aldiv@divisor+1,f
 21990  375E  0CA4               	rrf	___aldiv@divisor,f
 21991  375F  0B89               	decfsz	9,f
 21992  3760  2F5B               	goto	u11765
 21993  3761  3001               	movlw	1
 21994  3762  02AC               	subwf	___aldiv@counter,f
 21995  3763  1D03               	btfss	3,2
 21996  3764  2F3A               	goto	l8409
 21997  3765                     l8421:	
 21998  3765  082D               	movf	___aldiv@sign,w
 21999  3766  1903               	btfsc	3,2
 22000  3767  2F73               	goto	l8425
 22001  3768  09AE               	comf	___aldiv@quotient,f
 22002  3769  09AF               	comf	___aldiv@quotient+1,f
 22003  376A  09B0               	comf	___aldiv@quotient+2,f
 22004  376B  09B1               	comf	___aldiv@quotient+3,f
 22005  376C  0AAE               	incf	___aldiv@quotient,f
 22006  376D  1903               	skipnz
 22007  376E  0AAF               	incf	___aldiv@quotient+1,f
 22008  376F  1903               	skipnz
 22009  3770  0AB0               	incf	___aldiv@quotient+2,f
 22010  3771  1903               	skipnz
 22011  3772  0AB1               	incf	___aldiv@quotient+3,f
 22012  3773                     l8425:	
 22013  3773  0831               	movf	___aldiv@quotient+3,w
 22014  3774  00A7               	movwf	?___aldiv+3
 22015  3775  0830               	movf	___aldiv@quotient+2,w
 22016  3776  00A6               	movwf	?___aldiv+2
 22017  3777  082F               	movf	___aldiv@quotient+1,w
 22018  3778  00A5               	movwf	?___aldiv+1
 22019  3779  082E               	movf	___aldiv@quotient,w
 22020  377A  00A4               	movwf	?___aldiv
 22021  377B  0008               	return
 22022  377C                     __end_of___aldiv:	
 22023                           
 22024                           	psect	intentry
 22025  0004                     __pintentry:	
 22026 ;; *************** function _myIsr *****************
 22027 ;; Defined at:
 22028 ;;		line 59 in file "main.c"
 22029 ;; Parameters:    Size  Location     Type
 22030 ;;		None
 22031 ;; Auto vars:     Size  Location     Type
 22032 ;;		None
 22033 ;; Return value:  Size  Location     Type
 22034 ;;                  1    wreg      void 
 22035 ;; Registers used:
 22036 ;;		wreg, status,2, status,0
 22037 ;; Tracked objects:
 22038 ;;		On entry : 0/0
 22039 ;;		On exit  : 0/0
 22040 ;;		Unchanged: 0/0
 22041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22044 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22045 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22046 ;;Total ram usage:        1 bytes
 22047 ;; Hardware stack levels used:    1
 22048 ;; This function calls:
 22049 ;;		Nothing
 22050 ;; This function is called by:
 22051 ;;		Interrupt level 1
 22052 ;; This function uses a non-reentrant model
 22053 ;;
 22054                           
 22055  0004                     _myIsr:	
 22056                           
 22057                           ;incstack = 0
 22058  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 22059                           
 22060                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 22061  0005  3180               	pagesel	$
 22062                           
 22063                           ;main.c: 61:     static uint8_t count = 0;;main.c: 63:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 22064  0006  0020               	movlb	0	; select bank0
 22065  0007  1C11               	btfss	17,0	;volatile
 22066  0008  281C               	goto	i1l151
 22067  0009  0021               	movlb	1	; select bank1
 22068  000A  1C11               	btfss	17,0	;volatile
 22069  000B  281C               	goto	i1l151
 22070                           
 22071                           ;main.c: 64:         PIR1bits.TMR1IF = 0;
 22072  000C  0020               	movlb	0	; select bank0
 22073  000D  1011               	bcf	17,0	;volatile
 22074                           
 22075                           ;main.c: 65:         count++;
 22076  000E  3001               	movlw	1
 22077  000F  00F0               	movwf	??_myIsr
 22078  0010  0870               	movf	??_myIsr,w
 22079  0011  0023               	movlb	3	; select bank3
 22080  0012  07CB               	addwf	myIsr@count^(0+384),f
 22081                           
 22082                           ;main.c: 68:         if (count == 61) {
 22083  0013  303D               	movlw	61
 22084  0014  064B               	xorwf	myIsr@count^(0+384),w
 22085  0015  1D03               	btfss	3,2
 22086  0016  281C               	goto	i1l151
 22087                           
 22088                           ;main.c: 69:             tmr1_flag = 1;
 22089  0017  3001               	movlw	1
 22090  0018  00F0               	movwf	??_myIsr
 22091  0019  0870               	movf	??_myIsr,w
 22092  001A  00CC               	movwf	_tmr1_flag^(0+384)	;volatile
 22093                           
 22094                           ;main.c: 70:             count = 0;
 22095  001B  01CB               	clrf	myIsr@count^(0+384)
 22096  001C                     i1l151:	
 22097  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 22098  001D  0009               	retfie
 22099  001E                     __end_of_myIsr:	
 22100  007E                     btemp	set	126	;btemp
 22101  007E                     int$flags	set	126
 22102  007E                     wtemp0	set	126
 22103  2771                     
 22104                           	psect	text9_split_1
 22105  282E                     l7995:	
 22106                           
 22107                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 22108  282E  0021               	movlb	1	; select bank1
 22109  282F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22110  2830  0086               	movwf	6
 22111  2831  3001               	movlw	1	; select bank2/3
 22112  2832  0087               	movwf	7
 22113  2833  3F40               	moviw [0]fsr1
 22114  2834  00F1               	movwf	strncmp@_l
 22115  2835  3F41               	moviw [1]fsr1
 22116  2836  00F2               	movwf	strncmp@_l+1
 22117  2837  3050               	movlw	low (STR_35| (0+32768))
 22118  2838  00F3               	movwf	strncmp@_r
 22119  2839  30BB               	movlw	high (STR_35| (0+32768))
 22120  283A  00F4               	movwf	strncmp@_r+1
 22121  283B  3003               	movlw	3
 22122  283C  00F5               	movwf	strncmp@n
 22123  283D  3000               	movlw	0
 22124  283E  00F6               	movwf	strncmp@n+1
 22125  283F  31B2  22A4  31A8   	fcall	_strncmp
 22126  2842  0871               	movf	?_strncmp,w
 22127  2843  0472               	iorwf	?_strncmp+1,w
 22128  2844  1903               	btfsc	3,2
 22129  2845  285E               	goto	l7999
 22130  2846  0021               	movlb	1	; select bank1
 22131  2847  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22132  2848  0086               	movwf	6
 22133  2849  3001               	movlw	1	; select bank2/3
 22134  284A  0087               	movwf	7
 22135  284B  3F40               	moviw [0]fsr1
 22136  284C  00F1               	movwf	strncmp@_l
 22137  284D  3F41               	moviw [1]fsr1
 22138  284E  00F2               	movwf	strncmp@_l+1
 22139  284F  3058               	movlw	low (STR_39| (0+32768))
 22140  2850  00F3               	movwf	strncmp@_r
 22141  2851  30BB               	movlw	high (STR_39| (0+32768))
 22142  2852  00F4               	movwf	strncmp@_r+1
 22143  2853  3003               	movlw	3
 22144  2854  00F5               	movwf	strncmp@n
 22145  2855  3000               	movlw	0
 22146  2856  00F6               	movwf	strncmp@n+1
 22147  2857  31B2  22A4  31A8   	fcall	_strncmp
 22148  285A  0871               	movf	?_strncmp,w
 22149  285B  0472               	iorwf	?_strncmp+1,w
 22150  285C  1D03               	btfss	3,2
 22151  285D  28B2               	goto	L18
 22152  285E                     l7999:	
 22153                           
 22154                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 22155  285E  0021               	movlb	1	; select bank1
 22156  285F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22157  2860  0086               	movwf	6
 22158  2861  3001               	movlw	1	; select bank2/3
 22159  2862  0087               	movwf	7
 22160  2863  3003               	movlw	3
 22161  2864  0781               	addwf	1,f
 22162  2865  3141               	addfsr 1,1
 22163  2866  1803               	skipnc
 22164  2867  0A81               	incf	1,f
 22165                           
 22166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22167  2868  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22168  2869  0086               	movwf	6
 22169  286A  3001               	movlw	1	; select bank2/3
 22170  286B  0087               	movwf	7
 22171  286C  0801               	movf	1,w
 22172  286D  0084               	movwf	4
 22173  286E  3001               	movlw	1	; select bank2/3
 22174  286F  0085               	movwf	5
 22175  2870  3002               	movlw	2
 22176  2871  0781               	addwf	1,f
 22177  2872  0800               	movf	0,w
 22178  2873  0022               	movlb	2	; select bank2
 22179  2874  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22180  2875  3980               	andlw	128
 22181  2876  1D03               	skipz
 22182  2877  30FF               	movlw	255
 22183  2878  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22184  2879  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 22185  287A  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 22186  287B  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 22187  287C  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 22188  287D  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 22189  287E  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 22190                           
 22191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 22192  287F  0021               	movlb	1	; select bank1
 22193  2880  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22194  2881  0020               	movlb	0	; select bank0
 22195  2882  00B1               	movwf	dtoa@fp+1
 22196  2883  0021               	movlb	1	; select bank1
 22197  2884  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22198  2885  0020               	movlb	0	; select bank0
 22199  2886  00B0               	movwf	dtoa@fp
 22200  2887  0022               	movlb	2	; select bank2
 22201  2888  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22202  2889  0020               	movlb	0	; select bank0
 22203  288A  00B2               	movwf	dtoa@d
 22204  288B  0022               	movlb	2	; select bank2
 22205  288C  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22206  288D  0020               	movlb	0	; select bank0
 22207  288E  00B3               	movwf	dtoa@d+1
 22208  288F  0022               	movlb	2	; select bank2
 22209  2890  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22210  2891  0020               	movlb	0	; select bank0
 22211  2892  00B4               	movwf	dtoa@d+2
 22212  2893  0022               	movlb	2	; select bank2
 22213  2894  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22214  2895  0020               	movlb	0	; select bank0
 22215  2896  00B5               	movwf	dtoa@d+3
 22216  2897  0022               	movlb	2	; select bank2
 22217  2898  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22218  2899  0020               	movlb	0	; select bank0
 22219  289A  00B6               	movwf	dtoa@d+4
 22220  289B  0022               	movlb	2	; select bank2
 22221  289C  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22222  289D  0020               	movlb	0	; select bank0
 22223  289E  00B7               	movwf	dtoa@d+5
 22224  289F  0022               	movlb	2	; select bank2
 22225  28A0  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22226  28A1  0020               	movlb	0	; select bank0
 22227  28A2  00B8               	movwf	dtoa@d+6
 22228  28A3  0022               	movlb	2	; select bank2
 22229  28A4  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22230  28A5  0020               	movlb	0	; select bank0
 22231  28A6  00B9               	movwf	dtoa@d+7
 22232  28A7  3198  2007         	fcall	_dtoa
 22233  28A9  0020               	movlb	0	; select bank0
 22234  28AA  0831               	movf	?_dtoa+1,w
 22235  28AB  0021               	movlb	1	; select bank1
 22236  28AC  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22237  28AD  0020               	movlb	0	; select bank0
 22238  28AE  0830               	movf	?_dtoa,w
 22239  28AF  0021               	movlb	1	; select bank1
 22240  28B0  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22241  28B1  0008               	return
 22242  28B2                     L18:	
 22243  28B2                     L17:	
 22244  28B2  31A8  28B4         	ljmp	l8007
 22245                           
 22246                           	psect	text9_split_2
 22247  28B4                     l8007:	
 22248                           
 22249                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 22250  28B4  0021               	movlb	1	; select bank1
 22251  28B5  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22252  28B6  0086               	movwf	6
 22253  28B7  3001               	movlw	1	; select bank2/3
 22254  28B8  0087               	movwf	7
 22255  28B9  3F40               	moviw [0]fsr1
 22256  28BA  00F1               	movwf	strncmp@_l
 22257  28BB  3F41               	moviw [1]fsr1
 22258  28BC  00F2               	movwf	strncmp@_l+1
 22259  28BD  3051               	movlw	low ((STR_35+1)| (0+32768))
 22260  28BE  00F3               	movwf	strncmp@_r
 22261  28BF  30BB               	movlw	high ((STR_35+1)| (0+32768))
 22262  28C0  00F4               	movwf	strncmp@_r+1
 22263  28C1  3002               	movlw	2
 22264  28C2  00F5               	movwf	strncmp@n
 22265  28C3  3000               	movlw	0
 22266  28C4  00F6               	movwf	strncmp@n+1
 22267  28C5  31B2  22A4  31A8   	fcall	_strncmp
 22268  28C8  0871               	movf	?_strncmp,w
 22269  28C9  0472               	iorwf	?_strncmp+1,w
 22270  28CA  1903               	btfsc	3,2
 22271  28CB  28E4               	goto	l8011
 22272  28CC  0021               	movlb	1	; select bank1
 22273  28CD  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22274  28CE  0086               	movwf	6
 22275  28CF  3001               	movlw	1	; select bank2/3
 22276  28D0  0087               	movwf	7
 22277  28D1  3F40               	moviw [0]fsr1
 22278  28D2  00F1               	movwf	strncmp@_l
 22279  28D3  3F41               	moviw [1]fsr1
 22280  28D4  00F2               	movwf	strncmp@_l+1
 22281  28D5  3059               	movlw	low ((STR_39+1)| (0+32768))
 22282  28D6  00F3               	movwf	strncmp@_r
 22283  28D7  30BB               	movlw	high ((STR_39+1)| (0+32768))
 22284  28D8  00F4               	movwf	strncmp@_r+1
 22285  28D9  3002               	movlw	2
 22286  28DA  00F5               	movwf	strncmp@n
 22287  28DB  3000               	movlw	0
 22288  28DC  00F6               	movwf	strncmp@n+1
 22289  28DD  31B2  22A4  31A8   	fcall	_strncmp
 22290  28E0  0871               	movf	?_strncmp,w
 22291  28E1  0472               	iorwf	?_strncmp+1,w
 22292  28E2  1D03               	btfss	3,2
 22293  28E3  293D               	goto	L20
 22294  28E4                     l8011:	
 22295                           
 22296                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 22297  28E4  0021               	movlb	1	; select bank1
 22298  28E5  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22299  28E6  0086               	movwf	6
 22300  28E7  3001               	movlw	1	; select bank2/3
 22301  28E8  0087               	movwf	7
 22302  28E9  3002               	movlw	2
 22303  28EA  0781               	addwf	1,f
 22304  28EB  3141               	addfsr 1,1
 22305  28EC  1803               	skipnc
 22306  28ED  0A81               	incf	1,f
 22307                           
 22308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 22309  28EE  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22310  28EF  0086               	movwf	6
 22311  28F0  3001               	movlw	1	; select bank2/3
 22312  28F1  0087               	movwf	7
 22313  28F2  0801               	movf	1,w
 22314  28F3  0084               	movwf	4
 22315  28F4  3001               	movlw	1	; select bank2/3
 22316  28F5  0085               	movwf	5
 22317  28F6  3002               	movlw	2
 22318  28F7  0781               	addwf	1,f
 22319  28F8  3F00               	moviw [0]fsr0
 22320  28F9  0022               	movlb	2	; select bank2
 22321  28FA  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22322  28FB  3F01               	moviw [1]fsr0
 22323  28FC  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22324  28FD  0820               	movf	??_vfpfcnvrt^(0+256),w
 22325  28FE  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22326  28FF  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22327  2900  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22328  2901  0D89               	rlf	9,f
 22329  2902  3B89               	subwfb	9,f
 22330  2903  0989               	comf	9,f
 22331  2904  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 22332  2905  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 22333  2906  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 22334  2907  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 22335  2908  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 22336  2909  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 22337                           
 22338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 22339  290A  0021               	movlb	1	; select bank1
 22340  290B  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22341  290C  0020               	movlb	0	; select bank0
 22342  290D  00B1               	movwf	dtoa@fp+1
 22343  290E  0021               	movlb	1	; select bank1
 22344  290F  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22345  2910  0020               	movlb	0	; select bank0
 22346  2911  00B0               	movwf	dtoa@fp
 22347  2912  0022               	movlb	2	; select bank2
 22348  2913  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22349  2914  0020               	movlb	0	; select bank0
 22350  2915  00B2               	movwf	dtoa@d
 22351  2916  0022               	movlb	2	; select bank2
 22352  2917  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22353  2918  0020               	movlb	0	; select bank0
 22354  2919  00B3               	movwf	dtoa@d+1
 22355  291A  0022               	movlb	2	; select bank2
 22356  291B  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22357  291C  0020               	movlb	0	; select bank0
 22358  291D  00B4               	movwf	dtoa@d+2
 22359  291E  0022               	movlb	2	; select bank2
 22360  291F  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22361  2920  0020               	movlb	0	; select bank0
 22362  2921  00B5               	movwf	dtoa@d+3
 22363  2922  0022               	movlb	2	; select bank2
 22364  2923  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22365  2924  0020               	movlb	0	; select bank0
 22366  2925  00B6               	movwf	dtoa@d+4
 22367  2926  0022               	movlb	2	; select bank2
 22368  2927  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22369  2928  0020               	movlb	0	; select bank0
 22370  2929  00B7               	movwf	dtoa@d+5
 22371  292A  0022               	movlb	2	; select bank2
 22372  292B  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22373  292C  0020               	movlb	0	; select bank0
 22374  292D  00B8               	movwf	dtoa@d+6
 22375  292E  0022               	movlb	2	; select bank2
 22376  292F  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22377  2930  0020               	movlb	0	; select bank0
 22378  2931  00B9               	movwf	dtoa@d+7
 22379  2932  3198  2007         	fcall	_dtoa
 22380  2934  0020               	movlb	0	; select bank0
 22381  2935  0831               	movf	?_dtoa+1,w
 22382  2936  0021               	movlb	1	; select bank1
 22383  2937  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22384  2938  0020               	movlb	0	; select bank0
 22385  2939  0830               	movf	?_dtoa,w
 22386  293A  0021               	movlb	1	; select bank1
 22387  293B  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22388  293C  0008               	return
 22389  293D                     L20:	
 22390  293D                     L19:	
 22391  293D  31A4  2CA9         	ljmp	l8019
 22392                           
 22393                           	psect	text9_split_3
 22394  24A9                     l8019:	
 22395                           
 22396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 22397  24A9  0021               	movlb	1	; select bank1
 22398  24AA  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22399  24AB  0086               	movwf	6
 22400  24AC  3001               	movlw	1	; select bank2/3
 22401  24AD  0087               	movwf	7
 22402  24AE  3F40               	moviw [0]fsr1
 22403  24AF  0022               	movlb	2	; select bank2
 22404  24B0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22405  24B1  3F41               	moviw [1]fsr1
 22406  24B2  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22407  24B3  0820               	movf	??_vfpfcnvrt^(0+256),w
 22408  24B4  0084               	movwf	4
 22409  24B5  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22410  24B6  0085               	movwf	5
 22411  24B7  0012               	moviw fsr0++
 22412  24B8  3A64               	xorlw	100
 22413  24B9  1903               	btfsc	3,2
 22414  24BA  2CCD               	goto	l8023
 22415  24BB  0021               	movlb	1	; select bank1
 22416  24BC  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22417  24BD  0086               	movwf	6
 22418  24BE  3001               	movlw	1	; select bank2/3
 22419  24BF  0087               	movwf	7
 22420  24C0  3F40               	moviw [0]fsr1
 22421  24C1  0022               	movlb	2	; select bank2
 22422  24C2  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22423  24C3  3F41               	moviw [1]fsr1
 22424  24C4  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22425  24C5  0820               	movf	??_vfpfcnvrt^(0+256),w
 22426  24C6  0084               	movwf	4
 22427  24C7  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22428  24C8  0085               	movwf	5
 22429  24C9  0012               	moviw fsr0++
 22430  24CA  3A69               	xorlw	105
 22431  24CB  1D03               	btfss	3,2
 22432  24CC  2D26               	goto	l8031
 22433  24CD                     l8023:	
 22434                           
 22435                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 22436  24CD  0021               	movlb	1	; select bank1
 22437  24CE  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22438  24CF  0086               	movwf	6
 22439  24D0  3001               	movlw	1	; select bank2/3
 22440  24D1  0087               	movwf	7
 22441  24D2  3001               	movlw	1
 22442  24D3  0781               	addwf	1,f
 22443  24D4  3141               	addfsr 1,1
 22444  24D5  1803               	skipnc
 22445  24D6  0A81               	incf	1,f
 22446                           
 22447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 22448  24D7  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22449  24D8  0086               	movwf	6
 22450  24D9  3001               	movlw	1	; select bank2/3
 22451  24DA  0087               	movwf	7
 22452  24DB  0801               	movf	1,w
 22453  24DC  0084               	movwf	4
 22454  24DD  3001               	movlw	1	; select bank2/3
 22455  24DE  0085               	movwf	5
 22456  24DF  3002               	movlw	2
 22457  24E0  0781               	addwf	1,f
 22458  24E1  3F00               	moviw [0]fsr0
 22459  24E2  0022               	movlb	2	; select bank2
 22460  24E3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22461  24E4  3F01               	moviw [1]fsr0
 22462  24E5  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22463  24E6  0820               	movf	??_vfpfcnvrt^(0+256),w
 22464  24E7  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22465  24E8  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22466  24E9  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22467  24EA  0D89               	rlf	9,f
 22468  24EB  3B89               	subwfb	9,f
 22469  24EC  0989               	comf	9,f
 22470  24ED  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 22471  24EE  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 22472  24EF  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 22473  24F0  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 22474  24F1  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 22475  24F2  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 22476                           
 22477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 22478  24F3  0021               	movlb	1	; select bank1
 22479  24F4  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22480  24F5  0020               	movlb	0	; select bank0
 22481  24F6  00B1               	movwf	dtoa@fp+1
 22482  24F7  0021               	movlb	1	; select bank1
 22483  24F8  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22484  24F9  0020               	movlb	0	; select bank0
 22485  24FA  00B0               	movwf	dtoa@fp
 22486  24FB  0022               	movlb	2	; select bank2
 22487  24FC  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22488  24FD  0020               	movlb	0	; select bank0
 22489  24FE  00B2               	movwf	dtoa@d
 22490  24FF  0022               	movlb	2	; select bank2
 22491  2500  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22492  2501  0020               	movlb	0	; select bank0
 22493  2502  00B3               	movwf	dtoa@d+1
 22494  2503  0022               	movlb	2	; select bank2
 22495  2504  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22496  2505  0020               	movlb	0	; select bank0
 22497  2506  00B4               	movwf	dtoa@d+2
 22498  2507  0022               	movlb	2	; select bank2
 22499  2508  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22500  2509  0020               	movlb	0	; select bank0
 22501  250A  00B5               	movwf	dtoa@d+3
 22502  250B  0022               	movlb	2	; select bank2
 22503  250C  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22504  250D  0020               	movlb	0	; select bank0
 22505  250E  00B6               	movwf	dtoa@d+4
 22506  250F  0022               	movlb	2	; select bank2
 22507  2510  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22508  2511  0020               	movlb	0	; select bank0
 22509  2512  00B7               	movwf	dtoa@d+5
 22510  2513  0022               	movlb	2	; select bank2
 22511  2514  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22512  2515  0020               	movlb	0	; select bank0
 22513  2516  00B8               	movwf	dtoa@d+6
 22514  2517  0022               	movlb	2	; select bank2
 22515  2518  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22516  2519  0020               	movlb	0	; select bank0
 22517  251A  00B9               	movwf	dtoa@d+7
 22518  251B  3198  2007         	fcall	_dtoa
 22519  251D  0020               	movlb	0	; select bank0
 22520  251E  0831               	movf	?_dtoa+1,w
 22521  251F  0021               	movlb	1	; select bank1
 22522  2520  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22523  2521  0020               	movlb	0	; select bank0
 22524  2522  0830               	movf	?_dtoa,w
 22525  2523  0021               	movlb	1	; select bank1
 22526  2524  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22527  2525  0008               	return
 22528  2526                     l8031:	
 22529                           
 22530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 835:       
      +                            if (!strncmp(*fmt, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", (
      +                          (sizeof("li")/sizeof("li"[0]))-1))) {
 22531  2526  0021               	movlb	1	; select bank1
 22532  2527  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22533  2528  0086               	movwf	6
 22534  2529  3001               	movlw	1	; select bank2/3
 22535  252A  0087               	movwf	7
 22536  252B  3F40               	moviw [0]fsr1
 22537  252C  00F1               	movwf	strncmp@_l
 22538  252D  3F41               	moviw [1]fsr1
 22539  252E  00F2               	movwf	strncmp@_l+1
 22540  252F  3076               	movlw	low (STR_53| (0+32768))
 22541  2530  00F3               	movwf	strncmp@_r
 22542  2531  30BB               	movlw	high (STR_53| (0+32768))
 22543  2532  00F4               	movwf	strncmp@_r+1
 22544  2533  3002               	movlw	2
 22545  2534  00F5               	movwf	strncmp@n
 22546  2535  3000               	movlw	0
 22547  2536  00F6               	movwf	strncmp@n+1
 22548  2537  31B2  22A4  31A4   	fcall	_strncmp
 22549  253A  0871               	movf	?_strncmp,w
 22550  253B  0472               	iorwf	?_strncmp+1,w
 22551  253C  1903               	btfsc	3,2
 22552  253D  2D56               	goto	l8035
 22553  253E  0021               	movlb	1	; select bank1
 22554  253F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22555  2540  0086               	movwf	6
 22556  2541  3001               	movlw	1	; select bank2/3
 22557  2542  0087               	movwf	7
 22558  2543  3F40               	moviw [0]fsr1
 22559  2544  00F1               	movwf	strncmp@_l
 22560  2545  3F41               	moviw [1]fsr1
 22561  2546  00F2               	movwf	strncmp@_l+1
 22562  2547  307F               	movlw	low (STR_57| (0+32768))
 22563  2548  00F3               	movwf	strncmp@_r
 22564  2549  30BB               	movlw	high (STR_57| (0+32768))
 22565  254A  00F4               	movwf	strncmp@_r+1
 22566  254B  3002               	movlw	2
 22567  254C  00F5               	movwf	strncmp@n
 22568  254D  3000               	movlw	0
 22569  254E  00F6               	movwf	strncmp@n+1
 22570  254F  31B2  22A4  31A4   	fcall	_strncmp
 22571  2552  0871               	movf	?_strncmp,w
 22572  2553  0472               	iorwf	?_strncmp+1,w
 22573  2554  1D03               	btfss	3,2
 22574  2555  2DB5               	goto	L22
 22575  2556                     l8035:	
 22576                           
 22577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 836: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 838:             
      +                          *fmt += ((sizeof("ld")/sizeof("ld"[0]))-1);
 22578  2556  0021               	movlb	1	; select bank1
 22579  2557  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22580  2558  0086               	movwf	6
 22581  2559  3001               	movlw	1	; select bank2/3
 22582  255A  0087               	movwf	7
 22583  255B  3002               	movlw	2
 22584  255C  0781               	addwf	1,f
 22585  255D  3141               	addfsr 1,1
 22586  255E  1803               	skipnc
 22587  255F  0A81               	incf	1,f
 22588                           
 22589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 839:       
      +                                ll = (long long)(*(long *)__va_arg(*(long **)ap, (long)0));
 22590  2560  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22591  2561  0086               	movwf	6
 22592  2562  3001               	movlw	1	; select bank2/3
 22593  2563  0087               	movwf	7
 22594  2564  0801               	movf	1,w
 22595  2565  0084               	movwf	4
 22596  2566  3001               	movlw	1	; select bank2/3
 22597  2567  0085               	movwf	5
 22598  2568  3004               	movlw	4
 22599  2569  0781               	addwf	1,f
 22600  256A  3F00               	moviw [0]fsr0
 22601  256B  0022               	movlb	2	; select bank2
 22602  256C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22603  256D  3F01               	moviw [1]fsr0
 22604  256E  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22605  256F  3F02               	moviw [2]fsr0
 22606  2570  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 22607  2571  3F03               	moviw [3]fsr0
 22608  2572  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 22609  2573  0820               	movf	??_vfpfcnvrt^(0+256),w
 22610  2574  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22611  2575  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22612  2576  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22613  2577  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22614  2578  00BE               	movwf	(vfpfcnvrt@ll+2)^(0+256)
 22615  2579  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 22616  257A  00BF               	movwf	(vfpfcnvrt@ll+3)^(0+256)
 22617  257B  3000               	movlw	0
 22618  257C  1BBF               	btfsc	(vfpfcnvrt@ll+3)^(0+256),7
 22619  257D  30FF               	movlw	255
 22620  257E  00C0               	movwf	(vfpfcnvrt@ll+4)^(0+256)
 22621  257F  00C1               	movwf	(vfpfcnvrt@ll+5)^(0+256)
 22622  2580  00C2               	movwf	(vfpfcnvrt@ll+6)^(0+256)
 22623  2581  00C3               	movwf	(vfpfcnvrt@ll+7)^(0+256)
 22624                           
 22625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 841:       
      +                                return dtoa(fp, ll);
 22626  2582  0021               	movlb	1	; select bank1
 22627  2583  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22628  2584  0020               	movlb	0	; select bank0
 22629  2585  00B1               	movwf	dtoa@fp+1
 22630  2586  0021               	movlb	1	; select bank1
 22631  2587  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22632  2588  0020               	movlb	0	; select bank0
 22633  2589  00B0               	movwf	dtoa@fp
 22634  258A  0022               	movlb	2	; select bank2
 22635  258B  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22636  258C  0020               	movlb	0	; select bank0
 22637  258D  00B2               	movwf	dtoa@d
 22638  258E  0022               	movlb	2	; select bank2
 22639  258F  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22640  2590  0020               	movlb	0	; select bank0
 22641  2591  00B3               	movwf	dtoa@d+1
 22642  2592  0022               	movlb	2	; select bank2
 22643  2593  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22644  2594  0020               	movlb	0	; select bank0
 22645  2595  00B4               	movwf	dtoa@d+2
 22646  2596  0022               	movlb	2	; select bank2
 22647  2597  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22648  2598  0020               	movlb	0	; select bank0
 22649  2599  00B5               	movwf	dtoa@d+3
 22650  259A  0022               	movlb	2	; select bank2
 22651  259B  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22652  259C  0020               	movlb	0	; select bank0
 22653  259D  00B6               	movwf	dtoa@d+4
 22654  259E  0022               	movlb	2	; select bank2
 22655  259F  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22656  25A0  0020               	movlb	0	; select bank0
 22657  25A1  00B7               	movwf	dtoa@d+5
 22658  25A2  0022               	movlb	2	; select bank2
 22659  25A3  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22660  25A4  0020               	movlb	0	; select bank0
 22661  25A5  00B8               	movwf	dtoa@d+6
 22662  25A6  0022               	movlb	2	; select bank2
 22663  25A7  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22664  25A8  0020               	movlb	0	; select bank0
 22665  25A9  00B9               	movwf	dtoa@d+7
 22666  25AA  3198  2007         	fcall	_dtoa
 22667  25AC  0020               	movlb	0	; select bank0
 22668  25AD  0831               	movf	?_dtoa+1,w
 22669  25AE  0021               	movlb	1	; select bank1
 22670  25AF  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22671  25B0  0020               	movlb	0	; select bank0
 22672  25B1  0830               	movf	?_dtoa,w
 22673  25B2  0021               	movlb	1	; select bank1
 22674  25B3  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22675  25B4  0008               	return
 22676  25B5                     L22:	
 22677  25B5                     L21:	
 22678  25B5  31B7  2F7C         	ljmp	l8043
 22679                           
 22680                           	psect	text9_split_4
 22681  377C                     l8043:	
 22682                           
 22683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 22684  377C  0021               	movlb	1	; select bank1
 22685  377D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22686  377E  0086               	movwf	6
 22687  377F  3001               	movlw	1	; select bank2/3
 22688  3780  0087               	movwf	7
 22689  3781  3F40               	moviw [0]fsr1
 22690  3782  00F1               	movwf	strncmp@_l
 22691  3783  3F41               	moviw [1]fsr1
 22692  3784  00F2               	movwf	strncmp@_l+1
 22693  3785  3079               	movlw	low (STR_62| (0+32768))
 22694  3786  00F3               	movwf	strncmp@_r
 22695  3787  30BB               	movlw	high (STR_62| (0+32768))
 22696  3788  00F4               	movwf	strncmp@_r+1
 22697  3789  3002               	movlw	2
 22698  378A  00F5               	movwf	strncmp@n
 22699  378B  3000               	movlw	0
 22700  378C  00F6               	movwf	strncmp@n+1
 22701  378D  31B2  22A4  31B7   	fcall	_strncmp
 22702  3790  0871               	movf	?_strncmp,w
 22703  3791  0472               	iorwf	?_strncmp+1,w
 22704  3792  1903               	btfsc	3,2
 22705  3793  2FAC               	goto	l8047
 22706  3794  0021               	movlb	1	; select bank1
 22707  3795  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22708  3796  0086               	movwf	6
 22709  3797  3001               	movlw	1	; select bank2/3
 22710  3798  0087               	movwf	7
 22711  3799  3F40               	moviw [0]fsr1
 22712  379A  00F1               	movwf	strncmp@_l
 22713  379B  3F41               	moviw [1]fsr1
 22714  379C  00F2               	movwf	strncmp@_l+1
 22715  379D  3082               	movlw	low (STR_66| (0+32768))
 22716  379E  00F3               	movwf	strncmp@_r
 22717  379F  30BB               	movlw	high (STR_66| (0+32768))
 22718  37A0  00F4               	movwf	strncmp@_r+1
 22719  37A1  3002               	movlw	2
 22720  37A2  00F5               	movwf	strncmp@n
 22721  37A3  3000               	movlw	0
 22722  37A4  00F6               	movwf	strncmp@n+1
 22723  37A5  31B2  22A4  31B7   	fcall	_strncmp
 22724  37A8  0871               	movf	?_strncmp,w
 22725  37A9  0472               	iorwf	?_strncmp+1,w
 22726  37AA  1D03               	btfss	3,2
 22727  37AB  2FFE               	goto	L24
 22728  37AC                     l8047:	
 22729                           
 22730                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 22731  37AC  0021               	movlb	1	; select bank1
 22732  37AD  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22733  37AE  0086               	movwf	6
 22734  37AF  3001               	movlw	1	; select bank2/3
 22735  37B0  0087               	movwf	7
 22736  37B1  3002               	movlw	2
 22737  37B2  0781               	addwf	1,f
 22738  37B3  3141               	addfsr 1,1
 22739  37B4  1803               	skipnc
 22740  37B5  0A81               	incf	1,f
 22741                           
 22742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22743  37B6  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22744  37B7  0086               	movwf	6
 22745  37B8  3001               	movlw	1	; select bank2/3
 22746  37B9  0087               	movwf	7
 22747  37BA  0801               	movf	1,w
 22748  37BB  0084               	movwf	4
 22749  37BC  3001               	movlw	1	; select bank2/3
 22750  37BD  0085               	movwf	5
 22751  37BE  3002               	movlw	2
 22752  37BF  0781               	addwf	1,f
 22753  37C0  3F00               	moviw [0]fsr0
 22754  37C1  0022               	movlb	2	; select bank2
 22755  37C2  00BC               	movwf	vfpfcnvrt@ll^(0+256)
 22756  37C3  3F01               	moviw [1]fsr0
 22757  37C4  00BD               	movwf	(vfpfcnvrt@ll+1)^(0+256)
 22758  37C5  01BE               	clrf	(vfpfcnvrt@ll+2)^(0+256)
 22759  37C6  01BF               	clrf	(vfpfcnvrt@ll+3)^(0+256)
 22760  37C7  01C0               	clrf	(vfpfcnvrt@ll+4)^(0+256)
 22761  37C8  01C1               	clrf	(vfpfcnvrt@ll+5)^(0+256)
 22762  37C9  01C2               	clrf	(vfpfcnvrt@ll+6)^(0+256)
 22763  37CA  01C3               	clrf	(vfpfcnvrt@ll+7)^(0+256)
 22764                           
 22765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 22766  37CB  0021               	movlb	1	; select bank1
 22767  37CC  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22768  37CD  0020               	movlb	0	; select bank0
 22769  37CE  00B1               	movwf	dtoa@fp+1
 22770  37CF  0021               	movlb	1	; select bank1
 22771  37D0  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22772  37D1  0020               	movlb	0	; select bank0
 22773  37D2  00B0               	movwf	dtoa@fp
 22774  37D3  0022               	movlb	2	; select bank2
 22775  37D4  083C               	movf	vfpfcnvrt@ll^(0+256),w
 22776  37D5  0020               	movlb	0	; select bank0
 22777  37D6  00B2               	movwf	dtoa@d
 22778  37D7  0022               	movlb	2	; select bank2
 22779  37D8  083D               	movf	(vfpfcnvrt@ll+1)^(0+256),w
 22780  37D9  0020               	movlb	0	; select bank0
 22781  37DA  00B3               	movwf	dtoa@d+1
 22782  37DB  0022               	movlb	2	; select bank2
 22783  37DC  083E               	movf	(vfpfcnvrt@ll+2)^(0+256),w
 22784  37DD  0020               	movlb	0	; select bank0
 22785  37DE  00B4               	movwf	dtoa@d+2
 22786  37DF  0022               	movlb	2	; select bank2
 22787  37E0  083F               	movf	(vfpfcnvrt@ll+3)^(0+256),w
 22788  37E1  0020               	movlb	0	; select bank0
 22789  37E2  00B5               	movwf	dtoa@d+3
 22790  37E3  0022               	movlb	2	; select bank2
 22791  37E4  0840               	movf	(vfpfcnvrt@ll+4)^(0+256),w
 22792  37E5  0020               	movlb	0	; select bank0
 22793  37E6  00B6               	movwf	dtoa@d+4
 22794  37E7  0022               	movlb	2	; select bank2
 22795  37E8  0841               	movf	(vfpfcnvrt@ll+5)^(0+256),w
 22796  37E9  0020               	movlb	0	; select bank0
 22797  37EA  00B7               	movwf	dtoa@d+5
 22798  37EB  0022               	movlb	2	; select bank2
 22799  37EC  0842               	movf	(vfpfcnvrt@ll+6)^(0+256),w
 22800  37ED  0020               	movlb	0	; select bank0
 22801  37EE  00B8               	movwf	dtoa@d+6
 22802  37EF  0022               	movlb	2	; select bank2
 22803  37F0  0843               	movf	(vfpfcnvrt@ll+7)^(0+256),w
 22804  37F1  0020               	movlb	0	; select bank0
 22805  37F2  00B9               	movwf	dtoa@d+7
 22806  37F3  3198  2007         	fcall	_dtoa
 22807  37F5  0020               	movlb	0	; select bank0
 22808  37F6  0831               	movf	?_dtoa+1,w
 22809  37F7  0021               	movlb	1	; select bank1
 22810  37F8  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22811  37F9  0020               	movlb	0	; select bank0
 22812  37FA  0830               	movf	?_dtoa,w
 22813  37FB  0021               	movlb	1	; select bank1
 22814  37FC  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22815  37FD  0008               	return
 22816  37FE                     L24:	
 22817  37FE                     L23:	
 22818  37FE  31A3  2BAB         	ljmp	l8055
 22819                           
 22820                           	psect	text9_split_5
 22821  23AB                     l8055:	
 22822                           
 22823                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
 22824  23AB  3066               	movlw	102
 22825  23AC  0022               	movlb	2	; select bank2
 22826  23AD  0635               	xorwf	vfpfcnvrt@ct^(0+256),w
 22827  23AE  1D03               	btfss	3,2
 22828  23AF  2C02               	goto	l8067
 22829                           
 22830                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
 22831  23B0  0021               	movlb	1	; select bank1
 22832  23B1  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22833  23B2  0086               	movwf	6
 22834  23B3  3001               	movlw	1	; select bank2/3
 22835  23B4  0087               	movwf	7
 22836  23B5  3F40               	moviw [0]fsr1
 22837  23B6  0022               	movlb	2	; select bank2
 22838  23B7  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22839  23B8  3F41               	moviw [1]fsr1
 22840  23B9  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22841  23BA  0820               	movf	??_vfpfcnvrt^(0+256),w
 22842  23BB  0084               	movwf	4
 22843  23BC  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22844  23BD  0085               	movwf	5
 22845  23BE  0800               	movf	0,w	;code access
 22846  23BF  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22847  23C0  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22848  23C1  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22849                           
 22850                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
 22851  23C2  0021               	movlb	1	; select bank1
 22852  23C3  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22853  23C4  0086               	movwf	6
 22854  23C5  3001               	movlw	1	; select bank2/3
 22855  23C6  0087               	movwf	7
 22856  23C7  3001               	movlw	1
 22857  23C8  0781               	addwf	1,f
 22858  23C9  3141               	addfsr 1,1
 22859  23CA  1803               	skipnc
 22860  23CB  0A81               	incf	1,f
 22861                           
 22862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 22863  23CC  086F               	movf	vfpfcnvrt@ap^(0+128),w
 22864  23CD  0086               	movwf	6
 22865  23CE  3001               	movlw	1	; select bank2/3
 22866  23CF  0087               	movwf	7
 22867  23D0  0801               	movf	1,w
 22868  23D1  0084               	movwf	4
 22869  23D2  3001               	movlw	1	; select bank2/3
 22870  23D3  0085               	movwf	5
 22871  23D4  3004               	movlw	4
 22872  23D5  0781               	addwf	1,f
 22873  23D6  3F00               	moviw [0]fsr0
 22874  23D7  0022               	movlb	2	; select bank2
 22875  23D8  00B8               	movwf	vfpfcnvrt@f^(0+256)
 22876  23D9  3F01               	moviw [1]fsr0
 22877  23DA  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 22878  23DB  3F02               	moviw [2]fsr0
 22879  23DC  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 22880  23DD  3F03               	moviw [3]fsr0
 22881  23DE  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 22882                           
 22883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
 22884  23DF  0021               	movlb	1	; select bank1
 22885  23E0  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 22886  23E1  00AA               	movwf	(efgtoa@fp+1)^(0+128)
 22887  23E2  086C               	movf	vfpfcnvrt@fp^(0+128),w
 22888  23E3  00A9               	movwf	efgtoa@fp^(0+128)
 22889  23E4  0022               	movlb	2	; select bank2
 22890  23E5  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 22891  23E6  0021               	movlb	1	; select bank1
 22892  23E7  00AE               	movwf	(efgtoa@f+3)^(0+128)
 22893  23E8  0022               	movlb	2	; select bank2
 22894  23E9  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 22895  23EA  0021               	movlb	1	; select bank1
 22896  23EB  00AD               	movwf	(efgtoa@f+2)^(0+128)
 22897  23EC  0022               	movlb	2	; select bank2
 22898  23ED  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 22899  23EE  0021               	movlb	1	; select bank1
 22900  23EF  00AC               	movwf	(efgtoa@f+1)^(0+128)
 22901  23F0  0022               	movlb	2	; select bank2
 22902  23F1  0838               	movf	vfpfcnvrt@f^(0+256),w
 22903  23F2  0021               	movlb	1	; select bank1
 22904  23F3  00AB               	movwf	efgtoa@f^(0+128)
 22905  23F4  0022               	movlb	2	; select bank2
 22906  23F5  0845               	movf	vfpfcnvrt@c^(0+256),w
 22907  23F6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22908  23F7  0820               	movf	??_vfpfcnvrt^(0+256),w
 22909  23F8  0021               	movlb	1	; select bank1
 22910  23F9  00AF               	movwf	efgtoa@c^(0+128)
 22911  23FA  3180  2063         	fcall	_efgtoa
 22912  23FC  0021               	movlb	1	; select bank1
 22913  23FD  082A               	movf	(?_efgtoa+1)^(0+128),w
 22914  23FE  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 22915  23FF  0829               	movf	?_efgtoa^(0+128),w
 22916  2400  00EC               	movwf	?_vfpfcnvrt^(0+128)
 22917  2401  0008               	return
 22918  2402                     l8067:	
 22919                           
 22920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 22921  2402  3035               	movlw	low vfpfcnvrt@ct
 22922  2403  00F1               	movwf	strncmp@_l
 22923  2404  3001               	movlw	high vfpfcnvrt@ct
 22924  2405  00F2               	movwf	strncmp@_l+1
 22925  2406  307C               	movlw	low (STR_71| (0+32768))
 22926  2407  00F3               	movwf	strncmp@_r
 22927  2408  30BB               	movlw	high (STR_71| (0+32768))
 22928  2409  00F4               	movwf	strncmp@_r+1
 22929  240A  3002               	movlw	2
 22930  240B  00F5               	movwf	strncmp@n
 22931  240C  3000               	movlw	0
 22932  240D  00F6               	movwf	strncmp@n+1
 22933  240E  31B2  22A4  31A3   	fcall	_strncmp
 22934  2411  0871               	movf	?_strncmp,w
 22935  2412  0472               	iorwf	?_strncmp+1,w
 22936  2413  1D03               	btfss	3,2
 22937  2414  2CA7               	goto	L26
 22938                           
 22939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 22940  2415  0021               	movlb	1	; select bank1
 22941  2416  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22942  2417  0086               	movwf	6
 22943  2418  3001               	movlw	1	; select bank2/3
 22944  2419  0087               	movwf	7
 22945  241A  3F40               	moviw [0]fsr1
 22946  241B  0022               	movlb	2	; select bank2
 22947  241C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22948  241D  3F41               	moviw [1]fsr1
 22949  241E  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22950  241F  3001               	movlw	1
 22951  2420  0720               	addwf	??_vfpfcnvrt^(0+256),w
 22952  2421  0084               	movwf	4
 22953  2422  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 22954  2423  1803               	skipnc
 22955  2424  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 22956  2425  0085               	movwf	5
 22957  2426  0800               	movf	0,w	;code access
 22958  2427  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22959  2428  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 22960  2429  00C5               	movwf	vfpfcnvrt@c^(0+256)
 22961  242A  0021               	movlb	1	; select bank1
 22962  242B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 22963  242C  0086               	movwf	6
 22964  242D  3001               	movlw	1	; select bank2/3
 22965  242E  0087               	movwf	7
 22966  242F  3F40               	moviw [0]fsr1
 22967  2430  0022               	movlb	2	; select bank2
 22968  2431  00A0               	movwf	??_vfpfcnvrt^(0+256)
 22969  2432  3F41               	moviw [1]fsr1
 22970  2433  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 22971  2434  0820               	movf	??_vfpfcnvrt^(0+256),w
 22972  2435  0084               	movwf	4
 22973  2436  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 22974  2437  0085               	movwf	5
 22975  2438  0800               	movf	0,w	;code access
 22976  2439  3EBF               	addlw	191
 22977  243A  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 22978  243B  30FF               	movlw	255
 22979  243C  1803               	skipnc
 22980  243D  3000               	movlw	0
 22981  243E  00A3               	movwf	((??_vfpfcnvrt+2)^(0+256)+1)
 22982  243F  3000               	movlw	0
 22983  2440  0223               	subwf	(??_vfpfcnvrt+3)^(0+256),w
 22984  2441  301A               	movlw	26
 22985  2442  1903               	skipnz
 22986  2443  0222               	subwf	(??_vfpfcnvrt+2)^(0+256),w
 22987  2444  1803               	btfsc	3,0
 22988  2445  2C48               	goto	u11330
 22989  2446  3001               	movlw	1
 22990  2447  2C49               	goto	u11340
 22991  2448                     u11330:	
 22992  2448  3000               	movlw	0
 22993  2449                     u11340:	
 22994  2449  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 22995  244A  01A5               	clrf	((??_vfpfcnvrt+4)^(0+256)+1)
 22996  244B  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 22997  244C  00B3               	movwf	_vfpfcnvrt$1338^(0+256)
 22998  244D  0825               	movf	(??_vfpfcnvrt+5)^(0+256),w
 22999  244E  00B4               	movwf	(_vfpfcnvrt$1338+1)^(0+256)
 23000  244F  0833               	movf	_vfpfcnvrt$1338^(0+256),w
 23001  2450  0434               	iorwf	(_vfpfcnvrt$1338+1)^(0+256),w
 23002  2451  1903               	btfsc	3,2
 23003  2452  2C67               	goto	l8077
 23004                           
 23005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
 23006  2453  0021               	movlb	1	; select bank1
 23007  2454  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23008  2455  0086               	movwf	6
 23009  2456  3001               	movlw	1	; select bank2/3
 23010  2457  0087               	movwf	7
 23011  2458  0801               	movf	1,w
 23012  2459  0084               	movwf	4
 23013  245A  3001               	movlw	1	; select bank2/3
 23014  245B  0085               	movwf	5
 23015  245C  3004               	movlw	4
 23016  245D  0781               	addwf	1,f
 23017  245E  3F00               	moviw [0]fsr0
 23018  245F  0022               	movlb	2	; select bank2
 23019  2460  00B8               	movwf	vfpfcnvrt@f^(0+256)
 23020  2461  3F01               	moviw [1]fsr0
 23021  2462  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 23022  2463  3F02               	moviw [2]fsr0
 23023  2464  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 23024  2465  3F03               	moviw [3]fsr0
 23025  2466  2C7A               	goto	L1
 23026  2467                     l8077:	
 23027                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
 23028                           
 23029                           
 23030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
 23031  2467  0021               	movlb	1	; select bank1
 23032  2468  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23033  2469  0086               	movwf	6
 23034  246A  3001               	movlw	1	; select bank2/3
 23035  246B  0087               	movwf	7
 23036  246C  0801               	movf	1,w
 23037  246D  0084               	movwf	4
 23038  246E  3001               	movlw	1	; select bank2/3
 23039  246F  0085               	movwf	5
 23040  2470  3004               	movlw	4
 23041  2471  0781               	addwf	1,f
 23042  2472  3F00               	moviw [0]fsr0
 23043  2473  0022               	movlb	2	; select bank2
 23044  2474  00B8               	movwf	vfpfcnvrt@f^(0+256)
 23045  2475  3F01               	moviw [1]fsr0
 23046  2476  00B9               	movwf	(vfpfcnvrt@f+1)^(0+256)
 23047  2477  3F02               	moviw [2]fsr0
 23048  2478  00BA               	movwf	(vfpfcnvrt@f+2)^(0+256)
 23049  2479  3F03               	moviw [3]fsr0
 23050  247A                     L1:	
 23051  247A  00BB               	movwf	(vfpfcnvrt@f+3)^(0+256)
 23052                           
 23053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
 23054  247B  0021               	movlb	1	; select bank1
 23055  247C  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23056  247D  0086               	movwf	6
 23057  247E  3001               	movlw	1	; select bank2/3
 23058  247F  0087               	movwf	7
 23059  2480  3002               	movlw	2
 23060  2481  0781               	addwf	1,f
 23061  2482  3141               	addfsr 1,1
 23062  2483  1803               	skipnc
 23063  2484  0A81               	incf	1,f
 23064                           
 23065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
 23066  2485  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23067  2486  00AA               	movwf	(efgtoa@fp+1)^(0+128)
 23068  2487  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23069  2488  00A9               	movwf	efgtoa@fp^(0+128)
 23070  2489  0022               	movlb	2	; select bank2
 23071  248A  083B               	movf	(vfpfcnvrt@f+3)^(0+256),w
 23072  248B  0021               	movlb	1	; select bank1
 23073  248C  00AE               	movwf	(efgtoa@f+3)^(0+128)
 23074  248D  0022               	movlb	2	; select bank2
 23075  248E  083A               	movf	(vfpfcnvrt@f+2)^(0+256),w
 23076  248F  0021               	movlb	1	; select bank1
 23077  2490  00AD               	movwf	(efgtoa@f+2)^(0+128)
 23078  2491  0022               	movlb	2	; select bank2
 23079  2492  0839               	movf	(vfpfcnvrt@f+1)^(0+256),w
 23080  2493  0021               	movlb	1	; select bank1
 23081  2494  00AC               	movwf	(efgtoa@f+1)^(0+128)
 23082  2495  0022               	movlb	2	; select bank2
 23083  2496  0838               	movf	vfpfcnvrt@f^(0+256),w
 23084  2497  0021               	movlb	1	; select bank1
 23085  2498  00AB               	movwf	efgtoa@f^(0+128)
 23086  2499  0022               	movlb	2	; select bank2
 23087  249A  0845               	movf	vfpfcnvrt@c^(0+256),w
 23088  249B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23089  249C  0820               	movf	??_vfpfcnvrt^(0+256),w
 23090  249D  0021               	movlb	1	; select bank1
 23091  249E  00AF               	movwf	efgtoa@c^(0+128)
 23092  249F  3180  2063         	fcall	_efgtoa
 23093  24A1  0021               	movlb	1	; select bank1
 23094  24A2  082A               	movf	(?_efgtoa+1)^(0+128),w
 23095  24A3  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23096  24A4  0829               	movf	?_efgtoa^(0+128),w
 23097  24A5  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23098  24A6  0008               	return
 23099  24A7                     L26:	
 23100  24A7                     L25:	
 23101  24A7  3190  2800         	ljmp	l8085
 23102                           
 23103                           	psect	text9_split_6
 23104  1000                     l8085:	
 23105                           
 23106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 23107  1000  0021               	movlb	1	; select bank1
 23108  1001  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23109  1002  0086               	movwf	6
 23110  1003  3001               	movlw	1	; select bank2/3
 23111  1004  0087               	movwf	7
 23112  1005  3F40               	moviw [0]fsr1
 23113  1006  00F1               	movwf	strncmp@_l
 23114  1007  3F41               	moviw [1]fsr1
 23115  1008  00F2               	movwf	strncmp@_l+1
 23116  1009  3064               	movlw	low (STR_76| (0+32768))
 23117  100A  00F3               	movwf	strncmp@_r
 23118  100B  30BB               	movlw	high (STR_76| (0+32768))
 23119  100C  00F4               	movwf	strncmp@_r+1
 23120  100D  3003               	movlw	3
 23121  100E  00F5               	movwf	strncmp@n
 23122  100F  3000               	movlw	0
 23123  1010  00F6               	movwf	strncmp@n+1
 23124  1011  31B2  22A4  3190   	fcall	_strncmp
 23125  1014  0871               	movf	?_strncmp,w
 23126  1015  0472               	iorwf	?_strncmp+1,w
 23127  1016  1D03               	btfss	3,2
 23128  1017  2869               	goto	l8095
 23129                           
 23130                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 23131  1018  0021               	movlb	1	; select bank1
 23132  1019  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23133  101A  0086               	movwf	6
 23134  101B  3001               	movlw	1	; select bank2/3
 23135  101C  0087               	movwf	7
 23136  101D  3003               	movlw	3
 23137  101E  0781               	addwf	1,f
 23138  101F  3141               	addfsr 1,1
 23139  1020  1803               	skipnc
 23140  1021  0A81               	incf	1,f
 23141                           
 23142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 23143  1022  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23144  1023  0086               	movwf	6
 23145  1024  3001               	movlw	1	; select bank2/3
 23146  1025  0087               	movwf	7
 23147  1026  0801               	movf	1,w
 23148  1027  0084               	movwf	4
 23149  1028  3001               	movlw	1	; select bank2/3
 23150  1029  0085               	movwf	5
 23151  102A  3002               	movlw	2
 23152  102B  0781               	addwf	1,f
 23153  102C  0800               	movf	0,w
 23154  102D  0022               	movlb	2	; select bank2
 23155  102E  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23156  102F  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 23157  1030  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23158  1031  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23159  1032  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23160  1033  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23161  1034  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23162  1035  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23163                           
 23164                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 23165  1036  0021               	movlb	1	; select bank1
 23166  1037  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23167  1038  0020               	movlb	0	; select bank0
 23168  1039  00B1               	movwf	otoa@fp+1
 23169  103A  0021               	movlb	1	; select bank1
 23170  103B  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23171  103C  0020               	movlb	0	; select bank0
 23172  103D  00B0               	movwf	otoa@fp
 23173  103E  0022               	movlb	2	; select bank2
 23174  103F  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23175  1040  0020               	movlb	0	; select bank0
 23176  1041  00B2               	movwf	otoa@d
 23177  1042  0022               	movlb	2	; select bank2
 23178  1043  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23179  1044  0020               	movlb	0	; select bank0
 23180  1045  00B3               	movwf	otoa@d+1
 23181  1046  0022               	movlb	2	; select bank2
 23182  1047  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23183  1048  0020               	movlb	0	; select bank0
 23184  1049  00B4               	movwf	otoa@d+2
 23185  104A  0022               	movlb	2	; select bank2
 23186  104B  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23187  104C  0020               	movlb	0	; select bank0
 23188  104D  00B5               	movwf	otoa@d+3
 23189  104E  0022               	movlb	2	; select bank2
 23190  104F  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23191  1050  0020               	movlb	0	; select bank0
 23192  1051  00B6               	movwf	otoa@d+4
 23193  1052  0022               	movlb	2	; select bank2
 23194  1053  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23195  1054  0020               	movlb	0	; select bank0
 23196  1055  00B7               	movwf	otoa@d+5
 23197  1056  0022               	movlb	2	; select bank2
 23198  1057  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23199  1058  0020               	movlb	0	; select bank0
 23200  1059  00B8               	movwf	otoa@d+6
 23201  105A  0022               	movlb	2	; select bank2
 23202  105B  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23203  105C  0020               	movlb	0	; select bank0
 23204  105D  00B9               	movwf	otoa@d+7
 23205  105E  31A1  21C7         	fcall	_otoa
 23206  1060  0020               	movlb	0	; select bank0
 23207  1061  0831               	movf	?_otoa+1,w
 23208  1062  0021               	movlb	1	; select bank1
 23209  1063  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23210  1064  0020               	movlb	0	; select bank0
 23211  1065  0830               	movf	?_otoa,w
 23212  1066  0021               	movlb	1	; select bank1
 23213  1067  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23214  1068  0008               	return
 23215  1069                     l8095:	
 23216                           
 23217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 23218  1069  0021               	movlb	1	; select bank1
 23219  106A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23220  106B  0086               	movwf	6
 23221  106C  3001               	movlw	1	; select bank2/3
 23222  106D  0087               	movwf	7
 23223  106E  3F40               	moviw [0]fsr1
 23224  106F  00F1               	movwf	strncmp@_l
 23225  1070  3F41               	moviw [1]fsr1
 23226  1071  00F2               	movwf	strncmp@_l+1
 23227  1072  3065               	movlw	low ((STR_76+1)| (0+32768))
 23228  1073  00F3               	movwf	strncmp@_r
 23229  1074  30BB               	movlw	high ((STR_76+1)| (0+32768))
 23230  1075  00F4               	movwf	strncmp@_r+1
 23231  1076  3002               	movlw	2
 23232  1077  00F5               	movwf	strncmp@n
 23233  1078  3000               	movlw	0
 23234  1079  00F6               	movwf	strncmp@n+1
 23235  107A  31B2  22A4  3190   	fcall	_strncmp
 23236  107D  0871               	movf	?_strncmp,w
 23237  107E  0472               	iorwf	?_strncmp+1,w
 23238  107F  1D03               	btfss	3,2
 23239  1080  28D3               	goto	L28
 23240                           
 23241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 23242  1081  0021               	movlb	1	; select bank1
 23243  1082  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23244  1083  0086               	movwf	6
 23245  1084  3001               	movlw	1	; select bank2/3
 23246  1085  0087               	movwf	7
 23247  1086  3002               	movlw	2
 23248  1087  0781               	addwf	1,f
 23249  1088  3141               	addfsr 1,1
 23250  1089  1803               	skipnc
 23251  108A  0A81               	incf	1,f
 23252                           
 23253                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 23254  108B  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23255  108C  0086               	movwf	6
 23256  108D  3001               	movlw	1	; select bank2/3
 23257  108E  0087               	movwf	7
 23258  108F  0801               	movf	1,w
 23259  1090  0084               	movwf	4
 23260  1091  3001               	movlw	1	; select bank2/3
 23261  1092  0085               	movwf	5
 23262  1093  3002               	movlw	2
 23263  1094  0781               	addwf	1,f
 23264  1095  3F00               	moviw [0]fsr0
 23265  1096  0022               	movlb	2	; select bank2
 23266  1097  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23267  1098  3F01               	moviw [1]fsr0
 23268  1099  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23269  109A  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23270  109B  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23271  109C  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23272  109D  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23273  109E  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23274  109F  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23275                           
 23276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 23277  10A0  0021               	movlb	1	; select bank1
 23278  10A1  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23279  10A2  0020               	movlb	0	; select bank0
 23280  10A3  00B1               	movwf	otoa@fp+1
 23281  10A4  0021               	movlb	1	; select bank1
 23282  10A5  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23283  10A6  0020               	movlb	0	; select bank0
 23284  10A7  00B0               	movwf	otoa@fp
 23285  10A8  0022               	movlb	2	; select bank2
 23286  10A9  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23287  10AA  0020               	movlb	0	; select bank0
 23288  10AB  00B2               	movwf	otoa@d
 23289  10AC  0022               	movlb	2	; select bank2
 23290  10AD  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23291  10AE  0020               	movlb	0	; select bank0
 23292  10AF  00B3               	movwf	otoa@d+1
 23293  10B0  0022               	movlb	2	; select bank2
 23294  10B1  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23295  10B2  0020               	movlb	0	; select bank0
 23296  10B3  00B4               	movwf	otoa@d+2
 23297  10B4  0022               	movlb	2	; select bank2
 23298  10B5  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23299  10B6  0020               	movlb	0	; select bank0
 23300  10B7  00B5               	movwf	otoa@d+3
 23301  10B8  0022               	movlb	2	; select bank2
 23302  10B9  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23303  10BA  0020               	movlb	0	; select bank0
 23304  10BB  00B6               	movwf	otoa@d+4
 23305  10BC  0022               	movlb	2	; select bank2
 23306  10BD  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23307  10BE  0020               	movlb	0	; select bank0
 23308  10BF  00B7               	movwf	otoa@d+5
 23309  10C0  0022               	movlb	2	; select bank2
 23310  10C1  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23311  10C2  0020               	movlb	0	; select bank0
 23312  10C3  00B8               	movwf	otoa@d+6
 23313  10C4  0022               	movlb	2	; select bank2
 23314  10C5  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23315  10C6  0020               	movlb	0	; select bank0
 23316  10C7  00B9               	movwf	otoa@d+7
 23317  10C8  31A1  21C7         	fcall	_otoa
 23318  10CA  0020               	movlb	0	; select bank0
 23319  10CB  0831               	movf	?_otoa+1,w
 23320  10CC  0021               	movlb	1	; select bank1
 23321  10CD  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23322  10CE  0020               	movlb	0	; select bank0
 23323  10CF  0830               	movf	?_otoa,w
 23324  10D0  0021               	movlb	1	; select bank1
 23325  10D1  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23326  10D2  0008               	return
 23327  10D3                     L28:	
 23328  10D3                     L27:	
 23329  10D3  31A0  28DD         	ljmp	l8105
 23330                           
 23331                           	psect	text9_split_7
 23332  20DD                     l8105:	
 23333                           
 23334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 23335  20DD  0021               	movlb	1	; select bank1
 23336  20DE  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23337  20DF  0086               	movwf	6
 23338  20E0  3001               	movlw	1	; select bank2/3
 23339  20E1  0087               	movwf	7
 23340  20E2  3F40               	moviw [0]fsr1
 23341  20E3  0022               	movlb	2	; select bank2
 23342  20E4  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23343  20E5  3F41               	moviw [1]fsr1
 23344  20E6  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23345  20E7  0820               	movf	??_vfpfcnvrt^(0+256),w
 23346  20E8  0084               	movwf	4
 23347  20E9  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23348  20EA  0085               	movwf	5
 23349  20EB  0012               	moviw fsr0++
 23350  20EC  3A6F               	xorlw	111
 23351  20ED  1D03               	btfss	3,2
 23352  20EE  2941               	goto	l8115
 23353                           
 23354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 23355  20EF  0021               	movlb	1	; select bank1
 23356  20F0  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23357  20F1  0086               	movwf	6
 23358  20F2  3001               	movlw	1	; select bank2/3
 23359  20F3  0087               	movwf	7
 23360  20F4  3001               	movlw	1
 23361  20F5  0781               	addwf	1,f
 23362  20F6  3141               	addfsr 1,1
 23363  20F7  1803               	skipnc
 23364  20F8  0A81               	incf	1,f
 23365                           
 23366                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 23367  20F9  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23368  20FA  0086               	movwf	6
 23369  20FB  3001               	movlw	1	; select bank2/3
 23370  20FC  0087               	movwf	7
 23371  20FD  0801               	movf	1,w
 23372  20FE  0084               	movwf	4
 23373  20FF  3001               	movlw	1	; select bank2/3
 23374  2100  0085               	movwf	5
 23375  2101  3002               	movlw	2
 23376  2102  0781               	addwf	1,f
 23377  2103  3F00               	moviw [0]fsr0
 23378  2104  0022               	movlb	2	; select bank2
 23379  2105  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23380  2106  3F01               	moviw [1]fsr0
 23381  2107  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23382  2108  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23383  2109  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23384  210A  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23385  210B  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23386  210C  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23387  210D  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23388                           
 23389                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 23390  210E  0021               	movlb	1	; select bank1
 23391  210F  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23392  2110  0020               	movlb	0	; select bank0
 23393  2111  00B1               	movwf	otoa@fp+1
 23394  2112  0021               	movlb	1	; select bank1
 23395  2113  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23396  2114  0020               	movlb	0	; select bank0
 23397  2115  00B0               	movwf	otoa@fp
 23398  2116  0022               	movlb	2	; select bank2
 23399  2117  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23400  2118  0020               	movlb	0	; select bank0
 23401  2119  00B2               	movwf	otoa@d
 23402  211A  0022               	movlb	2	; select bank2
 23403  211B  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23404  211C  0020               	movlb	0	; select bank0
 23405  211D  00B3               	movwf	otoa@d+1
 23406  211E  0022               	movlb	2	; select bank2
 23407  211F  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23408  2120  0020               	movlb	0	; select bank0
 23409  2121  00B4               	movwf	otoa@d+2
 23410  2122  0022               	movlb	2	; select bank2
 23411  2123  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23412  2124  0020               	movlb	0	; select bank0
 23413  2125  00B5               	movwf	otoa@d+3
 23414  2126  0022               	movlb	2	; select bank2
 23415  2127  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23416  2128  0020               	movlb	0	; select bank0
 23417  2129  00B6               	movwf	otoa@d+4
 23418  212A  0022               	movlb	2	; select bank2
 23419  212B  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23420  212C  0020               	movlb	0	; select bank0
 23421  212D  00B7               	movwf	otoa@d+5
 23422  212E  0022               	movlb	2	; select bank2
 23423  212F  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23424  2130  0020               	movlb	0	; select bank0
 23425  2131  00B8               	movwf	otoa@d+6
 23426  2132  0022               	movlb	2	; select bank2
 23427  2133  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23428  2134  0020               	movlb	0	; select bank0
 23429  2135  00B9               	movwf	otoa@d+7
 23430  2136  31A1  21C7         	fcall	_otoa
 23431  2138  0020               	movlb	0	; select bank0
 23432  2139  0831               	movf	?_otoa+1,w
 23433  213A  0021               	movlb	1	; select bank1
 23434  213B  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23435  213C  0020               	movlb	0	; select bank0
 23436  213D  0830               	movf	?_otoa,w
 23437  213E  0021               	movlb	1	; select bank1
 23438  213F  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23439  2140  0008               	return
 23440  2141                     l8115:	
 23441                           
 23442                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1000:      
      +                             if (!strncmp(*fmt, "lo", ((sizeof("lo")/sizeof("lo"[0]))-1))) {
 23443  2141  0021               	movlb	1	; select bank1
 23444  2142  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23445  2143  0086               	movwf	6
 23446  2144  3001               	movlw	1	; select bank2/3
 23447  2145  0087               	movwf	7
 23448  2146  3F40               	moviw [0]fsr1
 23449  2147  00F1               	movwf	strncmp@_l
 23450  2148  3F41               	moviw [1]fsr1
 23451  2149  00F2               	movwf	strncmp@_l+1
 23452  214A  308B               	movlw	low (STR_86| (0+32768))
 23453  214B  00F3               	movwf	strncmp@_r
 23454  214C  30BB               	movlw	high (STR_86| (0+32768))
 23455  214D  00F4               	movwf	strncmp@_r+1
 23456  214E  3002               	movlw	2
 23457  214F  00F5               	movwf	strncmp@n
 23458  2150  3000               	movlw	0
 23459  2151  00F6               	movwf	strncmp@n+1
 23460  2152  31B2  22A4  31A0   	fcall	_strncmp
 23461  2155  0871               	movf	?_strncmp,w
 23462  2156  0472               	iorwf	?_strncmp+1,w
 23463  2157  1D03               	btfss	3,2
 23464  2158  29C5               	goto	L30
 23465                           
 23466                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1002:      
      +                                 *fmt += ((sizeof("lo")/sizeof("lo"[0]))-1);
 23467  2159  0021               	movlb	1	; select bank1
 23468  215A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23469  215B  0086               	movwf	6
 23470  215C  3001               	movlw	1	; select bank2/3
 23471  215D  0087               	movwf	7
 23472  215E  3002               	movlw	2
 23473  215F  0781               	addwf	1,f
 23474  2160  3141               	addfsr 1,1
 23475  2161  1803               	skipnc
 23476  2162  0A81               	incf	1,f
 23477                           
 23478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1003:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 23479  2163  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23480  2164  0086               	movwf	6
 23481  2165  3001               	movlw	1	; select bank2/3
 23482  2166  0087               	movwf	7
 23483  2167  0801               	movf	1,w
 23484  2168  0084               	movwf	4
 23485  2169  3001               	movlw	1	; select bank2/3
 23486  216A  0085               	movwf	5
 23487  216B  3004               	movlw	4
 23488  216C  0781               	addwf	1,f
 23489  216D  3F00               	moviw [0]fsr0
 23490  216E  0022               	movlb	2	; select bank2
 23491  216F  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23492  2170  3F01               	moviw [1]fsr0
 23493  2171  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23494  2172  3F02               	moviw [2]fsr0
 23495  2173  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 23496  2174  3F03               	moviw [3]fsr0
 23497  2175  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 23498  2176  0820               	movf	??_vfpfcnvrt^(0+256),w
 23499  2177  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 23500  2178  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23501  2179  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 23502  217A  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23503  217B  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 23504  217C  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23505  217D  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 23506  217E  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 23507  217F  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 23508  2180  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 23509  2181  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 23510  2182  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 23511  2183  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 23512  2184  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 23513  2185  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 23514  2186  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 23515  2187  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 23516  2188  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 23517  2189  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 23518  218A  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 23519  218B  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 23520  218C  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 23521  218D  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 23522  218E  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 23523  218F  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23524  2190  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 23525  2191  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23526                           
 23527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1005:      
      +                                 return otoa(fp, llu);
 23528  2192  0021               	movlb	1	; select bank1
 23529  2193  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23530  2194  0020               	movlb	0	; select bank0
 23531  2195  00B1               	movwf	otoa@fp+1
 23532  2196  0021               	movlb	1	; select bank1
 23533  2197  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23534  2198  0020               	movlb	0	; select bank0
 23535  2199  00B0               	movwf	otoa@fp
 23536  219A  0022               	movlb	2	; select bank2
 23537  219B  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23538  219C  0020               	movlb	0	; select bank0
 23539  219D  00B2               	movwf	otoa@d
 23540  219E  0022               	movlb	2	; select bank2
 23541  219F  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23542  21A0  0020               	movlb	0	; select bank0
 23543  21A1  00B3               	movwf	otoa@d+1
 23544  21A2  0022               	movlb	2	; select bank2
 23545  21A3  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23546  21A4  0020               	movlb	0	; select bank0
 23547  21A5  00B4               	movwf	otoa@d+2
 23548  21A6  0022               	movlb	2	; select bank2
 23549  21A7  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23550  21A8  0020               	movlb	0	; select bank0
 23551  21A9  00B5               	movwf	otoa@d+3
 23552  21AA  0022               	movlb	2	; select bank2
 23553  21AB  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23554  21AC  0020               	movlb	0	; select bank0
 23555  21AD  00B6               	movwf	otoa@d+4
 23556  21AE  0022               	movlb	2	; select bank2
 23557  21AF  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23558  21B0  0020               	movlb	0	; select bank0
 23559  21B1  00B7               	movwf	otoa@d+5
 23560  21B2  0022               	movlb	2	; select bank2
 23561  21B3  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23562  21B4  0020               	movlb	0	; select bank0
 23563  21B5  00B8               	movwf	otoa@d+6
 23564  21B6  0022               	movlb	2	; select bank2
 23565  21B7  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23566  21B8  0020               	movlb	0	; select bank0
 23567  21B9  00B9               	movwf	otoa@d+7
 23568  21BA  31A1  21C7         	fcall	_otoa
 23569  21BC  0020               	movlb	0	; select bank0
 23570  21BD  0831               	movf	?_otoa+1,w
 23571  21BE  0021               	movlb	1	; select bank1
 23572  21BF  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23573  21C0  0020               	movlb	0	; select bank0
 23574  21C1  0830               	movf	?_otoa,w
 23575  21C2  0021               	movlb	1	; select bank1
 23576  21C3  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23577  21C4  0008               	return
 23578  21C5                     L30:	
 23579  21C5                     L29:	
 23580  21C5  3188  280C         	ljmp	l8125
 23581                           
 23582                           	psect	text9_split_8
 23583  080C                     l8125:	
 23584                           
 23585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 23586  080C  0021               	movlb	1	; select bank1
 23587  080D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23588  080E  0086               	movwf	6
 23589  080F  3001               	movlw	1	; select bank2/3
 23590  0810  0087               	movwf	7
 23591  0811  3F40               	moviw [0]fsr1
 23592  0812  00F1               	movwf	strncmp@_l
 23593  0813  3F41               	moviw [1]fsr1
 23594  0814  00F2               	movwf	strncmp@_l+1
 23595  0815  308E               	movlw	low (STR_91| (0+32768))
 23596  0816  00F3               	movwf	strncmp@_r
 23597  0817  30BB               	movlw	high (STR_91| (0+32768))
 23598  0818  00F4               	movwf	strncmp@_r+1
 23599  0819  3002               	movlw	2
 23600  081A  00F5               	movwf	strncmp@n
 23601  081B  3000               	movlw	0
 23602  081C  00F6               	movwf	strncmp@n+1
 23603  081D  31B2  22A4  3188   	fcall	_strncmp
 23604  0820  0871               	movf	?_strncmp,w
 23605  0821  0472               	iorwf	?_strncmp+1,w
 23606  0822  1D03               	btfss	3,2
 23607  0823  2876               	goto	l8135
 23608                           
 23609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 23610  0824  0021               	movlb	1	; select bank1
 23611  0825  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23612  0826  0086               	movwf	6
 23613  0827  3001               	movlw	1	; select bank2/3
 23614  0828  0087               	movwf	7
 23615  0829  3002               	movlw	2
 23616  082A  0781               	addwf	1,f
 23617  082B  3141               	addfsr 1,1
 23618  082C  1803               	skipnc
 23619  082D  0A81               	incf	1,f
 23620                           
 23621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23622  082E  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23623  082F  0086               	movwf	6
 23624  0830  3001               	movlw	1	; select bank2/3
 23625  0831  0087               	movwf	7
 23626  0832  0801               	movf	1,w
 23627  0833  0084               	movwf	4
 23628  0834  3001               	movlw	1	; select bank2/3
 23629  0835  0085               	movwf	5
 23630  0836  3002               	movlw	2
 23631  0837  0781               	addwf	1,f
 23632  0838  3F00               	moviw [0]fsr0
 23633  0839  0022               	movlb	2	; select bank2
 23634  083A  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 23635  083B  3F01               	moviw [1]fsr0
 23636  083C  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 23637  083D  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 23638  083E  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 23639  083F  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 23640  0840  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 23641  0841  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 23642  0842  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 23643                           
 23644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 23645  0843  0021               	movlb	1	; select bank1
 23646  0844  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 23647  0845  0020               	movlb	0	; select bank0
 23648  0846  00B1               	movwf	otoa@fp+1
 23649  0847  0021               	movlb	1	; select bank1
 23650  0848  086C               	movf	vfpfcnvrt@fp^(0+128),w
 23651  0849  0020               	movlb	0	; select bank0
 23652  084A  00B0               	movwf	otoa@fp
 23653  084B  0022               	movlb	2	; select bank2
 23654  084C  0846               	movf	vfpfcnvrt@llu^(0+256),w
 23655  084D  0020               	movlb	0	; select bank0
 23656  084E  00B2               	movwf	otoa@d
 23657  084F  0022               	movlb	2	; select bank2
 23658  0850  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 23659  0851  0020               	movlb	0	; select bank0
 23660  0852  00B3               	movwf	otoa@d+1
 23661  0853  0022               	movlb	2	; select bank2
 23662  0854  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 23663  0855  0020               	movlb	0	; select bank0
 23664  0856  00B4               	movwf	otoa@d+2
 23665  0857  0022               	movlb	2	; select bank2
 23666  0858  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 23667  0859  0020               	movlb	0	; select bank0
 23668  085A  00B5               	movwf	otoa@d+3
 23669  085B  0022               	movlb	2	; select bank2
 23670  085C  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 23671  085D  0020               	movlb	0	; select bank0
 23672  085E  00B6               	movwf	otoa@d+4
 23673  085F  0022               	movlb	2	; select bank2
 23674  0860  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 23675  0861  0020               	movlb	0	; select bank0
 23676  0862  00B7               	movwf	otoa@d+5
 23677  0863  0022               	movlb	2	; select bank2
 23678  0864  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 23679  0865  0020               	movlb	0	; select bank0
 23680  0866  00B8               	movwf	otoa@d+6
 23681  0867  0022               	movlb	2	; select bank2
 23682  0868  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 23683  0869  0020               	movlb	0	; select bank0
 23684  086A  00B9               	movwf	otoa@d+7
 23685  086B  31A1  21C7         	fcall	_otoa
 23686  086D  0020               	movlb	0	; select bank0
 23687  086E  0831               	movf	?_otoa+1,w
 23688  086F  0021               	movlb	1	; select bank1
 23689  0870  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 23690  0871  0020               	movlb	0	; select bank0
 23691  0872  0830               	movf	?_otoa,w
 23692  0873  0021               	movlb	1	; select bank1
 23693  0874  00EC               	movwf	?_vfpfcnvrt^(0+128)
 23694  0875  0008               	return
 23695  0876                     l8135:	
 23696                           
 23697                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 23698  0876  0021               	movlb	1	; select bank1
 23699  0877  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23700  0878  0086               	movwf	6
 23701  0879  3001               	movlw	1	; select bank2/3
 23702  087A  0087               	movwf	7
 23703  087B  3F40               	moviw [0]fsr1
 23704  087C  00F1               	movwf	strncmp@_l
 23705  087D  3F41               	moviw [1]fsr1
 23706  087E  00F2               	movwf	strncmp@_l+1
 23707  087F  3060               	movlw	low (STR_96| (0+32768))
 23708  0880  00F3               	movwf	strncmp@_r
 23709  0881  30BB               	movlw	high (STR_96| (0+32768))
 23710  0882  00F4               	movwf	strncmp@_r+1
 23711  0883  3003               	movlw	3
 23712  0884  00F5               	movwf	strncmp@n
 23713  0885  3000               	movlw	0
 23714  0886  00F6               	movwf	strncmp@n+1
 23715  0887  31B2  22A4  3188   	fcall	_strncmp
 23716  088A  0871               	movf	?_strncmp,w
 23717  088B  0472               	iorwf	?_strncmp+1,w
 23718  088C  1D03               	btfss	3,2
 23719  088D  294C               	goto	l8147
 23720                           
 23721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 23722  088E  0021               	movlb	1	; select bank1
 23723  088F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23724  0890  0086               	movwf	6
 23725  0891  3001               	movlw	1	; select bank2/3
 23726  0892  0087               	movwf	7
 23727  0893  3003               	movlw	3
 23728  0894  0781               	addwf	1,f
 23729  0895  3141               	addfsr 1,1
 23730  0896  1803               	skipnc
 23731  0897  0A81               	incf	1,f
 23732                           
 23733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 23734  0898  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23735  0899  0086               	movwf	6
 23736  089A  3001               	movlw	1	; select bank2/3
 23737  089B  0087               	movwf	7
 23738  089C  3F40               	moviw [0]fsr1
 23739  089D  0084               	movwf	4
 23740  089E  3001               	movlw	1	; select bank2/3
 23741  089F  0085               	movwf	5
 23742  08A0  0A81               	incf	1,f
 23743  08A1  0800               	movf	0,w
 23744  08A2  0022               	movlb	2	; select bank2
 23745  08A3  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23746  08A4  0820               	movf	??_vfpfcnvrt^(0+256),w
 23747  08A5  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23748                           
 23749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 23750  08A6  0023               	movlb	3	; select bank3
 23751  08A7  0832               	movf	_nout^(0+384),w
 23752  08A8  0022               	movlb	2	; select bank2
 23753  08A9  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23754  08AA  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23755  08AB  0086               	movwf	6
 23756  08AC  3001               	movlw	1	; select bank2/3
 23757  08AD  0087               	movwf	7
 23758  08AE  0820               	movf	??_vfpfcnvrt^(0+256),w
 23759  08AF  0081               	movwf	1
 23760  08B0  2948               	goto	l8143
 23761  08B1                     l8149:	
 23762                           
 23763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 23764  08B1  0021               	movlb	1	; select bank1
 23765  08B2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23766  08B3  0086               	movwf	6
 23767  08B4  3001               	movlw	1	; select bank2/3
 23768  08B5  0087               	movwf	7
 23769  08B6  3002               	movlw	2
 23770  08B7  0781               	addwf	1,f
 23771  08B8  3141               	addfsr 1,1
 23772  08B9  1803               	skipnc
 23773  08BA  0A81               	incf	1,f
 23774                           
 23775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 23776  08BB  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23777  08BC  0086               	movwf	6
 23778  08BD  3001               	movlw	1	; select bank2/3
 23779  08BE  0087               	movwf	7
 23780  08BF  3F40               	moviw [0]fsr1
 23781  08C0  0084               	movwf	4
 23782  08C1  3001               	movlw	1	; select bank2/3
 23783  08C2  0085               	movwf	5
 23784  08C3  0A81               	incf	1,f
 23785  08C4  0800               	movf	0,w
 23786  08C5  0022               	movlb	2	; select bank2
 23787  08C6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23788  08C7  0820               	movf	??_vfpfcnvrt^(0+256),w
 23789  08C8  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23790                           
 23791                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 23792  08C9  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23793  08CA  0086               	movwf	6
 23794  08CB  3001               	movlw	1	; select bank2/3
 23795  08CC  0087               	movwf	7
 23796  08CD  0023               	movlb	3	; select bank3
 23797  08CE  0832               	movf	_nout^(0+384),w
 23798  08CF  3FC0               	movwi [0]fsr1
 23799  08D0  0833               	movf	(_nout+1)^(0+384),w
 23800  08D1  3FC1               	movwi [1]fsr1
 23801  08D2  2948               	goto	l8143
 23802  08D3                     l8161:	
 23803                           
 23804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 23805  08D3  0021               	movlb	1	; select bank1
 23806  08D4  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23807  08D5  0086               	movwf	6
 23808  08D6  3001               	movlw	1	; select bank2/3
 23809  08D7  0087               	movwf	7
 23810  08D8  3001               	movlw	1
 23811  08D9  0781               	addwf	1,f
 23812  08DA  3141               	addfsr 1,1
 23813  08DB  1803               	skipnc
 23814  08DC  0A81               	incf	1,f
 23815                           
 23816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 23817  08DD  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23818  08DE  0086               	movwf	6
 23819  08DF  3001               	movlw	1	; select bank2/3
 23820  08E0  0087               	movwf	7
 23821  08E1  3F40               	moviw [0]fsr1
 23822  08E2  0084               	movwf	4
 23823  08E3  3001               	movlw	1	; select bank2/3
 23824  08E4  0085               	movwf	5
 23825  08E5  0A81               	incf	1,f
 23826  08E6  0800               	movf	0,w
 23827  08E7  0022               	movlb	2	; select bank2
 23828  08E8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23829  08E9  0820               	movf	??_vfpfcnvrt^(0+256),w
 23830  08EA  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23831                           
 23832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 23833  08EB  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23834  08EC  0086               	movwf	6
 23835  08ED  3001               	movlw	1	; select bank2/3
 23836  08EE  0087               	movwf	7
 23837  08EF  0023               	movlb	3	; select bank3
 23838  08F0  0832               	movf	_nout^(0+384),w
 23839  08F1  3FC0               	movwi [0]fsr1
 23840  08F2  0833               	movf	(_nout+1)^(0+384),w
 23841  08F3  3FC1               	movwi [1]fsr1
 23842  08F4  2948               	goto	l8143
 23843  08F5                     l8173:	
 23844                           
 23845                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1087:      
      +                                 *fmt += ((sizeof("ln")/sizeof("ln"[0]))-1);
 23846  08F5  0021               	movlb	1	; select bank1
 23847  08F6  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23848  08F7  0086               	movwf	6
 23849  08F8  3001               	movlw	1	; select bank2/3
 23850  08F9  0087               	movwf	7
 23851  08FA  3002               	movlw	2
 23852  08FB  0781               	addwf	1,f
 23853  08FC  3141               	addfsr 1,1
 23854  08FD  1803               	skipnc
 23855  08FE  0A81               	incf	1,f
 23856                           
 23857                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1088:      
      +                                 vp = (void *)(*(long * *)__va_arg(*(long * **)ap, (long *)0));
 23858  08FF  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23859  0900  0086               	movwf	6
 23860  0901  3001               	movlw	1	; select bank2/3
 23861  0902  0087               	movwf	7
 23862  0903  3F40               	moviw [0]fsr1
 23863  0904  0084               	movwf	4
 23864  0905  3001               	movlw	1	; select bank2/3
 23865  0906  0085               	movwf	5
 23866  0907  0A81               	incf	1,f
 23867  0908  0800               	movf	0,w
 23868  0909  0022               	movlb	2	; select bank2
 23869  090A  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23870  090B  0820               	movf	??_vfpfcnvrt^(0+256),w
 23871  090C  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23872                           
 23873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1089:      
      +                                 *(long *)vp = (long)nout;
 23874  090D  0023               	movlb	3	; select bank3
 23875  090E  0832               	movf	_nout^(0+384),w
 23876  090F  0022               	movlb	2	; select bank2
 23877  0910  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23878  0911  0023               	movlb	3	; select bank3
 23879  0912  0833               	movf	(_nout+1)^(0+384),w
 23880  0913  0022               	movlb	2	; select bank2
 23881  0914  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23882  0915  3000               	movlw	0
 23883  0916  1BA1               	btfsc	(??_vfpfcnvrt^(0+256)+1),7
 23884  0917  30FF               	movlw	255
 23885  0918  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 23886  0919  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 23887  091A  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23888  091B  0086               	movwf	6
 23889  091C  3001               	movlw	1	; select bank2/3
 23890  091D  0087               	movwf	7
 23891  091E  0820               	movf	??_vfpfcnvrt^(0+256),w
 23892  091F  3FC0               	movwi [0]fsr1
 23893  0920  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23894  0921  3FC1               	movwi [1]fsr1
 23895  0922  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 23896  0923  3FC2               	movwi [2]fsr1
 23897  0924  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 23898  0925  3FC3               	movwi [3]fsr1
 23899  0926  2948               	goto	l8143
 23900  0927                     l8185:	
 23901                           
 23902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 23903  0927  0021               	movlb	1	; select bank1
 23904  0928  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23905  0929  0086               	movwf	6
 23906  092A  3001               	movlw	1	; select bank2/3
 23907  092B  0087               	movwf	7
 23908  092C  3002               	movlw	2
 23909  092D  0781               	addwf	1,f
 23910  092E  3141               	addfsr 1,1
 23911  092F  1803               	skipnc
 23912  0930  0A81               	incf	1,f
 23913                           
 23914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 23915  0931  086F               	movf	vfpfcnvrt@ap^(0+128),w
 23916  0932  0086               	movwf	6
 23917  0933  3001               	movlw	1	; select bank2/3
 23918  0934  0087               	movwf	7
 23919  0935  3F40               	moviw [0]fsr1
 23920  0936  0084               	movwf	4
 23921  0937  3001               	movlw	1	; select bank2/3
 23922  0938  0085               	movwf	5
 23923  0939  0A81               	incf	1,f
 23924  093A  0800               	movf	0,w
 23925  093B  0022               	movlb	2	; select bank2
 23926  093C  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23927  093D  0820               	movf	??_vfpfcnvrt^(0+256),w
 23928  093E  00C4               	movwf	vfpfcnvrt@vp^(0+256)
 23929                           
 23930                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 23931  093F  0844               	movf	vfpfcnvrt@vp^(0+256),w
 23932  0940  0086               	movwf	6
 23933  0941  3001               	movlw	1	; select bank2/3
 23934  0942  0087               	movwf	7
 23935  0943  0023               	movlb	3	; select bank3
 23936  0944  0832               	movf	_nout^(0+384),w
 23937  0945  3FC0               	movwi [0]fsr1
 23938  0946  0833               	movf	(_nout+1)^(0+384),w
 23939  0947  3FC1               	movwi [1]fsr1
 23940  0948                     l8143:	
 23941                           
 23942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 23943  0948  0021               	movlb	1	; select bank1
 23944  0949  01EC               	clrf	?_vfpfcnvrt^(0+128)
 23945  094A  01ED               	clrf	(?_vfpfcnvrt+1)^(0+128)
 23946  094B  0008               	return
 23947  094C                     l8147:	
 23948                           
 23949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 23950  094C  0021               	movlb	1	; select bank1
 23951  094D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23952  094E  0086               	movwf	6
 23953  094F  3001               	movlw	1	; select bank2/3
 23954  0950  0087               	movwf	7
 23955  0951  3F40               	moviw [0]fsr1
 23956  0952  00F1               	movwf	strncmp@_l
 23957  0953  3F41               	moviw [1]fsr1
 23958  0954  00F2               	movwf	strncmp@_l+1
 23959  0955  3061               	movlw	low ((STR_96+1)| (0+32768))
 23960  0956  00F3               	movwf	strncmp@_r
 23961  0957  30BB               	movlw	high ((STR_96+1)| (0+32768))
 23962  0958  00F4               	movwf	strncmp@_r+1
 23963  0959  3002               	movlw	2
 23964  095A  00F5               	movwf	strncmp@n
 23965  095B  3000               	movlw	0
 23966  095C  00F6               	movwf	strncmp@n+1
 23967  095D  31B2  22A4  3188   	fcall	_strncmp
 23968  0960  0871               	movf	?_strncmp,w
 23969  0961  0472               	iorwf	?_strncmp+1,w
 23970  0962  1903               	btfsc	3,2
 23971  0963  28B1               	goto	l8149
 23972                           
 23973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 23974  0964  0021               	movlb	1	; select bank1
 23975  0965  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23976  0966  0086               	movwf	6
 23977  0967  3001               	movlw	1	; select bank2/3
 23978  0968  0087               	movwf	7
 23979  0969  3F40               	moviw [0]fsr1
 23980  096A  0022               	movlb	2	; select bank2
 23981  096B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 23982  096C  3F41               	moviw [1]fsr1
 23983  096D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 23984  096E  0820               	movf	??_vfpfcnvrt^(0+256),w
 23985  096F  0084               	movwf	4
 23986  0970  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 23987  0971  0085               	movwf	5
 23988  0972  0012               	moviw fsr0++
 23989  0973  3A6E               	xorlw	110
 23990  0974  1903               	btfsc	3,2
 23991  0975  28D3               	goto	l8161
 23992                           
 23993                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1085:      
      +                             if (!strncmp(*fmt, "ln", ((sizeof("ln")/sizeof("ln"[0]))-1))) {
 23994  0976  0021               	movlb	1	; select bank1
 23995  0977  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 23996  0978  0086               	movwf	6
 23997  0979  3001               	movlw	1	; select bank2/3
 23998  097A  0087               	movwf	7
 23999  097B  3F40               	moviw [0]fsr1
 24000  097C  00F1               	movwf	strncmp@_l
 24001  097D  3F41               	moviw [1]fsr1
 24002  097E  00F2               	movwf	strncmp@_l+1
 24003  097F  3085               	movlw	low (STR_106| (0+32768))
 24004  0980  00F3               	movwf	strncmp@_r
 24005  0981  30BB               	movlw	high (STR_106| (0+32768))
 24006  0982  00F4               	movwf	strncmp@_r+1
 24007  0983  3002               	movlw	2
 24008  0984  00F5               	movwf	strncmp@n
 24009  0985  3000               	movlw	0
 24010  0986  00F6               	movwf	strncmp@n+1
 24011  0987  31B2  22A4  3188   	fcall	_strncmp
 24012  098A  0871               	movf	?_strncmp,w
 24013  098B  0472               	iorwf	?_strncmp+1,w
 24014  098C  1903               	btfsc	3,2
 24015  098D  28F5               	goto	l8173
 24016                           
 24017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 24018  098E  0021               	movlb	1	; select bank1
 24019  098F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24020  0990  0086               	movwf	6
 24021  0991  3001               	movlw	1	; select bank2/3
 24022  0992  0087               	movwf	7
 24023  0993  3F40               	moviw [0]fsr1
 24024  0994  00F1               	movwf	strncmp@_l
 24025  0995  3F41               	moviw [1]fsr1
 24026  0996  00F2               	movwf	strncmp@_l+1
 24027  0997  3088               	movlw	low (STR_111| (0+32768))
 24028  0998  00F3               	movwf	strncmp@_r
 24029  0999  30BB               	movlw	high (STR_111| (0+32768))
 24030  099A  00F4               	movwf	strncmp@_r+1
 24031  099B  3002               	movlw	2
 24032  099C  00F5               	movwf	strncmp@n
 24033  099D  3000               	movlw	0
 24034  099E  00F6               	movwf	strncmp@n+1
 24035  099F  31B2  22A4  3188   	fcall	_strncmp
 24036  09A2  0871               	movf	?_strncmp,w
 24037  09A3  0472               	iorwf	?_strncmp+1,w
 24038  09A4  1903               	btfsc	3,2
 24039  09A5  2927               	goto	l8185
 24040                           
 24041                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 24042  09A6  0021               	movlb	1	; select bank1
 24043  09A7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24044  09A8  0086               	movwf	6
 24045  09A9  3001               	movlw	1	; select bank2/3
 24046  09AA  0087               	movwf	7
 24047  09AB  3F40               	moviw [0]fsr1
 24048  09AC  0022               	movlb	2	; select bank2
 24049  09AD  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24050  09AE  3F41               	moviw [1]fsr1
 24051  09AF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24052  09B0  0820               	movf	??_vfpfcnvrt^(0+256),w
 24053  09B1  0084               	movwf	4
 24054  09B2  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24055  09B3  0085               	movwf	5
 24056  09B4  0012               	moviw fsr0++
 24057  09B5  3A70               	xorlw	112
 24058  09B6  1D03               	btfss	3,2
 24059  09B7  2A1E               	goto	l8205
 24060                           
 24061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 24062  09B8  0021               	movlb	1	; select bank1
 24063  09B9  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24064  09BA  0086               	movwf	6
 24065  09BB  3001               	movlw	1	; select bank2/3
 24066  09BC  0087               	movwf	7
 24067  09BD  3001               	movlw	1
 24068  09BE  0781               	addwf	1,f
 24069  09BF  3141               	addfsr 1,1
 24070  09C0  1803               	skipnc
 24071  09C1  0A81               	incf	1,f
 24072                           
 24073                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 24074  09C2  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24075  09C3  0086               	movwf	6
 24076  09C4  3001               	movlw	1	; select bank2/3
 24077  09C5  0087               	movwf	7
 24078  09C6  3F40               	moviw [0]fsr1
 24079  09C7  0084               	movwf	4
 24080  09C8  3001               	movlw	1	; select bank2/3
 24081  09C9  0085               	movwf	5
 24082  09CA  0A81               	incf	1,f
 24083  09CB  0800               	movf	0,w
 24084  09CC  0022               	movlb	2	; select bank2
 24085  09CD  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24086  09CE  01A1               	clrf	(??_vfpfcnvrt^(0+256)+1)
 24087  09CF  01A2               	clrf	(??_vfpfcnvrt^(0+256)+2)
 24088  09D0  01A3               	clrf	(??_vfpfcnvrt^(0+256)+3)
 24089  09D1  01A4               	clrf	(??_vfpfcnvrt^(0+256)+4)
 24090  09D2  01A5               	clrf	(??_vfpfcnvrt^(0+256)+5)
 24091  09D3  01A6               	clrf	(??_vfpfcnvrt^(0+256)+6)
 24092  09D4  01A7               	clrf	(??_vfpfcnvrt^(0+256)+7)
 24093  09D5  0827               	movf	(??_vfpfcnvrt^(0+256)+7),w
 24094  09D6  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 24095  09D7  0826               	movf	(??_vfpfcnvrt^(0+256)+6),w
 24096  09D8  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 24097  09D9  0825               	movf	(??_vfpfcnvrt^(0+256)+5),w
 24098  09DA  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 24099  09DB  0824               	movf	(??_vfpfcnvrt^(0+256)+4),w
 24100  09DC  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 24101  09DD  0823               	movf	(??_vfpfcnvrt^(0+256)+3),w
 24102  09DE  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 24103  09DF  0822               	movf	(??_vfpfcnvrt^(0+256)+2),w
 24104  09E0  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 24105  09E1  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 24106  09E2  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24107  09E3  0820               	movf	??_vfpfcnvrt^(0+256),w
 24108  09E4  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24109                           
 24110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 24111  09E5  0021               	movlb	1	; select bank1
 24112  09E6  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24113  09E7  0020               	movlb	0	; select bank0
 24114  09E8  00B1               	movwf	xtoa@fp+1
 24115  09E9  0021               	movlb	1	; select bank1
 24116  09EA  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24117  09EB  0020               	movlb	0	; select bank0
 24118  09EC  00B0               	movwf	xtoa@fp
 24119  09ED  0022               	movlb	2	; select bank2
 24120  09EE  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24121  09EF  0020               	movlb	0	; select bank0
 24122  09F0  00B2               	movwf	xtoa@d
 24123  09F1  0022               	movlb	2	; select bank2
 24124  09F2  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24125  09F3  0020               	movlb	0	; select bank0
 24126  09F4  00B3               	movwf	xtoa@d+1
 24127  09F5  0022               	movlb	2	; select bank2
 24128  09F6  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24129  09F7  0020               	movlb	0	; select bank0
 24130  09F8  00B4               	movwf	xtoa@d+2
 24131  09F9  0022               	movlb	2	; select bank2
 24132  09FA  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24133  09FB  0020               	movlb	0	; select bank0
 24134  09FC  00B5               	movwf	xtoa@d+3
 24135  09FD  0022               	movlb	2	; select bank2
 24136  09FE  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24137  09FF  0020               	movlb	0	; select bank0
 24138  0A00  00B6               	movwf	xtoa@d+4
 24139  0A01  0022               	movlb	2	; select bank2
 24140  0A02  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24141  0A03  0020               	movlb	0	; select bank0
 24142  0A04  00B7               	movwf	xtoa@d+5
 24143  0A05  0022               	movlb	2	; select bank2
 24144  0A06  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24145  0A07  0020               	movlb	0	; select bank0
 24146  0A08  00B8               	movwf	xtoa@d+6
 24147  0A09  0022               	movlb	2	; select bank2
 24148  0A0A  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24149  0A0B  0020               	movlb	0	; select bank0
 24150  0A0C  00B9               	movwf	xtoa@d+7
 24151  0A0D  3078               	movlw	120
 24152  0A0E  0022               	movlb	2	; select bank2
 24153  0A0F  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24154  0A10  0820               	movf	??_vfpfcnvrt^(0+256),w
 24155  0A11  0020               	movlb	0	; select bank0
 24156  0A12  00BA               	movwf	xtoa@x
 24157  0A13  3199  215A         	fcall	_xtoa
 24158  0A15  0020               	movlb	0	; select bank0
 24159  0A16  0831               	movf	?_xtoa+1,w
 24160  0A17  0021               	movlb	1	; select bank1
 24161  0A18  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24162  0A19  0020               	movlb	0	; select bank0
 24163  0A1A  0830               	movf	?_xtoa,w
 24164  0A1B  0021               	movlb	1	; select bank1
 24165  0A1C  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24166  0A1D  0008               	return
 24167  0A1E                     l8205:	
 24168                           
 24169                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 24170  0A1E  0021               	movlb	1	; select bank1
 24171  0A1F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24172  0A20  0086               	movwf	6
 24173  0A21  3001               	movlw	1	; select bank2/3
 24174  0A22  0087               	movwf	7
 24175  0A23  3F40               	moviw [0]fsr1
 24176  0A24  0022               	movlb	2	; select bank2
 24177  0A25  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24178  0A26  3F41               	moviw [1]fsr1
 24179  0A27  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24180  0A28  0820               	movf	??_vfpfcnvrt^(0+256),w
 24181  0A29  0084               	movwf	4
 24182  0A2A  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24183  0A2B  0085               	movwf	5
 24184  0A2C  0012               	moviw fsr0++
 24185  0A2D  3A73               	xorlw	115
 24186  0A2E  1D03               	btfss	3,2
 24187  0A2F  2A61               	goto	l8215
 24188                           
 24189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 24190  0A30  0021               	movlb	1	; select bank1
 24191  0A31  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24192  0A32  0086               	movwf	6
 24193  0A33  3001               	movlw	1	; select bank2/3
 24194  0A34  0087               	movwf	7
 24195  0A35  3001               	movlw	1
 24196  0A36  0781               	addwf	1,f
 24197  0A37  3141               	addfsr 1,1
 24198  0A38  1803               	skipnc
 24199  0A39  0A81               	incf	1,f
 24200                           
 24201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 24202  0A3A  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24203  0A3B  0086               	movwf	6
 24204  0A3C  3001               	movlw	1	; select bank2/3
 24205  0A3D  0087               	movwf	7
 24206  0A3E  3F40               	moviw [0]fsr1
 24207  0A3F  0084               	movwf	4
 24208  0A40  3001               	movlw	1	; select bank2/3
 24209  0A41  0085               	movwf	5
 24210  0A42  0A81               	incf	1,f
 24211  0A43  0800               	movf	0,w
 24212  0A44  0022               	movlb	2	; select bank2
 24213  0A45  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24214  0A46  0820               	movf	??_vfpfcnvrt^(0+256),w
 24215  0A47  00AC               	movwf	vfpfcnvrt@cp^(0+256)
 24216                           
 24217                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 24218  0A48  0021               	movlb	1	; select bank1
 24219  0A49  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24220  0A4A  0020               	movlb	0	; select bank0
 24221  0A4B  00A1               	movwf	stoa@fp+1
 24222  0A4C  0021               	movlb	1	; select bank1
 24223  0A4D  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24224  0A4E  0020               	movlb	0	; select bank0
 24225  0A4F  00A0               	movwf	stoa@fp
 24226  0A50  0022               	movlb	2	; select bank2
 24227  0A51  082C               	movf	vfpfcnvrt@cp^(0+256),w
 24228  0A52  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24229  0A53  0820               	movf	??_vfpfcnvrt^(0+256),w
 24230  0A54  0020               	movlb	0	; select bank0
 24231  0A55  00A2               	movwf	stoa@s
 24232  0A56  31AB  23D3         	fcall	_stoa
 24233  0A58  0020               	movlb	0	; select bank0
 24234  0A59  0821               	movf	?_stoa+1,w
 24235  0A5A  0021               	movlb	1	; select bank1
 24236  0A5B  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24237  0A5C  0020               	movlb	0	; select bank0
 24238  0A5D  0820               	movf	?_stoa,w
 24239  0A5E  0021               	movlb	1	; select bank1
 24240  0A5F  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24241  0A60  0008               	return
 24242  0A61                     l8215:	
 24243                           
 24244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 24245  0A61  0021               	movlb	1	; select bank1
 24246  0A62  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24247  0A63  0086               	movwf	6
 24248  0A64  3001               	movlw	1	; select bank2/3
 24249  0A65  0087               	movwf	7
 24250  0A66  3F40               	moviw [0]fsr1
 24251  0A67  00F1               	movwf	strncmp@_l
 24252  0A68  3F41               	moviw [1]fsr1
 24253  0A69  00F2               	movwf	strncmp@_l+1
 24254  0A6A  3068               	movlw	low (STR_116| (0+32768))
 24255  0A6B  00F3               	movwf	strncmp@_r
 24256  0A6C  30BB               	movlw	high (STR_116| (0+32768))
 24257  0A6D  00F4               	movwf	strncmp@_r+1
 24258  0A6E  3003               	movlw	3
 24259  0A6F  00F5               	movwf	strncmp@n
 24260  0A70  3000               	movlw	0
 24261  0A71  00F6               	movwf	strncmp@n+1
 24262  0A72  31B2  22A4  3188   	fcall	_strncmp
 24263  0A75  0871               	movf	?_strncmp,w
 24264  0A76  0472               	iorwf	?_strncmp+1,w
 24265  0A77  1D03               	btfss	3,2
 24266  0A78  2ACA               	goto	l8225
 24267                           
 24268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 24269  0A79  0021               	movlb	1	; select bank1
 24270  0A7A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24271  0A7B  0086               	movwf	6
 24272  0A7C  3001               	movlw	1	; select bank2/3
 24273  0A7D  0087               	movwf	7
 24274  0A7E  3003               	movlw	3
 24275  0A7F  0781               	addwf	1,f
 24276  0A80  3141               	addfsr 1,1
 24277  0A81  1803               	skipnc
 24278  0A82  0A81               	incf	1,f
 24279                           
 24280                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 24281  0A83  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24282  0A84  0086               	movwf	6
 24283  0A85  3001               	movlw	1	; select bank2/3
 24284  0A86  0087               	movwf	7
 24285  0A87  0801               	movf	1,w
 24286  0A88  0084               	movwf	4
 24287  0A89  3001               	movlw	1	; select bank2/3
 24288  0A8A  0085               	movwf	5
 24289  0A8B  3002               	movlw	2
 24290  0A8C  0781               	addwf	1,f
 24291  0A8D  0800               	movf	0,w
 24292  0A8E  0022               	movlb	2	; select bank2
 24293  0A8F  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24294  0A90  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 24295  0A91  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24296  0A92  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24297  0A93  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24298  0A94  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24299  0A95  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24300  0A96  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24301                           
 24302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 24303  0A97  0021               	movlb	1	; select bank1
 24304  0A98  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24305  0A99  0020               	movlb	0	; select bank0
 24306  0A9A  00B1               	movwf	utoa@fp+1
 24307  0A9B  0021               	movlb	1	; select bank1
 24308  0A9C  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24309  0A9D  0020               	movlb	0	; select bank0
 24310  0A9E  00B0               	movwf	utoa@fp
 24311  0A9F  0022               	movlb	2	; select bank2
 24312  0AA0  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24313  0AA1  0020               	movlb	0	; select bank0
 24314  0AA2  00B2               	movwf	utoa@d
 24315  0AA3  0022               	movlb	2	; select bank2
 24316  0AA4  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24317  0AA5  0020               	movlb	0	; select bank0
 24318  0AA6  00B3               	movwf	utoa@d+1
 24319  0AA7  0022               	movlb	2	; select bank2
 24320  0AA8  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24321  0AA9  0020               	movlb	0	; select bank0
 24322  0AAA  00B4               	movwf	utoa@d+2
 24323  0AAB  0022               	movlb	2	; select bank2
 24324  0AAC  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24325  0AAD  0020               	movlb	0	; select bank0
 24326  0AAE  00B5               	movwf	utoa@d+3
 24327  0AAF  0022               	movlb	2	; select bank2
 24328  0AB0  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24329  0AB1  0020               	movlb	0	; select bank0
 24330  0AB2  00B6               	movwf	utoa@d+4
 24331  0AB3  0022               	movlb	2	; select bank2
 24332  0AB4  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24333  0AB5  0020               	movlb	0	; select bank0
 24334  0AB6  00B7               	movwf	utoa@d+5
 24335  0AB7  0022               	movlb	2	; select bank2
 24336  0AB8  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24337  0AB9  0020               	movlb	0	; select bank0
 24338  0ABA  00B8               	movwf	utoa@d+6
 24339  0ABB  0022               	movlb	2	; select bank2
 24340  0ABC  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24341  0ABD  0020               	movlb	0	; select bank0
 24342  0ABE  00B9               	movwf	utoa@d+7
 24343  0ABF  31AF  271F         	fcall	_utoa
 24344  0AC1  0020               	movlb	0	; select bank0
 24345  0AC2  0831               	movf	?_utoa+1,w
 24346  0AC3  0021               	movlb	1	; select bank1
 24347  0AC4  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24348  0AC5  0020               	movlb	0	; select bank0
 24349  0AC6  0830               	movf	?_utoa,w
 24350  0AC7  0021               	movlb	1	; select bank1
 24351  0AC8  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24352  0AC9  0008               	return
 24353  0ACA                     l8225:	
 24354                           
 24355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 24356  0ACA  0021               	movlb	1	; select bank1
 24357  0ACB  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24358  0ACC  0086               	movwf	6
 24359  0ACD  3001               	movlw	1	; select bank2/3
 24360  0ACE  0087               	movwf	7
 24361  0ACF  3F40               	moviw [0]fsr1
 24362  0AD0  00F1               	movwf	strncmp@_l
 24363  0AD1  3F41               	moviw [1]fsr1
 24364  0AD2  00F2               	movwf	strncmp@_l+1
 24365  0AD3  3069               	movlw	low ((STR_116+1)| (0+32768))
 24366  0AD4  00F3               	movwf	strncmp@_r
 24367  0AD5  30BB               	movlw	high ((STR_116+1)| (0+32768))
 24368  0AD6  00F4               	movwf	strncmp@_r+1
 24369  0AD7  3002               	movlw	2
 24370  0AD8  00F5               	movwf	strncmp@n
 24371  0AD9  3000               	movlw	0
 24372  0ADA  00F6               	movwf	strncmp@n+1
 24373  0ADB  31B2  22A4  3188   	fcall	_strncmp
 24374  0ADE  0871               	movf	?_strncmp,w
 24375  0ADF  0472               	iorwf	?_strncmp+1,w
 24376  0AE0  1D03               	btfss	3,2
 24377  0AE1  2B34               	goto	l8235
 24378                           
 24379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 24380  0AE2  0021               	movlb	1	; select bank1
 24381  0AE3  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24382  0AE4  0086               	movwf	6
 24383  0AE5  3001               	movlw	1	; select bank2/3
 24384  0AE6  0087               	movwf	7
 24385  0AE7  3002               	movlw	2
 24386  0AE8  0781               	addwf	1,f
 24387  0AE9  3141               	addfsr 1,1
 24388  0AEA  1803               	skipnc
 24389  0AEB  0A81               	incf	1,f
 24390                           
 24391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 24392  0AEC  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24393  0AED  0086               	movwf	6
 24394  0AEE  3001               	movlw	1	; select bank2/3
 24395  0AEF  0087               	movwf	7
 24396  0AF0  0801               	movf	1,w
 24397  0AF1  0084               	movwf	4
 24398  0AF2  3001               	movlw	1	; select bank2/3
 24399  0AF3  0085               	movwf	5
 24400  0AF4  3002               	movlw	2
 24401  0AF5  0781               	addwf	1,f
 24402  0AF6  3F00               	moviw [0]fsr0
 24403  0AF7  0022               	movlb	2	; select bank2
 24404  0AF8  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24405  0AF9  3F01               	moviw [1]fsr0
 24406  0AFA  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24407  0AFB  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24408  0AFC  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24409  0AFD  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24410  0AFE  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24411  0AFF  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24412  0B00  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24413                           
 24414                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 24415  0B01  0021               	movlb	1	; select bank1
 24416  0B02  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24417  0B03  0020               	movlb	0	; select bank0
 24418  0B04  00B1               	movwf	utoa@fp+1
 24419  0B05  0021               	movlb	1	; select bank1
 24420  0B06  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24421  0B07  0020               	movlb	0	; select bank0
 24422  0B08  00B0               	movwf	utoa@fp
 24423  0B09  0022               	movlb	2	; select bank2
 24424  0B0A  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24425  0B0B  0020               	movlb	0	; select bank0
 24426  0B0C  00B2               	movwf	utoa@d
 24427  0B0D  0022               	movlb	2	; select bank2
 24428  0B0E  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24429  0B0F  0020               	movlb	0	; select bank0
 24430  0B10  00B3               	movwf	utoa@d+1
 24431  0B11  0022               	movlb	2	; select bank2
 24432  0B12  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24433  0B13  0020               	movlb	0	; select bank0
 24434  0B14  00B4               	movwf	utoa@d+2
 24435  0B15  0022               	movlb	2	; select bank2
 24436  0B16  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24437  0B17  0020               	movlb	0	; select bank0
 24438  0B18  00B5               	movwf	utoa@d+3
 24439  0B19  0022               	movlb	2	; select bank2
 24440  0B1A  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24441  0B1B  0020               	movlb	0	; select bank0
 24442  0B1C  00B6               	movwf	utoa@d+4
 24443  0B1D  0022               	movlb	2	; select bank2
 24444  0B1E  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24445  0B1F  0020               	movlb	0	; select bank0
 24446  0B20  00B7               	movwf	utoa@d+5
 24447  0B21  0022               	movlb	2	; select bank2
 24448  0B22  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24449  0B23  0020               	movlb	0	; select bank0
 24450  0B24  00B8               	movwf	utoa@d+6
 24451  0B25  0022               	movlb	2	; select bank2
 24452  0B26  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24453  0B27  0020               	movlb	0	; select bank0
 24454  0B28  00B9               	movwf	utoa@d+7
 24455  0B29  31AF  271F         	fcall	_utoa
 24456  0B2B  0020               	movlb	0	; select bank0
 24457  0B2C  0831               	movf	?_utoa+1,w
 24458  0B2D  0021               	movlb	1	; select bank1
 24459  0B2E  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24460  0B2F  0020               	movlb	0	; select bank0
 24461  0B30  0830               	movf	?_utoa,w
 24462  0B31  0021               	movlb	1	; select bank1
 24463  0B32  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24464  0B33  0008               	return
 24465  0B34                     l8235:	
 24466                           
 24467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 24468  0B34  0021               	movlb	1	; select bank1
 24469  0B35  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24470  0B36  0086               	movwf	6
 24471  0B37  3001               	movlw	1	; select bank2/3
 24472  0B38  0087               	movwf	7
 24473  0B39  3F40               	moviw [0]fsr1
 24474  0B3A  0022               	movlb	2	; select bank2
 24475  0B3B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24476  0B3C  3F41               	moviw [1]fsr1
 24477  0B3D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24478  0B3E  0820               	movf	??_vfpfcnvrt^(0+256),w
 24479  0B3F  0084               	movwf	4
 24480  0B40  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24481  0B41  0085               	movwf	5
 24482  0B42  0012               	moviw fsr0++
 24483  0B43  3A75               	xorlw	117
 24484  0B44  1D03               	btfss	3,2
 24485  0B45  2B98               	goto	l8245
 24486                           
 24487                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 24488  0B46  0021               	movlb	1	; select bank1
 24489  0B47  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24490  0B48  0086               	movwf	6
 24491  0B49  3001               	movlw	1	; select bank2/3
 24492  0B4A  0087               	movwf	7
 24493  0B4B  3001               	movlw	1
 24494  0B4C  0781               	addwf	1,f
 24495  0B4D  3141               	addfsr 1,1
 24496  0B4E  1803               	skipnc
 24497  0B4F  0A81               	incf	1,f
 24498                           
 24499                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 24500  0B50  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24501  0B51  0086               	movwf	6
 24502  0B52  3001               	movlw	1	; select bank2/3
 24503  0B53  0087               	movwf	7
 24504  0B54  0801               	movf	1,w
 24505  0B55  0084               	movwf	4
 24506  0B56  3001               	movlw	1	; select bank2/3
 24507  0B57  0085               	movwf	5
 24508  0B58  3002               	movlw	2
 24509  0B59  0781               	addwf	1,f
 24510  0B5A  3F00               	moviw [0]fsr0
 24511  0B5B  0022               	movlb	2	; select bank2
 24512  0B5C  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24513  0B5D  3F01               	moviw [1]fsr0
 24514  0B5E  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24515  0B5F  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24516  0B60  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24517  0B61  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24518  0B62  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24519  0B63  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24520  0B64  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24521                           
 24522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 24523  0B65  0021               	movlb	1	; select bank1
 24524  0B66  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24525  0B67  0020               	movlb	0	; select bank0
 24526  0B68  00B1               	movwf	utoa@fp+1
 24527  0B69  0021               	movlb	1	; select bank1
 24528  0B6A  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24529  0B6B  0020               	movlb	0	; select bank0
 24530  0B6C  00B0               	movwf	utoa@fp
 24531  0B6D  0022               	movlb	2	; select bank2
 24532  0B6E  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24533  0B6F  0020               	movlb	0	; select bank0
 24534  0B70  00B2               	movwf	utoa@d
 24535  0B71  0022               	movlb	2	; select bank2
 24536  0B72  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24537  0B73  0020               	movlb	0	; select bank0
 24538  0B74  00B3               	movwf	utoa@d+1
 24539  0B75  0022               	movlb	2	; select bank2
 24540  0B76  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24541  0B77  0020               	movlb	0	; select bank0
 24542  0B78  00B4               	movwf	utoa@d+2
 24543  0B79  0022               	movlb	2	; select bank2
 24544  0B7A  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24545  0B7B  0020               	movlb	0	; select bank0
 24546  0B7C  00B5               	movwf	utoa@d+3
 24547  0B7D  0022               	movlb	2	; select bank2
 24548  0B7E  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24549  0B7F  0020               	movlb	0	; select bank0
 24550  0B80  00B6               	movwf	utoa@d+4
 24551  0B81  0022               	movlb	2	; select bank2
 24552  0B82  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24553  0B83  0020               	movlb	0	; select bank0
 24554  0B84  00B7               	movwf	utoa@d+5
 24555  0B85  0022               	movlb	2	; select bank2
 24556  0B86  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24557  0B87  0020               	movlb	0	; select bank0
 24558  0B88  00B8               	movwf	utoa@d+6
 24559  0B89  0022               	movlb	2	; select bank2
 24560  0B8A  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24561  0B8B  0020               	movlb	0	; select bank0
 24562  0B8C  00B9               	movwf	utoa@d+7
 24563  0B8D  31AF  271F         	fcall	_utoa
 24564  0B8F  0020               	movlb	0	; select bank0
 24565  0B90  0831               	movf	?_utoa+1,w
 24566  0B91  0021               	movlb	1	; select bank1
 24567  0B92  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24568  0B93  0020               	movlb	0	; select bank0
 24569  0B94  0830               	movf	?_utoa,w
 24570  0B95  0021               	movlb	1	; select bank1
 24571  0B96  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24572  0B97  0008               	return
 24573  0B98                     l8245:	
 24574                           
 24575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1192:      
      +                             if (!strncmp(*fmt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 24576  0B98  0021               	movlb	1	; select bank1
 24577  0B99  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24578  0B9A  0086               	movwf	6
 24579  0B9B  3001               	movlw	1	; select bank2/3
 24580  0B9C  0087               	movwf	7
 24581  0B9D  3F40               	moviw [0]fsr1
 24582  0B9E  00F1               	movwf	strncmp@_l
 24583  0B9F  3F41               	moviw [1]fsr1
 24584  0BA0  00F2               	movwf	strncmp@_l+1
 24585  0BA1  3091               	movlw	low (STR_126| (0+32768))
 24586  0BA2  00F3               	movwf	strncmp@_r
 24587  0BA3  30BB               	movlw	high (STR_126| (0+32768))
 24588  0BA4  00F4               	movwf	strncmp@_r+1
 24589  0BA5  3002               	movlw	2
 24590  0BA6  00F5               	movwf	strncmp@n
 24591  0BA7  3000               	movlw	0
 24592  0BA8  00F6               	movwf	strncmp@n+1
 24593  0BA9  31B2  22A4  3188   	fcall	_strncmp
 24594  0BAC  0871               	movf	?_strncmp,w
 24595  0BAD  0472               	iorwf	?_strncmp+1,w
 24596  0BAE  1D03               	btfss	3,2
 24597  0BAF  2C1C               	goto	l8255
 24598                           
 24599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1194:      
      +                                 *fmt += ((sizeof("lu")/sizeof("lu"[0]))-1);
 24600  0BB0  0021               	movlb	1	; select bank1
 24601  0BB1  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24602  0BB2  0086               	movwf	6
 24603  0BB3  3001               	movlw	1	; select bank2/3
 24604  0BB4  0087               	movwf	7
 24605  0BB5  3002               	movlw	2
 24606  0BB6  0781               	addwf	1,f
 24607  0BB7  3141               	addfsr 1,1
 24608  0BB8  1803               	skipnc
 24609  0BB9  0A81               	incf	1,f
 24610                           
 24611                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1195:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 24612  0BBA  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24613  0BBB  0086               	movwf	6
 24614  0BBC  3001               	movlw	1	; select bank2/3
 24615  0BBD  0087               	movwf	7
 24616  0BBE  0801               	movf	1,w
 24617  0BBF  0084               	movwf	4
 24618  0BC0  3001               	movlw	1	; select bank2/3
 24619  0BC1  0085               	movwf	5
 24620  0BC2  3004               	movlw	4
 24621  0BC3  0781               	addwf	1,f
 24622  0BC4  3F00               	moviw [0]fsr0
 24623  0BC5  0022               	movlb	2	; select bank2
 24624  0BC6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24625  0BC7  3F01               	moviw [1]fsr0
 24626  0BC8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24627  0BC9  3F02               	moviw [2]fsr0
 24628  0BCA  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 24629  0BCB  3F03               	moviw [3]fsr0
 24630  0BCC  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 24631  0BCD  0820               	movf	??_vfpfcnvrt^(0+256),w
 24632  0BCE  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 24633  0BCF  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 24634  0BD0  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 24635  0BD1  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24636  0BD2  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 24637  0BD3  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 24638  0BD4  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 24639  0BD5  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 24640  0BD6  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 24641  0BD7  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 24642  0BD8  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 24643  0BD9  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 24644  0BDA  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 24645  0BDB  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 24646  0BDC  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 24647  0BDD  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 24648  0BDE  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 24649  0BDF  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 24650  0BE0  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 24651  0BE1  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 24652  0BE2  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 24653  0BE3  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 24654  0BE4  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 24655  0BE5  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 24656  0BE6  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24657  0BE7  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 24658  0BE8  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24659                           
 24660                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1197:      
      +                                 return utoa(fp, llu);
 24661  0BE9  0021               	movlb	1	; select bank1
 24662  0BEA  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24663  0BEB  0020               	movlb	0	; select bank0
 24664  0BEC  00B1               	movwf	utoa@fp+1
 24665  0BED  0021               	movlb	1	; select bank1
 24666  0BEE  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24667  0BEF  0020               	movlb	0	; select bank0
 24668  0BF0  00B0               	movwf	utoa@fp
 24669  0BF1  0022               	movlb	2	; select bank2
 24670  0BF2  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24671  0BF3  0020               	movlb	0	; select bank0
 24672  0BF4  00B2               	movwf	utoa@d
 24673  0BF5  0022               	movlb	2	; select bank2
 24674  0BF6  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24675  0BF7  0020               	movlb	0	; select bank0
 24676  0BF8  00B3               	movwf	utoa@d+1
 24677  0BF9  0022               	movlb	2	; select bank2
 24678  0BFA  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24679  0BFB  0020               	movlb	0	; select bank0
 24680  0BFC  00B4               	movwf	utoa@d+2
 24681  0BFD  0022               	movlb	2	; select bank2
 24682  0BFE  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24683  0BFF  0020               	movlb	0	; select bank0
 24684  0C00  00B5               	movwf	utoa@d+3
 24685  0C01  0022               	movlb	2	; select bank2
 24686  0C02  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24687  0C03  0020               	movlb	0	; select bank0
 24688  0C04  00B6               	movwf	utoa@d+4
 24689  0C05  0022               	movlb	2	; select bank2
 24690  0C06  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24691  0C07  0020               	movlb	0	; select bank0
 24692  0C08  00B7               	movwf	utoa@d+5
 24693  0C09  0022               	movlb	2	; select bank2
 24694  0C0A  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24695  0C0B  0020               	movlb	0	; select bank0
 24696  0C0C  00B8               	movwf	utoa@d+6
 24697  0C0D  0022               	movlb	2	; select bank2
 24698  0C0E  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24699  0C0F  0020               	movlb	0	; select bank0
 24700  0C10  00B9               	movwf	utoa@d+7
 24701  0C11  31AF  271F         	fcall	_utoa
 24702  0C13  0020               	movlb	0	; select bank0
 24703  0C14  0831               	movf	?_utoa+1,w
 24704  0C15  0021               	movlb	1	; select bank1
 24705  0C16  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24706  0C17  0020               	movlb	0	; select bank0
 24707  0C18  0830               	movf	?_utoa,w
 24708  0C19  0021               	movlb	1	; select bank1
 24709  0C1A  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24710  0C1B  0008               	return
 24711  0C1C                     l8255:	
 24712                           
 24713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 24714  0C1C  0021               	movlb	1	; select bank1
 24715  0C1D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24716  0C1E  0086               	movwf	6
 24717  0C1F  3001               	movlw	1	; select bank2/3
 24718  0C20  0087               	movwf	7
 24719  0C21  3F40               	moviw [0]fsr1
 24720  0C22  00F1               	movwf	strncmp@_l
 24721  0C23  3F41               	moviw [1]fsr1
 24722  0C24  00F2               	movwf	strncmp@_l+1
 24723  0C25  3094               	movlw	low (STR_131| (0+32768))
 24724  0C26  00F3               	movwf	strncmp@_r
 24725  0C27  30BB               	movlw	high (STR_131| (0+32768))
 24726  0C28  00F4               	movwf	strncmp@_r+1
 24727  0C29  3002               	movlw	2
 24728  0C2A  00F5               	movwf	strncmp@n
 24729  0C2B  3000               	movlw	0
 24730  0C2C  00F6               	movwf	strncmp@n+1
 24731  0C2D  31B2  22A4  3188   	fcall	_strncmp
 24732  0C30  0871               	movf	?_strncmp,w
 24733  0C31  0472               	iorwf	?_strncmp+1,w
 24734  0C32  1D03               	btfss	3,2
 24735  0C33  2C86               	goto	l8265
 24736                           
 24737                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 24738  0C34  0021               	movlb	1	; select bank1
 24739  0C35  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24740  0C36  0086               	movwf	6
 24741  0C37  3001               	movlw	1	; select bank2/3
 24742  0C38  0087               	movwf	7
 24743  0C39  3002               	movlw	2
 24744  0C3A  0781               	addwf	1,f
 24745  0C3B  3141               	addfsr 1,1
 24746  0C3C  1803               	skipnc
 24747  0C3D  0A81               	incf	1,f
 24748                           
 24749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 24750  0C3E  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24751  0C3F  0086               	movwf	6
 24752  0C40  3001               	movlw	1	; select bank2/3
 24753  0C41  0087               	movwf	7
 24754  0C42  0801               	movf	1,w
 24755  0C43  0084               	movwf	4
 24756  0C44  3001               	movlw	1	; select bank2/3
 24757  0C45  0085               	movwf	5
 24758  0C46  3002               	movlw	2
 24759  0C47  0781               	addwf	1,f
 24760  0C48  3F00               	moviw [0]fsr0
 24761  0C49  0022               	movlb	2	; select bank2
 24762  0C4A  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24763  0C4B  3F01               	moviw [1]fsr0
 24764  0C4C  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 24765  0C4D  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24766  0C4E  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24767  0C4F  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24768  0C50  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24769  0C51  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24770  0C52  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24771                           
 24772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 24773  0C53  0021               	movlb	1	; select bank1
 24774  0C54  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24775  0C55  0020               	movlb	0	; select bank0
 24776  0C56  00B1               	movwf	utoa@fp+1
 24777  0C57  0021               	movlb	1	; select bank1
 24778  0C58  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24779  0C59  0020               	movlb	0	; select bank0
 24780  0C5A  00B0               	movwf	utoa@fp
 24781  0C5B  0022               	movlb	2	; select bank2
 24782  0C5C  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24783  0C5D  0020               	movlb	0	; select bank0
 24784  0C5E  00B2               	movwf	utoa@d
 24785  0C5F  0022               	movlb	2	; select bank2
 24786  0C60  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24787  0C61  0020               	movlb	0	; select bank0
 24788  0C62  00B3               	movwf	utoa@d+1
 24789  0C63  0022               	movlb	2	; select bank2
 24790  0C64  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24791  0C65  0020               	movlb	0	; select bank0
 24792  0C66  00B4               	movwf	utoa@d+2
 24793  0C67  0022               	movlb	2	; select bank2
 24794  0C68  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24795  0C69  0020               	movlb	0	; select bank0
 24796  0C6A  00B5               	movwf	utoa@d+3
 24797  0C6B  0022               	movlb	2	; select bank2
 24798  0C6C  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24799  0C6D  0020               	movlb	0	; select bank0
 24800  0C6E  00B6               	movwf	utoa@d+4
 24801  0C6F  0022               	movlb	2	; select bank2
 24802  0C70  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24803  0C71  0020               	movlb	0	; select bank0
 24804  0C72  00B7               	movwf	utoa@d+5
 24805  0C73  0022               	movlb	2	; select bank2
 24806  0C74  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24807  0C75  0020               	movlb	0	; select bank0
 24808  0C76  00B8               	movwf	utoa@d+6
 24809  0C77  0022               	movlb	2	; select bank2
 24810  0C78  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24811  0C79  0020               	movlb	0	; select bank0
 24812  0C7A  00B9               	movwf	utoa@d+7
 24813  0C7B  31AF  271F         	fcall	_utoa
 24814  0C7D  0020               	movlb	0	; select bank0
 24815  0C7E  0831               	movf	?_utoa+1,w
 24816  0C7F  0021               	movlb	1	; select bank1
 24817  0C80  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24818  0C81  0020               	movlb	0	; select bank0
 24819  0C82  0830               	movf	?_utoa,w
 24820  0C83  0021               	movlb	1	; select bank1
 24821  0C84  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24822  0C85  0008               	return
 24823  0C86                     l8265:	
 24824                           
 24825                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 24826  0C86  0021               	movlb	1	; select bank1
 24827  0C87  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24828  0C88  0086               	movwf	6
 24829  0C89  3001               	movlw	1	; select bank2/3
 24830  0C8A  0087               	movwf	7
 24831  0C8B  3F40               	moviw [0]fsr1
 24832  0C8C  00F1               	movwf	strncmp@_l
 24833  0C8D  3F41               	moviw [1]fsr1
 24834  0C8E  00F2               	movwf	strncmp@_l+1
 24835  0C8F  306C               	movlw	low (STR_136| (0+32768))
 24836  0C90  00F3               	movwf	strncmp@_r
 24837  0C91  30BB               	movlw	high (STR_136| (0+32768))
 24838  0C92  00F4               	movwf	strncmp@_r+1
 24839  0C93  3003               	movlw	3
 24840  0C94  00F5               	movwf	strncmp@n
 24841  0C95  3000               	movlw	0
 24842  0C96  00F6               	movwf	strncmp@n+1
 24843  0C97  31B2  22A4  3188   	fcall	_strncmp
 24844  0C9A  0871               	movf	?_strncmp,w
 24845  0C9B  0472               	iorwf	?_strncmp+1,w
 24846  0C9C  1903               	btfsc	3,2
 24847  0C9D  2CB6               	goto	l8269
 24848  0C9E  0021               	movlb	1	; select bank1
 24849  0C9F  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24850  0CA0  0086               	movwf	6
 24851  0CA1  3001               	movlw	1	; select bank2/3
 24852  0CA2  0087               	movwf	7
 24853  0CA3  3F40               	moviw [0]fsr1
 24854  0CA4  00F1               	movwf	strncmp@_l
 24855  0CA5  3F41               	moviw [1]fsr1
 24856  0CA6  00F2               	movwf	strncmp@_l+1
 24857  0CA7  304C               	movlw	low (STR_140| (0+32768))
 24858  0CA8  00F3               	movwf	strncmp@_r
 24859  0CA9  30BB               	movlw	high (STR_140| (0+32768))
 24860  0CAA  00F4               	movwf	strncmp@_r+1
 24861  0CAB  3003               	movlw	3
 24862  0CAC  00F5               	movwf	strncmp@n
 24863  0CAD  3000               	movlw	0
 24864  0CAE  00F6               	movwf	strncmp@n+1
 24865  0CAF  31B2  22A4  3188   	fcall	_strncmp
 24866  0CB2  0871               	movf	?_strncmp,w
 24867  0CB3  0472               	iorwf	?_strncmp+1,w
 24868  0CB4  1D03               	btfss	3,2
 24869  0CB5  2D22               	goto	l8279
 24870  0CB6                     l8269:	
 24871                           
 24872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 24873  0CB6  0021               	movlb	1	; select bank1
 24874  0CB7  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24875  0CB8  0086               	movwf	6
 24876  0CB9  3001               	movlw	1	; select bank2/3
 24877  0CBA  0087               	movwf	7
 24878  0CBB  3F40               	moviw [0]fsr1
 24879  0CBC  0022               	movlb	2	; select bank2
 24880  0CBD  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24881  0CBE  3F41               	moviw [1]fsr1
 24882  0CBF  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 24883  0CC0  3002               	movlw	2
 24884  0CC1  0720               	addwf	??_vfpfcnvrt^(0+256),w
 24885  0CC2  0084               	movwf	4
 24886  0CC3  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 24887  0CC4  1803               	skipnc
 24888  0CC5  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 24889  0CC6  0085               	movwf	5
 24890  0CC7  0800               	movf	0,w	;code access
 24891  0CC8  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 24892  0CC9  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 24893  0CCA  00C5               	movwf	vfpfcnvrt@c^(0+256)
 24894                           
 24895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 24896  0CCB  0021               	movlb	1	; select bank1
 24897  0CCC  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24898  0CCD  0086               	movwf	6
 24899  0CCE  3001               	movlw	1	; select bank2/3
 24900  0CCF  0087               	movwf	7
 24901  0CD0  3003               	movlw	3
 24902  0CD1  0781               	addwf	1,f
 24903  0CD2  3141               	addfsr 1,1
 24904  0CD3  1803               	skipnc
 24905  0CD4  0A81               	incf	1,f
 24906                           
 24907                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 24908  0CD5  086F               	movf	vfpfcnvrt@ap^(0+128),w
 24909  0CD6  0086               	movwf	6
 24910  0CD7  3001               	movlw	1	; select bank2/3
 24911  0CD8  0087               	movwf	7
 24912  0CD9  0801               	movf	1,w
 24913  0CDA  0084               	movwf	4
 24914  0CDB  3001               	movlw	1	; select bank2/3
 24915  0CDC  0085               	movwf	5
 24916  0CDD  3002               	movlw	2
 24917  0CDE  0781               	addwf	1,f
 24918  0CDF  0800               	movf	0,w
 24919  0CE0  0022               	movlb	2	; select bank2
 24920  0CE1  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 24921  0CE2  01C7               	clrf	(vfpfcnvrt@llu+1)^(0+256)
 24922  0CE3  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 24923  0CE4  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 24924  0CE5  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 24925  0CE6  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 24926  0CE7  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 24927  0CE8  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 24928                           
 24929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 24930  0CE9  0021               	movlb	1	; select bank1
 24931  0CEA  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 24932  0CEB  0020               	movlb	0	; select bank0
 24933  0CEC  00B1               	movwf	xtoa@fp+1
 24934  0CED  0021               	movlb	1	; select bank1
 24935  0CEE  086C               	movf	vfpfcnvrt@fp^(0+128),w
 24936  0CEF  0020               	movlb	0	; select bank0
 24937  0CF0  00B0               	movwf	xtoa@fp
 24938  0CF1  0022               	movlb	2	; select bank2
 24939  0CF2  0846               	movf	vfpfcnvrt@llu^(0+256),w
 24940  0CF3  0020               	movlb	0	; select bank0
 24941  0CF4  00B2               	movwf	xtoa@d
 24942  0CF5  0022               	movlb	2	; select bank2
 24943  0CF6  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 24944  0CF7  0020               	movlb	0	; select bank0
 24945  0CF8  00B3               	movwf	xtoa@d+1
 24946  0CF9  0022               	movlb	2	; select bank2
 24947  0CFA  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 24948  0CFB  0020               	movlb	0	; select bank0
 24949  0CFC  00B4               	movwf	xtoa@d+2
 24950  0CFD  0022               	movlb	2	; select bank2
 24951  0CFE  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 24952  0CFF  0020               	movlb	0	; select bank0
 24953  0D00  00B5               	movwf	xtoa@d+3
 24954  0D01  0022               	movlb	2	; select bank2
 24955  0D02  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 24956  0D03  0020               	movlb	0	; select bank0
 24957  0D04  00B6               	movwf	xtoa@d+4
 24958  0D05  0022               	movlb	2	; select bank2
 24959  0D06  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 24960  0D07  0020               	movlb	0	; select bank0
 24961  0D08  00B7               	movwf	xtoa@d+5
 24962  0D09  0022               	movlb	2	; select bank2
 24963  0D0A  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 24964  0D0B  0020               	movlb	0	; select bank0
 24965  0D0C  00B8               	movwf	xtoa@d+6
 24966  0D0D  0022               	movlb	2	; select bank2
 24967  0D0E  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 24968  0D0F  0020               	movlb	0	; select bank0
 24969  0D10  00B9               	movwf	xtoa@d+7
 24970  0D11  0022               	movlb	2	; select bank2
 24971  0D12  0845               	movf	vfpfcnvrt@c^(0+256),w
 24972  0D13  00A0               	movwf	??_vfpfcnvrt^(0+256)
 24973  0D14  0820               	movf	??_vfpfcnvrt^(0+256),w
 24974  0D15  0020               	movlb	0	; select bank0
 24975  0D16  00BA               	movwf	xtoa@x
 24976  0D17  3199  215A         	fcall	_xtoa
 24977  0D19  0020               	movlb	0	; select bank0
 24978  0D1A  0831               	movf	?_xtoa+1,w
 24979  0D1B  0021               	movlb	1	; select bank1
 24980  0D1C  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 24981  0D1D  0020               	movlb	0	; select bank0
 24982  0D1E  0830               	movf	?_xtoa,w
 24983  0D1F  0021               	movlb	1	; select bank1
 24984  0D20  00EC               	movwf	?_vfpfcnvrt^(0+128)
 24985  0D21  0008               	return
 24986  0D22                     l8279:	
 24987                           
 24988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 24989  0D22  0021               	movlb	1	; select bank1
 24990  0D23  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 24991  0D24  0086               	movwf	6
 24992  0D25  3001               	movlw	1	; select bank2/3
 24993  0D26  0087               	movwf	7
 24994  0D27  3F40               	moviw [0]fsr1
 24995  0D28  00F1               	movwf	strncmp@_l
 24996  0D29  3F41               	moviw [1]fsr1
 24997  0D2A  00F2               	movwf	strncmp@_l+1
 24998  0D2B  306D               	movlw	low ((STR_136+1)| (0+32768))
 24999  0D2C  00F3               	movwf	strncmp@_r
 25000  0D2D  30BB               	movlw	high ((STR_136+1)| (0+32768))
 25001  0D2E  00F4               	movwf	strncmp@_r+1
 25002  0D2F  3002               	movlw	2
 25003  0D30  00F5               	movwf	strncmp@n
 25004  0D31  3000               	movlw	0
 25005  0D32  00F6               	movwf	strncmp@n+1
 25006  0D33  31B2  22A4  3188   	fcall	_strncmp
 25007  0D36  0871               	movf	?_strncmp,w
 25008  0D37  0472               	iorwf	?_strncmp+1,w
 25009  0D38  1903               	btfsc	3,2
 25010  0D39  2D52               	goto	l8283
 25011  0D3A  0021               	movlb	1	; select bank1
 25012  0D3B  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25013  0D3C  0086               	movwf	6
 25014  0D3D  3001               	movlw	1	; select bank2/3
 25015  0D3E  0087               	movwf	7
 25016  0D3F  3F40               	moviw [0]fsr1
 25017  0D40  00F1               	movwf	strncmp@_l
 25018  0D41  3F41               	moviw [1]fsr1
 25019  0D42  00F2               	movwf	strncmp@_l+1
 25020  0D43  304D               	movlw	low ((STR_140+1)| (0+32768))
 25021  0D44  00F3               	movwf	strncmp@_r
 25022  0D45  30BB               	movlw	high ((STR_140+1)| (0+32768))
 25023  0D46  00F4               	movwf	strncmp@_r+1
 25024  0D47  3002               	movlw	2
 25025  0D48  00F5               	movwf	strncmp@n
 25026  0D49  3000               	movlw	0
 25027  0D4A  00F6               	movwf	strncmp@n+1
 25028  0D4B  31B2  22A4  3188   	fcall	_strncmp
 25029  0D4E  0871               	movf	?_strncmp,w
 25030  0D4F  0472               	iorwf	?_strncmp+1,w
 25031  0D50  1D03               	btfss	3,2
 25032  0D51  2DBF               	goto	l8293
 25033  0D52                     l8283:	
 25034                           
 25035                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 25036  0D52  0021               	movlb	1	; select bank1
 25037  0D53  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25038  0D54  0086               	movwf	6
 25039  0D55  3001               	movlw	1	; select bank2/3
 25040  0D56  0087               	movwf	7
 25041  0D57  3F40               	moviw [0]fsr1
 25042  0D58  0022               	movlb	2	; select bank2
 25043  0D59  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25044  0D5A  3F41               	moviw [1]fsr1
 25045  0D5B  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25046  0D5C  3001               	movlw	1
 25047  0D5D  0720               	addwf	??_vfpfcnvrt^(0+256),w
 25048  0D5E  0084               	movwf	4
 25049  0D5F  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 25050  0D60  1803               	skipnc
 25051  0D61  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 25052  0D62  0085               	movwf	5
 25053  0D63  0800               	movf	0,w	;code access
 25054  0D64  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25055  0D65  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25056  0D66  00C5               	movwf	vfpfcnvrt@c^(0+256)
 25057                           
 25058                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 25059  0D67  0021               	movlb	1	; select bank1
 25060  0D68  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25061  0D69  0086               	movwf	6
 25062  0D6A  3001               	movlw	1	; select bank2/3
 25063  0D6B  0087               	movwf	7
 25064  0D6C  3002               	movlw	2
 25065  0D6D  0781               	addwf	1,f
 25066  0D6E  3141               	addfsr 1,1
 25067  0D6F  1803               	skipnc
 25068  0D70  0A81               	incf	1,f
 25069                           
 25070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 25071  0D71  086F               	movf	vfpfcnvrt@ap^(0+128),w
 25072  0D72  0086               	movwf	6
 25073  0D73  3001               	movlw	1	; select bank2/3
 25074  0D74  0087               	movwf	7
 25075  0D75  0801               	movf	1,w
 25076  0D76  0084               	movwf	4
 25077  0D77  3001               	movlw	1	; select bank2/3
 25078  0D78  0085               	movwf	5
 25079  0D79  3002               	movlw	2
 25080  0D7A  0781               	addwf	1,f
 25081  0D7B  3F00               	moviw [0]fsr0
 25082  0D7C  0022               	movlb	2	; select bank2
 25083  0D7D  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 25084  0D7E  3F01               	moviw [1]fsr0
 25085  0D7F  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 25086  0D80  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 25087  0D81  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 25088  0D82  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 25089  0D83  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 25090  0D84  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 25091  0D85  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 25092                           
 25093                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 25094  0D86  0021               	movlb	1	; select bank1
 25095  0D87  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25096  0D88  0020               	movlb	0	; select bank0
 25097  0D89  00B1               	movwf	xtoa@fp+1
 25098  0D8A  0021               	movlb	1	; select bank1
 25099  0D8B  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25100  0D8C  0020               	movlb	0	; select bank0
 25101  0D8D  00B0               	movwf	xtoa@fp
 25102  0D8E  0022               	movlb	2	; select bank2
 25103  0D8F  0846               	movf	vfpfcnvrt@llu^(0+256),w
 25104  0D90  0020               	movlb	0	; select bank0
 25105  0D91  00B2               	movwf	xtoa@d
 25106  0D92  0022               	movlb	2	; select bank2
 25107  0D93  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 25108  0D94  0020               	movlb	0	; select bank0
 25109  0D95  00B3               	movwf	xtoa@d+1
 25110  0D96  0022               	movlb	2	; select bank2
 25111  0D97  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 25112  0D98  0020               	movlb	0	; select bank0
 25113  0D99  00B4               	movwf	xtoa@d+2
 25114  0D9A  0022               	movlb	2	; select bank2
 25115  0D9B  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 25116  0D9C  0020               	movlb	0	; select bank0
 25117  0D9D  00B5               	movwf	xtoa@d+3
 25118  0D9E  0022               	movlb	2	; select bank2
 25119  0D9F  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 25120  0DA0  0020               	movlb	0	; select bank0
 25121  0DA1  00B6               	movwf	xtoa@d+4
 25122  0DA2  0022               	movlb	2	; select bank2
 25123  0DA3  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 25124  0DA4  0020               	movlb	0	; select bank0
 25125  0DA5  00B7               	movwf	xtoa@d+5
 25126  0DA6  0022               	movlb	2	; select bank2
 25127  0DA7  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 25128  0DA8  0020               	movlb	0	; select bank0
 25129  0DA9  00B8               	movwf	xtoa@d+6
 25130  0DAA  0022               	movlb	2	; select bank2
 25131  0DAB  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 25132  0DAC  0020               	movlb	0	; select bank0
 25133  0DAD  00B9               	movwf	xtoa@d+7
 25134  0DAE  0022               	movlb	2	; select bank2
 25135  0DAF  0845               	movf	vfpfcnvrt@c^(0+256),w
 25136  0DB0  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25137  0DB1  0820               	movf	??_vfpfcnvrt^(0+256),w
 25138  0DB2  0020               	movlb	0	; select bank0
 25139  0DB3  00BA               	movwf	xtoa@x
 25140  0DB4  3199  215A         	fcall	_xtoa
 25141  0DB6  0020               	movlb	0	; select bank0
 25142  0DB7  0831               	movf	?_xtoa+1,w
 25143  0DB8  0021               	movlb	1	; select bank1
 25144  0DB9  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 25145  0DBA  0020               	movlb	0	; select bank0
 25146  0DBB  0830               	movf	?_xtoa,w
 25147  0DBC  0021               	movlb	1	; select bank1
 25148  0DBD  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25149  0DBE  0008               	return
 25150  0DBF                     l8293:	
 25151                           
 25152                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 25153  0DBF  0021               	movlb	1	; select bank1
 25154  0DC0  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25155  0DC1  0086               	movwf	6
 25156  0DC2  3001               	movlw	1	; select bank2/3
 25157  0DC3  0087               	movwf	7
 25158  0DC4  3F40               	moviw [0]fsr1
 25159  0DC5  0022               	movlb	2	; select bank2
 25160  0DC6  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25161  0DC7  3F41               	moviw [1]fsr1
 25162  0DC8  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25163  0DC9  0820               	movf	??_vfpfcnvrt^(0+256),w
 25164  0DCA  0084               	movwf	4
 25165  0DCB  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25166  0DCC  0085               	movwf	5
 25167  0DCD  0012               	moviw fsr0++
 25168  0DCE  3A78               	xorlw	120
 25169  0DCF  1903               	btfsc	3,2
 25170  0DD0  2DE3               	goto	l8297
 25171  0DD1  0021               	movlb	1	; select bank1
 25172  0DD2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25173  0DD3  0086               	movwf	6
 25174  0DD4  3001               	movlw	1	; select bank2/3
 25175  0DD5  0087               	movwf	7
 25176  0DD6  3F40               	moviw [0]fsr1
 25177  0DD7  0022               	movlb	2	; select bank2
 25178  0DD8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25179  0DD9  3F41               	moviw [1]fsr1
 25180  0DDA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25181  0DDB  0820               	movf	??_vfpfcnvrt^(0+256),w
 25182  0DDC  0084               	movwf	4
 25183  0DDD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25184  0DDE  0085               	movwf	5
 25185  0DDF  0012               	moviw fsr0++
 25186  0DE0  3A58               	xorlw	88
 25187  0DE1  1D03               	btfss	3,2
 25188  0DE2  2E4D               	goto	l8307
 25189  0DE3                     l8297:	
 25190                           
 25191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 25192  0DE3  0021               	movlb	1	; select bank1
 25193  0DE4  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25194  0DE5  0086               	movwf	6
 25195  0DE6  3001               	movlw	1	; select bank2/3
 25196  0DE7  0087               	movwf	7
 25197  0DE8  3F40               	moviw [0]fsr1
 25198  0DE9  0022               	movlb	2	; select bank2
 25199  0DEA  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25200  0DEB  3F41               	moviw [1]fsr1
 25201  0DEC  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25202  0DED  0820               	movf	??_vfpfcnvrt^(0+256),w
 25203  0DEE  0084               	movwf	4
 25204  0DEF  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25205  0DF0  0085               	movwf	5
 25206  0DF1  0800               	movf	0,w	;code access
 25207  0DF2  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25208  0DF3  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25209  0DF4  00C5               	movwf	vfpfcnvrt@c^(0+256)
 25210                           
 25211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 25212  0DF5  0021               	movlb	1	; select bank1
 25213  0DF6  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25214  0DF7  0086               	movwf	6
 25215  0DF8  3001               	movlw	1	; select bank2/3
 25216  0DF9  0087               	movwf	7
 25217  0DFA  3001               	movlw	1
 25218  0DFB  0781               	addwf	1,f
 25219  0DFC  3141               	addfsr 1,1
 25220  0DFD  1803               	skipnc
 25221  0DFE  0A81               	incf	1,f
 25222                           
 25223                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 25224  0DFF  086F               	movf	vfpfcnvrt@ap^(0+128),w
 25225  0E00  0086               	movwf	6
 25226  0E01  3001               	movlw	1	; select bank2/3
 25227  0E02  0087               	movwf	7
 25228  0E03  0801               	movf	1,w
 25229  0E04  0084               	movwf	4
 25230  0E05  3001               	movlw	1	; select bank2/3
 25231  0E06  0085               	movwf	5
 25232  0E07  3002               	movlw	2
 25233  0E08  0781               	addwf	1,f
 25234  0E09  3F00               	moviw [0]fsr0
 25235  0E0A  0022               	movlb	2	; select bank2
 25236  0E0B  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 25237  0E0C  3F01               	moviw [1]fsr0
 25238  0E0D  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 25239  0E0E  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 25240  0E0F  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 25241  0E10  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 25242  0E11  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 25243  0E12  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 25244  0E13  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 25245                           
 25246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 25247  0E14  0021               	movlb	1	; select bank1
 25248  0E15  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25249  0E16  0020               	movlb	0	; select bank0
 25250  0E17  00B1               	movwf	xtoa@fp+1
 25251  0E18  0021               	movlb	1	; select bank1
 25252  0E19  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25253  0E1A  0020               	movlb	0	; select bank0
 25254  0E1B  00B0               	movwf	xtoa@fp
 25255  0E1C  0022               	movlb	2	; select bank2
 25256  0E1D  0846               	movf	vfpfcnvrt@llu^(0+256),w
 25257  0E1E  0020               	movlb	0	; select bank0
 25258  0E1F  00B2               	movwf	xtoa@d
 25259  0E20  0022               	movlb	2	; select bank2
 25260  0E21  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 25261  0E22  0020               	movlb	0	; select bank0
 25262  0E23  00B3               	movwf	xtoa@d+1
 25263  0E24  0022               	movlb	2	; select bank2
 25264  0E25  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 25265  0E26  0020               	movlb	0	; select bank0
 25266  0E27  00B4               	movwf	xtoa@d+2
 25267  0E28  0022               	movlb	2	; select bank2
 25268  0E29  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 25269  0E2A  0020               	movlb	0	; select bank0
 25270  0E2B  00B5               	movwf	xtoa@d+3
 25271  0E2C  0022               	movlb	2	; select bank2
 25272  0E2D  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 25273  0E2E  0020               	movlb	0	; select bank0
 25274  0E2F  00B6               	movwf	xtoa@d+4
 25275  0E30  0022               	movlb	2	; select bank2
 25276  0E31  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 25277  0E32  0020               	movlb	0	; select bank0
 25278  0E33  00B7               	movwf	xtoa@d+5
 25279  0E34  0022               	movlb	2	; select bank2
 25280  0E35  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 25281  0E36  0020               	movlb	0	; select bank0
 25282  0E37  00B8               	movwf	xtoa@d+6
 25283  0E38  0022               	movlb	2	; select bank2
 25284  0E39  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 25285  0E3A  0020               	movlb	0	; select bank0
 25286  0E3B  00B9               	movwf	xtoa@d+7
 25287  0E3C  0022               	movlb	2	; select bank2
 25288  0E3D  0845               	movf	vfpfcnvrt@c^(0+256),w
 25289  0E3E  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25290  0E3F  0820               	movf	??_vfpfcnvrt^(0+256),w
 25291  0E40  0020               	movlb	0	; select bank0
 25292  0E41  00BA               	movwf	xtoa@x
 25293  0E42  3199  215A         	fcall	_xtoa
 25294  0E44  0020               	movlb	0	; select bank0
 25295  0E45  0831               	movf	?_xtoa+1,w
 25296  0E46  0021               	movlb	1	; select bank1
 25297  0E47  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 25298  0E48  0020               	movlb	0	; select bank0
 25299  0E49  0830               	movf	?_xtoa,w
 25300  0E4A  0021               	movlb	1	; select bank1
 25301  0E4B  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25302  0E4C  0008               	return
 25303  0E4D                     l8307:	
 25304                           
 25305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1285:      
      +                             if (!strncmp(*fmt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", 
      +                          ((sizeof("lX")/sizeof("lX"[0]))-1))) {
 25306  0E4D  0021               	movlb	1	; select bank1
 25307  0E4E  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25308  0E4F  0086               	movwf	6
 25309  0E50  3001               	movlw	1	; select bank2/3
 25310  0E51  0087               	movwf	7
 25311  0E52  3F40               	moviw [0]fsr1
 25312  0E53  00F1               	movwf	strncmp@_l
 25313  0E54  3F41               	moviw [1]fsr1
 25314  0E55  00F2               	movwf	strncmp@_l+1
 25315  0E56  3097               	movlw	low (STR_154| (0+32768))
 25316  0E57  00F3               	movwf	strncmp@_r
 25317  0E58  30BB               	movlw	high (STR_154| (0+32768))
 25318  0E59  00F4               	movwf	strncmp@_r+1
 25319  0E5A  3002               	movlw	2
 25320  0E5B  00F5               	movwf	strncmp@n
 25321  0E5C  3000               	movlw	0
 25322  0E5D  00F6               	movwf	strncmp@n+1
 25323  0E5E  31B2  22A4  3188   	fcall	_strncmp
 25324  0E61  0871               	movf	?_strncmp,w
 25325  0E62  0472               	iorwf	?_strncmp+1,w
 25326  0E63  1903               	btfsc	3,2
 25327  0E64  2E7D               	goto	l8311
 25328  0E65  0021               	movlb	1	; select bank1
 25329  0E66  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25330  0E67  0086               	movwf	6
 25331  0E68  3001               	movlw	1	; select bank2/3
 25332  0E69  0087               	movwf	7
 25333  0E6A  3F40               	moviw [0]fsr1
 25334  0E6B  00F1               	movwf	strncmp@_l
 25335  0E6C  3F41               	moviw [1]fsr1
 25336  0E6D  00F2               	movwf	strncmp@_l+1
 25337  0E6E  3070               	movlw	low (STR_158| (0+32768))
 25338  0E6F  00F3               	movwf	strncmp@_r
 25339  0E70  30BB               	movlw	high (STR_158| (0+32768))
 25340  0E71  00F4               	movwf	strncmp@_r+1
 25341  0E72  3002               	movlw	2
 25342  0E73  00F5               	movwf	strncmp@n
 25343  0E74  3000               	movlw	0
 25344  0E75  00F6               	movwf	strncmp@n+1
 25345  0E76  31B2  22A4  3188   	fcall	_strncmp
 25346  0E79  0871               	movf	?_strncmp,w
 25347  0E7A  0472               	iorwf	?_strncmp+1,w
 25348  0E7B  1D03               	btfss	3,2
 25349  0E7C  2F04               	goto	l8321
 25350  0E7D                     l8311:	
 25351                           
 25352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1286: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1288:           
      +                            c = (*fmt)[1];
 25353  0E7D  0021               	movlb	1	; select bank1
 25354  0E7E  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25355  0E7F  0086               	movwf	6
 25356  0E80  3001               	movlw	1	; select bank2/3
 25357  0E81  0087               	movwf	7
 25358  0E82  3F40               	moviw [0]fsr1
 25359  0E83  0022               	movlb	2	; select bank2
 25360  0E84  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25361  0E85  3F41               	moviw [1]fsr1
 25362  0E86  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25363  0E87  3001               	movlw	1
 25364  0E88  0720               	addwf	??_vfpfcnvrt^(0+256),w
 25365  0E89  0084               	movwf	4
 25366  0E8A  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 25367  0E8B  1803               	skipnc
 25368  0E8C  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 25369  0E8D  0085               	movwf	5
 25370  0E8E  0800               	movf	0,w	;code access
 25371  0E8F  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25372  0E90  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25373  0E91  00C5               	movwf	vfpfcnvrt@c^(0+256)
 25374                           
 25375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1289:      
      +                                 *fmt += ((sizeof("lx")/sizeof("lx"[0]))-1);
 25376  0E92  0021               	movlb	1	; select bank1
 25377  0E93  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25378  0E94  0086               	movwf	6
 25379  0E95  3001               	movlw	1	; select bank2/3
 25380  0E96  0087               	movwf	7
 25381  0E97  3002               	movlw	2
 25382  0E98  0781               	addwf	1,f
 25383  0E99  3141               	addfsr 1,1
 25384  0E9A  1803               	skipnc
 25385  0E9B  0A81               	incf	1,f
 25386                           
 25387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1290:      
      +                                 llu = (unsigned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (uns
      +                          igned long)0));
 25388  0E9C  086F               	movf	vfpfcnvrt@ap^(0+128),w
 25389  0E9D  0086               	movwf	6
 25390  0E9E  3001               	movlw	1	; select bank2/3
 25391  0E9F  0087               	movwf	7
 25392  0EA0  0801               	movf	1,w
 25393  0EA1  0084               	movwf	4
 25394  0EA2  3001               	movlw	1	; select bank2/3
 25395  0EA3  0085               	movwf	5
 25396  0EA4  3004               	movlw	4
 25397  0EA5  0781               	addwf	1,f
 25398  0EA6  3F00               	moviw [0]fsr0
 25399  0EA7  0022               	movlb	2	; select bank2
 25400  0EA8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25401  0EA9  3F01               	moviw [1]fsr0
 25402  0EAA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25403  0EAB  3F02               	moviw [2]fsr0
 25404  0EAC  00A2               	movwf	(??_vfpfcnvrt^(0+256)+2)
 25405  0EAD  3F03               	moviw [3]fsr0
 25406  0EAE  00A3               	movwf	(??_vfpfcnvrt^(0+256)+3)
 25407  0EAF  0820               	movf	??_vfpfcnvrt^(0+256),w
 25408  0EB0  00A4               	movwf	(??_vfpfcnvrt+4)^(0+256)
 25409  0EB1  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25410  0EB2  00A5               	movwf	((??_vfpfcnvrt+4)^(0+256)+1)
 25411  0EB3  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25412  0EB4  00A6               	movwf	((??_vfpfcnvrt+4)^(0+256)+2)
 25413  0EB5  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 25414  0EB6  00A7               	movwf	((??_vfpfcnvrt+4)^(0+256)+3)
 25415  0EB7  01A8               	clrf	((??_vfpfcnvrt+4)^(0+256)+4)
 25416  0EB8  01A9               	clrf	((??_vfpfcnvrt+4)^(0+256)+5)
 25417  0EB9  01AA               	clrf	((??_vfpfcnvrt+4)^(0+256)+6)
 25418  0EBA  01AB               	clrf	((??_vfpfcnvrt+4)^(0+256)+7)
 25419  0EBB  082B               	movf	((??_vfpfcnvrt+4)^(0+256)+7),w
 25420  0EBC  00CD               	movwf	(vfpfcnvrt@llu+7)^(0+256)
 25421  0EBD  082A               	movf	((??_vfpfcnvrt+4)^(0+256)+6),w
 25422  0EBE  00CC               	movwf	(vfpfcnvrt@llu+6)^(0+256)
 25423  0EBF  0829               	movf	((??_vfpfcnvrt+4)^(0+256)+5),w
 25424  0EC0  00CB               	movwf	(vfpfcnvrt@llu+5)^(0+256)
 25425  0EC1  0828               	movf	((??_vfpfcnvrt+4)^(0+256)+4),w
 25426  0EC2  00CA               	movwf	(vfpfcnvrt@llu+4)^(0+256)
 25427  0EC3  0827               	movf	((??_vfpfcnvrt+4)^(0+256)+3),w
 25428  0EC4  00C9               	movwf	(vfpfcnvrt@llu+3)^(0+256)
 25429  0EC5  0826               	movf	((??_vfpfcnvrt+4)^(0+256)+2),w
 25430  0EC6  00C8               	movwf	(vfpfcnvrt@llu+2)^(0+256)
 25431  0EC7  0825               	movf	((??_vfpfcnvrt+4)^(0+256)+1),w
 25432  0EC8  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 25433  0EC9  0824               	movf	(??_vfpfcnvrt+4)^(0+256),w
 25434  0ECA  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 25435                           
 25436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1292:      
      +                                 return xtoa(fp, llu, c);
 25437  0ECB  0021               	movlb	1	; select bank1
 25438  0ECC  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25439  0ECD  0020               	movlb	0	; select bank0
 25440  0ECE  00B1               	movwf	xtoa@fp+1
 25441  0ECF  0021               	movlb	1	; select bank1
 25442  0ED0  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25443  0ED1  0020               	movlb	0	; select bank0
 25444  0ED2  00B0               	movwf	xtoa@fp
 25445  0ED3  0022               	movlb	2	; select bank2
 25446  0ED4  0846               	movf	vfpfcnvrt@llu^(0+256),w
 25447  0ED5  0020               	movlb	0	; select bank0
 25448  0ED6  00B2               	movwf	xtoa@d
 25449  0ED7  0022               	movlb	2	; select bank2
 25450  0ED8  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 25451  0ED9  0020               	movlb	0	; select bank0
 25452  0EDA  00B3               	movwf	xtoa@d+1
 25453  0EDB  0022               	movlb	2	; select bank2
 25454  0EDC  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 25455  0EDD  0020               	movlb	0	; select bank0
 25456  0EDE  00B4               	movwf	xtoa@d+2
 25457  0EDF  0022               	movlb	2	; select bank2
 25458  0EE0  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 25459  0EE1  0020               	movlb	0	; select bank0
 25460  0EE2  00B5               	movwf	xtoa@d+3
 25461  0EE3  0022               	movlb	2	; select bank2
 25462  0EE4  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 25463  0EE5  0020               	movlb	0	; select bank0
 25464  0EE6  00B6               	movwf	xtoa@d+4
 25465  0EE7  0022               	movlb	2	; select bank2
 25466  0EE8  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 25467  0EE9  0020               	movlb	0	; select bank0
 25468  0EEA  00B7               	movwf	xtoa@d+5
 25469  0EEB  0022               	movlb	2	; select bank2
 25470  0EEC  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 25471  0EED  0020               	movlb	0	; select bank0
 25472  0EEE  00B8               	movwf	xtoa@d+6
 25473  0EEF  0022               	movlb	2	; select bank2
 25474  0EF0  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 25475  0EF1  0020               	movlb	0	; select bank0
 25476  0EF2  00B9               	movwf	xtoa@d+7
 25477  0EF3  0022               	movlb	2	; select bank2
 25478  0EF4  0845               	movf	vfpfcnvrt@c^(0+256),w
 25479  0EF5  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25480  0EF6  0820               	movf	??_vfpfcnvrt^(0+256),w
 25481  0EF7  0020               	movlb	0	; select bank0
 25482  0EF8  00BA               	movwf	xtoa@x
 25483  0EF9  3199  215A         	fcall	_xtoa
 25484  0EFB  0020               	movlb	0	; select bank0
 25485  0EFC  0831               	movf	?_xtoa+1,w
 25486  0EFD  0021               	movlb	1	; select bank1
 25487  0EFE  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 25488  0EFF  0020               	movlb	0	; select bank0
 25489  0F00  0830               	movf	?_xtoa,w
 25490  0F01  0021               	movlb	1	; select bank1
 25491  0F02  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25492  0F03  0008               	return
 25493  0F04                     l8321:	
 25494                           
 25495                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 25496  0F04  0021               	movlb	1	; select bank1
 25497  0F05  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25498  0F06  0086               	movwf	6
 25499  0F07  3001               	movlw	1	; select bank2/3
 25500  0F08  0087               	movwf	7
 25501  0F09  3F40               	moviw [0]fsr1
 25502  0F0A  00F1               	movwf	strncmp@_l
 25503  0F0B  3F41               	moviw [1]fsr1
 25504  0F0C  00F2               	movwf	strncmp@_l+1
 25505  0F0D  309A               	movlw	low (STR_163| (0+32768))
 25506  0F0E  00F3               	movwf	strncmp@_r
 25507  0F0F  30BB               	movlw	high (STR_163| (0+32768))
 25508  0F10  00F4               	movwf	strncmp@_r+1
 25509  0F11  3002               	movlw	2
 25510  0F12  00F5               	movwf	strncmp@n
 25511  0F13  3000               	movlw	0
 25512  0F14  00F6               	movwf	strncmp@n+1
 25513  0F15  31B2  22A4  3188   	fcall	_strncmp
 25514  0F18  0871               	movf	?_strncmp,w
 25515  0F19  0472               	iorwf	?_strncmp+1,w
 25516  0F1A  1903               	btfsc	3,2
 25517  0F1B  2F34               	goto	l8325
 25518  0F1C  0021               	movlb	1	; select bank1
 25519  0F1D  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25520  0F1E  0086               	movwf	6
 25521  0F1F  3001               	movlw	1	; select bank2/3
 25522  0F20  0087               	movwf	7
 25523  0F21  3F40               	moviw [0]fsr1
 25524  0F22  00F1               	movwf	strncmp@_l
 25525  0F23  3F41               	moviw [1]fsr1
 25526  0F24  00F2               	movwf	strncmp@_l+1
 25527  0F25  3073               	movlw	low (STR_167| (0+32768))
 25528  0F26  00F3               	movwf	strncmp@_r
 25529  0F27  30BB               	movlw	high (STR_167| (0+32768))
 25530  0F28  00F4               	movwf	strncmp@_r+1
 25531  0F29  3002               	movlw	2
 25532  0F2A  00F5               	movwf	strncmp@n
 25533  0F2B  3000               	movlw	0
 25534  0F2C  00F6               	movwf	strncmp@n+1
 25535  0F2D  31B2  22A4  3188   	fcall	_strncmp
 25536  0F30  0871               	movf	?_strncmp,w
 25537  0F31  0472               	iorwf	?_strncmp+1,w
 25538  0F32  1D03               	btfss	3,2
 25539  0F33  2FA1               	goto	l8335
 25540  0F34                     l8325:	
 25541                           
 25542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 25543  0F34  0021               	movlb	1	; select bank1
 25544  0F35  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25545  0F36  0086               	movwf	6
 25546  0F37  3001               	movlw	1	; select bank2/3
 25547  0F38  0087               	movwf	7
 25548  0F39  3F40               	moviw [0]fsr1
 25549  0F3A  0022               	movlb	2	; select bank2
 25550  0F3B  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25551  0F3C  3F41               	moviw [1]fsr1
 25552  0F3D  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25553  0F3E  3001               	movlw	1
 25554  0F3F  0720               	addwf	??_vfpfcnvrt^(0+256),w
 25555  0F40  0084               	movwf	4
 25556  0F41  0821               	movf	(??_vfpfcnvrt^(0+256)+1),w
 25557  0F42  1803               	skipnc
 25558  0F43  0A21               	incf	(??_vfpfcnvrt^(0+256)+1),w
 25559  0F44  0085               	movwf	5
 25560  0F45  0800               	movf	0,w	;code access
 25561  0F46  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25562  0F47  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25563  0F48  00C5               	movwf	vfpfcnvrt@c^(0+256)
 25564                           
 25565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 25566  0F49  0021               	movlb	1	; select bank1
 25567  0F4A  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25568  0F4B  0086               	movwf	6
 25569  0F4C  3001               	movlw	1	; select bank2/3
 25570  0F4D  0087               	movwf	7
 25571  0F4E  3002               	movlw	2
 25572  0F4F  0781               	addwf	1,f
 25573  0F50  3141               	addfsr 1,1
 25574  0F51  1803               	skipnc
 25575  0F52  0A81               	incf	1,f
 25576                           
 25577                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 25578  0F53  086F               	movf	vfpfcnvrt@ap^(0+128),w
 25579  0F54  0086               	movwf	6
 25580  0F55  3001               	movlw	1	; select bank2/3
 25581  0F56  0087               	movwf	7
 25582  0F57  0801               	movf	1,w
 25583  0F58  0084               	movwf	4
 25584  0F59  3001               	movlw	1	; select bank2/3
 25585  0F5A  0085               	movwf	5
 25586  0F5B  3002               	movlw	2
 25587  0F5C  0781               	addwf	1,f
 25588  0F5D  3F00               	moviw [0]fsr0
 25589  0F5E  0022               	movlb	2	; select bank2
 25590  0F5F  00C6               	movwf	vfpfcnvrt@llu^(0+256)
 25591  0F60  3F01               	moviw [1]fsr0
 25592  0F61  00C7               	movwf	(vfpfcnvrt@llu+1)^(0+256)
 25593  0F62  01C8               	clrf	(vfpfcnvrt@llu+2)^(0+256)
 25594  0F63  01C9               	clrf	(vfpfcnvrt@llu+3)^(0+256)
 25595  0F64  01CA               	clrf	(vfpfcnvrt@llu+4)^(0+256)
 25596  0F65  01CB               	clrf	(vfpfcnvrt@llu+5)^(0+256)
 25597  0F66  01CC               	clrf	(vfpfcnvrt@llu+6)^(0+256)
 25598  0F67  01CD               	clrf	(vfpfcnvrt@llu+7)^(0+256)
 25599                           
 25600                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 25601  0F68  0021               	movlb	1	; select bank1
 25602  0F69  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25603  0F6A  0020               	movlb	0	; select bank0
 25604  0F6B  00B1               	movwf	xtoa@fp+1
 25605  0F6C  0021               	movlb	1	; select bank1
 25606  0F6D  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25607  0F6E  0020               	movlb	0	; select bank0
 25608  0F6F  00B0               	movwf	xtoa@fp
 25609  0F70  0022               	movlb	2	; select bank2
 25610  0F71  0846               	movf	vfpfcnvrt@llu^(0+256),w
 25611  0F72  0020               	movlb	0	; select bank0
 25612  0F73  00B2               	movwf	xtoa@d
 25613  0F74  0022               	movlb	2	; select bank2
 25614  0F75  0847               	movf	(vfpfcnvrt@llu+1)^(0+256),w
 25615  0F76  0020               	movlb	0	; select bank0
 25616  0F77  00B3               	movwf	xtoa@d+1
 25617  0F78  0022               	movlb	2	; select bank2
 25618  0F79  0848               	movf	(vfpfcnvrt@llu+2)^(0+256),w
 25619  0F7A  0020               	movlb	0	; select bank0
 25620  0F7B  00B4               	movwf	xtoa@d+2
 25621  0F7C  0022               	movlb	2	; select bank2
 25622  0F7D  0849               	movf	(vfpfcnvrt@llu+3)^(0+256),w
 25623  0F7E  0020               	movlb	0	; select bank0
 25624  0F7F  00B5               	movwf	xtoa@d+3
 25625  0F80  0022               	movlb	2	; select bank2
 25626  0F81  084A               	movf	(vfpfcnvrt@llu+4)^(0+256),w
 25627  0F82  0020               	movlb	0	; select bank0
 25628  0F83  00B6               	movwf	xtoa@d+4
 25629  0F84  0022               	movlb	2	; select bank2
 25630  0F85  084B               	movf	(vfpfcnvrt@llu+5)^(0+256),w
 25631  0F86  0020               	movlb	0	; select bank0
 25632  0F87  00B7               	movwf	xtoa@d+5
 25633  0F88  0022               	movlb	2	; select bank2
 25634  0F89  084C               	movf	(vfpfcnvrt@llu+6)^(0+256),w
 25635  0F8A  0020               	movlb	0	; select bank0
 25636  0F8B  00B8               	movwf	xtoa@d+6
 25637  0F8C  0022               	movlb	2	; select bank2
 25638  0F8D  084D               	movf	(vfpfcnvrt@llu+7)^(0+256),w
 25639  0F8E  0020               	movlb	0	; select bank0
 25640  0F8F  00B9               	movwf	xtoa@d+7
 25641  0F90  0022               	movlb	2	; select bank2
 25642  0F91  0845               	movf	vfpfcnvrt@c^(0+256),w
 25643  0F92  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25644  0F93  0820               	movf	??_vfpfcnvrt^(0+256),w
 25645  0F94  0020               	movlb	0	; select bank0
 25646  0F95  00BA               	movwf	xtoa@x
 25647  0F96  3199  215A         	fcall	_xtoa
 25648  0F98  0020               	movlb	0	; select bank0
 25649  0F99  0831               	movf	?_xtoa+1,w
 25650  0F9A  0021               	movlb	1	; select bank1
 25651  0F9B  00ED               	movwf	(?_vfpfcnvrt+1)^(0+128)
 25652  0F9C  0020               	movlb	0	; select bank0
 25653  0F9D  0830               	movf	?_xtoa,w
 25654  0F9E  0021               	movlb	1	; select bank1
 25655  0F9F  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25656  0FA0  0008               	return
 25657  0FA1                     l8335:	
 25658                           
 25659                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 25660  0FA1  0021               	movlb	1	; select bank1
 25661  0FA2  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25662  0FA3  0086               	movwf	6
 25663  0FA4  3001               	movlw	1	; select bank2/3
 25664  0FA5  0087               	movwf	7
 25665  0FA6  3F40               	moviw [0]fsr1
 25666  0FA7  0022               	movlb	2	; select bank2
 25667  0FA8  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25668  0FA9  3F41               	moviw [1]fsr1
 25669  0FAA  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25670  0FAB  0820               	movf	??_vfpfcnvrt^(0+256),w
 25671  0FAC  0084               	movwf	4
 25672  0FAD  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25673  0FAE  0085               	movwf	5
 25674  0FAF  0012               	moviw fsr0++
 25675  0FB0  3A25               	xorlw	37
 25676  0FB1  1D03               	btfss	3,2
 25677  0FB2  2FCD               	goto	l8345
 25678                           
 25679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 25680  0FB3  0021               	movlb	1	; select bank1
 25681  0FB4  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25682  0FB5  0086               	movwf	6
 25683  0FB6  3001               	movlw	1	; select bank2/3
 25684  0FB7  0087               	movwf	7
 25685  0FB8  3001               	movlw	1
 25686  0FB9  0781               	addwf	1,f
 25687  0FBA  3141               	addfsr 1,1
 25688  0FBB  1803               	skipnc
 25689  0FBC  0A81               	incf	1,f
 25690                           
 25691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 25692  0FBD  3025               	movlw	37
 25693  0FBE  00F1               	movwf	fputc@c
 25694  0FBF  3000               	movlw	0
 25695  0FC0  00F2               	movwf	fputc@c+1
 25696  0FC1  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25697  0FC2  00F4               	movwf	fputc@fp+1
 25698  0FC3  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25699  0FC4  00F3               	movwf	fputc@fp
 25700  0FC5  31B2  22F6         	fcall	_fputc
 25701  0FC7                     l8341:	
 25702                           
 25703                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 25704  0FC7  3001               	movlw	1
 25705  0FC8  0021               	movlb	1	; select bank1
 25706  0FC9  00EC               	movwf	?_vfpfcnvrt^(0+128)
 25707  0FCA  3000               	movlw	0
 25708  0FCB  00ED               	movwf	(?_vfpfcnvrt^(0+128)+1)
 25709  0FCC  0008               	return
 25710  0FCD                     l8345:	
 25711                           
 25712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 25713  0FCD  0021               	movlb	1	; select bank1
 25714  0FCE  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25715  0FCF  0086               	movwf	6
 25716  0FD0  3001               	movlw	1	; select bank2/3
 25717  0FD1  0087               	movwf	7
 25718  0FD2  3001               	movlw	1
 25719  0FD3  0781               	addwf	1,f
 25720  0FD4  3141               	addfsr 1,1
 25721  0FD5  1803               	skipnc
 25722  0FD6  0A81               	incf	1,f
 25723  0FD7  2948               	goto	l8143
 25724  0FD8                     l8351:	
 25725                           
 25726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 25727  0FD8  0021               	movlb	1	; select bank1
 25728  0FD9  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25729  0FDA  0086               	movwf	6
 25730  0FDB  3001               	movlw	1	; select bank2/3
 25731  0FDC  0087               	movwf	7
 25732  0FDD  3F40               	moviw [0]fsr1
 25733  0FDE  0022               	movlb	2	; select bank2
 25734  0FDF  00A0               	movwf	??_vfpfcnvrt^(0+256)
 25735  0FE0  3F41               	moviw [1]fsr1
 25736  0FE1  00A1               	movwf	(??_vfpfcnvrt^(0+256)+1)
 25737  0FE2  0820               	movf	??_vfpfcnvrt^(0+256),w
 25738  0FE3  0084               	movwf	4
 25739  0FE4  0821               	movf	(??_vfpfcnvrt+1)^(0+256),w
 25740  0FE5  0085               	movwf	5
 25741  0FE6  0800               	movf	0,w	;code access
 25742  0FE7  00A2               	movwf	(??_vfpfcnvrt+2)^(0+256)
 25743  0FE8  01A3               	clrf	((??_vfpfcnvrt+2)^(0+256)+1)
 25744  0FE9  0822               	movf	(??_vfpfcnvrt+2)^(0+256),w
 25745  0FEA  00F1               	movwf	fputc@c
 25746  0FEB  0823               	movf	(??_vfpfcnvrt+3)^(0+256),w
 25747  0FEC  00F2               	movwf	fputc@c+1
 25748  0FED  0021               	movlb	1	; select bank1
 25749  0FEE  086D               	movf	(vfpfcnvrt@fp+1)^(0+128),w
 25750  0FEF  00F4               	movwf	fputc@fp+1
 25751  0FF0  086C               	movf	vfpfcnvrt@fp^(0+128),w
 25752  0FF1  00F3               	movwf	fputc@fp
 25753  0FF2  31B2  22F6  3188   	fcall	_fputc
 25754                           
 25755                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 25756  0FF5  0021               	movlb	1	; select bank1
 25757  0FF6  086E               	movf	vfpfcnvrt@fmt^(0+128),w
 25758  0FF7  0086               	movwf	6
 25759  0FF8  3001               	movlw	1	; select bank2/3
 25760  0FF9  0087               	movwf	7
 25761  0FFA  3001               	movlw	1
 25762  0FFB  0781               	addwf	1,f
 25763  0FFC  3141               	addfsr 1,1
 25764  0FFD  1803               	skipnc
 25765  0FFE  0A81               	incf	1,f
 25766  0FFF  2FC7               	goto	l8341
 25767  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     835
    Constant    90
    Data        7
    BSS         152
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     80      80
    BANK3            80     26      77
    BANK4            80      0      27
    BANK5            80      0      80
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_169(CODE[3]), STR_165(CODE[3]), STR_160(CODE[3]), STR_156(CODE[3]), 
		 -> STR_151(CODE[3]), STR_147(CODE[3]), STR_142(CODE[4]), STR_138(CODE[4]), 
		 -> STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), 
		 -> STR_113(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[4]), 
		 -> STR_93(CODE[3]), STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[4]), 
		 -> STR_73(CODE[3]), STR_68(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), 
		 -> STR_55(CODE[3]), STR_50(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_37(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_169(CODE[3]), STR_165(CODE[3]), STR_160(CODE[3]), STR_156(CODE[3]), 
		 -> STR_151(CODE[3]), STR_147(CODE[3]), STR_142(CODE[4]), STR_138(CODE[4]), 
		 -> STR_133(CODE[3]), STR_128(CODE[3]), STR_123(CODE[3]), STR_118(CODE[4]), 
		 -> STR_113(CODE[3]), STR_108(CODE[3]), STR_103(CODE[3]), STR_98(CODE[4]), 
		 -> STR_93(CODE[3]), STR_88(CODE[3]), STR_83(CODE[3]), STR_78(CODE[4]), 
		 -> STR_73(CODE[3]), STR_68(CODE[3]), STR_64(CODE[3]), STR_59(CODE[3]), 
		 -> STR_55(CODE[3]), STR_50(CODE[3]), STR_46(CODE[3]), STR_41(CODE[4]), 
		 -> STR_37(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), 
		 -> STR_6(CODE[42]), STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 57
		 -> vfpfcnvrt@ct(BANK2[3]), STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), 
		 -> STR_22(CODE[20]), STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), 
		 -> STR_18(CODE[21]), STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[21]), STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), 
		 -> STR_6(CODE[42]), STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK3[2]), stoa@nuls(BANK0[7]), dbuf(BANK5[80]), adcGain(BANK3[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_snprintf(BANK3[2]), stoa@nuls(BANK0[7]), dbuf(BANK5[80]), adcGain(BANK3[2]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_28(CODE[4]), STR_27(CODE[4]), 
		 -> dbuf(BANK5[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_28(CODE[4]), STR_27(CODE[4]), 
		 -> dbuf(BANK5[80]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    S1818_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 57
		 -> STR_25(CODE[18]), STR_24(CODE[18]), STR_23(CODE[19]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[21]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[21]), STR_14(CODE[21]), 
		 -> STR_11(CODE[52]), STR_8(CODE[57]), STR_7(CODE[44]), STR_6(CODE[42]), 
		 -> STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), adcGain(BANK3[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), adcGain(BANK3[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK2[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK3[2]), adcGain(BANK3[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK3[2]), stoa@nuls(BANK0[7]), adcGain(BANK3[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK2[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK5[80]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_26(CODE[3]), STR_13(CODE[3]), STR_12(CODE[38]), STR_10(CODE[45]), 
		 -> STR_9(CODE[42]), STR_5(CODE[3]), STR_4(CODE[53]), messageBuffer(BIGRAM[127]), 
		 -> STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _efgtoa->___fltol
    _tolower->_isupper
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    _updateVoltages->___fltol
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    ___flmul->__Umul8_16
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _vsnprintf->_vfprintf
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _efgtoa->___fladd
    _efgtoa->_floorf
    _floorf->___fldiv
    ___flsub->___fladd
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _updateVoltages->___fladd
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_getSetShortCircuitCurrent->___fltol
    _AFE_getOverCurrentDischargeCurrent->___fltol
    _AFE_UPDATE->_updateVoltages
    _updateVoltages->___fltol

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_statemachine
    _statemachine->_printotAFERegisters
    _printotAFERegisters->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    _statemachine->_snprintf
    _printotAFERegisters->_snprintf
    _printcellParameters->_snprintf

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  387315
                                             24 BANK3      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     402
                                              3 COMMON     2     2      0
                          _RGB_color
                       _shutdown_BMS
 ---------------------------------------------------------------------------------
 (2) _shutdown_BMS                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  384535
                                             77 BANK2      3     3      0
                         _AFE_UPDATE
 _AFE_getOverCurrentDischargeCurrent
          _AFE_getSetCurrentSenseRes
      _AFE_getSetShortCircuitCurrent
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                _printotAFERegisters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printotAFERegisters                                  1     1      0  101450
                                             76 BANK2      1     1      0
                  _EUSART_Write_Text
                       _readRegister
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   95595
                  _EUSART_Write_Text
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            28     4     24   93507
                                             72 BANK2      4     4      0
                                              0 BANK3     24     0     24
 _AFE_getOverCurrentDischargeCurrent (ARG)
          _AFE_getSetCurrentSenseRes (ARG)
      _AFE_getSetShortCircuitCurrent (ARG)
                       _readRegister (ARG)
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   88582
                                             53 BANK2     19    12      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   87545
                                             78 BANK0      2     2      0
                                             46 BANK2      7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           52    48      4   86683
                                             76 BANK1      4     0      4
                                              0 BANK2     46    46      0
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _otoa
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    9106
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7249
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    6837
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                22    19      3    2280
                                             10 COMMON     2     2      0
                                              0 BANK0     20    17      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6729
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              67    60      7   28319
                                              9 BANK1     67    60      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2    1232
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     641
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             58 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              1 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2789
                                              0 BANK1      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     490
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     448
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              9     5      4     452
                                              1 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7932
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5680
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5420
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     164
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    2088
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   52201
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   12576
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   12576
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1094
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   12855
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   12852
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    9087
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    3096
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     402
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     402
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetShortCircuitCurrent                        8     4      4    4560
                                              9 BANK1      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _AFE_getSetCurrentSenseRes                            4     0      4       0
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _AFE_getOverCurrentDischargeCurrent                   8     4      4    4560
                                              9 BANK1      8     4      4
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0   20649
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   20649
                                              9 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    5855
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     250
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     500
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1082
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             11     7      4     685
                                             10 COMMON     2     2      0
                                              0 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             26    18      8    4089
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    2793
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             20    12      8    2440
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _AFE_getOverCurrentDischargeCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _AFE_getSetCurrentSenseRes
     _AFE_getSetShortCircuitCurrent
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _snprintf
         _AFE_getOverCurrentDischargeCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _AFE_getSetCurrentSenseRes (ARG)
         _AFE_getSetShortCircuitCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _printotAFERegisters
       _EUSART_Write_Text
         _EUSART_Write
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _snprintf
         _AFE_getOverCurrentDischargeCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _AFE_getSetCurrentSenseRes (ARG)
         _AFE_getSetShortCircuitCurrent (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister (ARG)
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _vsnprintf (ARG)
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fleq
                 ___flge
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___fldiv (ARG)
                       ___flmul (ARG)
                         __Umul8_16
                         ___xxtofl (ARG)
                       ___xxtofl (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _AFE_getOverCurrentDischargeCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _AFE_getSetCurrentSenseRes (ARG)
       _AFE_getSetShortCircuitCurrent (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _readRegister (ARG)
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _vsnprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fleq
               ___flge
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___xxtofl (ARG)
                     ___xxtofl (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color
     _shutdown_BMS

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     1A      4D      11       96.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      1B      13       33.8%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1B5      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      50      16      100.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1B5      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Feb 26 19:20:57 2020

          __end_of_setShortCircuitProtection 07E9                               _maxCellVoltage 01BC  
                      __end_of_send_I2C_data 3D3B                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 152D  
                               ___fldiv@sign 0051                                  __CFG_CP$OFF 0000  
                               _shutdown_BMS 3000                                 ___awdiv@sign 0077  
                        ___wmul@multiplicand 0073                        _setShuntResistorValue 3D58  
                        __Umul8_16@word_mpld 0077                                          l301 3D14  
                                        l307 3D1C                                          l341 3EC1  
                                        l430 2BCD                                          l319 3D2E  
                                        l343 3EC6                                          l344 3ECB  
                                        l248 2801                                          l345 3EE0  
                                        l169 27FF                                          l283 3D37  
                                        l295 3D4A                                          l623 3218  
                                        l289 3D76                                          l705 02D2  
                                        l626 3238                                          l643 186E  
                                        l723 0499                                          l644 1882  
                                        l813 197C                                          l638 184C  
                                        l647 1918                                          l639 1853  
                                        l760 227E                                          l809 1961  
                                        l834 1A7F                                          l850 1374  
                                        l755 21CE                                          l843 132A  
                                        l941 3E18                                          l845 1337  
                                        l694 029E                                          l766 2289  
                                        l846 133A                                          l695 028B  
                                        l759 21E9                                          l847 133D  
                                        l848 1340                                          l777 2C15  
                                        l786 2C70                                          l794 2F26  
                                        l798 2F41                          __size_of_AFE_UPDATE 0003  
                                        _abs 3DB0                               RGB_color@color 0071  
                                        _pad 3202                                 ___awmod@sign 0077  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                               __CFG_IESO$ON 0000                                 ___flmul@aexp 0038  
                               ___flmul@bexp 0039       setCellOvervoltageProtection@voltage_mV 0032  
    setCellUndervoltageProtection@voltage_mV 0032                                 ___flmul@sign 0033  
                               ___flmul@temp 003E                                 ___flmul@prod 003A  
                               _statemachine 26CC                                 __CFG_LVP$OFF 0000  
                               ___fltol@exp1 007B                                         l1006 370B  
                                       l1110 31D4                                         l1111 31EE  
                                       l1041 2399                                         l1122 366B  
                                       ?_abs 0074                                         l1142 3498  
                                       l1054 20CB                                         l1119 361D  
                                       l1320 1C1B                                         l1242 1C7A  
                                       l1322 1C28                                         l1246 1D0D  
                                       l1350 12F4                                         l1174 36E9  
                                       l1263 1D90                                         l1319 1C03  
                                       l1248 1CF0                                         l1184 350C  
                                       l1450 2E3B                                         l1427 2A3E  
                                       l1284 1E07                                         l1276 1DEF  
                                       l1390 29B1                                         l1382 2993  
                                       l1560 3E92                                         l1376 295D  
                                       l1298 1AFC                                         l5021 3461  
                                       l1389 29A7                                         l5201 1BC0  
                                       l5113 1AD0                                         l5017 3458  
                                       l6001 32DE                                         l5115 1AD8  
                                       l6003 32B9                                         l4501 1C47  
                                       l5205 1BC2                                         l5133 1AF4  
                                       l5109 1ACD                                         l5037 3486  
                                       l5061 3695                                         l5215 1BEB  
                                       l5143 1B1B                                         l5047 34A5  
                                       l5039 3494                                         l5071 36DD  
                                       l5063 36A4                                         l4601 1D2F  
                                       l4505 1C4A                                         l5129 1AF1  
                                       l6009 32E5                                         l5081 34C1  
                                       l4507 1C52                                         l5331 125C  
                                       l5251 10F1                                         l5083 34D0  
                                       l4525 1C6F                                         l5229 1C24  
                                       l5149 1B27                                         l5333 1273  
                                       l5253 10F9                                         l4453 32FE  
                                       ?_pad 0026                                         l4535 1C84  
                                       l5175 1B87                                         l5343 128C  
                                       l5271 111C                                         l4455 3302  
                                       l4471 280C                                         l5087 3500  
                                       l4641 1DB6                                         l4609 1D3E  
                                       l4529 1C72                                         l5193 1B92  
                                       l5169 1B6E                                         l5177 1B50  
                                       l5353 12B5                                         l5249 10EF  
                                       l4635 1DAF                                         l4627 1DA2  
                                       l4619 1D88                                         l4643 1DB8  
                                       l5195 1BA9                                         l5179 1B8C  
                                       l5363 12E1                                         l5339 128A  
                                       l5267 1112                                         l4459 3329  
                                       l8011 28E4                                         l4653 1DC3  
                                       l4573 1CF8                                         l4565 1CC0  
                                       l5357 12CA                                         l5269 1114  
                                       l4813 3E12                                         l4477 3D9D  
                                       l7301 3F78                                         l4901 325D  
                                       l4671 1DFF                                         l4591 1D1B  
                                       l4575 1CFA                                         l4583 1D08  
                                       l5279 112A                                         l5383 3E3F  
                                       l4479 3DA9                                         l7303 3F81  
                                       l4831 22E2                                         l4735 35D5  
                                       l4751 3EAA                                         l8031 2526  
                                       l8023 24CD                                         l8007 28B4  
                                       l4649 1DC1                                         l4745 35FD  
                                       l8105 20DD                                         l4675 1E03  
                                       l6611 2980                                         l7251 3216  
                                       l4835 2309                                         l7323 1866  
                                       l4907 3268                                         l4739 35DA  
                                       l8115 2141                                         l8043 377C  
                                       l8035 2556                                         l8019 24A9  
                                       l4685 3E8C                                         l6621 2998  
                                       l6605 296C                                         l7261 3244  
                                       l4837 230D                                         l7333 18AF  
                                       l4933 329F                                         l4925 328E  
                                       l4917 3270                                         l4781 2DF4  
                                       l8205 0A1E                                         l8125 080C  
                                       l4599 1D2D                                         l7247 320E  
                                       l4847 2324                                         l7343 188A  
                                       l7351 1924                                         l4919 327C  
                                       l4783 2E05                                         l7503 02FB  
                                       l8311 0E7D                                         l8215 0A61  
                                       l8143 0948                                         l8135 0876  
                                       l8055 23AB                                         l8047 37AC  
                                       l6633 29CC                                         l6609 2970  
                                       l6713 078D                                         l7257 321A  
                                       l4857 236C                                         l4849 2333  
                                       l4881 205F                                         l4873 2052  
                                       l7361 1937                                         l7329 187D  
                                       l4929 3297                                         l4945 317E  
                                       l7513 030D                                         l7409 00FE  
                                       l7417 012C                                         l8321 0F04  
                                       l8225 0ACA                                         l8161 08D3  
                                       l6619 29A5                                         l6707 06E1  
                                       l4859 2378                                         l4883 206E  
                                       l7355 192C                                         l4971 31B4  
                                       l4963 31A3                                         l4787 2E1E  
                                       l7611 0612                                         l7515 03DF  
                                       l7443 01AB                                         l7427 015C  
                                       l7435 018A                                         l8307 0E4D  
                                       l8235 0B34                                         l8147 094C  
                                       l8067 2402                                         l8421 3765  
                                       l6725 079F                                         l4869 202B  
                                       l7365 1944                                         l4957 318B  
                                       l4949 3185                                         l7293 3200  
                                       l7613 061A                                         l7533 0497  
                                       l7525 0453                                         l7453 0245  
                                       l7701 22A2                                         l8341 0FC7  
                                       l8325 0F34                                         l8245 0B98  
                                       l8173 08F5                                         l8149 08B1  
                                       l8077 2467                                         l8085 1000  
                                       l8407 372C                                         l6751 2672  
                                       l4887 209E                                         l4959 3197  
                                       l4967 31AC                                         l7623 0616  
                                       l7535 04A0                                         l7519 0432  
                                       l7447 01DB                                         l7455 026A  
                                       l7391 00BC                                         l8335 0FA1  
                                       l8255 0C1C                                         l8095 1069  
                                       l8351 0FD8                                         l8425 3773  
                                       l8417 375A                                         l8409 373A  
                                       l6681 3ED0                                         l8513 2D24  
                                       l4993 3637                                         l6745 25C6  
                                       l6729 07C9                                         l4889 20AA  
                                       l7633 0664                                         l7625 064E  
                                       l7481 02CD                                         l7473 02A9  
                                       l7465 0298                                         l7449 0215  
                                       l7713 2BEE                                         l8345 0FCD  
                                       l8265 0C86                                         l8185 0927  
                                       l8441 3544                                         l6763 2684  
                                       l6675 3DF8                                         l7547 0501  
                                       l7491 02E3                                         l7467 02A1  
                                       l7387 00B5                                         l7379 00A3  
                                       l7731 2C37                                         l7811 19BE  
                                       l7803 198C                                         l8283 0D52  
                                       l8371 30A9                                         l8443 354C  
                                       l8435 3530                                         l8381 3FB0  
                                       l8517 2D4C                                         l4997 3651  
                                       l7741 2C47                                         l7733 2C44  
                                       l8293 0DBF                                         l8269 0CB6  
                                       l8453 357A                                         l6599 2955  
                                       l6767 26AC                                         l7567 051C  
                                       l7575 0548                                         l7583 05C2  
                                       l7399 00CE                                         l7751 2C92  
                                       l7727 2C26                                         l7807 19A4  
                                       l8279 0D22                                         l7911 132C  
                                       l8455 357E                                         l8377 3FA5  
                                       l6865 3EF3                                         l7649 0696  
                                       l7657 06B1                                         l7569 0536  
                                       l7489 02DF                                         l7745 2C74  
                                       l7761 2F39                                         l8297 0DE3  
                                       l7921 1343                                         l8369 3081  
                                       l8457 3585                                         l8491 2EFF  
                                       l7595 05F0                                         l7587 05DA  
                                       l7499 02F3                                         l7675 2230  
                                       l7667 21E1                                         l7851 1A9D  
                                       l7827 1A0C                                         l7835 1A4E  
                                       l7931 137B                                         l7685 220B  
                                       l7749 2C85                                         l8709 272E  
                                       l8399 371C                                         l8559 2B24  
                                       l8487 2ED7                                         l7767 2F84  
                                       l7943 13AF                                         l7927 1347  
                                       l8735 27D6                                         l8743 27EA  
                                       l7881 2A42                                         l7873 2A06  
                                       l7777 2FE5                                         l7945 13C1  
                                       l7953 13F4                                         l8659 2B0C  
                                       l7891 2A71                                         l7875 2A0B  
                                       l7867 29F6                                         l7859 29DA  
                                       l7779 2F60                                         l7787 2FEA  
                                       l7947 13CB                                         l7877 2A1F  
                                       l7797 1974                                         l7965 143E  
                                       l7967 1450                                         l7975 1483  
                                       l8871 27F4                                         l8679 26CD  
                                       l8767 3FEF                                         l7985 14E6  
                                       l7969 145A                                         l8873 1362  
                                       l8875 2A17                                         l7995 282E  
                                       l8877 3ED5                                         l7999 285E  
                                       STR_1 39AA                                 __CFG_WDTE$ON 0000  
                                       STR_2 38A4                                         STR_3 392B  
                                       STR_4 383B                                         STR_5 3A56  
                                       STR_6 3980                                         STR_7 38FF  
                                       STR_8 3802                                         STR_9 3956  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u5050 1CDF                                         u5060 1CE0  
                                       u5045 1CD4                                         u5215 1DA3  
                                       u6105 328F                                         u5315 1DDA  
                                       u5173 1D50                                         u5165 1D33  
                                       u5095 1CFE                                         u7015 12A3  
                                       u7025 12BE                                         u6065 3273  
                                       u5505 35C4                                         u6410 3685  
                                       u7035 12D4                                         u5540 35F5  
                                       u6325 346A                                         u6085 327D  
                                       u6165 318E                                         u5605 2D8D  
                                       u5550 35F6                                         u5630 2DBB  
                                       u5710 3E5C                                         u6095 3287  
                                       u5535 35E7                                         u5615 2DA8  
                                       u5720 3E5D                                         u4905 3327  
                                       u6185 319D                                         _SCS0 04C8  
                                       u5395 3E93                                         u6355 3487  
                                       u5475 3DB9                                         u6195 31A4  
                                       u5635 2DB7                                         _SCS1 04C9  
                                       u6605 1B5F                                         u5805 3E1E  
                                       u5485 35AB                                         u6445 36CA  
                                       u5655 2DE0                                         u5760 3D91  
                                       u6625 1B68                                         u6385 349C  
                                       u5770 3D92                                         u6635 1B7C  
                                       u5675 2E0E                                         u5860 2314  
                                       u6485 34EE                                         u5695 2E27  
                                       u6665 1B95                                         u6905 123C  
                                       u6755 1BD9                                         u6595 1B58  
                                       u6915 124B                                         u9235 29B9  
                                       u9155 2979                                         u5795 3E19  
                                       u9500 3EF9                                         u6765 1BF4  
                                       u6685 1B9E                                         u6925 125F  
                                       u6775 1C0D                                         u9175 298D  
                                       u5895 2359                                         u6945 1268  
                                       u9345 07B8                                         u6875 11A0  
                                       u9195 299F                                         u5995 208C  
                                       u9700 3DD7                                         u6885 11CF  
                                       u9470 3EE9                                         u9710 07F8  
                                       u6895 1225                                         u9480 3EEA  
                                       u9720 07F9                                         u9800 3F35  
                                       u9385 269D                                         u9490 3EF8  
                                       u9810 3F36                                         u9690 3DD6  
                                       u9770 3F13                                         u9755 3224  
                                       u9780 3F14                                         u9925 185E  
                                       u9870 1822                                         u9855 31FC  
                                       u9880 1823                                         _TMR1 0016  
                                       u9955 1922                                         u9975 189E  
                                       _SPEN 0CEF                                         u9985 18AA  
                                       _TXEN 0CF5                                         _SYNC 0CF4  
                ??_watchdog_timeout_shutdown 0073                                 __CFG_WRT$OFF 0000  
                                       abs@a 0074                                         _dbuf 02A0  
                                       _atoi 29D5                                         _ctoa 3F6B  
                                       _main 3FCE                                         _dtoa 1807  
                                       _prec 01B6                                         _otoa 21C7  
                                       _nout 01B2                                         pad@i 002C  
                                       pad@p 0029                                         fsr0h 0005  
                                       fsr1h 0007                                         indf0 0000  
                                       fsr0l 0004                                         indf1 0001  
                                       fsr1l 0006                                         pad@w 002E  
                                       _stoa 2BD3                                         btemp 007E  
                                       _utoa 2F1F                                         _xtoa 195A  
                              ___fpclassifyf 358A                                         start 001E  
                            ___fldiv@new_exp 0052                                 _tolower$1888 0079  
                     __end_of_updateVoltages 1800                     __end_of_send_I2C_stopBit 3D20  
                                      ??_abs 0076                                        ??_pad 002B  
                       _send_I2C_controlByte 3D44                                ?_EUSART_Write 0070  
                              ___fltol@sign1 007A                              __end_of___aldiv 377C  
                            __end_of___aodiv 23AB                                        ?_atoi 0077  
                                      ?_ctoa 0030                              __end_of___fladd 1E0F  
                                      ?_main 0070                                        ?_dtoa 0030  
                            __end_of___aomod 20DD                I2C_writeRegister@slaveAddress 0075  
                            __end_of___fldiv 1C2D                              __end_of___awdiv 32A4  
                            __end_of___flneg 3D44                                        STR_10 38D2  
                                      STR_11 3870                                        STR_20 3A83  
                                      STR_12 39D2                                        STR_13 3A56  
                                      STR_21 3AAD                                        STR_22 3AC1  
                                      STR_14 3A98                                        STR_31 3B48  
                                      STR_23 3AD5                                        STR_15 3A44  
                                      STR_32 3B5C                                        STR_24 3AE8  
                                      STR_16 3A18                                        STR_41 3B58  
                                      STR_25 3AFA                                        STR_17 3A2E  
                                      STR_26 3A56                                        STR_50 3B59  
                                      STR_18 3A59                                        STR_35 3B50  
                                      STR_27 3B44                                        STR_19 3A6E  
                                      STR_28 3B54                              __end_of___awmod 31B9  
                                      STR_37 3B50                                        STR_53 3B76  
                                      STR_46 3B51                                        STR_62 3B79  
                                      STR_55 3B76                                        STR_71 3B7C  
                                      STR_39 3B58                                        STR_64 3B79  
                                      STR_73 3B7C                                        STR_57 3B7F  
                                      STR_66 3B82                                        STR_59 3B7F  
                                      STR_83 3B65                                        STR_91 3B8E  
                                      STR_68 3B82                                        STR_76 3B64  
                                      STR_93 3B8E                                        STR_78 3B64  
                                      STR_86 3B8B                                        STR_88 3B8B  
                                      STR_96 3B60                              __end_of___flmul 1301  
                                      STR_98 3B60                                        ?_otoa 0030  
                            __end_of___flsub 3043                              __end_of___fltol 34B4  
                                      ?_stoa 0020                                        ?_utoa 0030  
                                      u10120 014D                                        u11010 2A56  
                                      u10130 014E                                        u11020 2A57  
                                      u11100 13E9                                        u10205 0296  
                                      u11110 13EA                                        u10080 00EF  
                                      u10090 00F0                                        u10315 0317  
                                      u10235 02B6                                        u10245 02C9  
                                      u11150 1478                                        u10520 0689  
                                      u11160 1479                                        u10505 0657  
                                      u12017 3FF8                                        u10530 068A  
                                      u11330 2448                                        u10435 05CC  
                            __end_of___lodiv 36FA                                        u12027 3DEC  
                                      u11340 2449                              ___awdiv@divisor 0071  
                                      u10445 05D8                                        u10605 221F  
                                      u12037 26F9                                        u10615 222B  
                                      u12047 2735                                        ?_xtoa 0030  
                                      u10705 2C42                                        u12057 27E3  
                                      u10650 2BDD                                        u10715 2C51  
                                      u12067 1E13                                        u12077 3D6D  
                                      u10565 21D9                                        u10575 2262  
                                      u10735 2C90                                        u10585 2287  
                                      u10825 196C                                        u10850 19D5  
                                      u10755 2F31                                        u10915 1A32  
                                      u10860 19D6                                        u11725 372F  
                                      u10685 2C0E                                        u10925 1A58  
                                      u10845 19B8                                        u10880 19F5  
                                      u11745 373B                                        u11665 3FB1  
                                      u11905 2B3A                                        u10785 2F73  
                                      u10945 1A6E                                        u10890 19F6  
                                      u11755 374F                                        u11675 3FB8  
                                      u10795 2F7F                                        u10955 1A7A  
                                      u11835 3571                                        u11765 375B  
                                      u11925 2BA0                                        u11845 2EB1  
                                      u11935 2A80                                        u11855 2EEF  
                                      u11945 2A97                              __end_of___lomod 351D  
                                      u11875 2D05                                        u11965 2ACD  
                                      u11885 2D3C                                        u11975 2AE4  
                                      _IRCF0 04CB                                        _IRCF1 04CC  
                                      _IRCF2 04CD                                        _IRCF3 04CE  
                     __size_of_read_I2C_data 0010                                        i1l151 001C  
                            ___awdiv@counter 0076                                 vfpfcnvrt@fmt 00EE  
                               vfpfcnvrt@llu 0146                                        _SPBRG 019B  
                         __size_of_RGB_color 0021                          ___lmul@multiplicand 0075  
                             __CFG_FCMEN$OFF 0000                              __end_of_initWDT 3D10  
                                      _flags 01B8                                        _errno 0230  
                                      _fputc 32F6                              __end_of_isalpha 3E64  
                                      _fputs 2808                                        _myIsr 0004  
                            __end_of_isdigit 3D99                          _printotAFERegisters 1E0F  
                                      atoi@n 002B                                        pad@fp 0026  
                                      atoi@s 0077                                        _width 01B4  
                                      ctoa@c 0032                                        _putch 0003  
                                      ctoa@w 0034                                        dtoa@d 0032  
                                      dtoa@i 004D                                        dtoa@n 0045  
                                      dtoa@p 003F                                        dtoa@s 0043  
                                      dtoa@w 0041                              __end_of_islower 0800  
                            __end_of_isspace 3E47                               __CFG_BOREN$OFF 0000  
                            __end_of_isupper 3DDE                                        otoa@d 0032  
                                      otoa@i 0050                                        otoa@n 0048  
                                      otoa@p 0042                                        otoa@t 0044  
                                      otoa@w 0046                                        stoa@i 002A  
                                      stoa@l 0032                                        stoa@p 0030  
                                      stoa@s 0022                                        stoa@w 002C  
                                      utoa@d 0032                                        utoa@i 0047  
                                      utoa@n 003F                                        utoa@p 003B  
                                      utoa@w 003D                                        status 0003  
                                      wtemp0 007E                               ?___fpclassifyf 0071  
                            __end_of_tolower 3F25                                        xtoa@c 0055  
                                      xtoa@d 0032                                        xtoa@i 0053  
                                      xtoa@n 004B                                        xtoa@p 0047  
                                      xtoa@w 0049                                        xtoa@x 003A  
                          _SCD_delay_setting 3B3C                              __end_of_strncmp 32F6  
                            __end_of_toupper 3F47                             ___lodiv@dividend 0028  
                               ?_internal_16 0070                                 _toupper$1903 0079  
                             __CFG_MCLRE$OFF 0000                              __initialization 0020  
                            ?_updateVoltages 0070        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 2A76                                 __end_of_ctoa 3F9C  
                               __end_of_main 4000                                 __end_of_dtoa 195A  
                               __end_of_otoa 22B8                                 __end_of_stoa 2C98  
                               __end_of_utoa 3000                                 __end_of_xtoa 1AB3  
                       ?_printotAFERegisters 0070                     __end_of_UV_delay_setting 3B3C  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 3DDE                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 3800                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 01EB  
                                     ??_dtoa 003A                                       ??_otoa 003A  
                                     ??_stoa 007A                                       ??_utoa 003A  
                                     ??_xtoa 003B                  __end_of_printcellParameters 3130  
                             __CFG_PLLEN$OFF 0000                             ___lodiv@quotient 0072  
                              ?_readRegister 0075                                       ?_fputc 0071  
                                     ?_fputs 007A                                       STR_103 3B61  
                                     STR_111 3B88                                       STR_113 3B88  
                                     STR_106 3B85                                       STR_123 3B69  
                                     STR_131 3B94                                       ?_myIsr 0070  
                                     STR_108 3B85                                       STR_116 3B68  
                                     STR_140 3B4C                                       STR_133 3B94  
                                     STR_142 3B4C                                       STR_118 3B68  
                                     STR_126 3B91                                       STR_151 3B4D  
                                     STR_160 3B70                                       STR_128 3B91  
                                     STR_136 3B6C                                       STR_138 3B6C  
                                     STR_154 3B97                                       STR_147 3B6D  
                                     STR_163 3B9A                                       STR_156 3B97  
                                     STR_165 3B9A                                       STR_158 3B70  
                                     STR_167 3B73                                       STR_169 3B73  
                           ___awdiv@dividend 0073                               __CFG_ZCDDIS$ON 0000  
                                     ?_putch 0070                __end_of_OCD_threshold_setting 3A18  
                                     _RC1REG 0199                    __end_of_SCD_delay_setting 3B44  
                              vfpfcnvrt@done 012D                                 ??_AFE_UPDATE 007C  
                                     _TX1REG 019A                                       _SPLLEN 04CF  
     setOverCurrentDischargeProtection@i_978 00AA                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                       u583lld 22E0  
                                     u594lld 2029                                _read_I2C_data 3D72  
                           __end_of___xxtofl 29D5                               __CFG_PWRTE$OFF 0000  
                          __end_of_RGB_color 3EE1                                 vfprintf@cfmt 0153  
                                     ___flge 3602                                       ___fleq 31B9  
                      ??_printotAFERegisters 016C                                       ___lmul 3F9C  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01BA                                    ??___fladd 0062  
                                  ??___aomod 0071                                       ___wmul 3E10  
                                  ??___fldiv 0048                                    ??___awdiv 0075  
                                  ??___flneg 0075                               __CFG_STVREN$ON 0000  
                                  ??___awmod 0075                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 00A4  
                                  ??___lodiv 0071                             __end_of_init_I2C 3D72  
                                  ??___lomod 0071                             __end_of_init_AFE 33A0  
                                     _efgtoa 0063                             __end_of_init_RGB 3D0A  
                  __end_of_ATmega328_address 3802                                       _floorf 2D6C  
                           ___awdiv@quotient 0078                        _beginAFEcommunication 2B1F  
                            ___awmod@divisor 0071                              ___awmod@counter 0076  
                                     pad@buf 0028                                       ctoa@fp 0030  
                                     dtoa@fp 0030                                       _strcpy 3EA1  
                                     _strlen 3D99                                    ??_initWDT 0071  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 3D05                           __size_of__Umul8_16 001F  
                            ___fpclassifyf@e 0020                              ___fpclassifyf@u 0022  
                            ___fpclassifyf@x 0071                                    ??_islower 0073  
                                  ??_isspace 0073                          _updateVoltages$2139 00AC  
                                     otoa@fp 0030                               ??_readRegister 0079  
                                  ??_isupper 0073                                       stoa@cp 002E  
                                     stoa@fp 0020                                       putch@c 0070  
                           __end_of_vfprintf 30B2                                       utoa@fp 0030  
            ??_setCellUndervoltageProtection 0036                             __end_of_snprintf 3F6B  
                                  ??_tolower 0020                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                                 ___flge@ff1 005A                                   ___flge@ff2 005E  
                            ??___fpclassifyf 0075                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                                 ___fleq@ff1 0071                                   ___fleq@ff2 0075  
                    __end_of__initialization 005F                               ?_read_I2C_data 0071  
                                 ___flneg@f1 0071                                   ___fltol@f1 00A0  
                   ?_setTemperatureLimitsint 0020     setTemperatureLimitsint@minDischarge_degC 0020  
                             __pcstackCOMMON 0070                       ??_send_I2C_controlByte 0075  
                               __pidataBANK4 1800                                __end_of_fputc 334A  
                              __end_of_fputs 282E                                __end_of_myIsr 001E  
                               _cellVoltages 01A0                                __end_of_putch 0004  
                                 _batCurrent 01AE                           _RGB_AWAIT_AFE_CONN 3EE1  
                                 _batVoltage 022C                          ?_RGB_AWAIT_AFE_CONN 0070  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK3 01A0  
                                 __pbssBANK4 0220                                   __pbssBANK5 02A0  
                       __end_of_EUSART_Write 2808                           __size_of_init_GPIO 003B  
                         __size_of_initClock 0003                           __size_of_init_TMR1 000B  
                        statemachine@success 016F                            __end_of__Umul8_16 3EA1  
                                 __pmaintext 3FCE                         ??_RGB_AWAIT_AFE_CONN 0073  
                       __size_of_internal_16 0009              setShortCircuitProtection@scaler 00A0  
                                    ?___flge 005A                                      ?___fleq 0071  
                          ?_send_I2C_stopBit 0070                                      ?___lmul 0071  
                                    ?___wmul 0071        setTemperatureLimitsint@minCharge_degC 0024  
                            __CFG_PPS1WAY$ON 0000                   ?_setShortCircuitProtection 0066  
                                 __pintentry 0004                                      ?_efgtoa 00A9  
                     ?_beginAFEcommunication 0020                                      ?_floorf 005A  
                         ??_send_I2C_stopBit 0071                               ___lmul@product 0020  
                                    ?_strcpy 0071                                      ?_strlen 0071  
                    _shuntResistorValue_mOhm 0228                                    ?___xxtofl 0071  
             setShortCircuitProtection@i_969 00AA                           __size_of_vfpfcnvrt FCFF  
         __size_of_watchdog_timeout_shutdown 0018                                      _PPSLOCK 0E0F  
                     __size_of_send_I2C_NACK 0009                             ___lomod@dividend 0028  
                            ??_read_I2C_data 0073                       __size_of_send_I2C_data 0009  
                                  ?_init_I2C 0070                                    ?_init_AFE 0070  
                                  ?_init_RGB 0070         __end_of_setCellOvervoltageProtection 2D6C  
      __size_of_setCellOvervoltageProtection 00D4                 _setCellOvervoltageProtection 2C98  
                           ??_updateVoltages 00A9        __end_of_setCellUndervoltageProtection 2F1F  
     __size_of_setCellUndervoltageProtection 00DB                _setCellUndervoltageProtection 2E44  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                         __size_of_vsnprintf 006D                         __end_of_readRegister 3079  
                                    ___aldiv 36FA                                      _adcGain 01D1  
                            __size_of___flge 007C                              __size_of___fleq 0049  
                                    ___aodiv 22B8                                      ___fladd 1C2D  
                                    ___aomod 2001                                      ___fldiv 1AB3  
                                    ___awdiv 3253                                      ___flneg 3D3B  
                            __size_of___lmul 0032                                      ___awmod 3174  
                                    ___flmul 10D5                                      ___flsub 300E  
                                    ___fltol 344E                              __size_of___wmul 001B  
                                    ___lodiv 367E                                      ___lomod 34B4  
                                  ?_vfprintf 014E                              __size_of_efgtoa 066F  
                                  ?_snprintf 01D3                                _messageBuffer 2771  
            ??_AFE_getSetShortCircuitCurrent 00AD                              __size_of_floorf 00D8  
                                    __ptext1 3DDE                                      __ptext2 3000  
                                    __ptext3 26CC                                      __ptext4 1E0F  
                                    __ptext5 30ED                                      __ptext6 3F47  
                                    __ptext7 351D                                      __ptext8 3079  
                                    __ptext9 1301                            __end_of_init_GPIO 30ED  
                          __end_of_initClock 3D02                            __end_of_init_TMR1 300E  
                            __size_of_strcpy 001F                              __size_of_strlen 0017  
                                  _T1CONbits 0018                                      _initWDT 3D0A  
                               __size_of_abs 0017           __size_of_AFE_getSetCurrentSenseRes 000A  
                               __size_of_pad 0051                                      _isalpha 3E47  
                                    _isdigit 3D82                                   ??___xxtofl 0075  
                           ___awmod@dividend 0073                   ?_AFE_getSetCurrentSenseRes 0071  
                           ___aldiv@dividend 0028                                      _islower 07E9  
                                    _isspace 3E2B    __end_of_setOverCurrentDischargeProtection 26CC  
 __size_of_setOverCurrentDischargeProtection 0115          ??_setOverCurrentDischargeProtection 006C  
         ?_setOverCurrentDischargeProtection 0066            _setOverCurrentDischargeProtection 25B7  
                                    _isupper 3DC7                                      efgtoa@c 00AF  
                                    efgtoa@d 00CC                                      efgtoa@e 00E4  
                                    efgtoa@f 00AB                                      efgtoa@g 00E0  
                                    efgtoa@h 00D6                                      efgtoa@i 00DE  
                                    efgtoa@l 00DA                                      efgtoa@m 00C8  
                                    efgtoa@n 00E6                                      efgtoa@p 00D0  
                                    efgtoa@t 00C4                                      efgtoa@u 00E8  
                                    efgtoa@w 00D3                                      atoi@neg 0024  
                                    _tolower 3F03                                      clrloop0 0801  
          __end_of_watchdog_timeout_shutdown 3DF6                                      _strncmp 32A4  
                                    _toupper 3F25                         end_of_initialization 005F  
                                    floorf@e 0068                                      floorf@m 0064  
                                    floorf@u 006A                                      floorf@x 005A  
                                 ??_init_I2C 0071                                   ??_init_AFE 007B  
                                 ??_init_RGB 0071                                      fputc@fp 0073  
                                    fputs@fp 007A                ?_setCellOvervoltageProtection 0032  
                          _EUSART_Initialize 2A76                           ?_EUSART_Initialize 0032  
                          __end_of_vfpfcnvrt 1000                                   efgtoa@mode 00D5  
                                 efgtoa@sign 00CE                                _send_I2C_NACK 3D29  
                           ___aldiv@quotient 002E                   send_I2C_controlByte@RW_bit 0073  
                                    psplit$0 50009F                                      psplit$1 9F00A0  
                                    psplit$2 A000A1                                      psplit$3 A100A2  
                                    psplit$4 A200A3                                      psplit$5 A300A4  
                                    psplit$6 A400A5                                      psplit$7 A500A6  
                              _send_I2C_data 3D32                                    _RGB_color 3EC0  
                                 ??_vfprintf 006E                           EUSART_Initialize@x 007A  
                                 ??_snprintf 0168                                      strcpy@d 0077  
                                    strlen@a 0073                                      strcpy@s 0075  
                                    strlen@s 0071                          ??_EUSART_Initialize 0036  
                                ___fladd@grs 006D                             __CFG_FOSC$INTOSC 0000  
                              ___xxtofl@sign 0020                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
          __end_of_AFE_getSetCurrentSenseRes 3D58                            __end_of_vsnprintf 358A  
                                ___fldiv@grs 0054                                  ___fldiv@rem 004D  
               __size_of_printcellParameters 0043                __end_of_SCD_threshold_setting 3B2C  
                                  _RXPPSbits 0E24                            _I2C_writeRegister 3E64  
                                ___flmul@grs 0034                    __end_of_EUSART_Initialize 2B1F  
                      _OCD_threshold_setting 39F8                  __end_of_printotAFERegisters 2000  
                         ?_I2C_writeRegister 0075             beginAFEcommunication@commSuccess 002B  
                             ?_send_I2C_NACK 0070                     readRegister@slaveAddress 0075  
             ?_setCellUndervoltageProtection 0032                               ?_send_I2C_data 0071  
                        ??_I2C_writeRegister 007B                                ?_shutdown_BMS 0070  
 __end_of_AFE_getOverCurrentDischargeCurrent 33F7  __size_of_AFE_getOverCurrentDischargeCurrent 0057  
       ??_AFE_getOverCurrentDischargeCurrent 00AD          ?_AFE_getOverCurrentDischargeCurrent 00A9  
         _AFE_getOverCurrentDischargeCurrent 33A0                                   ?_RGB_color 0071  
                             __end_of___flge 367E                               __end_of___fleq 3202  
                             __end_of___lmul 3FCE                                  vfpfcnvrt@ap 00EF  
                                vfpfcnvrt@cp 012C                                  vfpfcnvrt@ct 0135  
                                vfpfcnvrt@fp 00EC                                  vfpfcnvrt@ll 013C  
                             __end_of___wmul 3E2B                                  vfpfcnvrt@vp 0144  
                             __end_of_efgtoa 06D2                                 _EUSART_Write 2800  
                             __end_of_floorf 2E44                  I2C_writeRegister@regAddress 0077  
                                 floorf@F524 0220                setShuntResistorValue@res_mOhm 0071  
           __size_of_setTemperatureLimitsint 0044                               __end_of_strcpy 3EC0  
                             __end_of_strlen 3DB0        __end_of_AFE_getSetShortCircuitCurrent 344E  
     __size_of_AFE_getSetShortCircuitCurrent 0057                _AFE_getSetShortCircuitCurrent 33F7  
                        start_initialization 0020                              ___lodiv@divisor 0020  
                            ___lodiv@counter 007A                                ?_statemachine 0070  
                                __end_of_abs 3DC7                                  __end_of_pad 3253  
                          _minCellTempCharge 01C4                setCellOvervoltageProtection@i 0045  
                       _maxCellTempDischarge 01BE                         updateVoltages@adcVal 00B0  
                       _minCellTempDischarge 01C2                    __end_of_I2C_writeRegister 3E82  
     _setOverCurrentDischargeProtection$2138 00A4                            pnum$text9_split_1 009F  
                          pnum$text9_split_2 00A0                            pnum$text9_split_3 00A1  
                          pnum$text9_split_4 00A2                            pnum$text9_split_5 00A3  
                          pnum$text9_split_6 00A4                            pnum$text9_split_7 00A5  
                          pnum$text9_split_8 00A6                        __end_of___fpclassifyf 3602  
        setCellOvervoltageProtection@delay_s 0034         setCellUndervoltageProtection@delay_s 0034  
                          _EUSART_Write_Text 3DF6                        __size_of_readRegister 0036  
                         ?_EUSART_Write_Text 0072                      ??_beginAFEcommunication 0022  
                                vfprintf@fmt 0150                                     ??___flge 0062  
                                   ??___fleq 0020                                     ??___lmul 0079  
                             ??_shutdown_BMS 0071                                     ??___wmul 0075  
             ??_setCellOvervoltageProtection 0036          setCellOvervoltageProtection@ov_trip 0044  
                                   ??_efgtoa 00B0                                    __Umul8_16 3E82  
                ??_setShortCircuitProtection 006C                                  __pdataBANK4 0234  
                                   ??_floorf 005E                          ??_EUSART_Write_Text 0074  
              __size_of_send_I2C_controlByte 000A         setCellUndervoltageProtection@uv_trip 0044  
                                   ??_strcpy 0073                                     ??_strlen 0073  
                                  ___fladd@a 005E                                    ___fladd@b 005A  
                               vsnprintf@cnt 0160                                 vsnprintf@fmt 0159  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                                    _adcOffset 01C6  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                                    ___flsub@a 00A0  
                                  ___flsub@b 00A4                               ??_statemachine 016D  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 01CB                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                              __pcstackBANK3 01D3                             ___aodiv@dividend 0028  
                  __size_of_send_I2C_stopBit 0008                                  snprintf@fmt 01D7  
                          __size_of___xxtofl 0096                                 _readRegister 3043  
   setTemperatureLimitsint@maxDischarge_degC 0022                    __end_of_EUSART_Write_Text 3E10  
                 __size_of_EUSART_Initialize 00A9                                ??_internal_16 0071  
                                  _atoi$1765 0026                                    _atoi$1766 002A  
                                  _atoi$1767 0028                             _OV_delay_setting 3B2C  
                          __size_of_init_I2C 0010                        I2C_writeRegister@data 0079  
                            ??_send_I2C_NACK 0071                            __size_of_init_AFE 0056  
                          __size_of_init_RGB 0005                                  _efgtoa$1250 00BA  
                                _efgtoa$1260 00C2                                  _efgtoa$1254 00BC  
                                _efgtoa$1249 00B8                                  _efgtoa$1258 00BE  
                                _efgtoa$1259 00C0                            _send_I2C_startBit 3D10  
                                  _dtoa$1226 003D                              ??_send_I2C_data 0073  
                __size_of_RGB_AWAIT_AFE_CONN 0022               __size_of_setShuntResistorValue 000A  
                                   ?___aldiv 0024                                     ?___aodiv 0020  
                         ?_send_I2C_startBit 0070                                     ?___fladd 005A  
              __end_of_setShuntResistorValue 3D62                                     ?___aomod 0020  
                                   ?___fldiv 0040                                     ?___awdiv 0071  
                           ___aodiv@quotient 0074                                     ?___flneg 0071  
                                   ?___awmod 0071                                     ?___flmul 0026  
                                   ?___flsub 00A0                                     ?___fltol 00A0  
                                   ?___lodiv 0020                                     ?___lomod 0020  
                                ??_RGB_color 0073                                   ?__Umul8_16 0071  
                  EUSART_Initialize@baudrate 0032                            __size_of_vfprintf 0039  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 0024  
             BQ76920@shuntResistorValue_mOhm 01AA                              ___lomod@divisor 0020  
                                   ?_initWDT 0070                              ___lomod@counter 0072  
                                   ?_isalpha 0071                                     ?_isdigit 0071  
                                   ?_islower 0071                                     ?_isspace 0071  
                ??_AFE_getSetCurrentSenseRes 0075                                    _init_GPIO 30B2  
                                   ?_isupper 0071                                    _initClock 3CFF  
                                  _init_TMR1 3003                                    _currState 01CD  
                                   ?_tolower 0077                    _setShortCircuitProtection 06D2  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001A  
                                   ?_strncmp 0071               ?_AFE_getSetShortCircuitCurrent 00A9  
                                   ?_toupper 0077                               __size_of_putch 0001  
                            ___aldiv@divisor 0024                        __end_of_read_I2C_data 3D82  
                            ___aldiv@counter 002C                               ___wmul@product 0075  
                            BQ76920@protect1 01CA                              BQ76920@protect2 01C9  
                            BQ76920@protect3 01C8                                     _LATAbits 010C  
                                   _LATEbits 0110                    __end_of_send_I2C_startBit 3D18  
                                  clear_ram0 0800                                    _tmr1_flag 01CC  
                                   _PIE1bits 0091           setOverCurrentDischargeProtection@i 00A8  
                                   _PIR1bits 0011                   setShortCircuitProtection@i 00A8  
                        __end_of_internal_16 3D29                          _printcellParameters 30ED  
                                  _vfpfcnvrt 1301                                    _xtoa$1296 0043  
                                  _xtoa$1297 0045                            ___wmul@multiplier 0071  
                    _setTemperatureLimitsint 3130                                   ?_init_GPIO 0070  
                                 ?_initClock 0070                                   ?_init_TMR1 0070  
                               _isspace$1805 0075                        send_I2C_data@databyte 0071  
                                 vfpfcnvrt@c 0145                                   vfpfcnvrt@f 0138  
                          ___lmul@multiplier 0071                         ?_printcellParameters 0070  
                       __end_of_shutdown_BMS 3003                   __size_of_EUSART_Write_Text 001A  
                 ?_watchdog_timeout_shutdown 0070                                    _vsnprintf 351D  
                                 _AFE_UPDATE 3D02                            _OCD_delay_setting 3B0C  
                  _AFE_getSetCurrentSenseRes 3D4E                         __end_of_statemachine 2800  
                                 vfprintf@ap 0152                                   vfprintf@fp 014E  
                                ??__Umul8_16 0073                             __size_of___aldiv 0082  
                           __size_of___aodiv 00F3                             __size_of___fladd 01E2  
                    __size_of_updateVoltages 02D3                             __size_of___aomod 00DC  
                           __size_of___fldiv 017A                             __size_of___awdiv 0051  
                           __size_of___flneg 0009               _setShortCircuitProtection$2137 00A4  
                           __size_of___awmod 0045                                  vsnprintf@ap 015B  
                           __size_of___flmul 022C                             __size_of___flsub 0035  
                           __size_of___fltol 0066                       readRegister@regAddress 0077  
                           __size_of___lodiv 007C                             __size_of___lomod 0069  
                                 ?_vfpfcnvrt 00EC                                   snprintf@ap 016B  
                            ___aodiv@divisor 0020                              ___aodiv@counter 0072  
                                 _ANSELBbits 018D                                   _ANSELCbits 018E  
                         ___fpclassifyf@F463 0224                                     ___xxtofl 293F  
setOverCurrentDischargeProtection@current_mA 0066                             __size_of_initWDT 0006  
                           __size_of_isalpha 001D                             __size_of_isdigit 0017  
                           _send_I2C_stopBit 3D18                             __size_of_islower 0017  
                           __size_of_isspace 001C                                     __ptext10 195A  
                                   __ptext11 3F25                                     __ptext20 0063  
                                   __ptext12 07E9                                     __ptext21 3F03  
                                   __ptext13 3E47                                     __ptext30 3253  
                                   __ptext22 3DC7                                     __ptext14 2F1F  
                                   __ptext31 1807                                     __ptext23 3EA1  
                                   __ptext15 34B4                                     __ptext40 0003  
                                   __ptext32 3DB0                                     __ptext24 2D6C  
                                   __ptext16 367E                                     __ptext41 29D5  
                                   __ptext33 2001                                     __ptext25 358A  
                                   __ptext17 32A4                                     __ptext50 06D2  
                                   __ptext42 3E2B                                     __ptext34 22B8  
                                   __ptext26 300E                                     __ptext18 2BD3  
                                   __ptext51 25B7                                     __ptext43 3D82  
                                   __ptext35 3F6B                                     __ptext27 3D3B  
                                   __ptext19 21C7                                     __ptext60 3D4E  
                                   __ptext52 3602                                     __ptext44 3DF6  
                                   __ptext36 3202                                     __ptext28 31B9  
                                   __ptext61 33A0                                     __ptext53 2E44  
                                   __ptext45 2800                                     __ptext37 3D99  
                                   __ptext29 3174                                     __ptext70 3D72  
                                   __ptext62 3D02                                     __ptext54 2C98  
                                   __ptext46 334A                                     __ptext38 2808  
                                   __ptext71 293F                                     __ptext63 152D  
                                   __ptext55 2B1F                                     __ptext47 3130  
                                   __ptext39 32F6                                     __ptext80 3D62  
                                   __ptext72 3F9C                                     __ptext64 3043  
                                   __ptext56 3E64                                     __ptext48 3E10  
                                   __ptext81 30B2                                     __ptext73 344E  
                                   __ptext65 3D18                                     __ptext57 3EE1  
                                   __ptext49 3D58                                     __ptext82 3D0A  
                                   __ptext74 10D5                                     __ptext66 3D10  
                                   __ptext58 3EC0                                     __ptext83 3CFF  
                                   __ptext75 3E82                                     __ptext67 3D32  
                                   __ptext59 33F7                                     __ptext84 3D20  
                                   __ptext76 1AB3                                     __ptext68 3D44  
                                   __ptext85 2A76                                     __ptext77 1C2D  
                                   __ptext69 3D29                                     __ptext86 36FA  
                                   __ptext78 3003                                     __ptext79 3D05  
                           __size_of_isupper 0017                        ??_printcellParameters 007C  
             setCellUndervoltageProtection@i 0045                             __size_of_tolower 0022  
                  __end_of_OCD_delay_setting 3B1C                                   strcpy@dest 0078  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 0155                                     _init_I2C 3D62  
                                   _init_AFE 334A                                     _init_RGB 3D05  
                              __size_of_atoi 00A1                                __size_of_ctoa 0031  
                              __size_of_main 0032                                __size_of_dtoa 0153  
                              _SSPDATPPSbits 0E21                                    pnum$text9 0050  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 3B1C  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 3D20                                   _RB2PPSbits 0E9A  
                                 _RC1STAbits 019D                                     efgtoa@fp 00A9  
                                   efgtoa@ne 00CA                                     efgtoa@pp 00C6  
                                   efgtoa@ou 00B4                                    stoa@F1174 0234  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 2BD3  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 01D0                                     _protect2 01CF  
               __size_of_printotAFERegisters 01F1                                     _protect3 01CE  
                  ??_setTemperatureLimitsint 0077                                     _vfprintf 3079  
                                   _snprintf 3F47                             ___aomod@dividend 0028  
  setOverCurrentDischargeProtection@delay_ms 006A                     __end_of_OV_delay_setting 3B34  
                             _vfpfcnvrt$1311 012F                               _vfpfcnvrt$1312 0131  
                             _vfpfcnvrt$1338 0133                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                               __pstringtext10 38A4  
                             __pstringtext11 38D2                               __pstringtext20 3A44  
                             __pstringtext12 38FF                               __pstringtext21 3A59  
                             __pstringtext13 392B                               __pstringtext30 3B44  
                             __pstringtext22 3A6E                               __pstringtext14 3956  
                             __pstringtext31 3B48                               __pstringtext23 3A83  
                             __pstringtext15 3980                               __pstringtext40 3B6C  
                             __pstringtext32 3B4C                               __pstringtext24 3A98  
                             __pstringtext16 39AA                               __pstringtext41 3B70  
                             __pstringtext33 3B50                               __pstringtext25 3AAD  
                             __pstringtext17 39D2                               __pstringtext50 3B8B  
                             __pstringtext42 3B73                               __pstringtext34 3B54  
                             __pstringtext26 3AC1                               __pstringtext18 3A18  
                             __pstringtext51 3B8E                               __pstringtext43 3B76  
                             __pstringtext35 3B58                               __pstringtext27 3AD5  
                             __pstringtext19 3A2E                               __pstringtext52 3B91  
                             __pstringtext44 3B79                               __pstringtext36 3B5C  
                             __pstringtext28 3AE8                               __pstringtext53 3B94  
                             __pstringtext45 3B7C                               __pstringtext37 3B60  
                             __pstringtext29 3AFA                               __pstringtext54 3B97  
                             __pstringtext46 3B7F                               __pstringtext38 3B64  
                             __pstringtext55 3B9A                               __pstringtext47 3B82  
                             __pstringtext39 3B68                               __pstringtext56 0000  
                             __pstringtext48 3B85                               __pstringtext49 3B88  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 0162                                   vsnprintf@n 0157  
                                 vsnprintf@s 0155                             _UV_delay_setting 3B34  
                                  snprintf@n 01D5                                    snprintf@s 01D3  
               __end_of_send_I2C_controlByte 3D4E                                     intlevel1 0000  
                               _temperatures 0232          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                            __CFG_CLKOUTEN$OFF 0000  
                                  strcpy@src 0071                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0117  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                                efgtoa@nmode 00D2                            _maxCellTempCharge 01C0  
                            ___aomod@divisor 0020                                  ??_vfpfcnvrt 0120  
                                   stoa@nuls 0023                              ___aomod@counter 0072  
                              __pstringtext1 39F8                                __pstringtext2 3B0C  
                              __pstringtext3 3B1C                                __pstringtext4 3B2C  
                              __pstringtext5 3B34                                __pstringtext6 3B3C  
                              __pstringtext7 3800                                __pstringtext8 383B  
                              __pstringtext9 3870                       __Umul8_16@multiplicand 0071  
                                   tolower@c 0077                               _vsnprintf$1940 015E  
                     __size_of___fpclassifyf 0078                        __size_of_shutdown_BMS 0003  
                                   strncmp@l 0078                                     strncmp@n 0075  
                                   strncmp@r 007A                                     toupper@c 0077  
                      EUSART_Write_Text@text 0072                                 ___aldiv@sign 002D  
                                _SSPCON2bits 0216                                   _WDTCONbits 0097  
                              ___fladd@signs 006A              __end_of_setTemperatureLimitsint 3174  
                         EUSART_Write@txData 0071                                 ___aodiv@sign 0073  
    setOverCurrentDischargeProtection@scaler 00A0                                  ??_vsnprintf 015C  
                               ___fladd@aexp 006B                                 ___fladd@bexp 006C  
                      __size_of_statemachine 0134                                   _STATUSbits 0003  
                                _toggleColor 007C                         __Umul8_16@multiplier 0079  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 3F03  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 3D32                            __Umul8_16@product 0075  
