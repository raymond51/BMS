

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 07 19:13:33 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	idataBANK4,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	stringtext18,global,class=STRCODE,delta=2
    24                           	psect	stringtext19,global,class=STRCODE,delta=2
    25                           	psect	stringtext20,global,class=STRCODE,delta=2
    26                           	psect	stringtext21,global,class=STRCODE,delta=2
    27                           	psect	stringtext22,global,class=STRCODE,delta=2
    28                           	psect	stringtext23,global,class=STRCODE,delta=2
    29                           	psect	stringtext24,global,class=STRCODE,delta=2
    30                           	psect	stringtext25,global,class=STRCODE,delta=2
    31                           	psect	stringtext26,global,class=STRCODE,delta=2
    32                           	psect	stringtext27,global,class=STRCODE,delta=2
    33                           	psect	stringtext28,global,class=STRCODE,delta=2
    34                           	psect	stringtext29,global,class=STRCODE,delta=2
    35                           	psect	stringtext30,global,class=STRCODE,delta=2
    36                           	psect	stringtext31,global,class=STRCODE,delta=2
    37                           	psect	stringtext32,global,class=STRCODE,delta=2
    38                           	psect	stringtext33,global,class=STRCODE,delta=2
    39                           	psect	stringtext34,global,class=STRCODE,delta=2
    40                           	psect	stringtext35,global,class=STRCODE,delta=2
    41                           	psect	stringtext36,global,class=STRCODE,delta=2
    42                           	psect	stringtext37,global,class=STRCODE,delta=2
    43                           	psect	stringtext38,global,class=STRCODE,delta=2
    44                           	psect	stringtext39,global,class=STRCODE,delta=2
    45                           	psect	stringtext40,global,class=STRCODE,delta=2
    46                           	psect	stringtext41,global,class=STRCODE,delta=2
    47                           	psect	stringtext42,global,class=STRCODE,delta=2
    48                           	psect	stringtext43,global,class=STRCODE,delta=2
    49                           	psect	stringtext44,global,class=STRCODE,delta=2
    50                           	psect	stringtext45,global,class=STRCODE,delta=2
    51                           	psect	cinit,global,class=CODE,merge=1,delta=2
    52                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    53                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    54                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    55                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    56                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    57                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    58                           	psect	clrtext,global,class=CODE,delta=2
    59                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    60                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    61                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    62                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    63                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    64                           	psect	text1,local,class=CODE,merge=1,delta=2
    65                           	psect	text2,local,class=CODE,merge=1,delta=2
    66                           	psect	text3,local,class=CODE,merge=1,delta=2
    67                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text6,local,class=CODE,merge=1,delta=2
    70                           	psect	text7,local,class=CODE,merge=1,delta=2
    71                           	psect	text8,local,class=CODE,merge=1,delta=2
    72                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text13,local,class=CODE,merge=1,delta=2
    77                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    78                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text17,local,class=CODE,merge=1,delta=2
    81                           	psect	text18,local,class=CODE,merge=1,delta=2
    82                           	psect	text19,local,class=CODE,merge=1,delta=2
    83                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    86                           	psect	text23,local,class=CODE,merge=1,delta=2
    87                           	psect	text24,local,class=CODE,merge=1,delta=2
    88                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text32,local,class=CODE,merge=1,delta=2
    96                           	psect	text33,local,class=CODE,merge=1,delta=2
    97                           	psect	text34,local,class=CODE,merge=1,delta=2
    98                           	psect	text35,local,class=CODE,merge=1,delta=2
    99                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
   100                           	psect	text37,local,class=CODE,merge=1,delta=2
   101                           	psect	text38,local,class=CODE,merge=1,delta=2
   102                           	psect	text39,local,class=CODE,merge=1,delta=2
   103                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
   104                           	psect	text41,local,class=CODE,merge=1,delta=2
   105                           	psect	text42,local,class=CODE,merge=1,delta=2
   106                           	psect	text43,local,class=CODE,merge=1,delta=2
   107                           	psect	text44,local,class=CODE,merge=1,delta=2
   108                           	psect	text45,local,class=CODE,merge=1,delta=2
   109                           	psect	text46,local,class=CODE,merge=1,delta=2
   110                           	psect	text47,local,class=CODE,merge=1,delta=2
   111                           	psect	text48,local,class=CODE,merge=1,delta=2,group=1
   112                           	psect	text49,local,class=CODE,merge=1,delta=2
   113                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   114                           	psect	text51,local,class=CODE,merge=1,delta=2
   115                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
   116                           	psect	text53,local,class=CODE,merge=1,delta=2
   117                           	psect	text54,local,class=CODE,merge=1,delta=2
   118                           	psect	text55,local,class=CODE,merge=1,delta=2
   119                           	psect	text56,local,class=CODE,merge=1,delta=2
   120                           	psect	text57,local,class=CODE,merge=1,delta=2,group=1
   121                           	psect	text58,local,class=CODE,merge=1,delta=2,group=1
   122                           	psect	text59,local,class=CODE,merge=1,delta=2
   123                           	psect	text60,local,class=CODE,merge=1,delta=2,group=1
   124                           	psect	text61,local,class=CODE,merge=1,delta=2,group=1
   125                           	psect	text62,local,class=CODE,merge=1,delta=2,group=1
   126                           	psect	text63,local,class=CODE,merge=1,delta=2,group=1
   127                           	psect	text64,local,class=CODE,merge=1,delta=2,group=1
   128                           	psect	text65,local,class=CODE,merge=1,delta=2
   129                           	psect	text66,local,class=CODE,merge=1,delta=2
   130                           	psect	text67,local,class=CODE,merge=1,delta=2
   131                           	psect	text68,local,class=CODE,merge=1,delta=2
   132                           	psect	text69,local,class=CODE,merge=1,delta=2
   133                           	psect	text70,local,class=CODE,merge=1,delta=2
   134                           	psect	text71,local,class=CODE,merge=1,delta=2
   135                           	psect	text72,local,class=CODE,merge=1,delta=2
   136                           	psect	text73,local,class=CODE,merge=1,delta=2
   137                           	psect	text74,local,class=CODE,merge=1,delta=2
   138                           	psect	text75,local,class=CODE,merge=1,delta=2
   139                           	psect	text76,local,class=CODE,merge=1,delta=2
   140                           	psect	text77,local,class=CODE,merge=1,delta=2
   141                           	psect	text78,local,class=CODE,merge=1,delta=2
   142                           	psect	text79,local,class=CODE,merge=1,delta=2
   143                           	psect	text80,local,class=CODE,merge=1,delta=2
   144                           	psect	text81,local,class=CODE,merge=1,delta=2
   145                           	psect	text82,local,class=CODE,merge=1,delta=2,group=1
   146                           	psect	intentry,global,class=CODE,delta=2
   147                           	psect	text7_split_1,local,class=CODE,merge=1,delta=2
   148                           	psect	text7_split_2,local,class=CODE,merge=1,delta=2
   149                           	dabs	1,0xCA0,32
   150                           	dabs	1,0xC20,80
   151                           	dabs	1,0xBE1,15
   152                           	dabs	1,0x2771,0,_messageBuffer
   153                           	dabs	1,0x7E,2
   154  0000                     
   155                           ; Version 2.05
   156                           ; Generated 20/12/2018 GMT
   157                           ; 
   158                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   159                           ; All rights reserved.
   160                           ; 
   161                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   162                           ; 
   163                           ; Redistribution and use in source and binary forms, with or without modification, are
   164                           ; permitted provided that the following conditions are met:
   165                           ; 
   166                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   167                           ;        conditions and the following disclaimer.
   168                           ; 
   169                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   170                           ;        of conditions and the following disclaimer in the documentation and/or other
   171                           ;        materials provided with the distribution.
   172                           ; 
   173                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   174                           ;        software without specific prior written permission.
   175                           ; 
   176                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   177                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   178                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   179                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   180                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   181                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   182                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   183                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   184                           ; 
   185                           ; 
   186                           ; Code-generator required, PIC16F1719 Definitions
   187                           ; 
   188                           ; SFR Addresses
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000F                     	;# 
   205  0010                     	;# 
   206  0011                     	;# 
   207  0012                     	;# 
   208  0013                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  008F                     	;# 
   222  0090                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0095                     	;# 
   227  0096                     	;# 
   228  0097                     	;# 
   229  0098                     	;# 
   230  0099                     	;# 
   231  009A                     	;# 
   232  009B                     	;# 
   233  009B                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  0110                     	;# 
   243  0111                     	;# 
   244  0112                     	;# 
   245  0113                     	;# 
   246  0114                     	;# 
   247  0115                     	;# 
   248  0116                     	;# 
   249  0117                     	;# 
   250  0118                     	;# 
   251  0119                     	;# 
   252  011A                     	;# 
   253  011B                     	;# 
   254  011B                     	;# 
   255  011C                     	;# 
   256  018C                     	;# 
   257  018D                     	;# 
   258  018E                     	;# 
   259  018F                     	;# 
   260  0190                     	;# 
   261  0191                     	;# 
   262  0191                     	;# 
   263  0192                     	;# 
   264  0193                     	;# 
   265  0193                     	;# 
   266  0194                     	;# 
   267  0195                     	;# 
   268  0196                     	;# 
   269  0197                     	;# 
   270  0199                     	;# 
   271  0199                     	;# 
   272  0199                     	;# 
   273  019A                     	;# 
   274  019A                     	;# 
   275  019A                     	;# 
   276  019B                     	;# 
   277  019B                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019C                     	;# 
   282  019C                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019D                     	;# 
   286  019D                     	;# 
   287  019E                     	;# 
   288  019E                     	;# 
   289  019E                     	;# 
   290  019F                     	;# 
   291  019F                     	;# 
   292  019F                     	;# 
   293  019F                     	;# 
   294  019F                     	;# 
   295  020C                     	;# 
   296  020D                     	;# 
   297  020E                     	;# 
   298  020F                     	;# 
   299  0210                     	;# 
   300  0211                     	;# 
   301  0211                     	;# 
   302  0212                     	;# 
   303  0212                     	;# 
   304  0213                     	;# 
   305  0213                     	;# 
   306  0214                     	;# 
   307  0214                     	;# 
   308  0215                     	;# 
   309  0215                     	;# 
   310  0215                     	;# 
   311  0215                     	;# 
   312  0216                     	;# 
   313  0216                     	;# 
   314  0217                     	;# 
   315  0217                     	;# 
   316  028C                     	;# 
   317  028D                     	;# 
   318  028E                     	;# 
   319  028F                     	;# 
   320  0290                     	;# 
   321  0291                     	;# 
   322  0291                     	;# 
   323  0292                     	;# 
   324  0293                     	;# 
   325  0293                     	;# 
   326  0298                     	;# 
   327  0298                     	;# 
   328  0299                     	;# 
   329  029A                     	;# 
   330  029A                     	;# 
   331  029E                     	;# 
   332  030C                     	;# 
   333  030D                     	;# 
   334  030E                     	;# 
   335  030F                     	;# 
   336  0310                     	;# 
   337  038C                     	;# 
   338  038D                     	;# 
   339  038E                     	;# 
   340  038F                     	;# 
   341  0390                     	;# 
   342  0391                     	;# 
   343  0392                     	;# 
   344  0393                     	;# 
   345  0394                     	;# 
   346  0395                     	;# 
   347  0396                     	;# 
   348  0397                     	;# 
   349  0398                     	;# 
   350  0399                     	;# 
   351  039D                     	;# 
   352  039E                     	;# 
   353  039F                     	;# 
   354  0415                     	;# 
   355  0416                     	;# 
   356  0417                     	;# 
   357  041C                     	;# 
   358  041D                     	;# 
   359  041E                     	;# 
   360  0498                     	;# 
   361  0498                     	;# 
   362  0499                     	;# 
   363  049A                     	;# 
   364  049B                     	;# 
   365  049B                     	;# 
   366  049C                     	;# 
   367  049D                     	;# 
   368  049E                     	;# 
   369  049F                     	;# 
   370  0511                     	;# 
   371  0515                     	;# 
   372  0617                     	;# 
   373  0618                     	;# 
   374  0619                     	;# 
   375  0619                     	;# 
   376  061A                     	;# 
   377  061B                     	;# 
   378  061C                     	;# 
   379  061C                     	;# 
   380  0691                     	;# 
   381  0692                     	;# 
   382  0693                     	;# 
   383  0694                     	;# 
   384  0695                     	;# 
   385  0696                     	;# 
   386  0697                     	;# 
   387  0698                     	;# 
   388  0699                     	;# 
   389  069A                     	;# 
   390  069B                     	;# 
   391  069C                     	;# 
   392  069D                     	;# 
   393  069E                     	;# 
   394  069F                     	;# 
   395  0E0F                     	;# 
   396  0E10                     	;# 
   397  0E11                     	;# 
   398  0E12                     	;# 
   399  0E13                     	;# 
   400  0E14                     	;# 
   401  0E15                     	;# 
   402  0E17                     	;# 
   403  0E20                     	;# 
   404  0E21                     	;# 
   405  0E22                     	;# 
   406  0E24                     	;# 
   407  0E25                     	;# 
   408  0E28                     	;# 
   409  0E29                     	;# 
   410  0E2A                     	;# 
   411  0E2B                     	;# 
   412  0E90                     	;# 
   413  0E91                     	;# 
   414  0E92                     	;# 
   415  0E93                     	;# 
   416  0E94                     	;# 
   417  0E95                     	;# 
   418  0E96                     	;# 
   419  0E97                     	;# 
   420  0E98                     	;# 
   421  0E99                     	;# 
   422  0E9A                     	;# 
   423  0E9B                     	;# 
   424  0E9C                     	;# 
   425  0E9D                     	;# 
   426  0E9E                     	;# 
   427  0E9F                     	;# 
   428  0EA0                     	;# 
   429  0EA1                     	;# 
   430  0EA2                     	;# 
   431  0EA3                     	;# 
   432  0EA4                     	;# 
   433  0EA5                     	;# 
   434  0EA6                     	;# 
   435  0EA7                     	;# 
   436  0EA8                     	;# 
   437  0EA9                     	;# 
   438  0EAA                     	;# 
   439  0EAB                     	;# 
   440  0EAC                     	;# 
   441  0EAD                     	;# 
   442  0EAE                     	;# 
   443  0EAF                     	;# 
   444  0EB0                     	;# 
   445  0EB1                     	;# 
   446  0EB2                     	;# 
   447  0F0F                     	;# 
   448  0F10                     	;# 
   449  0F11                     	;# 
   450  0F12                     	;# 
   451  0F13                     	;# 
   452  0F14                     	;# 
   453  0F15                     	;# 
   454  0F16                     	;# 
   455  0F17                     	;# 
   456  0F18                     	;# 
   457  0F19                     	;# 
   458  0F1A                     	;# 
   459  0F1B                     	;# 
   460  0F1C                     	;# 
   461  0F1D                     	;# 
   462  0F1E                     	;# 
   463  0F1F                     	;# 
   464  0F20                     	;# 
   465  0F21                     	;# 
   466  0F22                     	;# 
   467  0F23                     	;# 
   468  0F24                     	;# 
   469  0F25                     	;# 
   470  0F26                     	;# 
   471  0F27                     	;# 
   472  0F28                     	;# 
   473  0F29                     	;# 
   474  0F2A                     	;# 
   475  0F2B                     	;# 
   476  0F2C                     	;# 
   477  0F2D                     	;# 
   478  0F2E                     	;# 
   479  0F2F                     	;# 
   480  0F30                     	;# 
   481  0F31                     	;# 
   482  0F32                     	;# 
   483  0F33                     	;# 
   484  0F34                     	;# 
   485  0F35                     	;# 
   486  0F36                     	;# 
   487  0F37                     	;# 
   488  0FE4                     	;# 
   489  0FE5                     	;# 
   490  0FE6                     	;# 
   491  0FE7                     	;# 
   492  0FE8                     	;# 
   493  0FE9                     	;# 
   494  0FEA                     	;# 
   495  0FEB                     	;# 
   496  0FED                     	;# 
   497  0FEE                     	;# 
   498  0FEF                     	;# 
   499  0000                     	;# 
   500  0001                     	;# 
   501  0002                     	;# 
   502  0003                     	;# 
   503  0004                     	;# 
   504  0005                     	;# 
   505  0006                     	;# 
   506  0007                     	;# 
   507  0008                     	;# 
   508  0009                     	;# 
   509  000A                     	;# 
   510  000B                     	;# 
   511  000C                     	;# 
   512  000D                     	;# 
   513  000E                     	;# 
   514  000F                     	;# 
   515  0010                     	;# 
   516  0011                     	;# 
   517  0012                     	;# 
   518  0013                     	;# 
   519  0015                     	;# 
   520  0016                     	;# 
   521  0016                     	;# 
   522  0017                     	;# 
   523  0018                     	;# 
   524  0019                     	;# 
   525  001A                     	;# 
   526  001B                     	;# 
   527  001C                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  008F                     	;# 
   532  0090                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0095                     	;# 
   537  0096                     	;# 
   538  0097                     	;# 
   539  0098                     	;# 
   540  0099                     	;# 
   541  009A                     	;# 
   542  009B                     	;# 
   543  009B                     	;# 
   544  009C                     	;# 
   545  009D                     	;# 
   546  009E                     	;# 
   547  009F                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  010E                     	;# 
   551  010F                     	;# 
   552  0110                     	;# 
   553  0111                     	;# 
   554  0112                     	;# 
   555  0113                     	;# 
   556  0114                     	;# 
   557  0115                     	;# 
   558  0116                     	;# 
   559  0117                     	;# 
   560  0118                     	;# 
   561  0119                     	;# 
   562  011A                     	;# 
   563  011B                     	;# 
   564  011B                     	;# 
   565  011C                     	;# 
   566  018C                     	;# 
   567  018D                     	;# 
   568  018E                     	;# 
   569  018F                     	;# 
   570  0190                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0194                     	;# 
   577  0195                     	;# 
   578  0196                     	;# 
   579  0197                     	;# 
   580  0199                     	;# 
   581  0199                     	;# 
   582  0199                     	;# 
   583  019A                     	;# 
   584  019A                     	;# 
   585  019A                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019C                     	;# 
   592  019C                     	;# 
   593  019C                     	;# 
   594  019D                     	;# 
   595  019D                     	;# 
   596  019D                     	;# 
   597  019E                     	;# 
   598  019E                     	;# 
   599  019E                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  020C                     	;# 
   606  020D                     	;# 
   607  020E                     	;# 
   608  020F                     	;# 
   609  0210                     	;# 
   610  0211                     	;# 
   611  0211                     	;# 
   612  0212                     	;# 
   613  0212                     	;# 
   614  0213                     	;# 
   615  0213                     	;# 
   616  0214                     	;# 
   617  0214                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0215                     	;# 
   622  0216                     	;# 
   623  0216                     	;# 
   624  0217                     	;# 
   625  0217                     	;# 
   626  028C                     	;# 
   627  028D                     	;# 
   628  028E                     	;# 
   629  028F                     	;# 
   630  0290                     	;# 
   631  0291                     	;# 
   632  0291                     	;# 
   633  0292                     	;# 
   634  0293                     	;# 
   635  0293                     	;# 
   636  0298                     	;# 
   637  0298                     	;# 
   638  0299                     	;# 
   639  029A                     	;# 
   640  029A                     	;# 
   641  029E                     	;# 
   642  030C                     	;# 
   643  030D                     	;# 
   644  030E                     	;# 
   645  030F                     	;# 
   646  0310                     	;# 
   647  038C                     	;# 
   648  038D                     	;# 
   649  038E                     	;# 
   650  038F                     	;# 
   651  0390                     	;# 
   652  0391                     	;# 
   653  0392                     	;# 
   654  0393                     	;# 
   655  0394                     	;# 
   656  0395                     	;# 
   657  0396                     	;# 
   658  0397                     	;# 
   659  0398                     	;# 
   660  0399                     	;# 
   661  039D                     	;# 
   662  039E                     	;# 
   663  039F                     	;# 
   664  0415                     	;# 
   665  0416                     	;# 
   666  0417                     	;# 
   667  041C                     	;# 
   668  041D                     	;# 
   669  041E                     	;# 
   670  0498                     	;# 
   671  0498                     	;# 
   672  0499                     	;# 
   673  049A                     	;# 
   674  049B                     	;# 
   675  049B                     	;# 
   676  049C                     	;# 
   677  049D                     	;# 
   678  049E                     	;# 
   679  049F                     	;# 
   680  0511                     	;# 
   681  0515                     	;# 
   682  0617                     	;# 
   683  0618                     	;# 
   684  0619                     	;# 
   685  0619                     	;# 
   686  061A                     	;# 
   687  061B                     	;# 
   688  061C                     	;# 
   689  061C                     	;# 
   690  0691                     	;# 
   691  0692                     	;# 
   692  0693                     	;# 
   693  0694                     	;# 
   694  0695                     	;# 
   695  0696                     	;# 
   696  0697                     	;# 
   697  0698                     	;# 
   698  0699                     	;# 
   699  069A                     	;# 
   700  069B                     	;# 
   701  069C                     	;# 
   702  069D                     	;# 
   703  069E                     	;# 
   704  069F                     	;# 
   705  0E0F                     	;# 
   706  0E10                     	;# 
   707  0E11                     	;# 
   708  0E12                     	;# 
   709  0E13                     	;# 
   710  0E14                     	;# 
   711  0E15                     	;# 
   712  0E17                     	;# 
   713  0E20                     	;# 
   714  0E21                     	;# 
   715  0E22                     	;# 
   716  0E24                     	;# 
   717  0E25                     	;# 
   718  0E28                     	;# 
   719  0E29                     	;# 
   720  0E2A                     	;# 
   721  0E2B                     	;# 
   722  0E90                     	;# 
   723  0E91                     	;# 
   724  0E92                     	;# 
   725  0E93                     	;# 
   726  0E94                     	;# 
   727  0E95                     	;# 
   728  0E96                     	;# 
   729  0E97                     	;# 
   730  0E98                     	;# 
   731  0E99                     	;# 
   732  0E9A                     	;# 
   733  0E9B                     	;# 
   734  0E9C                     	;# 
   735  0E9D                     	;# 
   736  0E9E                     	;# 
   737  0E9F                     	;# 
   738  0EA0                     	;# 
   739  0EA1                     	;# 
   740  0EA2                     	;# 
   741  0EA3                     	;# 
   742  0EA4                     	;# 
   743  0EA5                     	;# 
   744  0EA6                     	;# 
   745  0EA7                     	;# 
   746  0EA8                     	;# 
   747  0EA9                     	;# 
   748  0EAA                     	;# 
   749  0EAB                     	;# 
   750  0EAC                     	;# 
   751  0EAD                     	;# 
   752  0EAE                     	;# 
   753  0EAF                     	;# 
   754  0EB0                     	;# 
   755  0EB1                     	;# 
   756  0EB2                     	;# 
   757  0F0F                     	;# 
   758  0F10                     	;# 
   759  0F11                     	;# 
   760  0F12                     	;# 
   761  0F13                     	;# 
   762  0F14                     	;# 
   763  0F15                     	;# 
   764  0F16                     	;# 
   765  0F17                     	;# 
   766  0F18                     	;# 
   767  0F19                     	;# 
   768  0F1A                     	;# 
   769  0F1B                     	;# 
   770  0F1C                     	;# 
   771  0F1D                     	;# 
   772  0F1E                     	;# 
   773  0F1F                     	;# 
   774  0F20                     	;# 
   775  0F21                     	;# 
   776  0F22                     	;# 
   777  0F23                     	;# 
   778  0F24                     	;# 
   779  0F25                     	;# 
   780  0F26                     	;# 
   781  0F27                     	;# 
   782  0F28                     	;# 
   783  0F29                     	;# 
   784  0F2A                     	;# 
   785  0F2B                     	;# 
   786  0F2C                     	;# 
   787  0F2D                     	;# 
   788  0F2E                     	;# 
   789  0F2F                     	;# 
   790  0F30                     	;# 
   791  0F31                     	;# 
   792  0F32                     	;# 
   793  0F33                     	;# 
   794  0F34                     	;# 
   795  0F35                     	;# 
   796  0F36                     	;# 
   797  0F37                     	;# 
   798  0FE4                     	;# 
   799  0FE5                     	;# 
   800  0FE6                     	;# 
   801  0FE7                     	;# 
   802  0FE8                     	;# 
   803  0FE9                     	;# 
   804  0FEA                     	;# 
   805  0FEB                     	;# 
   806  0FED                     	;# 
   807  0FEE                     	;# 
   808  0FEF                     	;# 
   809  0000                     	;# 
   810  0001                     	;# 
   811  0002                     	;# 
   812  0003                     	;# 
   813  0004                     	;# 
   814  0005                     	;# 
   815  0006                     	;# 
   816  0007                     	;# 
   817  0008                     	;# 
   818  0009                     	;# 
   819  000A                     	;# 
   820  000B                     	;# 
   821  000C                     	;# 
   822  000D                     	;# 
   823  000E                     	;# 
   824  000F                     	;# 
   825  0010                     	;# 
   826  0011                     	;# 
   827  0012                     	;# 
   828  0013                     	;# 
   829  0015                     	;# 
   830  0016                     	;# 
   831  0016                     	;# 
   832  0017                     	;# 
   833  0018                     	;# 
   834  0019                     	;# 
   835  001A                     	;# 
   836  001B                     	;# 
   837  001C                     	;# 
   838  008C                     	;# 
   839  008D                     	;# 
   840  008E                     	;# 
   841  008F                     	;# 
   842  0090                     	;# 
   843  0091                     	;# 
   844  0092                     	;# 
   845  0093                     	;# 
   846  0095                     	;# 
   847  0096                     	;# 
   848  0097                     	;# 
   849  0098                     	;# 
   850  0099                     	;# 
   851  009A                     	;# 
   852  009B                     	;# 
   853  009B                     	;# 
   854  009C                     	;# 
   855  009D                     	;# 
   856  009E                     	;# 
   857  009F                     	;# 
   858  010C                     	;# 
   859  010D                     	;# 
   860  010E                     	;# 
   861  010F                     	;# 
   862  0110                     	;# 
   863  0111                     	;# 
   864  0112                     	;# 
   865  0113                     	;# 
   866  0114                     	;# 
   867  0115                     	;# 
   868  0116                     	;# 
   869  0117                     	;# 
   870  0118                     	;# 
   871  0119                     	;# 
   872  011A                     	;# 
   873  011B                     	;# 
   874  011B                     	;# 
   875  011C                     	;# 
   876  018C                     	;# 
   877  018D                     	;# 
   878  018E                     	;# 
   879  018F                     	;# 
   880  0190                     	;# 
   881  0191                     	;# 
   882  0191                     	;# 
   883  0192                     	;# 
   884  0193                     	;# 
   885  0193                     	;# 
   886  0194                     	;# 
   887  0195                     	;# 
   888  0196                     	;# 
   889  0197                     	;# 
   890  0199                     	;# 
   891  0199                     	;# 
   892  0199                     	;# 
   893  019A                     	;# 
   894  019A                     	;# 
   895  019A                     	;# 
   896  019B                     	;# 
   897  019B                     	;# 
   898  019B                     	;# 
   899  019B                     	;# 
   900  019B                     	;# 
   901  019C                     	;# 
   902  019C                     	;# 
   903  019C                     	;# 
   904  019D                     	;# 
   905  019D                     	;# 
   906  019D                     	;# 
   907  019E                     	;# 
   908  019E                     	;# 
   909  019E                     	;# 
   910  019F                     	;# 
   911  019F                     	;# 
   912  019F                     	;# 
   913  019F                     	;# 
   914  019F                     	;# 
   915  020C                     	;# 
   916  020D                     	;# 
   917  020E                     	;# 
   918  020F                     	;# 
   919  0210                     	;# 
   920  0211                     	;# 
   921  0211                     	;# 
   922  0212                     	;# 
   923  0212                     	;# 
   924  0213                     	;# 
   925  0213                     	;# 
   926  0214                     	;# 
   927  0214                     	;# 
   928  0215                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0215                     	;# 
   932  0216                     	;# 
   933  0216                     	;# 
   934  0217                     	;# 
   935  0217                     	;# 
   936  028C                     	;# 
   937  028D                     	;# 
   938  028E                     	;# 
   939  028F                     	;# 
   940  0290                     	;# 
   941  0291                     	;# 
   942  0291                     	;# 
   943  0292                     	;# 
   944  0293                     	;# 
   945  0293                     	;# 
   946  0298                     	;# 
   947  0298                     	;# 
   948  0299                     	;# 
   949  029A                     	;# 
   950  029A                     	;# 
   951  029E                     	;# 
   952  030C                     	;# 
   953  030D                     	;# 
   954  030E                     	;# 
   955  030F                     	;# 
   956  0310                     	;# 
   957  038C                     	;# 
   958  038D                     	;# 
   959  038E                     	;# 
   960  038F                     	;# 
   961  0390                     	;# 
   962  0391                     	;# 
   963  0392                     	;# 
   964  0393                     	;# 
   965  0394                     	;# 
   966  0395                     	;# 
   967  0396                     	;# 
   968  0397                     	;# 
   969  0398                     	;# 
   970  0399                     	;# 
   971  039D                     	;# 
   972  039E                     	;# 
   973  039F                     	;# 
   974  0415                     	;# 
   975  0416                     	;# 
   976  0417                     	;# 
   977  041C                     	;# 
   978  041D                     	;# 
   979  041E                     	;# 
   980  0498                     	;# 
   981  0498                     	;# 
   982  0499                     	;# 
   983  049A                     	;# 
   984  049B                     	;# 
   985  049B                     	;# 
   986  049C                     	;# 
   987  049D                     	;# 
   988  049E                     	;# 
   989  049F                     	;# 
   990  0511                     	;# 
   991  0515                     	;# 
   992  0617                     	;# 
   993  0618                     	;# 
   994  0619                     	;# 
   995  0619                     	;# 
   996  061A                     	;# 
   997  061B                     	;# 
   998  061C                     	;# 
   999  061C                     	;# 
  1000  0691                     	;# 
  1001  0692                     	;# 
  1002  0693                     	;# 
  1003  0694                     	;# 
  1004  0695                     	;# 
  1005  0696                     	;# 
  1006  0697                     	;# 
  1007  0698                     	;# 
  1008  0699                     	;# 
  1009  069A                     	;# 
  1010  069B                     	;# 
  1011  069C                     	;# 
  1012  069D                     	;# 
  1013  069E                     	;# 
  1014  069F                     	;# 
  1015  0E0F                     	;# 
  1016  0E10                     	;# 
  1017  0E11                     	;# 
  1018  0E12                     	;# 
  1019  0E13                     	;# 
  1020  0E14                     	;# 
  1021  0E15                     	;# 
  1022  0E17                     	;# 
  1023  0E20                     	;# 
  1024  0E21                     	;# 
  1025  0E22                     	;# 
  1026  0E24                     	;# 
  1027  0E25                     	;# 
  1028  0E28                     	;# 
  1029  0E29                     	;# 
  1030  0E2A                     	;# 
  1031  0E2B                     	;# 
  1032  0E90                     	;# 
  1033  0E91                     	;# 
  1034  0E92                     	;# 
  1035  0E93                     	;# 
  1036  0E94                     	;# 
  1037  0E95                     	;# 
  1038  0E96                     	;# 
  1039  0E97                     	;# 
  1040  0E98                     	;# 
  1041  0E99                     	;# 
  1042  0E9A                     	;# 
  1043  0E9B                     	;# 
  1044  0E9C                     	;# 
  1045  0E9D                     	;# 
  1046  0E9E                     	;# 
  1047  0E9F                     	;# 
  1048  0EA0                     	;# 
  1049  0EA1                     	;# 
  1050  0EA2                     	;# 
  1051  0EA3                     	;# 
  1052  0EA4                     	;# 
  1053  0EA5                     	;# 
  1054  0EA6                     	;# 
  1055  0EA7                     	;# 
  1056  0EA8                     	;# 
  1057  0EA9                     	;# 
  1058  0EAA                     	;# 
  1059  0EAB                     	;# 
  1060  0EAC                     	;# 
  1061  0EAD                     	;# 
  1062  0EAE                     	;# 
  1063  0EAF                     	;# 
  1064  0EB0                     	;# 
  1065  0EB1                     	;# 
  1066  0EB2                     	;# 
  1067  0F0F                     	;# 
  1068  0F10                     	;# 
  1069  0F11                     	;# 
  1070  0F12                     	;# 
  1071  0F13                     	;# 
  1072  0F14                     	;# 
  1073  0F15                     	;# 
  1074  0F16                     	;# 
  1075  0F17                     	;# 
  1076  0F18                     	;# 
  1077  0F19                     	;# 
  1078  0F1A                     	;# 
  1079  0F1B                     	;# 
  1080  0F1C                     	;# 
  1081  0F1D                     	;# 
  1082  0F1E                     	;# 
  1083  0F1F                     	;# 
  1084  0F20                     	;# 
  1085  0F21                     	;# 
  1086  0F22                     	;# 
  1087  0F23                     	;# 
  1088  0F24                     	;# 
  1089  0F25                     	;# 
  1090  0F26                     	;# 
  1091  0F27                     	;# 
  1092  0F28                     	;# 
  1093  0F29                     	;# 
  1094  0F2A                     	;# 
  1095  0F2B                     	;# 
  1096  0F2C                     	;# 
  1097  0F2D                     	;# 
  1098  0F2E                     	;# 
  1099  0F2F                     	;# 
  1100  0F30                     	;# 
  1101  0F31                     	;# 
  1102  0F32                     	;# 
  1103  0F33                     	;# 
  1104  0F34                     	;# 
  1105  0F35                     	;# 
  1106  0F36                     	;# 
  1107  0F37                     	;# 
  1108  0FE4                     	;# 
  1109  0FE5                     	;# 
  1110  0FE6                     	;# 
  1111  0FE7                     	;# 
  1112  0FE8                     	;# 
  1113  0FE9                     	;# 
  1114  0FEA                     	;# 
  1115  0FEB                     	;# 
  1116  0FED                     	;# 
  1117  0FEE                     	;# 
  1118  0FEF                     	;# 
  1119  0000                     	;# 
  1120  0001                     	;# 
  1121  0002                     	;# 
  1122  0003                     	;# 
  1123  0004                     	;# 
  1124  0005                     	;# 
  1125  0006                     	;# 
  1126  0007                     	;# 
  1127  0008                     	;# 
  1128  0009                     	;# 
  1129  000A                     	;# 
  1130  000B                     	;# 
  1131  000C                     	;# 
  1132  000D                     	;# 
  1133  000E                     	;# 
  1134  000F                     	;# 
  1135  0010                     	;# 
  1136  0011                     	;# 
  1137  0012                     	;# 
  1138  0013                     	;# 
  1139  0015                     	;# 
  1140  0016                     	;# 
  1141  0016                     	;# 
  1142  0017                     	;# 
  1143  0018                     	;# 
  1144  0019                     	;# 
  1145  001A                     	;# 
  1146  001B                     	;# 
  1147  001C                     	;# 
  1148  008C                     	;# 
  1149  008D                     	;# 
  1150  008E                     	;# 
  1151  008F                     	;# 
  1152  0090                     	;# 
  1153  0091                     	;# 
  1154  0092                     	;# 
  1155  0093                     	;# 
  1156  0095                     	;# 
  1157  0096                     	;# 
  1158  0097                     	;# 
  1159  0098                     	;# 
  1160  0099                     	;# 
  1161  009A                     	;# 
  1162  009B                     	;# 
  1163  009B                     	;# 
  1164  009C                     	;# 
  1165  009D                     	;# 
  1166  009E                     	;# 
  1167  009F                     	;# 
  1168  010C                     	;# 
  1169  010D                     	;# 
  1170  010E                     	;# 
  1171  010F                     	;# 
  1172  0110                     	;# 
  1173  0111                     	;# 
  1174  0112                     	;# 
  1175  0113                     	;# 
  1176  0114                     	;# 
  1177  0115                     	;# 
  1178  0116                     	;# 
  1179  0117                     	;# 
  1180  0118                     	;# 
  1181  0119                     	;# 
  1182  011A                     	;# 
  1183  011B                     	;# 
  1184  011B                     	;# 
  1185  011C                     	;# 
  1186  018C                     	;# 
  1187  018D                     	;# 
  1188  018E                     	;# 
  1189  018F                     	;# 
  1190  0190                     	;# 
  1191  0191                     	;# 
  1192  0191                     	;# 
  1193  0192                     	;# 
  1194  0193                     	;# 
  1195  0193                     	;# 
  1196  0194                     	;# 
  1197  0195                     	;# 
  1198  0196                     	;# 
  1199  0197                     	;# 
  1200  0199                     	;# 
  1201  0199                     	;# 
  1202  0199                     	;# 
  1203  019A                     	;# 
  1204  019A                     	;# 
  1205  019A                     	;# 
  1206  019B                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019B                     	;# 
  1210  019B                     	;# 
  1211  019C                     	;# 
  1212  019C                     	;# 
  1213  019C                     	;# 
  1214  019D                     	;# 
  1215  019D                     	;# 
  1216  019D                     	;# 
  1217  019E                     	;# 
  1218  019E                     	;# 
  1219  019E                     	;# 
  1220  019F                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  019F                     	;# 
  1224  019F                     	;# 
  1225  020C                     	;# 
  1226  020D                     	;# 
  1227  020E                     	;# 
  1228  020F                     	;# 
  1229  0210                     	;# 
  1230  0211                     	;# 
  1231  0211                     	;# 
  1232  0212                     	;# 
  1233  0212                     	;# 
  1234  0213                     	;# 
  1235  0213                     	;# 
  1236  0214                     	;# 
  1237  0214                     	;# 
  1238  0215                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0215                     	;# 
  1242  0216                     	;# 
  1243  0216                     	;# 
  1244  0217                     	;# 
  1245  0217                     	;# 
  1246  028C                     	;# 
  1247  028D                     	;# 
  1248  028E                     	;# 
  1249  028F                     	;# 
  1250  0290                     	;# 
  1251  0291                     	;# 
  1252  0291                     	;# 
  1253  0292                     	;# 
  1254  0293                     	;# 
  1255  0293                     	;# 
  1256  0298                     	;# 
  1257  0298                     	;# 
  1258  0299                     	;# 
  1259  029A                     	;# 
  1260  029A                     	;# 
  1261  029E                     	;# 
  1262  030C                     	;# 
  1263  030D                     	;# 
  1264  030E                     	;# 
  1265  030F                     	;# 
  1266  0310                     	;# 
  1267  038C                     	;# 
  1268  038D                     	;# 
  1269  038E                     	;# 
  1270  038F                     	;# 
  1271  0390                     	;# 
  1272  0391                     	;# 
  1273  0392                     	;# 
  1274  0393                     	;# 
  1275  0394                     	;# 
  1276  0395                     	;# 
  1277  0396                     	;# 
  1278  0397                     	;# 
  1279  0398                     	;# 
  1280  0399                     	;# 
  1281  039D                     	;# 
  1282  039E                     	;# 
  1283  039F                     	;# 
  1284  0415                     	;# 
  1285  0416                     	;# 
  1286  0417                     	;# 
  1287  041C                     	;# 
  1288  041D                     	;# 
  1289  041E                     	;# 
  1290  0498                     	;# 
  1291  0498                     	;# 
  1292  0499                     	;# 
  1293  049A                     	;# 
  1294  049B                     	;# 
  1295  049B                     	;# 
  1296  049C                     	;# 
  1297  049D                     	;# 
  1298  049E                     	;# 
  1299  049F                     	;# 
  1300  0511                     	;# 
  1301  0515                     	;# 
  1302  0617                     	;# 
  1303  0618                     	;# 
  1304  0619                     	;# 
  1305  0619                     	;# 
  1306  061A                     	;# 
  1307  061B                     	;# 
  1308  061C                     	;# 
  1309  061C                     	;# 
  1310  0691                     	;# 
  1311  0692                     	;# 
  1312  0693                     	;# 
  1313  0694                     	;# 
  1314  0695                     	;# 
  1315  0696                     	;# 
  1316  0697                     	;# 
  1317  0698                     	;# 
  1318  0699                     	;# 
  1319  069A                     	;# 
  1320  069B                     	;# 
  1321  069C                     	;# 
  1322  069D                     	;# 
  1323  069E                     	;# 
  1324  069F                     	;# 
  1325  0E0F                     	;# 
  1326  0E10                     	;# 
  1327  0E11                     	;# 
  1328  0E12                     	;# 
  1329  0E13                     	;# 
  1330  0E14                     	;# 
  1331  0E15                     	;# 
  1332  0E17                     	;# 
  1333  0E20                     	;# 
  1334  0E21                     	;# 
  1335  0E22                     	;# 
  1336  0E24                     	;# 
  1337  0E25                     	;# 
  1338  0E28                     	;# 
  1339  0E29                     	;# 
  1340  0E2A                     	;# 
  1341  0E2B                     	;# 
  1342  0E90                     	;# 
  1343  0E91                     	;# 
  1344  0E92                     	;# 
  1345  0E93                     	;# 
  1346  0E94                     	;# 
  1347  0E95                     	;# 
  1348  0E96                     	;# 
  1349  0E97                     	;# 
  1350  0E98                     	;# 
  1351  0E99                     	;# 
  1352  0E9A                     	;# 
  1353  0E9B                     	;# 
  1354  0E9C                     	;# 
  1355  0E9D                     	;# 
  1356  0E9E                     	;# 
  1357  0E9F                     	;# 
  1358  0EA0                     	;# 
  1359  0EA1                     	;# 
  1360  0EA2                     	;# 
  1361  0EA3                     	;# 
  1362  0EA4                     	;# 
  1363  0EA5                     	;# 
  1364  0EA6                     	;# 
  1365  0EA7                     	;# 
  1366  0EA8                     	;# 
  1367  0EA9                     	;# 
  1368  0EAA                     	;# 
  1369  0EAB                     	;# 
  1370  0EAC                     	;# 
  1371  0EAD                     	;# 
  1372  0EAE                     	;# 
  1373  0EAF                     	;# 
  1374  0EB0                     	;# 
  1375  0EB1                     	;# 
  1376  0EB2                     	;# 
  1377  0F0F                     	;# 
  1378  0F10                     	;# 
  1379  0F11                     	;# 
  1380  0F12                     	;# 
  1381  0F13                     	;# 
  1382  0F14                     	;# 
  1383  0F15                     	;# 
  1384  0F16                     	;# 
  1385  0F17                     	;# 
  1386  0F18                     	;# 
  1387  0F19                     	;# 
  1388  0F1A                     	;# 
  1389  0F1B                     	;# 
  1390  0F1C                     	;# 
  1391  0F1D                     	;# 
  1392  0F1E                     	;# 
  1393  0F1F                     	;# 
  1394  0F20                     	;# 
  1395  0F21                     	;# 
  1396  0F22                     	;# 
  1397  0F23                     	;# 
  1398  0F24                     	;# 
  1399  0F25                     	;# 
  1400  0F26                     	;# 
  1401  0F27                     	;# 
  1402  0F28                     	;# 
  1403  0F29                     	;# 
  1404  0F2A                     	;# 
  1405  0F2B                     	;# 
  1406  0F2C                     	;# 
  1407  0F2D                     	;# 
  1408  0F2E                     	;# 
  1409  0F2F                     	;# 
  1410  0F30                     	;# 
  1411  0F31                     	;# 
  1412  0F32                     	;# 
  1413  0F33                     	;# 
  1414  0F34                     	;# 
  1415  0F35                     	;# 
  1416  0F36                     	;# 
  1417  0F37                     	;# 
  1418  0FE4                     	;# 
  1419  0FE5                     	;# 
  1420  0FE6                     	;# 
  1421  0FE7                     	;# 
  1422  0FE8                     	;# 
  1423  0FE9                     	;# 
  1424  0FEA                     	;# 
  1425  0FEB                     	;# 
  1426  0FED                     	;# 
  1427  0FEE                     	;# 
  1428  0FEF                     	;# 
  1429  0000                     	;# 
  1430  0001                     	;# 
  1431  0002                     	;# 
  1432  0003                     	;# 
  1433  0004                     	;# 
  1434  0005                     	;# 
  1435  0006                     	;# 
  1436  0007                     	;# 
  1437  0008                     	;# 
  1438  0009                     	;# 
  1439  000A                     	;# 
  1440  000B                     	;# 
  1441  000C                     	;# 
  1442  000D                     	;# 
  1443  000E                     	;# 
  1444  000F                     	;# 
  1445  0010                     	;# 
  1446  0011                     	;# 
  1447  0012                     	;# 
  1448  0013                     	;# 
  1449  0015                     	;# 
  1450  0016                     	;# 
  1451  0016                     	;# 
  1452  0017                     	;# 
  1453  0018                     	;# 
  1454  0019                     	;# 
  1455  001A                     	;# 
  1456  001B                     	;# 
  1457  001C                     	;# 
  1458  008C                     	;# 
  1459  008D                     	;# 
  1460  008E                     	;# 
  1461  008F                     	;# 
  1462  0090                     	;# 
  1463  0091                     	;# 
  1464  0092                     	;# 
  1465  0093                     	;# 
  1466  0095                     	;# 
  1467  0096                     	;# 
  1468  0097                     	;# 
  1469  0098                     	;# 
  1470  0099                     	;# 
  1471  009A                     	;# 
  1472  009B                     	;# 
  1473  009B                     	;# 
  1474  009C                     	;# 
  1475  009D                     	;# 
  1476  009E                     	;# 
  1477  009F                     	;# 
  1478  010C                     	;# 
  1479  010D                     	;# 
  1480  010E                     	;# 
  1481  010F                     	;# 
  1482  0110                     	;# 
  1483  0111                     	;# 
  1484  0112                     	;# 
  1485  0113                     	;# 
  1486  0114                     	;# 
  1487  0115                     	;# 
  1488  0116                     	;# 
  1489  0117                     	;# 
  1490  0118                     	;# 
  1491  0119                     	;# 
  1492  011A                     	;# 
  1493  011B                     	;# 
  1494  011B                     	;# 
  1495  011C                     	;# 
  1496  018C                     	;# 
  1497  018D                     	;# 
  1498  018E                     	;# 
  1499  018F                     	;# 
  1500  0190                     	;# 
  1501  0191                     	;# 
  1502  0191                     	;# 
  1503  0192                     	;# 
  1504  0193                     	;# 
  1505  0193                     	;# 
  1506  0194                     	;# 
  1507  0195                     	;# 
  1508  0196                     	;# 
  1509  0197                     	;# 
  1510  0199                     	;# 
  1511  0199                     	;# 
  1512  0199                     	;# 
  1513  019A                     	;# 
  1514  019A                     	;# 
  1515  019A                     	;# 
  1516  019B                     	;# 
  1517  019B                     	;# 
  1518  019B                     	;# 
  1519  019B                     	;# 
  1520  019B                     	;# 
  1521  019C                     	;# 
  1522  019C                     	;# 
  1523  019C                     	;# 
  1524  019D                     	;# 
  1525  019D                     	;# 
  1526  019D                     	;# 
  1527  019E                     	;# 
  1528  019E                     	;# 
  1529  019E                     	;# 
  1530  019F                     	;# 
  1531  019F                     	;# 
  1532  019F                     	;# 
  1533  019F                     	;# 
  1534  019F                     	;# 
  1535  020C                     	;# 
  1536  020D                     	;# 
  1537  020E                     	;# 
  1538  020F                     	;# 
  1539  0210                     	;# 
  1540  0211                     	;# 
  1541  0211                     	;# 
  1542  0212                     	;# 
  1543  0212                     	;# 
  1544  0213                     	;# 
  1545  0213                     	;# 
  1546  0214                     	;# 
  1547  0214                     	;# 
  1548  0215                     	;# 
  1549  0215                     	;# 
  1550  0215                     	;# 
  1551  0215                     	;# 
  1552  0216                     	;# 
  1553  0216                     	;# 
  1554  0217                     	;# 
  1555  0217                     	;# 
  1556  028C                     	;# 
  1557  028D                     	;# 
  1558  028E                     	;# 
  1559  028F                     	;# 
  1560  0290                     	;# 
  1561  0291                     	;# 
  1562  0291                     	;# 
  1563  0292                     	;# 
  1564  0293                     	;# 
  1565  0293                     	;# 
  1566  0298                     	;# 
  1567  0298                     	;# 
  1568  0299                     	;# 
  1569  029A                     	;# 
  1570  029A                     	;# 
  1571  029E                     	;# 
  1572  030C                     	;# 
  1573  030D                     	;# 
  1574  030E                     	;# 
  1575  030F                     	;# 
  1576  0310                     	;# 
  1577  038C                     	;# 
  1578  038D                     	;# 
  1579  038E                     	;# 
  1580  038F                     	;# 
  1581  0390                     	;# 
  1582  0391                     	;# 
  1583  0392                     	;# 
  1584  0393                     	;# 
  1585  0394                     	;# 
  1586  0395                     	;# 
  1587  0396                     	;# 
  1588  0397                     	;# 
  1589  0398                     	;# 
  1590  0399                     	;# 
  1591  039D                     	;# 
  1592  039E                     	;# 
  1593  039F                     	;# 
  1594  0415                     	;# 
  1595  0416                     	;# 
  1596  0417                     	;# 
  1597  041C                     	;# 
  1598  041D                     	;# 
  1599  041E                     	;# 
  1600  0498                     	;# 
  1601  0498                     	;# 
  1602  0499                     	;# 
  1603  049A                     	;# 
  1604  049B                     	;# 
  1605  049B                     	;# 
  1606  049C                     	;# 
  1607  049D                     	;# 
  1608  049E                     	;# 
  1609  049F                     	;# 
  1610  0511                     	;# 
  1611  0515                     	;# 
  1612  0617                     	;# 
  1613  0618                     	;# 
  1614  0619                     	;# 
  1615  0619                     	;# 
  1616  061A                     	;# 
  1617  061B                     	;# 
  1618  061C                     	;# 
  1619  061C                     	;# 
  1620  0691                     	;# 
  1621  0692                     	;# 
  1622  0693                     	;# 
  1623  0694                     	;# 
  1624  0695                     	;# 
  1625  0696                     	;# 
  1626  0697                     	;# 
  1627  0698                     	;# 
  1628  0699                     	;# 
  1629  069A                     	;# 
  1630  069B                     	;# 
  1631  069C                     	;# 
  1632  069D                     	;# 
  1633  069E                     	;# 
  1634  069F                     	;# 
  1635  0E0F                     	;# 
  1636  0E10                     	;# 
  1637  0E11                     	;# 
  1638  0E12                     	;# 
  1639  0E13                     	;# 
  1640  0E14                     	;# 
  1641  0E15                     	;# 
  1642  0E17                     	;# 
  1643  0E20                     	;# 
  1644  0E21                     	;# 
  1645  0E22                     	;# 
  1646  0E24                     	;# 
  1647  0E25                     	;# 
  1648  0E28                     	;# 
  1649  0E29                     	;# 
  1650  0E2A                     	;# 
  1651  0E2B                     	;# 
  1652  0E90                     	;# 
  1653  0E91                     	;# 
  1654  0E92                     	;# 
  1655  0E93                     	;# 
  1656  0E94                     	;# 
  1657  0E95                     	;# 
  1658  0E96                     	;# 
  1659  0E97                     	;# 
  1660  0E98                     	;# 
  1661  0E99                     	;# 
  1662  0E9A                     	;# 
  1663  0E9B                     	;# 
  1664  0E9C                     	;# 
  1665  0E9D                     	;# 
  1666  0E9E                     	;# 
  1667  0E9F                     	;# 
  1668  0EA0                     	;# 
  1669  0EA1                     	;# 
  1670  0EA2                     	;# 
  1671  0EA3                     	;# 
  1672  0EA4                     	;# 
  1673  0EA5                     	;# 
  1674  0EA6                     	;# 
  1675  0EA7                     	;# 
  1676  0EA8                     	;# 
  1677  0EA9                     	;# 
  1678  0EAA                     	;# 
  1679  0EAB                     	;# 
  1680  0EAC                     	;# 
  1681  0EAD                     	;# 
  1682  0EAE                     	;# 
  1683  0EAF                     	;# 
  1684  0EB0                     	;# 
  1685  0EB1                     	;# 
  1686  0EB2                     	;# 
  1687  0F0F                     	;# 
  1688  0F10                     	;# 
  1689  0F11                     	;# 
  1690  0F12                     	;# 
  1691  0F13                     	;# 
  1692  0F14                     	;# 
  1693  0F15                     	;# 
  1694  0F16                     	;# 
  1695  0F17                     	;# 
  1696  0F18                     	;# 
  1697  0F19                     	;# 
  1698  0F1A                     	;# 
  1699  0F1B                     	;# 
  1700  0F1C                     	;# 
  1701  0F1D                     	;# 
  1702  0F1E                     	;# 
  1703  0F1F                     	;# 
  1704  0F20                     	;# 
  1705  0F21                     	;# 
  1706  0F22                     	;# 
  1707  0F23                     	;# 
  1708  0F24                     	;# 
  1709  0F25                     	;# 
  1710  0F26                     	;# 
  1711  0F27                     	;# 
  1712  0F28                     	;# 
  1713  0F29                     	;# 
  1714  0F2A                     	;# 
  1715  0F2B                     	;# 
  1716  0F2C                     	;# 
  1717  0F2D                     	;# 
  1718  0F2E                     	;# 
  1719  0F2F                     	;# 
  1720  0F30                     	;# 
  1721  0F31                     	;# 
  1722  0F32                     	;# 
  1723  0F33                     	;# 
  1724  0F34                     	;# 
  1725  0F35                     	;# 
  1726  0F36                     	;# 
  1727  0F37                     	;# 
  1728  0FE4                     	;# 
  1729  0FE5                     	;# 
  1730  0FE6                     	;# 
  1731  0FE7                     	;# 
  1732  0FE8                     	;# 
  1733  0FE9                     	;# 
  1734  0FEA                     	;# 
  1735  0FEB                     	;# 
  1736  0FED                     	;# 
  1737  0FEE                     	;# 
  1738  0FEF                     	;# 
  1739  0000                     	;# 
  1740  0001                     	;# 
  1741  0002                     	;# 
  1742  0003                     	;# 
  1743  0004                     	;# 
  1744  0005                     	;# 
  1745  0006                     	;# 
  1746  0007                     	;# 
  1747  0008                     	;# 
  1748  0009                     	;# 
  1749  000A                     	;# 
  1750  000B                     	;# 
  1751  000C                     	;# 
  1752  000D                     	;# 
  1753  000E                     	;# 
  1754  000F                     	;# 
  1755  0010                     	;# 
  1756  0011                     	;# 
  1757  0012                     	;# 
  1758  0013                     	;# 
  1759  0015                     	;# 
  1760  0016                     	;# 
  1761  0016                     	;# 
  1762  0017                     	;# 
  1763  0018                     	;# 
  1764  0019                     	;# 
  1765  001A                     	;# 
  1766  001B                     	;# 
  1767  001C                     	;# 
  1768  008C                     	;# 
  1769  008D                     	;# 
  1770  008E                     	;# 
  1771  008F                     	;# 
  1772  0090                     	;# 
  1773  0091                     	;# 
  1774  0092                     	;# 
  1775  0093                     	;# 
  1776  0095                     	;# 
  1777  0096                     	;# 
  1778  0097                     	;# 
  1779  0098                     	;# 
  1780  0099                     	;# 
  1781  009A                     	;# 
  1782  009B                     	;# 
  1783  009B                     	;# 
  1784  009C                     	;# 
  1785  009D                     	;# 
  1786  009E                     	;# 
  1787  009F                     	;# 
  1788  010C                     	;# 
  1789  010D                     	;# 
  1790  010E                     	;# 
  1791  010F                     	;# 
  1792  0110                     	;# 
  1793  0111                     	;# 
  1794  0112                     	;# 
  1795  0113                     	;# 
  1796  0114                     	;# 
  1797  0115                     	;# 
  1798  0116                     	;# 
  1799  0117                     	;# 
  1800  0118                     	;# 
  1801  0119                     	;# 
  1802  011A                     	;# 
  1803  011B                     	;# 
  1804  011B                     	;# 
  1805  011C                     	;# 
  1806  018C                     	;# 
  1807  018D                     	;# 
  1808  018E                     	;# 
  1809  018F                     	;# 
  1810  0190                     	;# 
  1811  0191                     	;# 
  1812  0191                     	;# 
  1813  0192                     	;# 
  1814  0193                     	;# 
  1815  0193                     	;# 
  1816  0194                     	;# 
  1817  0195                     	;# 
  1818  0196                     	;# 
  1819  0197                     	;# 
  1820  0199                     	;# 
  1821  0199                     	;# 
  1822  0199                     	;# 
  1823  019A                     	;# 
  1824  019A                     	;# 
  1825  019A                     	;# 
  1826  019B                     	;# 
  1827  019B                     	;# 
  1828  019B                     	;# 
  1829  019B                     	;# 
  1830  019B                     	;# 
  1831  019C                     	;# 
  1832  019C                     	;# 
  1833  019C                     	;# 
  1834  019D                     	;# 
  1835  019D                     	;# 
  1836  019D                     	;# 
  1837  019E                     	;# 
  1838  019E                     	;# 
  1839  019E                     	;# 
  1840  019F                     	;# 
  1841  019F                     	;# 
  1842  019F                     	;# 
  1843  019F                     	;# 
  1844  019F                     	;# 
  1845  020C                     	;# 
  1846  020D                     	;# 
  1847  020E                     	;# 
  1848  020F                     	;# 
  1849  0210                     	;# 
  1850  0211                     	;# 
  1851  0211                     	;# 
  1852  0212                     	;# 
  1853  0212                     	;# 
  1854  0213                     	;# 
  1855  0213                     	;# 
  1856  0214                     	;# 
  1857  0214                     	;# 
  1858  0215                     	;# 
  1859  0215                     	;# 
  1860  0215                     	;# 
  1861  0215                     	;# 
  1862  0216                     	;# 
  1863  0216                     	;# 
  1864  0217                     	;# 
  1865  0217                     	;# 
  1866  028C                     	;# 
  1867  028D                     	;# 
  1868  028E                     	;# 
  1869  028F                     	;# 
  1870  0290                     	;# 
  1871  0291                     	;# 
  1872  0291                     	;# 
  1873  0292                     	;# 
  1874  0293                     	;# 
  1875  0293                     	;# 
  1876  0298                     	;# 
  1877  0298                     	;# 
  1878  0299                     	;# 
  1879  029A                     	;# 
  1880  029A                     	;# 
  1881  029E                     	;# 
  1882  030C                     	;# 
  1883  030D                     	;# 
  1884  030E                     	;# 
  1885  030F                     	;# 
  1886  0310                     	;# 
  1887  038C                     	;# 
  1888  038D                     	;# 
  1889  038E                     	;# 
  1890  038F                     	;# 
  1891  0390                     	;# 
  1892  0391                     	;# 
  1893  0392                     	;# 
  1894  0393                     	;# 
  1895  0394                     	;# 
  1896  0395                     	;# 
  1897  0396                     	;# 
  1898  0397                     	;# 
  1899  0398                     	;# 
  1900  0399                     	;# 
  1901  039D                     	;# 
  1902  039E                     	;# 
  1903  039F                     	;# 
  1904  0415                     	;# 
  1905  0416                     	;# 
  1906  0417                     	;# 
  1907  041C                     	;# 
  1908  041D                     	;# 
  1909  041E                     	;# 
  1910  0498                     	;# 
  1911  0498                     	;# 
  1912  0499                     	;# 
  1913  049A                     	;# 
  1914  049B                     	;# 
  1915  049B                     	;# 
  1916  049C                     	;# 
  1917  049D                     	;# 
  1918  049E                     	;# 
  1919  049F                     	;# 
  1920  0511                     	;# 
  1921  0515                     	;# 
  1922  0617                     	;# 
  1923  0618                     	;# 
  1924  0619                     	;# 
  1925  0619                     	;# 
  1926  061A                     	;# 
  1927  061B                     	;# 
  1928  061C                     	;# 
  1929  061C                     	;# 
  1930  0691                     	;# 
  1931  0692                     	;# 
  1932  0693                     	;# 
  1933  0694                     	;# 
  1934  0695                     	;# 
  1935  0696                     	;# 
  1936  0697                     	;# 
  1937  0698                     	;# 
  1938  0699                     	;# 
  1939  069A                     	;# 
  1940  069B                     	;# 
  1941  069C                     	;# 
  1942  069D                     	;# 
  1943  069E                     	;# 
  1944  069F                     	;# 
  1945  0E0F                     	;# 
  1946  0E10                     	;# 
  1947  0E11                     	;# 
  1948  0E12                     	;# 
  1949  0E13                     	;# 
  1950  0E14                     	;# 
  1951  0E15                     	;# 
  1952  0E17                     	;# 
  1953  0E20                     	;# 
  1954  0E21                     	;# 
  1955  0E22                     	;# 
  1956  0E24                     	;# 
  1957  0E25                     	;# 
  1958  0E28                     	;# 
  1959  0E29                     	;# 
  1960  0E2A                     	;# 
  1961  0E2B                     	;# 
  1962  0E90                     	;# 
  1963  0E91                     	;# 
  1964  0E92                     	;# 
  1965  0E93                     	;# 
  1966  0E94                     	;# 
  1967  0E95                     	;# 
  1968  0E96                     	;# 
  1969  0E97                     	;# 
  1970  0E98                     	;# 
  1971  0E99                     	;# 
  1972  0E9A                     	;# 
  1973  0E9B                     	;# 
  1974  0E9C                     	;# 
  1975  0E9D                     	;# 
  1976  0E9E                     	;# 
  1977  0E9F                     	;# 
  1978  0EA0                     	;# 
  1979  0EA1                     	;# 
  1980  0EA2                     	;# 
  1981  0EA3                     	;# 
  1982  0EA4                     	;# 
  1983  0EA5                     	;# 
  1984  0EA6                     	;# 
  1985  0EA7                     	;# 
  1986  0EA8                     	;# 
  1987  0EA9                     	;# 
  1988  0EAA                     	;# 
  1989  0EAB                     	;# 
  1990  0EAC                     	;# 
  1991  0EAD                     	;# 
  1992  0EAE                     	;# 
  1993  0EAF                     	;# 
  1994  0EB0                     	;# 
  1995  0EB1                     	;# 
  1996  0EB2                     	;# 
  1997  0F0F                     	;# 
  1998  0F10                     	;# 
  1999  0F11                     	;# 
  2000  0F12                     	;# 
  2001  0F13                     	;# 
  2002  0F14                     	;# 
  2003  0F15                     	;# 
  2004  0F16                     	;# 
  2005  0F17                     	;# 
  2006  0F18                     	;# 
  2007  0F19                     	;# 
  2008  0F1A                     	;# 
  2009  0F1B                     	;# 
  2010  0F1C                     	;# 
  2011  0F1D                     	;# 
  2012  0F1E                     	;# 
  2013  0F1F                     	;# 
  2014  0F20                     	;# 
  2015  0F21                     	;# 
  2016  0F22                     	;# 
  2017  0F23                     	;# 
  2018  0F24                     	;# 
  2019  0F25                     	;# 
  2020  0F26                     	;# 
  2021  0F27                     	;# 
  2022  0F28                     	;# 
  2023  0F29                     	;# 
  2024  0F2A                     	;# 
  2025  0F2B                     	;# 
  2026  0F2C                     	;# 
  2027  0F2D                     	;# 
  2028  0F2E                     	;# 
  2029  0F2F                     	;# 
  2030  0F30                     	;# 
  2031  0F31                     	;# 
  2032  0F32                     	;# 
  2033  0F33                     	;# 
  2034  0F34                     	;# 
  2035  0F35                     	;# 
  2036  0F36                     	;# 
  2037  0F37                     	;# 
  2038  0FE4                     	;# 
  2039  0FE5                     	;# 
  2040  0FE6                     	;# 
  2041  0FE7                     	;# 
  2042  0FE8                     	;# 
  2043  0FE9                     	;# 
  2044  0FEA                     	;# 
  2045  0FEB                     	;# 
  2046  0FED                     	;# 
  2047  0FEE                     	;# 
  2048  0FEF                     	;# 
  2049  0000                     	;# 
  2050  0001                     	;# 
  2051  0002                     	;# 
  2052  0003                     	;# 
  2053  0004                     	;# 
  2054  0005                     	;# 
  2055  0006                     	;# 
  2056  0007                     	;# 
  2057  0008                     	;# 
  2058  0009                     	;# 
  2059  000A                     	;# 
  2060  000B                     	;# 
  2061  000C                     	;# 
  2062  000D                     	;# 
  2063  000E                     	;# 
  2064  000F                     	;# 
  2065  0010                     	;# 
  2066  0011                     	;# 
  2067  0012                     	;# 
  2068  0013                     	;# 
  2069  0015                     	;# 
  2070  0016                     	;# 
  2071  0016                     	;# 
  2072  0017                     	;# 
  2073  0018                     	;# 
  2074  0019                     	;# 
  2075  001A                     	;# 
  2076  001B                     	;# 
  2077  001C                     	;# 
  2078  008C                     	;# 
  2079  008D                     	;# 
  2080  008E                     	;# 
  2081  008F                     	;# 
  2082  0090                     	;# 
  2083  0091                     	;# 
  2084  0092                     	;# 
  2085  0093                     	;# 
  2086  0095                     	;# 
  2087  0096                     	;# 
  2088  0097                     	;# 
  2089  0098                     	;# 
  2090  0099                     	;# 
  2091  009A                     	;# 
  2092  009B                     	;# 
  2093  009B                     	;# 
  2094  009C                     	;# 
  2095  009D                     	;# 
  2096  009E                     	;# 
  2097  009F                     	;# 
  2098  010C                     	;# 
  2099  010D                     	;# 
  2100  010E                     	;# 
  2101  010F                     	;# 
  2102  0110                     	;# 
  2103  0111                     	;# 
  2104  0112                     	;# 
  2105  0113                     	;# 
  2106  0114                     	;# 
  2107  0115                     	;# 
  2108  0116                     	;# 
  2109  0117                     	;# 
  2110  0118                     	;# 
  2111  0119                     	;# 
  2112  011A                     	;# 
  2113  011B                     	;# 
  2114  011B                     	;# 
  2115  011C                     	;# 
  2116  018C                     	;# 
  2117  018D                     	;# 
  2118  018E                     	;# 
  2119  018F                     	;# 
  2120  0190                     	;# 
  2121  0191                     	;# 
  2122  0191                     	;# 
  2123  0192                     	;# 
  2124  0193                     	;# 
  2125  0193                     	;# 
  2126  0194                     	;# 
  2127  0195                     	;# 
  2128  0196                     	;# 
  2129  0197                     	;# 
  2130  0199                     	;# 
  2131  0199                     	;# 
  2132  0199                     	;# 
  2133  019A                     	;# 
  2134  019A                     	;# 
  2135  019A                     	;# 
  2136  019B                     	;# 
  2137  019B                     	;# 
  2138  019B                     	;# 
  2139  019B                     	;# 
  2140  019B                     	;# 
  2141  019C                     	;# 
  2142  019C                     	;# 
  2143  019C                     	;# 
  2144  019D                     	;# 
  2145  019D                     	;# 
  2146  019D                     	;# 
  2147  019E                     	;# 
  2148  019E                     	;# 
  2149  019E                     	;# 
  2150  019F                     	;# 
  2151  019F                     	;# 
  2152  019F                     	;# 
  2153  019F                     	;# 
  2154  019F                     	;# 
  2155  020C                     	;# 
  2156  020D                     	;# 
  2157  020E                     	;# 
  2158  020F                     	;# 
  2159  0210                     	;# 
  2160  0211                     	;# 
  2161  0211                     	;# 
  2162  0212                     	;# 
  2163  0212                     	;# 
  2164  0213                     	;# 
  2165  0213                     	;# 
  2166  0214                     	;# 
  2167  0214                     	;# 
  2168  0215                     	;# 
  2169  0215                     	;# 
  2170  0215                     	;# 
  2171  0215                     	;# 
  2172  0216                     	;# 
  2173  0216                     	;# 
  2174  0217                     	;# 
  2175  0217                     	;# 
  2176  028C                     	;# 
  2177  028D                     	;# 
  2178  028E                     	;# 
  2179  028F                     	;# 
  2180  0290                     	;# 
  2181  0291                     	;# 
  2182  0291                     	;# 
  2183  0292                     	;# 
  2184  0293                     	;# 
  2185  0293                     	;# 
  2186  0298                     	;# 
  2187  0298                     	;# 
  2188  0299                     	;# 
  2189  029A                     	;# 
  2190  029A                     	;# 
  2191  029E                     	;# 
  2192  030C                     	;# 
  2193  030D                     	;# 
  2194  030E                     	;# 
  2195  030F                     	;# 
  2196  0310                     	;# 
  2197  038C                     	;# 
  2198  038D                     	;# 
  2199  038E                     	;# 
  2200  038F                     	;# 
  2201  0390                     	;# 
  2202  0391                     	;# 
  2203  0392                     	;# 
  2204  0393                     	;# 
  2205  0394                     	;# 
  2206  0395                     	;# 
  2207  0396                     	;# 
  2208  0397                     	;# 
  2209  0398                     	;# 
  2210  0399                     	;# 
  2211  039D                     	;# 
  2212  039E                     	;# 
  2213  039F                     	;# 
  2214  0415                     	;# 
  2215  0416                     	;# 
  2216  0417                     	;# 
  2217  041C                     	;# 
  2218  041D                     	;# 
  2219  041E                     	;# 
  2220  0498                     	;# 
  2221  0498                     	;# 
  2222  0499                     	;# 
  2223  049A                     	;# 
  2224  049B                     	;# 
  2225  049B                     	;# 
  2226  049C                     	;# 
  2227  049D                     	;# 
  2228  049E                     	;# 
  2229  049F                     	;# 
  2230  0511                     	;# 
  2231  0515                     	;# 
  2232  0617                     	;# 
  2233  0618                     	;# 
  2234  0619                     	;# 
  2235  0619                     	;# 
  2236  061A                     	;# 
  2237  061B                     	;# 
  2238  061C                     	;# 
  2239  061C                     	;# 
  2240  0691                     	;# 
  2241  0692                     	;# 
  2242  0693                     	;# 
  2243  0694                     	;# 
  2244  0695                     	;# 
  2245  0696                     	;# 
  2246  0697                     	;# 
  2247  0698                     	;# 
  2248  0699                     	;# 
  2249  069A                     	;# 
  2250  069B                     	;# 
  2251  069C                     	;# 
  2252  069D                     	;# 
  2253  069E                     	;# 
  2254  069F                     	;# 
  2255  0E0F                     	;# 
  2256  0E10                     	;# 
  2257  0E11                     	;# 
  2258  0E12                     	;# 
  2259  0E13                     	;# 
  2260  0E14                     	;# 
  2261  0E15                     	;# 
  2262  0E17                     	;# 
  2263  0E20                     	;# 
  2264  0E21                     	;# 
  2265  0E22                     	;# 
  2266  0E24                     	;# 
  2267  0E25                     	;# 
  2268  0E28                     	;# 
  2269  0E29                     	;# 
  2270  0E2A                     	;# 
  2271  0E2B                     	;# 
  2272  0E90                     	;# 
  2273  0E91                     	;# 
  2274  0E92                     	;# 
  2275  0E93                     	;# 
  2276  0E94                     	;# 
  2277  0E95                     	;# 
  2278  0E96                     	;# 
  2279  0E97                     	;# 
  2280  0E98                     	;# 
  2281  0E99                     	;# 
  2282  0E9A                     	;# 
  2283  0E9B                     	;# 
  2284  0E9C                     	;# 
  2285  0E9D                     	;# 
  2286  0E9E                     	;# 
  2287  0E9F                     	;# 
  2288  0EA0                     	;# 
  2289  0EA1                     	;# 
  2290  0EA2                     	;# 
  2291  0EA3                     	;# 
  2292  0EA4                     	;# 
  2293  0EA5                     	;# 
  2294  0EA6                     	;# 
  2295  0EA7                     	;# 
  2296  0EA8                     	;# 
  2297  0EA9                     	;# 
  2298  0EAA                     	;# 
  2299  0EAB                     	;# 
  2300  0EAC                     	;# 
  2301  0EAD                     	;# 
  2302  0EAE                     	;# 
  2303  0EAF                     	;# 
  2304  0EB0                     	;# 
  2305  0EB1                     	;# 
  2306  0EB2                     	;# 
  2307  0F0F                     	;# 
  2308  0F10                     	;# 
  2309  0F11                     	;# 
  2310  0F12                     	;# 
  2311  0F13                     	;# 
  2312  0F14                     	;# 
  2313  0F15                     	;# 
  2314  0F16                     	;# 
  2315  0F17                     	;# 
  2316  0F18                     	;# 
  2317  0F19                     	;# 
  2318  0F1A                     	;# 
  2319  0F1B                     	;# 
  2320  0F1C                     	;# 
  2321  0F1D                     	;# 
  2322  0F1E                     	;# 
  2323  0F1F                     	;# 
  2324  0F20                     	;# 
  2325  0F21                     	;# 
  2326  0F22                     	;# 
  2327  0F23                     	;# 
  2328  0F24                     	;# 
  2329  0F25                     	;# 
  2330  0F26                     	;# 
  2331  0F27                     	;# 
  2332  0F28                     	;# 
  2333  0F29                     	;# 
  2334  0F2A                     	;# 
  2335  0F2B                     	;# 
  2336  0F2C                     	;# 
  2337  0F2D                     	;# 
  2338  0F2E                     	;# 
  2339  0F2F                     	;# 
  2340  0F30                     	;# 
  2341  0F31                     	;# 
  2342  0F32                     	;# 
  2343  0F33                     	;# 
  2344  0F34                     	;# 
  2345  0F35                     	;# 
  2346  0F36                     	;# 
  2347  0F37                     	;# 
  2348  0FE4                     	;# 
  2349  0FE5                     	;# 
  2350  0FE6                     	;# 
  2351  0FE7                     	;# 
  2352  0FE8                     	;# 
  2353  0FE9                     	;# 
  2354  0FEA                     	;# 
  2355  0FEB                     	;# 
  2356  0FED                     	;# 
  2357  0FEE                     	;# 
  2358  0FEF                     	;_messageBuffer
  2359                           
  2360                           	psect	idataBANK3
  2361  324B                     __pidataBANK3:	
  2362                           
  2363                           ;initializer for _samsung_cell_max_charge
  2364  324B  34C4               	retlw	196
  2365  324C  3409               	retlw	9
  2366                           
  2367                           ;initializer for _thermistorBetaValue
  2368  324D  346B               	retlw	107
  2369  324E  340D               	retlw	13
  2370                           
  2371                           	psect	idataBANK4
  2372  325A                     __pidataBANK4:	
  2373                           
  2374                           ;initializer for stoa@F1152
  2375  325A  3428               	retlw	40
  2376  325B  346E               	retlw	110
  2377  325C  3475               	retlw	117
  2378  325D  346C               	retlw	108
  2379  325E  346C               	retlw	108
  2380  325F  3429               	retlw	41
  2381  3260  3400               	retlw	0
  2382                           
  2383                           	psect	stringtext1
  2384  3000                     __pstringtext1:	
  2385  3000                     _lookupTableSamsung_SOC:	
  2386  3000  3464               	retlw	100
  2387  3001  3400               	retlw	0
  2388  3002  3462               	retlw	98
  2389  3003  3400               	retlw	0
  2390  3004  3460               	retlw	96
  2391  3005  3400               	retlw	0
  2392  3006  345D               	retlw	93
  2393  3007  3400               	retlw	0
  2394  3008  345B               	retlw	91
  2395  3009  3400               	retlw	0
  2396  300A  3457               	retlw	87
  2397  300B  3400               	retlw	0
  2398  300C  3454               	retlw	84
  2399  300D  3400               	retlw	0
  2400  300E  3452               	retlw	82
  2401  300F  3400               	retlw	0
  2402  3010  3450               	retlw	80
  2403  3011  3400               	retlw	0
  2404  3012  344E               	retlw	78
  2405  3013  3400               	retlw	0
  2406  3014  344C               	retlw	76
  2407  3015  3400               	retlw	0
  2408  3016  3449               	retlw	73
  2409  3017  3400               	retlw	0
  2410  3018  3447               	retlw	71
  2411  3019  3400               	retlw	0
  2412  301A  3445               	retlw	69
  2413  301B  3400               	retlw	0
  2414  301C  3443               	retlw	67
  2415  301D  3400               	retlw	0
  2416  301E  3440               	retlw	64
  2417  301F  3400               	retlw	0
  2418  3020  343E               	retlw	62
  2419  3021  3400               	retlw	0
  2420  3022  343C               	retlw	60
  2421  3023  3400               	retlw	0
  2422  3024  343A               	retlw	58
  2423  3025  3400               	retlw	0
  2424  3026  3438               	retlw	56
  2425  3027  3400               	retlw	0
  2426  3028  3435               	retlw	53
  2427  3029  3400               	retlw	0
  2428  302A  3433               	retlw	51
  2429  302B  3400               	retlw	0
  2430  302C  3431               	retlw	49
  2431  302D  3400               	retlw	0
  2432  302E  342F               	retlw	47
  2433  302F  3400               	retlw	0
  2434  3030  342C               	retlw	44
  2435  3031  3400               	retlw	0
  2436  3032  342A               	retlw	42
  2437  3033  3400               	retlw	0
  2438  3034  3428               	retlw	40
  2439  3035  3400               	retlw	0
  2440  3036  3426               	retlw	38
  2441  3037  3400               	retlw	0
  2442  3038  3424               	retlw	36
  2443  3039  3400               	retlw	0
  2444  303A  3421               	retlw	33
  2445  303B  3400               	retlw	0
  2446  303C  341F               	retlw	31
  2447  303D  3400               	retlw	0
  2448  303E  341D               	retlw	29
  2449  303F  3400               	retlw	0
  2450  3040  341B               	retlw	27
  2451  3041  3400               	retlw	0
  2452  3042  3418               	retlw	24
  2453  3043  3400               	retlw	0
  2454  3044  3416               	retlw	22
  2455  3045  3400               	retlw	0
  2456  3046  3414               	retlw	20
  2457  3047  3400               	retlw	0
  2458  3048  3412               	retlw	18
  2459  3049  3400               	retlw	0
  2460  304A  3410               	retlw	16
  2461  304B  3400               	retlw	0
  2462  304C  340D               	retlw	13
  2463  304D  3400               	retlw	0
  2464  304E  340B               	retlw	11
  2465  304F  3400               	retlw	0
  2466  3050  3409               	retlw	9
  2467  3051  3400               	retlw	0
  2468  3052  3407               	retlw	7
  2469  3053  3400               	retlw	0
  2470  3054  3404               	retlw	4
  2471  3055  3400               	retlw	0
  2472  3056  3402               	retlw	2
  2473  3057  3400               	retlw	0
  2474  3058  3400               	retlw	0
  2475  3059  3400               	retlw	0
  2476  305A  3400               	retlw	0
  2477  305B  3400               	retlw	0
  2478  305C                     __end_of_lookupTableSamsung_SOC:	
  2479                           
  2480                           	psect	stringtext2
  2481  305C                     __pstringtext2:	
  2482  305C                     _lookupTableSamsung_voltage:	
  2483  305C  3451               	retlw	81
  2484  305D  3410               	retlw	16
  2485  305E  345B               	retlw	91
  2486  305F  340F               	retlw	15
  2487  3060  341F               	retlw	31
  2488  3061  340F               	retlw	15
  2489  3062  340F               	retlw	15
  2490  3063  340F               	retlw	15
  2491  3064  340A               	retlw	10
  2492  3065  340F               	retlw	15
  2493  3066  3406               	retlw	6
  2494  3067  340F               	retlw	15
  2495  3068  3405               	retlw	5
  2496  3069  340F               	retlw	15
  2497  306A  3403               	retlw	3
  2498  306B  340F               	retlw	15
  2499  306C  3401               	retlw	1
  2500  306D  340F               	retlw	15
  2501  306E  3400               	retlw	0
  2502  306F  340F               	retlw	15
  2503  3070  34FE               	retlw	254
  2504  3071  340E               	retlw	14
  2505  3072  34FC               	retlw	252
  2506  3073  340E               	retlw	14
  2507  3074  34FA               	retlw	250
  2508  3075  340E               	retlw	14
  2509  3076  34F8               	retlw	248
  2510  3077  340E               	retlw	14
  2511  3078  34F6               	retlw	246
  2512  3079  340E               	retlw	14
  2513  307A  34F3               	retlw	243
  2514  307B  340E               	retlw	14
  2515  307C  34F1               	retlw	241
  2516  307D  340E               	retlw	14
  2517  307E  34EE               	retlw	238
  2518  307F  340E               	retlw	14
  2519  3080  34EB               	retlw	235
  2520  3081  340E               	retlw	14
  2521  3082  34E8               	retlw	232
  2522  3083  340E               	retlw	14
  2523  3084  34E5               	retlw	229
  2524  3085  340E               	retlw	14
  2525  3086  34E1               	retlw	225
  2526  3087  340E               	retlw	14
  2527  3088  34DD               	retlw	221
  2528  3089  340E               	retlw	14
  2529  308A  34D9               	retlw	217
  2530  308B  340E               	retlw	14
  2531  308C  34D4               	retlw	212
  2532  308D  340E               	retlw	14
  2533  308E  34CF               	retlw	207
  2534  308F  340E               	retlw	14
  2535  3090  34C9               	retlw	201
  2536  3091  340E               	retlw	14
  2537  3092  34C3               	retlw	195
  2538  3093  340E               	retlw	14
  2539  3094  34BB               	retlw	187
  2540  3095  340E               	retlw	14
  2541  3096  34B4               	retlw	180
  2542  3097  340E               	retlw	14
  2543  3098  34AB               	retlw	171
  2544  3099  340E               	retlw	14
  2545  309A  34A0               	retlw	160
  2546  309B  340E               	retlw	14
  2547  309C  3495               	retlw	149
  2548  309D  340E               	retlw	14
  2549  309E  3487               	retlw	135
  2550  309F  340E               	retlw	14
  2551  30A0  3477               	retlw	119
  2552  30A1  340E               	retlw	14
  2553  30A2  3464               	retlw	100
  2554  30A3  340E               	retlw	14
  2555  30A4  344D               	retlw	77
  2556  30A5  340E               	retlw	14
  2557  30A6  3431               	retlw	49
  2558  30A7  340E               	retlw	14
  2559  30A8  340D               	retlw	13
  2560  30A9  340E               	retlw	14
  2561  30AA  34DE               	retlw	222
  2562  30AB  340D               	retlw	13
  2563  30AC  349F               	retlw	159
  2564  30AD  340D               	retlw	13
  2565  30AE  3443               	retlw	67
  2566  30AF  340D               	retlw	13
  2567  30B0  34B3               	retlw	179
  2568  30B1  340C               	retlw	12
  2569  30B2  34B1               	retlw	177
  2570  30B3  340B               	retlw	11
  2571  30B4  345E               	retlw	94
  2572  30B5  3409               	retlw	9
  2573  30B6  3400               	retlw	0
  2574  30B7  3400               	retlw	0
  2575  30B8                     __end_of_lookupTableSamsung_voltage:	
  2576                           
  2577                           	psect	stringtext3
  2578  3850                     __pstringtext3:	
  2579  3850                     _OCD_threshold_setting:	
  2580  3850  3411               	retlw	17
  2581  3851  3400               	retlw	0
  2582  3852  3416               	retlw	22
  2583  3853  3400               	retlw	0
  2584  3854  341C               	retlw	28
  2585  3855  3400               	retlw	0
  2586  3856  3421               	retlw	33
  2587  3857  3400               	retlw	0
  2588  3858  3427               	retlw	39
  2589  3859  3400               	retlw	0
  2590  385A  342C               	retlw	44
  2591  385B  3400               	retlw	0
  2592  385C  3432               	retlw	50
  2593  385D  3400               	retlw	0
  2594  385E  3438               	retlw	56
  2595  385F  3400               	retlw	0
  2596  3860  343D               	retlw	61
  2597  3861  3400               	retlw	0
  2598  3862  3443               	retlw	67
  2599  3863  3400               	retlw	0
  2600  3864  3448               	retlw	72
  2601  3865  3400               	retlw	0
  2602  3866  344E               	retlw	78
  2603  3867  3400               	retlw	0
  2604  3868  3453               	retlw	83
  2605  3869  3400               	retlw	0
  2606  386A  3459               	retlw	89
  2607  386B  3400               	retlw	0
  2608  386C  345E               	retlw	94
  2609  386D  3400               	retlw	0
  2610  386E  3464               	retlw	100
  2611  386F  3400               	retlw	0
  2612  3870                     __end_of_OCD_threshold_setting:	
  2613                           
  2614                           	psect	stringtext4
  2615  3964                     __pstringtext4:	
  2616  3964                     _OCD_delay_setting:	
  2617  3964  3408               	retlw	8
  2618  3965  3400               	retlw	0
  2619  3966  3414               	retlw	20
  2620  3967  3400               	retlw	0
  2621  3968  3428               	retlw	40
  2622  3969  3400               	retlw	0
  2623  396A  3450               	retlw	80
  2624  396B  3400               	retlw	0
  2625  396C  34A0               	retlw	160
  2626  396D  3400               	retlw	0
  2627  396E  3440               	retlw	64
  2628  396F  3401               	retlw	1
  2629  3970  3480               	retlw	128
  2630  3971  3402               	retlw	2
  2631  3972  3400               	retlw	0
  2632  3973  3405               	retlw	5
  2633  3974                     __end_of_OCD_delay_setting:	
  2634                           
  2635                           	psect	stringtext5
  2636  3974                     __pstringtext5:	
  2637  3974                     _SCD_threshold_setting:	
  2638  3974  342C               	retlw	44
  2639  3975  3400               	retlw	0
  2640  3976  3443               	retlw	67
  2641  3977  3400               	retlw	0
  2642  3978  3459               	retlw	89
  2643  3979  3400               	retlw	0
  2644  397A  346F               	retlw	111
  2645  397B  3400               	retlw	0
  2646  397C  3485               	retlw	133
  2647  397D  3400               	retlw	0
  2648  397E  349B               	retlw	155
  2649  397F  3400               	retlw	0
  2650  3980  34B2               	retlw	178
  2651  3981  3400               	retlw	0
  2652  3982  34C8               	retlw	200
  2653  3983  3400               	retlw	0
  2654  3984                     __end_of_SCD_threshold_setting:	
  2655                           
  2656                           	psect	stringtext6
  2657  3984                     __pstringtext6:	
  2658  3984                     _OV_delay_setting:	
  2659  3984  3401               	retlw	1
  2660  3985  3400               	retlw	0
  2661  3986  3402               	retlw	2
  2662  3987  3400               	retlw	0
  2663  3988  3404               	retlw	4
  2664  3989  3400               	retlw	0
  2665  398A  3408               	retlw	8
  2666  398B  3400               	retlw	0
  2667  398C                     __end_of_OV_delay_setting:	
  2668                           
  2669                           	psect	stringtext7
  2670  398C                     __pstringtext7:	
  2671  398C                     _UV_delay_setting:	
  2672  398C  3401               	retlw	1
  2673  398D  3400               	retlw	0
  2674  398E  3404               	retlw	4
  2675  398F  3400               	retlw	0
  2676  3990  3408               	retlw	8
  2677  3991  3400               	retlw	0
  2678  3992  3410               	retlw	16
  2679  3993  3400               	retlw	0
  2680  3994                     __end_of_UV_delay_setting:	
  2681                           
  2682                           	psect	stringtext8
  2683  3994                     __pstringtext8:	
  2684  3994                     _SCD_delay_setting:	
  2685  3994  3446               	retlw	70
  2686  3995  3400               	retlw	0
  2687  3996  3464               	retlw	100
  2688  3997  3400               	retlw	0
  2689  3998  34C8               	retlw	200
  2690  3999  3400               	retlw	0
  2691  399A  3490               	retlw	144
  2692  399B  3401               	retlw	1
  2693  399C                     __end_of_SCD_delay_setting:	
  2694                           
  2695                           	psect	stringtext9
  2696  39A2                     __pstringtext9:	
  2697  39A2                     _Lg4:	
  2698  39A2  3426               	retlw	38
  2699  39A3  349E               	retlw	158
  2700  39A4  3478               	retlw	120
  2701  39A5  343E               	retlw	62
  2702  39A6                     __end_of_Lg4:	
  2703                           
  2704                           	psect	stringtext10
  2705  39A6                     __pstringtext10:	
  2706  39A6                     _Lg3:	
  2707  39A6  34EE               	retlw	238
  2708  39A7  34E9               	retlw	233
  2709  39A8  3491               	retlw	145
  2710  39A9  343E               	retlw	62
  2711  39AA                     __end_of_Lg3:	
  2712                           
  2713                           	psect	stringtext11
  2714  39AA                     __pstringtext11:	
  2715  39AA                     _Lg2:	
  2716  39AA  3413               	retlw	19
  2717  39AB  34CE               	retlw	206
  2718  39AC  34CC               	retlw	204
  2719  39AD  343E               	retlw	62
  2720  39AE                     __end_of_Lg2:	
  2721                           
  2722                           	psect	stringtext12
  2723  39AE                     __pstringtext12:	
  2724  39AE                     _Lg1:	
  2725  39AE  34AA               	retlw	170
  2726  39AF  34AA               	retlw	170
  2727  39B0  342A               	retlw	42
  2728  39B1  343F               	retlw	63
  2729  39B2                     __end_of_Lg1:	
  2730                           
  2731                           	psect	stringtext13
  2732  39B2                     __pstringtext13:	
  2733  39B2                     _ln2_lo:	
  2734  39B2  34D1               	retlw	209
  2735  39B3  34F7               	retlw	247
  2736  39B4  3417               	retlw	23
  2737  39B5  3437               	retlw	55
  2738  39B6                     __end_of_ln2_lo:	
  2739                           
  2740                           	psect	stringtext14
  2741  39B6                     __pstringtext14:	
  2742  39B6                     _ln2_hi:	
  2743  39B6  3480               	retlw	128
  2744  39B7  3471               	retlw	113
  2745  39B8  3431               	retlw	49
  2746  39B9  343F               	retlw	63
  2747  39BA                     __end_of_ln2_hi:	
  2748                           
  2749                           	psect	stringtext15
  2750  3800                     __pstringtext15:	
  2751  3800                     _ATmega328_address:	
  2752  3800  3402               	retlw	2
  2753  3801  3400               	retlw	0
  2754  3802                     __end_of_ATmega328_address:	
  2755  0016                     _TMR1	set	22
  2756  0003                     _STATUSbits	set	3
  2757  000B                     _INTCONbits	set	11
  2758  0018                     _T1CONbits	set	24
  2759  0011                     _PIR1bits	set	17
  2760  0097                     _WDTCONbits	set	151
  2761  0090                     _TRISEbits	set	144
  2762  008C                     _TRISAbits	set	140
  2763  008E                     _TRISCbits	set	142
  2764  008D                     _TRISBbits	set	141
  2765  0091                     _PIE1bits	set	145
  2766  0476                     _TRISC6	set	1142
  2767  0477                     _TRISC7	set	1143
  2768  04CF                     _SPLLEN	set	1231
  2769  04CE                     _IRCF3	set	1230
  2770  04CD                     _IRCF2	set	1229
  2771  04CC                     _IRCF1	set	1228
  2772  04CB                     _IRCF0	set	1227
  2773  04C9                     _SCS1	set	1225
  2774  04C8                     _SCS0	set	1224
  2775  0110                     _LATEbits	set	272
  2776  010C                     _LATAbits	set	268
  2777  019A                     _TX1REG	set	410
  2778  0199                     _RC1REG	set	409
  2779  019D                     _RC1STAbits	set	413
  2780  019B                     _SPBRG	set	411
  2781  018E                     _ANSELCbits	set	398
  2782  018D                     _ANSELBbits	set	397
  2783  0CF5                     _TXEN	set	3317
  2784  0CEC                     _CREN	set	3308
  2785  0CEF                     _SPEN	set	3311
  2786  0CF4                     _SYNC	set	3316
  2787  0CF2                     _BRGH	set	3314
  2788  0216                     _SSPCON2bits	set	534
  2789  0211                     _SSPBUF	set	529
  2790  0212                     _SSPADD	set	530
  2791  0215                     _SSPCONbits	set	533
  2792  0E24                     _RXPPSbits	set	3620
  2793  0E20                     _SSPCLKPPSbits	set	3616
  2794  0E21                     _SSPDATPPSbits	set	3617
  2795  0E0F                     _PPSLOCKbits	set	3599
  2796  0E0F                     _PPSLOCK	set	3599
  2797  0E9A                     _RB2PPSbits	set	3738
  2798  0EA5                     _RC5PPSbits	set	3749
  2799  0EA4                     _RC4PPSbits	set	3748
  2800  3802                     STR_1:	
  2801  3802  3457               	retlw	87	;'W'
  2802  3803  3441               	retlw	65	;'A'
  2803  3804  3454               	retlw	84	;'T'
  2804  3805  3443               	retlw	67	;'C'
  2805  3806  3448               	retlw	72	;'H'
  2806  3807  3444               	retlw	68	;'D'
  2807  3808  344F               	retlw	79	;'O'
  2808  3809  3447               	retlw	71	;'G'
  2809  380A  3420               	retlw	32	;' '
  2810  380B  344E               	retlw	78	;'N'
  2811  380C  344F               	retlw	79	;'O'
  2812  380D  3454               	retlw	84	;'T'
  2813  380E  3420               	retlw	32	;' '
  2814  380F  344B               	retlw	75	;'K'
  2815  3810  3449               	retlw	73	;'I'
  2816  3811  3443               	retlw	67	;'C'
  2817  3812  344B               	retlw	75	;'K'
  2818  3813  3445               	retlw	69	;'E'
  2819  3814  3444               	retlw	68	;'D'
  2820  3815  343A               	retlw	58	;':'
  2821  3816  3420               	retlw	32	;' '
  2822  3817  3441               	retlw	65	;'A'
  2823  3818  3446               	retlw	70	;'F'
  2824  3819  3445               	retlw	69	;'E'
  2825  381A  3420               	retlw	32	;' '
  2826  381B  3463               	retlw	99	;'c'
  2827  381C  346F               	retlw	111	;'o'
  2828  381D  346D               	retlw	109	;'m'
  2829  381E  346D               	retlw	109	;'m'
  2830  381F  3473               	retlw	115	;'s'
  2831  3820  3420               	retlw	32	;' '
  2832  3821  3465               	retlw	101	;'e'
  2833  3822  3472               	retlw	114	;'r'
  2834  3823  3472               	retlw	114	;'r'
  2835  3824  346F               	retlw	111	;'o'
  2836  3825  3472               	retlw	114	;'r'
  2837  3826  3420               	retlw	32	;' '
  2838  3827  340A               	retlw	10
  2839  3828  340D               	retlw	13
  2840  3829  3400               	retlw	0
  2841                           
  2842                           	psect	stringtext16
  2843  382A                     __pstringtext16:	
  2844  382A                     STR_4:	
  2845  382A  3450               	retlw	80	;'P'
  2846  382B  3472               	retlw	114	;'r'
  2847  382C  3469               	retlw	105	;'i'
  2848  382D  346E               	retlw	110	;'n'
  2849  382E  3474               	retlw	116	;'t'
  2850  382F  3469               	retlw	105	;'i'
  2851  3830  346E               	retlw	110	;'n'
  2852  3831  3467               	retlw	103	;'g'
  2853  3832  3420               	retlw	32	;' '
  2854  3833  346F               	retlw	111	;'o'
  2855  3834  3475               	retlw	117	;'u'
  2856  3835  3474               	retlw	116	;'t'
  2857  3836  3420               	retlw	32	;' '
  2858  3837  3441               	retlw	65	;'A'
  2859  3838  3446               	retlw	70	;'F'
  2860  3839  3445               	retlw	69	;'E'
  2861  383A  3420               	retlw	32	;' '
  2862  383B  3472               	retlw	114	;'r'
  2863  383C  3465               	retlw	101	;'e'
  2864  383D  3467               	retlw	103	;'g'
  2865  383E  3469               	retlw	105	;'i'
  2866  383F  3473               	retlw	115	;'s'
  2867  3840  3474               	retlw	116	;'t'
  2868  3841  3465               	retlw	101	;'e'
  2869  3842  3472               	retlw	114	;'r'
  2870  3843  3420               	retlw	32	;' '
  2871  3844  3476               	retlw	118	;'v'
  2872  3845  3461               	retlw	97	;'a'
  2873  3846  346C               	retlw	108	;'l'
  2874  3847  3475               	retlw	117	;'u'
  2875  3848  3465               	retlw	101	;'e'
  2876  3849  3473               	retlw	115	;'s'
  2877  384A  342E               	retlw	46	;'.'
  2878  384B  342E               	retlw	46	;'.'
  2879  384C  342E               	retlw	46	;'.'
  2880  384D  340A               	retlw	10
  2881  384E  340D               	retlw	13
  2882  384F  3400               	retlw	0
  2883                           
  2884                           	psect	stringtext17
  2885  3870                     __pstringtext17:	
  2886  3870                     STR_8:	
  2887  3870  3430               	retlw	48	;'0'
  2888  3871  3478               	retlw	120	;'x'
  2889  3872  3430               	retlw	48	;'0'
  2890  3873  3434               	retlw	52	;'4'
  2891  3874  3420               	retlw	32	;' '
  2892  3875  3453               	retlw	83	;'S'
  2893  3876  3459               	retlw	89	;'Y'
  2894  3877  3453               	retlw	83	;'S'
  2895  3878  345F               	retlw	95	;'_'
  2896  3879  3443               	retlw	67	;'C'
  2897  387A  3454               	retlw	84	;'T'
  2898  387B  3452               	retlw	82	;'R'
  2899  387C  344C               	retlw	76	;'L'
  2900  387D  3431               	retlw	49	;'1'
  2901  387E  343A               	retlw	58	;':'
  2902  387F  3420               	retlw	32	;' '
  2903  3880  3425               	retlw	37	;'%'
  2904  3881  3469               	retlw	105	;'i'
  2905  3882  3420               	retlw	32	;' '
  2906  3883  340A               	retlw	10
  2907  3884  340D               	retlw	13
  2908  3885  3400               	retlw	0
  2909                           
  2910                           	psect	stringtext18
  2911  3886                     __pstringtext18:	
  2912  3886                     STR_9:	
  2913  3886  3430               	retlw	48	;'0'
  2914  3887  3478               	retlw	120	;'x'
  2915  3888  3430               	retlw	48	;'0'
  2916  3889  3435               	retlw	53	;'5'
  2917  388A  3420               	retlw	32	;' '
  2918  388B  3453               	retlw	83	;'S'
  2919  388C  3459               	retlw	89	;'Y'
  2920  388D  3453               	retlw	83	;'S'
  2921  388E  345F               	retlw	95	;'_'
  2922  388F  3443               	retlw	67	;'C'
  2923  3890  3454               	retlw	84	;'T'
  2924  3891  3452               	retlw	82	;'R'
  2925  3892  344C               	retlw	76	;'L'
  2926  3893  3432               	retlw	50	;'2'
  2927  3894  343A               	retlw	58	;':'
  2928  3895  3420               	retlw	32	;' '
  2929  3896  3425               	retlw	37	;'%'
  2930  3897  3469               	retlw	105	;'i'
  2931  3898  3420               	retlw	32	;' '
  2932  3899  340A               	retlw	10
  2933  389A  340D               	retlw	13
  2934  389B  3400               	retlw	0
  2935                           
  2936                           	psect	stringtext19
  2937  389C                     __pstringtext19:	
  2938  389C                     STR_7:	
  2939  389C  3430               	retlw	48	;'0'
  2940  389D  3478               	retlw	120	;'x'
  2941  389E  3430               	retlw	48	;'0'
  2942  389F  3431               	retlw	49	;'1'
  2943  38A0  3420               	retlw	32	;' '
  2944  38A1  3443               	retlw	67	;'C'
  2945  38A2  3445               	retlw	69	;'E'
  2946  38A3  344C               	retlw	76	;'L'
  2947  38A4  344C               	retlw	76	;'L'
  2948  38A5  3442               	retlw	66	;'B'
  2949  38A6  3441               	retlw	65	;'A'
  2950  38A7  344C               	retlw	76	;'L'
  2951  38A8  3431               	retlw	49	;'1'
  2952  38A9  343A               	retlw	58	;':'
  2953  38AA  3420               	retlw	32	;' '
  2954  38AB  3425               	retlw	37	;'%'
  2955  38AC  3469               	retlw	105	;'i'
  2956  38AD  3420               	retlw	32	;' '
  2957  38AE  340A               	retlw	10
  2958  38AF  340D               	retlw	13
  2959  38B0  3400               	retlw	0
  2960                           
  2961                           	psect	stringtext20
  2962  38B1                     __pstringtext20:	
  2963  38B1                     STR_10:	
  2964  38B1  3430               	retlw	48	;'0'
  2965  38B2  3478               	retlw	120	;'x'
  2966  38B3  3430               	retlw	48	;'0'
  2967  38B4  3436               	retlw	54	;'6'
  2968  38B5  3420               	retlw	32	;' '
  2969  38B6  3450               	retlw	80	;'P'
  2970  38B7  3452               	retlw	82	;'R'
  2971  38B8  344F               	retlw	79	;'O'
  2972  38B9  3454               	retlw	84	;'T'
  2973  38BA  3445               	retlw	69	;'E'
  2974  38BB  3443               	retlw	67	;'C'
  2975  38BC  3454               	retlw	84	;'T'
  2976  38BD  3431               	retlw	49	;'1'
  2977  38BE  343A               	retlw	58	;':'
  2978  38BF  3420               	retlw	32	;' '
  2979  38C0  3425               	retlw	37	;'%'
  2980  38C1  3469               	retlw	105	;'i'
  2981  38C2  3420               	retlw	32	;' '
  2982  38C3  340A               	retlw	10
  2983  38C4  340D               	retlw	13
  2984  38C5  3400               	retlw	0
  2985                           
  2986                           	psect	stringtext21
  2987  38C6                     __pstringtext21:	
  2988  38C6                     STR_11:	
  2989  38C6  3430               	retlw	48	;'0'
  2990  38C7  3478               	retlw	120	;'x'
  2991  38C8  3430               	retlw	48	;'0'
  2992  38C9  3437               	retlw	55	;'7'
  2993  38CA  3420               	retlw	32	;' '
  2994  38CB  3450               	retlw	80	;'P'
  2995  38CC  3452               	retlw	82	;'R'
  2996  38CD  344F               	retlw	79	;'O'
  2997  38CE  3454               	retlw	84	;'T'
  2998  38CF  3445               	retlw	69	;'E'
  2999  38D0  3443               	retlw	67	;'C'
  3000  38D1  3454               	retlw	84	;'T'
  3001  38D2  3432               	retlw	50	;'2'
  3002  38D3  343A               	retlw	58	;':'
  3003  38D4  3420               	retlw	32	;' '
  3004  38D5  3425               	retlw	37	;'%'
  3005  38D6  3469               	retlw	105	;'i'
  3006  38D7  3420               	retlw	32	;' '
  3007  38D8  340A               	retlw	10
  3008  38D9  340D               	retlw	13
  3009  38DA  3400               	retlw	0
  3010                           
  3011                           	psect	stringtext22
  3012  38DB                     __pstringtext22:	
  3013  38DB                     STR_12:	
  3014  38DB  3430               	retlw	48	;'0'
  3015  38DC  3478               	retlw	120	;'x'
  3016  38DD  3430               	retlw	48	;'0'
  3017  38DE  3438               	retlw	56	;'8'
  3018  38DF  3420               	retlw	32	;' '
  3019  38E0  3450               	retlw	80	;'P'
  3020  38E1  3452               	retlw	82	;'R'
  3021  38E2  344F               	retlw	79	;'O'
  3022  38E3  3454               	retlw	84	;'T'
  3023  38E4  3445               	retlw	69	;'E'
  3024  38E5  3443               	retlw	67	;'C'
  3025  38E6  3454               	retlw	84	;'T'
  3026  38E7  3433               	retlw	51	;'3'
  3027  38E8  343A               	retlw	58	;':'
  3028  38E9  3420               	retlw	32	;' '
  3029  38EA  3425               	retlw	37	;'%'
  3030  38EB  3469               	retlw	105	;'i'
  3031  38EC  3420               	retlw	32	;' '
  3032  38ED  340A               	retlw	10
  3033  38EE  340D               	retlw	13
  3034  38EF  3400               	retlw	0
  3035                           
  3036                           	psect	stringtext23
  3037  38F0                     __pstringtext23:	
  3038  38F0                     STR_6:	
  3039  38F0  3430               	retlw	48	;'0'
  3040  38F1  3478               	retlw	120	;'x'
  3041  38F2  3430               	retlw	48	;'0'
  3042  38F3  3430               	retlw	48	;'0'
  3043  38F4  3420               	retlw	32	;' '
  3044  38F5  3453               	retlw	83	;'S'
  3045  38F6  3459               	retlw	89	;'Y'
  3046  38F7  3453               	retlw	83	;'S'
  3047  38F8  345F               	retlw	95	;'_'
  3048  38F9  3453               	retlw	83	;'S'
  3049  38FA  3454               	retlw	84	;'T'
  3050  38FB  3441               	retlw	65	;'A'
  3051  38FC  3454               	retlw	84	;'T'
  3052  38FD  343A               	retlw	58	;':'
  3053  38FE  3420               	retlw	32	;' '
  3054  38FF  3425               	retlw	37	;'%'
  3055  3900  3469               	retlw	105	;'i'
  3056  3901  3420               	retlw	32	;' '
  3057  3902  340A               	retlw	10
  3058  3903  340D               	retlw	13
  3059  3904  3400               	retlw	0
  3060                           
  3061                           	psect	stringtext24
  3062  3905                     __pstringtext24:	
  3063  3905                     STR_13:	
  3064  3905  3430               	retlw	48	;'0'
  3065  3906  3478               	retlw	120	;'x'
  3066  3907  3430               	retlw	48	;'0'
  3067  3908  3439               	retlw	57	;'9'
  3068  3909  3420               	retlw	32	;' '
  3069  390A  344F               	retlw	79	;'O'
  3070  390B  3456               	retlw	86	;'V'
  3071  390C  345F               	retlw	95	;'_'
  3072  390D  3454               	retlw	84	;'T'
  3073  390E  3452               	retlw	82	;'R'
  3074  390F  3449               	retlw	73	;'I'
  3075  3910  3450               	retlw	80	;'P'
  3076  3911  343A               	retlw	58	;':'
  3077  3912  3420               	retlw	32	;' '
  3078  3913  3425               	retlw	37	;'%'
  3079  3914  3469               	retlw	105	;'i'
  3080  3915  3420               	retlw	32	;' '
  3081  3916  340A               	retlw	10
  3082  3917  340D               	retlw	13
  3083  3918  3400               	retlw	0
  3084                           
  3085                           	psect	stringtext25
  3086  3919                     __pstringtext25:	
  3087  3919                     STR_14:	
  3088  3919  3430               	retlw	48	;'0'
  3089  391A  3478               	retlw	120	;'x'
  3090  391B  3430               	retlw	48	;'0'
  3091  391C  3441               	retlw	65	;'A'
  3092  391D  3420               	retlw	32	;' '
  3093  391E  3455               	retlw	85	;'U'
  3094  391F  3456               	retlw	86	;'V'
  3095  3920  345F               	retlw	95	;'_'
  3096  3921  3454               	retlw	84	;'T'
  3097  3922  3452               	retlw	82	;'R'
  3098  3923  3449               	retlw	73	;'I'
  3099  3924  3450               	retlw	80	;'P'
  3100  3925  343A               	retlw	58	;':'
  3101  3926  3420               	retlw	32	;' '
  3102  3927  3425               	retlw	37	;'%'
  3103  3928  3469               	retlw	105	;'i'
  3104  3929  3420               	retlw	32	;' '
  3105  392A  340A               	retlw	10
  3106  392B  340D               	retlw	13
  3107  392C  3400               	retlw	0
  3108                           
  3109                           	psect	stringtext26
  3110  392D                     __pstringtext26:	
  3111  392D                     STR_15:	
  3112  392D  3430               	retlw	48	;'0'
  3113  392E  3478               	retlw	120	;'x'
  3114  392F  3430               	retlw	48	;'0'
  3115  3930  3442               	retlw	66	;'B'
  3116  3931  3420               	retlw	32	;' '
  3117  3932  3443               	retlw	67	;'C'
  3118  3933  3443               	retlw	67	;'C'
  3119  3934  345F               	retlw	95	;'_'
  3120  3935  3443               	retlw	67	;'C'
  3121  3936  3446               	retlw	70	;'F'
  3122  3937  3447               	retlw	71	;'G'
  3123  3938  343A               	retlw	58	;':'
  3124  3939  3420               	retlw	32	;' '
  3125  393A  3425               	retlw	37	;'%'
  3126  393B  3469               	retlw	105	;'i'
  3127  393C  3420               	retlw	32	;' '
  3128  393D  340A               	retlw	10
  3129  393E  340D               	retlw	13
  3130  393F  3400               	retlw	0
  3131                           
  3132                           	psect	stringtext27
  3133  3940                     __pstringtext27:	
  3134  3940                     STR_16:	
  3135  3940  3430               	retlw	48	;'0'
  3136  3941  3478               	retlw	120	;'x'
  3137  3942  3433               	retlw	51	;'3'
  3138  3943  3432               	retlw	50	;'2'
  3139  3944  3420               	retlw	32	;' '
  3140  3945  3443               	retlw	67	;'C'
  3141  3946  3443               	retlw	67	;'C'
  3142  3947  345F               	retlw	95	;'_'
  3143  3948  3448               	retlw	72	;'H'
  3144  3949  3449               	retlw	73	;'I'
  3145  394A  343A               	retlw	58	;':'
  3146  394B  3420               	retlw	32	;' '
  3147  394C  3425               	retlw	37	;'%'
  3148  394D  3469               	retlw	105	;'i'
  3149  394E  3420               	retlw	32	;' '
  3150  394F  340A               	retlw	10
  3151  3950  340D               	retlw	13
  3152  3951  3400               	retlw	0
  3153                           
  3154                           	psect	stringtext28
  3155  3952                     __pstringtext28:	
  3156  3952                     STR_17:	
  3157  3952  3430               	retlw	48	;'0'
  3158  3953  3478               	retlw	120	;'x'
  3159  3954  3433               	retlw	51	;'3'
  3160  3955  3433               	retlw	51	;'3'
  3161  3956  3420               	retlw	32	;' '
  3162  3957  3443               	retlw	67	;'C'
  3163  3958  3443               	retlw	67	;'C'
  3164  3959  345F               	retlw	95	;'_'
  3165  395A  344C               	retlw	76	;'L'
  3166  395B  344F               	retlw	79	;'O'
  3167  395C  343A               	retlw	58	;':'
  3168  395D  3420               	retlw	32	;' '
  3169  395E  3425               	retlw	37	;'%'
  3170  395F  3469               	retlw	105	;'i'
  3171  3960  3420               	retlw	32	;' '
  3172  3961  340A               	retlw	10
  3173  3962  340D               	retlw	13
  3174  3963  3400               	retlw	0
  3175                           
  3176                           	psect	stringtext29
  3177  399C                     __pstringtext29:	
  3178  399C                     STR_3:	
  3179  399C  3425               	retlw	37	;'%'
  3180  399D  3464               	retlw	100	;'d'
  3181  399E  340A               	retlw	10
  3182  399F  340D               	retlw	13
  3183  39A0  342C               	retlw	44	;','
  3184  39A1  3400               	retlw	0
  3185                           
  3186                           	psect	stringtext30
  3187  39BA                     __pstringtext30:	
  3188  39BA                     STR_95:	
  3189  39BA  3468               	retlw	104	;'h'
  3190  39BB  3468               	retlw	104	;'h'
  3191  39BC  3458               	retlw	88	;'X'
  3192  39BD  3400               	retlw	0
  3193                           
  3194                           	psect	stringtext31
  3195  39BE                     __pstringtext31:	
  3196  39BE                     STR_19:	
  3197  39BE  3468               	retlw	104	;'h'
  3198  39BF  3468               	retlw	104	;'h'
  3199  39C0  3464               	retlw	100	;'d'
  3200  39C1  3400               	retlw	0
  3201                           
  3202                           	psect	stringtext32
  3203  39C2                     __pstringtext32:	
  3204  39C2                     STR_23:	
  3205  39C2  3468               	retlw	104	;'h'
  3206  39C3  3468               	retlw	104	;'h'
  3207  39C4  3469               	retlw	105	;'i'
  3208  39C5  3400               	retlw	0
  3209                           
  3210                           	psect	stringtext33
  3211  39C6                     __pstringtext33:	
  3212  39C6                     STR_61:	
  3213  39C6  3468               	retlw	104	;'h'
  3214  39C7  3468               	retlw	104	;'h'
  3215  39C8  346E               	retlw	110	;'n'
  3216  39C9  3400               	retlw	0
  3217                           
  3218                           	psect	stringtext34
  3219  39CA                     __pstringtext34:	
  3220  39CA                     STR_46:	
  3221  39CA  3468               	retlw	104	;'h'
  3222  39CB  3468               	retlw	104	;'h'
  3223  39CC  346F               	retlw	111	;'o'
  3224  39CD  3400               	retlw	0
  3225                           
  3226                           	psect	stringtext35
  3227  39CE                     __pstringtext35:	
  3228  39CE                     STR_76:	
  3229  39CE  3468               	retlw	104	;'h'
  3230  39CF  3468               	retlw	104	;'h'
  3231  39D0  3475               	retlw	117	;'u'
  3232  39D1  3400               	retlw	0
  3233                           
  3234                           	psect	stringtext36
  3235  39D2                     __pstringtext36:	
  3236  39D2                     STR_91:	
  3237  39D2  3468               	retlw	104	;'h'
  3238  39D3  3468               	retlw	104	;'h'
  3239  39D4  3478               	retlw	120	;'x'
  3240  39D5  3400               	retlw	0
  3241                           
  3242                           	psect	stringtext37
  3243  39D6                     __pstringtext37:	
  3244  39D6                     STR_2:	
  3245  39D6  3425               	retlw	37	;'%'
  3246  39D7  3464               	retlw	100	;'d'
  3247  39D8  342C               	retlw	44	;','
  3248  39D9  3400               	retlw	0
  3249                           
  3250                           	psect	stringtext38
  3251  39DA                     __pstringtext38:	
  3252  39DA                     STR_113:	
  3253  39DA  347A               	retlw	122	;'z'
  3254  39DB  3458               	retlw	88	;'X'
  3255  39DC  3400               	retlw	0
  3256                           
  3257                           	psect	stringtext39
  3258  39DD                     __pstringtext39:	
  3259  39DD                     STR_37:	
  3260  39DD  347A               	retlw	122	;'z'
  3261  39DE  3464               	retlw	100	;'d'
  3262  39DF  3400               	retlw	0
  3263                           
  3264                           	psect	stringtext40
  3265  39E0                     __pstringtext40:	
  3266  39E0                     STR_41:	
  3267  39E0  347A               	retlw	122	;'z'
  3268  39E1  3469               	retlw	105	;'i'
  3269  39E2  3400               	retlw	0
  3270                           
  3271                           	psect	stringtext41
  3272  39E3                     __pstringtext41:	
  3273  39E3                     STR_71:	
  3274  39E3  347A               	retlw	122	;'z'
  3275  39E4  346E               	retlw	110	;'n'
  3276  39E5  3400               	retlw	0
  3277                           
  3278                           	psect	stringtext42
  3279  39E6                     __pstringtext42:	
  3280  39E6                     STR_56:	
  3281  39E6  347A               	retlw	122	;'z'
  3282  39E7  346F               	retlw	111	;'o'
  3283  39E8  3400               	retlw	0
  3284                           
  3285                           	psect	stringtext43
  3286  39E9                     __pstringtext43:	
  3287  39E9                     STR_86:	
  3288  39E9  347A               	retlw	122	;'z'
  3289  39EA  3475               	retlw	117	;'u'
  3290  39EB  3400               	retlw	0
  3291                           
  3292                           	psect	stringtext44
  3293  39EC                     __pstringtext44:	
  3294  39EC                     STR_109:	
  3295  39EC  347A               	retlw	122	;'z'
  3296  39ED  3478               	retlw	120	;'x'
  3297  39EE  3400               	retlw	0
  3298                           
  3299                           	psect	stringtext45
  3300  0000                     __pstringtext45:	
  3301  38AE                     
  3302                           ; #config settings
  3303  0000                     
  3304                           	psect	cinit
  3305  0020                     start_initialization:	
  3306  0020                     __initialization:		;BIGRAM
  3307                           
  3308                           ; Initialize objects allocated to BANK3
  3309  0020  0023               	movlb	3	; select bank3
  3310  0021  31B2  224B  3180   	fcall	__pidataBANK3	;fetch initializer
  3311  0024  00EA               	movwf	__pdataBANK3& (0+127)
  3312  0025  31B2  224C  3180   	fcall	__pidataBANK3+1	;fetch initializer
  3313  0028  00EB               	movwf	(__pdataBANK3+1)& (0+127)
  3314  0029  31B2  224D  3180   	fcall	__pidataBANK3+2	;fetch initializer
  3315  002C  00EC               	movwf	(__pdataBANK3+2)& (0+127)
  3316  002D  31B2  224E  3180   	fcall	__pidataBANK3+3	;fetch initializer
  3317  0030  00ED               	movwf	(__pdataBANK3+3)& (0+127)
  3318                           
  3319                           ; Initialize objects allocated to BANK4
  3320  0031  305A               	movlw	low __pidataBANK4
  3321  0032  0084               	movwf	4
  3322  0033  30B2               	movlw	(high __pidataBANK4)| (0+128)
  3323  0034  0085               	movwf	5
  3324  0035  0024               	movlb	4	; select bank4
  3325  0036  0012               	moviw fsr0++
  3326  0037  00CE               	movwf	__pdataBANK4& (0+127)
  3327  0038  0012               	moviw fsr0++
  3328  0039  00CF               	movwf	(__pdataBANK4+1)& (0+127)
  3329  003A  0012               	moviw fsr0++
  3330  003B  00D0               	movwf	(__pdataBANK4+2)& (0+127)
  3331  003C  0012               	moviw fsr0++
  3332  003D  00D1               	movwf	(__pdataBANK4+3)& (0+127)
  3333  003E  0012               	moviw fsr0++
  3334  003F  00D2               	movwf	(__pdataBANK4+4)& (0+127)
  3335  0040  0012               	moviw fsr0++
  3336  0041  00D3               	movwf	(__pdataBANK4+5)& (0+127)
  3337  0042  0012               	moviw fsr0++
  3338  0043  00D4               	movwf	(__pdataBANK4+6)& (0+127)
  3339                           
  3340                           ; Clear objects allocated to BIGRAM
  3341  0044  3071               	movlw	low (0+10097)
  3342  0045  0084               	movwf	4
  3343  0046  3027               	movlw	high (0+10097)
  3344  0047  0085               	movwf	5
  3345  0048  307F               	movlw	127
  3346  0049  00FE               	movwf	btemp
  3347  004A  3000               	movlw	0
  3348  004B  00FF               	movwf	btemp+1
  3349  004C  31B2  22AC  3180   	fcall	clear_ram0
  3350                           
  3351                           ; Clear objects allocated to COMMON
  3352  004F  01FC               	clrf	__pbssCOMMON& (0+127)
  3353                           
  3354                           ; Clear objects allocated to BANK2
  3355  0050  3062               	movlw	low __pbssBANK2
  3356  0051  0084               	movwf	4
  3357  0052  3001               	movlw	high __pbssBANK2
  3358  0053  0085               	movwf	5
  3359  0054  300E               	movlw	14
  3360  0055  00FE               	movwf	btemp
  3361  0056  3000               	movlw	0
  3362  0057  00FF               	movwf	btemp+1
  3363  0058  31B2  22AC  3180   	fcall	clear_ram0
  3364                           
  3365                           ; Clear objects allocated to BANK3
  3366  005B  30A0               	movlw	low __pbssBANK3
  3367  005C  0084               	movwf	4
  3368  005D  3001               	movlw	high __pbssBANK3
  3369  005E  0085               	movwf	5
  3370  005F  304A               	movlw	74
  3371  0060  00FE               	movwf	btemp
  3372  0061  3000               	movlw	0
  3373  0062  00FF               	movwf	btemp+1
  3374  0063  31B2  22AC  3180   	fcall	clear_ram0
  3375                           
  3376                           ; Clear objects allocated to BANK4
  3377  0066  3020               	movlw	low __pbssBANK4
  3378  0067  0084               	movwf	4
  3379  0068  3002               	movlw	high __pbssBANK4
  3380  0069  0085               	movwf	5
  3381  006A  302E               	movlw	46
  3382  006B  00FE               	movwf	btemp
  3383  006C  3000               	movlw	0
  3384  006D  00FF               	movwf	btemp+1
  3385  006E  31B2  22AC         	fcall	clear_ram0
  3386  0070                     end_of_initialization:	
  3387                           ;End of C runtime variable initialization code
  3388                           
  3389  0070                     __end_of__initialization:	
  3390  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3391  0071  0020               	movlb	0
  3392  0072  31B5  2D20         	ljmp	_main	;jump to C main() function
  3393                           
  3394                           	psect	bssCOMMON
  3395  007C                     __pbssCOMMON:	
  3396  007C                     _toggleColor:	
  3397  007C                     	ds	1
  3398                           
  3399                           	psect	bssBANK2
  3400  0162                     __pbssBANK2:	
  3401  0162                     _nout:	
  3402  0162                     	ds	2
  3403  0164                     _width:	
  3404  0164                     	ds	2
  3405  0166                     _prec:	
  3406  0166                     	ds	2
  3407  0168                     _flags:	
  3408  0168                     	ds	2
  3409  016A                     _adcOffset:	
  3410  016A                     	ds	2
  3411  016C                     _protect2:	
  3412  016C                     	ds	1
  3413  016D                     _protect1:	
  3414  016D                     	ds	1
  3415  016E                     _adcGain:	
  3416  016E                     	ds	2
  3417                           
  3418                           	psect	bssBANK3
  3419  01A0                     __pbssBANK3:	
  3420  01A0                     _cellCharge:	
  3421  01A0                     	ds	10
  3422  01AA                     _cellVoltages:	
  3423  01AA                     	ds	10
  3424  01B4                     logf@F469:	
  3425  01B4                     	ds	4
  3426  01B8                     _shuntResistorValue_mOhm:	
  3427  01B8                     	ds	4
  3428  01BC                     _rts:	
  3429  01BC                     	ds	4
  3430  01C0                     _temperatureThermistor:	
  3431  01C0                     	ds	4
  3432  01C4                     _batCurrent:	
  3433  01C4                     	ds	4
  3434  01C8                     _errno:	
  3435  01C8                     	ds	2
  3436  01CA                     _minCellVoltage:	
  3437  01CA                     	ds	2
  3438  01CC                     _maxCellVoltage:	
  3439  01CC                     	ds	2
  3440  01CE                     _dschg_fet_enable:	
  3441  01CE                     	ds	2
  3442  01D0                     _chg_fet_enable:	
  3443  01D0                     	ds	2
  3444  01D2                     _ocd_error:	
  3445  01D2                     	ds	2
  3446  01D4                     _scd_error:	
  3447  01D4                     	ds	2
  3448  01D6                     _ov_error:	
  3449  01D6                     	ds	2
  3450  01D8                     _uv_error:	
  3451  01D8                     	ds	2
  3452  01DA                     _alert_error:	
  3453  01DA                     	ds	2
  3454  01DC                     _XR_error:	
  3455  01DC                     	ds	2
  3456  01DE                     _maxCellTempDischarge:	
  3457  01DE                     	ds	2
  3458  01E0                     _maxCellTempCharge:	
  3459  01E0                     	ds	2
  3460  01E2                     _minCellTempDischarge:	
  3461  01E2                     	ds	2
  3462  01E4                     _minCellTempCharge:	
  3463  01E4                     	ds	2
  3464  01E6                     myIsr@count:	
  3465  01E6                     	ds	1
  3466  01E7                     _tmr1_flag:	
  3467  01E7                     	ds	1
  3468  01E8                     _protect3:	
  3469  01E8                     	ds	1
  3470  01E9                     _currState:	
  3471  01E9                     	ds	1
  3472                           
  3473                           	psect	dataBANK3
  3474  01EA                     __pdataBANK3:	
  3475  01EA                     _samsung_cell_max_charge:	
  3476  01EA                     	ds	2
  3477  01EC                     _thermistorBetaValue:	
  3478  01EC                     	ds	2
  3479                           
  3480                           	psect	bssBANK4
  3481  0220                     __pbssBANK4:	
  3482  0220                     _cellSOC:	
  3483  0220                     	ds	10
  3484  022A                     _batVoltage:	
  3485  022A                     	ds	4
  3486  022E                     _dbuf:	
  3487  022E                     	ds	32
  3488                           
  3489                           	psect	dataBANK4
  3490  024E                     __pdataBANK4:	
  3491  024E                     stoa@F1152:	
  3492  024E                     	ds	7
  3493                           
  3494                           	psect	clrtext
  3495  32AC                     clear_ram0:	
  3496                           ;	Called with FSR0 containing the base address, and
  3497                           ;	btemp/btemp+1 has the size to clear
  3498                           
  3499  32AC  0064               	clrwdt	;clear the watchdog before getting into this loop
  3500  32AD                     clrloop0:	
  3501  32AD  0180               	clrf	0	;clear RAM location pointed to by FSR
  3502  32AE  3101               	addfsr 0,1
  3503  32AF  3001               	movlw	1
  3504  32B0  02FE               	subwf	126,f
  3505  32B1  3000               	movlw	0
  3506  32B2  3BFF               	subwfb	127,f
  3507  32B3  087F               	movf	127,w
  3508  32B4  047E               	iorwf	126,w
  3509  32B5  1903               	btfsc	3,2
  3510  32B6  3400               	retlw	0	;all done for this memory range, return
  3511  32B7  2AAD               	goto	clrloop0	;have we reached the end yet?
  3512                           
  3513                           	psect	cstackBANK2
  3514  0120                     __pcstackBANK2:	
  3515  0120                     logf@R:	
  3516                           
  3517                           ; 4 bytes @ 0x0
  3518  0120                     	ds	4
  3519  0124                     logf@t1:	
  3520                           
  3521                           ; 4 bytes @ 0x4
  3522  0124                     	ds	4
  3523  0128                     logf@t2:	
  3524                           
  3525                           ; 4 bytes @ 0x8
  3526  0128                     	ds	4
  3527  012C                     _logf$2159:	
  3528                           
  3529                           ; 4 bytes @ 0xC
  3530  012C                     	ds	4
  3531  0130                     _logf$2160:	
  3532                           
  3533                           ; 4 bytes @ 0x10
  3534  0130                     	ds	4
  3535  0134                     _logf$2161:	
  3536                           
  3537                           ; 4 bytes @ 0x14
  3538  0134                     	ds	4
  3539  0138                     _logf$2162:	
  3540                           
  3541                           ; 4 bytes @ 0x18
  3542  0138                     	ds	4
  3543  013C                     logf@k:	
  3544                           
  3545                           ; 2 bytes @ 0x1C
  3546  013C                     	ds	2
  3547  013E                     logf@hfsq:	
  3548                           
  3549                           ; 4 bytes @ 0x1E
  3550  013E                     	ds	4
  3551  0142                     logf@dk:	
  3552                           
  3553                           ; 4 bytes @ 0x22
  3554  0142                     	ds	4
  3555  0146                     logf@s:	
  3556                           
  3557                           ; 4 bytes @ 0x26
  3558  0146                     	ds	4
  3559  014A                     logf@z:	
  3560                           
  3561                           ; 4 bytes @ 0x2A
  3562  014A                     	ds	4
  3563  014E                     logf@w:	
  3564                           
  3565                           ; 4 bytes @ 0x2E
  3566  014E                     	ds	4
  3567  0152                     _logf$2158:	
  3568                           
  3569                           ; 4 bytes @ 0x32
  3570  0152                     	ds	4
  3571  0156                     logf@u:	
  3572                           
  3573                           ; 4 bytes @ 0x36
  3574  0156                     	ds	4
  3575  015A                     logf@f:	
  3576                           
  3577                           ; 4 bytes @ 0x3A
  3578  015A                     	ds	4
  3579  015E                     logf@ix:	
  3580                           
  3581                           ; 4 bytes @ 0x3E
  3582  015E                     	ds	4
  3583                           
  3584                           	psect	cstackBANK1
  3585  00A0                     __pcstackBANK1:	
  3586  00A0                     ?___flsub:	
  3587  00A0                     vfpfcnvrt@cp:	
  3588                           ; 4 bytes @ 0x0
  3589                           
  3590  00A0                     setShortCircuitProtection@scaler:	
  3591                           ; 2 bytes @ 0x0
  3592                           
  3593  00A0                     setOverCurrentDischargeProtection@scaler:	
  3594                           ; 4 bytes @ 0x0
  3595                           
  3596  00A0                     ___flsub@a:	
  3597                           ; 4 bytes @ 0x0
  3598                           
  3599                           
  3600                           ; 4 bytes @ 0x0
  3601  00A0                     	ds	2
  3602  00A2                     vfpfcnvrt@done:	
  3603                           
  3604                           ; 2 bytes @ 0x2
  3605  00A2                     	ds	2
  3606  00A4                     _vfpfcnvrt$1368:	
  3607  00A4                     ___flsub@b:	
  3608                           ; 2 bytes @ 0x4
  3609                           
  3610  00A4                     _setShortCircuitProtection$2144:	
  3611                           ; 4 bytes @ 0x4
  3612                           
  3613  00A4                     _setOverCurrentDischargeProtection$2145:	
  3614                           ; 4 bytes @ 0x4
  3615                           
  3616                           
  3617                           ; 4 bytes @ 0x4
  3618  00A4                     	ds	2
  3619  00A6                     _vfpfcnvrt$1369:	
  3620                           
  3621                           ; 2 bytes @ 0x6
  3622  00A6                     	ds	2
  3623  00A8                     ?_logf:	
  3624  00A8                     ?___fltol:	
  3625                           ; 4 bytes @ 0x8
  3626                           
  3627  00A8                     setShortCircuitProtection@i:	
  3628                           ; 4 bytes @ 0x8
  3629                           
  3630  00A8                     setOverCurrentDischargeProtection@i:	
  3631                           ; 2 bytes @ 0x8
  3632                           
  3633  00A8                     ___fltol@f1:	
  3634                           ; 2 bytes @ 0x8
  3635                           
  3636  00A8                     logf@x:	
  3637                           ; 4 bytes @ 0x8
  3638                           
  3639  00A8                     vfpfcnvrt@ll:	
  3640                           ; 4 bytes @ 0x8
  3641                           
  3642                           
  3643                           ; 8 bytes @ 0x8
  3644  00A8                     	ds	2
  3645  00AA                     setShortCircuitProtection@i_1000:	
  3646  00AA                     setOverCurrentDischargeProtection@i_1009:	
  3647                           ; 2 bytes @ 0xA
  3648                           
  3649                           
  3650                           ; 2 bytes @ 0xA
  3651  00AA                     	ds	2
  3652  00AC                     ??_logf:	
  3653  00AC                     ??___fltol:	
  3654                           ; 1 bytes @ 0xC
  3655                           
  3656                           
  3657                           ; 1 bytes @ 0xC
  3658  00AC                     	ds	4
  3659  00B0                     vfpfcnvrt@vp:	
  3660                           
  3661                           ; 2 bytes @ 0x10
  3662  00B0                     	ds	1
  3663  00B1                     ??_updateVoltages:	
  3664  00B1                     ??_calibrate_BATTSOC:	
  3665                           ; 1 bytes @ 0x11
  3666                           
  3667  00B1                     ??_updateCurrent:	
  3668                           ; 1 bytes @ 0x11
  3669                           
  3670  00B1                     coulomb_counter@i:	
  3671                           ; 1 bytes @ 0x11
  3672                           
  3673                           
  3674                           ; 2 bytes @ 0x11
  3675  00B1                     	ds	1
  3676  00B2                     vfpfcnvrt@c:	
  3677                           
  3678                           ; 1 bytes @ 0x12
  3679  00B2                     	ds	1
  3680  00B3                     vfpfcnvrt@llu:	
  3681                           
  3682                           ; 8 bytes @ 0x13
  3683  00B3                     	ds	1
  3684  00B4                     ??_updateTemperatures:	
  3685  00B4                     _updateVoltages$2146:	
  3686                           ; 1 bytes @ 0x14
  3687                           
  3688                           
  3689                           ; 4 bytes @ 0x14
  3690  00B4                     	ds	1
  3691  00B5                     updateCurrent@adcVal:	
  3692                           
  3693                           ; 2 bytes @ 0x15
  3694  00B5                     	ds	1
  3695  00B6                     calibrate_BATTSOC@i:	
  3696                           
  3697                           ; 2 bytes @ 0x16
  3698  00B6                     	ds	1
  3699  00B7                     _updateTemperatures$2147:	
  3700                           
  3701                           ; 4 bytes @ 0x17
  3702  00B7                     	ds	1
  3703  00B8                     calibrate_BATTSOC@j:	
  3704  00B8                     updateVoltages@adcVal:	
  3705                           ; 2 bytes @ 0x18
  3706                           
  3707                           
  3708                           ; 4 bytes @ 0x18
  3709  00B8                     	ds	3
  3710  00BB                     ?_vsnprintf:	
  3711  00BB                     vsnprintf@s:	
  3712                           ; 2 bytes @ 0x1B
  3713                           
  3714  00BB                     _updateTemperatures$2148:	
  3715                           ; 2 bytes @ 0x1B
  3716                           
  3717                           
  3718                           ; 4 bytes @ 0x1B
  3719  00BB                     	ds	2
  3720  00BD                     vsnprintf@n:	
  3721                           
  3722                           ; 2 bytes @ 0x1D
  3723  00BD                     	ds	2
  3724  00BF                     vsnprintf@fmt:	
  3725  00BF                     _updateTemperatures$2149:	
  3726                           ; 2 bytes @ 0x1F
  3727                           
  3728                           
  3729                           ; 4 bytes @ 0x1F
  3730  00BF                     	ds	2
  3731  00C1                     vsnprintf@ap:	
  3732                           
  3733                           ; 1 bytes @ 0x21
  3734  00C1                     	ds	1
  3735  00C2                     _vsnprintf$1940:	
  3736                           
  3737                           ; 2 bytes @ 0x22
  3738  00C2                     	ds	1
  3739  00C3                     _updateTemperatures$2150:	
  3740                           
  3741                           ; 4 bytes @ 0x23
  3742  00C3                     	ds	1
  3743  00C4                     vsnprintf@cnt:	
  3744                           
  3745                           ; 2 bytes @ 0x24
  3746  00C4                     	ds	2
  3747  00C6                     vsnprintf@f:	
  3748                           
  3749                           ; 6 bytes @ 0x26
  3750  00C6                     	ds	1
  3751  00C7                     _updateTemperatures$2151:	
  3752                           
  3753                           ; 4 bytes @ 0x27
  3754  00C7                     	ds	4
  3755  00CB                     _updateTemperatures$2152:	
  3756                           
  3757                           ; 4 bytes @ 0x2B
  3758  00CB                     	ds	1
  3759  00CC                     ?_snprintf:	
  3760  00CC                     snprintf@s:	
  3761                           ; 2 bytes @ 0x2C
  3762                           
  3763                           
  3764                           ; 2 bytes @ 0x2C
  3765  00CC                     	ds	2
  3766  00CE                     snprintf@n:	
  3767                           
  3768                           ; 2 bytes @ 0x2E
  3769  00CE                     	ds	1
  3770  00CF                     _updateTemperatures$2153:	
  3771                           
  3772                           ; 4 bytes @ 0x2F
  3773  00CF                     	ds	1
  3774  00D0                     snprintf@fmt:	
  3775                           
  3776                           ; 2 bytes @ 0x30
  3777  00D0                     	ds	3
  3778  00D3                     _updateTemperatures$2154:	
  3779                           
  3780                           ; 4 bytes @ 0x33
  3781  00D3                     	ds	4
  3782  00D7                     _updateTemperatures$2155:	
  3783                           
  3784                           ; 4 bytes @ 0x37
  3785  00D7                     	ds	4
  3786  00DB                     _updateTemperatures$2156:	
  3787                           
  3788                           ; 4 bytes @ 0x3B
  3789  00DB                     	ds	4
  3790  00DF                     _updateTemperatures$2157:	
  3791                           
  3792                           ; 4 bytes @ 0x3F
  3793  00DF                     	ds	4
  3794  00E3                     updateTemperatures@tmp:	
  3795                           
  3796                           ; 4 bytes @ 0x43
  3797  00E3                     	ds	4
  3798  00E7                     updateTemperatures@adcVal:	
  3799                           
  3800                           ; 2 bytes @ 0x47
  3801  00E7                     	ds	2
  3802  00E9                     updateTemperatures@vtsx:	
  3803                           
  3804                           ; 2 bytes @ 0x49
  3805  00E9                     	ds	2
  3806  00EB                     ??_statemachine:	
  3807                           
  3808                           ; 1 bytes @ 0x4B
  3809  00EB                     	ds	2
  3810  00ED                     statemachine@success:	
  3811                           
  3812                           ; 1 bytes @ 0x4D
  3813  00ED                     	ds	1
  3814  00EE                     ??_main:	
  3815                           
  3816                           ; 1 bytes @ 0x4E
  3817  00EE                     	ds	2
  3818                           
  3819                           	psect	cstackCOMMON
  3820  0070                     __pcstackCOMMON:	
  3821  0070                     ?_initClock:	
  3822  0070                     ?_init_GPIO:	
  3823                           ; 1 bytes @ 0x0
  3824                           
  3825  0070                     ?_initWDT:	
  3826                           ; 1 bytes @ 0x0
  3827                           
  3828  0070                     ?_init_I2C:	
  3829                           ; 1 bytes @ 0x0
  3830                           
  3831  0070                     ?_init_TMR1:	
  3832                           ; 1 bytes @ 0x0
  3833                           
  3834  0070                     ?_init_RGB:	
  3835                           ; 1 bytes @ 0x0
  3836                           
  3837  0070                     ?_watchdog_timeout_shutdown:	
  3838                           ; 1 bytes @ 0x0
  3839                           
  3840  0070                     ?_statemachine:	
  3841                           ; 1 bytes @ 0x0
  3842                           
  3843  0070                     ?_RGB_AWAIT_AFE_CONN:	
  3844                           ; 1 bytes @ 0x0
  3845                           
  3846  0070                     ?_init_AFE:	
  3847                           ; 1 bytes @ 0x0
  3848                           
  3849  0070                     ?_AFE_UPDATE:	
  3850                           ; 1 bytes @ 0x0
  3851                           
  3852  0070                     ?_printcellParameters:	
  3853                           ; 1 bytes @ 0x0
  3854                           
  3855  0070                     ?_internal_16:	
  3856                           ; 1 bytes @ 0x0
  3857                           
  3858  0070                     ?_updateVoltages:	
  3859                           ; 1 bytes @ 0x0
  3860                           
  3861  0070                     ?_calibrate_BATTSOC:	
  3862                           ; 1 bytes @ 0x0
  3863                           
  3864  0070                     ?_coulomb_counter:	
  3865                           ; 1 bytes @ 0x0
  3866                           
  3867  0070                     ?_updateCurrent:	
  3868                           ; 1 bytes @ 0x0
  3869                           
  3870  0070                     ?_updateTemperatures:	
  3871                           ; 1 bytes @ 0x0
  3872                           
  3873  0070                     ?_AFE_FET_Status:	
  3874                           ; 1 bytes @ 0x0
  3875                           
  3876  0070                     ?_putch:	
  3877                           ; 1 bytes @ 0x0
  3878                           
  3879  0070                     ?_myIsr:	
  3880                           ; 1 bytes @ 0x0
  3881                           
  3882  0070                     ??_myIsr:	
  3883                           ; 1 bytes @ 0x0
  3884                           
  3885  0070                     ?_main:	
  3886                           ; 1 bytes @ 0x0
  3887                           
  3888  0070                     ?_EUSART_Write:	
  3889                           ; 1 bytes @ 0x0
  3890                           
  3891  0070                     ?_send_I2C_startBit:	
  3892                           ; 1 bytes @ 0x0
  3893                           
  3894  0070                     ?_send_I2C_stopBit:	
  3895                           ; 1 bytes @ 0x0
  3896                           
  3897  0070                     ?_send_I2C_NACK:	
  3898                           ; 1 bytes @ 0x0
  3899                           
  3900  0070                     putch@c:	
  3901                           ; 1 bytes @ 0x0
  3902                           
  3903                           
  3904                           ; 1 bytes @ 0x0
  3905  0070                     	ds	1
  3906  0071                     ??_initClock:	
  3907  0071                     ??_init_GPIO:	
  3908                           ; 1 bytes @ 0x1
  3909                           
  3910  0071                     ??_initWDT:	
  3911                           ; 1 bytes @ 0x1
  3912                           
  3913  0071                     ??_init_I2C:	
  3914                           ; 1 bytes @ 0x1
  3915                           
  3916  0071                     ??_init_TMR1:	
  3917                           ; 1 bytes @ 0x1
  3918                           
  3919  0071                     ??_init_RGB:	
  3920                           ; 1 bytes @ 0x1
  3921                           
  3922  0071                     ?_RGB_color:	
  3923                           ; 1 bytes @ 0x1
  3924                           
  3925  0071                     ??_internal_16:	
  3926                           ; 1 bytes @ 0x1
  3927                           
  3928  0071                     ?_setShuntResistorValue:	
  3929                           ; 1 bytes @ 0x1
  3930                           
  3931  0071                     ??_putch:	
  3932                           ; 1 bytes @ 0x1
  3933                           
  3934  0071                     ??_EUSART_Write:	
  3935                           ; 1 bytes @ 0x1
  3936                           
  3937  0071                     ?_send_I2C_data:	
  3938                           ; 1 bytes @ 0x1
  3939                           
  3940  0071                     ?_send_I2C_controlByte:	
  3941                           ; 1 bytes @ 0x1
  3942                           
  3943  0071                     ??_send_I2C_startBit:	
  3944                           ; 1 bytes @ 0x1
  3945                           
  3946  0071                     ??_send_I2C_stopBit:	
  3947                           ; 1 bytes @ 0x1
  3948                           
  3949  0071                     ??_send_I2C_NACK:	
  3950                           ; 1 bytes @ 0x1
  3951                           
  3952  0071                     ??___aodiv:	
  3953                           ; 1 bytes @ 0x1
  3954                           
  3955  0071                     ??___aomod:	
  3956                           ; 1 bytes @ 0x1
  3957                           
  3958  0071                     ??___lodiv:	
  3959                           ; 1 bytes @ 0x1
  3960                           
  3961  0071                     ??___lomod:	
  3962                           ; 1 bytes @ 0x1
  3963                           
  3964  0071                     ?_fputc:	
  3965                           ; 1 bytes @ 0x1
  3966                           
  3967  0071                     ?_strlen:	
  3968                           ; 2 bytes @ 0x1
  3969                           
  3970  0071                     ?_isupper:	
  3971                           ; 2 bytes @ 0x1
  3972                           
  3973  0071                     ?_isalpha:	
  3974                           ; 2 bytes @ 0x1
  3975                           
  3976  0071                     ?_isdigit:	
  3977                           ; 2 bytes @ 0x1
  3978                           
  3979  0071                     ?_strncmp:	
  3980                           ; 2 bytes @ 0x1
  3981                           
  3982  0071                     ?__Umul8_16:	
  3983                           ; 2 bytes @ 0x1
  3984                           
  3985  0071                     ?_isspace:	
  3986                           ; 2 bytes @ 0x1
  3987                           
  3988  0071                     ?_islower:	
  3989                           ; 2 bytes @ 0x1
  3990                           
  3991  0071                     ?_read_I2C_data:	
  3992                           ; 2 bytes @ 0x1
  3993                           
  3994  0071                     ?___wmul:	
  3995                           ; 2 bytes @ 0x1
  3996                           
  3997  0071                     ?___lmul:	
  3998                           ; 2 bytes @ 0x1
  3999                           
  4000  0071                     ?___xxtofl:	
  4001                           ; 4 bytes @ 0x1
  4002                           
  4003  0071                     EUSART_Write@txData:	
  4004                           ; 4 bytes @ 0x1
  4005                           
  4006  0071                     __Umul8_16@multiplicand:	
  4007                           ; 1 bytes @ 0x1
  4008                           
  4009  0071                     send_I2C_data@databyte:	
  4010                           ; 1 bytes @ 0x1
  4011                           
  4012  0071                     send_I2C_controlByte@BlockAddress:	
  4013                           ; 2 bytes @ 0x1
  4014                           
  4015  0071                     RGB_color@color:	
  4016                           ; 2 bytes @ 0x1
  4017                           
  4018  0071                     ___wmul@multiplier:	
  4019                           ; 2 bytes @ 0x1
  4020                           
  4021  0071                     isalpha@c:	
  4022                           ; 2 bytes @ 0x1
  4023                           
  4024  0071                     isdigit@c:	
  4025                           ; 2 bytes @ 0x1
  4026                           
  4027  0071                     isspace@c:	
  4028                           ; 2 bytes @ 0x1
  4029                           
  4030  0071                     isupper@c:	
  4031                           ; 2 bytes @ 0x1
  4032                           
  4033  0071                     fputc@c:	
  4034                           ; 2 bytes @ 0x1
  4035                           
  4036  0071                     strlen@s:	
  4037                           ; 2 bytes @ 0x1
  4038                           
  4039  0071                     strncmp@_l:	
  4040                           ; 2 bytes @ 0x1
  4041                           
  4042  0071                     islower@c:	
  4043                           ; 2 bytes @ 0x1
  4044                           
  4045  0071                     setShuntResistorValue@res_mOhm:	
  4046                           ; 2 bytes @ 0x1
  4047                           
  4048  0071                     ___lmul@multiplier:	
  4049                           ; 4 bytes @ 0x1
  4050                           
  4051  0071                     ___xxtofl@val:	
  4052                           ; 4 bytes @ 0x1
  4053                           
  4054                           
  4055                           ; 4 bytes @ 0x1
  4056  0071                     	ds	1
  4057  0072                     ?_EUSART_Write_Text:	
  4058  0072                     ___aodiv@counter:	
  4059                           ; 1 bytes @ 0x2
  4060                           
  4061  0072                     ___aomod@counter:	
  4062                           ; 1 bytes @ 0x2
  4063                           
  4064  0072                     ___lomod@counter:	
  4065                           ; 1 bytes @ 0x2
  4066                           
  4067  0072                     EUSART_Write_Text@text:	
  4068                           ; 1 bytes @ 0x2
  4069                           
  4070  0072                     ___lodiv@quotient:	
  4071                           ; 2 bytes @ 0x2
  4072                           
  4073                           
  4074                           ; 8 bytes @ 0x2
  4075  0072                     	ds	1
  4076  0073                     ??_watchdog_timeout_shutdown:	
  4077  0073                     ??_RGB_AWAIT_AFE_CONN:	
  4078                           ; 1 bytes @ 0x3
  4079                           
  4080  0073                     ??_RGB_color:	
  4081                           ; 1 bytes @ 0x3
  4082                           
  4083  0073                     ??_strlen:	
  4084                           ; 1 bytes @ 0x3
  4085                           
  4086  0073                     ??_isupper:	
  4087                           ; 1 bytes @ 0x3
  4088                           
  4089  0073                     ??_isalpha:	
  4090                           ; 1 bytes @ 0x3
  4091                           
  4092  0073                     ??_isdigit:	
  4093                           ; 1 bytes @ 0x3
  4094                           
  4095  0073                     ??__Umul8_16:	
  4096                           ; 1 bytes @ 0x3
  4097                           
  4098  0073                     ??_isspace:	
  4099                           ; 1 bytes @ 0x3
  4100                           
  4101  0073                     ??_islower:	
  4102                           ; 1 bytes @ 0x3
  4103                           
  4104  0073                     ??_send_I2C_data:	
  4105                           ; 1 bytes @ 0x3
  4106                           
  4107  0073                     ??_read_I2C_data:	
  4108                           ; 1 bytes @ 0x3
  4109                           
  4110  0073                     ___aodiv@sign:	
  4111                           ; 1 bytes @ 0x3
  4112                           
  4113  0073                     ___aomod@sign:	
  4114                           ; 1 bytes @ 0x3
  4115                           
  4116  0073                     send_I2C_controlByte@RW_bit:	
  4117                           ; 1 bytes @ 0x3
  4118                           
  4119  0073                     ___wmul@multiplicand:	
  4120                           ; 2 bytes @ 0x3
  4121                           
  4122  0073                     fputc@fp:	
  4123                           ; 2 bytes @ 0x3
  4124                           
  4125  0073                     strlen@a:	
  4126                           ; 2 bytes @ 0x3
  4127                           
  4128  0073                     strncmp@_r:	
  4129                           ; 2 bytes @ 0x3
  4130                           
  4131                           
  4132                           ; 2 bytes @ 0x3
  4133  0073                     	ds	1
  4134  0074                     ??_EUSART_Write_Text:	
  4135  0074                     ?_abs:	
  4136                           ; 1 bytes @ 0x4
  4137                           
  4138  0074                     abs@a:	
  4139                           ; 2 bytes @ 0x4
  4140                           
  4141  0074                     ___aodiv@quotient:	
  4142                           ; 2 bytes @ 0x4
  4143                           
  4144                           
  4145                           ; 8 bytes @ 0x4
  4146  0074                     	ds	1
  4147  0075                     ??_setShuntResistorValue:	
  4148  0075                     ??_fputc:	
  4149                           ; 1 bytes @ 0x5
  4150                           
  4151  0075                     ??_send_I2C_controlByte:	
  4152                           ; 1 bytes @ 0x5
  4153                           
  4154  0075                     ?_I2C_writeRegister:	
  4155                           ; 1 bytes @ 0x5
  4156                           
  4157  0075                     ??___wmul:	
  4158                           ; 1 bytes @ 0x5
  4159                           
  4160  0075                     ??___xxtofl:	
  4161                           ; 1 bytes @ 0x5
  4162                           
  4163  0075                     ?_readRegister:	
  4164                           ; 1 bytes @ 0x5
  4165                           
  4166  0075                     _isspace$1795:	
  4167                           ; 2 bytes @ 0x5
  4168                           
  4169  0075                     EUSART_Write_Text@i:	
  4170                           ; 1 bytes @ 0x5
  4171                           
  4172  0075                     I2C_writeRegister@slaveAddress:	
  4173                           ; 2 bytes @ 0x5
  4174                           
  4175  0075                     readRegister@slaveAddress:	
  4176                           ; 2 bytes @ 0x5
  4177                           
  4178  0075                     ___wmul@product:	
  4179                           ; 2 bytes @ 0x5
  4180                           
  4181  0075                     strncmp@n:	
  4182                           ; 2 bytes @ 0x5
  4183                           
  4184  0075                     __Umul8_16@product:	
  4185                           ; 2 bytes @ 0x5
  4186                           
  4187  0075                     ___lmul@multiplicand:	
  4188                           ; 2 bytes @ 0x5
  4189                           
  4190                           
  4191                           ; 4 bytes @ 0x5
  4192  0075                     	ds	1
  4193  0076                     ??_abs:	
  4194                           
  4195                           ; 1 bytes @ 0x6
  4196  0076                     	ds	1
  4197  0077                     ??_setTemperatureLimitsint:	
  4198  0077                     ??_strncmp:	
  4199                           ; 1 bytes @ 0x7
  4200                           
  4201  0077                     ?_toupper:	
  4202                           ; 1 bytes @ 0x7
  4203                           
  4204  0077                     ?_atoi:	
  4205                           ; 2 bytes @ 0x7
  4206                           
  4207  0077                     I2C_writeRegister@regAddress:	
  4208                           ; 2 bytes @ 0x7
  4209                           
  4210  0077                     readRegister@regAddress:	
  4211                           ; 2 bytes @ 0x7
  4212                           
  4213  0077                     atoi@s:	
  4214                           ; 2 bytes @ 0x7
  4215                           
  4216  0077                     toupper@c:	
  4217                           ; 2 bytes @ 0x7
  4218                           
  4219  0077                     __Umul8_16@word_mpld:	
  4220                           ; 2 bytes @ 0x7
  4221                           
  4222                           
  4223                           ; 2 bytes @ 0x7
  4224  0077                     	ds	1
  4225  0078                     strncmp@l:	
  4226                           
  4227                           ; 2 bytes @ 0x8
  4228  0078                     	ds	1
  4229  0079                     ??_readRegister:	
  4230  0079                     ??___lmul:	
  4231                           ; 1 bytes @ 0x9
  4232                           
  4233  0079                     ??___aldiv:	
  4234                           ; 1 bytes @ 0x9
  4235                           
  4236  0079                     __Umul8_16@multiplier:	
  4237                           ; 1 bytes @ 0x9
  4238                           
  4239  0079                     I2C_writeRegister@data:	
  4240                           ; 1 bytes @ 0x9
  4241                           
  4242  0079                     readRegister@recievedData:	
  4243                           ; 2 bytes @ 0x9
  4244                           
  4245  0079                     _toupper$1903:	
  4246                           ; 2 bytes @ 0x9
  4247                           
  4248                           
  4249                           ; 2 bytes @ 0x9
  4250  0079                     	ds	1
  4251  007A                     ??_stoa:	
  4252  007A                     ??___flneg:	
  4253                           ; 1 bytes @ 0xA
  4254                           
  4255  007A                     ??___flsub:	
  4256                           ; 1 bytes @ 0xA
  4257                           
  4258  007A                     ?_fputs:	
  4259                           ; 1 bytes @ 0xA
  4260                           
  4261  007A                     ___fltol@sign1:	
  4262                           ; 2 bytes @ 0xA
  4263                           
  4264  007A                     ___lodiv@counter:	
  4265                           ; 1 bytes @ 0xA
  4266                           
  4267  007A                     EUSART_Initialize@x:	
  4268                           ; 1 bytes @ 0xA
  4269                           
  4270  007A                     fputs@fp:	
  4271                           ; 2 bytes @ 0xA
  4272                           
  4273  007A                     strncmp@r:	
  4274                           ; 2 bytes @ 0xA
  4275                           
  4276                           
  4277                           ; 2 bytes @ 0xA
  4278  007A                     	ds	1
  4279  007B                     ??_init_AFE:	
  4280  007B                     ??_AFE_FET_Status:	
  4281                           ; 1 bytes @ 0xB
  4282                           
  4283  007B                     ??_AFE_Status:	
  4284                           ; 1 bytes @ 0xB
  4285                           
  4286  007B                     ??_I2C_writeRegister:	
  4287                           ; 1 bytes @ 0xB
  4288                           
  4289  007B                     enableDischarging@sys_ctrl2:	
  4290                           ; 1 bytes @ 0xB
  4291                           
  4292  007B                     enableCharging@sys_ctrl2:	
  4293                           ; 1 bytes @ 0xB
  4294                           
  4295  007B                     ___fltol@exp1:	
  4296                           ; 1 bytes @ 0xB
  4297                           
  4298                           
  4299                           ; 1 bytes @ 0xB
  4300  007B                     	ds	1
  4301  007C                     ??_AFE_UPDATE:	
  4302  007C                     ??_printcellParameters:	
  4303                           ; 1 bytes @ 0xC
  4304                           
  4305                           
  4306                           	psect	cstackBANK0
  4307  0020                     __pcstackBANK0:	
  4308                           ; 1 bytes @ 0xC
  4309                           
  4310  0020                     ?_setTemperatureLimitsint:	
  4311  0020                     ?_enableDischarging:	
  4312                           ; 1 bytes @ 0x0
  4313                           
  4314  0020                     ?_enableCharging:	
  4315                           ; 1 bytes @ 0x0
  4316                           
  4317  0020                     ??_fputs:	
  4318                           ; 1 bytes @ 0x0
  4319                           
  4320  0020                     ??_toupper:	
  4321                           ; 1 bytes @ 0x0
  4322                           
  4323  0020                     ??_atoi:	
  4324                           ; 1 bytes @ 0x0
  4325                           
  4326  0020                     ?_beginAFEcommunication:	
  4327                           ; 1 bytes @ 0x0
  4328                           
  4329  0020                     ?_AFE_Status:	
  4330                           ; 2 bytes @ 0x0
  4331                           
  4332  0020                     ?_stoa:	
  4333                           ; 2 bytes @ 0x0
  4334                           
  4335  0020                     ?___aodiv:	
  4336                           ; 2 bytes @ 0x0
  4337                           
  4338  0020                     ?___aomod:	
  4339                           ; 8 bytes @ 0x0
  4340                           
  4341  0020                     ?___lodiv:	
  4342                           ; 8 bytes @ 0x0
  4343                           
  4344  0020                     ?___lomod:	
  4345                           ; 8 bytes @ 0x0
  4346                           
  4347  0020                     AFE_FET_Status@sys_ctrl2:	
  4348                           ; 8 bytes @ 0x0
  4349                           
  4350  0020                     ___xxtofl@sign:	
  4351                           ; 1 bytes @ 0x0
  4352                           
  4353  0020                     setTemperatureLimitsint@minDischarge_degC:	
  4354                           ; 1 bytes @ 0x0
  4355                           
  4356  0020                     enableDischarging@enable:	
  4357                           ; 2 bytes @ 0x0
  4358                           
  4359  0020                     enableCharging@enable:	
  4360                           ; 2 bytes @ 0x0
  4361                           
  4362  0020                     stoa@fp:	
  4363                           ; 2 bytes @ 0x0
  4364                           
  4365  0020                     ___lmul@product:	
  4366                           ; 2 bytes @ 0x0
  4367                           
  4368  0020                     ___aodiv@divisor:	
  4369                           ; 4 bytes @ 0x0
  4370                           
  4371  0020                     ___aomod@divisor:	
  4372                           ; 8 bytes @ 0x0
  4373                           
  4374  0020                     ___lodiv@divisor:	
  4375                           ; 8 bytes @ 0x0
  4376                           
  4377  0020                     ___lomod@divisor:	
  4378                           ; 8 bytes @ 0x0
  4379                           
  4380                           
  4381                           ; 8 bytes @ 0x0
  4382  0020                     	ds	1
  4383  0021                     ___xxtofl@exp:	
  4384                           
  4385                           ; 1 bytes @ 0x1
  4386  0021                     	ds	1
  4387  0022                     ??_beginAFEcommunication:	
  4388  0022                     ??_enableDischarging:	
  4389                           ; 1 bytes @ 0x2
  4390                           
  4391  0022                     ??_enableCharging:	
  4392                           ; 1 bytes @ 0x2
  4393                           
  4394  0022                     fputs@c:	
  4395                           ; 1 bytes @ 0x2
  4396                           
  4397  0022                     setTemperatureLimitsint@maxDischarge_degC:	
  4398                           ; 1 bytes @ 0x2
  4399                           
  4400  0022                     AFE_Status@error_flag:	
  4401                           ; 2 bytes @ 0x2
  4402                           
  4403  0022                     stoa@s:	
  4404                           ; 2 bytes @ 0x2
  4405                           
  4406  0022                     ___xxtofl@arg:	
  4407                           ; 2 bytes @ 0x2
  4408                           
  4409                           
  4410                           ; 4 bytes @ 0x2
  4411  0022                     	ds	1
  4412  0023                     fputs@i:	
  4413                           
  4414                           ; 2 bytes @ 0x3
  4415  0023                     	ds	1
  4416  0024                     ?___aldiv:	
  4417  0024                     AFE_Status@sys_stat:	
  4418                           ; 4 bytes @ 0x4
  4419                           
  4420  0024                     setTemperatureLimitsint@minCharge_degC:	
  4421                           ; 1 bytes @ 0x4
  4422                           
  4423  0024                     atoi@neg:	
  4424                           ; 2 bytes @ 0x4
  4425                           
  4426  0024                     ___aldiv@divisor:	
  4427                           ; 2 bytes @ 0x4
  4428                           
  4429  0024                     stoa@nuls:	
  4430                           ; 4 bytes @ 0x4
  4431                           
  4432                           
  4433                           ; 7 bytes @ 0x4
  4434  0024                     	ds	1
  4435  0025                     fputs@s:	
  4436                           
  4437                           ; 1 bytes @ 0x5
  4438  0025                     	ds	1
  4439  0026                     ?_pad:	
  4440  0026                     ?___flmul:	
  4441                           ; 2 bytes @ 0x6
  4442                           
  4443  0026                     setTemperatureLimitsint@maxCharge_degC:	
  4444                           ; 4 bytes @ 0x6
  4445                           
  4446  0026                     pad@fp:	
  4447                           ; 2 bytes @ 0x6
  4448                           
  4449  0026                     _atoi$1768:	
  4450                           ; 2 bytes @ 0x6
  4451                           
  4452  0026                     ___flmul@b:	
  4453                           ; 2 bytes @ 0x6
  4454                           
  4455                           
  4456                           ; 4 bytes @ 0x6
  4457  0026                     	ds	2
  4458  0028                     pad@buf:	
  4459  0028                     _atoi$1770:	
  4460                           ; 1 bytes @ 0x8
  4461                           
  4462  0028                     ___aldiv@dividend:	
  4463                           ; 2 bytes @ 0x8
  4464                           
  4465  0028                     ___aodiv@dividend:	
  4466                           ; 4 bytes @ 0x8
  4467                           
  4468  0028                     ___aomod@dividend:	
  4469                           ; 8 bytes @ 0x8
  4470                           
  4471  0028                     ___lodiv@dividend:	
  4472                           ; 8 bytes @ 0x8
  4473                           
  4474  0028                     ___lomod@dividend:	
  4475                           ; 8 bytes @ 0x8
  4476                           
  4477                           
  4478                           ; 8 bytes @ 0x8
  4479  0028                     	ds	1
  4480  0029                     pad@p:	
  4481                           
  4482                           ; 2 bytes @ 0x9
  4483  0029                     	ds	1
  4484  002A                     _atoi$1769:	
  4485  002A                     ___flmul@a:	
  4486                           ; 1 bytes @ 0xA
  4487                           
  4488                           
  4489                           ; 4 bytes @ 0xA
  4490  002A                     	ds	1
  4491  002B                     ??_pad:	
  4492  002B                     beginAFEcommunication@commSuccess:	
  4493                           ; 1 bytes @ 0xB
  4494                           
  4495  002B                     stoa@i:	
  4496                           ; 2 bytes @ 0xB
  4497                           
  4498  002B                     atoi@n:	
  4499                           ; 2 bytes @ 0xB
  4500                           
  4501                           
  4502                           ; 2 bytes @ 0xB
  4503  002B                     	ds	1
  4504  002C                     ___aldiv@counter:	
  4505  002C                     pad@i:	
  4506                           ; 1 bytes @ 0xC
  4507                           
  4508                           
  4509                           ; 2 bytes @ 0xC
  4510  002C                     	ds	1
  4511  002D                     ___aldiv@sign:	
  4512  002D                     beginAFEcommunication@i:	
  4513                           ; 1 bytes @ 0xD
  4514                           
  4515  002D                     stoa@w:	
  4516                           ; 2 bytes @ 0xD
  4517                           
  4518                           
  4519                           ; 2 bytes @ 0xD
  4520  002D                     	ds	1
  4521  002E                     ??___flmul:	
  4522  002E                     pad@w:	
  4523                           ; 1 bytes @ 0xE
  4524                           
  4525  002E                     ___aldiv@quotient:	
  4526                           ; 2 bytes @ 0xE
  4527                           
  4528                           
  4529                           ; 4 bytes @ 0xE
  4530  002E                     	ds	1
  4531  002F                     stoa@cp:	
  4532                           
  4533                           ; 2 bytes @ 0xF
  4534  002F                     	ds	1
  4535  0030                     ?_ctoa:	
  4536  0030                     ?_dtoa:	
  4537                           ; 2 bytes @ 0x10
  4538                           
  4539  0030                     ?_otoa:	
  4540                           ; 2 bytes @ 0x10
  4541                           
  4542  0030                     ?_utoa:	
  4543                           ; 2 bytes @ 0x10
  4544                           
  4545  0030                     ?_xtoa:	
  4546                           ; 2 bytes @ 0x10
  4547                           
  4548  0030                     ctoa@fp:	
  4549                           ; 2 bytes @ 0x10
  4550                           
  4551  0030                     dtoa@fp:	
  4552                           ; 2 bytes @ 0x10
  4553                           
  4554  0030                     otoa@fp:	
  4555                           ; 2 bytes @ 0x10
  4556                           
  4557  0030                     utoa@fp:	
  4558                           ; 2 bytes @ 0x10
  4559                           
  4560  0030                     xtoa@fp:	
  4561                           ; 2 bytes @ 0x10
  4562                           
  4563                           
  4564                           ; 2 bytes @ 0x10
  4565  0030                     	ds	1
  4566  0031                     stoa@p:	
  4567                           
  4568                           ; 2 bytes @ 0x11
  4569  0031                     	ds	1
  4570  0032                     ?_EUSART_Initialize:	
  4571  0032                     ?_setCellUndervoltageProtection:	
  4572                           ; 1 bytes @ 0x12
  4573                           
  4574  0032                     ?_setCellOvervoltageProtection:	
  4575                           ; 1 bytes @ 0x12
  4576                           
  4577  0032                     ctoa@c:	
  4578                           ; 1 bytes @ 0x12
  4579                           
  4580  0032                     setCellUndervoltageProtection@voltage_mV:	
  4581                           ; 1 bytes @ 0x12
  4582                           
  4583  0032                     setCellOvervoltageProtection@voltage_mV:	
  4584                           ; 2 bytes @ 0x12
  4585                           
  4586  0032                     EUSART_Initialize@baudrate:	
  4587                           ; 2 bytes @ 0x12
  4588                           
  4589  0032                     dtoa@d:	
  4590                           ; 4 bytes @ 0x12
  4591                           
  4592  0032                     otoa@d:	
  4593                           ; 8 bytes @ 0x12
  4594                           
  4595  0032                     utoa@d:	
  4596                           ; 8 bytes @ 0x12
  4597                           
  4598  0032                     xtoa@d:	
  4599                           ; 8 bytes @ 0x12
  4600                           
  4601                           
  4602                           ; 8 bytes @ 0x12
  4603  0032                     	ds	1
  4604  0033                     ??_ctoa:	
  4605  0033                     ___flmul@sign:	
  4606                           ; 1 bytes @ 0x13
  4607                           
  4608  0033                     stoa@l:	
  4609                           ; 1 bytes @ 0x13
  4610                           
  4611                           
  4612                           ; 2 bytes @ 0x13
  4613  0033                     	ds	1
  4614  0034                     setCellUndervoltageProtection@delay_s:	
  4615  0034                     setCellOvervoltageProtection@delay_s:	
  4616                           ; 2 bytes @ 0x14
  4617                           
  4618  0034                     ctoa@w:	
  4619                           ; 2 bytes @ 0x14
  4620                           
  4621  0034                     ___flmul@grs:	
  4622                           ; 2 bytes @ 0x14
  4623                           
  4624                           
  4625                           ; 4 bytes @ 0x14
  4626  0034                     	ds	2
  4627  0036                     ??_EUSART_Initialize:	
  4628  0036                     ??_setCellUndervoltageProtection:	
  4629                           ; 1 bytes @ 0x16
  4630                           
  4631  0036                     ??_setCellOvervoltageProtection:	
  4632                           ; 1 bytes @ 0x16
  4633                           
  4634                           
  4635                           ; 1 bytes @ 0x16
  4636  0036                     	ds	2
  4637  0038                     ___flmul@aexp:	
  4638                           
  4639                           ; 1 bytes @ 0x18
  4640  0038                     	ds	1
  4641  0039                     ___flmul@bexp:	
  4642                           
  4643                           ; 1 bytes @ 0x19
  4644  0039                     	ds	1
  4645  003A                     ??_dtoa:	
  4646  003A                     ??_otoa:	
  4647                           ; 1 bytes @ 0x1A
  4648                           
  4649  003A                     ??_utoa:	
  4650                           ; 1 bytes @ 0x1A
  4651                           
  4652  003A                     xtoa@x:	
  4653                           ; 1 bytes @ 0x1A
  4654                           
  4655  003A                     ___flmul@prod:	
  4656                           ; 1 bytes @ 0x1A
  4657                           
  4658                           
  4659                           ; 4 bytes @ 0x1A
  4660  003A                     	ds	1
  4661  003B                     ??_xtoa:	
  4662  003B                     utoa@p:	
  4663                           ; 1 bytes @ 0x1B
  4664                           
  4665                           
  4666                           ; 2 bytes @ 0x1B
  4667  003B                     	ds	2
  4668  003D                     _dtoa$1317:	
  4669  003D                     utoa@w:	
  4670                           ; 2 bytes @ 0x1D
  4671                           
  4672                           
  4673                           ; 2 bytes @ 0x1D
  4674  003D                     	ds	1
  4675  003E                     ___flmul@temp:	
  4676                           
  4677                           ; 2 bytes @ 0x1E
  4678  003E                     	ds	1
  4679  003F                     dtoa@p:	
  4680  003F                     utoa@n:	
  4681                           ; 2 bytes @ 0x1F
  4682                           
  4683                           
  4684                           ; 8 bytes @ 0x1F
  4685  003F                     	ds	1
  4686  0040                     ?___fldiv:	
  4687  0040                     ___fldiv@a:	
  4688                           ; 4 bytes @ 0x20
  4689                           
  4690                           
  4691                           ; 4 bytes @ 0x20
  4692  0040                     	ds	1
  4693  0041                     dtoa@w:	
  4694                           
  4695                           ; 2 bytes @ 0x21
  4696  0041                     	ds	1
  4697  0042                     otoa@p:	
  4698                           
  4699                           ; 2 bytes @ 0x22
  4700  0042                     	ds	1
  4701  0043                     dtoa@s:	
  4702  0043                     _xtoa$1353:	
  4703                           ; 2 bytes @ 0x23
  4704                           
  4705                           
  4706                           ; 2 bytes @ 0x23
  4707  0043                     	ds	1
  4708  0044                     setCellUndervoltageProtection@uv_trip:	
  4709  0044                     setCellOvervoltageProtection@ov_trip:	
  4710                           ; 1 bytes @ 0x24
  4711                           
  4712  0044                     otoa@t:	
  4713                           ; 1 bytes @ 0x24
  4714                           
  4715  0044                     ___fldiv@b:	
  4716                           ; 2 bytes @ 0x24
  4717                           
  4718                           
  4719                           ; 4 bytes @ 0x24
  4720  0044                     	ds	1
  4721  0045                     setCellUndervoltageProtection@i:	
  4722  0045                     setCellOvervoltageProtection@i:	
  4723                           ; 2 bytes @ 0x25
  4724                           
  4725  0045                     _xtoa$1354:	
  4726                           ; 2 bytes @ 0x25
  4727                           
  4728  0045                     dtoa@n:	
  4729                           ; 2 bytes @ 0x25
  4730                           
  4731                           
  4732                           ; 8 bytes @ 0x25
  4733  0045                     	ds	1
  4734  0046                     otoa@w:	
  4735                           
  4736                           ; 2 bytes @ 0x26
  4737  0046                     	ds	1
  4738  0047                     utoa@i:	
  4739  0047                     xtoa@p:	
  4740                           ; 2 bytes @ 0x27
  4741                           
  4742                           
  4743                           ; 2 bytes @ 0x27
  4744  0047                     	ds	1
  4745  0048                     ??___fldiv:	
  4746  0048                     otoa@n:	
  4747                           ; 1 bytes @ 0x28
  4748                           
  4749                           
  4750                           ; 8 bytes @ 0x28
  4751  0048                     	ds	1
  4752  0049                     xtoa@w:	
  4753                           
  4754                           ; 2 bytes @ 0x29
  4755  0049                     	ds	2
  4756  004B                     xtoa@n:	
  4757                           
  4758                           ; 8 bytes @ 0x2B
  4759  004B                     	ds	2
  4760  004D                     dtoa@i:	
  4761  004D                     ___fldiv@rem:	
  4762                           ; 2 bytes @ 0x2D
  4763                           
  4764                           
  4765                           ; 4 bytes @ 0x2D
  4766  004D                     	ds	3
  4767  0050                     otoa@i:	
  4768                           
  4769                           ; 2 bytes @ 0x30
  4770  0050                     	ds	1
  4771  0051                     ___fldiv@sign:	
  4772                           
  4773                           ; 1 bytes @ 0x31
  4774  0051                     	ds	1
  4775  0052                     ___fldiv@new_exp:	
  4776                           
  4777                           ; 2 bytes @ 0x32
  4778  0052                     	ds	1
  4779  0053                     xtoa@i:	
  4780                           
  4781                           ; 2 bytes @ 0x33
  4782  0053                     	ds	1
  4783  0054                     ___fldiv@grs:	
  4784                           
  4785                           ; 4 bytes @ 0x34
  4786  0054                     	ds	1
  4787  0055                     xtoa@c:	
  4788                           
  4789                           ; 2 bytes @ 0x35
  4790  0055                     	ds	2
  4791  0057                     ?_vfpfcnvrt:	
  4792  0057                     vfpfcnvrt@fp:	
  4793                           ; 2 bytes @ 0x37
  4794                           
  4795                           
  4796                           ; 2 bytes @ 0x37
  4797  0057                     	ds	1
  4798  0058                     ___fldiv@bexp:	
  4799                           
  4800                           ; 1 bytes @ 0x38
  4801  0058                     	ds	1
  4802  0059                     vfpfcnvrt@fmt:	
  4803  0059                     ___fldiv@aexp:	
  4804                           ; 1 bytes @ 0x39
  4805                           
  4806                           
  4807                           ; 1 bytes @ 0x39
  4808  0059                     	ds	1
  4809  005A                     ?___flge:	
  4810  005A                     ?___flneg:	
  4811                           ; 1 bit 
  4812                           
  4813  005A                     ?___fladd:	
  4814                           ; 4 bytes @ 0x3A
  4815                           
  4816  005A                     vfpfcnvrt@ap:	
  4817                           ; 4 bytes @ 0x3A
  4818                           
  4819  005A                     ___flge@ff1:	
  4820                           ; 1 bytes @ 0x3A
  4821                           
  4822  005A                     ___flneg@f1:	
  4823                           ; 4 bytes @ 0x3A
  4824                           
  4825  005A                     ___fladd@b:	
  4826                           ; 4 bytes @ 0x3A
  4827                           
  4828                           
  4829                           ; 4 bytes @ 0x3A
  4830  005A                     	ds	1
  4831  005B                     ??_vfpfcnvrt:	
  4832                           
  4833                           ; 1 bytes @ 0x3B
  4834  005B                     	ds	3
  4835  005E                     ___flge@ff2:	
  4836  005E                     ___fladd@a:	
  4837                           ; 4 bytes @ 0x3E
  4838                           
  4839                           
  4840                           ; 4 bytes @ 0x3E
  4841  005E                     	ds	3
  4842  0061                     ?_vfprintf:	
  4843  0061                     vfprintf@fp:	
  4844                           ; 2 bytes @ 0x41
  4845                           
  4846                           
  4847                           ; 2 bytes @ 0x41
  4848  0061                     	ds	1
  4849  0062                     ??___flge:	
  4850  0062                     ??___fladd:	
  4851                           ; 1 bytes @ 0x42
  4852                           
  4853                           
  4854                           ; 1 bytes @ 0x42
  4855  0062                     	ds	1
  4856  0063                     vfprintf@fmt:	
  4857                           
  4858                           ; 2 bytes @ 0x43
  4859  0063                     	ds	2
  4860  0065                     vfprintf@ap:	
  4861                           
  4862                           ; 1 bytes @ 0x45
  4863  0065                     	ds	1
  4864  0066                     ?_setShortCircuitProtection:	
  4865  0066                     ?_setOverCurrentDischargeProtection:	
  4866                           ; 1 bytes @ 0x46
  4867                           
  4868  0066                     ??_vfprintf:	
  4869                           ; 1 bytes @ 0x46
  4870                           
  4871  0066                     setShortCircuitProtection@current_mA:	
  4872                           ; 1 bytes @ 0x46
  4873                           
  4874  0066                     setOverCurrentDischargeProtection@current_mA:	
  4875                           ; 4 bytes @ 0x46
  4876                           
  4877                           
  4878                           ; 4 bytes @ 0x46
  4879  0066                     	ds	2
  4880  0068                     vfprintf@cfmt:	
  4881                           
  4882                           ; 2 bytes @ 0x48
  4883  0068                     	ds	2
  4884  006A                     ??_vsnprintf:	
  4885  006A                     ___fladd@signs:	
  4886                           ; 1 bytes @ 0x4A
  4887                           
  4888  006A                     setShortCircuitProtection@delay_us:	
  4889                           ; 1 bytes @ 0x4A
  4890                           
  4891  006A                     setOverCurrentDischargeProtection@delay_ms:	
  4892                           ; 2 bytes @ 0x4A
  4893                           
  4894                           
  4895                           ; 2 bytes @ 0x4A
  4896  006A                     	ds	1
  4897  006B                     ___fladd@aexp:	
  4898                           
  4899                           ; 1 bytes @ 0x4B
  4900  006B                     	ds	1
  4901  006C                     ??_snprintf:	
  4902  006C                     ??_setShortCircuitProtection:	
  4903                           ; 1 bytes @ 0x4C
  4904                           
  4905  006C                     ??_setOverCurrentDischargeProtection:	
  4906                           ; 1 bytes @ 0x4C
  4907                           
  4908  006C                     ___fladd@bexp:	
  4909                           ; 1 bytes @ 0x4C
  4910                           
  4911                           
  4912                           ; 1 bytes @ 0x4C
  4913  006C                     	ds	1
  4914  006D                     ___fladd@grs:	
  4915                           
  4916                           ; 1 bytes @ 0x4D
  4917  006D                     	ds	1
  4918  006E                     ??_coulomb_counter:	
  4919                           
  4920                           ; 1 bytes @ 0x4E
  4921  006E                     	ds	1
  4922  006F                     snprintf@ap:	
  4923                           
  4924                           ; 1 bytes @ 0x4F
  4925  006F                     	ds	1
  4926                           
  4927                           	psect	maintext
  4928  3520                     __pmaintext:	
  4929 ;;
  4930 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4931 ;;
  4932 ;; *************** function _main *****************
  4933 ;; Defined at:
  4934 ;;		line 72 in file "main.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : B1F/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4950 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4951 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4952 ;;Total ram usage:        2 bytes
  4953 ;; Hardware stack levels required when called:   12
  4954 ;; This function calls:
  4955 ;;		_EUSART_Initialize
  4956 ;;		_initClock
  4957 ;;		_initWDT
  4958 ;;		_init_GPIO
  4959 ;;		_init_I2C
  4960 ;;		_init_RGB
  4961 ;;		_init_TMR1
  4962 ;;		_statemachine
  4963 ;;		_watchdog_timeout_shutdown
  4964 ;; This function is called by:
  4965 ;;		Startup code after reset
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           
  4970                           ;psect for function _main
  4971  3520                     _main:	
  4972                           
  4973                           ;main.c: 75:     initClock();
  4974                           
  4975                           ;incstack = 0
  4976                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4977  3520  31A8  2000  31B5   	fcall	_initClock
  4978                           
  4979                           ;main.c: 76:     init_GPIO();
  4980  3523  3188  2008  31B5   	fcall	_init_GPIO
  4981                           
  4982                           ;main.c: 77:     initWDT();
  4983  3526  31B2  2254  31B5   	fcall	_initWDT
  4984                           
  4985                           ;main.c: 78:     init_I2C();
  4986  3529  31B2  22B8  31B5   	fcall	_init_I2C
  4987                           
  4988                           ;main.c: 79:     EUSART_Initialize(9600);
  4989  352C  3000               	movlw	0
  4990  352D  0020               	movlb	0	; select bank0
  4991  352E  00B5               	movwf	EUSART_Initialize@baudrate+3
  4992  352F  3000               	movlw	0
  4993  3530  00B4               	movwf	EUSART_Initialize@baudrate+2
  4994  3531  3025               	movlw	37
  4995  3532  00B3               	movwf	EUSART_Initialize@baudrate+1
  4996  3533  3080               	movlw	128
  4997  3534  00B2               	movwf	EUSART_Initialize@baudrate
  4998  3535  31AD  251A  31B5   	fcall	_EUSART_Initialize
  4999                           
  5000                           ;main.c: 80:     init_TMR1();
  5001  3538  31B2  22A1  31B5   	fcall	_init_TMR1
  5002                           
  5003                           ;main.c: 81:     init_RGB();
  5004  353B  31B2  224F  31B5   	fcall	_init_RGB
  5005                           
  5006                           ;main.c: 84:     watchdog_timeout_shutdown();
  5007  353E  31B3  238B  31B5   	fcall	_watchdog_timeout_shutdown
  5008  3541                     l7824:	
  5009                           
  5010                           ;main.c: 88:         statemachine();
  5011  3541  31A9  2175  31B5   	fcall	_statemachine
  5012                           
  5013                           ;main.c: 90:         _delay((unsigned long)((1000)*(16000000/4000.0)));
  5014  3544  3015               	movlw	21
  5015  3545  0021               	movlb	1	; select bank1
  5016  3546  00EF               	movwf	(??_main^(0+128)+1)
  5017  3547  304B               	movlw	75
  5018  3548  00EE               	movwf	??_main^(0+128)
  5019  3549  30BE               	movlw	190
  5020  354A                     u9757:	
  5021  354A  0B89               	decfsz	9,f
  5022  354B  2D4A               	goto	u9757
  5023  354C  0BEE               	decfsz	??_main^(0+128),f
  5024  354D  2D4A               	goto	u9757
  5025  354E  0BEF               	decfsz	(??_main^(0+128)+1),f
  5026  354F  2D4A               	goto	u9757
  5027  3550  0000               	nop
  5028  3551  2D41               	goto	l7824
  5029  3552                     __end_of_main:	
  5030                           
  5031                           	psect	text1
  5032  338B                     __ptext1:	
  5033 ;; *************** function _watchdog_timeout_shutdown *****************
  5034 ;; Defined at:
  5035 ;;		line 3 in file "algorithms.c"
  5036 ;; Parameters:    Size  Location     Type
  5037 ;;		None
  5038 ;; Auto vars:     Size  Location     Type
  5039 ;;		None
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  1    wreg      void 
  5042 ;; Registers used:
  5043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5051 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5052 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5053 ;;Total ram usage:        2 bytes
  5054 ;; Hardware stack levels used:    1
  5055 ;; Hardware stack levels required when called:    2
  5056 ;; This function calls:
  5057 ;;		_RGB_color
  5058 ;; This function is called by:
  5059 ;;		_main
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           
  5064                           ;psect for function _watchdog_timeout_shutdown
  5065  338B                     _watchdog_timeout_shutdown:	
  5066                           
  5067                           ;algorithms.c: 5:     if (!STATUSbits.nTO) {
  5068                           
  5069                           ;incstack = 0
  5070                           ; Regs used in _watchdog_timeout_shutdown: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5071  338B  0020               	movlb	0	; select bank0
  5072  338C  1A03               	btfsc	3,4	;volatile
  5073  338D  0008               	return
  5074                           
  5075                           ;algorithms.c: 6:         RGB_color(0);
  5076  338E  3000               	movlw	0
  5077  338F  00F1               	movwf	RGB_color@color
  5078  3390  00F2               	movwf	RGB_color@color+1
  5079  3391  31B3  23FD  31B3   	fcall	_RGB_color
  5080                           
  5081                           ;algorithms.c: 7:          _delay((unsigned long)((2000)*(16000000/4000.0)));
  5082  3394  3029               	movlw	41
  5083  3395  00F4               	movwf	??_watchdog_timeout_shutdown+1
  5084  3396  3096               	movlw	150
  5085  3397  00F3               	movwf	??_watchdog_timeout_shutdown
  5086  3398  307F               	movlw	127
  5087  3399                     u9767:	
  5088  3399  0B89               	decfsz	9,f
  5089  339A  2B99               	goto	u9767
  5090  339B  0BF3               	decfsz	??_watchdog_timeout_shutdown,f
  5091  339C  2B99               	goto	u9767
  5092  339D  0BF4               	decfsz	??_watchdog_timeout_shutdown+1,f
  5093  339E  2B99               	goto	u9767
  5094  339F  0000               	nop
  5095                           
  5096                           ;algorithms.c: 8:          currState = 3;
  5097  33A0  3003               	movlw	3
  5098  33A1  00F3               	movwf	??_watchdog_timeout_shutdown
  5099  33A2  0873               	movf	??_watchdog_timeout_shutdown,w
  5100  33A3  0023               	movlb	3	; select bank3
  5101  33A4  00E9               	movwf	_currState^(0+384)
  5102  33A5  0008               	return
  5103  33A6                     __end_of_watchdog_timeout_shutdown:	
  5104                           
  5105                           	psect	text2
  5106  2975                     __ptext2:	
  5107 ;; *************** function _statemachine *****************
  5108 ;; Defined at:
  5109 ;;		line 96 in file "main.c"
  5110 ;; Parameters:    Size  Location     Type
  5111 ;;		None
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  success         1   77[BANK1 ] unsigned char 
  5114 ;; Return value:  Size  Location     Type
  5115 ;;                  1    wreg      void 
  5116 ;; Registers used:
  5117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5118 ;; Tracked objects:
  5119 ;;		On entry : 0/0
  5120 ;;		On exit  : 0/0
  5121 ;;		Unchanged: 0/0
  5122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5124 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5125 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5126 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5127 ;;Total ram usage:        3 bytes
  5128 ;; Hardware stack levels used:    1
  5129 ;; Hardware stack levels required when called:   11
  5130 ;; This function calls:
  5131 ;;		_AFE_UPDATE
  5132 ;;		_EUSART_Write_Text
  5133 ;;		_RGB_AWAIT_AFE_CONN
  5134 ;;		_RGB_color
  5135 ;;		_beginAFEcommunication
  5136 ;;		_init_AFE
  5137 ;;		_printcellParameters
  5138 ;;		_snprintf
  5139 ;; This function is called by:
  5140 ;;		_main
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143                           
  5144                           
  5145                           ;psect for function _statemachine
  5146  2975                     _statemachine:	
  5147                           
  5148                           ;main.c: 98:     switch (currState) {
  5149                           
  5150                           ;incstack = 0
  5151                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5152  2975  29D3               	goto	l7800
  5153  2976                     l7768:	
  5154                           
  5155                           ;main.c: 101:             if (tmr1_flag) {
  5156  2976  0023               	movlb	3	; select bank3
  5157  2977  0867               	movf	_tmr1_flag^(0+384),w	;volatile
  5158  2978  1903               	btfsc	3,2
  5159  2979  0008               	return
  5160                           
  5161                           ;main.c: 102:                 tmr1_flag = 0;
  5162  297A  01E7               	clrf	_tmr1_flag^(0+384)	;volatile
  5163                           
  5164                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  5165  297B  31B4  241E  31A9   	fcall	_RGB_AWAIT_AFE_CONN
  5166                           
  5167                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  5168  297E  31AD  25C3  31A9   	fcall	_beginAFEcommunication
  5169  2981  0020               	movlb	0	; select bank0
  5170  2982  0820               	movf	?_beginAFEcommunication,w
  5171  2983  0021               	movlb	1	; select bank1
  5172  2984  00EB               	movwf	??_statemachine^(0+128)
  5173  2985  086B               	movf	??_statemachine^(0+128),w
  5174  2986  00ED               	movwf	statemachine@success^(0+128)
  5175                           
  5176                           ;main.c: 109:                 if (success) {
  5177  2987  086D               	movf	statemachine@success^(0+128),w
  5178  2988  1903               	btfsc	3,2
  5179  2989  0008               	return
  5180                           
  5181                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  5182  298A  0020               	movlb	0	; select bank0
  5183  298B  1018               	bcf	24,0	;volatile
  5184                           
  5185                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  5186  298C  0021               	movlb	1	; select bank1
  5187  298D  1011               	bcf	17,0	;volatile
  5188                           
  5189                           ;main.c: 112:                     RGB_color(0);
  5190  298E  3000               	movlw	0
  5191  298F  00F1               	movwf	RGB_color@color
  5192  2990  00F2               	movwf	RGB_color@color+1
  5193  2991  31B3  23FD         	fcall	_RGB_color
  5194                           
  5195                           ;main.c: 113:                     tmr1_flag = 0;
  5196  2993  0023               	movlb	3	; select bank3
  5197  2994  01E7               	clrf	_tmr1_flag^(0+384)	;volatile
  5198                           
  5199                           ;main.c: 126:                     currState = 1;
  5200  2995  01E9               	clrf	_currState^(0+384)
  5201  2996  0AE9               	incf	_currState^(0+384),f
  5202  2997  0008               	return
  5203  2998                     l7786:	
  5204                           
  5205                           ;main.c: 135:             init_AFE();
  5206  2998  31B7  27AA  31A9   	fcall	_init_AFE
  5207                           
  5208                           ;main.c: 154:             RGB_color(1);
  5209  299B  3001               	movlw	1
  5210  299C  00F1               	movwf	RGB_color@color
  5211  299D  3000               	movlw	0
  5212  299E  00F2               	movwf	RGB_color@color+1
  5213  299F  31B3  23FD         	fcall	_RGB_color
  5214                           
  5215                           ;main.c: 155:             currState = 2;
  5216  29A1  3002               	movlw	2
  5217  29A2  0021               	movlb	1	; select bank1
  5218  29A3  00EB               	movwf	??_statemachine^(0+128)
  5219  29A4  086B               	movf	??_statemachine^(0+128),w
  5220  29A5  0023               	movlb	3	; select bank3
  5221  29A6  00E9               	movwf	_currState^(0+384)
  5222                           
  5223                           ;main.c: 156:             break;
  5224  29A7  0008               	return
  5225  29A8                     l7790:	
  5226                           
  5227                           ;main.c: 160:             AFE_UPDATE();
  5228  29A8  31B6  262B  31A9   	fcall	_AFE_UPDATE
  5229  29AB  0064               	clrwdt	;# 
  5230                           
  5231                           ;main.c: 164:             printcellParameters();
  5232  29AC  31B6  2665  31A9   	fcall	_printcellParameters
  5233                           
  5234                           ;main.c: 166:             _delay((unsigned long)((500)*(16000000/4000.0)));
  5235  29AF  300B               	movlw	11
  5236  29B0  0021               	movlb	1	; select bank1
  5237  29B1  00EC               	movwf	(??_statemachine^(0+128)+1)
  5238  29B2  3026               	movlw	38
  5239  29B3  00EB               	movwf	??_statemachine^(0+128)
  5240  29B4  305D               	movlw	93
  5241  29B5                     u9777:	
  5242  29B5  0B89               	decfsz	9,f
  5243  29B6  29B5               	goto	u9777
  5244  29B7  0BEB               	decfsz	??_statemachine^(0+128),f
  5245  29B8  29B5               	goto	u9777
  5246  29B9  0BEC               	decfsz	(??_statemachine^(0+128)+1),f
  5247  29BA  29B5               	goto	u9777
  5248  29BB  3200               	nop2
  5249                           
  5250                           ;main.c: 168:             break;
  5251  29BC  0008               	return
  5252  29BD                     l7794:	
  5253                           
  5254                           ;main.c: 172:              snprintf(messageBuffer, 127, "WATCHDOG NOT KICKED: AFE comms 
      +                          error \n\r");
  5255  29BD  3071               	movlw	113
  5256  29BE  00CC               	movwf	snprintf@s^(0+128)
  5257  29BF  3027               	movlw	39
  5258  29C0  00CD               	movwf	(snprintf@s^(0+128)+1)
  5259  29C1  307F               	movlw	127
  5260  29C2  00CE               	movwf	snprintf@n^(0+128)
  5261  29C3  3000               	movlw	0
  5262  29C4  00CF               	movwf	(snprintf@n^(0+128)+1)
  5263  29C5  3002               	movlw	low (STR_1| (0+32768))
  5264  29C6  00D0               	movwf	snprintf@fmt^(0+128)
  5265  29C7  30B8               	movlw	high (STR_1| (0+32768))
  5266  29C8  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5267  29C9  31B3  2370  31A9   	fcall	_snprintf
  5268                           
  5269                           ;main.c: 173:              EUSART_Write_Text(messageBuffer);
  5270  29CC  3071               	movlw	113
  5271  29CD  00F2               	movwf	EUSART_Write_Text@text
  5272  29CE  3027               	movlw	39
  5273  29CF  00F3               	movwf	EUSART_Write_Text@text+1
  5274  29D0  31B3  233B         	fcall	_EUSART_Write_Text
  5275                           
  5276                           ;main.c: 174:             break;
  5277  29D2  0008               	return
  5278  29D3                     l7800:	
  5279  29D3  0023               	movlb	3	; select bank3
  5280  29D4  0869               	movf	_currState^(0+384),w
  5281  29D5  0021               	movlb	1	; select bank1
  5282  29D6  00EB               	movwf	??_statemachine^(0+128)
  5283  29D7  01EC               	clrf	(??_statemachine^(0+128)+1)
  5284                           
  5285                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5286                           ; Switch size 1, requested type "simple"
  5287                           ; Number of cases is 1, Range of values is 0 to 0
  5288                           ; switch strategies available:
  5289                           ; Name         Instructions Cycles
  5290                           ; simple_byte            4     3 (average)
  5291                           ; direct_byte            8     6 (fixed)
  5292                           ; jumptable            260     6 (fixed)
  5293                           ;	Chosen strategy is simple_byte
  5294  29D8  086C               	movf	(??_statemachine+1)^(0+128),w
  5295  29D9  3A00               	xorlw	0	; case 0
  5296  29DA  1903               	skipnz
  5297  29DB  29DD               	goto	l7984
  5298  29DC  29EB               	goto	l192
  5299  29DD                     l7984:	
  5300                           
  5301                           ; Switch size 1, requested type "simple"
  5302                           ; Number of cases is 4, Range of values is 0 to 3
  5303                           ; switch strategies available:
  5304                           ; Name         Instructions Cycles
  5305                           ; simple_byte           13     7 (average)
  5306                           ; direct_byte           14     6 (fixed)
  5307                           ; jumptable            260     6 (fixed)
  5308                           ;	Chosen strategy is simple_byte
  5309  29DD  086B               	movf	??_statemachine^(0+128),w
  5310  29DE  3A00               	xorlw	0	; case 0
  5311  29DF  1903               	skipnz
  5312  29E0  2976               	goto	l7768
  5313  29E1  3A01               	xorlw	1	; case 1
  5314  29E2  1903               	skipnz
  5315  29E3  2998               	goto	l7786
  5316  29E4  3A03               	xorlw	3	; case 2
  5317  29E5  1903               	skipnz
  5318  29E6  29A8               	goto	l7790
  5319  29E7  3A01               	xorlw	1	; case 3
  5320  29E8  1903               	skipnz
  5321  29E9  29BD               	goto	l7794
  5322  29EA  29EB               	goto	l192
  5323  29EB                     l192:	
  5324  29EB  0008               	return
  5325  29EC                     __end_of_statemachine:	
  5326                           
  5327                           	psect	text3
  5328  3665                     __ptext3:	
  5329 ;; *************** function _printcellParameters *****************
  5330 ;; Defined at:
  5331 ;;		line 328 in file "BQ76920.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5349 ;;Total ram usage:        0 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:   10
  5352 ;; This function calls:
  5353 ;;		_EUSART_Write_Text
  5354 ;;		_snprintf
  5355 ;; This function is called by:
  5356 ;;		_statemachine
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           
  5361                           ;psect for function _printcellParameters
  5362  3665                     _printcellParameters:	
  5363                           
  5364                           ;BQ76920.c: 371:     snprintf(messageBuffer, 127, "%d,",temperatureThermistor);
  5365                           
  5366                           ;incstack = 0
  5367                           ; Regs used in _printcellParameters: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5368  3665  3071               	movlw	113
  5369  3666  0021               	movlb	1	; select bank1
  5370  3667  00CC               	movwf	snprintf@s^(0+128)
  5371  3668  3027               	movlw	39
  5372  3669  00CD               	movwf	(snprintf@s^(0+128)+1)
  5373  366A  307F               	movlw	127
  5374  366B  00CE               	movwf	snprintf@n^(0+128)
  5375  366C  3000               	movlw	0
  5376  366D  00CF               	movwf	(snprintf@n^(0+128)+1)
  5377  366E  30D6               	movlw	low (STR_2| (0+32768))
  5378  366F  00D0               	movwf	snprintf@fmt^(0+128)
  5379  3670  30B9               	movlw	high (STR_2| (0+32768))
  5380  3671  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5381  3672  0023               	movlb	3	; select bank3
  5382  3673  0843               	movf	(_temperatureThermistor+3)^(0+384),w
  5383  3674  0021               	movlb	1	; select bank1
  5384  3675  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5385  3676  0023               	movlb	3	; select bank3
  5386  3677  0842               	movf	(_temperatureThermistor+2)^(0+384),w
  5387  3678  0021               	movlb	1	; select bank1
  5388  3679  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5389  367A  0023               	movlb	3	; select bank3
  5390  367B  0841               	movf	(_temperatureThermistor+1)^(0+384),w
  5391  367C  0021               	movlb	1	; select bank1
  5392  367D  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5393  367E  0023               	movlb	3	; select bank3
  5394  367F  0840               	movf	_temperatureThermistor^(0+384),w
  5395  3680  0021               	movlb	1	; select bank1
  5396  3681  00D2               	movwf	(?_snprintf^(0+128)+6)
  5397  3682  31B3  2370  31B6   	fcall	_snprintf
  5398                           
  5399                           ;BQ76920.c: 372:     EUSART_Write_Text(messageBuffer);
  5400  3685  3071               	movlw	113
  5401  3686  00F2               	movwf	EUSART_Write_Text@text
  5402  3687  3027               	movlw	39
  5403  3688  00F3               	movwf	EUSART_Write_Text@text+1
  5404  3689  31B3  233B  31B6   	fcall	_EUSART_Write_Text
  5405                           
  5406                           ;BQ76920.c: 373:     snprintf(messageBuffer, 127, "%d\n\r,",rts);
  5407  368C  3071               	movlw	113
  5408  368D  0021               	movlb	1	; select bank1
  5409  368E  00CC               	movwf	snprintf@s^(0+128)
  5410  368F  3027               	movlw	39
  5411  3690  00CD               	movwf	(snprintf@s^(0+128)+1)
  5412  3691  307F               	movlw	127
  5413  3692  00CE               	movwf	snprintf@n^(0+128)
  5414  3693  3000               	movlw	0
  5415  3694  00CF               	movwf	(snprintf@n^(0+128)+1)
  5416  3695  309C               	movlw	low (STR_3| (0+32768))
  5417  3696  00D0               	movwf	snprintf@fmt^(0+128)
  5418  3697  30B9               	movlw	high (STR_3| (0+32768))
  5419  3698  00D1               	movwf	(snprintf@fmt^(0+128)+1)
  5420  3699  0023               	movlb	3	; select bank3
  5421  369A  083F               	movf	(_rts+3)^(0+384),w
  5422  369B  0021               	movlb	1	; select bank1
  5423  369C  00D5               	movwf	((?_snprintf+3)^(0+128)+6)
  5424  369D  0023               	movlb	3	; select bank3
  5425  369E  083E               	movf	(_rts+2)^(0+384),w
  5426  369F  0021               	movlb	1	; select bank1
  5427  36A0  00D4               	movwf	((?_snprintf+2)^(0+128)+6)
  5428  36A1  0023               	movlb	3	; select bank3
  5429  36A2  083D               	movf	(_rts+1)^(0+384),w
  5430  36A3  0021               	movlb	1	; select bank1
  5431  36A4  00D3               	movwf	((?_snprintf+1)^(0+128)+6)
  5432  36A5  0023               	movlb	3	; select bank3
  5433  36A6  083C               	movf	_rts^(0+384),w
  5434  36A7  0021               	movlb	1	; select bank1
  5435  36A8  00D2               	movwf	(?_snprintf^(0+128)+6)
  5436  36A9  31B3  2370  31B6   	fcall	_snprintf
  5437                           
  5438                           ;BQ76920.c: 374:     EUSART_Write_Text(messageBuffer);
  5439  36AC  3071               	movlw	113
  5440  36AD  00F2               	movwf	EUSART_Write_Text@text
  5441  36AE  3027               	movlw	39
  5442  36AF  00F3               	movwf	EUSART_Write_Text@text+1
  5443  36B0  31B3  233B         	fcall	_EUSART_Write_Text
  5444  36B2  0008               	return
  5445  36B3                     __end_of_printcellParameters:	
  5446                           
  5447                           	psect	text4
  5448  3370                     __ptext4:	
  5449 ;; *************** function _snprintf *****************
  5450 ;; Defined at:
  5451 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  s               2   44[BANK1 ] PTR unsigned char 
  5454 ;;		 -> messageBuffer(127), 
  5455 ;;  n               2   46[BANK1 ] unsigned int 
  5456 ;;  fmt             2   48[BANK1 ] PTR const unsigned char 
  5457 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  5458 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  5459 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  5460 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  ret             2    0        int 
  5463 ;;  ap              1   79[BANK0 ] PTR void [1]
  5464 ;;		 -> ?_snprintf(2), 
  5465 ;; Return value:  Size  Location     Type
  5466 ;;                  2   44[BANK1 ] int 
  5467 ;; Registers used:
  5468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5474 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5475 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5476 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5477 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5478 ;;Total ram usage:       14 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; Hardware stack levels required when called:    9
  5481 ;; This function calls:
  5482 ;;		_vsnprintf
  5483 ;; This function is called by:
  5484 ;;		_statemachine
  5485 ;;		_printcellParameters
  5486 ;;		_printotAFERegisters
  5487 ;; This function uses a non-reentrant model
  5488 ;;
  5489                           
  5490                           
  5491                           ;psect for function _snprintf
  5492  3370                     _snprintf:	
  5493                           
  5494                           ;incstack = 0
  5495                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5496  3370  30D2               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  5497  3371  0020               	movlb	0	; select bank0
  5498  3372  00EC               	movwf	??_snprintf
  5499  3373  086C               	movf	??_snprintf,w
  5500  3374  00EF               	movwf	snprintf@ap
  5501  3375  0021               	movlb	1	; select bank1
  5502  3376  084D               	movf	(snprintf@s+1)^(0+128),w
  5503  3377  00BC               	movwf	(vsnprintf@s+1)^(0+128)
  5504  3378  084C               	movf	snprintf@s^(0+128),w
  5505  3379  00BB               	movwf	vsnprintf@s^(0+128)
  5506  337A  084F               	movf	(snprintf@n+1)^(0+128),w
  5507  337B  00BE               	movwf	(vsnprintf@n+1)^(0+128)
  5508  337C  084E               	movf	snprintf@n^(0+128),w
  5509  337D  00BD               	movwf	vsnprintf@n^(0+128)
  5510  337E  0851               	movf	(snprintf@fmt+1)^(0+128),w
  5511  337F  00C0               	movwf	(vsnprintf@fmt+1)^(0+128)
  5512  3380  0850               	movf	snprintf@fmt^(0+128),w
  5513  3381  00BF               	movwf	vsnprintf@fmt^(0+128)
  5514  3382  306F               	movlw	(low (snprintf@ap| 0))& (0+255)
  5515  3383  0020               	movlb	0	; select bank0
  5516  3384  00EC               	movwf	??_snprintf
  5517  3385  086C               	movf	??_snprintf,w
  5518  3386  0021               	movlb	1	; select bank1
  5519  3387  00C1               	movwf	vsnprintf@ap^(0+128)
  5520  3388  31AA  22E4         	fcall	_vsnprintf
  5521  338A  0008               	return
  5522  338B                     __end_of_snprintf:	
  5523                           
  5524                           	psect	text5
  5525  2AE4                     __ptext5:	
  5526 ;; *************** function _vsnprintf *****************
  5527 ;; Defined at:
  5528 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  5529 ;; Parameters:    Size  Location     Type
  5530 ;;  s               2   27[BANK1 ] PTR unsigned char 
  5531 ;;		 -> messageBuffer(127), 
  5532 ;;  n               2   29[BANK1 ] unsigned int 
  5533 ;;  fmt             2   31[BANK1 ] PTR const unsigned char 
  5534 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  5535 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  5536 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  5537 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  5538 ;;  ap              1   33[BANK1 ] PTR PTR void 
  5539 ;;		 -> snprintf@ap(1), 
  5540 ;; Auto vars:     Size  Location     Type
  5541 ;;  f               6   38[BANK1 ] struct _IO_FILE
  5542 ;;  cnt             2   36[BANK1 ] int 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  2   27[BANK1 ] int 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5552 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5553 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5554 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5555 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5556 ;;Total ram usage:       19 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; Hardware stack levels required when called:    8
  5559 ;; This function calls:
  5560 ;;		_vfprintf
  5561 ;; This function is called by:
  5562 ;;		_snprintf
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           
  5567                           ;psect for function _vsnprintf
  5568  2AE4                     _vsnprintf:	
  5569                           
  5570                           ;incstack = 0
  5571                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5572  2AE4  3080               	movlw	128
  5573  2AE5  0021               	movlb	1	; select bank1
  5574  2AE6  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5575  2AE7  3000               	movlw	0
  5576  2AE8  1903               	skipnz
  5577  2AE9  023D               	subwf	vsnprintf@n^(0+128),w
  5578  2AEA  1C03               	skipc
  5579  2AEB  2AF7               	goto	l7374
  5580  2AEC  304B               	movlw	75
  5581  2AED  0023               	movlb	3	; select bank3
  5582  2AEE  00C8               	movwf	_errno^(0+384)
  5583  2AEF  3000               	movlw	0
  5584  2AF0  00C9               	movwf	(_errno^(0+384)+1)
  5585  2AF1  30FF               	movlw	255
  5586  2AF2  0021               	movlb	1	; select bank1
  5587  2AF3  00BB               	movwf	?_vsnprintf^(0+128)
  5588  2AF4  30FF               	movlw	255
  5589  2AF5  00BC               	movwf	(?_vsnprintf^(0+128)+1)
  5590  2AF6  0008               	return
  5591  2AF7                     l7374:	
  5592  2AF7  083C               	movf	(vsnprintf@s+1)^(0+128),w
  5593  2AF8  00C7               	movwf	(vsnprintf@f+1)^(0+128)
  5594  2AF9  083B               	movf	vsnprintf@s^(0+128),w
  5595  2AFA  00C6               	movwf	vsnprintf@f^(0+128)
  5596  2AFB  3000               	movlw	0
  5597  2AFC  023E               	subwf	(vsnprintf@n+1)^(0+128),w
  5598  2AFD  3002               	movlw	2
  5599  2AFE  1903               	skipnz
  5600  2AFF  023D               	subwf	vsnprintf@n^(0+128),w
  5601  2B00  1C03               	skipc
  5602  2B01  2B0B               	goto	l7380
  5603  2B02  083D               	movf	vsnprintf@n^(0+128),w
  5604  2B03  3EFF               	addlw	255
  5605  2B04  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5606  2B05  30FF               	movlw	255
  5607  2B06  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5608  2B07  00CB               	movwf	((vsnprintf@f+1)^(0+128)+4)
  5609  2B08  01C8               	clrf	(vsnprintf@f^(0+128)+2)
  5610  2B09  01C9               	clrf	((vsnprintf@f+1)^(0+128)+2)
  5611  2B0A  2B13               	goto	l7382
  5612  2B0B                     l7380:	
  5613  2B0B  3001               	movlw	1
  5614  2B0C  00CA               	movwf	(vsnprintf@f^(0+128)+4)
  5615  2B0D  3000               	movlw	0
  5616  2B0E  00CB               	movwf	(vsnprintf@f^(0+128)+5)
  5617  2B0F  3001               	movlw	1
  5618  2B10  00C8               	movwf	(vsnprintf@f^(0+128)+2)
  5619  2B11  3000               	movlw	0
  5620  2B12  00C9               	movwf	(vsnprintf@f^(0+128)+3)
  5621  2B13                     l7382:	
  5622  2B13  30C6               	movlw	low vsnprintf@f
  5623  2B14  0020               	movlb	0	; select bank0
  5624  2B15  00E1               	movwf	vfprintf@fp
  5625  2B16  3000               	movlw	high vsnprintf@f
  5626  2B17  00E2               	movwf	vfprintf@fp+1
  5627  2B18  0021               	movlb	1	; select bank1
  5628  2B19  0840               	movf	(vsnprintf@fmt+1)^(0+128),w
  5629  2B1A  0020               	movlb	0	; select bank0
  5630  2B1B  00E4               	movwf	vfprintf@fmt+1
  5631  2B1C  0021               	movlb	1	; select bank1
  5632  2B1D  083F               	movf	vsnprintf@fmt^(0+128),w
  5633  2B1E  0020               	movlb	0	; select bank0
  5634  2B1F  00E3               	movwf	vfprintf@fmt
  5635  2B20  0021               	movlb	1	; select bank1
  5636  2B21  0841               	movf	vsnprintf@ap^(0+128),w
  5637  2B22  0020               	movlb	0	; select bank0
  5638  2B23  00EA               	movwf	??_vsnprintf
  5639  2B24  086A               	movf	??_vsnprintf,w
  5640  2B25  00E5               	movwf	vfprintf@ap
  5641  2B26  31B4  24BD  31AA   	fcall	_vfprintf
  5642  2B29  0020               	movlb	0	; select bank0
  5643  2B2A  0862               	movf	?_vfprintf+1,w
  5644  2B2B  0021               	movlb	1	; select bank1
  5645  2B2C  00C5               	movwf	(vsnprintf@cnt+1)^(0+128)
  5646  2B2D  0020               	movlb	0	; select bank0
  5647  2B2E  0861               	movf	?_vfprintf,w
  5648  2B2F  0021               	movlb	1	; select bank1
  5649  2B30  00C4               	movwf	vsnprintf@cnt^(0+128)
  5650  2B31  083D               	movf	vsnprintf@n^(0+128),w
  5651  2B32  043E               	iorwf	(vsnprintf@n+1)^(0+128),w
  5652  2B33  1D03               	btfss	3,2
  5653  2B34  1BC5               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  5654  2B35  2B5C               	goto	l7396
  5655  2B36  083D               	movf	vsnprintf@n^(0+128),w
  5656  2B37  3EFF               	addlw	255
  5657  2B38  0020               	movlb	0	; select bank0
  5658  2B39  00EA               	movwf	??_vsnprintf
  5659  2B3A  30FF               	movlw	255
  5660  2B3B  0021               	movlb	1	; select bank1
  5661  2B3C  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5662  2B3D  0020               	movlb	0	; select bank0
  5663  2B3E  00EB               	movwf	??_vsnprintf+1
  5664  2B3F  086B               	movf	??_vsnprintf+1,w
  5665  2B40  0021               	movlb	1	; select bank1
  5666  2B41  0245               	subwf	(vsnprintf@cnt+1)^(0+128),w
  5667  2B42  1D03               	skipz
  5668  2B43  2B48               	goto	u9355
  5669  2B44  0020               	movlb	0	; select bank0
  5670  2B45  086A               	movf	??_vsnprintf,w
  5671  2B46  0021               	movlb	1	; select bank1
  5672  2B47  0244               	subwf	vsnprintf@cnt^(0+128),w
  5673  2B48                     u9355:	
  5674  2B48  1C03               	skipc
  5675  2B49  2B51               	goto	l7392
  5676  2B4A  083D               	movf	vsnprintf@n^(0+128),w
  5677  2B4B  3EFF               	addlw	255
  5678  2B4C  00C2               	movwf	_vsnprintf$1940^(0+128)
  5679  2B4D  30FF               	movlw	255
  5680  2B4E  3D3E               	addwfc	(vsnprintf@n+1)^(0+128),w
  5681  2B4F  00C3               	movwf	(_vsnprintf$1940+1)^(0+128)
  5682  2B50  2B55               	goto	l7394
  5683  2B51                     l7392:	
  5684  2B51  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5685  2B52  00C3               	movwf	(_vsnprintf$1940+1)^(0+128)
  5686  2B53  0844               	movf	vsnprintf@cnt^(0+128),w
  5687  2B54  00C2               	movwf	_vsnprintf$1940^(0+128)
  5688  2B55                     l7394:	
  5689  2B55  0842               	movf	_vsnprintf$1940^(0+128),w
  5690  2B56  073B               	addwf	vsnprintf@s^(0+128),w
  5691  2B57  0086               	movwf	6
  5692  2B58  0843               	movf	(_vsnprintf$1940+1)^(0+128),w
  5693  2B59  3D3C               	addwfc	(vsnprintf@s+1)^(0+128),w
  5694  2B5A  0087               	movwf	7
  5695  2B5B  0181               	clrf	1
  5696  2B5C                     l7396:	
  5697  2B5C  0845               	movf	(vsnprintf@cnt+1)^(0+128),w
  5698  2B5D  00BC               	movwf	(?_vsnprintf+1)^(0+128)
  5699  2B5E  0844               	movf	vsnprintf@cnt^(0+128),w
  5700  2B5F  00BB               	movwf	?_vsnprintf^(0+128)
  5701  2B60  0008               	return
  5702  2B61                     __end_of_vsnprintf:	
  5703                           
  5704                           	psect	text6
  5705  34BD                     __ptext6:	
  5706 ;; *************** function _vfprintf *****************
  5707 ;; Defined at:
  5708 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5709 ;; Parameters:    Size  Location     Type
  5710 ;;  fp              2   65[BANK0 ] PTR struct _IO_FILE
  5711 ;;		 -> vsnprintf@f(6), 
  5712 ;;  fmt             2   67[BANK0 ] PTR const unsigned char 
  5713 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  5714 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  5715 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  5716 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  5717 ;;  ap              1   69[BANK0 ] PTR PTR void 
  5718 ;;		 -> snprintf@ap(1), 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  cfmt            2   72[BANK0 ] PTR unsigned char 
  5721 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  5722 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  5723 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  5724 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  2   65[BANK0 ] int 
  5727 ;; Registers used:
  5728 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5734 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5735 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5736 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5737 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5738 ;;Total ram usage:        9 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    7
  5741 ;; This function calls:
  5742 ;;		_vfpfcnvrt
  5743 ;; This function is called by:
  5744 ;;		_vsnprintf
  5745 ;; This function uses a non-reentrant model
  5746 ;;
  5747                           
  5748                           
  5749                           ;psect for function _vfprintf
  5750  34BD                     _vfprintf:	
  5751                           
  5752                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5753                           
  5754                           ;incstack = 0
  5755                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5756  34BD  0020               	movlb	0	; select bank0
  5757  34BE  0864               	movf	vfprintf@fmt+1,w
  5758  34BF  00E9               	movwf	vfprintf@cfmt+1
  5759  34C0  0863               	movf	vfprintf@fmt,w
  5760  34C1  00E8               	movwf	vfprintf@cfmt
  5761                           
  5762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  5763  34C2  0022               	movlb	2	; select bank2
  5764  34C3  01E2               	clrf	_nout^(0+256)
  5765  34C4  01E3               	clrf	(_nout+1)^(0+256)
  5766  34C5                     l7280:	
  5767                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5768                           
  5769                           
  5770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  5771  34C5  0020               	movlb	0	; select bank0
  5772  34C6  0868               	movf	vfprintf@cfmt,w
  5773  34C7  0084               	movwf	4
  5774  34C8  0869               	movf	vfprintf@cfmt+1,w
  5775  34C9  0085               	movwf	5
  5776  34CA  0012               	moviw fsr0++
  5777  34CB  1903               	btfsc	3,2
  5778  34CC  2CE5               	goto	l7282
  5779                           
  5780                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  5781  34CD  0862               	movf	vfprintf@fp+1,w
  5782  34CE  00D8               	movwf	vfpfcnvrt@fp+1
  5783  34CF  0861               	movf	vfprintf@fp,w
  5784  34D0  00D7               	movwf	vfpfcnvrt@fp
  5785  34D1  3068               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  5786  34D2  00E6               	movwf	??_vfprintf
  5787  34D3  0866               	movf	??_vfprintf,w
  5788  34D4  00D9               	movwf	vfpfcnvrt@fmt
  5789  34D5  0865               	movf	vfprintf@ap,w
  5790  34D6  00E7               	movwf	??_vfprintf+1
  5791  34D7  0867               	movf	??_vfprintf+1,w
  5792  34D8  00DA               	movwf	vfpfcnvrt@ap
  5793  34D9  319E  265C  31B4   	fcall	_vfpfcnvrt
  5794  34DC  0020               	movlb	0	; select bank0
  5795  34DD  0857               	movf	?_vfpfcnvrt,w
  5796  34DE  0022               	movlb	2	; select bank2
  5797  34DF  07E2               	addwf	_nout^(0+256),f
  5798  34E0  0020               	movlb	0	; select bank0
  5799  34E1  0858               	movf	?_vfpfcnvrt+1,w
  5800  34E2  0022               	movlb	2	; select bank2
  5801  34E3  3DE3               	addwfc	(_nout+1)^(0+256),f
  5802  34E4  2CC5               	goto	l7280
  5803  34E5                     l7282:	
  5804                           
  5805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  5806  34E5  0022               	movlb	2	; select bank2
  5807  34E6  0863               	movf	(_nout+1)^(0+256),w
  5808  34E7  0020               	movlb	0	; select bank0
  5809  34E8  00E2               	movwf	?_vfprintf+1
  5810  34E9  0022               	movlb	2	; select bank2
  5811  34EA  0862               	movf	_nout^(0+256),w
  5812  34EB  0020               	movlb	0	; select bank0
  5813  34EC  00E1               	movwf	?_vfprintf
  5814  34ED  0008               	return
  5815  34EE                     __end_of_vfprintf:	
  5816                           
  5817                           	psect	text7
  5818  1E5C                     __ptext7:	
  5819 ;; *************** function _vfpfcnvrt *****************
  5820 ;; Defined at:
  5821 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5822 ;; Parameters:    Size  Location     Type
  5823 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  5824 ;;		 -> vsnprintf@f(6), 
  5825 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  5826 ;;		 -> vfprintf@cfmt(2), 
  5827 ;;  ap              1   58[BANK0 ] PTR PTR void 
  5828 ;;		 -> snprintf@ap(1), 
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;  llu             8   19[BANK1 ] unsigned long long 
  5831 ;;  ll              8    8[BANK1 ] long long 
  5832 ;;  f               4    0        long long 
  5833 ;;  ct              3    0        unsigned char [3]
  5834 ;;  vp              2   16[BANK1 ] PTR void 
  5835 ;;		 -> ?_snprintf(2), sp__logf(4), updateTemperatures@vtsx(2), 
  5836 ;;  done            2    2[BANK1 ] int 
  5837 ;;  cp              2    0[BANK1 ] PTR unsigned char 
  5838 ;;		 -> ?_snprintf(2), sp__logf(4), updateTemperatures@vtsx(2), 
  5839 ;;  i               2    0        int 
  5840 ;;  c               1   18[BANK1 ] unsigned char 
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  2   55[BANK0 ] int 
  5843 ;; Registers used:
  5844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5851 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5852 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5853 ;;      Totals:         0      10      27       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5854 ;;Total ram usage:       37 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; Hardware stack levels required when called:    6
  5857 ;; This function calls:
  5858 ;;		_atoi
  5859 ;;		_ctoa
  5860 ;;		_dtoa
  5861 ;;		_fputc
  5862 ;;		_isdigit
  5863 ;;		_otoa
  5864 ;;		_stoa
  5865 ;;		_strncmp
  5866 ;;		_utoa
  5867 ;;		_xtoa
  5868 ;; This function is called by:
  5869 ;;		_vfprintf
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           
  5874                           ;psect for function _vfpfcnvrt
  5875  1E5C                     _vfpfcnvrt:	
  5876                           
  5877                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  5878                           
  5879                           ;incstack = 0
  5880                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5881  1E5C  0020               	movlb	0	; select bank0
  5882  1E5D  0859               	movf	vfpfcnvrt@fmt,w
  5883  1E5E  0086               	movwf	6
  5884  1E5F  0187               	clrf	7
  5885  1E60  3F40               	moviw [0]fsr1
  5886  1E61  00DB               	movwf	??_vfpfcnvrt
  5887  1E62  3F41               	moviw [1]fsr1
  5888  1E63  00DC               	movwf	??_vfpfcnvrt+1
  5889  1E64  085B               	movf	??_vfpfcnvrt,w
  5890  1E65  0084               	movwf	4
  5891  1E66  085C               	movf	??_vfpfcnvrt+1,w
  5892  1E67  0085               	movwf	5
  5893  1E68  0012               	moviw fsr0++
  5894  1E69  3A25               	xorlw	37
  5895  1E6A  1D03               	btfss	3,2
  5896  1E6B  2FFE               	goto	L7
  5897                           
  5898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  5899  1E6C  0859               	movf	vfpfcnvrt@fmt,w
  5900  1E6D  0086               	movwf	6
  5901  1E6E  0187               	clrf	7
  5902  1E6F  3001               	movlw	1
  5903  1E70  0781               	addwf	1,f
  5904  1E71  3141               	addfsr 1,1
  5905  1E72  1803               	skipnc
  5906  1E73  0A81               	incf	1,f
  5907                           
  5908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  5909  1E74  0022               	movlb	2	; select bank2
  5910  1E75  01E4               	clrf	_width^(0+256)
  5911  1E76  01E5               	clrf	(_width+1)^(0+256)
  5912  1E77  01E8               	clrf	_flags^(0+256)
  5913  1E78  01E9               	clrf	(_flags+1)^(0+256)
  5914                           
  5915                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  5916  1E79  30FF               	movlw	255
  5917  1E7A  00E6               	movwf	_prec^(0+256)
  5918  1E7B  30FF               	movlw	255
  5919  1E7C  00E7               	movwf	(_prec^(0+256)+1)
  5920                           
  5921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  5922  1E7D  0021               	movlb	1	; select bank1
  5923  1E7E  01A2               	clrf	vfpfcnvrt@done^(0+128)
  5924  1E7F  01A3               	clrf	(vfpfcnvrt@done+1)^(0+128)
  5925                           
  5926                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5927  1E80  2E9E               	goto	l6916
  5928  1E81                     l942:	
  5929                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  5930                           
  5931                           
  5932                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  5933  1E81  0022               	movlb	2	; select bank2
  5934  1E82  1468               	bsf	_flags^(0+256),0
  5935  1E83                     l6900:	
  5936                           
  5937                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  5938  1E83  0020               	movlb	0	; select bank0
  5939  1E84  0859               	movf	vfpfcnvrt@fmt,w
  5940  1E85  0086               	movwf	6
  5941  1E86  0187               	clrf	7
  5942  1E87  3001               	movlw	1
  5943  1E88  0781               	addwf	1,f
  5944  1E89  3141               	addfsr 1,1
  5945  1E8A  1803               	skipnc
  5946  1E8B  0A81               	incf	1,f
  5947                           
  5948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  5949  1E8C  2E9E               	goto	l6916
  5950  1E8D                     l944:	
  5951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  5952                           
  5953                           
  5954                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  5955  1E8D  0022               	movlb	2	; select bank2
  5956  1E8E  14E8               	bsf	_flags^(0+256),1
  5957  1E8F  2E83               	goto	l6900
  5958  1E90                     l945:	
  5959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  5960                           
  5961                           
  5962                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  5963  1E90  0022               	movlb	2	; select bank2
  5964  1E91  1568               	bsf	_flags^(0+256),2
  5965  1E92  2E83               	goto	l6900
  5966  1E93                     l946:	
  5967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  5968                           
  5969                           
  5970                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  5971  1E93  0022               	movlb	2	; select bank2
  5972  1E94  15E8               	bsf	_flags^(0+256),3
  5973  1E95  2E83               	goto	l6900
  5974  1E96                     l947:	
  5975                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  5976                           
  5977                           
  5978                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  5979  1E96  0022               	movlb	2	; select bank2
  5980  1E97  1668               	bsf	_flags^(0+256),4
  5981  1E98  2E83               	goto	l6900
  5982  1E99                     l6910:	
  5983                           
  5984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  5985  1E99  3001               	movlw	1
  5986  1E9A  0021               	movlb	1	; select bank1
  5987  1E9B  00A2               	movwf	vfpfcnvrt@done^(0+128)
  5988  1E9C  3000               	movlw	0
  5989  1E9D  00A3               	movwf	(vfpfcnvrt@done^(0+128)+1)
  5990  1E9E                     l6916:	
  5991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  5992                           
  5993                           
  5994                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  5995  1E9E  0021               	movlb	1	; select bank1
  5996  1E9F  0822               	movf	vfpfcnvrt@done^(0+128),w
  5997  1EA0  0423               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  5998  1EA1  1D03               	btfss	3,2
  5999  1EA2  2EC9               	goto	l949
  6000  1EA3  0020               	movlb	0	; select bank0
  6001  1EA4  0859               	movf	vfpfcnvrt@fmt,w
  6002  1EA5  0086               	movwf	6
  6003  1EA6  0187               	clrf	7
  6004  1EA7  3F40               	moviw [0]fsr1
  6005  1EA8  00DB               	movwf	??_vfpfcnvrt
  6006  1EA9  3F41               	moviw [1]fsr1
  6007  1EAA  00DC               	movwf	??_vfpfcnvrt+1
  6008  1EAB  085B               	movf	??_vfpfcnvrt,w
  6009  1EAC  0084               	movwf	4
  6010  1EAD  085C               	movf	??_vfpfcnvrt+1,w
  6011  1EAE  0085               	movwf	5
  6012  1EAF  0800               	movf	0,w	;code access
  6013  1EB0  00DD               	movwf	??_vfpfcnvrt+2
  6014  1EB1  01DE               	clrf	??_vfpfcnvrt+3
  6015                           
  6016                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6017                           ; Switch size 1, requested type "simple"
  6018                           ; Number of cases is 1, Range of values is 0 to 0
  6019                           ; switch strategies available:
  6020                           ; Name         Instructions Cycles
  6021                           ; simple_byte            4     3 (average)
  6022                           ; direct_byte            8     6 (fixed)
  6023                           ; jumptable            260     6 (fixed)
  6024                           ;	Chosen strategy is simple_byte
  6025  1EB2  085E               	movf	??_vfpfcnvrt+3,w
  6026  1EB3  3A00               	xorlw	0	; case 0
  6027  1EB4  1903               	skipnz
  6028  1EB5  2EB7               	goto	l7986
  6029  1EB6  2E99               	goto	l6910
  6030  1EB7                     l7986:	
  6031                           
  6032                           ; Switch size 1, requested type "simple"
  6033                           ; Number of cases is 5, Range of values is 32 to 48
  6034                           ; switch strategies available:
  6035                           ; Name         Instructions Cycles
  6036                           ; simple_byte           16     9 (average)
  6037                           ; direct_byte           43     9 (fixed)
  6038                           ; jumptable            263     9 (fixed)
  6039                           ;	Chosen strategy is simple_byte
  6040  1EB7  085D               	movf	??_vfpfcnvrt+2,w
  6041  1EB8  3A20               	xorlw	32	; case 32
  6042  1EB9  1903               	skipnz
  6043  1EBA  2E93               	goto	l946
  6044  1EBB  3A03               	xorlw	3	; case 35
  6045  1EBC  1903               	skipnz
  6046  1EBD  2E96               	goto	l947
  6047  1EBE  3A08               	xorlw	8	; case 43
  6048  1EBF  1903               	skipnz
  6049  1EC0  2E90               	goto	l945
  6050  1EC1  3A06               	xorlw	6	; case 45
  6051  1EC2  1903               	skipnz
  6052  1EC3  2E81               	goto	l942
  6053  1EC4  3A1D               	xorlw	29	; case 48
  6054  1EC5  1903               	skipnz
  6055  1EC6  2E8D               	goto	l944
  6056  1EC7  2E99               	goto	l6910
  6057  1EC8  2E9E               	goto	l6916
  6058  1EC9                     l949:	
  6059                           
  6060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  6061  1EC9  0022               	movlb	2	; select bank2
  6062  1ECA  1C68               	btfss	_flags^(0+256),0
  6063  1ECB  2ED0               	goto	l6920
  6064                           
  6065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  6066  1ECC  30FD               	movlw	253
  6067  1ECD  05E8               	andwf	_flags^(0+256),f
  6068  1ECE  30FF               	movlw	255
  6069  1ECF  05E9               	andwf	(_flags+1)^(0+256),f
  6070  1ED0                     l6920:	
  6071                           
  6072                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  6073  1ED0  0020               	movlb	0	; select bank0
  6074  1ED1  0859               	movf	vfpfcnvrt@fmt,w
  6075  1ED2  0086               	movwf	6
  6076  1ED3  0187               	clrf	7
  6077  1ED4  3F40               	moviw [0]fsr1
  6078  1ED5  00DB               	movwf	??_vfpfcnvrt
  6079  1ED6  3F41               	moviw [1]fsr1
  6080  1ED7  00DC               	movwf	??_vfpfcnvrt+1
  6081  1ED8  085B               	movf	??_vfpfcnvrt,w
  6082  1ED9  0084               	movwf	4
  6083  1EDA  085C               	movf	??_vfpfcnvrt+1,w
  6084  1EDB  0085               	movwf	5
  6085  1EDC  0012               	moviw fsr0++
  6086  1EDD  3A2A               	xorlw	42
  6087  1EDE  1D03               	btfss	3,2
  6088  1EDF  2EFE               	goto	l6932
  6089                           
  6090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  6091  1EE0  0859               	movf	vfpfcnvrt@fmt,w
  6092  1EE1  0086               	movwf	6
  6093  1EE2  0187               	clrf	7
  6094  1EE3  3001               	movlw	1
  6095  1EE4  0781               	addwf	1,f
  6096  1EE5  3141               	addfsr 1,1
  6097  1EE6  1803               	skipnc
  6098  1EE7  0A81               	incf	1,f
  6099                           
  6100                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6101  1EE8  085A               	movf	vfpfcnvrt@ap,w
  6102  1EE9  0086               	movwf	6
  6103  1EEA  0187               	clrf	7
  6104  1EEB  0801               	movf	1,w
  6105  1EEC  0084               	movwf	4
  6106  1EED  0185               	clrf	5
  6107  1EEE  3002               	movlw	2
  6108  1EEF  0781               	addwf	1,f
  6109  1EF0  3F00               	moviw [0]fsr0
  6110  1EF1  0022               	movlb	2	; select bank2
  6111  1EF2  00E4               	movwf	_width^(0+256)
  6112  1EF3  3F01               	moviw [1]fsr0
  6113  1EF4  00E5               	movwf	(_width+1)^(0+256)
  6114                           
  6115                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  6116  1EF5  1FE5               	btfss	(_width+1)^(0+256),7
  6117  1EF6  2F41               	goto	l6942
  6118                           
  6119                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  6120  1EF7  1468               	bsf	_flags^(0+256),0
  6121                           
  6122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  6123  1EF8  09E4               	comf	_width^(0+256),f
  6124  1EF9  09E5               	comf	(_width+1)^(0+256),f
  6125  1EFA  0AE4               	incf	_width^(0+256),f
  6126  1EFB  1903               	skipnz
  6127  1EFC  0AE5               	incf	(_width+1)^(0+256),f
  6128  1EFD  2F41               	goto	l6942
  6129  1EFE                     l6932:	
  6130                           
  6131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  6132  1EFE  0859               	movf	vfpfcnvrt@fmt,w
  6133  1EFF  0086               	movwf	6
  6134  1F00  0187               	clrf	7
  6135  1F01  3F40               	moviw [0]fsr1
  6136  1F02  00F7               	movwf	atoi@s
  6137  1F03  3F41               	moviw [1]fsr1
  6138  1F04  00F8               	movwf	atoi@s+1
  6139  1F05  31AC  2479  319E   	fcall	_atoi
  6140  1F08  0878               	movf	?_atoi+1,w
  6141  1F09  0022               	movlb	2	; select bank2
  6142  1F0A  00E5               	movwf	(_width+1)^(0+256)
  6143  1F0B  0877               	movf	?_atoi,w
  6144  1F0C  00E4               	movwf	_width^(0+256)
  6145                           
  6146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6147  1F0D  2F17               	goto	l6936
  6148  1F0E                     l6934:	
  6149                           
  6150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  6151  1F0E  0020               	movlb	0	; select bank0
  6152  1F0F  0859               	movf	vfpfcnvrt@fmt,w
  6153  1F10  0086               	movwf	6
  6154  1F11  0187               	clrf	7
  6155  1F12  3001               	movlw	1
  6156  1F13  0781               	addwf	1,f
  6157  1F14  3141               	addfsr 1,1
  6158  1F15  1803               	skipnc
  6159  1F16  0A81               	incf	1,f
  6160  1F17                     l6936:	
  6161  1F17  0020               	movlb	0	; select bank0
  6162  1F18  0859               	movf	vfpfcnvrt@fmt,w
  6163  1F19  0086               	movwf	6
  6164  1F1A  0187               	clrf	7
  6165  1F1B  3F40               	moviw [0]fsr1
  6166  1F1C  00DB               	movwf	??_vfpfcnvrt
  6167  1F1D  3F41               	moviw [1]fsr1
  6168  1F1E  00DC               	movwf	??_vfpfcnvrt+1
  6169  1F1F  085B               	movf	??_vfpfcnvrt,w
  6170  1F20  0084               	movwf	4
  6171  1F21  085C               	movf	??_vfpfcnvrt+1,w
  6172  1F22  0085               	movwf	5
  6173  1F23  0800               	movf	0,w	;code access
  6174  1F24  3ED0               	addlw	208
  6175  1F25  00DD               	movwf	??_vfpfcnvrt+2
  6176  1F26  30FF               	movlw	255
  6177  1F27  1803               	skipnc
  6178  1F28  3000               	movlw	0
  6179  1F29  00DE               	movwf	??_vfpfcnvrt+3
  6180  1F2A  3000               	movlw	0
  6181  1F2B  025E               	subwf	??_vfpfcnvrt+3,w
  6182  1F2C  300A               	movlw	10
  6183  1F2D  1903               	skipnz
  6184  1F2E  025D               	subwf	??_vfpfcnvrt+2,w
  6185  1F2F  1803               	btfsc	3,0
  6186  1F30  2F33               	goto	u8700
  6187  1F31  3001               	movlw	1
  6188  1F32  2F34               	goto	u8710
  6189  1F33                     u8700:	
  6190  1F33  3000               	movlw	0
  6191  1F34                     u8710:	
  6192  1F34  00DF               	movwf	??_vfpfcnvrt+4
  6193  1F35  01E0               	clrf	??_vfpfcnvrt+5
  6194  1F36  085F               	movf	??_vfpfcnvrt+4,w
  6195  1F37  0021               	movlb	1	; select bank1
  6196  1F38  00A4               	movwf	_vfpfcnvrt$1368^(0+128)
  6197  1F39  0020               	movlb	0	; select bank0
  6198  1F3A  0860               	movf	??_vfpfcnvrt+5,w
  6199  1F3B  0021               	movlb	1	; select bank1
  6200  1F3C  00A5               	movwf	(_vfpfcnvrt$1368+1)^(0+128)
  6201  1F3D  0824               	movf	_vfpfcnvrt$1368^(0+128),w
  6202  1F3E  0425               	iorwf	(_vfpfcnvrt$1368+1)^(0+128),w
  6203  1F3F  1D03               	btfss	3,2
  6204  1F40  2F0E               	goto	l6934
  6205  1F41                     l6942:	
  6206                           
  6207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  6208  1F41  0020               	movlb	0	; select bank0
  6209  1F42  0859               	movf	vfpfcnvrt@fmt,w
  6210  1F43  0086               	movwf	6
  6211  1F44  0187               	clrf	7
  6212  1F45  3F40               	moviw [0]fsr1
  6213  1F46  00DB               	movwf	??_vfpfcnvrt
  6214  1F47  3F41               	moviw [1]fsr1
  6215  1F48  00DC               	movwf	??_vfpfcnvrt+1
  6216  1F49  085B               	movf	??_vfpfcnvrt,w
  6217  1F4A  0084               	movwf	4
  6218  1F4B  085C               	movf	??_vfpfcnvrt+1,w
  6219  1F4C  0085               	movwf	5
  6220  1F4D  0012               	moviw fsr0++
  6221  1F4E  3A2E               	xorlw	46
  6222  1F4F  1D03               	btfss	3,2
  6223  1F50  2FC5               	goto	l6964
  6224                           
  6225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  6226  1F51  0022               	movlb	2	; select bank2
  6227  1F52  01E6               	clrf	_prec^(0+256)
  6228  1F53  01E7               	clrf	(_prec+1)^(0+256)
  6229                           
  6230                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  6231  1F54  0020               	movlb	0	; select bank0
  6232  1F55  0859               	movf	vfpfcnvrt@fmt,w
  6233  1F56  0086               	movwf	6
  6234  1F57  0187               	clrf	7
  6235  1F58  3001               	movlw	1
  6236  1F59  0781               	addwf	1,f
  6237  1F5A  3141               	addfsr 1,1
  6238  1F5B  1803               	skipnc
  6239  1F5C  0A81               	incf	1,f
  6240                           
  6241                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  6242  1F5D  0859               	movf	vfpfcnvrt@fmt,w
  6243  1F5E  0086               	movwf	6
  6244  1F5F  0187               	clrf	7
  6245  1F60  3F40               	moviw [0]fsr1
  6246  1F61  00DB               	movwf	??_vfpfcnvrt
  6247  1F62  3F41               	moviw [1]fsr1
  6248  1F63  00DC               	movwf	??_vfpfcnvrt+1
  6249  1F64  085B               	movf	??_vfpfcnvrt,w
  6250  1F65  0084               	movwf	4
  6251  1F66  085C               	movf	??_vfpfcnvrt+1,w
  6252  1F67  0085               	movwf	5
  6253  1F68  0012               	moviw fsr0++
  6254  1F69  3A2A               	xorlw	42
  6255  1F6A  1D03               	btfss	3,2
  6256  1F6B  2F82               	goto	l6954
  6257                           
  6258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  6259  1F6C  0859               	movf	vfpfcnvrt@fmt,w
  6260  1F6D  0086               	movwf	6
  6261  1F6E  0187               	clrf	7
  6262  1F6F  3001               	movlw	1
  6263  1F70  0781               	addwf	1,f
  6264  1F71  3141               	addfsr 1,1
  6265  1F72  1803               	skipnc
  6266  1F73  0A81               	incf	1,f
  6267                           
  6268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6269  1F74  085A               	movf	vfpfcnvrt@ap,w
  6270  1F75  0086               	movwf	6
  6271  1F76  0187               	clrf	7
  6272  1F77  0801               	movf	1,w
  6273  1F78  0084               	movwf	4
  6274  1F79  0185               	clrf	5
  6275  1F7A  3002               	movlw	2
  6276  1F7B  0781               	addwf	1,f
  6277  1F7C  3F00               	moviw [0]fsr0
  6278  1F7D  0022               	movlb	2	; select bank2
  6279  1F7E  00E6               	movwf	_prec^(0+256)
  6280  1F7F  3F01               	moviw [1]fsr0
  6281  1F80  00E7               	movwf	(_prec+1)^(0+256)
  6282                           
  6283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  6284  1F81  2FC5               	goto	l6964
  6285  1F82                     l6954:	
  6286                           
  6287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  6288  1F82  0859               	movf	vfpfcnvrt@fmt,w
  6289  1F83  0086               	movwf	6
  6290  1F84  0187               	clrf	7
  6291  1F85  3F40               	moviw [0]fsr1
  6292  1F86  00F7               	movwf	atoi@s
  6293  1F87  3F41               	moviw [1]fsr1
  6294  1F88  00F8               	movwf	atoi@s+1
  6295  1F89  31AC  2479  319E   	fcall	_atoi
  6296  1F8C  0878               	movf	?_atoi+1,w
  6297  1F8D  0022               	movlb	2	; select bank2
  6298  1F8E  00E7               	movwf	(_prec+1)^(0+256)
  6299  1F8F  0877               	movf	?_atoi,w
  6300  1F90  00E6               	movwf	_prec^(0+256)
  6301                           
  6302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6303  1F91  2F9B               	goto	l6958
  6304  1F92                     l6956:	
  6305                           
  6306                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  6307  1F92  0020               	movlb	0	; select bank0
  6308  1F93  0859               	movf	vfpfcnvrt@fmt,w
  6309  1F94  0086               	movwf	6
  6310  1F95  0187               	clrf	7
  6311  1F96  3001               	movlw	1
  6312  1F97  0781               	addwf	1,f
  6313  1F98  3141               	addfsr 1,1
  6314  1F99  1803               	skipnc
  6315  1F9A  0A81               	incf	1,f
  6316  1F9B                     l6958:	
  6317  1F9B  0020               	movlb	0	; select bank0
  6318  1F9C  0859               	movf	vfpfcnvrt@fmt,w
  6319  1F9D  0086               	movwf	6
  6320  1F9E  0187               	clrf	7
  6321  1F9F  3F40               	moviw [0]fsr1
  6322  1FA0  00DB               	movwf	??_vfpfcnvrt
  6323  1FA1  3F41               	moviw [1]fsr1
  6324  1FA2  00DC               	movwf	??_vfpfcnvrt+1
  6325  1FA3  085B               	movf	??_vfpfcnvrt,w
  6326  1FA4  0084               	movwf	4
  6327  1FA5  085C               	movf	??_vfpfcnvrt+1,w
  6328  1FA6  0085               	movwf	5
  6329  1FA7  0800               	movf	0,w	;code access
  6330  1FA8  3ED0               	addlw	208
  6331  1FA9  00DD               	movwf	??_vfpfcnvrt+2
  6332  1FAA  30FF               	movlw	255
  6333  1FAB  1803               	skipnc
  6334  1FAC  3000               	movlw	0
  6335  1FAD  00DE               	movwf	??_vfpfcnvrt+3
  6336  1FAE  3000               	movlw	0
  6337  1FAF  025E               	subwf	??_vfpfcnvrt+3,w
  6338  1FB0  300A               	movlw	10
  6339  1FB1  1903               	skipnz
  6340  1FB2  025D               	subwf	??_vfpfcnvrt+2,w
  6341  1FB3  1803               	btfsc	3,0
  6342  1FB4  2FB7               	goto	u8750
  6343  1FB5  3001               	movlw	1
  6344  1FB6  2FB8               	goto	u8760
  6345  1FB7                     u8750:	
  6346  1FB7  3000               	movlw	0
  6347  1FB8                     u8760:	
  6348  1FB8  00DF               	movwf	??_vfpfcnvrt+4
  6349  1FB9  01E0               	clrf	??_vfpfcnvrt+5
  6350  1FBA  085F               	movf	??_vfpfcnvrt+4,w
  6351  1FBB  0021               	movlb	1	; select bank1
  6352  1FBC  00A6               	movwf	_vfpfcnvrt$1369^(0+128)
  6353  1FBD  0020               	movlb	0	; select bank0
  6354  1FBE  0860               	movf	??_vfpfcnvrt+5,w
  6355  1FBF  0021               	movlb	1	; select bank1
  6356  1FC0  00A7               	movwf	(_vfpfcnvrt$1369+1)^(0+128)
  6357  1FC1  0826               	movf	_vfpfcnvrt$1369^(0+128),w
  6358  1FC2  0427               	iorwf	(_vfpfcnvrt$1369+1)^(0+128),w
  6359  1FC3  1D03               	btfss	3,2
  6360  1FC4  2F92               	goto	l6956
  6361  1FC5                     l6964:	
  6362                           
  6363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  6364  1FC5  0020               	movlb	0	; select bank0
  6365  1FC6  0859               	movf	vfpfcnvrt@fmt,w
  6366  1FC7  0086               	movwf	6
  6367  1FC8  0187               	clrf	7
  6368  1FC9  3F40               	moviw [0]fsr1
  6369  1FCA  00DB               	movwf	??_vfpfcnvrt
  6370  1FCB  3F41               	moviw [1]fsr1
  6371  1FCC  00DC               	movwf	??_vfpfcnvrt+1
  6372  1FCD  085B               	movf	??_vfpfcnvrt,w
  6373  1FCE  0084               	movwf	4
  6374  1FCF  085C               	movf	??_vfpfcnvrt+1,w
  6375  1FD0  0085               	movwf	5
  6376  1FD1  0012               	moviw fsr0++
  6377  1FD2  3A63               	xorlw	99
  6378  1FD3  31A7  1D03         	btfss	3,2
  6379  1FD5  2F06               	goto	l6974
  6380                           
  6381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  6382  1FD6  0859               	movf	vfpfcnvrt@fmt,w
  6383  1FD7  0086               	movwf	6
  6384  1FD8  0187               	clrf	7
  6385  1FD9  3001               	movlw	1
  6386  1FDA  0781               	addwf	1,f
  6387  1FDB  3141               	addfsr 1,1
  6388  1FDC  1803               	skipnc
  6389  1FDD  0A81               	incf	1,f
  6390                           
  6391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6392  1FDE  085A               	movf	vfpfcnvrt@ap,w
  6393  1FDF  0086               	movwf	6
  6394  1FE0  0187               	clrf	7
  6395  1FE1  0801               	movf	1,w
  6396  1FE2  0084               	movwf	4
  6397  1FE3  0185               	clrf	5
  6398  1FE4  3002               	movlw	2
  6399  1FE5  0781               	addwf	1,f
  6400  1FE6  0800               	movf	0,w
  6401  1FE7  00DB               	movwf	??_vfpfcnvrt
  6402  1FE8  085B               	movf	??_vfpfcnvrt,w
  6403  1FE9  0021               	movlb	1	; select bank1
  6404  1FEA  00B2               	movwf	vfpfcnvrt@c^(0+128)
  6405                           
  6406                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  6407  1FEB  0020               	movlb	0	; select bank0
  6408  1FEC  0858               	movf	vfpfcnvrt@fp+1,w
  6409  1FED  00B1               	movwf	ctoa@fp+1
  6410  1FEE  0857               	movf	vfpfcnvrt@fp,w
  6411  1FEF  00B0               	movwf	ctoa@fp
  6412  1FF0  0021               	movlb	1	; select bank1
  6413  1FF1  0832               	movf	vfpfcnvrt@c^(0+128),w
  6414  1FF2  0020               	movlb	0	; select bank0
  6415  1FF3  00DB               	movwf	??_vfpfcnvrt
  6416  1FF4  085B               	movf	??_vfpfcnvrt,w
  6417  1FF5  00B2               	movwf	ctoa@c
  6418  1FF6  31B4  248C         	fcall	_ctoa
  6419  1FF8  0020               	movlb	0	; select bank0
  6420  1FF9  0831               	movf	?_ctoa+1,w
  6421  1FFA  00D8               	movwf	?_vfpfcnvrt+1
  6422  1FFB  0830               	movf	?_ctoa,w
  6423  1FFC  00D7               	movwf	?_vfpfcnvrt
  6424  1FFD  0008               	return
  6425  1FFE                     L7:	
  6426  1FFE                     L6:	
  6427  1FFE  318F  2FDD         	ljmp	l7242
  6428                           
  6429                           	psect	text8
  6430  1B89                     __ptext8:	
  6431 ;; *************** function _xtoa *****************
  6432 ;; Defined at:
  6433 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6434 ;; Parameters:    Size  Location     Type
  6435 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6436 ;;		 -> vsnprintf@f(6), 
  6437 ;;  d               8   18[BANK0 ] unsigned long long 
  6438 ;;  x               1   26[BANK0 ] unsigned char 
  6439 ;; Auto vars:     Size  Location     Type
  6440 ;;  n               8   43[BANK0 ] unsigned long long 
  6441 ;;  c               2   53[BANK0 ] int 
  6442 ;;  i               2   51[BANK0 ] int 
  6443 ;;  w               2   41[BANK0 ] int 
  6444 ;;  p               2   39[BANK0 ] int 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  2   16[BANK0 ] int 
  6447 ;; Registers used:
  6448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6454 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6455 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6456 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6457 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6458 ;;Total ram usage:       39 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    5
  6461 ;; This function calls:
  6462 ;;		_isalpha
  6463 ;;		_isupper
  6464 ;;		_pad
  6465 ;;		_toupper
  6466 ;; This function is called by:
  6467 ;;		_vfpfcnvrt
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471                           
  6472                           ;psect for function _xtoa
  6473  1B89                     _xtoa:	
  6474                           
  6475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  6476                           
  6477                           ;incstack = 0
  6478                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6479  1B89  0022               	movlb	2	; select bank2
  6480  1B8A  1BE7               	btfsc	(_prec+1)^(0+256),7
  6481  1B8B  2B90               	goto	l908
  6482                           
  6483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  6484  1B8C  30FD               	movlw	253
  6485  1B8D  05E8               	andwf	_flags^(0+256),f
  6486  1B8E  30FF               	movlw	255
  6487  1B8F  05E9               	andwf	(_flags+1)^(0+256),f
  6488  1B90                     l908:	
  6489                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  6490                           
  6491                           
  6492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  6493  1B90  0867               	movf	(_prec+1)^(0+256),w
  6494  1B91  3A80               	xorlw	128
  6495  1B92  0020               	movlb	0	; select bank0
  6496  1B93  00BB               	movwf	??_xtoa
  6497  1B94  3080               	movlw	128
  6498  1B95  023B               	subwf	??_xtoa,w
  6499  1B96  1D03               	skipz
  6500  1B97  2B9B               	goto	u8425
  6501  1B98  3001               	movlw	1
  6502  1B99  0022               	movlb	2	; select bank2
  6503  1B9A  0266               	subwf	_prec^(0+256),w
  6504  1B9B                     u8425:	
  6505  1B9B  1803               	skipnc
  6506  1B9C  2BA3               	goto	l6786
  6507  1B9D  3001               	movlw	1
  6508  1B9E  0020               	movlb	0	; select bank0
  6509  1B9F  00C7               	movwf	xtoa@p
  6510  1BA0  3000               	movlw	0
  6511  1BA1  00C8               	movwf	xtoa@p+1
  6512  1BA2  2BAB               	goto	l912
  6513  1BA3                     l6786:	
  6514  1BA3  0022               	movlb	2	; select bank2
  6515  1BA4  0867               	movf	(_prec+1)^(0+256),w
  6516  1BA5  0020               	movlb	0	; select bank0
  6517  1BA6  00C8               	movwf	xtoa@p+1
  6518  1BA7  0022               	movlb	2	; select bank2
  6519  1BA8  0866               	movf	_prec^(0+256),w
  6520  1BA9  0020               	movlb	0	; select bank0
  6521  1BAA  00C7               	movwf	xtoa@p
  6522  1BAB                     l912:	
  6523                           
  6524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  6525  1BAB  0022               	movlb	2	; select bank2
  6526  1BAC  0865               	movf	(_width+1)^(0+256),w
  6527  1BAD  0020               	movlb	0	; select bank0
  6528  1BAE  00CA               	movwf	xtoa@w+1
  6529  1BAF  0022               	movlb	2	; select bank2
  6530  1BB0  0864               	movf	_width^(0+256),w
  6531  1BB1  0020               	movlb	0	; select bank0
  6532  1BB2  00C9               	movwf	xtoa@w
  6533                           
  6534                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  6535  1BB3  0022               	movlb	2	; select bank2
  6536  1BB4  1E68               	btfss	_flags^(0+256),4
  6537  1BB5  2BBB               	goto	l6792
  6538                           
  6539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  6540  1BB6  30FE               	movlw	254
  6541  1BB7  0020               	movlb	0	; select bank0
  6542  1BB8  07C9               	addwf	xtoa@w,f
  6543  1BB9  30FF               	movlw	255
  6544  1BBA  3DCA               	addwfc	xtoa@w+1,f
  6545  1BBB                     l6792:	
  6546                           
  6547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  6548  1BBB  0020               	movlb	0	; select bank0
  6549  1BBC  0832               	movf	xtoa@d,w
  6550  1BBD  00CB               	movwf	xtoa@n
  6551  1BBE  0833               	movf	xtoa@d+1,w
  6552  1BBF  00CC               	movwf	xtoa@n+1
  6553  1BC0  0834               	movf	xtoa@d+2,w
  6554  1BC1  00CD               	movwf	xtoa@n+2
  6555  1BC2  0835               	movf	xtoa@d+3,w
  6556  1BC3  00CE               	movwf	xtoa@n+3
  6557  1BC4  0836               	movf	xtoa@d+4,w
  6558  1BC5  00CF               	movwf	xtoa@n+4
  6559  1BC6  0837               	movf	xtoa@d+5,w
  6560  1BC7  00D0               	movwf	xtoa@n+5
  6561  1BC8  0838               	movf	xtoa@d+6,w
  6562  1BC9  00D1               	movwf	xtoa@n+6
  6563  1BCA  0839               	movf	xtoa@d+7,w
  6564  1BCB  00D2               	movwf	xtoa@n+7
  6565                           
  6566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  6567  1BCC  301F               	movlw	31
  6568  1BCD  00D3               	movwf	xtoa@i
  6569  1BCE  3000               	movlw	0
  6570  1BCF  00D4               	movwf	xtoa@i+1
  6571                           
  6572                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  6573  1BD0  0024               	movlb	4	; select bank4
  6574  1BD1  01CD               	clrf	(_dbuf^(0+512)+31)
  6575                           
  6576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6577  1BD2  2C7D               	goto	l6824
  6578  1BD3                     l6796:	
  6579                           
  6580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  6581  1BD3  30FF               	movlw	255
  6582  1BD4  0020               	movlb	0	; select bank0
  6583  1BD5  07D3               	addwf	xtoa@i,f
  6584  1BD6  30FF               	movlw	255
  6585  1BD7  3DD4               	addwfc	xtoa@i+1,f
  6586                           
  6587                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  6588  1BD8  300F               	movlw	15
  6589  1BD9  054B               	andwf	xtoa@n,w
  6590  1BDA  00D5               	movwf	xtoa@c
  6591  1BDB  3000               	movlw	0
  6592  1BDC  054C               	andwf	xtoa@n+1,w
  6593  1BDD  00D6               	movwf	xtoa@c+1
  6594                           
  6595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  6596  1BDE  0856               	movf	xtoa@c+1,w
  6597  1BDF  3A80               	xorlw	128
  6598  1BE0  00BB               	movwf	??_xtoa
  6599  1BE1  3080               	movlw	128
  6600  1BE2  023B               	subwf	??_xtoa,w
  6601  1BE3  1D03               	skipz
  6602  1BE4  2BE7               	goto	u8445
  6603  1BE5  300A               	movlw	10
  6604  1BE6  0255               	subwf	xtoa@c,w
  6605  1BE7                     u8445:	
  6606  1BE7  1C03               	skipc
  6607  1BE8  2BED               	goto	l6800
  6608  1BE9  0020               	movlb	0	; select bank0
  6609  1BEA  0855               	movf	xtoa@c,w
  6610  1BEB  3E57               	addlw	87
  6611  1BEC  2BF0               	goto	L1
  6612  1BED                     l6800:	
  6613  1BED  0020               	movlb	0	; select bank0
  6614  1BEE  0855               	movf	xtoa@c,w
  6615  1BEF  3E30               	addlw	48
  6616  1BF0                     L1:	
  6617  1BF0  00D5               	movwf	xtoa@c
  6618  1BF1  3000               	movlw	0
  6619  1BF2  3D56               	addwfc	xtoa@c+1,w
  6620  1BF3  00D6               	movwf	xtoa@c+1
  6621  1BF4  083A               	movf	xtoa@x,w
  6622  1BF5  3EBF               	addlw	191
  6623  1BF6  00BB               	movwf	??_xtoa
  6624  1BF7  30FF               	movlw	255
  6625  1BF8  1803               	skipnc
  6626  1BF9  3000               	movlw	0
  6627  1BFA  00BC               	movwf	??_xtoa+1
  6628  1BFB  3000               	movlw	0
  6629  1BFC  023C               	subwf	??_xtoa+1,w
  6630  1BFD  301A               	movlw	26
  6631  1BFE  1903               	skipnz
  6632  1BFF  023B               	subwf	??_xtoa,w
  6633  1C00  1803               	btfsc	3,0
  6634  1C01  2C04               	goto	u8450
  6635  1C02  3001               	movlw	1
  6636  1C03  2C05               	goto	u8460
  6637  1C04                     u8450:	
  6638  1C04  3000               	movlw	0
  6639  1C05                     u8460:	
  6640  1C05  00BD               	movwf	??_xtoa+2
  6641  1C06  01BE               	clrf	??_xtoa+3
  6642  1C07  083D               	movf	??_xtoa+2,w
  6643  1C08  00C3               	movwf	_xtoa$1353
  6644  1C09  083E               	movf	??_xtoa+3,w
  6645  1C0A  00C4               	movwf	_xtoa$1353+1
  6646  1C0B  0843               	movf	_xtoa$1353,w
  6647  1C0C  0444               	iorwf	_xtoa$1353+1,w
  6648  1C0D  1903               	btfsc	3,2
  6649  1C0E  2C3B               	goto	l6816
  6650  1C0F  3020               	movlw	32
  6651  1C10  0455               	iorwf	xtoa@c,w
  6652  1C11  00BB               	movwf	??_xtoa
  6653  1C12  3000               	movlw	0
  6654  1C13  0456               	iorwf	xtoa@c+1,w
  6655  1C14  00BC               	movwf	??_xtoa+1
  6656  1C15  083B               	movf	??_xtoa,w
  6657  1C16  3E9F               	addlw	159
  6658  1C17  00BD               	movwf	??_xtoa+2
  6659  1C18  30FF               	movlw	255
  6660  1C19  3D3C               	addwfc	??_xtoa+1,w
  6661  1C1A  00BE               	movwf	??_xtoa+3
  6662  1C1B  3000               	movlw	0
  6663  1C1C  023E               	subwf	??_xtoa+3,w
  6664  1C1D  301A               	movlw	26
  6665  1C1E  1903               	skipnz
  6666  1C1F  023D               	subwf	??_xtoa+2,w
  6667  1C20  1803               	btfsc	3,0
  6668  1C21  2C24               	goto	u8480
  6669  1C22  3001               	movlw	1
  6670  1C23  2C25               	goto	u8490
  6671  1C24                     u8480:	
  6672  1C24  3000               	movlw	0
  6673  1C25                     u8490:	
  6674  1C25  00BF               	movwf	??_xtoa+4
  6675  1C26  01C0               	clrf	??_xtoa+5
  6676  1C27  083F               	movf	??_xtoa+4,w
  6677  1C28  00C5               	movwf	_xtoa$1354
  6678  1C29  0840               	movf	??_xtoa+5,w
  6679  1C2A  00C6               	movwf	_xtoa$1354+1
  6680  1C2B  0845               	movf	_xtoa$1354,w
  6681  1C2C  0446               	iorwf	_xtoa$1354+1,w
  6682  1C2D  1903               	btfsc	3,2
  6683  1C2E  2C3B               	goto	l6816
  6684                           
  6685                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  6686  1C2F  0856               	movf	xtoa@c+1,w
  6687  1C30  00F8               	movwf	toupper@c+1
  6688  1C31  0855               	movf	xtoa@c,w
  6689  1C32  00F7               	movwf	toupper@c
  6690  1C33  3190  2000  319B   	fcall	_toupper
  6691  1C36  0878               	movf	?_toupper+1,w
  6692  1C37  0020               	movlb	0	; select bank0
  6693  1C38  00D6               	movwf	xtoa@c+1
  6694  1C39  0877               	movf	?_toupper,w
  6695  1C3A  00D5               	movwf	xtoa@c
  6696  1C3B                     l6816:	
  6697                           
  6698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  6699  1C3B  0855               	movf	xtoa@c,w
  6700  1C3C  00BB               	movwf	??_xtoa
  6701  1C3D  0853               	movf	xtoa@i,w
  6702  1C3E  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6703  1C3F  0086               	movwf	6
  6704  1C40  3002               	movlw	2	; select bank4/5
  6705  1C41  0087               	movwf	7
  6706  1C42  083B               	movf	??_xtoa,w
  6707  1C43  0081               	movwf	1
  6708                           
  6709                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  6710  1C44  30FF               	movlw	255
  6711  1C45  07C7               	addwf	xtoa@p,f
  6712  1C46  30FF               	movlw	255
  6713  1C47  3DC8               	addwfc	xtoa@p+1,f
  6714                           
  6715                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  6716  1C48  30FF               	movlw	255
  6717  1C49  07C9               	addwf	xtoa@w,f
  6718  1C4A  30FF               	movlw	255
  6719  1C4B  3DCA               	addwfc	xtoa@w+1,f
  6720                           
  6721                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  6722  1C4C  304B               	movlw	low xtoa@n
  6723  1C4D  0086               	movwf	6
  6724  1C4E  3000               	movlw	high xtoa@n
  6725  1C4F  0087               	movwf	7
  6726  1C50  3F40               	moviw [0]fsr1
  6727  1C51  00BB               	movwf	??_xtoa
  6728  1C52  3F41               	moviw [1]fsr1
  6729  1C53  00BC               	movwf	??_xtoa+1
  6730  1C54  3F42               	moviw [2]fsr1
  6731  1C55  00BD               	movwf	??_xtoa+2
  6732  1C56  3F43               	moviw [3]fsr1
  6733  1C57  00BE               	movwf	??_xtoa+3
  6734  1C58  3F44               	moviw [4]fsr1
  6735  1C59  00BF               	movwf	??_xtoa+4
  6736  1C5A  3F45               	moviw [5]fsr1
  6737  1C5B  00C0               	movwf	??_xtoa+5
  6738  1C5C  3F46               	moviw [6]fsr1
  6739  1C5D  00C1               	movwf	??_xtoa+6
  6740  1C5E  3F47               	moviw [7]fsr1
  6741  1C5F  00C2               	movwf	??_xtoa+7
  6742  1C60  3004               	movlw	4
  6743  1C61                     u8515:	
  6744  1C61  0020               	movlb	0	; select bank0
  6745  1C62  36C2               	lsrf	??_xtoa+7,f
  6746  1C63  0CC1               	rrf	??_xtoa+6,f
  6747  1C64  0CC0               	rrf	??_xtoa+5,f
  6748  1C65  0CBF               	rrf	??_xtoa+4,f
  6749  1C66  0CBE               	rrf	??_xtoa+3,f
  6750  1C67  0CBD               	rrf	??_xtoa+2,f
  6751  1C68  0CBC               	rrf	??_xtoa+1,f
  6752  1C69  0CBB               	rrf	??_xtoa,f
  6753  1C6A  0B89               	decfsz	9,f
  6754  1C6B  2C61               	goto	u8515
  6755  1C6C  0020               	movlb	0	; select bank0
  6756  1C6D  0842               	movf	??_xtoa+7,w
  6757  1C6E  00D2               	movwf	xtoa@n+7
  6758  1C6F  0841               	movf	??_xtoa+6,w
  6759  1C70  00D1               	movwf	xtoa@n+6
  6760  1C71  0840               	movf	??_xtoa+5,w
  6761  1C72  00D0               	movwf	xtoa@n+5
  6762  1C73  083F               	movf	??_xtoa+4,w
  6763  1C74  00CF               	movwf	xtoa@n+4
  6764  1C75  083E               	movf	??_xtoa+3,w
  6765  1C76  00CE               	movwf	xtoa@n+3
  6766  1C77  083D               	movf	??_xtoa+2,w
  6767  1C78  00CD               	movwf	xtoa@n+2
  6768  1C79  083C               	movf	??_xtoa+1,w
  6769  1C7A  00CC               	movwf	xtoa@n+1
  6770  1C7B  083B               	movf	??_xtoa,w
  6771  1C7C  00CB               	movwf	xtoa@n
  6772  1C7D                     l6824:	
  6773                           
  6774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6775  1C7D  0020               	movlb	0	; select bank0
  6776  1C7E  0854               	movf	xtoa@i+1,w
  6777  1C7F  3A80               	xorlw	128
  6778  1C80  00BB               	movwf	??_xtoa
  6779  1C81  3080               	movlw	128
  6780  1C82  023B               	subwf	??_xtoa,w
  6781  1C83  1D03               	skipz
  6782  1C84  2C87               	goto	u8525
  6783  1C85  3002               	movlw	2
  6784  1C86  0253               	subwf	xtoa@i,w
  6785  1C87                     u8525:	
  6786  1C87  1C03               	skipc
  6787  1C88  2CAE               	goto	l933
  6788  1C89  0020               	movlb	0	; select bank0
  6789  1C8A  084B               	movf	xtoa@n,w
  6790  1C8B  044C               	iorwf	xtoa@n+1,w
  6791  1C8C  044D               	iorwf	xtoa@n+2,w
  6792  1C8D  044E               	iorwf	xtoa@n+3,w
  6793  1C8E  044F               	iorwf	xtoa@n+4,w
  6794  1C8F  0450               	iorwf	xtoa@n+5,w
  6795  1C90  0451               	iorwf	xtoa@n+6,w
  6796  1C91  0452               	iorwf	xtoa@n+7,w
  6797  1C92  1D03               	skipz
  6798  1C93  2BD3               	goto	l6796
  6799  1C94  0848               	movf	xtoa@p+1,w
  6800  1C95  3A80               	xorlw	128
  6801  1C96  00BB               	movwf	??_xtoa
  6802  1C97  3080               	movlw	128
  6803  1C98  023B               	subwf	??_xtoa,w
  6804  1C99  1D03               	skipz
  6805  1C9A  2C9D               	goto	u8545
  6806  1C9B  3001               	movlw	1
  6807  1C9C  0247               	subwf	xtoa@p,w
  6808  1C9D                     u8545:	
  6809  1C9D  1803               	skipnc
  6810  1C9E  2BD3               	goto	l6796
  6811  1C9F  0020               	movlb	0	; select bank0
  6812  1CA0  084A               	movf	xtoa@w+1,w
  6813  1CA1  3A80               	xorlw	128
  6814  1CA2  00BB               	movwf	??_xtoa
  6815  1CA3  3080               	movlw	128
  6816  1CA4  023B               	subwf	??_xtoa,w
  6817  1CA5  1D03               	skipz
  6818  1CA6  2CA9               	goto	u8555
  6819  1CA7  3001               	movlw	1
  6820  1CA8  0249               	subwf	xtoa@w,w
  6821  1CA9                     u8555:	
  6822  1CA9  1C03               	skipc
  6823  1CAA  2CAE               	goto	l933
  6824  1CAB  0022               	movlb	2	; select bank2
  6825  1CAC  18E8               	btfsc	_flags^(0+256),1
  6826  1CAD  2BD3               	goto	l6796
  6827  1CAE                     l933:	
  6828                           
  6829                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  6830  1CAE  0022               	movlb	2	; select bank2
  6831  1CAF  1E68               	btfss	_flags^(0+256),4
  6832  1CB0  2CCC               	goto	l6840
  6833                           
  6834                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  6835  1CB1  30FF               	movlw	255
  6836  1CB2  0020               	movlb	0	; select bank0
  6837  1CB3  07D3               	addwf	xtoa@i,f
  6838  1CB4  30FF               	movlw	255
  6839  1CB5  3DD4               	addwfc	xtoa@i+1,f
  6840                           
  6841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  6842  1CB6  083A               	movf	xtoa@x,w
  6843  1CB7  00BB               	movwf	??_xtoa
  6844  1CB8  0853               	movf	xtoa@i,w
  6845  1CB9  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6846  1CBA  0086               	movwf	6
  6847  1CBB  3002               	movlw	2	; select bank4/5
  6848  1CBC  0087               	movwf	7
  6849  1CBD  083B               	movf	??_xtoa,w
  6850  1CBE  0081               	movwf	1
  6851                           
  6852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  6853  1CBF  30FF               	movlw	255
  6854  1CC0  07D3               	addwf	xtoa@i,f
  6855  1CC1  30FF               	movlw	255
  6856  1CC2  3DD4               	addwfc	xtoa@i+1,f
  6857                           
  6858                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  6859  1CC3  3030               	movlw	48
  6860  1CC4  00BB               	movwf	??_xtoa
  6861  1CC5  0853               	movf	xtoa@i,w
  6862  1CC6  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6863  1CC7  0086               	movwf	6
  6864  1CC8  3002               	movlw	2	; select bank4/5
  6865  1CC9  0087               	movwf	7
  6866  1CCA  083B               	movf	??_xtoa,w
  6867  1CCB  0081               	movwf	1
  6868  1CCC                     l6840:	
  6869                           
  6870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  6871  1CCC  0020               	movlb	0	; select bank0
  6872  1CCD  0831               	movf	xtoa@fp+1,w
  6873  1CCE  00A7               	movwf	pad@fp+1
  6874  1CCF  0830               	movf	xtoa@fp,w
  6875  1CD0  00A6               	movwf	pad@fp
  6876  1CD1  0853               	movf	xtoa@i,w
  6877  1CD2  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  6878  1CD3  00BB               	movwf	??_xtoa
  6879  1CD4  083B               	movf	??_xtoa,w
  6880  1CD5  00A8               	movwf	pad@buf
  6881  1CD6  084A               	movf	xtoa@w+1,w
  6882  1CD7  00AA               	movwf	pad@p+1
  6883  1CD8  0849               	movf	xtoa@w,w
  6884  1CD9  00A9               	movwf	pad@p
  6885  1CDA  31B6  26B3         	fcall	_pad
  6886  1CDC  0020               	movlb	0	; select bank0
  6887  1CDD  0827               	movf	?_pad+1,w
  6888  1CDE  00B1               	movwf	?_xtoa+1
  6889  1CDF  0826               	movf	?_pad,w
  6890  1CE0  00B0               	movwf	?_xtoa
  6891  1CE1  0008               	return
  6892  1CE2                     __end_of_xtoa:	
  6893                           
  6894                           	psect	text9
  6895  1000                     __ptext9:	
  6896 ;; *************** function _toupper *****************
  6897 ;; Defined at:
  6898 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  c               2    7[COMMON] int 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;		None
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  2    7[COMMON] int 
  6905 ;; Registers used:
  6906 ;;		wreg, status,2, status,0
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6912 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6914 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6915 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6916 ;;Total ram usage:        8 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:    2
  6919 ;; This function calls:
  6920 ;;		_islower
  6921 ;; This function is called by:
  6922 ;;		_xtoa
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           
  6927                           ;psect for function _toupper
  6928  1000                     _toupper:	
  6929                           
  6930                           ;incstack = 0
  6931                           ; Regs used in _toupper: [wreg+status,2+status,0]
  6932  1000  0877               	movf	toupper@c,w
  6933  1001  3E9F               	addlw	159
  6934  1002  0020               	movlb	0	; select bank0
  6935  1003  00A0               	movwf	??_toupper
  6936  1004  30FF               	movlw	255
  6937  1005  3D78               	addwfc	toupper@c+1,w
  6938  1006  00A1               	movwf	??_toupper+1
  6939  1007  3000               	movlw	0
  6940  1008  0221               	subwf	??_toupper+1,w
  6941  1009  301A               	movlw	26
  6942  100A  1903               	skipnz
  6943  100B  0220               	subwf	??_toupper,w
  6944  100C  1803               	btfsc	3,0
  6945  100D  2810               	goto	u8040
  6946  100E  3001               	movlw	1
  6947  100F  2811               	goto	u8050
  6948  1010                     u8040:	
  6949  1010  3000               	movlw	0
  6950  1011                     u8050:	
  6951  1011  00A2               	movwf	??_toupper+2
  6952  1012  01A3               	clrf	??_toupper+3
  6953  1013  0822               	movf	??_toupper+2,w
  6954  1014  00F9               	movwf	_toupper$1903
  6955  1015  0823               	movf	??_toupper+3,w
  6956  1016  00FA               	movwf	_toupper$1903+1
  6957  1017  0879               	movf	_toupper$1903,w
  6958  1018  047A               	iorwf	_toupper$1903+1,w
  6959  1019  1903               	btfsc	3,2
  6960  101A  0008               	return
  6961  101B  305F               	movlw	95
  6962  101C  0577               	andwf	toupper@c,w
  6963  101D  00F7               	movwf	?_toupper
  6964  101E  3000               	movlw	0
  6965  101F  0578               	andwf	toupper@c+1,w
  6966  1020  00F8               	movwf	?_toupper+1
  6967  1021  0008               	return
  6968  1022                     __end_of_toupper:	
  6969                           
  6970                           	psect	text10
  6971  3324                     __ptext10:	
  6972 ;; *************** function _islower *****************
  6973 ;; Defined at:
  6974 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  6975 ;; Parameters:    Size  Location     Type
  6976 ;;  c               2    1[COMMON] int 
  6977 ;; Auto vars:     Size  Location     Type
  6978 ;;		None
  6979 ;; Return value:  Size  Location     Type
  6980 ;;                  2    1[COMMON] int 
  6981 ;; Registers used:
  6982 ;;		wreg, status,2, status,0
  6983 ;; Tracked objects:
  6984 ;;		On entry : 0/0
  6985 ;;		On exit  : 0/0
  6986 ;;		Unchanged: 0/0
  6987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6990 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6991 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6992 ;;Total ram usage:        6 bytes
  6993 ;; Hardware stack levels used:    1
  6994 ;; Hardware stack levels required when called:    1
  6995 ;; This function calls:
  6996 ;;		Nothing
  6997 ;; This function is called by:
  6998 ;;		_toupper
  6999 ;; This function uses a non-reentrant model
  7000 ;;
  7001                           
  7002                           
  7003                           ;psect for function _islower
  7004  3324                     _islower:	
  7005                           
  7006                           ;incstack = 0
  7007                           ; Regs used in _islower: [wreg+status,2+status,0]
  7008  3324  0871               	movf	islower@c,w
  7009  3325  3E9F               	addlw	159
  7010  3326  00F3               	movwf	??_islower
  7011  3327  30FF               	movlw	255
  7012  3328  3D72               	addwfc	islower@c+1,w
  7013  3329  00F4               	movwf	??_islower+1
  7014  332A  3000               	movlw	0
  7015  332B  0274               	subwf	??_islower+1,w
  7016  332C  301A               	movlw	26
  7017  332D  1903               	skipnz
  7018  332E  0273               	subwf	??_islower,w
  7019  332F  1803               	btfsc	3,0
  7020  3330  2B33               	goto	u7980
  7021  3331  3001               	movlw	1
  7022  3332  2B34               	goto	u7990
  7023  3333                     u7980:	
  7024  3333  3000               	movlw	0
  7025  3334                     u7990:	
  7026  3334  00F5               	movwf	??_islower+2
  7027  3335  01F6               	clrf	??_islower+3
  7028  3336  0875               	movf	??_islower+2,w
  7029  3337  00F1               	movwf	?_islower
  7030  3338  0876               	movf	??_islower+3,w
  7031  3339  00F2               	movwf	?_islower+1
  7032  333A  0008               	return
  7033  333B                     __end_of_islower:	
  7034                           
  7035                           	psect	text11
  7036  330D                     __ptext11:	
  7037 ;; *************** function _isupper *****************
  7038 ;; Defined at:
  7039 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;  c               2    1[COMMON] int 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  2    1[COMMON] int 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7055 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7056 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7057 ;;Total ram usage:        6 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    1
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_xtoa
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           
  7068                           ;psect for function _isupper
  7069  330D                     _isupper:	
  7070                           
  7071                           ;incstack = 0
  7072                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7073  330D  0871               	movf	isupper@c,w
  7074  330E  3EBF               	addlw	191
  7075  330F  00F3               	movwf	??_isupper
  7076  3310  30FF               	movlw	255
  7077  3311  3D72               	addwfc	isupper@c+1,w
  7078  3312  00F4               	movwf	??_isupper+1
  7079  3313  3000               	movlw	0
  7080  3314  0274               	subwf	??_isupper+1,w
  7081  3315  301A               	movlw	26
  7082  3316  1903               	skipnz
  7083  3317  0273               	subwf	??_isupper,w
  7084  3318  1803               	btfsc	3,0
  7085  3319  2B1C               	goto	u4150
  7086  331A  3001               	movlw	1
  7087  331B  2B1D               	goto	u4160
  7088  331C                     u4150:	
  7089  331C  3000               	movlw	0
  7090  331D                     u4160:	
  7091  331D  00F5               	movwf	??_isupper+2
  7092  331E  01F6               	clrf	??_isupper+3
  7093  331F  0875               	movf	??_isupper+2,w
  7094  3320  00F1               	movwf	?_isupper
  7095  3321  0876               	movf	??_isupper+3,w
  7096  3322  00F2               	movwf	?_isupper+1
  7097  3323  0008               	return
  7098  3324                     __end_of_isupper:	
  7099                           
  7100                           	psect	text12
  7101  33C2                     __ptext12:	
  7102 ;; *************** function _isalpha *****************
  7103 ;; Defined at:
  7104 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  7105 ;; Parameters:    Size  Location     Type
  7106 ;;  c               2    1[COMMON] int 
  7107 ;; Auto vars:     Size  Location     Type
  7108 ;;		None
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  2    1[COMMON] int 
  7111 ;; Registers used:
  7112 ;;		wreg, status,2, status,0
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7120 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7121 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7122 ;;Total ram usage:        8 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; Hardware stack levels required when called:    1
  7125 ;; This function calls:
  7126 ;;		Nothing
  7127 ;; This function is called by:
  7128 ;;		_xtoa
  7129 ;; This function uses a non-reentrant model
  7130 ;;
  7131                           
  7132                           
  7133                           ;psect for function _isalpha
  7134  33C2                     _isalpha:	
  7135                           
  7136                           ;incstack = 0
  7137                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  7138  33C2  3020               	movlw	32
  7139  33C3  0471               	iorwf	isalpha@c,w
  7140  33C4  00F3               	movwf	??_isalpha
  7141  33C5  3000               	movlw	0
  7142  33C6  0472               	iorwf	isalpha@c+1,w
  7143  33C7  00F4               	movwf	??_isalpha+1
  7144  33C8  0873               	movf	??_isalpha,w
  7145  33C9  3E9F               	addlw	159
  7146  33CA  00F5               	movwf	??_isalpha+2
  7147  33CB  30FF               	movlw	255
  7148  33CC  3D74               	addwfc	??_isalpha+1,w
  7149  33CD  00F6               	movwf	??_isalpha+3
  7150  33CE  3000               	movlw	0
  7151  33CF  0276               	subwf	??_isalpha+3,w
  7152  33D0  301A               	movlw	26
  7153  33D1  1903               	skipnz
  7154  33D2  0275               	subwf	??_isalpha+2,w
  7155  33D3  1803               	btfsc	3,0
  7156  33D4  2BD7               	goto	u4170
  7157  33D5  3001               	movlw	1
  7158  33D6  2BD8               	goto	u4180
  7159  33D7                     u4170:	
  7160  33D7  3000               	movlw	0
  7161  33D8                     u4180:	
  7162  33D8  00F7               	movwf	??_isalpha+4
  7163  33D9  01F8               	clrf	??_isalpha+5
  7164  33DA  0877               	movf	??_isalpha+4,w
  7165  33DB  00F1               	movwf	?_isalpha
  7166  33DC  0878               	movf	??_isalpha+5,w
  7167  33DD  00F2               	movwf	?_isalpha+1
  7168  33DE  0008               	return
  7169  33DF                     __end_of_isalpha:	
  7170                           
  7171                           	psect	text13
  7172  2441                     __ptext13:	
  7173 ;; *************** function _utoa *****************
  7174 ;; Defined at:
  7175 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7178 ;;		 -> vsnprintf@f(6), 
  7179 ;;  d               8   18[BANK0 ] unsigned long long 
  7180 ;; Auto vars:     Size  Location     Type
  7181 ;;  n               8   31[BANK0 ] unsigned long long 
  7182 ;;  i               2   39[BANK0 ] int 
  7183 ;;  w               2   29[BANK0 ] int 
  7184 ;;  p               2   27[BANK0 ] int 
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  2   16[BANK0 ] int 
  7187 ;; Registers used:
  7188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7194 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7195 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7196 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7197 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7198 ;;Total ram usage:       25 bytes
  7199 ;; Hardware stack levels used:    1
  7200 ;; Hardware stack levels required when called:    5
  7201 ;; This function calls:
  7202 ;;		___lodiv
  7203 ;;		___lomod
  7204 ;;		_pad
  7205 ;; This function is called by:
  7206 ;;		_vfpfcnvrt
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210                           
  7211                           ;psect for function _utoa
  7212  2441                     _utoa:	
  7213                           
  7214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  7215                           
  7216                           ;incstack = 0
  7217                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7218  2441  0022               	movlb	2	; select bank2
  7219  2442  1BE7               	btfsc	(_prec+1)^(0+256),7
  7220  2443  2C48               	goto	l893
  7221                           
  7222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  7223  2444  30FD               	movlw	253
  7224  2445  05E8               	andwf	_flags^(0+256),f
  7225  2446  30FF               	movlw	255
  7226  2447  05E9               	andwf	(_flags+1)^(0+256),f
  7227  2448                     l893:	
  7228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  7229                           
  7230                           
  7231                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  7232  2448  0867               	movf	(_prec+1)^(0+256),w
  7233  2449  3A80               	xorlw	128
  7234  244A  0020               	movlb	0	; select bank0
  7235  244B  00BA               	movwf	??_utoa
  7236  244C  3080               	movlw	128
  7237  244D  023A               	subwf	??_utoa,w
  7238  244E  1D03               	skipz
  7239  244F  2C53               	goto	u8355
  7240  2450  3001               	movlw	1
  7241  2451  0022               	movlb	2	; select bank2
  7242  2452  0266               	subwf	_prec^(0+256),w
  7243  2453                     u8355:	
  7244  2453  1803               	skipnc
  7245  2454  2C5B               	goto	l6750
  7246  2455  3001               	movlw	1
  7247  2456  0020               	movlb	0	; select bank0
  7248  2457  00BB               	movwf	utoa@p
  7249  2458  3000               	movlw	0
  7250  2459  00BC               	movwf	utoa@p+1
  7251  245A  2C63               	goto	l897
  7252  245B                     l6750:	
  7253  245B  0022               	movlb	2	; select bank2
  7254  245C  0867               	movf	(_prec+1)^(0+256),w
  7255  245D  0020               	movlb	0	; select bank0
  7256  245E  00BC               	movwf	utoa@p+1
  7257  245F  0022               	movlb	2	; select bank2
  7258  2460  0866               	movf	_prec^(0+256),w
  7259  2461  0020               	movlb	0	; select bank0
  7260  2462  00BB               	movwf	utoa@p
  7261  2463                     l897:	
  7262                           
  7263                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  7264  2463  0022               	movlb	2	; select bank2
  7265  2464  0865               	movf	(_width+1)^(0+256),w
  7266  2465  0020               	movlb	0	; select bank0
  7267  2466  00BE               	movwf	utoa@w+1
  7268  2467  0022               	movlb	2	; select bank2
  7269  2468  0864               	movf	_width^(0+256),w
  7270  2469  0020               	movlb	0	; select bank0
  7271  246A  00BD               	movwf	utoa@w
  7272                           
  7273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  7274  246B  0832               	movf	utoa@d,w
  7275  246C  00BF               	movwf	utoa@n
  7276  246D  0833               	movf	utoa@d+1,w
  7277  246E  00C0               	movwf	utoa@n+1
  7278  246F  0834               	movf	utoa@d+2,w
  7279  2470  00C1               	movwf	utoa@n+2
  7280  2471  0835               	movf	utoa@d+3,w
  7281  2472  00C2               	movwf	utoa@n+3
  7282  2473  0836               	movf	utoa@d+4,w
  7283  2474  00C3               	movwf	utoa@n+4
  7284  2475  0837               	movf	utoa@d+5,w
  7285  2476  00C4               	movwf	utoa@n+5
  7286  2477  0838               	movf	utoa@d+6,w
  7287  2478  00C5               	movwf	utoa@n+6
  7288  2479  0839               	movf	utoa@d+7,w
  7289  247A  00C6               	movwf	utoa@n+7
  7290                           
  7291                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  7292  247B  301F               	movlw	31
  7293  247C  00C7               	movwf	utoa@i
  7294  247D  3000               	movlw	0
  7295  247E  00C8               	movwf	utoa@i+1
  7296                           
  7297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  7298  247F  0024               	movlb	4	; select bank4
  7299  2480  01CD               	clrf	(_dbuf^(0+512)+31)
  7300                           
  7301                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7302  2481  2D07               	goto	l6766
  7303  2482                     l6768:	
  7304  2482  083F               	movf	utoa@n,w
  7305  2483  0440               	iorwf	utoa@n+1,w
  7306  2484  0441               	iorwf	utoa@n+2,w
  7307  2485  0442               	iorwf	utoa@n+3,w
  7308  2486  0443               	iorwf	utoa@n+4,w
  7309  2487  0444               	iorwf	utoa@n+5,w
  7310  2488  0445               	iorwf	utoa@n+6,w
  7311  2489  0446               	iorwf	utoa@n+7,w
  7312  248A  1D03               	skipz
  7313  248B  2CA6               	goto	l6756
  7314  248C  083C               	movf	utoa@p+1,w
  7315  248D  3A80               	xorlw	128
  7316  248E  00BA               	movwf	??_utoa
  7317  248F  3080               	movlw	128
  7318  2490  023A               	subwf	??_utoa,w
  7319  2491  1D03               	skipz
  7320  2492  2C95               	goto	u8385
  7321  2493  3001               	movlw	1
  7322  2494  023B               	subwf	utoa@p,w
  7323  2495                     u8385:	
  7324  2495  1803               	skipnc
  7325  2496  2CA6               	goto	l6756
  7326  2497  0020               	movlb	0	; select bank0
  7327  2498  083E               	movf	utoa@w+1,w
  7328  2499  3A80               	xorlw	128
  7329  249A  00BA               	movwf	??_utoa
  7330  249B  3080               	movlw	128
  7331  249C  023A               	subwf	??_utoa,w
  7332  249D  1D03               	skipz
  7333  249E  2CA1               	goto	u8395
  7334  249F  3001               	movlw	1
  7335  24A0  023D               	subwf	utoa@w,w
  7336  24A1                     u8395:	
  7337  24A1  1C03               	skipc
  7338  24A2  2D0C               	goto	l6776
  7339  24A3  0022               	movlb	2	; select bank2
  7340  24A4  1CE8               	btfss	_flags^(0+256),1
  7341  24A5  2D0C               	goto	l6776
  7342  24A6                     l6756:	
  7343                           
  7344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  7345  24A6  30FF               	movlw	255
  7346  24A7  0020               	movlb	0	; select bank0
  7347  24A8  07C7               	addwf	utoa@i,f
  7348  24A9  30FF               	movlw	255
  7349  24AA  3DC8               	addwfc	utoa@i+1,f
  7350                           
  7351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  7352  24AB  300A               	movlw	10
  7353  24AC  00A0               	movwf	___lomod@divisor
  7354  24AD  01A1               	clrf	___lomod@divisor+1
  7355  24AE  01A2               	clrf	___lomod@divisor+2
  7356  24AF  01A3               	clrf	___lomod@divisor+3
  7357  24B0  01A4               	clrf	___lomod@divisor+4
  7358  24B1  01A5               	clrf	___lomod@divisor+5
  7359  24B2  01A6               	clrf	___lomod@divisor+6
  7360  24B3  01A7               	clrf	___lomod@divisor+7
  7361  24B4  083F               	movf	utoa@n,w
  7362  24B5  00A8               	movwf	___lomod@dividend
  7363  24B6  0840               	movf	utoa@n+1,w
  7364  24B7  00A9               	movwf	___lomod@dividend+1
  7365  24B8  0841               	movf	utoa@n+2,w
  7366  24B9  00AA               	movwf	___lomod@dividend+2
  7367  24BA  0842               	movf	utoa@n+3,w
  7368  24BB  00AB               	movwf	___lomod@dividend+3
  7369  24BC  0843               	movf	utoa@n+4,w
  7370  24BD  00AC               	movwf	___lomod@dividend+4
  7371  24BE  0844               	movf	utoa@n+5,w
  7372  24BF  00AD               	movwf	___lomod@dividend+5
  7373  24C0  0845               	movf	utoa@n+6,w
  7374  24C1  00AE               	movwf	___lomod@dividend+6
  7375  24C2  0846               	movf	utoa@n+7,w
  7376  24C3  00AF               	movwf	___lomod@dividend+7
  7377  24C4  31A9  210C  31A4   	fcall	___lomod
  7378  24C7  0020               	movlb	0	; select bank0
  7379  24C8  0820               	movf	?___lomod,w
  7380  24C9  3E30               	addlw	48
  7381  24CA  00BA               	movwf	??_utoa
  7382  24CB  0847               	movf	utoa@i,w
  7383  24CC  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7384  24CD  0086               	movwf	6
  7385  24CE  3002               	movlw	2	; select bank4/5
  7386  24CF  0087               	movwf	7
  7387  24D0  083A               	movf	??_utoa,w
  7388  24D1  0081               	movwf	1
  7389                           
  7390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  7391  24D2  30FF               	movlw	255
  7392  24D3  07BB               	addwf	utoa@p,f
  7393  24D4  30FF               	movlw	255
  7394  24D5  3DBC               	addwfc	utoa@p+1,f
  7395                           
  7396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  7397  24D6  30FF               	movlw	255
  7398  24D7  07BD               	addwf	utoa@w,f
  7399  24D8  30FF               	movlw	255
  7400  24D9  3DBE               	addwfc	utoa@w+1,f
  7401                           
  7402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  7403  24DA  300A               	movlw	10
  7404  24DB  00A0               	movwf	___lodiv@divisor
  7405  24DC  01A1               	clrf	___lodiv@divisor+1
  7406  24DD  01A2               	clrf	___lodiv@divisor+2
  7407  24DE  01A3               	clrf	___lodiv@divisor+3
  7408  24DF  01A4               	clrf	___lodiv@divisor+4
  7409  24E0  01A5               	clrf	___lodiv@divisor+5
  7410  24E1  01A6               	clrf	___lodiv@divisor+6
  7411  24E2  01A7               	clrf	___lodiv@divisor+7
  7412  24E3  083F               	movf	utoa@n,w
  7413  24E4  00A8               	movwf	___lodiv@dividend
  7414  24E5  0840               	movf	utoa@n+1,w
  7415  24E6  00A9               	movwf	___lodiv@dividend+1
  7416  24E7  0841               	movf	utoa@n+2,w
  7417  24E8  00AA               	movwf	___lodiv@dividend+2
  7418  24E9  0842               	movf	utoa@n+3,w
  7419  24EA  00AB               	movwf	___lodiv@dividend+3
  7420  24EB  0843               	movf	utoa@n+4,w
  7421  24EC  00AC               	movwf	___lodiv@dividend+4
  7422  24ED  0844               	movf	utoa@n+5,w
  7423  24EE  00AD               	movwf	___lodiv@dividend+5
  7424  24EF  0845               	movf	utoa@n+6,w
  7425  24F0  00AE               	movwf	___lodiv@dividend+6
  7426  24F1  0846               	movf	utoa@n+7,w
  7427  24F2  00AF               	movwf	___lodiv@dividend+7
  7428  24F3  31AA  2268  31A4   	fcall	___lodiv
  7429  24F6  0020               	movlb	0	; select bank0
  7430  24F7  0820               	movf	?___lodiv,w
  7431  24F8  00BF               	movwf	utoa@n
  7432  24F9  0821               	movf	?___lodiv+1,w
  7433  24FA  00C0               	movwf	utoa@n+1
  7434  24FB  0822               	movf	?___lodiv+2,w
  7435  24FC  00C1               	movwf	utoa@n+2
  7436  24FD  0823               	movf	?___lodiv+3,w
  7437  24FE  00C2               	movwf	utoa@n+3
  7438  24FF  0824               	movf	?___lodiv+4,w
  7439  2500  00C3               	movwf	utoa@n+4
  7440  2501  0825               	movf	?___lodiv+5,w
  7441  2502  00C4               	movwf	utoa@n+5
  7442  2503  0826               	movf	?___lodiv+6,w
  7443  2504  00C5               	movwf	utoa@n+6
  7444  2505  0827               	movf	?___lodiv+7,w
  7445  2506  00C6               	movwf	utoa@n+7
  7446  2507                     l6766:	
  7447                           
  7448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7449  2507  0020               	movlb	0	; select bank0
  7450  2508  0847               	movf	utoa@i,w
  7451  2509  0448               	iorwf	utoa@i+1,w
  7452  250A  1D03               	btfss	3,2
  7453  250B  2C82               	goto	l6768
  7454  250C                     l6776:	
  7455                           
  7456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  7457  250C  0020               	movlb	0	; select bank0
  7458  250D  0831               	movf	utoa@fp+1,w
  7459  250E  00A7               	movwf	pad@fp+1
  7460  250F  0830               	movf	utoa@fp,w
  7461  2510  00A6               	movwf	pad@fp
  7462  2511  0847               	movf	utoa@i,w
  7463  2512  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  7464  2513  00BA               	movwf	??_utoa
  7465  2514  083A               	movf	??_utoa,w
  7466  2515  00A8               	movwf	pad@buf
  7467  2516  083E               	movf	utoa@w+1,w
  7468  2517  00AA               	movwf	pad@p+1
  7469  2518  083D               	movf	utoa@w,w
  7470  2519  00A9               	movwf	pad@p
  7471  251A  31B6  26B3         	fcall	_pad
  7472  251C  0020               	movlb	0	; select bank0
  7473  251D  0827               	movf	?_pad+1,w
  7474  251E  00B1               	movwf	?_utoa+1
  7475  251F  0826               	movf	?_pad,w
  7476  2520  00B0               	movwf	?_utoa
  7477  2521  0008               	return
  7478  2522                     __end_of_utoa:	
  7479                           
  7480                           	psect	text14
  7481  290C                     __ptext14:	
  7482 ;; *************** function ___lomod *****************
  7483 ;; Defined at:
  7484 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7487 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7488 ;; Auto vars:     Size  Location     Type
  7489 ;;  counter         1    2[COMMON] unsigned char 
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  8    0[BANK0 ] unsigned long long 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2, status,0
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7499 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7501 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7502 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7503 ;;Total ram usage:       18 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; Hardware stack levels required when called:    1
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_utoa
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           
  7514                           ;psect for function ___lomod
  7515  290C                     ___lomod:	
  7516                           
  7517                           ;incstack = 0
  7518                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  7519  290C  0020               	movlb	0	; select bank0
  7520  290D  0820               	movf	___lomod@divisor,w
  7521  290E  0421               	iorwf	___lomod@divisor+1,w
  7522  290F  0422               	iorwf	___lomod@divisor+2,w
  7523  2910  0423               	iorwf	___lomod@divisor+3,w
  7524  2911  0424               	iorwf	___lomod@divisor+4,w
  7525  2912  0425               	iorwf	___lomod@divisor+5,w
  7526  2913  0426               	iorwf	___lomod@divisor+6,w
  7527  2914  0427               	iorwf	___lomod@divisor+7,w
  7528  2915  1903               	skipnz
  7529  2916  2964               	goto	l1264
  7530  2917  01F2               	clrf	___lomod@counter
  7531  2918  0AF2               	incf	___lomod@counter,f
  7532  2919                     l4358:	
  7533  2919  1BA7               	btfsc	___lomod@divisor+7,7
  7534  291A  2928               	goto	l4360
  7535  291B  35A0               	lslf	___lomod@divisor,f
  7536  291C  0DA1               	rlf	___lomod@divisor+1,f
  7537  291D  0DA2               	rlf	___lomod@divisor+2,f
  7538  291E  0DA3               	rlf	___lomod@divisor+3,f
  7539  291F  0DA4               	rlf	___lomod@divisor+4,f
  7540  2920  0DA5               	rlf	___lomod@divisor+5,f
  7541  2921  0DA6               	rlf	___lomod@divisor+6,f
  7542  2922  0DA7               	rlf	___lomod@divisor+7,f
  7543  2923  3001               	movlw	1
  7544  2924  00F1               	movwf	??___lomod
  7545  2925  0871               	movf	??___lomod,w
  7546  2926  07F2               	addwf	___lomod@counter,f
  7547  2927  2919               	goto	l4358
  7548  2928                     l4360:	
  7549  2928  0827               	movf	___lomod@divisor+7,w
  7550  2929  022F               	subwf	___lomod@dividend+7,w
  7551  292A  1D03               	skipz
  7552  292B  2946               	goto	u4565
  7553  292C  0826               	movf	___lomod@divisor+6,w
  7554  292D  022E               	subwf	___lomod@dividend+6,w
  7555  292E  1D03               	skipz
  7556  292F  2946               	goto	u4565
  7557  2930  0825               	movf	___lomod@divisor+5,w
  7558  2931  022D               	subwf	___lomod@dividend+5,w
  7559  2932  1D03               	skipz
  7560  2933  2946               	goto	u4565
  7561  2934  0824               	movf	___lomod@divisor+4,w
  7562  2935  022C               	subwf	___lomod@dividend+4,w
  7563  2936  1D03               	skipz
  7564  2937  2946               	goto	u4565
  7565  2938  0823               	movf	___lomod@divisor+3,w
  7566  2939  022B               	subwf	___lomod@dividend+3,w
  7567  293A  1D03               	skipz
  7568  293B  2946               	goto	u4565
  7569  293C  0822               	movf	___lomod@divisor+2,w
  7570  293D  022A               	subwf	___lomod@dividend+2,w
  7571  293E  1D03               	skipz
  7572  293F  2946               	goto	u4565
  7573  2940  0821               	movf	___lomod@divisor+1,w
  7574  2941  0229               	subwf	___lomod@dividend+1,w
  7575  2942  1D03               	skipz
  7576  2943  2946               	goto	u4565
  7577  2944  0820               	movf	___lomod@divisor,w
  7578  2945  0228               	subwf	___lomod@dividend,w
  7579  2946                     u4565:	
  7580  2946  1C03               	skipc
  7581  2947  2958               	goto	l4364
  7582  2948  0820               	movf	___lomod@divisor,w
  7583  2949  02A8               	subwf	___lomod@dividend,f
  7584  294A  0821               	movf	___lomod@divisor+1,w
  7585  294B  3BA9               	subwfb	___lomod@dividend+1,f
  7586  294C  0822               	movf	___lomod@divisor+2,w
  7587  294D  3BAA               	subwfb	___lomod@dividend+2,f
  7588  294E  0823               	movf	___lomod@divisor+3,w
  7589  294F  3BAB               	subwfb	___lomod@dividend+3,f
  7590  2950  0824               	movf	___lomod@divisor+4,w
  7591  2951  3BAC               	subwfb	___lomod@dividend+4,f
  7592  2952  0825               	movf	___lomod@divisor+5,w
  7593  2953  3BAD               	subwfb	___lomod@dividend+5,f
  7594  2954  0826               	movf	___lomod@divisor+6,w
  7595  2955  3BAE               	subwfb	___lomod@dividend+6,f
  7596  2956  0827               	movf	___lomod@divisor+7,w
  7597  2957  3BAF               	subwfb	___lomod@dividend+7,f
  7598  2958                     l4364:	
  7599  2958  36A7               	lsrf	___lomod@divisor+7,f
  7600  2959  0CA6               	rrf	___lomod@divisor+6,f
  7601  295A  0CA5               	rrf	___lomod@divisor+5,f
  7602  295B  0CA4               	rrf	___lomod@divisor+4,f
  7603  295C  0CA3               	rrf	___lomod@divisor+3,f
  7604  295D  0CA2               	rrf	___lomod@divisor+2,f
  7605  295E  0CA1               	rrf	___lomod@divisor+1,f
  7606  295F  0CA0               	rrf	___lomod@divisor,f
  7607  2960  3001               	movlw	1
  7608  2961  02F2               	subwf	___lomod@counter,f
  7609  2962  1D03               	btfss	3,2
  7610  2963  2928               	goto	l4360
  7611  2964                     l1264:	
  7612  2964  0828               	movf	___lomod@dividend,w
  7613  2965  00A0               	movwf	?___lomod
  7614  2966  0829               	movf	___lomod@dividend+1,w
  7615  2967  00A1               	movwf	?___lomod+1
  7616  2968  082A               	movf	___lomod@dividend+2,w
  7617  2969  00A2               	movwf	?___lomod+2
  7618  296A  082B               	movf	___lomod@dividend+3,w
  7619  296B  00A3               	movwf	?___lomod+3
  7620  296C  082C               	movf	___lomod@dividend+4,w
  7621  296D  00A4               	movwf	?___lomod+4
  7622  296E  082D               	movf	___lomod@dividend+5,w
  7623  296F  00A5               	movwf	?___lomod+5
  7624  2970  082E               	movf	___lomod@dividend+6,w
  7625  2971  00A6               	movwf	?___lomod+6
  7626  2972  082F               	movf	___lomod@dividend+7,w
  7627  2973  00A7               	movwf	?___lomod+7
  7628  2974  0008               	return
  7629  2975                     __end_of___lomod:	
  7630                           
  7631                           	psect	text15
  7632  2A68                     __ptext15:	
  7633 ;; *************** function ___lodiv *****************
  7634 ;; Defined at:
  7635 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;  divisor         8    0[BANK0 ] unsigned long long 
  7638 ;;  dividend        8    8[BANK0 ] unsigned long long 
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;  quotient        8    2[COMMON] unsigned long long 
  7641 ;;  counter         1   10[COMMON] unsigned char 
  7642 ;; Return value:  Size  Location     Type
  7643 ;;                  8    0[BANK0 ] unsigned long long 
  7644 ;; Registers used:
  7645 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7646 ;; Tracked objects:
  7647 ;;		On entry : 0/0
  7648 ;;		On exit  : 0/0
  7649 ;;		Unchanged: 0/0
  7650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7651 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7652 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7653 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7654 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7655 ;;Total ram usage:       26 bytes
  7656 ;; Hardware stack levels used:    1
  7657 ;; Hardware stack levels required when called:    1
  7658 ;; This function calls:
  7659 ;;		Nothing
  7660 ;; This function is called by:
  7661 ;;		_utoa
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           
  7666                           ;psect for function ___lodiv
  7667  2A68                     ___lodiv:	
  7668                           
  7669                           ;incstack = 0
  7670                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7671  2A68  3072               	movlw	low ___lodiv@quotient
  7672  2A69  0086               	movwf	6
  7673  2A6A  3000               	movlw	high ___lodiv@quotient
  7674  2A6B  0087               	movwf	7
  7675  2A6C  3008               	movlw	8
  7676  2A6D  00F1               	movwf	??___lodiv
  7677  2A6E  3000               	movlw	0
  7678  2A6F                     u4490:	
  7679  2A6F  001E               	movwi fsr1++
  7680  2A70  0BF1               	decfsz	??___lodiv,f
  7681  2A71  2A6F               	goto	u4490
  7682  2A72  0020               	movlb	0	; select bank0
  7683  2A73  0820               	movf	___lodiv@divisor,w
  7684  2A74  0421               	iorwf	___lodiv@divisor+1,w
  7685  2A75  0422               	iorwf	___lodiv@divisor+2,w
  7686  2A76  0423               	iorwf	___lodiv@divisor+3,w
  7687  2A77  0424               	iorwf	___lodiv@divisor+4,w
  7688  2A78  0425               	iorwf	___lodiv@divisor+5,w
  7689  2A79  0426               	iorwf	___lodiv@divisor+6,w
  7690  2A7A  0427               	iorwf	___lodiv@divisor+7,w
  7691  2A7B  1903               	skipnz
  7692  2A7C  2AD3               	goto	l1254
  7693  2A7D  01FA               	clrf	___lodiv@counter
  7694  2A7E  0AFA               	incf	___lodiv@counter,f
  7695  2A7F                     l4338:	
  7696  2A7F  1BA7               	btfsc	___lodiv@divisor+7,7
  7697  2A80  2A8E               	goto	l4340
  7698  2A81  35A0               	lslf	___lodiv@divisor,f
  7699  2A82  0DA1               	rlf	___lodiv@divisor+1,f
  7700  2A83  0DA2               	rlf	___lodiv@divisor+2,f
  7701  2A84  0DA3               	rlf	___lodiv@divisor+3,f
  7702  2A85  0DA4               	rlf	___lodiv@divisor+4,f
  7703  2A86  0DA5               	rlf	___lodiv@divisor+5,f
  7704  2A87  0DA6               	rlf	___lodiv@divisor+6,f
  7705  2A88  0DA7               	rlf	___lodiv@divisor+7,f
  7706  2A89  3001               	movlw	1
  7707  2A8A  00F1               	movwf	??___lodiv
  7708  2A8B  0871               	movf	??___lodiv,w
  7709  2A8C  07FA               	addwf	___lodiv@counter,f
  7710  2A8D  2A7F               	goto	l4338
  7711  2A8E                     l4340:	
  7712  2A8E  35F2               	lslf	___lodiv@quotient,f
  7713  2A8F  0DF3               	rlf	___lodiv@quotient+1,f
  7714  2A90  0DF4               	rlf	___lodiv@quotient+2,f
  7715  2A91  0DF5               	rlf	___lodiv@quotient+3,f
  7716  2A92  0DF6               	rlf	___lodiv@quotient+4,f
  7717  2A93  0DF7               	rlf	___lodiv@quotient+5,f
  7718  2A94  0DF8               	rlf	___lodiv@quotient+6,f
  7719  2A95  0DF9               	rlf	___lodiv@quotient+7,f
  7720  2A96  0827               	movf	___lodiv@divisor+7,w
  7721  2A97  022F               	subwf	___lodiv@dividend+7,w
  7722  2A98  1D03               	skipz
  7723  2A99  2AB4               	goto	u4525
  7724  2A9A  0826               	movf	___lodiv@divisor+6,w
  7725  2A9B  022E               	subwf	___lodiv@dividend+6,w
  7726  2A9C  1D03               	skipz
  7727  2A9D  2AB4               	goto	u4525
  7728  2A9E  0825               	movf	___lodiv@divisor+5,w
  7729  2A9F  022D               	subwf	___lodiv@dividend+5,w
  7730  2AA0  1D03               	skipz
  7731  2AA1  2AB4               	goto	u4525
  7732  2AA2  0824               	movf	___lodiv@divisor+4,w
  7733  2AA3  022C               	subwf	___lodiv@dividend+4,w
  7734  2AA4  1D03               	skipz
  7735  2AA5  2AB4               	goto	u4525
  7736  2AA6  0823               	movf	___lodiv@divisor+3,w
  7737  2AA7  022B               	subwf	___lodiv@dividend+3,w
  7738  2AA8  1D03               	skipz
  7739  2AA9  2AB4               	goto	u4525
  7740  2AAA  0822               	movf	___lodiv@divisor+2,w
  7741  2AAB  022A               	subwf	___lodiv@dividend+2,w
  7742  2AAC  1D03               	skipz
  7743  2AAD  2AB4               	goto	u4525
  7744  2AAE  0821               	movf	___lodiv@divisor+1,w
  7745  2AAF  0229               	subwf	___lodiv@dividend+1,w
  7746  2AB0  1D03               	skipz
  7747  2AB1  2AB4               	goto	u4525
  7748  2AB2  0820               	movf	___lodiv@divisor,w
  7749  2AB3  0228               	subwf	___lodiv@dividend,w
  7750  2AB4                     u4525:	
  7751  2AB4  1C03               	skipc
  7752  2AB5  2AC7               	goto	l4348
  7753  2AB6  0820               	movf	___lodiv@divisor,w
  7754  2AB7  02A8               	subwf	___lodiv@dividend,f
  7755  2AB8  0821               	movf	___lodiv@divisor+1,w
  7756  2AB9  3BA9               	subwfb	___lodiv@dividend+1,f
  7757  2ABA  0822               	movf	___lodiv@divisor+2,w
  7758  2ABB  3BAA               	subwfb	___lodiv@dividend+2,f
  7759  2ABC  0823               	movf	___lodiv@divisor+3,w
  7760  2ABD  3BAB               	subwfb	___lodiv@dividend+3,f
  7761  2ABE  0824               	movf	___lodiv@divisor+4,w
  7762  2ABF  3BAC               	subwfb	___lodiv@dividend+4,f
  7763  2AC0  0825               	movf	___lodiv@divisor+5,w
  7764  2AC1  3BAD               	subwfb	___lodiv@dividend+5,f
  7765  2AC2  0826               	movf	___lodiv@divisor+6,w
  7766  2AC3  3BAE               	subwfb	___lodiv@dividend+6,f
  7767  2AC4  0827               	movf	___lodiv@divisor+7,w
  7768  2AC5  3BAF               	subwfb	___lodiv@dividend+7,f
  7769  2AC6  1472               	bsf	___lodiv@quotient,0
  7770  2AC7                     l4348:	
  7771  2AC7  36A7               	lsrf	___lodiv@divisor+7,f
  7772  2AC8  0CA6               	rrf	___lodiv@divisor+6,f
  7773  2AC9  0CA5               	rrf	___lodiv@divisor+5,f
  7774  2ACA  0CA4               	rrf	___lodiv@divisor+4,f
  7775  2ACB  0CA3               	rrf	___lodiv@divisor+3,f
  7776  2ACC  0CA2               	rrf	___lodiv@divisor+2,f
  7777  2ACD  0CA1               	rrf	___lodiv@divisor+1,f
  7778  2ACE  0CA0               	rrf	___lodiv@divisor,f
  7779  2ACF  3001               	movlw	1
  7780  2AD0  02FA               	subwf	___lodiv@counter,f
  7781  2AD1  1D03               	btfss	3,2
  7782  2AD2  2A8E               	goto	l4340
  7783  2AD3                     l1254:	
  7784  2AD3  0872               	movf	___lodiv@quotient,w
  7785  2AD4  00A0               	movwf	?___lodiv
  7786  2AD5  0873               	movf	___lodiv@quotient+1,w
  7787  2AD6  00A1               	movwf	?___lodiv+1
  7788  2AD7  0874               	movf	___lodiv@quotient+2,w
  7789  2AD8  00A2               	movwf	?___lodiv+2
  7790  2AD9  0875               	movf	___lodiv@quotient+3,w
  7791  2ADA  00A3               	movwf	?___lodiv+3
  7792  2ADB  0876               	movf	___lodiv@quotient+4,w
  7793  2ADC  00A4               	movwf	?___lodiv+4
  7794  2ADD  0877               	movf	___lodiv@quotient+5,w
  7795  2ADE  00A5               	movwf	?___lodiv+5
  7796  2ADF  0878               	movf	___lodiv@quotient+6,w
  7797  2AE0  00A6               	movwf	?___lodiv+6
  7798  2AE1  0879               	movf	___lodiv@quotient+7,w
  7799  2AE2  00A7               	movwf	?___lodiv+7
  7800  2AE3  0008               	return
  7801  2AE4                     __end_of___lodiv:	
  7802                           
  7803                           	psect	text16
  7804  3704                     __ptext16:	
  7805 ;; *************** function _strncmp *****************
  7806 ;; Defined at:
  7807 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;  _l              2    1[COMMON] PTR const unsigned char 
  7810 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  7811 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  7812 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  7813 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  7814 ;;  _r              2    3[COMMON] PTR const unsigned char 
  7815 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_102(3), 
  7816 ;;		 -> STR_97(4), STR_93(4), STR_88(3), STR_83(3), 
  7817 ;;		 -> STR_78(4), STR_73(3), STR_68(3), STR_63(4), 
  7818 ;;		 -> STR_58(3), STR_53(3), STR_48(4), STR_43(3), 
  7819 ;;		 -> STR_39(3), STR_34(3), STR_30(3), STR_25(4), 
  7820 ;;		 -> STR_21(4), 
  7821 ;;  n               2    5[COMMON] unsigned int 
  7822 ;; Auto vars:     Size  Location     Type
  7823 ;;  r               2   10[COMMON] PTR const unsigned char 
  7824 ;;		 -> STR_115(3), STR_111(3), STR_106(3), STR_102(3), 
  7825 ;;		 -> STR_97(4), STR_93(4), STR_88(3), STR_83(3), 
  7826 ;;		 -> STR_78(4), STR_73(3), STR_68(3), STR_63(4), 
  7827 ;;		 -> STR_58(3), STR_53(3), STR_48(4), STR_43(3), 
  7828 ;;		 -> STR_39(3), STR_34(3), STR_30(3), STR_25(4), 
  7829 ;;		 -> STR_21(4), 
  7830 ;;  l               2    8[COMMON] PTR const unsigned char 
  7831 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
  7832 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
  7833 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
  7834 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  2    1[COMMON] int 
  7837 ;; Registers used:
  7838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7844 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7845 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7846 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7847 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7848 ;;Total ram usage:       11 bytes
  7849 ;; Hardware stack levels used:    1
  7850 ;; Hardware stack levels required when called:    1
  7851 ;; This function calls:
  7852 ;;		Nothing
  7853 ;; This function is called by:
  7854 ;;		_vfpfcnvrt
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           
  7859                           ;psect for function _strncmp
  7860  3704                     _strncmp:	
  7861                           
  7862                           ;incstack = 0
  7863                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  7864  3704  0872               	movf	strncmp@_l+1,w
  7865  3705  00F9               	movwf	strncmp@l+1
  7866  3706  0871               	movf	strncmp@_l,w
  7867  3707  00F8               	movwf	strncmp@l
  7868  3708  0874               	movf	strncmp@_r+1,w
  7869  3709  00FB               	movwf	strncmp@r+1
  7870  370A  0873               	movf	strncmp@_r,w
  7871  370B  00FA               	movwf	strncmp@r
  7872  370C  3001               	movlw	1
  7873  370D  02F5               	subwf	strncmp@n,f
  7874  370E  3000               	movlw	0
  7875  370F  3BF6               	subwfb	strncmp@n+1,f
  7876  3710  0A75               	incf	strncmp@n,w
  7877  3711  1D03               	skipz
  7878  3712  2F3E               	goto	l4700
  7879  3713  0A76               	incf	strncmp@n+1,w
  7880  3714  1D03               	btfss	3,2
  7881  3715  2F3E               	goto	l4700
  7882  3716  01F1               	clrf	?_strncmp
  7883  3717  01F2               	clrf	?_strncmp+1
  7884  3718  0008               	return
  7885  3719                     l4702:	
  7886  3719  087A               	movf	strncmp@r,w
  7887  371A  0084               	movwf	4
  7888  371B  087B               	movf	strncmp@r+1,w
  7889  371C  0085               	movwf	5
  7890  371D  0012               	moviw fsr0++
  7891  371E  1903               	btfsc	3,2
  7892  371F  2F45               	goto	l4708
  7893  3720  0875               	movf	strncmp@n,w
  7894  3721  0476               	iorwf	strncmp@n+1,w
  7895  3722  1903               	btfsc	3,2
  7896  3723  2F45               	goto	l4708
  7897  3724  087A               	movf	strncmp@r,w
  7898  3725  0084               	movwf	4
  7899  3726  087B               	movf	strncmp@r+1,w
  7900  3727  0085               	movwf	5
  7901  3728  0800               	movf	0,w	;code access
  7902  3729  00F7               	movwf	??_strncmp
  7903  372A  0878               	movf	strncmp@l,w
  7904  372B  0084               	movwf	4
  7905  372C  0879               	movf	strncmp@l+1,w
  7906  372D  0085               	movwf	5
  7907  372E  0800               	movf	0,w	;code access
  7908  372F  0677               	xorwf	??_strncmp,w
  7909  3730  1D03               	btfss	3,2
  7910  3731  2F45               	goto	l4708
  7911  3732  3001               	movlw	1
  7912  3733  07F8               	addwf	strncmp@l,f
  7913  3734  3000               	movlw	0
  7914  3735  3DF9               	addwfc	strncmp@l+1,f
  7915  3736  3001               	movlw	1
  7916  3737  07FA               	addwf	strncmp@r,f
  7917  3738  3000               	movlw	0
  7918  3739  3DFB               	addwfc	strncmp@r+1,f
  7919  373A  3001               	movlw	1
  7920  373B  02F5               	subwf	strncmp@n,f
  7921  373C  3000               	movlw	0
  7922  373D  3BF6               	subwfb	strncmp@n+1,f
  7923  373E                     l4700:	
  7924  373E  0878               	movf	strncmp@l,w
  7925  373F  0084               	movwf	4
  7926  3740  0879               	movf	strncmp@l+1,w
  7927  3741  0085               	movwf	5
  7928  3742  0012               	moviw fsr0++
  7929  3743  1D03               	btfss	3,2
  7930  3744  2F19               	goto	l4702
  7931  3745                     l4708:	
  7932  3745  0878               	movf	strncmp@l,w
  7933  3746  0084               	movwf	4
  7934  3747  0879               	movf	strncmp@l+1,w
  7935  3748  0085               	movwf	5
  7936  3749  0800               	movf	0,w	;code access
  7937  374A  00F7               	movwf	??_strncmp
  7938  374B  087A               	movf	strncmp@r,w
  7939  374C  0084               	movwf	4
  7940  374D  087B               	movf	strncmp@r+1,w
  7941  374E  0085               	movwf	5
  7942  374F  0800               	movf	0,w	;code access
  7943  3750  0277               	subwf	??_strncmp,w
  7944  3751  00F1               	movwf	?_strncmp
  7945  3752  01F2               	clrf	?_strncmp+1
  7946  3753  1C03               	skipc
  7947  3754  03F2               	decf	?_strncmp+1,f
  7948  3755  0008               	return
  7949  3756                     __end_of_strncmp:	
  7950                           
  7951                           	psect	text17
  7952  2F3B                     __ptext17:	
  7953 ;; *************** function _stoa *****************
  7954 ;; Defined at:
  7955 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  7958 ;;		 -> vsnprintf@f(6), 
  7959 ;;  s               2    2[BANK0 ] PTR unsigned char 
  7960 ;;		 -> ?_snprintf(2), sp__logf(4), updateTemperatures@vtsx(2), 
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;  nuls            7    4[BANK0 ] unsigned char [7]
  7963 ;;  l               2   19[BANK0 ] int 
  7964 ;;  p               2   17[BANK0 ] int 
  7965 ;;  cp              2   15[BANK0 ] PTR unsigned char 
  7966 ;;		 -> ?_snprintf(2), stoa@nuls(7), sp__logf(4), updateTemperatures@vtsx(2), 
  7967 ;;  w               2   13[BANK0 ] int 
  7968 ;;  i               2   11[BANK0 ] int 
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  2    0[BANK0 ] int 
  7971 ;; Registers used:
  7972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7978 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7979 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7980 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7981 ;;      Totals:         2      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7982 ;;Total ram usage:       23 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:    3
  7985 ;; This function calls:
  7986 ;;		_fputc
  7987 ;;		_strlen
  7988 ;; This function is called by:
  7989 ;;		_vfpfcnvrt
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993                           
  7994                           ;psect for function _stoa
  7995  2F3B                     _stoa:	
  7996                           
  7997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  7998                           
  7999                           ;incstack = 0
  8000                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8001  2F3B  304E               	movlw	low stoa@F1152
  8002  2F3C  0086               	movwf	6
  8003  2F3D  3002               	movlw	high stoa@F1152
  8004  2F3E  0087               	movwf	7
  8005  2F3F  3024               	movlw	low stoa@nuls
  8006  2F40  0084               	movwf	4
  8007  2F41  3000               	movlw	high stoa@nuls
  8008  2F42  0085               	movwf	5
  8009  2F43  3007               	movlw	7
  8010  2F44  00FA               	movwf	??_stoa
  8011  2F45                     u4870:	
  8012  2F45  0016               	moviw fsr1++
  8013  2F46  001A               	movwi fsr0++
  8014  2F47  0BFA               	decfsz	??_stoa,f
  8015  2F48  2F45               	goto	u4870
  8016                           
  8017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  8018  2F49  0020               	movlb	0	; select bank0
  8019  2F4A  0823               	movf	stoa@s+1,w
  8020  2F4B  00B0               	movwf	stoa@cp+1
  8021  2F4C  0822               	movf	stoa@s,w
  8022  2F4D  00AF               	movwf	stoa@cp
  8023                           
  8024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  8025  2F4E  082F               	movf	stoa@cp,w
  8026  2F4F  0430               	iorwf	stoa@cp+1,w
  8027  2F50  1D03               	btfss	3,2
  8028  2F51  2F56               	goto	l4502
  8029                           
  8030                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  8031  2F52  3024               	movlw	low stoa@nuls
  8032  2F53  00AF               	movwf	stoa@cp
  8033  2F54  3000               	movlw	high stoa@nuls
  8034  2F55  00B0               	movwf	stoa@cp+1
  8035  2F56                     l4502:	
  8036                           
  8037                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  8038  2F56  0830               	movf	stoa@cp+1,w
  8039  2F57  00F2               	movwf	strlen@s+1
  8040  2F58  082F               	movf	stoa@cp,w
  8041  2F59  00F1               	movwf	strlen@s
  8042  2F5A  31B2  22DF  31AF   	fcall	_strlen
  8043  2F5D  0872               	movf	?_strlen+1,w
  8044  2F5E  0020               	movlb	0	; select bank0
  8045  2F5F  00B4               	movwf	stoa@l+1
  8046  2F60  0871               	movf	?_strlen,w
  8047  2F61  00B3               	movwf	stoa@l
  8048                           
  8049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  8050  2F62  0022               	movlb	2	; select bank2
  8051  2F63  0867               	movf	(_prec+1)^(0+256),w
  8052  2F64  0020               	movlb	0	; select bank0
  8053  2F65  00B2               	movwf	stoa@p+1
  8054  2F66  0022               	movlb	2	; select bank2
  8055  2F67  0866               	movf	_prec^(0+256),w
  8056  2F68  0020               	movlb	0	; select bank0
  8057  2F69  00B1               	movwf	stoa@p
  8058                           
  8059                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  8060  2F6A  1BB2               	btfsc	stoa@p+1,7
  8061  2F6B  2F7D               	goto	l876
  8062  2F6C  0832               	movf	stoa@p+1,w
  8063  2F6D  3A80               	xorlw	128
  8064  2F6E  00FA               	movwf	??_stoa
  8065  2F6F  0834               	movf	stoa@l+1,w
  8066  2F70  3A80               	xorlw	128
  8067  2F71  027A               	subwf	??_stoa,w
  8068  2F72  1D03               	skipz
  8069  2F73  2F76               	goto	u4905
  8070  2F74  0833               	movf	stoa@l,w
  8071  2F75  0231               	subwf	stoa@p,w
  8072  2F76                     u4905:	
  8073  2F76  1803               	btfsc	3,0
  8074  2F77  2F7D               	goto	l876
  8075  2F78  0020               	movlb	0	; select bank0
  8076  2F79  0832               	movf	stoa@p+1,w
  8077  2F7A  00B4               	movwf	stoa@l+1
  8078  2F7B  0831               	movf	stoa@p,w
  8079  2F7C  00B3               	movwf	stoa@l
  8080  2F7D                     l876:	
  8081                           
  8082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  8083  2F7D  0020               	movlb	0	; select bank0
  8084  2F7E  0834               	movf	stoa@l+1,w
  8085  2F7F  00B2               	movwf	stoa@p+1
  8086  2F80  0833               	movf	stoa@l,w
  8087  2F81  00B1               	movwf	stoa@p
  8088                           
  8089                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  8090  2F82  0022               	movlb	2	; select bank2
  8091  2F83  0865               	movf	(_width+1)^(0+256),w
  8092  2F84  0020               	movlb	0	; select bank0
  8093  2F85  00AE               	movwf	stoa@w+1
  8094  2F86  0022               	movlb	2	; select bank2
  8095  2F87  0864               	movf	_width^(0+256),w
  8096  2F88  0020               	movlb	0	; select bank0
  8097  2F89  00AD               	movwf	stoa@w
  8098                           
  8099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  8100  2F8A  0022               	movlb	2	; select bank2
  8101  2F8B  1C68               	btfss	_flags^(0+256),0
  8102  2F8C  2F9F               	goto	l4520
  8103  2F8D  2FAC               	goto	l4522
  8104  2F8E                     l4516:	
  8105                           
  8106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  8107  2F8E  3020               	movlw	32
  8108  2F8F  00F1               	movwf	fputc@c
  8109  2F90  3000               	movlw	0
  8110  2F91  00F2               	movwf	fputc@c+1
  8111  2F92  0020               	movlb	0	; select bank0
  8112  2F93  0821               	movf	stoa@fp+1,w
  8113  2F94  00F4               	movwf	fputc@fp+1
  8114  2F95  0820               	movf	stoa@fp,w
  8115  2F96  00F3               	movwf	fputc@fp
  8116  2F97  31B7  2756  31AF   	fcall	_fputc
  8117                           
  8118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  8119  2F9A  3001               	movlw	1
  8120  2F9B  0020               	movlb	0	; select bank0
  8121  2F9C  07B3               	addwf	stoa@l,f
  8122  2F9D  3000               	movlw	0
  8123  2F9E  3DB4               	addwfc	stoa@l+1,f
  8124  2F9F                     l4520:	
  8125                           
  8126                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  8127  2F9F  0020               	movlb	0	; select bank0
  8128  2FA0  0834               	movf	stoa@l+1,w
  8129  2FA1  3A80               	xorlw	128
  8130  2FA2  00FA               	movwf	??_stoa
  8131  2FA3  082E               	movf	stoa@w+1,w
  8132  2FA4  3A80               	xorlw	128
  8133  2FA5  027A               	subwf	??_stoa,w
  8134  2FA6  1D03               	skipz
  8135  2FA7  2FAA               	goto	u4925
  8136  2FA8  082D               	movf	stoa@w,w
  8137  2FA9  0233               	subwf	stoa@l,w
  8138  2FAA                     u4925:	
  8139  2FAA  1C03               	skipc
  8140  2FAB  2F8E               	goto	l4516
  8141  2FAC                     l4522:	
  8142                           
  8143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  8144  2FAC  0020               	movlb	0	; select bank0
  8145  2FAD  01AB               	clrf	stoa@i
  8146  2FAE  01AC               	clrf	stoa@i+1
  8147  2FAF                     l4530:	
  8148                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8149                           
  8150                           
  8151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  8152  2FAF  082C               	movf	stoa@i+1,w
  8153  2FB0  3A80               	xorlw	128
  8154  2FB1  00FA               	movwf	??_stoa
  8155  2FB2  0832               	movf	stoa@p+1,w
  8156  2FB3  3A80               	xorlw	128
  8157  2FB4  027A               	subwf	??_stoa,w
  8158  2FB5  1D03               	skipz
  8159  2FB6  2FB9               	goto	u4935
  8160  2FB7  0831               	movf	stoa@p,w
  8161  2FB8  022B               	subwf	stoa@i,w
  8162  2FB9                     u4935:	
  8163  2FB9  1803               	btfsc	3,0
  8164  2FBA  2FD8               	goto	l885
  8165                           
  8166                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  8167  2FBB  0020               	movlb	0	; select bank0
  8168  2FBC  082F               	movf	stoa@cp,w
  8169  2FBD  0086               	movwf	6
  8170  2FBE  0830               	movf	stoa@cp+1,w
  8171  2FBF  0087               	movwf	7
  8172  2FC0  0801               	movf	1,w
  8173  2FC1  00FA               	movwf	??_stoa
  8174  2FC2  01FB               	clrf	??_stoa+1
  8175  2FC3  087A               	movf	??_stoa,w
  8176  2FC4  00F1               	movwf	fputc@c
  8177  2FC5  087B               	movf	??_stoa+1,w
  8178  2FC6  00F2               	movwf	fputc@c+1
  8179  2FC7  0821               	movf	stoa@fp+1,w
  8180  2FC8  00F4               	movwf	fputc@fp+1
  8181  2FC9  0820               	movf	stoa@fp,w
  8182  2FCA  00F3               	movwf	fputc@fp
  8183  2FCB  31B7  2756  31AF   	fcall	_fputc
  8184                           
  8185                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  8186  2FCE  3001               	movlw	1
  8187  2FCF  0020               	movlb	0	; select bank0
  8188  2FD0  07AF               	addwf	stoa@cp,f
  8189  2FD1  3000               	movlw	0
  8190  2FD2  3DB0               	addwfc	stoa@cp+1,f
  8191                           
  8192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  8193  2FD3  3001               	movlw	1
  8194  2FD4  07AB               	addwf	stoa@i,f
  8195  2FD5  3000               	movlw	0
  8196  2FD6  3DAC               	addwfc	stoa@i+1,f
  8197  2FD7  2FAF               	goto	l4530
  8198  2FD8                     l885:	
  8199                           
  8200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  8201  2FD8  0022               	movlb	2	; select bank2
  8202  2FD9  1868               	btfsc	_flags^(0+256),0
  8203  2FDA  2FED               	goto	l4538
  8204  2FDB  2FFA               	goto	l4540
  8205  2FDC                     l4534:	
  8206                           
  8207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  8208  2FDC  3020               	movlw	32
  8209  2FDD  00F1               	movwf	fputc@c
  8210  2FDE  3000               	movlw	0
  8211  2FDF  00F2               	movwf	fputc@c+1
  8212  2FE0  0020               	movlb	0	; select bank0
  8213  2FE1  0821               	movf	stoa@fp+1,w
  8214  2FE2  00F4               	movwf	fputc@fp+1
  8215  2FE3  0820               	movf	stoa@fp,w
  8216  2FE4  00F3               	movwf	fputc@fp
  8217  2FE5  31B7  2756  31AF   	fcall	_fputc
  8218                           
  8219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  8220  2FE8  3001               	movlw	1
  8221  2FE9  0020               	movlb	0	; select bank0
  8222  2FEA  07B3               	addwf	stoa@l,f
  8223  2FEB  3000               	movlw	0
  8224  2FEC  3DB4               	addwfc	stoa@l+1,f
  8225  2FED                     l4538:	
  8226                           
  8227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  8228  2FED  0020               	movlb	0	; select bank0
  8229  2FEE  0834               	movf	stoa@l+1,w
  8230  2FEF  3A80               	xorlw	128
  8231  2FF0  00FA               	movwf	??_stoa
  8232  2FF1  082E               	movf	stoa@w+1,w
  8233  2FF2  3A80               	xorlw	128
  8234  2FF3  027A               	subwf	??_stoa,w
  8235  2FF4  1D03               	skipz
  8236  2FF5  2FF8               	goto	u4955
  8237  2FF6  082D               	movf	stoa@w,w
  8238  2FF7  0233               	subwf	stoa@l,w
  8239  2FF8                     u4955:	
  8240  2FF8  1C03               	skipc
  8241  2FF9  2FDC               	goto	l4534
  8242  2FFA                     l4540:	
  8243                           
  8244                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  8245  2FFA  0020               	movlb	0	; select bank0
  8246  2FFB  0834               	movf	stoa@l+1,w
  8247  2FFC  00A1               	movwf	?_stoa+1
  8248  2FFD  0833               	movf	stoa@l,w
  8249  2FFE  00A0               	movwf	?_stoa
  8250  2FFF  0008               	return
  8251  3000                     __end_of_stoa:	
  8252                           
  8253                           	psect	text18
  8254  2522                     __ptext18:	
  8255 ;; *************** function _otoa *****************
  8256 ;; Defined at:
  8257 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8260 ;;		 -> vsnprintf@f(6), 
  8261 ;;  d               8   18[BANK0 ] unsigned long long 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  n               8   40[BANK0 ] unsigned long long 
  8264 ;;  i               2   48[BANK0 ] int 
  8265 ;;  w               2   38[BANK0 ] int 
  8266 ;;  t               2   36[BANK0 ] int 
  8267 ;;  p               2   34[BANK0 ] int 
  8268 ;; Return value:  Size  Location     Type
  8269 ;;                  2   16[BANK0 ] int 
  8270 ;; Registers used:
  8271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8272 ;; Tracked objects:
  8273 ;;		On entry : 0/0
  8274 ;;		On exit  : 0/0
  8275 ;;		Unchanged: 0/0
  8276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8277 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8278 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8279 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8280 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8281 ;;Total ram usage:       34 bytes
  8282 ;; Hardware stack levels used:    1
  8283 ;; Hardware stack levels required when called:    5
  8284 ;; This function calls:
  8285 ;;		_pad
  8286 ;; This function is called by:
  8287 ;;		_vfpfcnvrt
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           
  8292                           ;psect for function _otoa
  8293  2522                     _otoa:	
  8294                           
  8295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  8296                           
  8297                           ;incstack = 0
  8298                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8299  2522  0022               	movlb	2	; select bank2
  8300  2523  1BE7               	btfsc	(_prec+1)^(0+256),7
  8301  2524  2D29               	goto	l854
  8302                           
  8303                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  8304  2525  30FD               	movlw	253
  8305  2526  05E8               	andwf	_flags^(0+256),f
  8306  2527  30FF               	movlw	255
  8307  2528  05E9               	andwf	(_flags+1)^(0+256),f
  8308  2529                     l854:	
  8309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  8310                           
  8311                           
  8312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  8313  2529  0867               	movf	(_prec+1)^(0+256),w
  8314  252A  3A80               	xorlw	128
  8315  252B  0020               	movlb	0	; select bank0
  8316  252C  00BA               	movwf	??_otoa
  8317  252D  3080               	movlw	128
  8318  252E  023A               	subwf	??_otoa,w
  8319  252F  1D03               	skipz
  8320  2530  2D34               	goto	u8255
  8321  2531  3001               	movlw	1
  8322  2532  0022               	movlb	2	; select bank2
  8323  2533  0266               	subwf	_prec^(0+256),w
  8324  2534                     u8255:	
  8325  2534  1803               	skipnc
  8326  2535  2D3C               	goto	l6706
  8327  2536  3001               	movlw	1
  8328  2537  0020               	movlb	0	; select bank0
  8329  2538  00C2               	movwf	otoa@p
  8330  2539  3000               	movlw	0
  8331  253A  00C3               	movwf	otoa@p+1
  8332  253B  2D44               	goto	l858
  8333  253C                     l6706:	
  8334  253C  0022               	movlb	2	; select bank2
  8335  253D  0867               	movf	(_prec+1)^(0+256),w
  8336  253E  0020               	movlb	0	; select bank0
  8337  253F  00C3               	movwf	otoa@p+1
  8338  2540  0022               	movlb	2	; select bank2
  8339  2541  0866               	movf	_prec^(0+256),w
  8340  2542  0020               	movlb	0	; select bank0
  8341  2543  00C2               	movwf	otoa@p
  8342  2544                     l858:	
  8343                           
  8344                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  8345  2544  0022               	movlb	2	; select bank2
  8346  2545  0865               	movf	(_width+1)^(0+256),w
  8347  2546  0020               	movlb	0	; select bank0
  8348  2547  00C7               	movwf	otoa@w+1
  8349  2548  0022               	movlb	2	; select bank2
  8350  2549  0864               	movf	_width^(0+256),w
  8351  254A  0020               	movlb	0	; select bank0
  8352  254B  00C6               	movwf	otoa@w
  8353                           
  8354                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  8355  254C  0832               	movf	otoa@d,w
  8356  254D  00C8               	movwf	otoa@n
  8357  254E  0833               	movf	otoa@d+1,w
  8358  254F  00C9               	movwf	otoa@n+1
  8359  2550  0834               	movf	otoa@d+2,w
  8360  2551  00CA               	movwf	otoa@n+2
  8361  2552  0835               	movf	otoa@d+3,w
  8362  2553  00CB               	movwf	otoa@n+3
  8363  2554  0836               	movf	otoa@d+4,w
  8364  2555  00CC               	movwf	otoa@n+4
  8365  2556  0837               	movf	otoa@d+5,w
  8366  2557  00CD               	movwf	otoa@n+5
  8367  2558  0838               	movf	otoa@d+6,w
  8368  2559  00CE               	movwf	otoa@n+6
  8369  255A  0839               	movf	otoa@d+7,w
  8370  255B  00CF               	movwf	otoa@n+7
  8371                           
  8372                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  8373  255C  301F               	movlw	31
  8374  255D  00D0               	movwf	otoa@i
  8375  255E  3000               	movlw	0
  8376  255F  00D1               	movwf	otoa@i+1
  8377                           
  8378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  8379  2560  0024               	movlb	4	; select bank4
  8380  2561  01CD               	clrf	(_dbuf^(0+512)+31)
  8381                           
  8382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  8383  2562  0020               	movlb	0	; select bank0
  8384  2563  01C4               	clrf	otoa@t
  8385  2564  01C5               	clrf	otoa@t+1
  8386                           
  8387                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8388  2565  2DD9               	goto	l859
  8389  2566                     l6724:	
  8390  2566  0020               	movlb	0	; select bank0
  8391  2567  0848               	movf	otoa@n,w
  8392  2568  0449               	iorwf	otoa@n+1,w
  8393  2569  044A               	iorwf	otoa@n+2,w
  8394  256A  044B               	iorwf	otoa@n+3,w
  8395  256B  044C               	iorwf	otoa@n+4,w
  8396  256C  044D               	iorwf	otoa@n+5,w
  8397  256D  044E               	iorwf	otoa@n+6,w
  8398  256E  044F               	iorwf	otoa@n+7,w
  8399  256F  1D03               	skipz
  8400  2570  2D8B               	goto	l6714
  8401  2571  0843               	movf	otoa@p+1,w
  8402  2572  3A80               	xorlw	128
  8403  2573  00BA               	movwf	??_otoa
  8404  2574  3080               	movlw	128
  8405  2575  023A               	subwf	??_otoa,w
  8406  2576  1D03               	skipz
  8407  2577  2D7A               	goto	u8295
  8408  2578  3001               	movlw	1
  8409  2579  0242               	subwf	otoa@p,w
  8410  257A                     u8295:	
  8411  257A  1803               	skipnc
  8412  257B  2D8B               	goto	l6714
  8413  257C  0020               	movlb	0	; select bank0
  8414  257D  0847               	movf	otoa@w+1,w
  8415  257E  3A80               	xorlw	128
  8416  257F  00BA               	movwf	??_otoa
  8417  2580  3080               	movlw	128
  8418  2581  023A               	subwf	??_otoa,w
  8419  2582  1D03               	skipz
  8420  2583  2D86               	goto	u8305
  8421  2584  3001               	movlw	1
  8422  2585  0246               	subwf	otoa@w,w
  8423  2586                     u8305:	
  8424  2586  1C03               	skipc
  8425  2587  2DE4               	goto	l865
  8426  2588  0022               	movlb	2	; select bank2
  8427  2589  1CE8               	btfss	_flags^(0+256),1
  8428  258A  2DE4               	goto	l865
  8429  258B                     l6714:	
  8430                           
  8431                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  8432  258B  30FF               	movlw	255
  8433  258C  0020               	movlb	0	; select bank0
  8434  258D  07D0               	addwf	otoa@i,f
  8435  258E  30FF               	movlw	255
  8436  258F  3DD1               	addwfc	otoa@i+1,f
  8437                           
  8438                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  8439  2590  3007               	movlw	7
  8440  2591  0548               	andwf	otoa@n,w
  8441  2592  00C4               	movwf	otoa@t
  8442  2593  3000               	movlw	0
  8443  2594  0549               	andwf	otoa@n+1,w
  8444  2595  00C5               	movwf	otoa@t+1
  8445                           
  8446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  8447  2596  0844               	movf	otoa@t,w
  8448  2597  3E30               	addlw	48
  8449  2598  00BA               	movwf	??_otoa
  8450  2599  0850               	movf	otoa@i,w
  8451  259A  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8452  259B  0086               	movwf	6
  8453  259C  3002               	movlw	2	; select bank4/5
  8454  259D  0087               	movwf	7
  8455  259E  083A               	movf	??_otoa,w
  8456  259F  0081               	movwf	1
  8457                           
  8458                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  8459  25A0  30FF               	movlw	255
  8460  25A1  07C2               	addwf	otoa@p,f
  8461  25A2  30FF               	movlw	255
  8462  25A3  3DC3               	addwfc	otoa@p+1,f
  8463                           
  8464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  8465  25A4  30FF               	movlw	255
  8466  25A5  07C6               	addwf	otoa@w,f
  8467  25A6  30FF               	movlw	255
  8468  25A7  3DC7               	addwfc	otoa@w+1,f
  8469                           
  8470                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  8471  25A8  3048               	movlw	low otoa@n
  8472  25A9  0086               	movwf	6
  8473  25AA  3000               	movlw	high otoa@n
  8474  25AB  0087               	movwf	7
  8475  25AC  3F40               	moviw [0]fsr1
  8476  25AD  00BA               	movwf	??_otoa
  8477  25AE  3F41               	moviw [1]fsr1
  8478  25AF  00BB               	movwf	??_otoa+1
  8479  25B0  3F42               	moviw [2]fsr1
  8480  25B1  00BC               	movwf	??_otoa+2
  8481  25B2  3F43               	moviw [3]fsr1
  8482  25B3  00BD               	movwf	??_otoa+3
  8483  25B4  3F44               	moviw [4]fsr1
  8484  25B5  00BE               	movwf	??_otoa+4
  8485  25B6  3F45               	moviw [5]fsr1
  8486  25B7  00BF               	movwf	??_otoa+5
  8487  25B8  3F46               	moviw [6]fsr1
  8488  25B9  00C0               	movwf	??_otoa+6
  8489  25BA  3F47               	moviw [7]fsr1
  8490  25BB  00C1               	movwf	??_otoa+7
  8491  25BC  3003               	movlw	3
  8492  25BD                     u8265:	
  8493  25BD  0020               	movlb	0	; select bank0
  8494  25BE  36C1               	lsrf	??_otoa+7,f
  8495  25BF  0CC0               	rrf	??_otoa+6,f
  8496  25C0  0CBF               	rrf	??_otoa+5,f
  8497  25C1  0CBE               	rrf	??_otoa+4,f
  8498  25C2  0CBD               	rrf	??_otoa+3,f
  8499  25C3  0CBC               	rrf	??_otoa+2,f
  8500  25C4  0CBB               	rrf	??_otoa+1,f
  8501  25C5  0CBA               	rrf	??_otoa,f
  8502  25C6  0B89               	decfsz	9,f
  8503  25C7  2DBD               	goto	u8265
  8504  25C8  0020               	movlb	0	; select bank0
  8505  25C9  0841               	movf	??_otoa+7,w
  8506  25CA  00CF               	movwf	otoa@n+7
  8507  25CB  0840               	movf	??_otoa+6,w
  8508  25CC  00CE               	movwf	otoa@n+6
  8509  25CD  083F               	movf	??_otoa+5,w
  8510  25CE  00CD               	movwf	otoa@n+5
  8511  25CF  083E               	movf	??_otoa+4,w
  8512  25D0  00CC               	movwf	otoa@n+4
  8513  25D1  083D               	movf	??_otoa+3,w
  8514  25D2  00CB               	movwf	otoa@n+3
  8515  25D3  083C               	movf	??_otoa+2,w
  8516  25D4  00CA               	movwf	otoa@n+2
  8517  25D5  083B               	movf	??_otoa+1,w
  8518  25D6  00C9               	movwf	otoa@n+1
  8519  25D7  083A               	movf	??_otoa,w
  8520  25D8  00C8               	movwf	otoa@n
  8521  25D9                     l859:	
  8522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  8523                           
  8524                           
  8525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8526  25D9  0851               	movf	otoa@i+1,w
  8527  25DA  3A80               	xorlw	128
  8528  25DB  00BA               	movwf	??_otoa
  8529  25DC  3080               	movlw	128
  8530  25DD  023A               	subwf	??_otoa,w
  8531  25DE  1D03               	skipz
  8532  25DF  2DE2               	goto	u8275
  8533  25E0  3001               	movlw	1
  8534  25E1  0250               	subwf	otoa@i,w
  8535  25E2                     u8275:	
  8536  25E2  1803               	btfsc	3,0
  8537  25E3  2D66               	goto	l6724
  8538  25E4                     l865:	
  8539                           
  8540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  8541  25E4  0022               	movlb	2	; select bank2
  8542  25E5  1E68               	btfss	_flags^(0+256),4
  8543  25E6  2DFD               	goto	l6740
  8544  25E7  0020               	movlb	0	; select bank0
  8545  25E8  0844               	movf	otoa@t,w
  8546  25E9  0445               	iorwf	otoa@t+1,w
  8547  25EA  1903               	btfsc	3,2
  8548  25EB  2DFD               	goto	l6740
  8549                           
  8550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  8551  25EC  30FF               	movlw	255
  8552  25ED  07D0               	addwf	otoa@i,f
  8553  25EE  30FF               	movlw	255
  8554  25EF  3DD1               	addwfc	otoa@i+1,f
  8555                           
  8556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  8557  25F0  3030               	movlw	48
  8558  25F1  00BA               	movwf	??_otoa
  8559  25F2  0850               	movf	otoa@i,w
  8560  25F3  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8561  25F4  0086               	movwf	6
  8562  25F5  3002               	movlw	2	; select bank4/5
  8563  25F6  0087               	movwf	7
  8564  25F7  083A               	movf	??_otoa,w
  8565  25F8  0081               	movwf	1
  8566                           
  8567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  8568  25F9  30FF               	movlw	255
  8569  25FA  07C6               	addwf	otoa@w,f
  8570  25FB  30FF               	movlw	255
  8571  25FC  3DC7               	addwfc	otoa@w+1,f
  8572  25FD                     l6740:	
  8573                           
  8574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  8575  25FD  0020               	movlb	0	; select bank0
  8576  25FE  0831               	movf	otoa@fp+1,w
  8577  25FF  00A7               	movwf	pad@fp+1
  8578  2600  0830               	movf	otoa@fp,w
  8579  2601  00A6               	movwf	pad@fp
  8580  2602  0850               	movf	otoa@i,w
  8581  2603  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8582  2604  00BA               	movwf	??_otoa
  8583  2605  083A               	movf	??_otoa,w
  8584  2606  00A8               	movwf	pad@buf
  8585  2607  0847               	movf	otoa@w+1,w
  8586  2608  00AA               	movwf	pad@p+1
  8587  2609  0846               	movf	otoa@w,w
  8588  260A  00A9               	movwf	pad@p
  8589  260B  31B6  26B3         	fcall	_pad
  8590  260D  0020               	movlb	0	; select bank0
  8591  260E  0827               	movf	?_pad+1,w
  8592  260F  00B1               	movwf	?_otoa+1
  8593  2610  0826               	movf	?_pad,w
  8594  2611  00B0               	movwf	?_otoa
  8595  2612  0008               	return
  8596  2613                     __end_of_otoa:	
  8597                           
  8598                           	psect	text19
  8599  1A36                     __ptext19:	
  8600 ;; *************** function _dtoa *****************
  8601 ;; Defined at:
  8602 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8603 ;; Parameters:    Size  Location     Type
  8604 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8605 ;;		 -> vsnprintf@f(6), 
  8606 ;;  d               8   18[BANK0 ] long long 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;  n               8   37[BANK0 ] long long 
  8609 ;;  i               2   45[BANK0 ] int 
  8610 ;;  s               2   35[BANK0 ] int 
  8611 ;;  w               2   33[BANK0 ] int 
  8612 ;;  p               2   31[BANK0 ] int 
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  2   16[BANK0 ] int 
  8615 ;; Registers used:
  8616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8622 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8623 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8624 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8625 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8626 ;;Total ram usage:       31 bytes
  8627 ;; Hardware stack levels used:    1
  8628 ;; Hardware stack levels required when called:    5
  8629 ;; This function calls:
  8630 ;;		___aodiv
  8631 ;;		___aomod
  8632 ;;		_abs
  8633 ;;		_pad
  8634 ;; This function is called by:
  8635 ;;		_vfpfcnvrt
  8636 ;; This function uses a non-reentrant model
  8637 ;;
  8638                           
  8639                           
  8640                           ;psect for function _dtoa
  8641  1A36                     _dtoa:	
  8642                           
  8643                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  8644                           
  8645                           ;incstack = 0
  8646                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8647  1A36  0020               	movlb	0	; select bank0
  8648  1A37  0832               	movf	dtoa@d,w
  8649  1A38  00C5               	movwf	dtoa@n
  8650  1A39  0833               	movf	dtoa@d+1,w
  8651  1A3A  00C6               	movwf	dtoa@n+1
  8652  1A3B  0834               	movf	dtoa@d+2,w
  8653  1A3C  00C7               	movwf	dtoa@n+2
  8654  1A3D  0835               	movf	dtoa@d+3,w
  8655  1A3E  00C8               	movwf	dtoa@n+3
  8656  1A3F  0836               	movf	dtoa@d+4,w
  8657  1A40  00C9               	movwf	dtoa@n+4
  8658  1A41  0837               	movf	dtoa@d+5,w
  8659  1A42  00CA               	movwf	dtoa@n+5
  8660  1A43  0838               	movf	dtoa@d+6,w
  8661  1A44  00CB               	movwf	dtoa@n+6
  8662  1A45  0839               	movf	dtoa@d+7,w
  8663  1A46  00CC               	movwf	dtoa@n+7
  8664                           
  8665                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  8666  1A47  3045               	movlw	low dtoa@n
  8667  1A48  0086               	movwf	6
  8668  1A49  3000               	movlw	high dtoa@n
  8669  1A4A  0087               	movwf	7
  8670  1A4B  3F47               	moviw [7]fsr1
  8671  1A4C  00BA               	movwf	??_dtoa
  8672  1A4D  1FBA               	btfss	??_dtoa,7
  8673  1A4E  2A51               	goto	u8080
  8674  1A4F  3001               	movlw	1
  8675  1A50  2A52               	goto	u8090
  8676  1A51                     u8080:	
  8677  1A51  3000               	movlw	0
  8678  1A52                     u8090:	
  8679  1A52  0020               	movlb	0	; select bank0
  8680  1A53  00BB               	movwf	??_dtoa+1
  8681  1A54  01BC               	clrf	??_dtoa+2
  8682  1A55  083B               	movf	??_dtoa+1,w
  8683  1A56  00C3               	movwf	dtoa@s
  8684  1A57  083C               	movf	??_dtoa+2,w
  8685  1A58  00C4               	movwf	dtoa@s+1
  8686                           
  8687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  8688  1A59  0843               	movf	dtoa@s,w
  8689  1A5A  0444               	iorwf	dtoa@s+1,w
  8690  1A5B  1903               	btfsc	3,2
  8691  1A5C  2A7B               	goto	l828
  8692                           
  8693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  8694  1A5D  09C5               	comf	dtoa@n,f
  8695  1A5E  09C6               	comf	dtoa@n+1,f
  8696  1A5F  09C7               	comf	dtoa@n+2,f
  8697  1A60  09C8               	comf	dtoa@n+3,f
  8698  1A61  09C9               	comf	dtoa@n+4,f
  8699  1A62  09CA               	comf	dtoa@n+5,f
  8700  1A63  09CB               	comf	dtoa@n+6,f
  8701  1A64  09CC               	comf	dtoa@n+7,f
  8702  1A65  0AC5               	incf	dtoa@n,f
  8703  1A66  1D03               	skipz
  8704  1A67  2A7B               	goto	l828
  8705  1A68  0AC6               	incf	dtoa@n+1,f
  8706  1A69  1D03               	skipz
  8707  1A6A  2A7B               	goto	l828
  8708  1A6B  0AC7               	incf	dtoa@n+2,f
  8709  1A6C  1D03               	skipz
  8710  1A6D  2A7B               	goto	l828
  8711  1A6E  0AC8               	incf	dtoa@n+3,f
  8712  1A6F  1D03               	skipz
  8713  1A70  2A7B               	goto	l828
  8714  1A71  0AC9               	incf	dtoa@n+4,f
  8715  1A72  1D03               	skipz
  8716  1A73  2A7B               	goto	l828
  8717  1A74  0ACA               	incf	dtoa@n+5,f
  8718  1A75  1D03               	skipz
  8719  1A76  2A7B               	goto	l828
  8720  1A77  0ACB               	incf	dtoa@n+6,f
  8721  1A78  1D03               	skipz
  8722  1A79  2A7B               	goto	l828
  8723  1A7A  0ACC               	incf	dtoa@n+7,f
  8724  1A7B                     l828:	
  8725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  8726                           
  8727                           
  8728                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  8729  1A7B  0022               	movlb	2	; select bank2
  8730  1A7C  1BE7               	btfsc	(_prec+1)^(0+256),7
  8731  1A7D  2A82               	goto	l829
  8732                           
  8733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  8734  1A7E  30FD               	movlw	253
  8735  1A7F  05E8               	andwf	_flags^(0+256),f
  8736  1A80  30FF               	movlw	255
  8737  1A81  05E9               	andwf	(_flags+1)^(0+256),f
  8738  1A82                     l829:	
  8739                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  8740                           
  8741                           
  8742                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  8743  1A82  0867               	movf	(_prec+1)^(0+256),w
  8744  1A83  3A80               	xorlw	128
  8745  1A84  0020               	movlb	0	; select bank0
  8746  1A85  00BA               	movwf	??_dtoa
  8747  1A86  3080               	movlw	128
  8748  1A87  023A               	subwf	??_dtoa,w
  8749  1A88  1D03               	skipz
  8750  1A89  2A8D               	goto	u8135
  8751  1A8A  3001               	movlw	1
  8752  1A8B  0022               	movlb	2	; select bank2
  8753  1A8C  0266               	subwf	_prec^(0+256),w
  8754  1A8D                     u8135:	
  8755  1A8D  1803               	skipnc
  8756  1A8E  2A95               	goto	l6654
  8757  1A8F  3001               	movlw	1
  8758  1A90  0020               	movlb	0	; select bank0
  8759  1A91  00BF               	movwf	dtoa@p
  8760  1A92  3000               	movlw	0
  8761  1A93  00C0               	movwf	dtoa@p+1
  8762  1A94  2A9D               	goto	l833
  8763  1A95                     l6654:	
  8764  1A95  0022               	movlb	2	; select bank2
  8765  1A96  0867               	movf	(_prec+1)^(0+256),w
  8766  1A97  0020               	movlb	0	; select bank0
  8767  1A98  00C0               	movwf	dtoa@p+1
  8768  1A99  0022               	movlb	2	; select bank2
  8769  1A9A  0866               	movf	_prec^(0+256),w
  8770  1A9B  0020               	movlb	0	; select bank0
  8771  1A9C  00BF               	movwf	dtoa@p
  8772  1A9D                     l833:	
  8773                           
  8774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  8775  1A9D  0022               	movlb	2	; select bank2
  8776  1A9E  0865               	movf	(_width+1)^(0+256),w
  8777  1A9F  0020               	movlb	0	; select bank0
  8778  1AA0  00C2               	movwf	dtoa@w+1
  8779  1AA1  0022               	movlb	2	; select bank2
  8780  1AA2  0864               	movf	_width^(0+256),w
  8781  1AA3  0020               	movlb	0	; select bank0
  8782  1AA4  00C1               	movwf	dtoa@w
  8783                           
  8784                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  8785  1AA5  0843               	movf	dtoa@s,w
  8786  1AA6  0444               	iorwf	dtoa@s+1,w
  8787  1AA7  1D03               	btfss	3,2
  8788  1AA8  2AAC               	goto	l6660
  8789  1AA9  0022               	movlb	2	; select bank2
  8790  1AAA  1D68               	btfss	_flags^(0+256),2
  8791  1AAB  2AB1               	goto	l834
  8792  1AAC                     l6660:	
  8793                           
  8794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  8795  1AAC  30FF               	movlw	255
  8796  1AAD  0020               	movlb	0	; select bank0
  8797  1AAE  07C1               	addwf	dtoa@w,f
  8798  1AAF  30FF               	movlw	255
  8799  1AB0  3DC2               	addwfc	dtoa@w+1,f
  8800  1AB1                     l834:	
  8801                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  8802                           
  8803                           
  8804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  8805  1AB1  301F               	movlw	31
  8806  1AB2  0020               	movlb	0	; select bank0
  8807  1AB3  00CD               	movwf	dtoa@i
  8808  1AB4  3000               	movlw	0
  8809  1AB5  00CE               	movwf	dtoa@i+1
  8810                           
  8811                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  8812  1AB6  0024               	movlb	4	; select bank4
  8813  1AB7  01CD               	clrf	(_dbuf^(0+512)+31)
  8814                           
  8815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8816  1AB8  2B47               	goto	l837
  8817  1AB9                     l6674:	
  8818  1AB9  0020               	movlb	0	; select bank0
  8819  1ABA  0845               	movf	dtoa@n,w
  8820  1ABB  0446               	iorwf	dtoa@n+1,w
  8821  1ABC  0447               	iorwf	dtoa@n+2,w
  8822  1ABD  0448               	iorwf	dtoa@n+3,w
  8823  1ABE  0449               	iorwf	dtoa@n+4,w
  8824  1ABF  044A               	iorwf	dtoa@n+5,w
  8825  1AC0  044B               	iorwf	dtoa@n+6,w
  8826  1AC1  044C               	iorwf	dtoa@n+7,w
  8827  1AC2  1D03               	skipz
  8828  1AC3  2ADE               	goto	l6664
  8829  1AC4  0840               	movf	dtoa@p+1,w
  8830  1AC5  3A80               	xorlw	128
  8831  1AC6  00BA               	movwf	??_dtoa
  8832  1AC7  3080               	movlw	128
  8833  1AC8  023A               	subwf	??_dtoa,w
  8834  1AC9  1D03               	skipz
  8835  1ACA  2ACD               	goto	u8185
  8836  1ACB  3001               	movlw	1
  8837  1ACC  023F               	subwf	dtoa@p,w
  8838  1ACD                     u8185:	
  8839  1ACD  1803               	skipnc
  8840  1ACE  2ADE               	goto	l6664
  8841  1ACF  0020               	movlb	0	; select bank0
  8842  1AD0  0842               	movf	dtoa@w+1,w
  8843  1AD1  3A80               	xorlw	128
  8844  1AD2  00BA               	movwf	??_dtoa
  8845  1AD3  3080               	movlw	128
  8846  1AD4  023A               	subwf	??_dtoa,w
  8847  1AD5  1D03               	skipz
  8848  1AD6  2AD9               	goto	u8195
  8849  1AD7  3001               	movlw	1
  8850  1AD8  0241               	subwf	dtoa@w,w
  8851  1AD9                     u8195:	
  8852  1AD9  1C03               	skipc
  8853  1ADA  2B53               	goto	l6682
  8854  1ADB  0022               	movlb	2	; select bank2
  8855  1ADC  1CE8               	btfss	_flags^(0+256),1
  8856  1ADD  2B53               	goto	l6682
  8857  1ADE                     l6664:	
  8858                           
  8859                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  8860  1ADE  30FF               	movlw	255
  8861  1ADF  0020               	movlb	0	; select bank0
  8862  1AE0  07CD               	addwf	dtoa@i,f
  8863  1AE1  30FF               	movlw	255
  8864  1AE2  3DCE               	addwfc	dtoa@i+1,f
  8865                           
  8866                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  8867  1AE3  300A               	movlw	10
  8868  1AE4  00A0               	movwf	___aomod@divisor
  8869  1AE5  01A1               	clrf	___aomod@divisor+1
  8870  1AE6  01A2               	clrf	___aomod@divisor+2
  8871  1AE7  01A3               	clrf	___aomod@divisor+3
  8872  1AE8  01A4               	clrf	___aomod@divisor+4
  8873  1AE9  01A5               	clrf	___aomod@divisor+5
  8874  1AEA  01A6               	clrf	___aomod@divisor+6
  8875  1AEB  01A7               	clrf	___aomod@divisor+7
  8876  1AEC  0845               	movf	dtoa@n,w
  8877  1AED  00A8               	movwf	___aomod@dividend
  8878  1AEE  0846               	movf	dtoa@n+1,w
  8879  1AEF  00A9               	movwf	___aomod@dividend+1
  8880  1AF0  0847               	movf	dtoa@n+2,w
  8881  1AF1  00AA               	movwf	___aomod@dividend+2
  8882  1AF2  0848               	movf	dtoa@n+3,w
  8883  1AF3  00AB               	movwf	___aomod@dividend+3
  8884  1AF4  0849               	movf	dtoa@n+4,w
  8885  1AF5  00AC               	movwf	___aomod@dividend+4
  8886  1AF6  084A               	movf	dtoa@n+5,w
  8887  1AF7  00AD               	movwf	___aomod@dividend+5
  8888  1AF8  084B               	movf	dtoa@n+6,w
  8889  1AF9  00AE               	movwf	___aomod@dividend+6
  8890  1AFA  084C               	movf	dtoa@n+7,w
  8891  1AFB  00AF               	movwf	___aomod@dividend+7
  8892  1AFC  31A3  2365  319A   	fcall	___aomod
  8893  1AFF  0020               	movlb	0	; select bank0
  8894  1B00  0821               	movf	?___aomod+1,w
  8895  1B01  00F5               	movwf	abs@a+1
  8896  1B02  0820               	movf	?___aomod,w
  8897  1B03  00F4               	movwf	abs@a
  8898  1B04  31B2  22F6  319A   	fcall	_abs
  8899  1B07  0874               	movf	?_abs,w
  8900  1B08  3E30               	addlw	48
  8901  1B09  0020               	movlb	0	; select bank0
  8902  1B0A  00BA               	movwf	??_dtoa
  8903  1B0B  084D               	movf	dtoa@i,w
  8904  1B0C  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8905  1B0D  0086               	movwf	6
  8906  1B0E  3002               	movlw	2	; select bank4/5
  8907  1B0F  0087               	movwf	7
  8908  1B10  083A               	movf	??_dtoa,w
  8909  1B11  0081               	movwf	1
  8910                           
  8911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  8912  1B12  30FF               	movlw	255
  8913  1B13  07BF               	addwf	dtoa@p,f
  8914  1B14  30FF               	movlw	255
  8915  1B15  3DC0               	addwfc	dtoa@p+1,f
  8916                           
  8917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  8918  1B16  30FF               	movlw	255
  8919  1B17  07C1               	addwf	dtoa@w,f
  8920  1B18  30FF               	movlw	255
  8921  1B19  3DC2               	addwfc	dtoa@w+1,f
  8922                           
  8923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  8924  1B1A  300A               	movlw	10
  8925  1B1B  00A0               	movwf	___aodiv@divisor
  8926  1B1C  01A1               	clrf	___aodiv@divisor+1
  8927  1B1D  01A2               	clrf	___aodiv@divisor+2
  8928  1B1E  01A3               	clrf	___aodiv@divisor+3
  8929  1B1F  01A4               	clrf	___aodiv@divisor+4
  8930  1B20  01A5               	clrf	___aodiv@divisor+5
  8931  1B21  01A6               	clrf	___aodiv@divisor+6
  8932  1B22  01A7               	clrf	___aodiv@divisor+7
  8933  1B23  0845               	movf	dtoa@n,w
  8934  1B24  00A8               	movwf	___aodiv@dividend
  8935  1B25  0846               	movf	dtoa@n+1,w
  8936  1B26  00A9               	movwf	___aodiv@dividend+1
  8937  1B27  0847               	movf	dtoa@n+2,w
  8938  1B28  00AA               	movwf	___aodiv@dividend+2
  8939  1B29  0848               	movf	dtoa@n+3,w
  8940  1B2A  00AB               	movwf	___aodiv@dividend+3
  8941  1B2B  0849               	movf	dtoa@n+4,w
  8942  1B2C  00AC               	movwf	___aodiv@dividend+4
  8943  1B2D  084A               	movf	dtoa@n+5,w
  8944  1B2E  00AD               	movwf	___aodiv@dividend+5
  8945  1B2F  084B               	movf	dtoa@n+6,w
  8946  1B30  00AE               	movwf	___aodiv@dividend+6
  8947  1B31  084C               	movf	dtoa@n+7,w
  8948  1B32  00AF               	movwf	___aodiv@dividend+7
  8949  1B33  31A6  2613  319A   	fcall	___aodiv
  8950  1B36  0020               	movlb	0	; select bank0
  8951  1B37  0820               	movf	?___aodiv,w
  8952  1B38  00C5               	movwf	dtoa@n
  8953  1B39  0821               	movf	?___aodiv+1,w
  8954  1B3A  00C6               	movwf	dtoa@n+1
  8955  1B3B  0822               	movf	?___aodiv+2,w
  8956  1B3C  00C7               	movwf	dtoa@n+2
  8957  1B3D  0823               	movf	?___aodiv+3,w
  8958  1B3E  00C8               	movwf	dtoa@n+3
  8959  1B3F  0824               	movf	?___aodiv+4,w
  8960  1B40  00C9               	movwf	dtoa@n+4
  8961  1B41  0825               	movf	?___aodiv+5,w
  8962  1B42  00CA               	movwf	dtoa@n+5
  8963  1B43  0826               	movf	?___aodiv+6,w
  8964  1B44  00CB               	movwf	dtoa@n+6
  8965  1B45  0827               	movf	?___aodiv+7,w
  8966  1B46  00CC               	movwf	dtoa@n+7
  8967  1B47                     l837:	
  8968                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  8969                           
  8970                           
  8971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8972  1B47  0020               	movlb	0	; select bank0
  8973  1B48  084E               	movf	dtoa@i+1,w
  8974  1B49  3A80               	xorlw	128
  8975  1B4A  00BA               	movwf	??_dtoa
  8976  1B4B  3080               	movlw	128
  8977  1B4C  023A               	subwf	??_dtoa,w
  8978  1B4D  1D03               	skipz
  8979  1B4E  2B51               	goto	u8165
  8980  1B4F  3001               	movlw	1
  8981  1B50  024D               	subwf	dtoa@i,w
  8982  1B51                     u8165:	
  8983  1B51  1803               	btfsc	3,0
  8984  1B52  2AB9               	goto	l6674
  8985  1B53                     l6682:	
  8986                           
  8987                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  8988  1B53  0020               	movlb	0	; select bank0
  8989  1B54  0843               	movf	dtoa@s,w
  8990  1B55  0444               	iorwf	dtoa@s+1,w
  8991  1B56  1D03               	btfss	3,2
  8992  1B57  2B5B               	goto	l6686
  8993  1B58  0022               	movlb	2	; select bank2
  8994  1B59  1D68               	btfss	_flags^(0+256),2
  8995  1B5A  2B73               	goto	l6696
  8996  1B5B                     l6686:	
  8997                           
  8998                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  8999  1B5B  30FF               	movlw	255
  9000  1B5C  0020               	movlb	0	; select bank0
  9001  1B5D  07CD               	addwf	dtoa@i,f
  9002  1B5E  30FF               	movlw	255
  9003  1B5F  3DCE               	addwfc	dtoa@i+1,f
  9004                           
  9005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  9006  1B60  0843               	movf	dtoa@s,w
  9007  1B61  0444               	iorwf	dtoa@s+1,w
  9008  1B62  1D03               	btfss	3,2
  9009  1B63  2B66               	goto	l6692
  9010  1B64  302B               	movlw	43
  9011  1B65  2B67               	goto	L2
  9012  1B66                     l6692:	
  9013  1B66  302D               	movlw	45
  9014  1B67                     L2:	
  9015  1B67  00BD               	movwf	_dtoa$1317
  9016  1B68  3000               	movlw	0
  9017  1B69  00BE               	movwf	_dtoa$1317+1
  9018  1B6A  083D               	movf	_dtoa$1317,w
  9019  1B6B  00BA               	movwf	??_dtoa
  9020  1B6C  084D               	movf	dtoa@i,w
  9021  1B6D  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9022  1B6E  0086               	movwf	6
  9023  1B6F  3002               	movlw	2	; select bank4/5
  9024  1B70  0087               	movwf	7
  9025  1B71  083A               	movf	??_dtoa,w
  9026  1B72  0081               	movwf	1
  9027  1B73                     l6696:	
  9028                           
  9029                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  9030  1B73  0020               	movlb	0	; select bank0
  9031  1B74  0831               	movf	dtoa@fp+1,w
  9032  1B75  00A7               	movwf	pad@fp+1
  9033  1B76  0830               	movf	dtoa@fp,w
  9034  1B77  00A6               	movwf	pad@fp
  9035  1B78  084D               	movf	dtoa@i,w
  9036  1B79  3E2E               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9037  1B7A  00BA               	movwf	??_dtoa
  9038  1B7B  083A               	movf	??_dtoa,w
  9039  1B7C  00A8               	movwf	pad@buf
  9040  1B7D  0842               	movf	dtoa@w+1,w
  9041  1B7E  00AA               	movwf	pad@p+1
  9042  1B7F  0841               	movf	dtoa@w,w
  9043  1B80  00A9               	movwf	pad@p
  9044  1B81  31B6  26B3         	fcall	_pad
  9045  1B83  0020               	movlb	0	; select bank0
  9046  1B84  0827               	movf	?_pad+1,w
  9047  1B85  00B1               	movwf	?_dtoa+1
  9048  1B86  0826               	movf	?_pad,w
  9049  1B87  00B0               	movwf	?_dtoa
  9050  1B88  0008               	return
  9051  1B89                     __end_of_dtoa:	
  9052                           
  9053                           	psect	text20
  9054  32F6                     __ptext20:	
  9055 ;; *************** function _abs *****************
  9056 ;; Defined at:
  9057 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  9058 ;; Parameters:    Size  Location     Type
  9059 ;;  a               2    4[COMMON] int 
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;		None
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  2    4[COMMON] int 
  9064 ;; Registers used:
  9065 ;;		wreg, status,2, status,0
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9071 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9073 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9074 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9075 ;;Total ram usage:        4 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; Hardware stack levels required when called:    1
  9078 ;; This function calls:
  9079 ;;		Nothing
  9080 ;; This function is called by:
  9081 ;;		_dtoa
  9082 ;; This function uses a non-reentrant model
  9083 ;;
  9084                           
  9085                           
  9086                           ;psect for function _abs
  9087  32F6                     _abs:	
  9088                           
  9089                           ;incstack = 0
  9090                           ; Regs used in _abs: [wreg+status,2+status,0]
  9091  32F6  0875               	movf	abs@a+1,w
  9092  32F7  3A80               	xorlw	128
  9093  32F8  00F6               	movwf	??_abs
  9094  32F9  3080               	movlw	128
  9095  32FA  0276               	subwf	??_abs,w
  9096  32FB  1D03               	skipz
  9097  32FC  2AFF               	goto	u4145
  9098  32FD  3001               	movlw	1
  9099  32FE  0274               	subwf	abs@a,w
  9100  32FF                     u4145:	
  9101  32FF  1803               	skipnc
  9102  3300  0008               	return
  9103  3301  0974               	comf	abs@a,w
  9104  3302  00F6               	movwf	??_abs
  9105  3303  0975               	comf	abs@a+1,w
  9106  3304  00F7               	movwf	??_abs+1
  9107  3305  0AF6               	incf	??_abs,f
  9108  3306  1903               	skipnz
  9109  3307  0AF7               	incf	??_abs+1,f
  9110  3308  0876               	movf	??_abs,w
  9111  3309  00F4               	movwf	?_abs
  9112  330A  0877               	movf	??_abs+1,w
  9113  330B  00F5               	movwf	?_abs+1
  9114  330C  0008               	return
  9115  330D                     __end_of_abs:	
  9116                           
  9117                           	psect	text21
  9118  2365                     __ptext21:	
  9119 ;; *************** function ___aomod *****************
  9120 ;; Defined at:
  9121 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;  divisor         8    0[BANK0 ] long long 
  9124 ;;  dividend        8    8[BANK0 ] long long 
  9125 ;; Auto vars:     Size  Location     Type
  9126 ;;  sign            1    3[COMMON] unsigned char 
  9127 ;;  counter         1    2[COMMON] unsigned char 
  9128 ;; Return value:  Size  Location     Type
  9129 ;;                  8    0[BANK0 ] long long 
  9130 ;; Registers used:
  9131 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9132 ;; Tracked objects:
  9133 ;;		On entry : 0/0
  9134 ;;		On exit  : 0/0
  9135 ;;		Unchanged: 0/0
  9136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9137 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9139 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9140 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9141 ;;Total ram usage:       19 bytes
  9142 ;; Hardware stack levels used:    1
  9143 ;; Hardware stack levels required when called:    1
  9144 ;; This function calls:
  9145 ;;		Nothing
  9146 ;; This function is called by:
  9147 ;;		_dtoa
  9148 ;; This function uses a non-reentrant model
  9149 ;;
  9150                           
  9151                           
  9152                           ;psect for function ___aomod
  9153  2365                     ___aomod:	
  9154                           
  9155                           ;incstack = 0
  9156                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9157  2365  01F3               	clrf	___aomod@sign
  9158  2366  3028               	movlw	low ___aomod@dividend
  9159  2367  0086               	movwf	6
  9160  2368  3000               	movlw	high ___aomod@dividend
  9161  2369  0087               	movwf	7
  9162  236A  3F47               	moviw [7]fsr1
  9163  236B  00F1               	movwf	??___aomod
  9164  236C  1FF1               	btfss	??___aomod,7
  9165  236D  2B8F               	goto	l4304
  9166  236E  0020               	movlb	0	; select bank0
  9167  236F  09A8               	comf	___aomod@dividend,f
  9168  2370  09A9               	comf	___aomod@dividend+1,f
  9169  2371  09AA               	comf	___aomod@dividend+2,f
  9170  2372  09AB               	comf	___aomod@dividend+3,f
  9171  2373  09AC               	comf	___aomod@dividend+4,f
  9172  2374  09AD               	comf	___aomod@dividend+5,f
  9173  2375  09AE               	comf	___aomod@dividend+6,f
  9174  2376  09AF               	comf	___aomod@dividend+7,f
  9175  2377  0AA8               	incf	___aomod@dividend,f
  9176  2378  1D03               	skipz
  9177  2379  2B8D               	goto	u440lld
  9178  237A  0AA9               	incf	___aomod@dividend+1,f
  9179  237B  1D03               	skipz
  9180  237C  2B8D               	goto	u440lld
  9181  237D  0AAA               	incf	___aomod@dividend+2,f
  9182  237E  1D03               	skipz
  9183  237F  2B8D               	goto	u440lld
  9184  2380  0AAB               	incf	___aomod@dividend+3,f
  9185  2381  1D03               	skipz
  9186  2382  2B8D               	goto	u440lld
  9187  2383  0AAC               	incf	___aomod@dividend+4,f
  9188  2384  1D03               	skipz
  9189  2385  2B8D               	goto	u440lld
  9190  2386  0AAD               	incf	___aomod@dividend+5,f
  9191  2387  1D03               	skipz
  9192  2388  2B8D               	goto	u440lld
  9193  2389  0AAE               	incf	___aomod@dividend+6,f
  9194  238A  1D03               	skipz
  9195  238B  2B8D               	goto	u440lld
  9196  238C  0AAF               	incf	___aomod@dividend+7,f
  9197  238D                     u440lld:	
  9198  238D  01F3               	clrf	___aomod@sign
  9199  238E  0AF3               	incf	___aomod@sign,f
  9200  238F                     l4304:	
  9201  238F  3020               	movlw	low ___aomod@divisor
  9202  2390  0086               	movwf	6
  9203  2391  3000               	movlw	high ___aomod@divisor
  9204  2392  0087               	movwf	7
  9205  2393  3F47               	moviw [7]fsr1
  9206  2394  00F1               	movwf	??___aomod
  9207  2395  1FF1               	btfss	??___aomod,7
  9208  2396  2BB6               	goto	l4308
  9209  2397  0020               	movlb	0	; select bank0
  9210  2398  09A0               	comf	___aomod@divisor,f
  9211  2399  09A1               	comf	___aomod@divisor+1,f
  9212  239A  09A2               	comf	___aomod@divisor+2,f
  9213  239B  09A3               	comf	___aomod@divisor+3,f
  9214  239C  09A4               	comf	___aomod@divisor+4,f
  9215  239D  09A5               	comf	___aomod@divisor+5,f
  9216  239E  09A6               	comf	___aomod@divisor+6,f
  9217  239F  09A7               	comf	___aomod@divisor+7,f
  9218  23A0  0AA0               	incf	___aomod@divisor,f
  9219  23A1  1D03               	skipz
  9220  23A2  2BB6               	goto	l4308
  9221  23A3  0AA1               	incf	___aomod@divisor+1,f
  9222  23A4  1D03               	skipz
  9223  23A5  2BB6               	goto	l4308
  9224  23A6  0AA2               	incf	___aomod@divisor+2,f
  9225  23A7  1D03               	skipz
  9226  23A8  2BB6               	goto	l4308
  9227  23A9  0AA3               	incf	___aomod@divisor+3,f
  9228  23AA  1D03               	skipz
  9229  23AB  2BB6               	goto	l4308
  9230  23AC  0AA4               	incf	___aomod@divisor+4,f
  9231  23AD  1D03               	skipz
  9232  23AE  2BB6               	goto	l4308
  9233  23AF  0AA5               	incf	___aomod@divisor+5,f
  9234  23B0  1D03               	skipz
  9235  23B1  2BB6               	goto	l4308
  9236  23B2  0AA6               	incf	___aomod@divisor+6,f
  9237  23B3  1D03               	skipz
  9238  23B4  2BB6               	goto	l4308
  9239  23B5  0AA7               	incf	___aomod@divisor+7,f
  9240  23B6                     l4308:	
  9241  23B6  0020               	movlb	0	; select bank0
  9242  23B7  0820               	movf	___aomod@divisor,w
  9243  23B8  0421               	iorwf	___aomod@divisor+1,w
  9244  23B9  0422               	iorwf	___aomod@divisor+2,w
  9245  23BA  0423               	iorwf	___aomod@divisor+3,w
  9246  23BB  0424               	iorwf	___aomod@divisor+4,w
  9247  23BC  0425               	iorwf	___aomod@divisor+5,w
  9248  23BD  0426               	iorwf	___aomod@divisor+6,w
  9249  23BE  0427               	iorwf	___aomod@divisor+7,w
  9250  23BF  1903               	skipnz
  9251  23C0  2C0E               	goto	l4324
  9252  23C1  01F2               	clrf	___aomod@counter
  9253  23C2  0AF2               	incf	___aomod@counter,f
  9254  23C3                     l4316:	
  9255  23C3  1BA7               	btfsc	___aomod@divisor+7,7
  9256  23C4  2BD2               	goto	l4318
  9257  23C5  35A0               	lslf	___aomod@divisor,f
  9258  23C6  0DA1               	rlf	___aomod@divisor+1,f
  9259  23C7  0DA2               	rlf	___aomod@divisor+2,f
  9260  23C8  0DA3               	rlf	___aomod@divisor+3,f
  9261  23C9  0DA4               	rlf	___aomod@divisor+4,f
  9262  23CA  0DA5               	rlf	___aomod@divisor+5,f
  9263  23CB  0DA6               	rlf	___aomod@divisor+6,f
  9264  23CC  0DA7               	rlf	___aomod@divisor+7,f
  9265  23CD  3001               	movlw	1
  9266  23CE  00F1               	movwf	??___aomod
  9267  23CF  0871               	movf	??___aomod,w
  9268  23D0  07F2               	addwf	___aomod@counter,f
  9269  23D1  2BC3               	goto	l4316
  9270  23D2                     l4318:	
  9271  23D2  0827               	movf	___aomod@divisor+7,w
  9272  23D3  022F               	subwf	___aomod@dividend+7,w
  9273  23D4  1D03               	skipz
  9274  23D5  2BF0               	goto	u4455
  9275  23D6  0826               	movf	___aomod@divisor+6,w
  9276  23D7  022E               	subwf	___aomod@dividend+6,w
  9277  23D8  1D03               	skipz
  9278  23D9  2BF0               	goto	u4455
  9279  23DA  0825               	movf	___aomod@divisor+5,w
  9280  23DB  022D               	subwf	___aomod@dividend+5,w
  9281  23DC  1D03               	skipz
  9282  23DD  2BF0               	goto	u4455
  9283  23DE  0824               	movf	___aomod@divisor+4,w
  9284  23DF  022C               	subwf	___aomod@dividend+4,w
  9285  23E0  1D03               	skipz
  9286  23E1  2BF0               	goto	u4455
  9287  23E2  0823               	movf	___aomod@divisor+3,w
  9288  23E3  022B               	subwf	___aomod@dividend+3,w
  9289  23E4  1D03               	skipz
  9290  23E5  2BF0               	goto	u4455
  9291  23E6  0822               	movf	___aomod@divisor+2,w
  9292  23E7  022A               	subwf	___aomod@dividend+2,w
  9293  23E8  1D03               	skipz
  9294  23E9  2BF0               	goto	u4455
  9295  23EA  0821               	movf	___aomod@divisor+1,w
  9296  23EB  0229               	subwf	___aomod@dividend+1,w
  9297  23EC  1D03               	skipz
  9298  23ED  2BF0               	goto	u4455
  9299  23EE  0820               	movf	___aomod@divisor,w
  9300  23EF  0228               	subwf	___aomod@dividend,w
  9301  23F0                     u4455:	
  9302  23F0  1C03               	skipc
  9303  23F1  2C02               	goto	l4322
  9304  23F2  0820               	movf	___aomod@divisor,w
  9305  23F3  02A8               	subwf	___aomod@dividend,f
  9306  23F4  0821               	movf	___aomod@divisor+1,w
  9307  23F5  3BA9               	subwfb	___aomod@dividend+1,f
  9308  23F6  0822               	movf	___aomod@divisor+2,w
  9309  23F7  3BAA               	subwfb	___aomod@dividend+2,f
  9310  23F8  0823               	movf	___aomod@divisor+3,w
  9311  23F9  3BAB               	subwfb	___aomod@dividend+3,f
  9312  23FA  0824               	movf	___aomod@divisor+4,w
  9313  23FB  3BAC               	subwfb	___aomod@dividend+4,f
  9314  23FC  0825               	movf	___aomod@divisor+5,w
  9315  23FD  3BAD               	subwfb	___aomod@dividend+5,f
  9316  23FE  0826               	movf	___aomod@divisor+6,w
  9317  23FF  3BAE               	subwfb	___aomod@dividend+6,f
  9318  2400  0827               	movf	___aomod@divisor+7,w
  9319  2401  3BAF               	subwfb	___aomod@dividend+7,f
  9320  2402                     l4322:	
  9321  2402  36A7               	lsrf	___aomod@divisor+7,f
  9322  2403  0CA6               	rrf	___aomod@divisor+6,f
  9323  2404  0CA5               	rrf	___aomod@divisor+5,f
  9324  2405  0CA4               	rrf	___aomod@divisor+4,f
  9325  2406  0CA3               	rrf	___aomod@divisor+3,f
  9326  2407  0CA2               	rrf	___aomod@divisor+2,f
  9327  2408  0CA1               	rrf	___aomod@divisor+1,f
  9328  2409  0CA0               	rrf	___aomod@divisor,f
  9329  240A  3001               	movlw	1
  9330  240B  02F2               	subwf	___aomod@counter,f
  9331  240C  1D03               	btfss	3,2
  9332  240D  2BD2               	goto	l4318
  9333  240E                     l4324:	
  9334  240E  0873               	movf	___aomod@sign,w
  9335  240F  1903               	btfsc	3,2
  9336  2410  2C2F               	goto	l1134
  9337  2411  09A8               	comf	___aomod@dividend,f
  9338  2412  09A9               	comf	___aomod@dividend+1,f
  9339  2413  09AA               	comf	___aomod@dividend+2,f
  9340  2414  09AB               	comf	___aomod@dividend+3,f
  9341  2415  09AC               	comf	___aomod@dividend+4,f
  9342  2416  09AD               	comf	___aomod@dividend+5,f
  9343  2417  09AE               	comf	___aomod@dividend+6,f
  9344  2418  09AF               	comf	___aomod@dividend+7,f
  9345  2419  0AA8               	incf	___aomod@dividend,f
  9346  241A  1D03               	skipz
  9347  241B  2C2F               	goto	l1134
  9348  241C  0AA9               	incf	___aomod@dividend+1,f
  9349  241D  1D03               	skipz
  9350  241E  2C2F               	goto	l1134
  9351  241F  0AAA               	incf	___aomod@dividend+2,f
  9352  2420  1D03               	skipz
  9353  2421  2C2F               	goto	l1134
  9354  2422  0AAB               	incf	___aomod@dividend+3,f
  9355  2423  1D03               	skipz
  9356  2424  2C2F               	goto	l1134
  9357  2425  0AAC               	incf	___aomod@dividend+4,f
  9358  2426  1D03               	skipz
  9359  2427  2C2F               	goto	l1134
  9360  2428  0AAD               	incf	___aomod@dividend+5,f
  9361  2429  1D03               	skipz
  9362  242A  2C2F               	goto	l1134
  9363  242B  0AAE               	incf	___aomod@dividend+6,f
  9364  242C  1D03               	skipz
  9365  242D  2C2F               	goto	l1134
  9366  242E  0AAF               	incf	___aomod@dividend+7,f
  9367  242F                     l1134:	
  9368  242F  0020               	movlb	0	; select bank0
  9369  2430  0828               	movf	___aomod@dividend,w
  9370  2431  00A0               	movwf	?___aomod
  9371  2432  0829               	movf	___aomod@dividend+1,w
  9372  2433  00A1               	movwf	?___aomod+1
  9373  2434  082A               	movf	___aomod@dividend+2,w
  9374  2435  00A2               	movwf	?___aomod+2
  9375  2436  082B               	movf	___aomod@dividend+3,w
  9376  2437  00A3               	movwf	?___aomod+3
  9377  2438  082C               	movf	___aomod@dividend+4,w
  9378  2439  00A4               	movwf	?___aomod+4
  9379  243A  082D               	movf	___aomod@dividend+5,w
  9380  243B  00A5               	movwf	?___aomod+5
  9381  243C  082E               	movf	___aomod@dividend+6,w
  9382  243D  00A6               	movwf	?___aomod+6
  9383  243E  082F               	movf	___aomod@dividend+7,w
  9384  243F  00A7               	movwf	?___aomod+7
  9385  2440  0008               	return
  9386  2441                     __end_of___aomod:	
  9387                           
  9388                           	psect	text22
  9389  2613                     __ptext22:	
  9390 ;; *************** function ___aodiv *****************
  9391 ;; Defined at:
  9392 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;  divisor         8    0[BANK0 ] long long 
  9395 ;;  dividend        8    8[BANK0 ] long long 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  quotient        8    4[COMMON] long long 
  9398 ;;  sign            1    3[COMMON] unsigned char 
  9399 ;;  counter         1    2[COMMON] unsigned char 
  9400 ;; Return value:  Size  Location     Type
  9401 ;;                  8    0[BANK0 ] long long 
  9402 ;; Registers used:
  9403 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9404 ;; Tracked objects:
  9405 ;;		On entry : 0/0
  9406 ;;		On exit  : 0/0
  9407 ;;		Unchanged: 0/0
  9408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9409 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9410 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9412 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9413 ;;Total ram usage:       27 bytes
  9414 ;; Hardware stack levels used:    1
  9415 ;; Hardware stack levels required when called:    1
  9416 ;; This function calls:
  9417 ;;		Nothing
  9418 ;; This function is called by:
  9419 ;;		_dtoa
  9420 ;; This function uses a non-reentrant model
  9421 ;;
  9422                           
  9423                           
  9424                           ;psect for function ___aodiv
  9425  2613                     ___aodiv:	
  9426                           
  9427                           ;incstack = 0
  9428                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9429  2613  01F3               	clrf	___aodiv@sign
  9430  2614  3020               	movlw	low ___aodiv@divisor
  9431  2615  0086               	movwf	6
  9432  2616  3000               	movlw	high ___aodiv@divisor
  9433  2617  0087               	movwf	7
  9434  2618  3F47               	moviw [7]fsr1
  9435  2619  00F1               	movwf	??___aodiv
  9436  261A  1FF1               	btfss	??___aodiv,7
  9437  261B  2E3D               	goto	l4266
  9438  261C  0020               	movlb	0	; select bank0
  9439  261D  09A0               	comf	___aodiv@divisor,f
  9440  261E  09A1               	comf	___aodiv@divisor+1,f
  9441  261F  09A2               	comf	___aodiv@divisor+2,f
  9442  2620  09A3               	comf	___aodiv@divisor+3,f
  9443  2621  09A4               	comf	___aodiv@divisor+4,f
  9444  2622  09A5               	comf	___aodiv@divisor+5,f
  9445  2623  09A6               	comf	___aodiv@divisor+6,f
  9446  2624  09A7               	comf	___aodiv@divisor+7,f
  9447  2625  0AA0               	incf	___aodiv@divisor,f
  9448  2626  1D03               	skipz
  9449  2627  2E3B               	goto	u429lld
  9450  2628  0AA1               	incf	___aodiv@divisor+1,f
  9451  2629  1D03               	skipz
  9452  262A  2E3B               	goto	u429lld
  9453  262B  0AA2               	incf	___aodiv@divisor+2,f
  9454  262C  1D03               	skipz
  9455  262D  2E3B               	goto	u429lld
  9456  262E  0AA3               	incf	___aodiv@divisor+3,f
  9457  262F  1D03               	skipz
  9458  2630  2E3B               	goto	u429lld
  9459  2631  0AA4               	incf	___aodiv@divisor+4,f
  9460  2632  1D03               	skipz
  9461  2633  2E3B               	goto	u429lld
  9462  2634  0AA5               	incf	___aodiv@divisor+5,f
  9463  2635  1D03               	skipz
  9464  2636  2E3B               	goto	u429lld
  9465  2637  0AA6               	incf	___aodiv@divisor+6,f
  9466  2638  1D03               	skipz
  9467  2639  2E3B               	goto	u429lld
  9468  263A  0AA7               	incf	___aodiv@divisor+7,f
  9469  263B                     u429lld:	
  9470  263B  01F3               	clrf	___aodiv@sign
  9471  263C  0AF3               	incf	___aodiv@sign,f
  9472  263D                     l4266:	
  9473  263D  3028               	movlw	low ___aodiv@dividend
  9474  263E  0086               	movwf	6
  9475  263F  3000               	movlw	high ___aodiv@dividend
  9476  2640  0087               	movwf	7
  9477  2641  3F47               	moviw [7]fsr1
  9478  2642  00F1               	movwf	??___aodiv
  9479  2643  1FF1               	btfss	??___aodiv,7
  9480  2644  2E68               	goto	l4272
  9481  2645  0020               	movlb	0	; select bank0
  9482  2646  09A8               	comf	___aodiv@dividend,f
  9483  2647  09A9               	comf	___aodiv@dividend+1,f
  9484  2648  09AA               	comf	___aodiv@dividend+2,f
  9485  2649  09AB               	comf	___aodiv@dividend+3,f
  9486  264A  09AC               	comf	___aodiv@dividend+4,f
  9487  264B  09AD               	comf	___aodiv@dividend+5,f
  9488  264C  09AE               	comf	___aodiv@dividend+6,f
  9489  264D  09AF               	comf	___aodiv@dividend+7,f
  9490  264E  0AA8               	incf	___aodiv@dividend,f
  9491  264F  1D03               	skipz
  9492  2650  2E64               	goto	l4270
  9493  2651  0AA9               	incf	___aodiv@dividend+1,f
  9494  2652  1D03               	skipz
  9495  2653  2E64               	goto	l4270
  9496  2654  0AAA               	incf	___aodiv@dividend+2,f
  9497  2655  1D03               	skipz
  9498  2656  2E64               	goto	l4270
  9499  2657  0AAB               	incf	___aodiv@dividend+3,f
  9500  2658  1D03               	skipz
  9501  2659  2E64               	goto	l4270
  9502  265A  0AAC               	incf	___aodiv@dividend+4,f
  9503  265B  1D03               	skipz
  9504  265C  2E64               	goto	l4270
  9505  265D  0AAD               	incf	___aodiv@dividend+5,f
  9506  265E  1D03               	skipz
  9507  265F  2E64               	goto	l4270
  9508  2660  0AAE               	incf	___aodiv@dividend+6,f
  9509  2661  1D03               	skipz
  9510  2662  2E64               	goto	l4270
  9511  2663  0AAF               	incf	___aodiv@dividend+7,f
  9512  2664                     l4270:	
  9513  2664  3001               	movlw	1
  9514  2665  00F1               	movwf	??___aodiv
  9515  2666  0871               	movf	??___aodiv,w
  9516  2667  06F3               	xorwf	___aodiv@sign,f
  9517  2668                     l4272:	
  9518  2668  3074               	movlw	low ___aodiv@quotient
  9519  2669  0086               	movwf	6
  9520  266A  3000               	movlw	high ___aodiv@quotient
  9521  266B  0087               	movwf	7
  9522  266C  3008               	movlw	8
  9523  266D  00F1               	movwf	??___aodiv
  9524  266E  3000               	movlw	0
  9525  266F                     u4320:	
  9526  266F  001E               	movwi fsr1++
  9527  2670  0BF1               	decfsz	??___aodiv,f
  9528  2671  2E6F               	goto	u4320
  9529  2672  0020               	movlb	0	; select bank0
  9530  2673  0820               	movf	___aodiv@divisor,w
  9531  2674  0421               	iorwf	___aodiv@divisor+1,w
  9532  2675  0422               	iorwf	___aodiv@divisor+2,w
  9533  2676  0423               	iorwf	___aodiv@divisor+3,w
  9534  2677  0424               	iorwf	___aodiv@divisor+4,w
  9535  2678  0425               	iorwf	___aodiv@divisor+5,w
  9536  2679  0426               	iorwf	___aodiv@divisor+6,w
  9537  267A  0427               	iorwf	___aodiv@divisor+7,w
  9538  267B  1903               	skipnz
  9539  267C  2ED3               	goto	l4294
  9540  267D  01F2               	clrf	___aodiv@counter
  9541  267E  0AF2               	incf	___aodiv@counter,f
  9542  267F                     l4282:	
  9543  267F  1BA7               	btfsc	___aodiv@divisor+7,7
  9544  2680  2E8E               	goto	l4284
  9545  2681  35A0               	lslf	___aodiv@divisor,f
  9546  2682  0DA1               	rlf	___aodiv@divisor+1,f
  9547  2683  0DA2               	rlf	___aodiv@divisor+2,f
  9548  2684  0DA3               	rlf	___aodiv@divisor+3,f
  9549  2685  0DA4               	rlf	___aodiv@divisor+4,f
  9550  2686  0DA5               	rlf	___aodiv@divisor+5,f
  9551  2687  0DA6               	rlf	___aodiv@divisor+6,f
  9552  2688  0DA7               	rlf	___aodiv@divisor+7,f
  9553  2689  3001               	movlw	1
  9554  268A  00F1               	movwf	??___aodiv
  9555  268B  0871               	movf	??___aodiv,w
  9556  268C  07F2               	addwf	___aodiv@counter,f
  9557  268D  2E7F               	goto	l4282
  9558  268E                     l4284:	
  9559  268E  35F4               	lslf	___aodiv@quotient,f
  9560  268F  0DF5               	rlf	___aodiv@quotient+1,f
  9561  2690  0DF6               	rlf	___aodiv@quotient+2,f
  9562  2691  0DF7               	rlf	___aodiv@quotient+3,f
  9563  2692  0DF8               	rlf	___aodiv@quotient+4,f
  9564  2693  0DF9               	rlf	___aodiv@quotient+5,f
  9565  2694  0DFA               	rlf	___aodiv@quotient+6,f
  9566  2695  0DFB               	rlf	___aodiv@quotient+7,f
  9567  2696  0827               	movf	___aodiv@divisor+7,w
  9568  2697  022F               	subwf	___aodiv@dividend+7,w
  9569  2698  1D03               	skipz
  9570  2699  2EB4               	goto	u4355
  9571  269A  0826               	movf	___aodiv@divisor+6,w
  9572  269B  022E               	subwf	___aodiv@dividend+6,w
  9573  269C  1D03               	skipz
  9574  269D  2EB4               	goto	u4355
  9575  269E  0825               	movf	___aodiv@divisor+5,w
  9576  269F  022D               	subwf	___aodiv@dividend+5,w
  9577  26A0  1D03               	skipz
  9578  26A1  2EB4               	goto	u4355
  9579  26A2  0824               	movf	___aodiv@divisor+4,w
  9580  26A3  022C               	subwf	___aodiv@dividend+4,w
  9581  26A4  1D03               	skipz
  9582  26A5  2EB4               	goto	u4355
  9583  26A6  0823               	movf	___aodiv@divisor+3,w
  9584  26A7  022B               	subwf	___aodiv@dividend+3,w
  9585  26A8  1D03               	skipz
  9586  26A9  2EB4               	goto	u4355
  9587  26AA  0822               	movf	___aodiv@divisor+2,w
  9588  26AB  022A               	subwf	___aodiv@dividend+2,w
  9589  26AC  1D03               	skipz
  9590  26AD  2EB4               	goto	u4355
  9591  26AE  0821               	movf	___aodiv@divisor+1,w
  9592  26AF  0229               	subwf	___aodiv@dividend+1,w
  9593  26B0  1D03               	skipz
  9594  26B1  2EB4               	goto	u4355
  9595  26B2  0820               	movf	___aodiv@divisor,w
  9596  26B3  0228               	subwf	___aodiv@dividend,w
  9597  26B4                     u4355:	
  9598  26B4  1C03               	skipc
  9599  26B5  2EC7               	goto	l4292
  9600  26B6  0820               	movf	___aodiv@divisor,w
  9601  26B7  02A8               	subwf	___aodiv@dividend,f
  9602  26B8  0821               	movf	___aodiv@divisor+1,w
  9603  26B9  3BA9               	subwfb	___aodiv@dividend+1,f
  9604  26BA  0822               	movf	___aodiv@divisor+2,w
  9605  26BB  3BAA               	subwfb	___aodiv@dividend+2,f
  9606  26BC  0823               	movf	___aodiv@divisor+3,w
  9607  26BD  3BAB               	subwfb	___aodiv@dividend+3,f
  9608  26BE  0824               	movf	___aodiv@divisor+4,w
  9609  26BF  3BAC               	subwfb	___aodiv@dividend+4,f
  9610  26C0  0825               	movf	___aodiv@divisor+5,w
  9611  26C1  3BAD               	subwfb	___aodiv@dividend+5,f
  9612  26C2  0826               	movf	___aodiv@divisor+6,w
  9613  26C3  3BAE               	subwfb	___aodiv@dividend+6,f
  9614  26C4  0827               	movf	___aodiv@divisor+7,w
  9615  26C5  3BAF               	subwfb	___aodiv@dividend+7,f
  9616  26C6  1474               	bsf	___aodiv@quotient,0
  9617  26C7                     l4292:	
  9618  26C7  36A7               	lsrf	___aodiv@divisor+7,f
  9619  26C8  0CA6               	rrf	___aodiv@divisor+6,f
  9620  26C9  0CA5               	rrf	___aodiv@divisor+5,f
  9621  26CA  0CA4               	rrf	___aodiv@divisor+4,f
  9622  26CB  0CA3               	rrf	___aodiv@divisor+3,f
  9623  26CC  0CA2               	rrf	___aodiv@divisor+2,f
  9624  26CD  0CA1               	rrf	___aodiv@divisor+1,f
  9625  26CE  0CA0               	rrf	___aodiv@divisor,f
  9626  26CF  3001               	movlw	1
  9627  26D0  02F2               	subwf	___aodiv@counter,f
  9628  26D1  1D03               	btfss	3,2
  9629  26D2  2E8E               	goto	l4284
  9630  26D3                     l4294:	
  9631  26D3  0873               	movf	___aodiv@sign,w
  9632  26D4  1903               	btfsc	3,2
  9633  26D5  2EF4               	goto	l1121
  9634  26D6  09F4               	comf	___aodiv@quotient,f
  9635  26D7  09F5               	comf	___aodiv@quotient+1,f
  9636  26D8  09F6               	comf	___aodiv@quotient+2,f
  9637  26D9  09F7               	comf	___aodiv@quotient+3,f
  9638  26DA  09F8               	comf	___aodiv@quotient+4,f
  9639  26DB  09F9               	comf	___aodiv@quotient+5,f
  9640  26DC  09FA               	comf	___aodiv@quotient+6,f
  9641  26DD  09FB               	comf	___aodiv@quotient+7,f
  9642  26DE  0AF4               	incf	___aodiv@quotient,f
  9643  26DF  1D03               	skipz
  9644  26E0  2EF4               	goto	l1121
  9645  26E1  0AF5               	incf	___aodiv@quotient+1,f
  9646  26E2  1D03               	skipz
  9647  26E3  2EF4               	goto	l1121
  9648  26E4  0AF6               	incf	___aodiv@quotient+2,f
  9649  26E5  1D03               	skipz
  9650  26E6  2EF4               	goto	l1121
  9651  26E7  0AF7               	incf	___aodiv@quotient+3,f
  9652  26E8  1D03               	skipz
  9653  26E9  2EF4               	goto	l1121
  9654  26EA  0AF8               	incf	___aodiv@quotient+4,f
  9655  26EB  1D03               	skipz
  9656  26EC  2EF4               	goto	l1121
  9657  26ED  0AF9               	incf	___aodiv@quotient+5,f
  9658  26EE  1D03               	skipz
  9659  26EF  2EF4               	goto	l1121
  9660  26F0  0AFA               	incf	___aodiv@quotient+6,f
  9661  26F1  1D03               	skipz
  9662  26F2  2EF4               	goto	l1121
  9663  26F3  0AFB               	incf	___aodiv@quotient+7,f
  9664  26F4                     l1121:	
  9665  26F4  0874               	movf	___aodiv@quotient,w
  9666  26F5  0020               	movlb	0	; select bank0
  9667  26F6  00A0               	movwf	?___aodiv
  9668  26F7  0875               	movf	___aodiv@quotient+1,w
  9669  26F8  00A1               	movwf	?___aodiv+1
  9670  26F9  0876               	movf	___aodiv@quotient+2,w
  9671  26FA  00A2               	movwf	?___aodiv+2
  9672  26FB  0877               	movf	___aodiv@quotient+3,w
  9673  26FC  00A3               	movwf	?___aodiv+3
  9674  26FD  0878               	movf	___aodiv@quotient+4,w
  9675  26FE  00A4               	movwf	?___aodiv+4
  9676  26FF  0879               	movf	___aodiv@quotient+5,w
  9677  2700  00A5               	movwf	?___aodiv+5
  9678  2701  087A               	movf	___aodiv@quotient+6,w
  9679  2702  00A6               	movwf	?___aodiv+6
  9680  2703  087B               	movf	___aodiv@quotient+7,w
  9681  2704  00A7               	movwf	?___aodiv+7
  9682  2705  0008               	return
  9683  2706                     __end_of___aodiv:	
  9684                           
  9685                           	psect	text23
  9686  348C                     __ptext23:	
  9687 ;; *************** function _ctoa *****************
  9688 ;; Defined at:
  9689 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  9692 ;;		 -> vsnprintf@f(6), 
  9693 ;;  c               1   18[BANK0 ] unsigned char 
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;  w               2   20[BANK0 ] int 
  9696 ;;  l               2    0        int 
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  2   16[BANK0 ] int 
  9699 ;; Registers used:
  9700 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9706 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9707 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9708 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9709 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9710 ;;Total ram usage:        6 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; Hardware stack levels required when called:    5
  9713 ;; This function calls:
  9714 ;;		_pad
  9715 ;; This function is called by:
  9716 ;;		_vfpfcnvrt
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           
  9721                           ;psect for function _ctoa
  9722  348C                     _ctoa:	
  9723                           
  9724                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  9725                           
  9726                           ;incstack = 0
  9727                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9728  348C  0022               	movlb	2	; select bank2
  9729  348D  0864               	movf	_width^(0+256),w
  9730  348E  0465               	iorwf	(_width+1)^(0+256),w
  9731  348F  1D03               	btfss	3,2
  9732  3490  2C99               	goto	l6632
  9733  3491  0865               	movf	(_width+1)^(0+256),w
  9734  3492  0020               	movlb	0	; select bank0
  9735  3493  00B5               	movwf	ctoa@w+1
  9736  3494  0022               	movlb	2	; select bank2
  9737  3495  0864               	movf	_width^(0+256),w
  9738  3496  0020               	movlb	0	; select bank0
  9739  3497  00B4               	movwf	ctoa@w
  9740  3498  2CA2               	goto	l6634
  9741  3499                     l6632:	
  9742  3499  0864               	movf	_width^(0+256),w
  9743  349A  3EFF               	addlw	255
  9744  349B  0020               	movlb	0	; select bank0
  9745  349C  00B4               	movwf	ctoa@w
  9746  349D  30FF               	movlw	255
  9747  349E  0022               	movlb	2	; select bank2
  9748  349F  3D65               	addwfc	(_width+1)^(0+256),w
  9749  34A0  0020               	movlb	0	; select bank0
  9750  34A1  00B5               	movwf	ctoa@w+1
  9751  34A2                     l6634:	
  9752                           
  9753                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  9754  34A2  0832               	movf	ctoa@c,w
  9755  34A3  00B3               	movwf	??_ctoa
  9756  34A4  0833               	movf	??_ctoa,w
  9757  34A5  0024               	movlb	4	; select bank4
  9758  34A6  00AE               	movwf	_dbuf^(0+512)
  9759                           
  9760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  9761  34A7  01AF               	clrf	(_dbuf^(0+512)+1)
  9762                           
  9763                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  9764  34A8  0020               	movlb	0	; select bank0
  9765  34A9  0831               	movf	ctoa@fp+1,w
  9766  34AA  00A7               	movwf	pad@fp+1
  9767  34AB  0830               	movf	ctoa@fp,w
  9768  34AC  00A6               	movwf	pad@fp
  9769  34AD  302E               	movlw	(low (_dbuf| (0+512)))& (0+255)
  9770  34AE  00B3               	movwf	??_ctoa
  9771  34AF  0833               	movf	??_ctoa,w
  9772  34B0  00A8               	movwf	pad@buf
  9773  34B1  0835               	movf	ctoa@w+1,w
  9774  34B2  00AA               	movwf	pad@p+1
  9775  34B3  0834               	movf	ctoa@w,w
  9776  34B4  00A9               	movwf	pad@p
  9777  34B5  31B6  26B3         	fcall	_pad
  9778  34B7  0020               	movlb	0	; select bank0
  9779  34B8  0827               	movf	?_pad+1,w
  9780  34B9  00B1               	movwf	?_ctoa+1
  9781  34BA  0826               	movf	?_pad,w
  9782  34BB  00B0               	movwf	?_ctoa
  9783  34BC  0008               	return
  9784  34BD                     __end_of_ctoa:	
  9785                           
  9786                           	psect	text24
  9787  36B3                     __ptext24:	
  9788 ;; *************** function _pad *****************
  9789 ;; Defined at:
  9790 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  9793 ;;		 -> vsnprintf@f(6), 
  9794 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  9795 ;;		 -> dbuf(32), 
  9796 ;;  p               2    9[BANK0 ] int 
  9797 ;; Auto vars:     Size  Location     Type
  9798 ;;  w               2   14[BANK0 ] int 
  9799 ;;  i               2   12[BANK0 ] int 
  9800 ;; Return value:  Size  Location     Type
  9801 ;;                  2    6[BANK0 ] int 
  9802 ;; Registers used:
  9803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9804 ;; Tracked objects:
  9805 ;;		On entry : 0/0
  9806 ;;		On exit  : 0/0
  9807 ;;		Unchanged: 0/0
  9808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9809 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9810 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9811 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9812 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9813 ;;Total ram usage:       10 bytes
  9814 ;; Hardware stack levels used:    1
  9815 ;; Hardware stack levels required when called:    4
  9816 ;; This function calls:
  9817 ;;		_fputc
  9818 ;;		_fputs
  9819 ;;		_strlen
  9820 ;; This function is called by:
  9821 ;;		_ctoa
  9822 ;;		_dtoa
  9823 ;;		_otoa
  9824 ;;		_utoa
  9825 ;;		_xtoa
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829                           
  9830                           ;psect for function _pad
  9831  36B3                     _pad:	
  9832                           
  9833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  9834                           
  9835                           ;incstack = 0
  9836                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9837  36B3  0022               	movlb	2	; select bank2
  9838  36B4  1C68               	btfss	_flags^(0+256),0
  9839  36B5  2EBF               	goto	l6600
  9840                           
  9841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  9842  36B6  0020               	movlb	0	; select bank0
  9843  36B7  0827               	movf	pad@fp+1,w
  9844  36B8  00FB               	movwf	fputs@fp+1
  9845  36B9  0826               	movf	pad@fp,w
  9846  36BA  00FA               	movwf	fputs@fp
  9847  36BB  0828               	movf	pad@buf,w
  9848  36BC  31B4  2466  31B6   	fcall	_fputs
  9849  36BF                     l6600:	
  9850                           
  9851                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  9852  36BF  0020               	movlb	0	; select bank0
  9853  36C0  1BAA               	btfsc	pad@p+1,7
  9854  36C1  2EC7               	goto	l6604
  9855  36C2  082A               	movf	pad@p+1,w
  9856  36C3  00AF               	movwf	pad@w+1
  9857  36C4  0829               	movf	pad@p,w
  9858  36C5  00AE               	movwf	pad@w
  9859  36C6  2EC9               	goto	l813
  9860  36C7                     l6604:	
  9861  36C7  01AE               	clrf	pad@w
  9862  36C8  01AF               	clrf	pad@w+1
  9863  36C9                     l813:	
  9864                           
  9865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  9866  36C9  01AC               	clrf	pad@i
  9867  36CA  01AD               	clrf	pad@i+1
  9868  36CB                     l6610:	
  9869                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9870                           
  9871                           
  9872                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  9873  36CB  082D               	movf	pad@i+1,w
  9874  36CC  3A80               	xorlw	128
  9875  36CD  00AB               	movwf	??_pad
  9876  36CE  082F               	movf	pad@w+1,w
  9877  36CF  3A80               	xorlw	128
  9878  36D0  022B               	subwf	??_pad,w
  9879  36D1  1D03               	skipz
  9880  36D2  2ED5               	goto	u8025
  9881  36D3  082E               	movf	pad@w,w
  9882  36D4  022C               	subwf	pad@i,w
  9883  36D5                     u8025:	
  9884  36D5  1803               	btfsc	3,0
  9885  36D6  2EE9               	goto	l816
  9886                           
  9887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  9888  36D7  3020               	movlw	32
  9889  36D8  00F1               	movwf	fputc@c
  9890  36D9  3000               	movlw	0
  9891  36DA  00F2               	movwf	fputc@c+1
  9892  36DB  0020               	movlb	0	; select bank0
  9893  36DC  0827               	movf	pad@fp+1,w
  9894  36DD  00F4               	movwf	fputc@fp+1
  9895  36DE  0826               	movf	pad@fp,w
  9896  36DF  00F3               	movwf	fputc@fp
  9897  36E0  31B7  2756  31B6   	fcall	_fputc
  9898                           
  9899                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  9900  36E3  3001               	movlw	1
  9901  36E4  0020               	movlb	0	; select bank0
  9902  36E5  07AC               	addwf	pad@i,f
  9903  36E6  3000               	movlw	0
  9904  36E7  3DAD               	addwfc	pad@i+1,f
  9905  36E8  2ECB               	goto	l6610
  9906  36E9                     l816:	
  9907                           
  9908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  9909  36E9  0022               	movlb	2	; select bank2
  9910  36EA  1868               	btfsc	_flags^(0+256),0
  9911  36EB  2EF5               	goto	l6614
  9912                           
  9913                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  9914  36EC  0020               	movlb	0	; select bank0
  9915  36ED  0827               	movf	pad@fp+1,w
  9916  36EE  00FB               	movwf	fputs@fp+1
  9917  36EF  0826               	movf	pad@fp,w
  9918  36F0  00FA               	movwf	fputs@fp
  9919  36F1  0828               	movf	pad@buf,w
  9920  36F2  31B4  2466  31B6   	fcall	_fputs
  9921  36F5                     l6614:	
  9922                           
  9923                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  9924  36F5  0020               	movlb	0	; select bank0
  9925  36F6  0828               	movf	pad@buf,w
  9926  36F7  00F1               	movwf	strlen@s
  9927  36F8  3002               	movlw	2
  9928  36F9  00F2               	movwf	strlen@s+1
  9929  36FA  31B2  22DF         	fcall	_strlen
  9930  36FC  0020               	movlb	0	; select bank0
  9931  36FD  082E               	movf	pad@w,w
  9932  36FE  0771               	addwf	?_strlen,w
  9933  36FF  00A6               	movwf	?_pad
  9934  3700  082F               	movf	pad@w+1,w
  9935  3701  3D72               	addwfc	?_strlen+1,w
  9936  3702  00A7               	movwf	?_pad+1
  9937  3703  0008               	return
  9938  3704                     __end_of_pad:	
  9939                           
  9940                           	psect	text25
  9941  32DF                     __ptext25:	
  9942 ;; *************** function _strlen *****************
  9943 ;; Defined at:
  9944 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  9945 ;; Parameters:    Size  Location     Type
  9946 ;;  s               2    1[COMMON] PTR const unsigned char 
  9947 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
  9948 ;;		 -> updateTemperatures@vtsx(2), 
  9949 ;; Auto vars:     Size  Location     Type
  9950 ;;  a               2    3[COMMON] PTR const unsigned char 
  9951 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), sp__logf(4), 
  9952 ;;		 -> updateTemperatures@vtsx(2), 
  9953 ;; Return value:  Size  Location     Type
  9954 ;;                  2    1[COMMON] unsigned int 
  9955 ;; Registers used:
  9956 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9957 ;; Tracked objects:
  9958 ;;		On entry : 0/0
  9959 ;;		On exit  : 0/0
  9960 ;;		Unchanged: 0/0
  9961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9962 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9963 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9965 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9966 ;;Total ram usage:        4 bytes
  9967 ;; Hardware stack levels used:    1
  9968 ;; Hardware stack levels required when called:    1
  9969 ;; This function calls:
  9970 ;;		Nothing
  9971 ;; This function is called by:
  9972 ;;		_pad
  9973 ;;		_stoa
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           
  9978                           ;psect for function _strlen
  9979  32DF                     _strlen:	
  9980                           
  9981                           ;incstack = 0
  9982                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9983  32DF  0872               	movf	strlen@s+1,w
  9984  32E0  00F4               	movwf	strlen@a+1
  9985  32E1  0871               	movf	strlen@s,w
  9986  32E2  00F3               	movwf	strlen@a
  9987  32E3                     l4188:	
  9988  32E3  0871               	movf	strlen@s,w
  9989  32E4  0086               	movwf	6
  9990  32E5  0872               	movf	strlen@s+1,w
  9991  32E6  0087               	movwf	7
  9992  32E7  0801               	movf	1,w
  9993  32E8  1903               	btfsc	3,2
  9994  32E9  2AEF               	goto	l4190
  9995  32EA  3001               	movlw	1
  9996  32EB  07F1               	addwf	strlen@s,f
  9997  32EC  3000               	movlw	0
  9998  32ED  3DF2               	addwfc	strlen@s+1,f
  9999  32EE  2AE3               	goto	l4188
 10000  32EF                     l4190:	
 10001  32EF  0873               	movf	strlen@a,w
 10002  32F0  0271               	subwf	strlen@s,w
 10003  32F1  00F1               	movwf	?_strlen
 10004  32F2  0874               	movf	strlen@a+1,w
 10005  32F3  3B72               	subwfb	strlen@s+1,w
 10006  32F4  00F2               	movwf	?_strlen+1
 10007  32F5  0008               	return
 10008  32F6                     __end_of_strlen:	
 10009                           
 10010                           	psect	text26
 10011  3466                     __ptext26:	
 10012 ;; *************** function _fputs *****************
 10013 ;; Defined at:
 10014 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
 10015 ;; Parameters:    Size  Location     Type
 10016 ;;  s               1    wreg     PTR const unsigned char 
 10017 ;;		 -> dbuf(32), 
 10018 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
 10019 ;;		 -> vsnprintf@f(6), 
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;  s               1    5[BANK0 ] PTR const unsigned char 
 10022 ;;		 -> dbuf(32), 
 10023 ;;  i               2    3[BANK0 ] int 
 10024 ;;  c               1    2[BANK0 ] unsigned char 
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  2   10[COMMON] int 
 10027 ;; Registers used:
 10028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10035 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10036 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10037 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10038 ;;Total ram usage:        8 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; Hardware stack levels required when called:    3
 10041 ;; This function calls:
 10042 ;;		_fputc
 10043 ;; This function is called by:
 10044 ;;		_pad
 10045 ;; This function uses a non-reentrant model
 10046 ;;
 10047                           
 10048                           
 10049                           ;psect for function _fputs
 10050  3466                     _fputs:	
 10051                           
 10052                           ;incstack = 0
 10053                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10054                           ;fputs@s stored from wreg
 10055  3466  0020               	movlb	0	; select bank0
 10056  3467  00A5               	movwf	fputs@s
 10057  3468  01A3               	clrf	fputs@i
 10058  3469  01A4               	clrf	fputs@i+1
 10059  346A                     l4182:	
 10060  346A  0823               	movf	fputs@i,w
 10061  346B  0725               	addwf	fputs@s,w
 10062  346C  00A0               	movwf	??_fputs
 10063  346D  0820               	movf	??_fputs,w
 10064  346E  0086               	movwf	6
 10065  346F  3002               	movlw	2	; select bank4/5
 10066  3470  0087               	movwf	7
 10067  3471  0801               	movf	1,w
 10068  3472  00A1               	movwf	??_fputs+1
 10069  3473  0821               	movf	??_fputs+1,w
 10070  3474  00A2               	movwf	fputs@c
 10071  3475  0822               	movf	fputs@c,w
 10072  3476  1903               	btfsc	3,2
 10073  3477  0008               	return
 10074  3478  0822               	movf	fputs@c,w
 10075  3479  00A0               	movwf	??_fputs
 10076  347A  01A1               	clrf	??_fputs+1
 10077  347B  0820               	movf	??_fputs,w
 10078  347C  00F1               	movwf	fputc@c
 10079  347D  0821               	movf	??_fputs+1,w
 10080  347E  00F2               	movwf	fputc@c+1
 10081  347F  087B               	movf	fputs@fp+1,w
 10082  3480  00F4               	movwf	fputc@fp+1
 10083  3481  087A               	movf	fputs@fp,w
 10084  3482  00F3               	movwf	fputc@fp
 10085  3483  31B7  2756  31B4   	fcall	_fputc
 10086  3486  3001               	movlw	1
 10087  3487  0020               	movlb	0	; select bank0
 10088  3488  07A3               	addwf	fputs@i,f
 10089  3489  3000               	movlw	0
 10090  348A  3DA4               	addwfc	fputs@i+1,f
 10091  348B  2C6A               	goto	l4182
 10092  348C                     __end_of_fputs:	
 10093                           
 10094                           	psect	text27
 10095  3756                     __ptext27:	
 10096 ;; *************** function _fputc *****************
 10097 ;; Defined at:
 10098 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
 10099 ;; Parameters:    Size  Location     Type
 10100 ;;  c               2    1[COMMON] int 
 10101 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
 10102 ;;		 -> vsnprintf@f(6), 
 10103 ;; Auto vars:     Size  Location     Type
 10104 ;;		None
 10105 ;; Return value:  Size  Location     Type
 10106 ;;                  2    1[COMMON] int 
 10107 ;; Registers used:
 10108 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10109 ;; Tracked objects:
 10110 ;;		On entry : 0/0
 10111 ;;		On exit  : 0/0
 10112 ;;		Unchanged: 0/0
 10113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10114 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10116 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10117 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10118 ;;Total ram usage:        9 bytes
 10119 ;; Hardware stack levels used:    1
 10120 ;; Hardware stack levels required when called:    2
 10121 ;; This function calls:
 10122 ;;		_putch
 10123 ;; This function is called by:
 10124 ;;		_pad
 10125 ;;		_stoa
 10126 ;;		_vfpfcnvrt
 10127 ;;		_fputs
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           
 10132                           ;psect for function _fputc
 10133  3756                     _fputc:	
 10134                           
 10135                           ;incstack = 0
 10136                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10137  3756  0873               	movf	fputc@fp,w
 10138  3757  0474               	iorwf	fputc@fp+1,w
 10139  3758  1903               	btfsc	3,2
 10140  3759  2F5E               	goto	l4164
 10141  375A  0873               	movf	fputc@fp,w
 10142  375B  0474               	iorwf	fputc@fp+1,w
 10143  375C  1D03               	btfss	3,2
 10144  375D  2F62               	goto	l4166
 10145  375E                     l4164:	
 10146  375E  0871               	movf	fputc@c,w
 10147  375F  3187  27FF         	fcall	_putch
 10148  3761  0008               	return
 10149  3762                     l4166:	
 10150  3762  0873               	movf	fputc@fp,w
 10151  3763  0086               	movwf	6
 10152  3764  0874               	movf	fputc@fp+1,w
 10153  3765  0087               	movwf	7
 10154  3766  3144               	addfsr 1,4
 10155  3767  0016               	moviw fsr1++
 10156  3768  0401               	iorwf	1,w
 10157  3769  1903               	btfsc	3,2
 10158  376A  2F89               	goto	l4170
 10159  376B  0873               	movf	fputc@fp,w
 10160  376C  0086               	movwf	6
 10161  376D  0874               	movf	fputc@fp+1,w
 10162  376E  0087               	movwf	7
 10163  376F  3144               	addfsr 1,4
 10164  3770  3F40               	moviw [0]fsr1
 10165  3771  00F5               	movwf	??_fputc
 10166  3772  3F41               	moviw [1]fsr1
 10167  3773  00F6               	movwf	??_fputc+1
 10168  3774  0873               	movf	fputc@fp,w
 10169  3775  0086               	movwf	6
 10170  3776  0874               	movf	fputc@fp+1,w
 10171  3777  0087               	movwf	7
 10172  3778  3142               	addfsr 1,2
 10173  3779  3F40               	moviw [0]fsr1
 10174  377A  00F7               	movwf	??_fputc+2
 10175  377B  3F41               	moviw [1]fsr1
 10176  377C  00F8               	movwf	??_fputc+3
 10177  377D  0878               	movf	??_fputc+3,w
 10178  377E  3A80               	xorlw	128
 10179  377F  00F9               	movwf	??_fputc+4
 10180  3780  0876               	movf	??_fputc+1,w
 10181  3781  3A80               	xorlw	128
 10182  3782  0279               	subwf	??_fputc+4,w
 10183  3783  1D03               	skipz
 10184  3784  2F87               	goto	u4055
 10185  3785  0875               	movf	??_fputc,w
 10186  3786  0277               	subwf	??_fputc+2,w
 10187  3787                     u4055:	
 10188  3787  1803               	skipnc
 10189  3788  0008               	return
 10190  3789                     l4170:	
 10191  3789  0873               	movf	fputc@fp,w
 10192  378A  0086               	movwf	6
 10193  378B  0874               	movf	fputc@fp+1,w
 10194  378C  0087               	movwf	7
 10195  378D  3142               	addfsr 1,2
 10196  378E  0873               	movf	fputc@fp,w
 10197  378F  0084               	movwf	4
 10198  3790  0874               	movf	fputc@fp+1,w
 10199  3791  0085               	movwf	5
 10200  3792  3F40               	moviw [0]fsr1
 10201  3793  0700               	addwf	0,w
 10202  3794  00F5               	movwf	??_fputc
 10203  3795  3101               	addfsr 0,1
 10204  3796  3F41               	moviw [1]fsr1
 10205  3797  3D00               	addwfc	0,w
 10206  3798  00F6               	movwf	??_fputc+1
 10207  3799  0875               	movf	??_fputc,w
 10208  379A  0086               	movwf	6
 10209  379B  0876               	movf	??_fputc+1,w
 10210  379C  0087               	movwf	7
 10211  379D  0871               	movf	fputc@c,w
 10212  379E  0081               	movwf	1
 10213  379F  0873               	movf	fputc@fp,w
 10214  37A0  0086               	movwf	6
 10215  37A1  0874               	movf	fputc@fp+1,w
 10216  37A2  0087               	movwf	7
 10217  37A3  3142               	addfsr 1,2
 10218  37A4  3001               	movlw	1
 10219  37A5  0781               	addwf	1,f
 10220  37A6  3141               	addfsr 1,1
 10221  37A7  1803               	skipnc
 10222  37A8  0A81               	incf	1,f
 10223  37A9  0008               	return
 10224  37AA                     __end_of_fputc:	
 10225                           
 10226                           	psect	text28
 10227  07FF                     __ptext28:	
 10228 ;; *************** function _putch *****************
 10229 ;; Defined at:
 10230 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;  c               1    wreg     unsigned char 
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;  c               1    0[COMMON] unsigned char 
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  1    wreg      void 
 10237 ;; Registers used:
 10238 ;;		wreg
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10248 ;;Total ram usage:        0 bytes
 10249 ;; Hardware stack levels used:    1
 10250 ;; Hardware stack levels required when called:    1
 10251 ;; This function calls:
 10252 ;;		Nothing
 10253 ;; This function is called by:
 10254 ;;		_fputc
 10255 ;; This function uses a non-reentrant model
 10256 ;;
 10257                           
 10258                           
 10259                           ;psect for function _putch
 10260  07FF                     _putch:	
 10261                           
 10262                           ;incstack = 0
 10263                           ; Regs used in _putch: [wreg]
 10264  07FF  0008               	return
 10265  0800                     __end_of_putch:	
 10266                           
 10267                           	psect	text29
 10268  2C79                     __ptext29:	
 10269 ;; *************** function _atoi *****************
 10270 ;; Defined at:
 10271 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;  s               2    7[COMMON] PTR const unsigned char 
 10274 ;;		 -> STR_17(18), STR_16(18), STR_15(19), STR_14(20), 
 10275 ;;		 -> STR_13(20), STR_12(21), STR_11(21), STR_10(21), 
 10276 ;;		 -> STR_9(22), STR_8(22), STR_7(21), STR_6(21), 
 10277 ;;		 -> STR_3(6), STR_2(4), STR_1(40), 
 10278 ;; Auto vars:     Size  Location     Type
 10279 ;;  n               2   11[BANK0 ] int 
 10280 ;;  neg             2    4[BANK0 ] int 
 10281 ;; Return value:  Size  Location     Type
 10282 ;;                  2    7[COMMON] int 
 10283 ;; Registers used:
 10284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10285 ;; Tracked objects:
 10286 ;;		On entry : 0/0
 10287 ;;		On exit  : 0/0
 10288 ;;		Unchanged: 0/0
 10289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10291 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10292 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10293 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10294 ;;Total ram usage:       15 bytes
 10295 ;; Hardware stack levels used:    1
 10296 ;; Hardware stack levels required when called:    2
 10297 ;; This function calls:
 10298 ;;		___wmul
 10299 ;;		_isdigit
 10300 ;;		_isspace
 10301 ;; This function is called by:
 10302 ;;		_vfpfcnvrt
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           
 10307                           ;psect for function _atoi
 10308  2C79                     _atoi:	
 10309                           
 10310                           ;incstack = 0
 10311                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10312  2C79  0020               	movlb	0	; select bank0
 10313  2C7A  01AB               	clrf	atoi@n
 10314  2C7B  01AC               	clrf	atoi@n+1
 10315  2C7C  01A4               	clrf	atoi@neg
 10316  2C7D  01A5               	clrf	atoi@neg+1
 10317  2C7E                     l6848:	
 10318  2C7E  01AA               	clrf	_atoi$1769
 10319  2C7F  0AAA               	incf	_atoi$1769,f
 10320  2C80  0877               	movf	atoi@s,w
 10321  2C81  0084               	movwf	4
 10322  2C82  0878               	movf	atoi@s+1,w
 10323  2C83  0085               	movwf	5
 10324  2C84  0012               	moviw fsr0++
 10325  2C85  3A20               	xorlw	32
 10326  2C86  1903               	btfsc	3,2
 10327  2C87  2C9A               	goto	l6856
 10328  2C88  0877               	movf	atoi@s,w
 10329  2C89  0084               	movwf	4
 10330  2C8A  0878               	movf	atoi@s+1,w
 10331  2C8B  0085               	movwf	5
 10332  2C8C  0800               	movf	0,w	;code access
 10333  2C8D  3EF7               	addlw	247
 10334  2C8E  00A0               	movwf	??_atoi
 10335  2C8F  30FF               	movlw	255
 10336  2C90  1803               	skipnc
 10337  2C91  3000               	movlw	0
 10338  2C92  00A1               	movwf	??_atoi+1
 10339  2C93  3000               	movlw	0
 10340  2C94  0221               	subwf	??_atoi+1,w
 10341  2C95  3005               	movlw	5
 10342  2C96  1903               	skipnz
 10343  2C97  0220               	subwf	??_atoi,w
 10344  2C98  1803               	btfsc	3,0
 10345  2C99  01AA               	clrf	_atoi$1769
 10346  2C9A                     l6856:	
 10347  2C9A  082A               	movf	_atoi$1769,w
 10348  2C9B  00A0               	movwf	??_atoi
 10349  2C9C  01A1               	clrf	??_atoi+1
 10350  2C9D  0820               	movf	??_atoi,w
 10351  2C9E  00A6               	movwf	_atoi$1768
 10352  2C9F  0821               	movf	??_atoi+1,w
 10353  2CA0  00A7               	movwf	_atoi$1768+1
 10354  2CA1  0826               	movf	_atoi$1768,w
 10355  2CA2  0427               	iorwf	_atoi$1768+1,w
 10356  2CA3  1903               	btfsc	3,2
 10357  2CA4  2CAF               	goto	l6864
 10358  2CA5  3001               	movlw	1
 10359  2CA6  07F7               	addwf	atoi@s,f
 10360  2CA7  3000               	movlw	0
 10361  2CA8  3DF8               	addwfc	atoi@s+1,f
 10362  2CA9  2C7E               	goto	l6848
 10363  2CAA                     l6862:	
 10364  2CAA  3001               	movlw	1
 10365  2CAB  00A4               	movwf	atoi@neg
 10366  2CAC  3000               	movlw	0
 10367  2CAD  00A5               	movwf	atoi@neg+1
 10368  2CAE  2CE2               	goto	l1496
 10369  2CAF                     l6864:	
 10370  2CAF  0877               	movf	atoi@s,w
 10371  2CB0  0084               	movwf	4
 10372  2CB1  0878               	movf	atoi@s+1,w
 10373  2CB2  0085               	movwf	5
 10374  2CB3  0800               	movf	0,w	;code access
 10375  2CB4  00A0               	movwf	??_atoi
 10376  2CB5  01A1               	clrf	??_atoi+1
 10377                           
 10378                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10379                           ; Switch size 1, requested type "simple"
 10380                           ; Number of cases is 1, Range of values is 0 to 0
 10381                           ; switch strategies available:
 10382                           ; Name         Instructions Cycles
 10383                           ; simple_byte            4     3 (average)
 10384                           ; direct_byte            8     6 (fixed)
 10385                           ; jumptable            260     6 (fixed)
 10386                           ;	Chosen strategy is simple_byte
 10387  2CB6  0821               	movf	??_atoi+1,w
 10388  2CB7  3A00               	xorlw	0	; case 0
 10389  2CB8  1903               	skipnz
 10390  2CB9  2CBB               	goto	l7988
 10391  2CBA  2CE6               	goto	l6870
 10392  2CBB                     l7988:	
 10393                           
 10394                           ; Switch size 1, requested type "simple"
 10395                           ; Number of cases is 2, Range of values is 43 to 45
 10396                           ; switch strategies available:
 10397                           ; Name         Instructions Cycles
 10398                           ; simple_byte            7     4 (average)
 10399                           ; direct_byte           15     9 (fixed)
 10400                           ; jumptable            263     9 (fixed)
 10401                           ;	Chosen strategy is simple_byte
 10402  2CBB  0820               	movf	??_atoi,w
 10403  2CBC  3A2B               	xorlw	43	; case 43
 10404  2CBD  1903               	skipnz
 10405  2CBE  2CE2               	goto	l1496
 10406  2CBF  3A06               	xorlw	6	; case 45
 10407  2CC0  1903               	skipnz
 10408  2CC1  2CAA               	goto	l6862
 10409  2CC2  2CE6               	goto	l6870
 10410  2CC3                     l6866:	
 10411  2CC3  0877               	movf	atoi@s,w
 10412  2CC4  0084               	movwf	4
 10413  2CC5  0878               	movf	atoi@s+1,w
 10414  2CC6  0085               	movwf	5
 10415  2CC7  0800               	movf	0,w	;code access
 10416  2CC8  00A0               	movwf	??_atoi
 10417  2CC9  082C               	movf	atoi@n+1,w
 10418  2CCA  00F2               	movwf	___wmul@multiplier+1
 10419  2CCB  082B               	movf	atoi@n,w
 10420  2CCC  00F1               	movwf	___wmul@multiplier
 10421  2CCD  300A               	movlw	10
 10422  2CCE  00F3               	movwf	___wmul@multiplicand
 10423  2CCF  3000               	movlw	0
 10424  2CD0  00F4               	movwf	___wmul@multiplicand+1
 10425  2CD1  31B3  2355  31AC   	fcall	___wmul
 10426  2CD4  0872               	movf	?___wmul+1,w
 10427  2CD5  0020               	movlb	0	; select bank0
 10428  2CD6  00A2               	movwf	??_atoi+2
 10429  2CD7  0820               	movf	??_atoi,w
 10430  2CD8  0271               	subwf	?___wmul,w
 10431  2CD9  00A1               	movwf	??_atoi+1
 10432  2CDA  1C03               	skipc
 10433  2CDB  03A2               	decf	??_atoi+2,f
 10434  2CDC  0821               	movf	??_atoi+1,w
 10435  2CDD  3E30               	addlw	48
 10436  2CDE  00AB               	movwf	atoi@n
 10437  2CDF  3000               	movlw	0
 10438  2CE0  3D22               	addwfc	??_atoi+2,w
 10439  2CE1  00AC               	movwf	atoi@n+1
 10440  2CE2                     l1496:	
 10441  2CE2  3001               	movlw	1
 10442  2CE3  07F7               	addwf	atoi@s,f
 10443  2CE4  3000               	movlw	0
 10444  2CE5  3DF8               	addwfc	atoi@s+1,f
 10445  2CE6                     l6870:	
 10446  2CE6  0877               	movf	atoi@s,w
 10447  2CE7  0084               	movwf	4
 10448  2CE8  0878               	movf	atoi@s+1,w
 10449  2CE9  0085               	movwf	5
 10450  2CEA  0800               	movf	0,w	;code access
 10451  2CEB  3ED0               	addlw	208
 10452  2CEC  00A0               	movwf	??_atoi
 10453  2CED  30FF               	movlw	255
 10454  2CEE  1803               	skipnc
 10455  2CEF  3000               	movlw	0
 10456  2CF0  00A1               	movwf	??_atoi+1
 10457  2CF1  3000               	movlw	0
 10458  2CF2  0221               	subwf	??_atoi+1,w
 10459  2CF3  300A               	movlw	10
 10460  2CF4  1903               	skipnz
 10461  2CF5  0220               	subwf	??_atoi,w
 10462  2CF6  1803               	btfsc	3,0
 10463  2CF7  2CFA               	goto	u8610
 10464  2CF8  3001               	movlw	1
 10465  2CF9  2CFB               	goto	u8620
 10466  2CFA                     u8610:	
 10467  2CFA  3000               	movlw	0
 10468  2CFB                     u8620:	
 10469  2CFB  00A2               	movwf	??_atoi+2
 10470  2CFC  01A3               	clrf	??_atoi+3
 10471  2CFD  0822               	movf	??_atoi+2,w
 10472  2CFE  00A8               	movwf	_atoi$1770
 10473  2CFF  0823               	movf	??_atoi+3,w
 10474  2D00  00A9               	movwf	_atoi$1770+1
 10475  2D01  0828               	movf	_atoi$1770,w
 10476  2D02  0429               	iorwf	_atoi$1770+1,w
 10477  2D03  1D03               	btfss	3,2
 10478  2D04  2CC3               	goto	l6866
 10479  2D05  0824               	movf	atoi@neg,w
 10480  2D06  0425               	iorwf	atoi@neg+1,w
 10481  2D07  1D03               	btfss	3,2
 10482  2D08  2D15               	goto	l6880
 10483  2D09  092B               	comf	atoi@n,w
 10484  2D0A  00A0               	movwf	??_atoi
 10485  2D0B  092C               	comf	atoi@n+1,w
 10486  2D0C  00A1               	movwf	??_atoi+1
 10487  2D0D  0AA0               	incf	??_atoi,f
 10488  2D0E  1903               	skipnz
 10489  2D0F  0AA1               	incf	??_atoi+1,f
 10490  2D10  0820               	movf	??_atoi,w
 10491  2D11  00F7               	movwf	?_atoi
 10492  2D12  0821               	movf	??_atoi+1,w
 10493  2D13  00F8               	movwf	?_atoi+1
 10494  2D14  0008               	return
 10495  2D15                     l6880:	
 10496  2D15  082C               	movf	atoi@n+1,w
 10497  2D16  00F8               	movwf	?_atoi+1
 10498  2D17  082B               	movf	atoi@n,w
 10499  2D18  00F7               	movwf	?_atoi
 10500  2D19  0008               	return
 10501  2D1A                     __end_of_atoi:	
 10502                           
 10503                           	psect	text30
 10504  33A6                     __ptext30:	
 10505 ;; *************** function _isspace *****************
 10506 ;; Defined at:
 10507 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
 10508 ;; Parameters:    Size  Location     Type
 10509 ;;  c               2    1[COMMON] int 
 10510 ;; Auto vars:     Size  Location     Type
 10511 ;;		None
 10512 ;; Return value:  Size  Location     Type
 10513 ;;                  2    1[COMMON] int 
 10514 ;; Registers used:
 10515 ;;		wreg, status,2, status,0
 10516 ;; Tracked objects:
 10517 ;;		On entry : 0/0
 10518 ;;		On exit  : 0/0
 10519 ;;		Unchanged: 0/0
 10520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10524 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10525 ;;Total ram usage:        5 bytes
 10526 ;; Hardware stack levels used:    1
 10527 ;; Hardware stack levels required when called:    1
 10528 ;; This function calls:
 10529 ;;		Nothing
 10530 ;; This function is called by:
 10531 ;;		_atoi
 10532 ;; This function uses a non-reentrant model
 10533 ;;
 10534                           
 10535                           
 10536                           ;psect for function _isspace
 10537  33A6                     _isspace:	
 10538                           
 10539                           ;incstack = 0
 10540                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10541  33A6  01F5               	clrf	_isspace$1795
 10542  33A7  0AF5               	incf	_isspace$1795,f
 10543  33A8  3020               	movlw	32
 10544  33A9  0671               	xorwf	isspace@c,w
 10545  33AA  0472               	iorwf	isspace@c+1,w
 10546  33AB  1903               	btfsc	3,2
 10547  33AC  2BBA               	goto	l4374
 10548  33AD  0871               	movf	isspace@c,w
 10549  33AE  3EF7               	addlw	247
 10550  33AF  00F3               	movwf	??_isspace
 10551  33B0  30FF               	movlw	255
 10552  33B1  3D72               	addwfc	isspace@c+1,w
 10553  33B2  00F4               	movwf	??_isspace+1
 10554  33B3  3000               	movlw	0
 10555  33B4  0274               	subwf	??_isspace+1,w
 10556  33B5  3005               	movlw	5
 10557  33B6  1903               	skipnz
 10558  33B7  0273               	subwf	??_isspace,w
 10559  33B8  1803               	btfsc	3,0
 10560  33B9  01F5               	clrf	_isspace$1795
 10561  33BA                     l4374:	
 10562  33BA  0875               	movf	_isspace$1795,w
 10563  33BB  00F3               	movwf	??_isspace
 10564  33BC  01F4               	clrf	??_isspace+1
 10565  33BD  0873               	movf	??_isspace,w
 10566  33BE  00F1               	movwf	?_isspace
 10567  33BF  0874               	movf	??_isspace+1,w
 10568  33C0  00F2               	movwf	?_isspace+1
 10569  33C1  0008               	return
 10570  33C2                     __end_of_isspace:	
 10571                           
 10572                           	psect	text31
 10573  32C8                     __ptext31:	
 10574 ;; *************** function _isdigit *****************
 10575 ;; Defined at:
 10576 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
 10577 ;; Parameters:    Size  Location     Type
 10578 ;;  c               2    1[COMMON] int 
 10579 ;; Auto vars:     Size  Location     Type
 10580 ;;		None
 10581 ;; Return value:  Size  Location     Type
 10582 ;;                  2    1[COMMON] int 
 10583 ;; Registers used:
 10584 ;;		wreg, status,2, status,0
 10585 ;; Tracked objects:
 10586 ;;		On entry : 0/0
 10587 ;;		On exit  : 0/0
 10588 ;;		Unchanged: 0/0
 10589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10592 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10593 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10594 ;;Total ram usage:        6 bytes
 10595 ;; Hardware stack levels used:    1
 10596 ;; Hardware stack levels required when called:    1
 10597 ;; This function calls:
 10598 ;;		Nothing
 10599 ;; This function is called by:
 10600 ;;		_vfpfcnvrt
 10601 ;;		_atoi
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           
 10606                           ;psect for function _isdigit
 10607  32C8                     _isdigit:	
 10608                           
 10609                           ;incstack = 0
 10610                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10611  32C8  0871               	movf	isdigit@c,w
 10612  32C9  3ED0               	addlw	208
 10613  32CA  00F3               	movwf	??_isdigit
 10614  32CB  30FF               	movlw	255
 10615  32CC  3D72               	addwfc	isdigit@c+1,w
 10616  32CD  00F4               	movwf	??_isdigit+1
 10617  32CE  3000               	movlw	0
 10618  32CF  0274               	subwf	??_isdigit+1,w
 10619  32D0  300A               	movlw	10
 10620  32D1  1903               	skipnz
 10621  32D2  0273               	subwf	??_isdigit,w
 10622  32D3  1803               	btfsc	3,0
 10623  32D4  2AD7               	goto	u4220
 10624  32D5  3001               	movlw	1
 10625  32D6  2AD8               	goto	u4230
 10626  32D7                     u4220:	
 10627  32D7  3000               	movlw	0
 10628  32D8                     u4230:	
 10629  32D8  00F5               	movwf	??_isdigit+2
 10630  32D9  01F6               	clrf	??_isdigit+3
 10631  32DA  0875               	movf	??_isdigit+2,w
 10632  32DB  00F1               	movwf	?_isdigit
 10633  32DC  0876               	movf	??_isdigit+3,w
 10634  32DD  00F2               	movwf	?_isdigit+1
 10635  32DE  0008               	return
 10636  32DF                     __end_of_isdigit:	
 10637                           
 10638                           	psect	text32
 10639  333B                     __ptext32:	
 10640 ;; *************** function _EUSART_Write_Text *****************
 10641 ;; Defined at:
 10642 ;;		line 75 in file "EUSART.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;  text            2    2[COMMON] PTR unsigned char 
 10645 ;;		 -> STR_18(3), STR_5(3), STR_4(38), messageBuffer(127), 
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;  i               2    5[COMMON] int 
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  1    wreg      void 
 10650 ;; Registers used:
 10651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10659 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10660 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10661 ;;Total ram usage:        5 bytes
 10662 ;; Hardware stack levels used:    1
 10663 ;; Hardware stack levels required when called:    2
 10664 ;; This function calls:
 10665 ;;		_EUSART_Write
 10666 ;; This function is called by:
 10667 ;;		_statemachine
 10668 ;;		_printcellParameters
 10669 ;;		_printotAFERegisters
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           
 10674                           ;psect for function _EUSART_Write_Text
 10675  333B                     _EUSART_Write_Text:	
 10676                           
 10677                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10678                           
 10679                           ;incstack = 0
 10680                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10681  333B  01F5               	clrf	EUSART_Write_Text@i
 10682  333C  01F6               	clrf	EUSART_Write_Text@i+1
 10683  333D                     l5936:	
 10684  333D  0872               	movf	EUSART_Write_Text@text,w
 10685  333E  0775               	addwf	EUSART_Write_Text@i,w
 10686  333F  0084               	movwf	4
 10687  3340  0873               	movf	EUSART_Write_Text@text+1,w
 10688  3341  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10689  3342  0085               	movwf	5
 10690  3343  0012               	moviw fsr0++
 10691  3344  1903               	btfsc	3,2
 10692  3345  0008               	return
 10693                           
 10694                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10695  3346  0872               	movf	EUSART_Write_Text@text,w
 10696  3347  0775               	addwf	EUSART_Write_Text@i,w
 10697  3348  0084               	movwf	4
 10698  3349  0873               	movf	EUSART_Write_Text@text+1,w
 10699  334A  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10700  334B  0085               	movwf	5
 10701  334C  0800               	movf	0,w	;code access
 10702  334D  3188  2000  31B3   	fcall	_EUSART_Write
 10703  3350  3001               	movlw	1
 10704  3351  07F5               	addwf	EUSART_Write_Text@i,f
 10705  3352  3000               	movlw	0
 10706  3353  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10707  3354  2B3D               	goto	l5936
 10708  3355                     __end_of_EUSART_Write_Text:	
 10709                           
 10710                           	psect	text33
 10711  0800                     __ptext33:	
 10712 ;; *************** function _EUSART_Write *****************
 10713 ;; Defined at:
 10714 ;;		line 56 in file "EUSART.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  txData          1    wreg     unsigned char 
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;  txData          1    1[COMMON] unsigned char 
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      void 
 10721 ;; Registers used:
 10722 ;;		wreg
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10729 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10732 ;;Total ram usage:        1 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; Hardware stack levels required when called:    1
 10735 ;; This function calls:
 10736 ;;		Nothing
 10737 ;; This function is called by:
 10738 ;;		_EUSART_Write_Text
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           
 10743                           ;psect for function _EUSART_Write
 10744  0800                     _EUSART_Write:	
 10745                           
 10746                           ;incstack = 0
 10747                           ; Regs used in _EUSART_Write: [wreg]
 10748                           ;EUSART_Write@txData stored from wreg
 10749  0800  00F1               	movwf	EUSART_Write@txData
 10750  0801                     l271:	
 10751                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 10752                           
 10753                           
 10754                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 10755  0801  0020               	movlb	0	; select bank0
 10756  0802  1E11               	btfss	17,4	;volatile
 10757  0803  2801               	goto	l271
 10758                           
 10759                           ;EUSART.c: 62:     TX1REG = txData;
 10760  0804  0871               	movf	EUSART_Write@txData,w
 10761  0805  0023               	movlb	3	; select bank3
 10762  0806  009A               	movwf	26	;volatile
 10763  0807  0008               	return
 10764  0808                     __end_of_EUSART_Write:	
 10765                           
 10766                           	psect	text34
 10767  37AA                     __ptext34:	
 10768 ;; *************** function _init_AFE *****************
 10769 ;; Defined at:
 10770 ;;		line 3 in file "BQ76920.c"
 10771 ;; Parameters:    Size  Location     Type
 10772 ;;		None
 10773 ;; Auto vars:     Size  Location     Type
 10774 ;;		None
 10775 ;; Return value:  Size  Location     Type
 10776 ;;                  1    wreg      void 
 10777 ;; Registers used:
 10778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10779 ;; Tracked objects:
 10780 ;;		On entry : 0/0
 10781 ;;		On exit  : 0/0
 10782 ;;		Unchanged: 0/0
 10783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10788 ;;Total ram usage:        0 bytes
 10789 ;; Hardware stack levels used:    1
 10790 ;; Hardware stack levels required when called:    4
 10791 ;; This function calls:
 10792 ;;		_setCellOvervoltageProtection
 10793 ;;		_setCellUndervoltageProtection
 10794 ;;		_setOverCurrentDischargeProtection
 10795 ;;		_setShortCircuitProtection
 10796 ;;		_setShuntResistorValue
 10797 ;;		_setTemperatureLimitsint
 10798 ;; This function is called by:
 10799 ;;		_statemachine
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           
 10804                           ;psect for function _init_AFE
 10805  37AA                     _init_AFE:	
 10806                           
 10807                           ;BQ76920.c: 5:     setTemperatureLimitsint(-20, 45, 0, 45);
 10808                           
 10809                           ;incstack = 0
 10810                           ; Regs used in _init_AFE: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10811  37AA  30EC               	movlw	236
 10812  37AB  0020               	movlb	0	; select bank0
 10813  37AC  00A0               	movwf	setTemperatureLimitsint@minDischarge_degC
 10814  37AD  30FF               	movlw	255
 10815  37AE  00A1               	movwf	setTemperatureLimitsint@minDischarge_degC+1
 10816  37AF  302D               	movlw	45
 10817  37B0  00A2               	movwf	setTemperatureLimitsint@maxDischarge_degC
 10818  37B1  3000               	movlw	0
 10819  37B2  00A3               	movwf	setTemperatureLimitsint@maxDischarge_degC+1
 10820  37B3  3000               	movlw	0
 10821  37B4  00A4               	movwf	setTemperatureLimitsint@minCharge_degC
 10822  37B5  00A5               	movwf	setTemperatureLimitsint@minCharge_degC+1
 10823  37B6  302D               	movlw	45
 10824  37B7  00A6               	movwf	setTemperatureLimitsint@maxCharge_degC
 10825  37B8  3000               	movlw	0
 10826  37B9  00A7               	movwf	setTemperatureLimitsint@maxCharge_degC+1
 10827  37BA  31A8  2003  31B7   	fcall	_setTemperatureLimitsint
 10828                           
 10829                           ;BQ76920.c: 6:     setShuntResistorValue(0.02);
 10830  37BD  303C               	movlw	60
 10831  37BE  00F4               	movwf	setShuntResistorValue@res_mOhm+3
 10832  37BF  30A3               	movlw	163
 10833  37C0  00F3               	movwf	setShuntResistorValue@res_mOhm+2
 10834  37C1  30D7               	movlw	215
 10835  37C2  00F2               	movwf	setShuntResistorValue@res_mOhm+1
 10836  37C3  300A               	movlw	10
 10837  37C4  00F1               	movwf	setShuntResistorValue@res_mOhm
 10838  37C5  31B2  2297  31B7   	fcall	_setShuntResistorValue
 10839                           
 10840                           ;BQ76920.c: 9:     setShortCircuitProtection(500, 200);
 10841  37C8  3000               	movlw	0
 10842  37C9  0020               	movlb	0	; select bank0
 10843  37CA  00E9               	movwf	setShortCircuitProtection@current_mA+3
 10844  37CB  3000               	movlw	0
 10845  37CC  00E8               	movwf	setShortCircuitProtection@current_mA+2
 10846  37CD  3001               	movlw	1
 10847  37CE  00E7               	movwf	setShortCircuitProtection@current_mA+1
 10848  37CF  30F4               	movlw	244
 10849  37D0  00E6               	movwf	setShortCircuitProtection@current_mA
 10850  37D1  30C8               	movlw	200
 10851  37D2  00EA               	movwf	setShortCircuitProtection@delay_us
 10852  37D3  3000               	movlw	0
 10853  37D4  00EB               	movwf	setShortCircuitProtection@delay_us+1
 10854  37D5  3199  211E  31B7   	fcall	_setShortCircuitProtection
 10855                           
 10856                           ;BQ76920.c: 14:     setOverCurrentDischargeProtection(10, 320);
 10857  37D8  3000               	movlw	0
 10858  37D9  0020               	movlb	0	; select bank0
 10859  37DA  00E9               	movwf	setOverCurrentDischargeProtection@current_mA+3
 10860  37DB  3000               	movlw	0
 10861  37DC  00E8               	movwf	setOverCurrentDischargeProtection@current_mA+2
 10862  37DD  3000               	movlw	0
 10863  37DE  00E7               	movwf	setOverCurrentDischargeProtection@current_mA+1
 10864  37DF  300A               	movlw	10
 10865  37E0  00E6               	movwf	setOverCurrentDischargeProtection@current_mA
 10866  37E1  3040               	movlw	64
 10867  37E2  00EA               	movwf	setOverCurrentDischargeProtection@delay_ms
 10868  37E3  3001               	movlw	1
 10869  37E4  00EB               	movwf	setOverCurrentDischargeProtection@delay_ms+1
 10870  37E5  3198  2009  31B7   	fcall	_setOverCurrentDischargeProtection
 10871                           
 10872                           ;BQ76920.c: 15:     setCellUndervoltageProtection(2900, 2);
 10873  37E8  3054               	movlw	84
 10874  37E9  0020               	movlb	0	; select bank0
 10875  37EA  00B2               	movwf	setCellUndervoltageProtection@voltage_mV
 10876  37EB  300B               	movlw	11
 10877  37EC  00B3               	movwf	setCellUndervoltageProtection@voltage_mV+1
 10878  37ED  3002               	movlw	2
 10879  37EE  00B4               	movwf	setCellUndervoltageProtection@delay_s
 10880  37EF  3000               	movlw	0
 10881  37F0  00B5               	movwf	setCellUndervoltageProtection@delay_s+1
 10882  37F1  31A2  2289  31B7   	fcall	_setCellUndervoltageProtection
 10883                           
 10884                           ;BQ76920.c: 16:     setCellOvervoltageProtection(4100,2);
 10885  37F4  3004               	movlw	4
 10886  37F5  0020               	movlb	0	; select bank0
 10887  37F6  00B2               	movwf	setCellOvervoltageProtection@voltage_mV
 10888  37F7  3010               	movlw	16
 10889  37F8  00B3               	movwf	setCellOvervoltageProtection@voltage_mV+1
 10890  37F9  3002               	movlw	2
 10891  37FA  00B4               	movwf	setCellOvervoltageProtection@delay_s
 10892  37FB  3000               	movlw	0
 10893  37FC  00B5               	movwf	setCellOvervoltageProtection@delay_s+1
 10894  37FD  31A0  20D8         	fcall	_setCellOvervoltageProtection
 10895  37FF  0008               	return
 10896  3800                     __end_of_init_AFE:	
 10897                           
 10898                           	psect	text35
 10899  2803                     __ptext35:	
 10900 ;; *************** function _setTemperatureLimitsint *****************
 10901 ;; Defined at:
 10902 ;;		line 61 in file "BQ76920.c"
 10903 ;; Parameters:    Size  Location     Type
 10904 ;;  minDischarge    2    0[BANK0 ] int 
 10905 ;;  maxDischarge    2    2[BANK0 ] int 
 10906 ;;  minCharge_de    2    4[BANK0 ] int 
 10907 ;;  maxCharge_de    2    6[BANK0 ] int 
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;		None
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  1    wreg      void 
 10912 ;; Registers used:
 10913 ;;		wreg, status,2, status,0, pclath, cstack
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10919 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10922 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10923 ;;Total ram usage:        8 bytes
 10924 ;; Hardware stack levels used:    1
 10925 ;; Hardware stack levels required when called:    2
 10926 ;; This function calls:
 10927 ;;		___wmul
 10928 ;; This function is called by:
 10929 ;;		_init_AFE
 10930 ;; This function uses a non-reentrant model
 10931 ;;
 10932                           
 10933                           
 10934                           ;psect for function _setTemperatureLimitsint
 10935  2803                     _setTemperatureLimitsint:	
 10936                           
 10937                           ;BQ76920.c: 63:     minCellTempDischarge = minDischarge_degC * 10;
 10938                           
 10939                           ;incstack = 0
 10940                           ; Regs used in _setTemperatureLimitsint: [wreg+status,2+status,0+pclath+cstack]
 10941  2803  0020               	movlb	0	; select bank0
 10942  2804  0821               	movf	setTemperatureLimitsint@minDischarge_degC+1,w
 10943  2805  00F2               	movwf	___wmul@multiplier+1
 10944  2806  0820               	movf	setTemperatureLimitsint@minDischarge_degC,w
 10945  2807  00F1               	movwf	___wmul@multiplier
 10946  2808  300A               	movlw	10
 10947  2809  00F3               	movwf	___wmul@multiplicand
 10948  280A  3000               	movlw	0
 10949  280B  00F4               	movwf	___wmul@multiplicand+1
 10950  280C  31B3  2355  31A8   	fcall	___wmul
 10951  280F  0872               	movf	?___wmul+1,w
 10952  2810  0023               	movlb	3	; select bank3
 10953  2811  00E3               	movwf	(_minCellTempDischarge+1)^(0+384)
 10954  2812  0871               	movf	?___wmul,w
 10955  2813  00E2               	movwf	_minCellTempDischarge^(0+384)
 10956                           
 10957                           ;BQ76920.c: 64:     maxCellTempDischarge = maxDischarge_degC * 10;
 10958  2814  0020               	movlb	0	; select bank0
 10959  2815  0823               	movf	setTemperatureLimitsint@maxDischarge_degC+1,w
 10960  2816  00F2               	movwf	___wmul@multiplier+1
 10961  2817  0822               	movf	setTemperatureLimitsint@maxDischarge_degC,w
 10962  2818  00F1               	movwf	___wmul@multiplier
 10963  2819  300A               	movlw	10
 10964  281A  00F3               	movwf	___wmul@multiplicand
 10965  281B  3000               	movlw	0
 10966  281C  00F4               	movwf	___wmul@multiplicand+1
 10967  281D  31B3  2355  31A8   	fcall	___wmul
 10968  2820  0872               	movf	?___wmul+1,w
 10969  2821  0023               	movlb	3	; select bank3
 10970  2822  00DF               	movwf	(_maxCellTempDischarge+1)^(0+384)
 10971  2823  0871               	movf	?___wmul,w
 10972  2824  00DE               	movwf	_maxCellTempDischarge^(0+384)
 10973                           
 10974                           ;BQ76920.c: 65:     minCellTempCharge = minCharge_degC * 10;
 10975  2825  0020               	movlb	0	; select bank0
 10976  2826  0825               	movf	setTemperatureLimitsint@minCharge_degC+1,w
 10977  2827  00F2               	movwf	___wmul@multiplier+1
 10978  2828  0824               	movf	setTemperatureLimitsint@minCharge_degC,w
 10979  2829  00F1               	movwf	___wmul@multiplier
 10980  282A  300A               	movlw	10
 10981  282B  00F3               	movwf	___wmul@multiplicand
 10982  282C  3000               	movlw	0
 10983  282D  00F4               	movwf	___wmul@multiplicand+1
 10984  282E  31B3  2355  31A8   	fcall	___wmul
 10985  2831  0872               	movf	?___wmul+1,w
 10986  2832  0023               	movlb	3	; select bank3
 10987  2833  00E5               	movwf	(_minCellTempCharge+1)^(0+384)
 10988  2834  0871               	movf	?___wmul,w
 10989  2835  00E4               	movwf	_minCellTempCharge^(0+384)
 10990                           
 10991                           ;BQ76920.c: 66:     maxCellTempCharge = maxCharge_degC * 10;
 10992  2836  0020               	movlb	0	; select bank0
 10993  2837  0827               	movf	setTemperatureLimitsint@maxCharge_degC+1,w
 10994  2838  00F2               	movwf	___wmul@multiplier+1
 10995  2839  0826               	movf	setTemperatureLimitsint@maxCharge_degC,w
 10996  283A  00F1               	movwf	___wmul@multiplier
 10997  283B  300A               	movlw	10
 10998  283C  00F3               	movwf	___wmul@multiplicand
 10999  283D  3000               	movlw	0
 11000  283E  00F4               	movwf	___wmul@multiplicand+1
 11001  283F  31B3  2355         	fcall	___wmul
 11002  2841  0872               	movf	?___wmul+1,w
 11003  2842  0023               	movlb	3	; select bank3
 11004  2843  00E1               	movwf	(_maxCellTempCharge+1)^(0+384)
 11005  2844  0871               	movf	?___wmul,w
 11006  2845  00E0               	movwf	_maxCellTempCharge^(0+384)
 11007  2846  0008               	return
 11008  2847                     __end_of_setTemperatureLimitsint:	
 11009                           
 11010                           	psect	text36
 11011  3355                     __ptext36:	
 11012 ;; *************** function ___wmul *****************
 11013 ;; Defined at:
 11014 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  multiplier      2    1[COMMON] unsigned int 
 11017 ;;  multiplicand    2    3[COMMON] unsigned int 
 11018 ;; Auto vars:     Size  Location     Type
 11019 ;;  product         2    5[COMMON] unsigned int 
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  2    1[COMMON] unsigned int 
 11022 ;; Registers used:
 11023 ;;		wreg, status,2, status,0
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11032 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11033 ;;Total ram usage:        6 bytes
 11034 ;; Hardware stack levels used:    1
 11035 ;; Hardware stack levels required when called:    1
 11036 ;; This function calls:
 11037 ;;		Nothing
 11038 ;; This function is called by:
 11039 ;;		_setTemperatureLimitsint
 11040 ;;		_atoi
 11041 ;; This function uses a non-reentrant model
 11042 ;;
 11043                           
 11044                           
 11045                           ;psect for function ___wmul
 11046  3355                     ___wmul:	
 11047                           
 11048                           ;incstack = 0
 11049                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11050  3355  01F5               	clrf	___wmul@product
 11051  3356  01F6               	clrf	___wmul@product+1
 11052  3357                     l4248:	
 11053  3357  1C71               	btfss	___wmul@multiplier,0
 11054  3358  2B5D               	goto	l1021
 11055  3359  0873               	movf	___wmul@multiplicand,w
 11056  335A  07F5               	addwf	___wmul@product,f
 11057  335B  0874               	movf	___wmul@multiplicand+1,w
 11058  335C  3DF6               	addwfc	___wmul@product+1,f
 11059  335D                     l1021:	
 11060  335D  3001               	movlw	1
 11061  335E                     u4255:	
 11062  335E  35F3               	lslf	___wmul@multiplicand,f
 11063  335F  0DF4               	rlf	___wmul@multiplicand+1,f
 11064  3360  0B89               	decfsz	9,f
 11065  3361  2B5E               	goto	u4255
 11066  3362  3001               	movlw	1
 11067  3363                     u4265:	
 11068  3363  36F2               	lsrf	___wmul@multiplier+1,f
 11069  3364  0CF1               	rrf	___wmul@multiplier,f
 11070  3365  0B89               	decfsz	9,f
 11071  3366  2B63               	goto	u4265
 11072  3367  0871               	movf	___wmul@multiplier,w
 11073  3368  0472               	iorwf	___wmul@multiplier+1,w
 11074  3369  1D03               	btfss	3,2
 11075  336A  2B57               	goto	l4248
 11076  336B  0876               	movf	___wmul@product+1,w
 11077  336C  00F2               	movwf	?___wmul+1
 11078  336D  0875               	movf	___wmul@product,w
 11079  336E  00F1               	movwf	?___wmul
 11080  336F  0008               	return
 11081  3370                     __end_of___wmul:	
 11082                           
 11083                           	psect	text37
 11084  3297                     __ptext37:	
 11085 ;; *************** function _setShuntResistorValue *****************
 11086 ;; Defined at:
 11087 ;;		line 73 in file "BQ76920.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;  res_mOhm        4    1[COMMON] float 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;		None
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  1    wreg      void 
 11094 ;; Registers used:
 11095 ;;		wreg
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11105 ;;Total ram usage:        4 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    1
 11108 ;; This function calls:
 11109 ;;		Nothing
 11110 ;; This function is called by:
 11111 ;;		_init_AFE
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           
 11116                           ;psect for function _setShuntResistorValue
 11117  3297                     _setShuntResistorValue:	
 11118                           
 11119                           ;BQ76920.c: 74:     shuntResistorValue_mOhm = res_mOhm;
 11120                           
 11121                           ;incstack = 0
 11122                           ; Regs used in _setShuntResistorValue: [wreg]
 11123  3297  0874               	movf	setShuntResistorValue@res_mOhm+3,w
 11124  3298  0023               	movlb	3	; select bank3
 11125  3299  00BB               	movwf	(_shuntResistorValue_mOhm+3)^(0+384)
 11126  329A  0873               	movf	setShuntResistorValue@res_mOhm+2,w
 11127  329B  00BA               	movwf	(_shuntResistorValue_mOhm+2)^(0+384)
 11128  329C  0872               	movf	setShuntResistorValue@res_mOhm+1,w
 11129  329D  00B9               	movwf	(_shuntResistorValue_mOhm+1)^(0+384)
 11130  329E  0871               	movf	setShuntResistorValue@res_mOhm,w
 11131  329F  00B8               	movwf	_shuntResistorValue_mOhm^(0+384)
 11132  32A0  0008               	return
 11133  32A1                     __end_of_setShuntResistorValue:	
 11134                           
 11135                           	psect	text38
 11136  191E                     __ptext38:	
 11137 ;; *************** function _setShortCircuitProtection *****************
 11138 ;; Defined at:
 11139 ;;		line 81 in file "BQ76920.c"
 11140 ;; Parameters:    Size  Location     Type
 11141 ;;  current_mA      4   70[BANK0 ] long 
 11142 ;;  delay_us        2   74[BANK0 ] int 
 11143 ;; Auto vars:     Size  Location     Type
 11144 ;;  i               2   10[BANK1 ] int 
 11145 ;;  i               2    8[BANK1 ] int 
 11146 ;;  scaler          4    0[BANK1 ] float 
 11147 ;; Return value:  Size  Location     Type
 11148 ;;                  1    wreg      void 
 11149 ;; Registers used:
 11150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11151 ;; Tracked objects:
 11152 ;;		On entry : 0/0
 11153 ;;		On exit  : 0/0
 11154 ;;		Unchanged: 0/0
 11155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11156 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11157 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11158 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11159 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11160 ;;Total ram usage:       21 bytes
 11161 ;; Hardware stack levels used:    1
 11162 ;; Hardware stack levels required when called:    3
 11163 ;; This function calls:
 11164 ;;		_I2C_writeRegister
 11165 ;;		___fldiv
 11166 ;;		___flge
 11167 ;;		___flmul
 11168 ;;		___xxtofl
 11169 ;; This function is called by:
 11170 ;;		_init_AFE
 11171 ;; This function uses a non-reentrant model
 11172 ;;
 11173                           
 11174                           
 11175                           ;psect for function _setShortCircuitProtection
 11176  191E                     _setShortCircuitProtection:	
 11177                           
 11178                           ;BQ76920.c: 86:     float scaler = 1000.0;
 11179                           
 11180                           ;incstack = 0
 11181                           ; Regs used in _setShortCircuitProtection: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11182  191E  3044               	movlw	68
 11183  191F  0021               	movlb	1	; select bank1
 11184  1920  00A3               	movwf	(setShortCircuitProtection@scaler+3)^(0+128)
 11185  1921  307A               	movlw	122
 11186  1922  00A2               	movwf	(setShortCircuitProtection@scaler+2)^(0+128)
 11187  1923  3000               	movlw	0
 11188  1924  00A1               	movwf	(setShortCircuitProtection@scaler+1)^(0+128)
 11189  1925  3000               	movlw	0
 11190  1926  00A0               	movwf	setShortCircuitProtection@scaler^(0+128)
 11191                           
 11192                           ;BQ76920.c: 87:     protect1.bits.SCD_THRESH = 0;
 11193  1927  30F8               	movlw	-8
 11194  1928  0022               	movlb	2	; select bank2
 11195  1929  05ED               	andwf	_protect1^(0+256),f
 11196                           
 11197                           ;BQ76920.c: 88:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11198  192A  0021               	movlb	1	; select bank1
 11199  192B  01A8               	clrf	setShortCircuitProtection@i^(0+128)
 11200  192C  01A9               	clrf	(setShortCircuitProtection@i+1)^(0+128)
 11201  192D                     l7416:	
 11202                           
 11203                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11204  192D  0023               	movlb	3	; select bank3
 11205  192E  083B               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11206  192F  0020               	movlb	0	; select bank0
 11207  1930  00A9               	movwf	___flmul@b+3
 11208  1931  0023               	movlb	3	; select bank3
 11209  1932  083A               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11210  1933  0020               	movlb	0	; select bank0
 11211  1934  00A8               	movwf	___flmul@b+2
 11212  1935  0023               	movlb	3	; select bank3
 11213  1936  0839               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11214  1937  0020               	movlb	0	; select bank0
 11215  1938  00A7               	movwf	___flmul@b+1
 11216  1939  0023               	movlb	3	; select bank3
 11217  193A  0838               	movf	_shuntResistorValue_mOhm^(0+384),w
 11218  193B  0020               	movlb	0	; select bank0
 11219  193C  00A6               	movwf	___flmul@b
 11220  193D  0869               	movf	setShortCircuitProtection@current_mA+3,w
 11221  193E  00F4               	movwf	___xxtofl@val+3
 11222  193F  0868               	movf	setShortCircuitProtection@current_mA+2,w
 11223  1940  00F3               	movwf	___xxtofl@val+2
 11224  1941  0867               	movf	setShortCircuitProtection@current_mA+1,w
 11225  1942  00F2               	movwf	___xxtofl@val+1
 11226  1943  0866               	movf	setShortCircuitProtection@current_mA,w
 11227  1944  00F1               	movwf	___xxtofl@val
 11228  1945  3001               	movlw	1
 11229  1946  31AB  23E3  3199   	fcall	___xxtofl
 11230  1949  0874               	movf	?___xxtofl+3,w
 11231  194A  0020               	movlb	0	; select bank0
 11232  194B  00AD               	movwf	___flmul@a+3
 11233  194C  0873               	movf	?___xxtofl+2,w
 11234  194D  00AC               	movwf	___flmul@a+2
 11235  194E  0872               	movf	?___xxtofl+1,w
 11236  194F  00AB               	movwf	___flmul@a+1
 11237  1950  0871               	movf	?___xxtofl,w
 11238  1951  00AA               	movwf	___flmul@a
 11239  1952  3190  2022  3199   	fcall	___flmul
 11240  1955  0020               	movlb	0	; select bank0
 11241  1956  0829               	movf	?___flmul+3,w
 11242  1957  0021               	movlb	1	; select bank1
 11243  1958  00A7               	movwf	(_setShortCircuitProtection$2144+3)^(0+128)
 11244  1959  0020               	movlb	0	; select bank0
 11245  195A  0828               	movf	?___flmul+2,w
 11246  195B  0021               	movlb	1	; select bank1
 11247  195C  00A6               	movwf	(_setShortCircuitProtection$2144+2)^(0+128)
 11248  195D  0020               	movlb	0	; select bank0
 11249  195E  0827               	movf	?___flmul+1,w
 11250  195F  0021               	movlb	1	; select bank1
 11251  1960  00A5               	movwf	(_setShortCircuitProtection$2144+1)^(0+128)
 11252  1961  0020               	movlb	0	; select bank0
 11253  1962  0826               	movf	?___flmul,w
 11254  1963  0021               	movlb	1	; select bank1
 11255  1964  00A4               	movwf	_setShortCircuitProtection$2144^(0+128)
 11256                           
 11257                           ;BQ76920.c: 89:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) >
      +                          = SCD_threshold_setting[i]) {
 11258  1965  3044               	movlw	68
 11259  1966  0020               	movlb	0	; select bank0
 11260  1967  00C3               	movwf	___fldiv@a+3
 11261  1968  307A               	movlw	122
 11262  1969  00C2               	movwf	___fldiv@a+2
 11263  196A  3000               	movlw	0
 11264  196B  00C1               	movwf	___fldiv@a+1
 11265  196C  3000               	movlw	0
 11266  196D  00C0               	movwf	___fldiv@a
 11267  196E  0021               	movlb	1	; select bank1
 11268  196F  0823               	movf	(setShortCircuitProtection@scaler+3)^(0+128),w
 11269  1970  0020               	movlb	0	; select bank0
 11270  1971  00A9               	movwf	___flmul@b+3
 11271  1972  0021               	movlb	1	; select bank1
 11272  1973  0822               	movf	(setShortCircuitProtection@scaler+2)^(0+128),w
 11273  1974  0020               	movlb	0	; select bank0
 11274  1975  00A8               	movwf	___flmul@b+2
 11275  1976  0021               	movlb	1	; select bank1
 11276  1977  0821               	movf	(setShortCircuitProtection@scaler+1)^(0+128),w
 11277  1978  0020               	movlb	0	; select bank0
 11278  1979  00A7               	movwf	___flmul@b+1
 11279  197A  0021               	movlb	1	; select bank1
 11280  197B  0820               	movf	setShortCircuitProtection@scaler^(0+128),w
 11281  197C  0020               	movlb	0	; select bank0
 11282  197D  00A6               	movwf	___flmul@b
 11283  197E  0021               	movlb	1	; select bank1
 11284  197F  0827               	movf	(_setShortCircuitProtection$2144+3)^(0+128),w
 11285  1980  0020               	movlb	0	; select bank0
 11286  1981  00AD               	movwf	___flmul@a+3
 11287  1982  0021               	movlb	1	; select bank1
 11288  1983  0826               	movf	(_setShortCircuitProtection$2144+2)^(0+128),w
 11289  1984  0020               	movlb	0	; select bank0
 11290  1985  00AC               	movwf	___flmul@a+2
 11291  1986  0021               	movlb	1	; select bank1
 11292  1987  0825               	movf	(_setShortCircuitProtection$2144+1)^(0+128),w
 11293  1988  0020               	movlb	0	; select bank0
 11294  1989  00AB               	movwf	___flmul@a+1
 11295  198A  0021               	movlb	1	; select bank1
 11296  198B  0824               	movf	_setShortCircuitProtection$2144^(0+128),w
 11297  198C  0020               	movlb	0	; select bank0
 11298  198D  00AA               	movwf	___flmul@a
 11299  198E  3190  2022  3199   	fcall	___flmul
 11300  1991  0020               	movlb	0	; select bank0
 11301  1992  0829               	movf	?___flmul+3,w
 11302  1993  00C7               	movwf	___fldiv@b+3
 11303  1994  0828               	movf	?___flmul+2,w
 11304  1995  00C6               	movwf	___fldiv@b+2
 11305  1996  0827               	movf	?___flmul+1,w
 11306  1997  00C5               	movwf	___fldiv@b+1
 11307  1998  0826               	movf	?___flmul,w
 11308  1999  00C4               	movwf	___fldiv@b
 11309  199A  319C  24E2  3199   	fcall	___fldiv
 11310  199D  0020               	movlb	0	; select bank0
 11311  199E  0843               	movf	?___fldiv+3,w
 11312  199F  00DD               	movwf	___flge@ff1+3
 11313  19A0  0842               	movf	?___fldiv+2,w
 11314  19A1  00DC               	movwf	___flge@ff1+2
 11315  19A2  0841               	movf	?___fldiv+1,w
 11316  19A3  00DB               	movwf	___flge@ff1+1
 11317  19A4  0840               	movf	?___fldiv,w
 11318  19A5  00DA               	movwf	___flge@ff1
 11319  19A6  0021               	movlb	1	; select bank1
 11320  19A7  0829               	movf	(setShortCircuitProtection@i+1)^(0+128),w
 11321  19A8  0085               	movwf	5
 11322  19A9  0828               	movf	setShortCircuitProtection@i^(0+128),w
 11323  19AA  0084               	movwf	4
 11324  19AB  3584               	lslf	4,f
 11325  19AC  0D85               	rlf	5,f
 11326  19AD  3074               	movlw	low (_SCD_threshold_setting| (0+32768))
 11327  19AE  0784               	addwf	4,f
 11328  19AF  30B9               	movlw	high (_SCD_threshold_setting| (0+32768))
 11329  19B0  3D85               	addwfc	5,f
 11330  19B1  3F00               	moviw [0]fsr0
 11331  19B2  0020               	movlb	0	; select bank0
 11332  19B3  00EC               	movwf	??_setShortCircuitProtection
 11333  19B4  3F01               	moviw [1]fsr0
 11334  19B5  00ED               	movwf	??_setShortCircuitProtection+1
 11335  19B6  086C               	movf	??_setShortCircuitProtection,w
 11336  19B7  00F1               	movwf	___xxtofl@val
 11337  19B8  086D               	movf	??_setShortCircuitProtection+1,w
 11338  19B9  00F2               	movwf	___xxtofl@val+1
 11339  19BA  0D89               	rlf	9,f
 11340  19BB  3B89               	subwfb	9,f
 11341  19BC  0989               	comf	9,f
 11342  19BD  00F3               	movwf	___xxtofl@val+2
 11343  19BE  00F4               	movwf	___xxtofl@val+3
 11344  19BF  3001               	movlw	1
 11345  19C0  31AB  23E3  3199   	fcall	___xxtofl
 11346  19C3  0874               	movf	?___xxtofl+3,w
 11347  19C4  0020               	movlb	0	; select bank0
 11348  19C5  00E1               	movwf	___flge@ff2+3
 11349  19C6  0873               	movf	?___xxtofl+2,w
 11350  19C7  00E0               	movwf	___flge@ff2+2
 11351  19C8  0872               	movf	?___xxtofl+1,w
 11352  19C9  00DF               	movwf	___flge@ff2+1
 11353  19CA  0871               	movf	?___xxtofl,w
 11354  19CB  00DE               	movwf	___flge@ff2
 11355  19CC  31A9  21EC  3199   	fcall	___flge
 11356  19CF  1C03               	btfss	3,0
 11357  19D0  29D9               	goto	l7422
 11358                           
 11359                           ;BQ76920.c: 90:             protect1.bits.SCD_THRESH = i;
 11360  19D1  0022               	movlb	2	; select bank2
 11361  19D2  086D               	movf	_protect1^(0+256),w
 11362  19D3  0021               	movlb	1	; select bank1
 11363  19D4  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11364  19D5  39F8               	andlw	-8
 11365  19D6  0628               	xorwf	setShortCircuitProtection@i^(0+128),w
 11366  19D7  0022               	movlb	2	; select bank2
 11367  19D8  00ED               	movwf	_protect1^(0+256)
 11368  19D9                     l7422:	
 11369                           
 11370                           ;BQ76920.c: 92:     }
 11371  19D9  3001               	movlw	1
 11372  19DA  0021               	movlb	1	; select bank1
 11373  19DB  07A8               	addwf	setShortCircuitProtection@i^(0+128),f
 11374  19DC  3000               	movlw	0
 11375  19DD  3DA9               	addwfc	(setShortCircuitProtection@i+1)^(0+128),f
 11376  19DE  3000               	movlw	0
 11377  19DF  0229               	subwf	(setShortCircuitProtection@i+1)^(0+128),w
 11378  19E0  3007               	movlw	7
 11379  19E1  1903               	skipnz
 11380  19E2  0228               	subwf	setShortCircuitProtection@i^(0+128),w
 11381  19E3  1C03               	skipc
 11382  19E4  292D               	goto	l7416
 11383                           
 11384                           ;BQ76920.c: 94:     protect1.bits.SCD_DELAY = 0;
 11385  19E5  30E7               	movlw	-25
 11386  19E6  0022               	movlb	2	; select bank2
 11387  19E7  05ED               	andwf	_protect1^(0+256),f
 11388                           
 11389                           ;BQ76920.c: 95:     for (int i = 0; i < (sizeof(SCD_threshold_setting) / sizeof((SCD_thr
      +                          eshold_setting)[0])) - 1; i++) {
 11390  19E8  0021               	movlb	1	; select bank1
 11391  19E9  01AA               	clrf	setShortCircuitProtection@i_1000^(0+128)
 11392  19EA  01AB               	clrf	(setShortCircuitProtection@i_1000+1)^(0+128)
 11393  19EB                     l7434:	
 11394                           
 11395                           ;BQ76920.c: 96:         if (delay_us >= SCD_delay_setting[i]) {
 11396  19EB  082B               	movf	(setShortCircuitProtection@i_1000+1)^(0+128),w
 11397  19EC  0085               	movwf	5
 11398  19ED  082A               	movf	setShortCircuitProtection@i_1000^(0+128),w
 11399  19EE  0084               	movwf	4
 11400  19EF  3584               	lslf	4,f
 11401  19F0  0D85               	rlf	5,f
 11402  19F1  3094               	movlw	low (_SCD_delay_setting| (0+32768))
 11403  19F2  0784               	addwf	4,f
 11404  19F3  30B9               	movlw	high (_SCD_delay_setting| (0+32768))
 11405  19F4  3D85               	addwfc	5,f
 11406  19F5  3F00               	moviw [0]fsr0
 11407  19F6  0020               	movlb	0	; select bank0
 11408  19F7  00EC               	movwf	??_setShortCircuitProtection
 11409  19F8  3F01               	moviw [1]fsr0
 11410  19F9  00ED               	movwf	??_setShortCircuitProtection+1
 11411  19FA  086B               	movf	setShortCircuitProtection@delay_us+1,w
 11412  19FB  3A80               	xorlw	128
 11413  19FC  00EE               	movwf	??_setShortCircuitProtection+2
 11414  19FD  086D               	movf	??_setShortCircuitProtection+1,w
 11415  19FE  3A80               	xorlw	128
 11416  19FF  026E               	subwf	??_setShortCircuitProtection+2,w
 11417  1A00  1D03               	skipz
 11418  1A01  2A04               	goto	u9385
 11419  1A02  086C               	movf	??_setShortCircuitProtection,w
 11420  1A03  026A               	subwf	setShortCircuitProtection@delay_us,w
 11421  1A04                     u9385:	
 11422  1A04  1C03               	skipc
 11423  1A05  2A15               	goto	l7438
 11424                           
 11425                           ;BQ76920.c: 97:             protect1.bits.SCD_DELAY = i;
 11426  1A06  0021               	movlb	1	; select bank1
 11427  1A07  082A               	movf	setShortCircuitProtection@i_1000^(0+128),w
 11428  1A08  0020               	movlb	0	; select bank0
 11429  1A09  00EC               	movwf	??_setShortCircuitProtection
 11430  1A0A  0DEC               	rlf	??_setShortCircuitProtection,f
 11431  1A0B  0DEC               	rlf	??_setShortCircuitProtection,f
 11432  1A0C  0DEC               	rlf	??_setShortCircuitProtection,f
 11433  1A0D  0022               	movlb	2	; select bank2
 11434  1A0E  086D               	movf	_protect1^(0+256),w
 11435  1A0F  0020               	movlb	0	; select bank0
 11436  1A10  066C               	xorwf	??_setShortCircuitProtection,w
 11437  1A11  39E7               	andlw	-25
 11438  1A12  066C               	xorwf	??_setShortCircuitProtection,w
 11439  1A13  0022               	movlb	2	; select bank2
 11440  1A14  00ED               	movwf	_protect1^(0+256)
 11441  1A15                     l7438:	
 11442                           
 11443                           ;BQ76920.c: 99:     }
 11444  1A15  3001               	movlw	1
 11445  1A16  0021               	movlb	1	; select bank1
 11446  1A17  07AA               	addwf	setShortCircuitProtection@i_1000^(0+128),f
 11447  1A18  3000               	movlw	0
 11448  1A19  3DAB               	addwfc	(setShortCircuitProtection@i_1000+1)^(0+128),f
 11449  1A1A  3000               	movlw	0
 11450  1A1B  022B               	subwf	(setShortCircuitProtection@i_1000+1)^(0+128),w
 11451  1A1C  3007               	movlw	7
 11452  1A1D  1903               	skipnz
 11453  1A1E  022A               	subwf	setShortCircuitProtection@i_1000^(0+128),w
 11454  1A1F  1C03               	skipc
 11455  1A20  29EB               	goto	l7434
 11456                           
 11457                           ;BQ76920.c: 100:     protect1.bits.RSNS = 0;
 11458  1A21  0022               	movlb	2	; select bank2
 11459  1A22  13ED               	bcf	_protect1^(0+256),7
 11460                           
 11461                           ;BQ76920.c: 102:     I2C_writeRegister(0x18, 0x06, protect1.regByte);
 11462  1A23  3018               	movlw	24
 11463  1A24  00F5               	movwf	I2C_writeRegister@slaveAddress
 11464  1A25  3000               	movlw	0
 11465  1A26  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11466  1A27  3006               	movlw	6
 11467  1A28  00F7               	movwf	I2C_writeRegister@regAddress
 11468  1A29  3000               	movlw	0
 11469  1A2A  00F8               	movwf	I2C_writeRegister@regAddress+1
 11470  1A2B  086D               	movf	_protect1^(0+256),w
 11471  1A2C  0020               	movlb	0	; select bank0
 11472  1A2D  00EC               	movwf	??_setShortCircuitProtection
 11473  1A2E  01ED               	clrf	??_setShortCircuitProtection+1
 11474  1A2F  086C               	movf	??_setShortCircuitProtection,w
 11475  1A30  00F9               	movwf	I2C_writeRegister@data
 11476  1A31  086D               	movf	??_setShortCircuitProtection+1,w
 11477  1A32  00FA               	movwf	I2C_writeRegister@data+1
 11478  1A33  31B3  23DF         	fcall	_I2C_writeRegister
 11479  1A35  0008               	return
 11480  1A36                     __end_of_setShortCircuitProtection:	
 11481                           
 11482                           	psect	text39
 11483  1809                     __ptext39:	
 11484 ;; *************** function _setOverCurrentDischargeProtection *****************
 11485 ;; Defined at:
 11486 ;;		line 109 in file "BQ76920.c"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;  current_mA      4   70[BANK0 ] long 
 11489 ;;  delay_ms        2   74[BANK0 ] int 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;  i               2   10[BANK1 ] int 
 11492 ;;  i               2    8[BANK1 ] int 
 11493 ;;  scaler          4    0[BANK1 ] float 
 11494 ;; Return value:  Size  Location     Type
 11495 ;;                  1    wreg      void 
 11496 ;; Registers used:
 11497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11498 ;; Tracked objects:
 11499 ;;		On entry : 0/0
 11500 ;;		On exit  : 0/0
 11501 ;;		Unchanged: 0/0
 11502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11503 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11504 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11505 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11506 ;;      Totals:         0       9      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11507 ;;Total ram usage:       21 bytes
 11508 ;; Hardware stack levels used:    1
 11509 ;; Hardware stack levels required when called:    3
 11510 ;; This function calls:
 11511 ;;		_I2C_writeRegister
 11512 ;;		___fldiv
 11513 ;;		___flge
 11514 ;;		___flmul
 11515 ;;		___xxtofl
 11516 ;; This function is called by:
 11517 ;;		_init_AFE
 11518 ;; This function uses a non-reentrant model
 11519 ;;
 11520                           
 11521                           
 11522                           ;psect for function _setOverCurrentDischargeProtection
 11523  1809                     _setOverCurrentDischargeProtection:	
 11524                           
 11525                           ;BQ76920.c: 112:     float scaler = 1000.0;
 11526                           
 11527                           ;incstack = 0
 11528                           ; Regs used in _setOverCurrentDischargeProtection: [wreg-fsr0h+status,2+status,0+pclath+
      +                          cstack]
 11529  1809  3044               	movlw	68
 11530  180A  0021               	movlb	1	; select bank1
 11531  180B  00A3               	movwf	(setOverCurrentDischargeProtection@scaler+3)^(0+128)
 11532  180C  307A               	movlw	122
 11533  180D  00A2               	movwf	(setOverCurrentDischargeProtection@scaler+2)^(0+128)
 11534  180E  3000               	movlw	0
 11535  180F  00A1               	movwf	(setOverCurrentDischargeProtection@scaler+1)^(0+128)
 11536  1810  3000               	movlw	0
 11537  1811  00A0               	movwf	setOverCurrentDischargeProtection@scaler^(0+128)
 11538                           
 11539                           ;BQ76920.c: 113:     protect2.bits.OCD_THRESH = 0;
 11540  1812  30F0               	movlw	-16
 11541  1813  0022               	movlb	2	; select bank2
 11542  1814  05EC               	andwf	_protect2^(0+256),f
 11543                           
 11544                           ;BQ76920.c: 114:     for (int i = 0; i < (sizeof(OCD_threshold_setting) / sizeof((OCD_th
      +                          reshold_setting)[0])) - 1; i++) {
 11545  1815  0021               	movlb	1	; select bank1
 11546  1816  01A8               	clrf	setOverCurrentDischargeProtection@i^(0+128)
 11547  1817  01A9               	clrf	(setOverCurrentDischargeProtection@i+1)^(0+128)
 11548  1818                     l7454:	
 11549                           
 11550                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11551  1818  0023               	movlb	3	; select bank3
 11552  1819  083B               	movf	(_shuntResistorValue_mOhm+3)^(0+384),w
 11553  181A  0020               	movlb	0	; select bank0
 11554  181B  00A9               	movwf	___flmul@b+3
 11555  181C  0023               	movlb	3	; select bank3
 11556  181D  083A               	movf	(_shuntResistorValue_mOhm+2)^(0+384),w
 11557  181E  0020               	movlb	0	; select bank0
 11558  181F  00A8               	movwf	___flmul@b+2
 11559  1820  0023               	movlb	3	; select bank3
 11560  1821  0839               	movf	(_shuntResistorValue_mOhm+1)^(0+384),w
 11561  1822  0020               	movlb	0	; select bank0
 11562  1823  00A7               	movwf	___flmul@b+1
 11563  1824  0023               	movlb	3	; select bank3
 11564  1825  0838               	movf	_shuntResistorValue_mOhm^(0+384),w
 11565  1826  0020               	movlb	0	; select bank0
 11566  1827  00A6               	movwf	___flmul@b
 11567  1828  0869               	movf	setOverCurrentDischargeProtection@current_mA+3,w
 11568  1829  00F4               	movwf	___xxtofl@val+3
 11569  182A  0868               	movf	setOverCurrentDischargeProtection@current_mA+2,w
 11570  182B  00F3               	movwf	___xxtofl@val+2
 11571  182C  0867               	movf	setOverCurrentDischargeProtection@current_mA+1,w
 11572  182D  00F2               	movwf	___xxtofl@val+1
 11573  182E  0866               	movf	setOverCurrentDischargeProtection@current_mA,w
 11574  182F  00F1               	movwf	___xxtofl@val
 11575  1830  3001               	movlw	1
 11576  1831  31AB  23E3  3198   	fcall	___xxtofl
 11577  1834  0874               	movf	?___xxtofl+3,w
 11578  1835  0020               	movlb	0	; select bank0
 11579  1836  00AD               	movwf	___flmul@a+3
 11580  1837  0873               	movf	?___xxtofl+2,w
 11581  1838  00AC               	movwf	___flmul@a+2
 11582  1839  0872               	movf	?___xxtofl+1,w
 11583  183A  00AB               	movwf	___flmul@a+1
 11584  183B  0871               	movf	?___xxtofl,w
 11585  183C  00AA               	movwf	___flmul@a
 11586  183D  3190  2022  3198   	fcall	___flmul
 11587  1840  0020               	movlb	0	; select bank0
 11588  1841  0829               	movf	?___flmul+3,w
 11589  1842  0021               	movlb	1	; select bank1
 11590  1843  00A7               	movwf	(_setOverCurrentDischargeProtection$2145+3)^(0+128)
 11591  1844  0020               	movlb	0	; select bank0
 11592  1845  0828               	movf	?___flmul+2,w
 11593  1846  0021               	movlb	1	; select bank1
 11594  1847  00A6               	movwf	(_setOverCurrentDischargeProtection$2145+2)^(0+128)
 11595  1848  0020               	movlb	0	; select bank0
 11596  1849  0827               	movf	?___flmul+1,w
 11597  184A  0021               	movlb	1	; select bank1
 11598  184B  00A5               	movwf	(_setOverCurrentDischargeProtection$2145+1)^(0+128)
 11599  184C  0020               	movlb	0	; select bank0
 11600  184D  0826               	movf	?___flmul,w
 11601  184E  0021               	movlb	1	; select bank1
 11602  184F  00A4               	movwf	_setOverCurrentDischargeProtection$2145^(0+128)
 11603                           
 11604                           ;BQ76920.c: 115:         if (((current_mA * shuntResistorValue_mOhm * scaler) / 1000.0) 
      +                          >= OCD_threshold_setting[i]) {
 11605  1850  3044               	movlw	68
 11606  1851  0020               	movlb	0	; select bank0
 11607  1852  00C3               	movwf	___fldiv@a+3
 11608  1853  307A               	movlw	122
 11609  1854  00C2               	movwf	___fldiv@a+2
 11610  1855  3000               	movlw	0
 11611  1856  00C1               	movwf	___fldiv@a+1
 11612  1857  3000               	movlw	0
 11613  1858  00C0               	movwf	___fldiv@a
 11614  1859  0021               	movlb	1	; select bank1
 11615  185A  0823               	movf	(setOverCurrentDischargeProtection@scaler+3)^(0+128),w
 11616  185B  0020               	movlb	0	; select bank0
 11617  185C  00A9               	movwf	___flmul@b+3
 11618  185D  0021               	movlb	1	; select bank1
 11619  185E  0822               	movf	(setOverCurrentDischargeProtection@scaler+2)^(0+128),w
 11620  185F  0020               	movlb	0	; select bank0
 11621  1860  00A8               	movwf	___flmul@b+2
 11622  1861  0021               	movlb	1	; select bank1
 11623  1862  0821               	movf	(setOverCurrentDischargeProtection@scaler+1)^(0+128),w
 11624  1863  0020               	movlb	0	; select bank0
 11625  1864  00A7               	movwf	___flmul@b+1
 11626  1865  0021               	movlb	1	; select bank1
 11627  1866  0820               	movf	setOverCurrentDischargeProtection@scaler^(0+128),w
 11628  1867  0020               	movlb	0	; select bank0
 11629  1868  00A6               	movwf	___flmul@b
 11630  1869  0021               	movlb	1	; select bank1
 11631  186A  0827               	movf	(_setOverCurrentDischargeProtection$2145+3)^(0+128),w
 11632  186B  0020               	movlb	0	; select bank0
 11633  186C  00AD               	movwf	___flmul@a+3
 11634  186D  0021               	movlb	1	; select bank1
 11635  186E  0826               	movf	(_setOverCurrentDischargeProtection$2145+2)^(0+128),w
 11636  186F  0020               	movlb	0	; select bank0
 11637  1870  00AC               	movwf	___flmul@a+2
 11638  1871  0021               	movlb	1	; select bank1
 11639  1872  0825               	movf	(_setOverCurrentDischargeProtection$2145+1)^(0+128),w
 11640  1873  0020               	movlb	0	; select bank0
 11641  1874  00AB               	movwf	___flmul@a+1
 11642  1875  0021               	movlb	1	; select bank1
 11643  1876  0824               	movf	_setOverCurrentDischargeProtection$2145^(0+128),w
 11644  1877  0020               	movlb	0	; select bank0
 11645  1878  00AA               	movwf	___flmul@a
 11646  1879  3190  2022  3198   	fcall	___flmul
 11647  187C  0020               	movlb	0	; select bank0
 11648  187D  0829               	movf	?___flmul+3,w
 11649  187E  00C7               	movwf	___fldiv@b+3
 11650  187F  0828               	movf	?___flmul+2,w
 11651  1880  00C6               	movwf	___fldiv@b+2
 11652  1881  0827               	movf	?___flmul+1,w
 11653  1882  00C5               	movwf	___fldiv@b+1
 11654  1883  0826               	movf	?___flmul,w
 11655  1884  00C4               	movwf	___fldiv@b
 11656  1885  319C  24E2  3198   	fcall	___fldiv
 11657  1888  0020               	movlb	0	; select bank0
 11658  1889  0843               	movf	?___fldiv+3,w
 11659  188A  00DD               	movwf	___flge@ff1+3
 11660  188B  0842               	movf	?___fldiv+2,w
 11661  188C  00DC               	movwf	___flge@ff1+2
 11662  188D  0841               	movf	?___fldiv+1,w
 11663  188E  00DB               	movwf	___flge@ff1+1
 11664  188F  0840               	movf	?___fldiv,w
 11665  1890  00DA               	movwf	___flge@ff1
 11666  1891  0021               	movlb	1	; select bank1
 11667  1892  0829               	movf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11668  1893  0085               	movwf	5
 11669  1894  0828               	movf	setOverCurrentDischargeProtection@i^(0+128),w
 11670  1895  0084               	movwf	4
 11671  1896  3584               	lslf	4,f
 11672  1897  0D85               	rlf	5,f
 11673  1898  3050               	movlw	low (_OCD_threshold_setting| (0+32768))
 11674  1899  0784               	addwf	4,f
 11675  189A  30B8               	movlw	high (_OCD_threshold_setting| (0+32768))
 11676  189B  3D85               	addwfc	5,f
 11677  189C  3F00               	moviw [0]fsr0
 11678  189D  0020               	movlb	0	; select bank0
 11679  189E  00EC               	movwf	??_setOverCurrentDischargeProtection
 11680  189F  3F01               	moviw [1]fsr0
 11681  18A0  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11682  18A1  086C               	movf	??_setOverCurrentDischargeProtection,w
 11683  18A2  00F1               	movwf	___xxtofl@val
 11684  18A3  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11685  18A4  00F2               	movwf	___xxtofl@val+1
 11686  18A5  0D89               	rlf	9,f
 11687  18A6  3B89               	subwfb	9,f
 11688  18A7  0989               	comf	9,f
 11689  18A8  00F3               	movwf	___xxtofl@val+2
 11690  18A9  00F4               	movwf	___xxtofl@val+3
 11691  18AA  3001               	movlw	1
 11692  18AB  31AB  23E3  3198   	fcall	___xxtofl
 11693  18AE  0874               	movf	?___xxtofl+3,w
 11694  18AF  0020               	movlb	0	; select bank0
 11695  18B0  00E1               	movwf	___flge@ff2+3
 11696  18B1  0873               	movf	?___xxtofl+2,w
 11697  18B2  00E0               	movwf	___flge@ff2+2
 11698  18B3  0872               	movf	?___xxtofl+1,w
 11699  18B4  00DF               	movwf	___flge@ff2+1
 11700  18B5  0871               	movf	?___xxtofl,w
 11701  18B6  00DE               	movwf	___flge@ff2
 11702  18B7  31A9  21EC  3198   	fcall	___flge
 11703  18BA  1C03               	btfss	3,0
 11704  18BB  28C4               	goto	l7460
 11705                           
 11706                           ;BQ76920.c: 116:             protect2.bits.OCD_THRESH = i;
 11707  18BC  0022               	movlb	2	; select bank2
 11708  18BD  086C               	movf	_protect2^(0+256),w
 11709  18BE  0021               	movlb	1	; select bank1
 11710  18BF  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11711  18C0  39F0               	andlw	-16
 11712  18C1  0628               	xorwf	setOverCurrentDischargeProtection@i^(0+128),w
 11713  18C2  0022               	movlb	2	; select bank2
 11714  18C3  00EC               	movwf	_protect2^(0+256)
 11715  18C4                     l7460:	
 11716                           
 11717                           ;BQ76920.c: 118:     }
 11718  18C4  3001               	movlw	1
 11719  18C5  0021               	movlb	1	; select bank1
 11720  18C6  07A8               	addwf	setOverCurrentDischargeProtection@i^(0+128),f
 11721  18C7  3000               	movlw	0
 11722  18C8  3DA9               	addwfc	(setOverCurrentDischargeProtection@i+1)^(0+128),f
 11723  18C9  3000               	movlw	0
 11724  18CA  0229               	subwf	(setOverCurrentDischargeProtection@i+1)^(0+128),w
 11725  18CB  300F               	movlw	15
 11726  18CC  1903               	skipnz
 11727  18CD  0228               	subwf	setOverCurrentDischargeProtection@i^(0+128),w
 11728  18CE  1C03               	skipc
 11729  18CF  2818               	goto	l7454
 11730                           
 11731                           ;BQ76920.c: 120:     protect2.bits.OCD_DELAY = 0;
 11732  18D0  308F               	movlw	-113
 11733  18D1  0022               	movlb	2	; select bank2
 11734  18D2  05EC               	andwf	_protect2^(0+256),f
 11735                           
 11736                           ;BQ76920.c: 121:     for (int i = 0; i < (sizeof(OCD_delay_setting) / sizeof((OCD_delay_
      +                          setting)[0])) - 1; i++) {
 11737  18D3  0021               	movlb	1	; select bank1
 11738  18D4  01AA               	clrf	setOverCurrentDischargeProtection@i_1009^(0+128)
 11739  18D5  01AB               	clrf	(setOverCurrentDischargeProtection@i_1009+1)^(0+128)
 11740  18D6                     l7472:	
 11741                           
 11742                           ;BQ76920.c: 122:         if (delay_ms >= OCD_delay_setting[i]) {
 11743  18D6  082B               	movf	(setOverCurrentDischargeProtection@i_1009+1)^(0+128),w
 11744  18D7  0085               	movwf	5
 11745  18D8  082A               	movf	setOverCurrentDischargeProtection@i_1009^(0+128),w
 11746  18D9  0084               	movwf	4
 11747  18DA  3584               	lslf	4,f
 11748  18DB  0D85               	rlf	5,f
 11749  18DC  3064               	movlw	low (_OCD_delay_setting| (0+32768))
 11750  18DD  0784               	addwf	4,f
 11751  18DE  30B9               	movlw	high (_OCD_delay_setting| (0+32768))
 11752  18DF  3D85               	addwfc	5,f
 11753  18E0  3F00               	moviw [0]fsr0
 11754  18E1  0020               	movlb	0	; select bank0
 11755  18E2  00EC               	movwf	??_setOverCurrentDischargeProtection
 11756  18E3  3F01               	moviw [1]fsr0
 11757  18E4  00ED               	movwf	??_setOverCurrentDischargeProtection+1
 11758  18E5  086B               	movf	setOverCurrentDischargeProtection@delay_ms+1,w
 11759  18E6  3A80               	xorlw	128
 11760  18E7  00EE               	movwf	??_setOverCurrentDischargeProtection+2
 11761  18E8  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11762  18E9  3A80               	xorlw	128
 11763  18EA  026E               	subwf	??_setOverCurrentDischargeProtection+2,w
 11764  18EB  1D03               	skipz
 11765  18EC  28EF               	goto	u9425
 11766  18ED  086C               	movf	??_setOverCurrentDischargeProtection,w
 11767  18EE  026A               	subwf	setOverCurrentDischargeProtection@delay_ms,w
 11768  18EF                     u9425:	
 11769  18EF  1C03               	skipc
 11770  18F0  28FE               	goto	l7476
 11771                           
 11772                           ;BQ76920.c: 123:             protect2.bits.OCD_DELAY = i;
 11773  18F1  0021               	movlb	1	; select bank1
 11774  18F2  082A               	movf	setOverCurrentDischargeProtection@i_1009^(0+128),w
 11775  18F3  0020               	movlb	0	; select bank0
 11776  18F4  00EC               	movwf	??_setOverCurrentDischargeProtection
 11777  18F5  0EEC               	swapf	??_setOverCurrentDischargeProtection,f
 11778  18F6  0022               	movlb	2	; select bank2
 11779  18F7  086C               	movf	_protect2^(0+256),w
 11780  18F8  0020               	movlb	0	; select bank0
 11781  18F9  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11782  18FA  398F               	andlw	-113
 11783  18FB  066C               	xorwf	??_setOverCurrentDischargeProtection,w
 11784  18FC  0022               	movlb	2	; select bank2
 11785  18FD  00EC               	movwf	_protect2^(0+256)
 11786  18FE                     l7476:	
 11787                           
 11788                           ;BQ76920.c: 125:     }
 11789  18FE  3001               	movlw	1
 11790  18FF  0021               	movlb	1	; select bank1
 11791  1900  07AA               	addwf	setOverCurrentDischargeProtection@i_1009^(0+128),f
 11792  1901  3000               	movlw	0
 11793  1902  3DAB               	addwfc	(setOverCurrentDischargeProtection@i_1009+1)^(0+128),f
 11794  1903  3000               	movlw	0
 11795  1904  022B               	subwf	(setOverCurrentDischargeProtection@i_1009+1)^(0+128),w
 11796  1905  3007               	movlw	7
 11797  1906  1903               	skipnz
 11798  1907  022A               	subwf	setOverCurrentDischargeProtection@i_1009^(0+128),w
 11799  1908  1C03               	skipc
 11800  1909  28D6               	goto	l7472
 11801                           
 11802                           ;BQ76920.c: 127:     I2C_writeRegister(0x18, 0x07, protect2.regByte);
 11803  190A  3018               	movlw	24
 11804  190B  00F5               	movwf	I2C_writeRegister@slaveAddress
 11805  190C  3000               	movlw	0
 11806  190D  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 11807  190E  3007               	movlw	7
 11808  190F  00F7               	movwf	I2C_writeRegister@regAddress
 11809  1910  3000               	movlw	0
 11810  1911  00F8               	movwf	I2C_writeRegister@regAddress+1
 11811  1912  0022               	movlb	2	; select bank2
 11812  1913  086C               	movf	_protect2^(0+256),w
 11813  1914  0020               	movlb	0	; select bank0
 11814  1915  00EC               	movwf	??_setOverCurrentDischargeProtection
 11815  1916  01ED               	clrf	??_setOverCurrentDischargeProtection+1
 11816  1917  086C               	movf	??_setOverCurrentDischargeProtection,w
 11817  1918  00F9               	movwf	I2C_writeRegister@data
 11818  1919  086D               	movf	??_setOverCurrentDischargeProtection+1,w
 11819  191A  00FA               	movwf	I2C_writeRegister@data+1
 11820  191B  31B3  23DF         	fcall	_I2C_writeRegister
 11821  191D  0008               	return
 11822  191E                     __end_of_setOverCurrentDischargeProtection:	
 11823                           
 11824                           	psect	text40
 11825  29EC                     __ptext40:	
 11826 ;; *************** function ___flge *****************
 11827 ;; Defined at:
 11828 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flge.c"
 11829 ;; Parameters:    Size  Location     Type
 11830 ;;  ff1             4   58[BANK0 ] void 
 11831 ;;  ff2             4   62[BANK0 ] void 
 11832 ;; Auto vars:     Size  Location     Type
 11833 ;;		None
 11834 ;; Return value:  Size  Location     Type
 11835 ;;		None               void
 11836 ;; Registers used:
 11837 ;;		wreg, status,2, status,0
 11838 ;; Tracked objects:
 11839 ;;		On entry : 0/0
 11840 ;;		On exit  : 0/0
 11841 ;;		Unchanged: 0/0
 11842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11843 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11845 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11846 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11847 ;;Total ram usage:       12 bytes
 11848 ;; Hardware stack levels used:    1
 11849 ;; Hardware stack levels required when called:    1
 11850 ;; This function calls:
 11851 ;;		Nothing
 11852 ;; This function is called by:
 11853 ;;		_setShortCircuitProtection
 11854 ;;		_setOverCurrentDischargeProtection
 11855 ;; This function uses a non-reentrant model
 11856 ;;
 11857                           
 11858                           
 11859                           ;psect for function ___flge
 11860  29EC                     ___flge:	
 11861                           
 11862                           ;incstack = 0
 11863                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11864  29EC  3000               	movlw	0
 11865  29ED  0020               	movlb	0	; select bank0
 11866  29EE  055A               	andwf	___flge@ff1,w
 11867  29EF  00E2               	movwf	??___flge
 11868  29F0  3000               	movlw	0
 11869  29F1  055B               	andwf	___flge@ff1+1,w
 11870  29F2  00E3               	movwf	??___flge+1
 11871  29F3  3080               	movlw	128
 11872  29F4  055C               	andwf	___flge@ff1+2,w
 11873  29F5  00E4               	movwf	??___flge+2
 11874  29F6  307F               	movlw	127
 11875  29F7  055D               	andwf	___flge@ff1+3,w
 11876  29F8  00E5               	movwf	??___flge+3
 11877  29F9  0865               	movf	??___flge+3,w
 11878  29FA  0464               	iorwf	??___flge+2,w
 11879  29FB  0463               	iorwf	??___flge+1,w
 11880  29FC  0462               	iorwf	??___flge,w
 11881  29FD  1D03               	skipz
 11882  29FE  2A07               	goto	l1199
 11883  29FF  3000               	movlw	0
 11884  2A00  00DD               	movwf	___flge@ff1+3
 11885  2A01  3000               	movlw	0
 11886  2A02  00DC               	movwf	___flge@ff1+2
 11887  2A03  3000               	movlw	0
 11888  2A04  00DB               	movwf	___flge@ff1+1
 11889  2A05  3000               	movlw	0
 11890  2A06  00DA               	movwf	___flge@ff1
 11891  2A07                     l1199:	
 11892  2A07  3000               	movlw	0
 11893  2A08  055E               	andwf	___flge@ff2,w
 11894  2A09  00E2               	movwf	??___flge
 11895  2A0A  3000               	movlw	0
 11896  2A0B  055F               	andwf	___flge@ff2+1,w
 11897  2A0C  00E3               	movwf	??___flge+1
 11898  2A0D  3080               	movlw	128
 11899  2A0E  0560               	andwf	___flge@ff2+2,w
 11900  2A0F  00E4               	movwf	??___flge+2
 11901  2A10  307F               	movlw	127
 11902  2A11  0561               	andwf	___flge@ff2+3,w
 11903  2A12  00E5               	movwf	??___flge+3
 11904  2A13  0865               	movf	??___flge+3,w
 11905  2A14  0464               	iorwf	??___flge+2,w
 11906  2A15  0463               	iorwf	??___flge+1,w
 11907  2A16  0462               	iorwf	??___flge,w
 11908  2A17  1D03               	skipz
 11909  2A18  2A21               	goto	l5824
 11910  2A19  3000               	movlw	0
 11911  2A1A  00E1               	movwf	___flge@ff2+3
 11912  2A1B  3000               	movlw	0
 11913  2A1C  00E0               	movwf	___flge@ff2+2
 11914  2A1D  3000               	movlw	0
 11915  2A1E  00DF               	movwf	___flge@ff2+1
 11916  2A1F  3000               	movlw	0
 11917  2A20  00DE               	movwf	___flge@ff2
 11918  2A21                     l5824:	
 11919  2A21  1FDD               	btfss	___flge@ff1+3,7
 11920  2A22  2A3B               	goto	l5828
 11921  2A23  3000               	movlw	0
 11922  2A24  00E2               	movwf	??___flge
 11923  2A25  3000               	movlw	0
 11924  2A26  00E3               	movwf	??___flge+1
 11925  2A27  3000               	movlw	0
 11926  2A28  00E4               	movwf	??___flge+2
 11927  2A29  3080               	movlw	128
 11928  2A2A  00E5               	movwf	??___flge+3
 11929  2A2B  085A               	movf	___flge@ff1,w
 11930  2A2C  02E2               	subwf	??___flge,f
 11931  2A2D  085B               	movf	___flge@ff1+1,w
 11932  2A2E  3BE3               	subwfb	??___flge+1,f
 11933  2A2F  085C               	movf	___flge@ff1+2,w
 11934  2A30  3BE4               	subwfb	??___flge+2,f
 11935  2A31  085D               	movf	___flge@ff1+3,w
 11936  2A32  3BE5               	subwfb	??___flge+3,f
 11937  2A33  0865               	movf	??___flge+3,w
 11938  2A34  00DD               	movwf	___flge@ff1+3
 11939  2A35  0864               	movf	??___flge+2,w
 11940  2A36  00DC               	movwf	___flge@ff1+2
 11941  2A37  0863               	movf	??___flge+1,w
 11942  2A38  00DB               	movwf	___flge@ff1+1
 11943  2A39  0862               	movf	??___flge,w
 11944  2A3A  00DA               	movwf	___flge@ff1
 11945  2A3B                     l5828:	
 11946  2A3B  1FE1               	btfss	___flge@ff2+3,7
 11947  2A3C  2A55               	goto	l1202
 11948  2A3D  3000               	movlw	0
 11949  2A3E  00E2               	movwf	??___flge
 11950  2A3F  3000               	movlw	0
 11951  2A40  00E3               	movwf	??___flge+1
 11952  2A41  3000               	movlw	0
 11953  2A42  00E4               	movwf	??___flge+2
 11954  2A43  3080               	movlw	128
 11955  2A44  00E5               	movwf	??___flge+3
 11956  2A45  085E               	movf	___flge@ff2,w
 11957  2A46  02E2               	subwf	??___flge,f
 11958  2A47  085F               	movf	___flge@ff2+1,w
 11959  2A48  3BE3               	subwfb	??___flge+1,f
 11960  2A49  0860               	movf	___flge@ff2+2,w
 11961  2A4A  3BE4               	subwfb	??___flge+2,f
 11962  2A4B  0861               	movf	___flge@ff2+3,w
 11963  2A4C  3BE5               	subwfb	??___flge+3,f
 11964  2A4D  0865               	movf	??___flge+3,w
 11965  2A4E  00E1               	movwf	___flge@ff2+3
 11966  2A4F  0864               	movf	??___flge+2,w
 11967  2A50  00E0               	movwf	___flge@ff2+2
 11968  2A51  0863               	movf	??___flge+1,w
 11969  2A52  00DF               	movwf	___flge@ff2+1
 11970  2A53  0862               	movf	??___flge,w
 11971  2A54  00DE               	movwf	___flge@ff2
 11972  2A55                     l1202:	
 11973  2A55  3080               	movlw	128
 11974  2A56  06DD               	xorwf	___flge@ff1+3,f
 11975  2A57  3080               	movlw	128
 11976  2A58  06E1               	xorwf	___flge@ff2+3,f
 11977  2A59  0861               	movf	___flge@ff2+3,w
 11978  2A5A  025D               	subwf	___flge@ff1+3,w
 11979  2A5B  1D03               	skipz
 11980  2A5C  0008               	return
 11981  2A5D  0860               	movf	___flge@ff2+2,w
 11982  2A5E  025C               	subwf	___flge@ff1+2,w
 11983  2A5F  1D03               	skipz
 11984  2A60  0008               	return
 11985  2A61  085F               	movf	___flge@ff2+1,w
 11986  2A62  025B               	subwf	___flge@ff1+1,w
 11987  2A63  1D03               	skipz
 11988  2A64  0008               	return
 11989  2A65  085E               	movf	___flge@ff2,w
 11990  2A66  025A               	subwf	___flge@ff1,w
 11991  2A67  0008               	return
 11992  2A68                     __end_of___flge:	
 11993                           
 11994                           	psect	text41
 11995  2289                     __ptext41:	
 11996 ;; *************** function _setCellUndervoltageProtection *****************
 11997 ;; Defined at:
 11998 ;;		line 133 in file "BQ76920.c"
 11999 ;; Parameters:    Size  Location     Type
 12000 ;;  voltage_mV      2   18[BANK0 ] int 
 12001 ;;  delay_s         2   20[BANK0 ] int 
 12002 ;; Auto vars:     Size  Location     Type
 12003 ;;  i               2   37[BANK0 ] int 
 12004 ;;  uv_trip         1   36[BANK0 ] unsigned char 
 12005 ;; Return value:  Size  Location     Type
 12006 ;;                  1    wreg      void 
 12007 ;; Registers used:
 12008 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12009 ;; Tracked objects:
 12010 ;;		On entry : 0/0
 12011 ;;		On exit  : 0/0
 12012 ;;		Unchanged: 0/0
 12013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12014 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12015 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12016 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12017 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12018 ;;Total ram usage:       21 bytes
 12019 ;; Hardware stack levels used:    1
 12020 ;; Hardware stack levels required when called:    3
 12021 ;; This function calls:
 12022 ;;		_I2C_writeRegister
 12023 ;;		___aldiv
 12024 ;;		___lmul
 12025 ;;		_readRegister
 12026 ;; This function is called by:
 12027 ;;		_init_AFE
 12028 ;; This function uses a non-reentrant model
 12029 ;;
 12030                           
 12031                           
 12032                           ;psect for function _setCellUndervoltageProtection
 12033  2289                     _setCellUndervoltageProtection:	
 12034                           
 12035                           ;BQ76920.c: 135:     minCellVoltage = voltage_mV;
 12036                           
 12037                           ;incstack = 0
 12038                           ; Regs used in _setCellUndervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
 12039  2289  0020               	movlb	0	; select bank0
 12040  228A  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12041  228B  0023               	movlb	3	; select bank3
 12042  228C  00CB               	movwf	(_minCellVoltage+1)^(0+384)
 12043  228D  0020               	movlb	0	; select bank0
 12044  228E  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12045  228F  0023               	movlb	3	; select bank3
 12046  2290  00CA               	movwf	_minCellVoltage^(0+384)
 12047                           
 12048                           ;BQ76920.c: 137:     protect3.regByte = readRegister(0x18, 0x08);
 12049  2291  3018               	movlw	24
 12050  2292  00F5               	movwf	readRegister@slaveAddress
 12051  2293  3000               	movlw	0
 12052  2294  00F6               	movwf	readRegister@slaveAddress+1
 12053  2295  3008               	movlw	8
 12054  2296  00F7               	movwf	readRegister@regAddress
 12055  2297  3000               	movlw	0
 12056  2298  00F8               	movwf	readRegister@regAddress+1
 12057  2299  31B5  2587  31A2   	fcall	_readRegister
 12058  229C  0875               	movf	?_readRegister,w
 12059  229D  0020               	movlb	0	; select bank0
 12060  229E  00B6               	movwf	??_setCellUndervoltageProtection
 12061  229F  0836               	movf	??_setCellUndervoltageProtection,w
 12062  22A0  0023               	movlb	3	; select bank3
 12063  22A1  00E8               	movwf	_protect3^(0+384)
 12064                           
 12065                           ;BQ76920.c: 138:     uv_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12066  22A2  0022               	movlb	2	; select bank2
 12067  22A3  086E               	movf	_adcGain^(0+256),w
 12068  22A4  0020               	movlb	0	; select bank0
 12069  22A5  00A4               	movwf	___aldiv@divisor
 12070  22A6  0022               	movlb	2	; select bank2
 12071  22A7  086F               	movf	(_adcGain+1)^(0+256),w
 12072  22A8  0020               	movlb	0	; select bank0
 12073  22A9  00A5               	movwf	___aldiv@divisor+1
 12074  22AA  0D89               	rlf	9,f
 12075  22AB  3B89               	subwfb	9,f
 12076  22AC  0989               	comf	9,f
 12077  22AD  00A6               	movwf	___aldiv@divisor+2
 12078  22AE  00A7               	movwf	___aldiv@divisor+3
 12079  22AF  0022               	movlb	2	; select bank2
 12080  22B0  086A               	movf	_adcOffset^(0+256),w
 12081  22B1  0020               	movlb	0	; select bank0
 12082  22B2  00B6               	movwf	??_setCellUndervoltageProtection
 12083  22B3  0022               	movlb	2	; select bank2
 12084  22B4  086B               	movf	(_adcOffset+1)^(0+256),w
 12085  22B5  0020               	movlb	0	; select bank0
 12086  22B6  00B7               	movwf	??_setCellUndervoltageProtection+1
 12087  22B7  3000               	movlw	0
 12088  22B8  1BB7               	btfsc	??_setCellUndervoltageProtection+1,7
 12089  22B9  30FF               	movlw	255
 12090  22BA  00B8               	movwf	??_setCellUndervoltageProtection+2
 12091  22BB  00B9               	movwf	??_setCellUndervoltageProtection+3
 12092  22BC  0832               	movf	setCellUndervoltageProtection@voltage_mV,w
 12093  22BD  00BA               	movwf	??_setCellUndervoltageProtection+4
 12094  22BE  0833               	movf	setCellUndervoltageProtection@voltage_mV+1,w
 12095  22BF  00BB               	movwf	??_setCellUndervoltageProtection+5
 12096  22C0  3000               	movlw	0
 12097  22C1  1BBB               	btfsc	??_setCellUndervoltageProtection+5,7
 12098  22C2  30FF               	movlw	255
 12099  22C3  00BC               	movwf	??_setCellUndervoltageProtection+6
 12100  22C4  00BD               	movwf	??_setCellUndervoltageProtection+7
 12101  22C5  0836               	movf	??_setCellUndervoltageProtection,w
 12102  22C6  02BA               	subwf	??_setCellUndervoltageProtection+4,f
 12103  22C7  0837               	movf	??_setCellUndervoltageProtection+1,w
 12104  22C8  3BBB               	subwfb	??_setCellUndervoltageProtection+5,f
 12105  22C9  0838               	movf	??_setCellUndervoltageProtection+2,w
 12106  22CA  3BBC               	subwfb	??_setCellUndervoltageProtection+6,f
 12107  22CB  0839               	movf	??_setCellUndervoltageProtection+3,w
 12108  22CC  3BBD               	subwfb	??_setCellUndervoltageProtection+7,f
 12109  22CD  083D               	movf	??_setCellUndervoltageProtection+7,w
 12110  22CE  00F4               	movwf	___lmul@multiplier+3
 12111  22CF  083C               	movf	??_setCellUndervoltageProtection+6,w
 12112  22D0  00F3               	movwf	___lmul@multiplier+2
 12113  22D1  083B               	movf	??_setCellUndervoltageProtection+5,w
 12114  22D2  00F2               	movwf	___lmul@multiplier+1
 12115  22D3  083A               	movf	??_setCellUndervoltageProtection+4,w
 12116  22D4  00F1               	movwf	___lmul@multiplier
 12117  22D5  3000               	movlw	0
 12118  22D6  00F8               	movwf	___lmul@multiplicand+3
 12119  22D7  3000               	movlw	0
 12120  22D8  00F7               	movwf	___lmul@multiplicand+2
 12121  22D9  3003               	movlw	3
 12122  22DA  00F6               	movwf	___lmul@multiplicand+1
 12123  22DB  30E8               	movlw	232
 12124  22DC  00F5               	movwf	___lmul@multiplicand
 12125  22DD  31B4  24EE  31A2   	fcall	___lmul
 12126  22E0  0874               	movf	?___lmul+3,w
 12127  22E1  0020               	movlb	0	; select bank0
 12128  22E2  00AB               	movwf	___aldiv@dividend+3
 12129  22E3  0873               	movf	?___lmul+2,w
 12130  22E4  00AA               	movwf	___aldiv@dividend+2
 12131  22E5  0872               	movf	?___lmul+1,w
 12132  22E6  00A9               	movwf	___aldiv@dividend+1
 12133  22E7  0871               	movf	?___lmul,w
 12134  22E8  00A8               	movwf	___aldiv@dividend
 12135  22E9  31AB  2361  31A2   	fcall	___aldiv
 12136  22EC  0020               	movlb	0	; select bank0
 12137  22ED  0824               	movf	?___aldiv,w
 12138  22EE  00BE               	movwf	??_setCellUndervoltageProtection+8
 12139  22EF  0825               	movf	?___aldiv+1,w
 12140  22F0  00BF               	movwf	??_setCellUndervoltageProtection+9
 12141  22F1  0826               	movf	?___aldiv+2,w
 12142  22F2  00C0               	movwf	??_setCellUndervoltageProtection+10
 12143  22F3  0827               	movf	?___aldiv+3,w
 12144  22F4  00C1               	movwf	??_setCellUndervoltageProtection+11
 12145  22F5  3004               	movlw	4
 12146  22F6  00C2               	movwf	??_setCellUndervoltageProtection+12
 12147  22F7                     u9445:	
 12148  22F7  37C1               	asrf	??_setCellUndervoltageProtection+11,f
 12149  22F8  0CC0               	rrf	??_setCellUndervoltageProtection+10,f
 12150  22F9  0CBF               	rrf	??_setCellUndervoltageProtection+9,f
 12151  22FA  0CBE               	rrf	??_setCellUndervoltageProtection+8,f
 12152  22FB  0BC2               	decfsz	??_setCellUndervoltageProtection+12,f
 12153  22FC  2AF7               	goto	u9445
 12154  22FD  083E               	movf	??_setCellUndervoltageProtection+8,w
 12155  22FE  00C3               	movwf	??_setCellUndervoltageProtection+13
 12156  22FF  0843               	movf	??_setCellUndervoltageProtection+13,w
 12157  2300  00C4               	movwf	setCellUndervoltageProtection@uv_trip
 12158                           
 12159                           ;BQ76920.c: 139:     uv_trip += 1;
 12160  2301  3001               	movlw	1
 12161  2302  00B6               	movwf	??_setCellUndervoltageProtection
 12162  2303  0836               	movf	??_setCellUndervoltageProtection,w
 12163  2304  07C4               	addwf	setCellUndervoltageProtection@uv_trip,f
 12164                           
 12165                           ;BQ76920.c: 140:     I2C_writeRegister(0x18, 0x0A, uv_trip);
 12166  2305  3018               	movlw	24
 12167  2306  00F5               	movwf	I2C_writeRegister@slaveAddress
 12168  2307  3000               	movlw	0
 12169  2308  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12170  2309  300A               	movlw	10
 12171  230A  00F7               	movwf	I2C_writeRegister@regAddress
 12172  230B  3000               	movlw	0
 12173  230C  00F8               	movwf	I2C_writeRegister@regAddress+1
 12174  230D  0844               	movf	setCellUndervoltageProtection@uv_trip,w
 12175  230E  00B6               	movwf	??_setCellUndervoltageProtection
 12176  230F  01B7               	clrf	??_setCellUndervoltageProtection+1
 12177  2310  0836               	movf	??_setCellUndervoltageProtection,w
 12178  2311  00F9               	movwf	I2C_writeRegister@data
 12179  2312  0837               	movf	??_setCellUndervoltageProtection+1,w
 12180  2313  00FA               	movwf	I2C_writeRegister@data+1
 12181  2314  31B3  23DF  31A2   	fcall	_I2C_writeRegister
 12182                           
 12183                           ;BQ76920.c: 142:     protect3.bits.UV_DELAY = 0;
 12184  2317  303F               	movlw	-193
 12185  2318  0023               	movlb	3	; select bank3
 12186  2319  05E8               	andwf	_protect3^(0+384),f
 12187                           
 12188                           ;BQ76920.c: 143:     for (int i = 0; i < (sizeof(UV_delay_setting) / sizeof((UV_delay_se
      +                          tting)[0])) - 1; i++) {
 12189  231A  0020               	movlb	0	; select bank0
 12190  231B  01C5               	clrf	setCellUndervoltageProtection@i
 12191  231C  01C6               	clrf	setCellUndervoltageProtection@i+1
 12192  231D                     l7502:	
 12193                           
 12194                           ;BQ76920.c: 144:         if (delay_s >= UV_delay_setting[i]) {
 12195  231D  0846               	movf	setCellUndervoltageProtection@i+1,w
 12196  231E  0085               	movwf	5
 12197  231F  0845               	movf	setCellUndervoltageProtection@i,w
 12198  2320  0084               	movwf	4
 12199  2321  3584               	lslf	4,f
 12200  2322  0D85               	rlf	5,f
 12201  2323  308C               	movlw	low (_UV_delay_setting| (0+32768))
 12202  2324  0784               	addwf	4,f
 12203  2325  30B9               	movlw	high (_UV_delay_setting| (0+32768))
 12204  2326  3D85               	addwfc	5,f
 12205  2327  3F00               	moviw [0]fsr0
 12206  2328  00B6               	movwf	??_setCellUndervoltageProtection
 12207  2329  3F01               	moviw [1]fsr0
 12208  232A  00B7               	movwf	??_setCellUndervoltageProtection+1
 12209  232B  0835               	movf	setCellUndervoltageProtection@delay_s+1,w
 12210  232C  3A80               	xorlw	128
 12211  232D  00B8               	movwf	??_setCellUndervoltageProtection+2
 12212  232E  0837               	movf	??_setCellUndervoltageProtection+1,w
 12213  232F  3A80               	xorlw	128
 12214  2330  0238               	subwf	??_setCellUndervoltageProtection+2,w
 12215  2331  1D03               	skipz
 12216  2332  2B35               	goto	u9455
 12217  2333  0836               	movf	??_setCellUndervoltageProtection,w
 12218  2334  0234               	subwf	setCellUndervoltageProtection@delay_s,w
 12219  2335                     u9455:	
 12220  2335  1C03               	skipc
 12221  2336  2B45               	goto	l7506
 12222                           
 12223                           ;BQ76920.c: 145:             protect3.bits.UV_DELAY = i;
 12224  2337  0020               	movlb	0	; select bank0
 12225  2338  0845               	movf	setCellUndervoltageProtection@i,w
 12226  2339  00B6               	movwf	??_setCellUndervoltageProtection
 12227  233A  0EB6               	swapf	??_setCellUndervoltageProtection,f
 12228  233B  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12229  233C  0DB6               	rlf	??_setCellUndervoltageProtection,f
 12230  233D  0023               	movlb	3	; select bank3
 12231  233E  0868               	movf	_protect3^(0+384),w
 12232  233F  0020               	movlb	0	; select bank0
 12233  2340  0636               	xorwf	??_setCellUndervoltageProtection,w
 12234  2341  393F               	andlw	-193
 12235  2342  0636               	xorwf	??_setCellUndervoltageProtection,w
 12236  2343  0023               	movlb	3	; select bank3
 12237  2344  00E8               	movwf	_protect3^(0+384)
 12238  2345                     l7506:	
 12239                           
 12240                           ;BQ76920.c: 147:     }
 12241  2345  3001               	movlw	1
 12242  2346  0020               	movlb	0	; select bank0
 12243  2347  07C5               	addwf	setCellUndervoltageProtection@i,f
 12244  2348  3000               	movlw	0
 12245  2349  3DC6               	addwfc	setCellUndervoltageProtection@i+1,f
 12246  234A  3000               	movlw	0
 12247  234B  0246               	subwf	setCellUndervoltageProtection@i+1,w
 12248  234C  3003               	movlw	3
 12249  234D  1903               	skipnz
 12250  234E  0245               	subwf	setCellUndervoltageProtection@i,w
 12251  234F  1C03               	skipc
 12252  2350  2B1D               	goto	l7502
 12253                           
 12254                           ;BQ76920.c: 148:     I2C_writeRegister(0x18, 0x08, protect3.regByte);
 12255  2351  3018               	movlw	24
 12256  2352  00F5               	movwf	I2C_writeRegister@slaveAddress
 12257  2353  3000               	movlw	0
 12258  2354  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12259  2355  3008               	movlw	8
 12260  2356  00F7               	movwf	I2C_writeRegister@regAddress
 12261  2357  3000               	movlw	0
 12262  2358  00F8               	movwf	I2C_writeRegister@regAddress+1
 12263  2359  0023               	movlb	3	; select bank3
 12264  235A  0868               	movf	_protect3^(0+384),w
 12265  235B  0020               	movlb	0	; select bank0
 12266  235C  00B6               	movwf	??_setCellUndervoltageProtection
 12267  235D  01B7               	clrf	??_setCellUndervoltageProtection+1
 12268  235E  0836               	movf	??_setCellUndervoltageProtection,w
 12269  235F  00F9               	movwf	I2C_writeRegister@data
 12270  2360  0837               	movf	??_setCellUndervoltageProtection+1,w
 12271  2361  00FA               	movwf	I2C_writeRegister@data+1
 12272  2362  31B3  23DF         	fcall	_I2C_writeRegister
 12273  2364  0008               	return
 12274  2365                     __end_of_setCellUndervoltageProtection:	
 12275                           
 12276                           	psect	text42
 12277  20D8                     __ptext42:	
 12278 ;; *************** function _setCellOvervoltageProtection *****************
 12279 ;; Defined at:
 12280 ;;		line 154 in file "BQ76920.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;  voltage_mV      2   18[BANK0 ] int 
 12283 ;;  delay_s         2   20[BANK0 ] int 
 12284 ;; Auto vars:     Size  Location     Type
 12285 ;;  i               2   37[BANK0 ] int 
 12286 ;;  ov_trip         1   36[BANK0 ] unsigned char 
 12287 ;; Return value:  Size  Location     Type
 12288 ;;                  1    wreg      void 
 12289 ;; Registers used:
 12290 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12291 ;; Tracked objects:
 12292 ;;		On entry : 0/0
 12293 ;;		On exit  : 0/0
 12294 ;;		Unchanged: 0/0
 12295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12296 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12297 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12298 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12299 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12300 ;;Total ram usage:       21 bytes
 12301 ;; Hardware stack levels used:    1
 12302 ;; Hardware stack levels required when called:    3
 12303 ;; This function calls:
 12304 ;;		_I2C_writeRegister
 12305 ;;		___aldiv
 12306 ;;		___lmul
 12307 ;;		_readRegister
 12308 ;; This function is called by:
 12309 ;;		_init_AFE
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           
 12314                           ;psect for function _setCellOvervoltageProtection
 12315  20D8                     _setCellOvervoltageProtection:	
 12316                           
 12317                           ;BQ76920.c: 156:     maxCellVoltage = voltage_mV;
 12318                           
 12319                           ;incstack = 0
 12320                           ; Regs used in _setCellOvervoltageProtection: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 12321  20D8  0020               	movlb	0	; select bank0
 12322  20D9  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12323  20DA  0023               	movlb	3	; select bank3
 12324  20DB  00CD               	movwf	(_maxCellVoltage+1)^(0+384)
 12325  20DC  0020               	movlb	0	; select bank0
 12326  20DD  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12327  20DE  0023               	movlb	3	; select bank3
 12328  20DF  00CC               	movwf	_maxCellVoltage^(0+384)
 12329                           
 12330                           ;BQ76920.c: 157:     protect3.regByte = readRegister(0x18, 0x08);
 12331  20E0  3018               	movlw	24
 12332  20E1  00F5               	movwf	readRegister@slaveAddress
 12333  20E2  3000               	movlw	0
 12334  20E3  00F6               	movwf	readRegister@slaveAddress+1
 12335  20E4  3008               	movlw	8
 12336  20E5  00F7               	movwf	readRegister@regAddress
 12337  20E6  3000               	movlw	0
 12338  20E7  00F8               	movwf	readRegister@regAddress+1
 12339  20E8  31B5  2587  31A0   	fcall	_readRegister
 12340  20EB  0875               	movf	?_readRegister,w
 12341  20EC  0020               	movlb	0	; select bank0
 12342  20ED  00B6               	movwf	??_setCellOvervoltageProtection
 12343  20EE  0836               	movf	??_setCellOvervoltageProtection,w
 12344  20EF  0023               	movlb	3	; select bank3
 12345  20F0  00E8               	movwf	_protect3^(0+384)
 12346                           
 12347                           ;BQ76920.c: 158:     ov_trip = ((((long) voltage_mV - adcOffset) * 1000 / adcGain) >> 4)
      +                           & 0x00FF;
 12348  20F1  0022               	movlb	2	; select bank2
 12349  20F2  086E               	movf	_adcGain^(0+256),w
 12350  20F3  0020               	movlb	0	; select bank0
 12351  20F4  00A4               	movwf	___aldiv@divisor
 12352  20F5  0022               	movlb	2	; select bank2
 12353  20F6  086F               	movf	(_adcGain+1)^(0+256),w
 12354  20F7  0020               	movlb	0	; select bank0
 12355  20F8  00A5               	movwf	___aldiv@divisor+1
 12356  20F9  0D89               	rlf	9,f
 12357  20FA  3B89               	subwfb	9,f
 12358  20FB  0989               	comf	9,f
 12359  20FC  00A6               	movwf	___aldiv@divisor+2
 12360  20FD  00A7               	movwf	___aldiv@divisor+3
 12361  20FE  0022               	movlb	2	; select bank2
 12362  20FF  086A               	movf	_adcOffset^(0+256),w
 12363  2100  0020               	movlb	0	; select bank0
 12364  2101  00B6               	movwf	??_setCellOvervoltageProtection
 12365  2102  0022               	movlb	2	; select bank2
 12366  2103  086B               	movf	(_adcOffset+1)^(0+256),w
 12367  2104  0020               	movlb	0	; select bank0
 12368  2105  00B7               	movwf	??_setCellOvervoltageProtection+1
 12369  2106  3000               	movlw	0
 12370  2107  1BB7               	btfsc	??_setCellOvervoltageProtection+1,7
 12371  2108  30FF               	movlw	255
 12372  2109  00B8               	movwf	??_setCellOvervoltageProtection+2
 12373  210A  00B9               	movwf	??_setCellOvervoltageProtection+3
 12374  210B  0832               	movf	setCellOvervoltageProtection@voltage_mV,w
 12375  210C  00BA               	movwf	??_setCellOvervoltageProtection+4
 12376  210D  0833               	movf	setCellOvervoltageProtection@voltage_mV+1,w
 12377  210E  00BB               	movwf	??_setCellOvervoltageProtection+5
 12378  210F  3000               	movlw	0
 12379  2110  1BBB               	btfsc	??_setCellOvervoltageProtection+5,7
 12380  2111  30FF               	movlw	255
 12381  2112  00BC               	movwf	??_setCellOvervoltageProtection+6
 12382  2113  00BD               	movwf	??_setCellOvervoltageProtection+7
 12383  2114  0836               	movf	??_setCellOvervoltageProtection,w
 12384  2115  02BA               	subwf	??_setCellOvervoltageProtection+4,f
 12385  2116  0837               	movf	??_setCellOvervoltageProtection+1,w
 12386  2117  3BBB               	subwfb	??_setCellOvervoltageProtection+5,f
 12387  2118  0838               	movf	??_setCellOvervoltageProtection+2,w
 12388  2119  3BBC               	subwfb	??_setCellOvervoltageProtection+6,f
 12389  211A  0839               	movf	??_setCellOvervoltageProtection+3,w
 12390  211B  3BBD               	subwfb	??_setCellOvervoltageProtection+7,f
 12391  211C  083D               	movf	??_setCellOvervoltageProtection+7,w
 12392  211D  00F4               	movwf	___lmul@multiplier+3
 12393  211E  083C               	movf	??_setCellOvervoltageProtection+6,w
 12394  211F  00F3               	movwf	___lmul@multiplier+2
 12395  2120  083B               	movf	??_setCellOvervoltageProtection+5,w
 12396  2121  00F2               	movwf	___lmul@multiplier+1
 12397  2122  083A               	movf	??_setCellOvervoltageProtection+4,w
 12398  2123  00F1               	movwf	___lmul@multiplier
 12399  2124  3000               	movlw	0
 12400  2125  00F8               	movwf	___lmul@multiplicand+3
 12401  2126  3000               	movlw	0
 12402  2127  00F7               	movwf	___lmul@multiplicand+2
 12403  2128  3003               	movlw	3
 12404  2129  00F6               	movwf	___lmul@multiplicand+1
 12405  212A  30E8               	movlw	232
 12406  212B  00F5               	movwf	___lmul@multiplicand
 12407  212C  31B4  24EE  31A0   	fcall	___lmul
 12408  212F  0874               	movf	?___lmul+3,w
 12409  2130  0020               	movlb	0	; select bank0
 12410  2131  00AB               	movwf	___aldiv@dividend+3
 12411  2132  0873               	movf	?___lmul+2,w
 12412  2133  00AA               	movwf	___aldiv@dividend+2
 12413  2134  0872               	movf	?___lmul+1,w
 12414  2135  00A9               	movwf	___aldiv@dividend+1
 12415  2136  0871               	movf	?___lmul,w
 12416  2137  00A8               	movwf	___aldiv@dividend
 12417  2138  31AB  2361  31A0   	fcall	___aldiv
 12418  213B  0020               	movlb	0	; select bank0
 12419  213C  0824               	movf	?___aldiv,w
 12420  213D  00BE               	movwf	??_setCellOvervoltageProtection+8
 12421  213E  0825               	movf	?___aldiv+1,w
 12422  213F  00BF               	movwf	??_setCellOvervoltageProtection+9
 12423  2140  0826               	movf	?___aldiv+2,w
 12424  2141  00C0               	movwf	??_setCellOvervoltageProtection+10
 12425  2142  0827               	movf	?___aldiv+3,w
 12426  2143  00C1               	movwf	??_setCellOvervoltageProtection+11
 12427  2144  3004               	movlw	4
 12428  2145  00C2               	movwf	??_setCellOvervoltageProtection+12
 12429  2146                     u9475:	
 12430  2146  37C1               	asrf	??_setCellOvervoltageProtection+11,f
 12431  2147  0CC0               	rrf	??_setCellOvervoltageProtection+10,f
 12432  2148  0CBF               	rrf	??_setCellOvervoltageProtection+9,f
 12433  2149  0CBE               	rrf	??_setCellOvervoltageProtection+8,f
 12434  214A  0BC2               	decfsz	??_setCellOvervoltageProtection+12,f
 12435  214B  2946               	goto	u9475
 12436  214C  083E               	movf	??_setCellOvervoltageProtection+8,w
 12437  214D  00C3               	movwf	??_setCellOvervoltageProtection+13
 12438  214E  0843               	movf	??_setCellOvervoltageProtection+13,w
 12439  214F  00C4               	movwf	setCellOvervoltageProtection@ov_trip
 12440                           
 12441                           ;BQ76920.c: 159:     I2C_writeRegister(0x18, 0x09, ov_trip);
 12442  2150  3018               	movlw	24
 12443  2151  00F5               	movwf	I2C_writeRegister@slaveAddress
 12444  2152  3000               	movlw	0
 12445  2153  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12446  2154  3009               	movlw	9
 12447  2155  00F7               	movwf	I2C_writeRegister@regAddress
 12448  2156  3000               	movlw	0
 12449  2157  00F8               	movwf	I2C_writeRegister@regAddress+1
 12450  2158  0844               	movf	setCellOvervoltageProtection@ov_trip,w
 12451  2159  00B6               	movwf	??_setCellOvervoltageProtection
 12452  215A  01B7               	clrf	??_setCellOvervoltageProtection+1
 12453  215B  0836               	movf	??_setCellOvervoltageProtection,w
 12454  215C  00F9               	movwf	I2C_writeRegister@data
 12455  215D  0837               	movf	??_setCellOvervoltageProtection+1,w
 12456  215E  00FA               	movwf	I2C_writeRegister@data+1
 12457  215F  31B3  23DF  31A0   	fcall	_I2C_writeRegister
 12458                           
 12459                           ;BQ76920.c: 161:     for (int i = 0; i < (sizeof(OV_delay_setting) / sizeof((OV_delay_se
      +                          tting)[0])) - 1; i++) {
 12460  2162  0020               	movlb	0	; select bank0
 12461  2163  01C5               	clrf	setCellOvervoltageProtection@i
 12462  2164  01C6               	clrf	setCellOvervoltageProtection@i+1
 12463  2165                     l7528:	
 12464                           
 12465                           ;BQ76920.c: 162:         if (delay_s >= OV_delay_setting[i]) {
 12466  2165  0846               	movf	setCellOvervoltageProtection@i+1,w
 12467  2166  0085               	movwf	5
 12468  2167  0845               	movf	setCellOvervoltageProtection@i,w
 12469  2168  0084               	movwf	4
 12470  2169  3584               	lslf	4,f
 12471  216A  0D85               	rlf	5,f
 12472  216B  3084               	movlw	low (_OV_delay_setting| (0+32768))
 12473  216C  0784               	addwf	4,f
 12474  216D  30B9               	movlw	high (_OV_delay_setting| (0+32768))
 12475  216E  3D85               	addwfc	5,f
 12476  216F  3F00               	moviw [0]fsr0
 12477  2170  00B6               	movwf	??_setCellOvervoltageProtection
 12478  2171  3F01               	moviw [1]fsr0
 12479  2172  00B7               	movwf	??_setCellOvervoltageProtection+1
 12480  2173  0835               	movf	setCellOvervoltageProtection@delay_s+1,w
 12481  2174  3A80               	xorlw	128
 12482  2175  00B8               	movwf	??_setCellOvervoltageProtection+2
 12483  2176  0837               	movf	??_setCellOvervoltageProtection+1,w
 12484  2177  3A80               	xorlw	128
 12485  2178  0238               	subwf	??_setCellOvervoltageProtection+2,w
 12486  2179  1D03               	skipz
 12487  217A  297D               	goto	u9485
 12488  217B  0836               	movf	??_setCellOvervoltageProtection,w
 12489  217C  0234               	subwf	setCellOvervoltageProtection@delay_s,w
 12490  217D                     u9485:	
 12491  217D  1C03               	skipc
 12492  217E  298D               	goto	l7532
 12493                           
 12494                           ;BQ76920.c: 163:             protect3.bits.UV_DELAY = i;
 12495  217F  0020               	movlb	0	; select bank0
 12496  2180  0845               	movf	setCellOvervoltageProtection@i,w
 12497  2181  00B6               	movwf	??_setCellOvervoltageProtection
 12498  2182  0EB6               	swapf	??_setCellOvervoltageProtection,f
 12499  2183  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12500  2184  0DB6               	rlf	??_setCellOvervoltageProtection,f
 12501  2185  0023               	movlb	3	; select bank3
 12502  2186  0868               	movf	_protect3^(0+384),w
 12503  2187  0020               	movlb	0	; select bank0
 12504  2188  0636               	xorwf	??_setCellOvervoltageProtection,w
 12505  2189  393F               	andlw	-193
 12506  218A  0636               	xorwf	??_setCellOvervoltageProtection,w
 12507  218B  0023               	movlb	3	; select bank3
 12508  218C  00E8               	movwf	_protect3^(0+384)
 12509  218D                     l7532:	
 12510                           
 12511                           ;BQ76920.c: 165:     }
 12512  218D  3001               	movlw	1
 12513  218E  0020               	movlb	0	; select bank0
 12514  218F  07C5               	addwf	setCellOvervoltageProtection@i,f
 12515  2190  3000               	movlw	0
 12516  2191  3DC6               	addwfc	setCellOvervoltageProtection@i+1,f
 12517  2192  3000               	movlw	0
 12518  2193  0246               	subwf	setCellOvervoltageProtection@i+1,w
 12519  2194  3003               	movlw	3
 12520  2195  1903               	skipnz
 12521  2196  0245               	subwf	setCellOvervoltageProtection@i,w
 12522  2197  1C03               	skipc
 12523  2198  2965               	goto	l7528
 12524                           
 12525                           ;BQ76920.c: 166:     I2C_writeRegister(0x18,0x08, protect3.regByte);
 12526  2199  3018               	movlw	24
 12527  219A  00F5               	movwf	I2C_writeRegister@slaveAddress
 12528  219B  3000               	movlw	0
 12529  219C  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12530  219D  3008               	movlw	8
 12531  219E  00F7               	movwf	I2C_writeRegister@regAddress
 12532  219F  3000               	movlw	0
 12533  21A0  00F8               	movwf	I2C_writeRegister@regAddress+1
 12534  21A1  0023               	movlb	3	; select bank3
 12535  21A2  0868               	movf	_protect3^(0+384),w
 12536  21A3  0020               	movlb	0	; select bank0
 12537  21A4  00B6               	movwf	??_setCellOvervoltageProtection
 12538  21A5  01B7               	clrf	??_setCellOvervoltageProtection+1
 12539  21A6  0836               	movf	??_setCellOvervoltageProtection,w
 12540  21A7  00F9               	movwf	I2C_writeRegister@data
 12541  21A8  0837               	movf	??_setCellOvervoltageProtection+1,w
 12542  21A9  00FA               	movwf	I2C_writeRegister@data+1
 12543  21AA  31B3  23DF         	fcall	_I2C_writeRegister
 12544  21AC  0008               	return
 12545  21AD                     __end_of_setCellOvervoltageProtection:	
 12546                           
 12547                           	psect	text43
 12548  2DC3                     __ptext43:	
 12549 ;; *************** function _beginAFEcommunication *****************
 12550 ;; Defined at:
 12551 ;;		line 28 in file "BQ76920.c"
 12552 ;; Parameters:    Size  Location     Type
 12553 ;;		None
 12554 ;; Auto vars:     Size  Location     Type
 12555 ;;  i               2   13[BANK0 ] int 
 12556 ;;  commSuccess     2   11[BANK0 ] int 
 12557 ;; Return value:  Size  Location     Type
 12558 ;;                  2    0[BANK0 ] int 
 12559 ;; Registers used:
 12560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12561 ;; Tracked objects:
 12562 ;;		On entry : 0/0
 12563 ;;		On exit  : 0/0
 12564 ;;		Unchanged: 0/0
 12565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12567 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12568 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12569 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12570 ;;Total ram usage:       15 bytes
 12571 ;; Hardware stack levels used:    1
 12572 ;; Hardware stack levels required when called:    3
 12573 ;; This function calls:
 12574 ;;		_I2C_writeRegister
 12575 ;;		_readRegister
 12576 ;; This function is called by:
 12577 ;;		_statemachine
 12578 ;; This function uses a non-reentrant model
 12579 ;;
 12580                           
 12581                           
 12582                           ;psect for function _beginAFEcommunication
 12583  2DC3                     _beginAFEcommunication:	
 12584                           
 12585                           ;BQ76920.c: 30:     int commSuccess = 0;
 12586                           
 12587                           ;incstack = 0
 12588                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 12589  2DC3  0020               	movlb	0	; select bank0
 12590  2DC4  01AB               	clrf	beginAFEcommunication@commSuccess
 12591  2DC5  01AC               	clrf	beginAFEcommunication@commSuccess+1
 12592                           
 12593                           ;BQ76920.c: 33:     for (int i = 0; i < 4; i++) {
 12594  2DC6  01AD               	clrf	beginAFEcommunication@i
 12595  2DC7  01AE               	clrf	beginAFEcommunication@i+1
 12596  2DC8                     l7686:	
 12597                           
 12598                           ;BQ76920.c: 34:         cellVoltages[i] = 0;
 12599  2DC8  0020               	movlb	0	; select bank0
 12600  2DC9  352D               	lslf	beginAFEcommunication@i,w
 12601  2DCA  3EAA               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 12602  2DCB  0086               	movwf	6
 12603  2DCC  3001               	movlw	1	; select bank3/4
 12604  2DCD  0087               	movwf	7
 12605  2DCE  3000               	movlw	0
 12606  2DCF  3FC0               	movwi [0]fsr1
 12607  2DD0  3FC1               	movwi [1]fsr1
 12608                           
 12609                           ;BQ76920.c: 35:     }
 12610  2DD1  3001               	movlw	1
 12611  2DD2  07AD               	addwf	beginAFEcommunication@i,f
 12612  2DD3  3000               	movlw	0
 12613  2DD4  3DAE               	addwfc	beginAFEcommunication@i+1,f
 12614  2DD5  082E               	movf	beginAFEcommunication@i+1,w
 12615  2DD6  3A80               	xorlw	128
 12616  2DD7  00A2               	movwf	??_beginAFEcommunication
 12617  2DD8  3080               	movlw	128
 12618  2DD9  0222               	subwf	??_beginAFEcommunication,w
 12619  2DDA  1D03               	skipz
 12620  2DDB  2DDE               	goto	u9625
 12621  2DDC  3004               	movlw	4
 12622  2DDD  022D               	subwf	beginAFEcommunication@i,w
 12623  2DDE                     u9625:	
 12624  2DDE  1C03               	skipc
 12625  2DDF  2DC8               	goto	l7686
 12626                           
 12627                           ;BQ76920.c: 38:     I2C_writeRegister(0x18, 0x0B, 0x19);
 12628  2DE0  3018               	movlw	24
 12629  2DE1  00F5               	movwf	I2C_writeRegister@slaveAddress
 12630  2DE2  3000               	movlw	0
 12631  2DE3  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12632  2DE4  300B               	movlw	11
 12633  2DE5  00F7               	movwf	I2C_writeRegister@regAddress
 12634  2DE6  3000               	movlw	0
 12635  2DE7  00F8               	movwf	I2C_writeRegister@regAddress+1
 12636  2DE8  3019               	movlw	25
 12637  2DE9  00F9               	movwf	I2C_writeRegister@data
 12638  2DEA  3000               	movlw	0
 12639  2DEB  00FA               	movwf	I2C_writeRegister@data+1
 12640  2DEC  31B3  23DF  31AD   	fcall	_I2C_writeRegister
 12641                           
 12642                           ;BQ76920.c: 40:     if (readRegister(0x18, 0x0B) == 0x19) {
 12643  2DEF  3018               	movlw	24
 12644  2DF0  00F5               	movwf	readRegister@slaveAddress
 12645  2DF1  3000               	movlw	0
 12646  2DF2  00F6               	movwf	readRegister@slaveAddress+1
 12647  2DF3  300B               	movlw	11
 12648  2DF4  00F7               	movwf	readRegister@regAddress
 12649  2DF5  3000               	movlw	0
 12650  2DF6  00F8               	movwf	readRegister@regAddress+1
 12651  2DF7  31B5  2587  31AD   	fcall	_readRegister
 12652  2DFA  3019               	movlw	25
 12653  2DFB  0675               	xorwf	?_readRegister,w
 12654  2DFC  0476               	iorwf	?_readRegister+1,w
 12655  2DFD  1D03               	btfss	3,2
 12656  2DFE  2E71               	goto	l511
 12657                           
 12658                           ;BQ76920.c: 41:         commSuccess = 1;
 12659  2DFF  3001               	movlw	1
 12660  2E00  0020               	movlb	0	; select bank0
 12661  2E01  00AB               	movwf	beginAFEcommunication@commSuccess
 12662  2E02  3000               	movlw	0
 12663  2E03  00AC               	movwf	beginAFEcommunication@commSuccess+1
 12664                           
 12665                           ;BQ76920.c: 45:         I2C_writeRegister(0x18, 0x04, 0x18);
 12666  2E04  3018               	movlw	24
 12667  2E05  00F5               	movwf	I2C_writeRegister@slaveAddress
 12668  2E06  3000               	movlw	0
 12669  2E07  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12670  2E08  3004               	movlw	4
 12671  2E09  00F7               	movwf	I2C_writeRegister@regAddress
 12672  2E0A  3000               	movlw	0
 12673  2E0B  00F8               	movwf	I2C_writeRegister@regAddress+1
 12674  2E0C  3018               	movlw	24
 12675  2E0D  00F9               	movwf	I2C_writeRegister@data
 12676  2E0E  3000               	movlw	0
 12677  2E0F  00FA               	movwf	I2C_writeRegister@data+1
 12678  2E10  31B3  23DF  31AD   	fcall	_I2C_writeRegister
 12679                           
 12680                           ;BQ76920.c: 46:         I2C_writeRegister(0x18, 0x05, 0x40);
 12681  2E13  3018               	movlw	24
 12682  2E14  00F5               	movwf	I2C_writeRegister@slaveAddress
 12683  2E15  3000               	movlw	0
 12684  2E16  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 12685  2E17  3005               	movlw	5
 12686  2E18  00F7               	movwf	I2C_writeRegister@regAddress
 12687  2E19  3000               	movlw	0
 12688  2E1A  00F8               	movwf	I2C_writeRegister@regAddress+1
 12689  2E1B  3040               	movlw	64
 12690  2E1C  00F9               	movwf	I2C_writeRegister@data
 12691  2E1D  3000               	movlw	0
 12692  2E1E  00FA               	movwf	I2C_writeRegister@data+1
 12693  2E1F  31B3  23DF  31AD   	fcall	_I2C_writeRegister
 12694                           
 12695                           ;BQ76920.c: 49:         adcOffset = (signed int) readRegister(0x18, 0x51);
 12696  2E22  3018               	movlw	24
 12697  2E23  00F5               	movwf	readRegister@slaveAddress
 12698  2E24  3000               	movlw	0
 12699  2E25  00F6               	movwf	readRegister@slaveAddress+1
 12700  2E26  3051               	movlw	81
 12701  2E27  00F7               	movwf	readRegister@regAddress
 12702  2E28  3000               	movlw	0
 12703  2E29  00F8               	movwf	readRegister@regAddress+1
 12704  2E2A  31B5  2587  31AD   	fcall	_readRegister
 12705  2E2D  0876               	movf	?_readRegister+1,w
 12706  2E2E  0022               	movlb	2	; select bank2
 12707  2E2F  00EB               	movwf	(_adcOffset+1)^(0+256)
 12708  2E30  0875               	movf	?_readRegister,w
 12709  2E31  00EA               	movwf	_adcOffset^(0+256)
 12710                           
 12711                           ;BQ76920.c: 50:         adcGain = 365 + (((readRegister(0x18, 0x50) & 0x0C) << 1) |
 12712  2E32  3018               	movlw	24
 12713  2E33  00F5               	movwf	readRegister@slaveAddress
 12714  2E34  3000               	movlw	0
 12715  2E35  00F6               	movwf	readRegister@slaveAddress+1
 12716  2E36  3059               	movlw	89
 12717  2E37  00F7               	movwf	readRegister@regAddress
 12718  2E38  3000               	movlw	0
 12719  2E39  00F8               	movwf	readRegister@regAddress+1
 12720  2E3A  31B5  2587  31AD   	fcall	_readRegister
 12721  2E3D  0875               	movf	?_readRegister,w
 12722  2E3E  0020               	movlb	0	; select bank0
 12723  2E3F  00A2               	movwf	??_beginAFEcommunication
 12724  2E40  0876               	movf	?_readRegister+1,w
 12725  2E41  00A3               	movwf	??_beginAFEcommunication+1
 12726  2E42  3005               	movlw	5
 12727  2E43  00A4               	movwf	??_beginAFEcommunication+2
 12728  2E44                     u9645:	
 12729  2E44  0D23               	rlf	??_beginAFEcommunication+1,w
 12730  2E45  0CA3               	rrf	??_beginAFEcommunication+1,f
 12731  2E46  0CA2               	rrf	??_beginAFEcommunication,f
 12732  2E47  0BA4               	decfsz	??_beginAFEcommunication+2,f
 12733  2E48  2E44               	goto	u9645
 12734  2E49  3007               	movlw	7
 12735  2E4A  0522               	andwf	??_beginAFEcommunication,w
 12736  2E4B  00A5               	movwf	??_beginAFEcommunication+3
 12737  2E4C  3000               	movlw	0
 12738  2E4D  0523               	andwf	??_beginAFEcommunication+1,w
 12739  2E4E  00A6               	movwf	??_beginAFEcommunication+4
 12740  2E4F  3018               	movlw	24
 12741  2E50  00F5               	movwf	readRegister@slaveAddress
 12742  2E51  3000               	movlw	0
 12743  2E52  00F6               	movwf	readRegister@slaveAddress+1
 12744  2E53  3050               	movlw	80
 12745  2E54  00F7               	movwf	readRegister@regAddress
 12746  2E55  3000               	movlw	0
 12747  2E56  00F8               	movwf	readRegister@regAddress+1
 12748  2E57  31B5  2587         	fcall	_readRegister
 12749  2E59  300C               	movlw	12
 12750  2E5A  0575               	andwf	?_readRegister,w
 12751  2E5B  0020               	movlb	0	; select bank0
 12752  2E5C  00A7               	movwf	??_beginAFEcommunication+5
 12753  2E5D  3000               	movlw	0
 12754  2E5E  0576               	andwf	?_readRegister+1,w
 12755  2E5F  00A8               	movwf	??_beginAFEcommunication+6
 12756  2E60  35A7               	lslf	??_beginAFEcommunication+5,f
 12757  2E61  0DA8               	rlf	??_beginAFEcommunication+6,f
 12758  2E62  0825               	movf	??_beginAFEcommunication+3,w
 12759  2E63  0427               	iorwf	??_beginAFEcommunication+5,w
 12760  2E64  00A9               	movwf	??_beginAFEcommunication+7
 12761  2E65  0826               	movf	??_beginAFEcommunication+4,w
 12762  2E66  0428               	iorwf	??_beginAFEcommunication+6,w
 12763  2E67  00AA               	movwf	??_beginAFEcommunication+8
 12764  2E68  0829               	movf	??_beginAFEcommunication+7,w
 12765  2E69  3E6D               	addlw	109
 12766  2E6A  0022               	movlb	2	; select bank2
 12767  2E6B  00EE               	movwf	_adcGain^(0+256)
 12768  2E6C  3001               	movlw	1
 12769  2E6D  0020               	movlb	0	; select bank0
 12770  2E6E  3D2A               	addwfc	??_beginAFEcommunication+8,w
 12771  2E6F  0022               	movlb	2	; select bank2
 12772  2E70  00EF               	movwf	(_adcGain+1)^(0+256)
 12773  2E71                     l511:	
 12774                           ;BQ76920.c: 53:     }
 12775                           
 12776                           
 12777                           ;BQ76920.c: 54:     return commSuccess;
 12778  2E71  0020               	movlb	0	; select bank0
 12779  2E72  082C               	movf	beginAFEcommunication@commSuccess+1,w
 12780  2E73  00A1               	movwf	?_beginAFEcommunication+1
 12781  2E74  082B               	movf	beginAFEcommunication@commSuccess,w
 12782  2E75  00A0               	movwf	?_beginAFEcommunication
 12783  2E76  0008               	return
 12784  2E77                     __end_of_beginAFEcommunication:	
 12785                           
 12786                           	psect	text44
 12787  341E                     __ptext44:	
 12788 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
 12789 ;; Defined at:
 12790 ;;		line 43 in file "RGB.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;		None
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;		None
 12795 ;; Return value:  Size  Location     Type
 12796 ;;                  1    wreg      void 
 12797 ;; Registers used:
 12798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12799 ;; Tracked objects:
 12800 ;;		On entry : 0/0
 12801 ;;		On exit  : 0/0
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12808 ;;Total ram usage:        1 bytes
 12809 ;; Hardware stack levels used:    1
 12810 ;; Hardware stack levels required when called:    2
 12811 ;; This function calls:
 12812 ;;		_RGB_color
 12813 ;; This function is called by:
 12814 ;;		_statemachine
 12815 ;; This function uses a non-reentrant model
 12816 ;;
 12817                           
 12818                           
 12819                           ;psect for function _RGB_AWAIT_AFE_CONN
 12820  341E                     _RGB_AWAIT_AFE_CONN:	
 12821                           
 12822                           ;RGB.c: 45:     if (toggleColor) {
 12823                           
 12824                           ;incstack = 0
 12825                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12826  341E  087C               	movf	_toggleColor,w
 12827  341F  1903               	btfsc	3,2
 12828  3420  2C30               	goto	l6256
 12829                           
 12830                           ;RGB.c: 46:         toggleColor = !toggleColor;
 12831  3421  087C               	movf	_toggleColor,w
 12832  3422  1D03               	btfss	3,2
 12833  3423  2C26               	goto	u7770
 12834  3424  3001               	movlw	1
 12835  3425  2C27               	goto	u7780
 12836  3426                     u7770:	
 12837  3426  3000               	movlw	0
 12838  3427                     u7780:	
 12839  3427  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12840  3428  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12841  3429  00FC               	movwf	_toggleColor
 12842                           
 12843                           ;RGB.c: 47:         RGB_color(0);
 12844  342A  3000               	movlw	0
 12845  342B  00F1               	movwf	RGB_color@color
 12846  342C  00F2               	movwf	RGB_color@color+1
 12847  342D  31B3  23FD         	fcall	_RGB_color
 12848                           
 12849                           ;RGB.c: 48:     } else {
 12850  342F  0008               	return
 12851  3430                     l6256:	
 12852                           
 12853                           ;RGB.c: 49:         toggleColor = !toggleColor;
 12854  3430  087C               	movf	_toggleColor,w
 12855  3431  1D03               	btfss	3,2
 12856  3432  2C35               	goto	u7790
 12857  3433  3001               	movlw	1
 12858  3434  2C36               	goto	u7800
 12859  3435                     u7790:	
 12860  3435  3000               	movlw	0
 12861  3436                     u7800:	
 12862  3436  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 12863  3437  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 12864  3438  00FC               	movwf	_toggleColor
 12865                           
 12866                           ;RGB.c: 50:         RGB_color(1);
 12867  3439  3001               	movlw	1
 12868  343A  00F1               	movwf	RGB_color@color
 12869  343B  3000               	movlw	0
 12870  343C  00F2               	movwf	RGB_color@color+1
 12871  343D  31B3  23FD         	fcall	_RGB_color
 12872  343F  0008               	return
 12873  3440                     __end_of_RGB_AWAIT_AFE_CONN:	
 12874                           
 12875                           	psect	text45
 12876  33FD                     __ptext45:	
 12877 ;; *************** function _RGB_color *****************
 12878 ;; Defined at:
 12879 ;;		line 17 in file "RGB.c"
 12880 ;; Parameters:    Size  Location     Type
 12881 ;;  color           2    1[COMMON] int 
 12882 ;; Auto vars:     Size  Location     Type
 12883 ;;		None
 12884 ;; Return value:  Size  Location     Type
 12885 ;;                  1    wreg      void 
 12886 ;; Registers used:
 12887 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12888 ;; Tracked objects:
 12889 ;;		On entry : 0/0
 12890 ;;		On exit  : 0/0
 12891 ;;		Unchanged: 0/0
 12892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12896 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12897 ;;Total ram usage:        2 bytes
 12898 ;; Hardware stack levels used:    1
 12899 ;; Hardware stack levels required when called:    1
 12900 ;; This function calls:
 12901 ;;		Nothing
 12902 ;; This function is called by:
 12903 ;;		_statemachine
 12904 ;;		_RGB_AWAIT_AFE_CONN
 12905 ;;		_watchdog_timeout_shutdown
 12906 ;; This function uses a non-reentrant model
 12907 ;;
 12908                           
 12909                           
 12910                           ;psect for function _RGB_color
 12911  33FD                     _RGB_color:	
 12912                           
 12913                           ;RGB.c: 19:     switch (color) {
 12914                           
 12915                           ;incstack = 0
 12916                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 12917  33FD  2C0D               	goto	l5918
 12918  33FE                     l370:	
 12919                           ;RGB.c: 20:         case 0:
 12920                           
 12921                           
 12922                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 12923  33FE  0022               	movlb	2	; select bank2
 12924  33FF  120C               	bcf	12,4	;volatile
 12925                           
 12926                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 12927  3400  168C               	bsf	12,5	;volatile
 12928                           
 12929                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 12930  3401  1410               	bsf	16,0	;volatile
 12931                           
 12932                           ;RGB.c: 24:             break;
 12933  3402  0008               	return
 12934  3403                     l372:	
 12935                           ;RGB.c: 25:         case 1:
 12936                           
 12937                           
 12938                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 12939  3403  0022               	movlb	2	; select bank2
 12940  3404  160C               	bsf	12,4	;volatile
 12941                           
 12942                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 12943  3405  128C               	bcf	12,5	;volatile
 12944                           
 12945                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 12946  3406  1410               	bsf	16,0	;volatile
 12947                           
 12948                           ;RGB.c: 29:             break;
 12949  3407  0008               	return
 12950  3408                     l373:	
 12951                           ;RGB.c: 30:         case 2:
 12952                           
 12953                           
 12954                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 12955  3408  0022               	movlb	2	; select bank2
 12956  3409  160C               	bsf	12,4	;volatile
 12957                           
 12958                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 12959  340A  168C               	bsf	12,5	;volatile
 12960                           
 12961                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 12962  340B  1010               	bcf	16,0	;volatile
 12963                           
 12964                           ;RGB.c: 34:             break;
 12965  340C  0008               	return
 12966  340D                     l5918:	
 12967                           
 12968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12969                           ; Switch size 1, requested type "simple"
 12970                           ; Number of cases is 1, Range of values is 0 to 0
 12971                           ; switch strategies available:
 12972                           ; Name         Instructions Cycles
 12973                           ; simple_byte            4     3 (average)
 12974                           ; direct_byte            8     6 (fixed)
 12975                           ; jumptable            260     6 (fixed)
 12976                           ;	Chosen strategy is simple_byte
 12977  340D  0872               	movf	RGB_color@color+1,w
 12978  340E  3A00               	xorlw	0	; case 0
 12979  340F  1903               	skipnz
 12980  3410  2C12               	goto	l7990
 12981  3411  2C1D               	goto	l374
 12982  3412                     l7990:	
 12983                           
 12984                           ; Switch size 1, requested type "simple"
 12985                           ; Number of cases is 3, Range of values is 0 to 2
 12986                           ; switch strategies available:
 12987                           ; Name         Instructions Cycles
 12988                           ; simple_byte           10     6 (average)
 12989                           ; direct_byte           12     6 (fixed)
 12990                           ; jumptable            260     6 (fixed)
 12991                           ;	Chosen strategy is simple_byte
 12992  3412  0871               	movf	RGB_color@color,w
 12993  3413  3A00               	xorlw	0	; case 0
 12994  3414  1903               	skipnz
 12995  3415  2BFE               	goto	l370
 12996  3416  3A01               	xorlw	1	; case 1
 12997  3417  1903               	skipnz
 12998  3418  2C03               	goto	l372
 12999  3419  3A03               	xorlw	3	; case 2
 13000  341A  1903               	skipnz
 13001  341B  2C08               	goto	l373
 13002  341C  2C1D               	goto	l374
 13003  341D                     l374:	
 13004  341D  0008               	return
 13005  341E                     __end_of_RGB_color:	
 13006                           
 13007                           	psect	text46
 13008  362B                     __ptext46:	
 13009 ;; *************** function _AFE_UPDATE *****************
 13010 ;; Defined at:
 13011 ;;		line 172 in file "BQ76920.c"
 13012 ;; Parameters:    Size  Location     Type
 13013 ;;		None
 13014 ;; Auto vars:     Size  Location     Type
 13015 ;;		None
 13016 ;; Return value:  Size  Location     Type
 13017 ;;                  1    wreg      void 
 13018 ;; Registers used:
 13019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13020 ;; Tracked objects:
 13021 ;;		On entry : 0/0
 13022 ;;		On exit  : 0/0
 13023 ;;		Unchanged: 0/0
 13024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13029 ;;Total ram usage:        0 bytes
 13030 ;; Hardware stack levels used:    1
 13031 ;; Hardware stack levels required when called:    5
 13032 ;; This function calls:
 13033 ;;		_AFE_FET_Status
 13034 ;;		_AFE_Status
 13035 ;;		_calibrate_BATTSOC
 13036 ;;		_coulomb_counter
 13037 ;;		_enableCharging
 13038 ;;		_enableDischarging
 13039 ;;		_updateCurrent
 13040 ;;		_updateTemperatures
 13041 ;;		_updateVoltages
 13042 ;; This function is called by:
 13043 ;;		_statemachine
 13044 ;; This function uses a non-reentrant model
 13045 ;;
 13046                           
 13047                           
 13048                           ;psect for function _AFE_UPDATE
 13049  362B                     _AFE_UPDATE:	
 13050                           
 13051                           ;BQ76920.c: 174:     updateVoltages();
 13052                           
 13053                           ;incstack = 0
 13054                           ; Regs used in _AFE_UPDATE: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13055  362B  3192  224E  31B6   	fcall	_updateVoltages
 13056                           
 13057                           ;BQ76920.c: 176:     if(batCurrent<10){
 13058  362E  0023               	movlb	3	; select bank3
 13059  362F  1BC7               	btfsc	(_batCurrent+3)^(0+384),7
 13060  3630  2E3E               	goto	l7720
 13061  3631  0847               	movf	(_batCurrent+3)^(0+384),w
 13062  3632  1D03               	btfss	3,2
 13063  3633  2E42               	goto	l7722
 13064  3634  0846               	movf	(_batCurrent+2)^(0+384),w
 13065  3635  1D03               	btfss	3,2
 13066  3636  2E42               	goto	l7722
 13067  3637  0845               	movf	(_batCurrent+1)^(0+384),w
 13068  3638  1D03               	btfss	3,2
 13069  3639  2E42               	goto	l7722
 13070  363A  300A               	movlw	10
 13071  363B  0244               	subwf	_batCurrent^(0+384),w
 13072  363C  1803               	btfsc	3,0
 13073  363D  2E42               	goto	l7722
 13074  363E                     l7720:	
 13075                           
 13076                           ;BQ76920.c: 178:         calibrate_BATTSOC();
 13077  363E  31A0  2012  31B6   	fcall	_calibrate_BATTSOC
 13078                           
 13079                           ;BQ76920.c: 179:     }else{
 13080  3641  2E45               	goto	l7724
 13081  3642                     l7722:	
 13082                           
 13083                           ;BQ76920.c: 180:          coulomb_counter();
 13084  3642  31A1  21AD  31B6   	fcall	_coulomb_counter
 13085  3645                     l7724:	
 13086                           
 13087                           ;BQ76920.c: 183:     updateCurrent();
 13088  3645  31AE  2677  31B6   	fcall	_updateCurrent
 13089                           
 13090                           ;BQ76920.c: 184:     updateTemperatures();
 13091  3648  3195  2526  31B6   	fcall	_updateTemperatures
 13092                           
 13093                           ;BQ76920.c: 189:     AFE_FET_Status();
 13094  364B  31B4  2440  31B6   	fcall	_AFE_FET_Status
 13095                           
 13096                           ;BQ76920.c: 191:     if(AFE_Status()==0){
 13097  364E  31A8  2047  31B6   	fcall	_AFE_Status
 13098  3651  0020               	movlb	0	; select bank0
 13099  3652  0820               	movf	?_AFE_Status,w
 13100  3653  0421               	iorwf	?_AFE_Status+1,w
 13101  3654  1D03               	btfss	3,2
 13102  3655  0008               	return
 13103                           
 13104                           ;BQ76920.c: 192:     enableDischarging(1);
 13105  3656  3001               	movlw	1
 13106  3657  00A0               	movwf	enableDischarging@enable
 13107  3658  3000               	movlw	0
 13108  3659  00A1               	movwf	enableDischarging@enable+1
 13109  365A  31B5  25F4  31B6   	fcall	_enableDischarging
 13110                           
 13111                           ;BQ76920.c: 193:     enableCharging(1);
 13112  365D  3001               	movlw	1
 13113  365E  0020               	movlb	0	; select bank0
 13114  365F  00A0               	movwf	enableCharging@enable
 13115  3660  3000               	movlw	0
 13116  3661  00A1               	movwf	enableCharging@enable+1
 13117  3662  31B5  25BD         	fcall	_enableCharging
 13118  3664  0008               	return
 13119  3665                     __end_of_AFE_UPDATE:	
 13120                           
 13121                           	psect	text47
 13122  124E                     __ptext47:	
 13123 ;; *************** function _updateVoltages *****************
 13124 ;; Defined at:
 13125 ;;		line 223 in file "BQ76920.c"
 13126 ;; Parameters:    Size  Location     Type
 13127 ;;		None
 13128 ;; Auto vars:     Size  Location     Type
 13129 ;;  adcVal          4   24[BANK1 ] long 
 13130 ;; Return value:  Size  Location     Type
 13131 ;;                  1    wreg      void 
 13132 ;; Registers used:
 13133 ;;		wreg, status,2, status,0, pclath, cstack
 13134 ;; Tracked objects:
 13135 ;;		On entry : 0/0
 13136 ;;		On exit  : 0/0
 13137 ;;		Unchanged: 0/0
 13138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13140 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13141 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13142 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13143 ;;Total ram usage:       11 bytes
 13144 ;; Hardware stack levels used:    1
 13145 ;; Hardware stack levels required when called:    3
 13146 ;; This function calls:
 13147 ;;		___aldiv
 13148 ;;		___fladd
 13149 ;;		___fldiv
 13150 ;;		___flmul
 13151 ;;		___fltol
 13152 ;;		___lmul
 13153 ;;		___xxtofl
 13154 ;;		_readRegister
 13155 ;; This function is called by:
 13156 ;;		_AFE_UPDATE
 13157 ;; This function uses a non-reentrant model
 13158 ;;
 13159                           
 13160                           
 13161                           ;psect for function _updateVoltages
 13162  124E                     _updateVoltages:	
 13163                           
 13164                           ;BQ76920.c: 227:   adcVal = (readRegister(0x18, 0x2A) << 8) | readRegister(0x18, 0x2B);
 13165                           
 13166                           ;incstack = 0
 13167                           ; Regs used in _updateVoltages: [wreg+status,2+status,0+pclath+cstack]
 13168  124E  3018               	movlw	24
 13169  124F  00F5               	movwf	readRegister@slaveAddress
 13170  1250  3000               	movlw	0
 13171  1251  00F6               	movwf	readRegister@slaveAddress+1
 13172  1252  302A               	movlw	42
 13173  1253  00F7               	movwf	readRegister@regAddress
 13174  1254  3000               	movlw	0
 13175  1255  00F8               	movwf	readRegister@regAddress+1
 13176  1256  31B5  2587  3192   	fcall	_readRegister
 13177  1259  0875               	movf	?_readRegister,w
 13178  125A  0021               	movlb	1	; select bank1
 13179  125B  00B1               	movwf	??_updateVoltages^(0+128)
 13180  125C  0876               	movf	?_readRegister+1,w
 13181  125D  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13182  125E  0831               	movf	??_updateVoltages^(0+128),w
 13183  125F  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13184  1260  01B1               	clrf	??_updateVoltages^(0+128)
 13185  1261  3018               	movlw	24
 13186  1262  00F5               	movwf	readRegister@slaveAddress
 13187  1263  3000               	movlw	0
 13188  1264  00F6               	movwf	readRegister@slaveAddress+1
 13189  1265  302B               	movlw	43
 13190  1266  00F7               	movwf	readRegister@regAddress
 13191  1267  3000               	movlw	0
 13192  1268  00F8               	movwf	readRegister@regAddress+1
 13193  1269  31B5  2587  3192   	fcall	_readRegister
 13194  126C  0875               	movf	?_readRegister,w
 13195  126D  0021               	movlb	1	; select bank1
 13196  126E  0431               	iorwf	??_updateVoltages^(0+128),w
 13197  126F  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13198  1270  0876               	movf	?_readRegister+1,w
 13199  1271  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13200  1272  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13201  1273  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13202  1274  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13203  1275  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13204  1276  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13205  1277  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13206                           
 13207                           ;BQ76920.c: 228:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13208  1278  0022               	movlb	2	; select bank2
 13209  1279  086E               	movf	_adcGain^(0+256),w
 13210  127A  00F1               	movwf	___xxtofl@val
 13211  127B  086F               	movf	(_adcGain+1)^(0+256),w
 13212  127C  00F2               	movwf	___xxtofl@val+1
 13213  127D  0D89               	rlf	9,f
 13214  127E  3B89               	subwfb	9,f
 13215  127F  0989               	comf	9,f
 13216  1280  00F3               	movwf	___xxtofl@val+2
 13217  1281  00F4               	movwf	___xxtofl@val+3
 13218  1282  3001               	movlw	1
 13219  1283  31AB  23E3  3192   	fcall	___xxtofl
 13220  1286  0874               	movf	?___xxtofl+3,w
 13221  1287  0020               	movlb	0	; select bank0
 13222  1288  00AD               	movwf	___flmul@a+3
 13223  1289  0873               	movf	?___xxtofl+2,w
 13224  128A  00AC               	movwf	___flmul@a+2
 13225  128B  0872               	movf	?___xxtofl+1,w
 13226  128C  00AB               	movwf	___flmul@a+1
 13227  128D  0871               	movf	?___xxtofl,w
 13228  128E  00AA               	movwf	___flmul@a
 13229  128F  3040               	movlw	64
 13230  1290  00A9               	movwf	___flmul@b+3
 13231  1291  3080               	movlw	128
 13232  1292  00A8               	movwf	___flmul@b+2
 13233  1293  3000               	movlw	0
 13234  1294  00A7               	movwf	___flmul@b+1
 13235  1295  3000               	movlw	0
 13236  1296  00A6               	movwf	___flmul@b
 13237  1297  3190  2022  3192   	fcall	___flmul
 13238  129A  0020               	movlb	0	; select bank0
 13239  129B  0829               	movf	?___flmul+3,w
 13240  129C  0021               	movlb	1	; select bank1
 13241  129D  00B7               	movwf	(_updateVoltages$2146+3)^(0+128)
 13242  129E  0020               	movlb	0	; select bank0
 13243  129F  0828               	movf	?___flmul+2,w
 13244  12A0  0021               	movlb	1	; select bank1
 13245  12A1  00B6               	movwf	(_updateVoltages$2146+2)^(0+128)
 13246  12A2  0020               	movlb	0	; select bank0
 13247  12A3  0827               	movf	?___flmul+1,w
 13248  12A4  0021               	movlb	1	; select bank1
 13249  12A5  00B5               	movwf	(_updateVoltages$2146+1)^(0+128)
 13250  12A6  0020               	movlb	0	; select bank0
 13251  12A7  0826               	movf	?___flmul,w
 13252  12A8  0021               	movlb	1	; select bank1
 13253  12A9  00B4               	movwf	_updateVoltages$2146^(0+128)
 13254                           
 13255                           ;BQ76920.c: 228:   batVoltage = 4.0 * adcGain * adcVal / 1000.0 + 4 * adcOffset;
 13256  12AA  0837               	movf	(_updateVoltages$2146+3)^(0+128),w
 13257  12AB  0020               	movlb	0	; select bank0
 13258  12AC  00AD               	movwf	___flmul@a+3
 13259  12AD  0021               	movlb	1	; select bank1
 13260  12AE  0836               	movf	(_updateVoltages$2146+2)^(0+128),w
 13261  12AF  0020               	movlb	0	; select bank0
 13262  12B0  00AC               	movwf	___flmul@a+2
 13263  12B1  0021               	movlb	1	; select bank1
 13264  12B2  0835               	movf	(_updateVoltages$2146+1)^(0+128),w
 13265  12B3  0020               	movlb	0	; select bank0
 13266  12B4  00AB               	movwf	___flmul@a+1
 13267  12B5  0021               	movlb	1	; select bank1
 13268  12B6  0834               	movf	_updateVoltages$2146^(0+128),w
 13269  12B7  0020               	movlb	0	; select bank0
 13270  12B8  00AA               	movwf	___flmul@a
 13271  12B9  0021               	movlb	1	; select bank1
 13272  12BA  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13273  12BB  00F4               	movwf	___xxtofl@val+3
 13274  12BC  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13275  12BD  00F3               	movwf	___xxtofl@val+2
 13276  12BE  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13277  12BF  00F2               	movwf	___xxtofl@val+1
 13278  12C0  0838               	movf	updateVoltages@adcVal^(0+128),w
 13279  12C1  00F1               	movwf	___xxtofl@val
 13280  12C2  3001               	movlw	1
 13281  12C3  31AB  23E3  3192   	fcall	___xxtofl
 13282  12C6  0874               	movf	?___xxtofl+3,w
 13283  12C7  0020               	movlb	0	; select bank0
 13284  12C8  00A9               	movwf	___flmul@b+3
 13285  12C9  0873               	movf	?___xxtofl+2,w
 13286  12CA  00A8               	movwf	___flmul@b+2
 13287  12CB  0872               	movf	?___xxtofl+1,w
 13288  12CC  00A7               	movwf	___flmul@b+1
 13289  12CD  0871               	movf	?___xxtofl,w
 13290  12CE  00A6               	movwf	___flmul@b
 13291  12CF  3190  2022  3192   	fcall	___flmul
 13292  12D2  0020               	movlb	0	; select bank0
 13293  12D3  0829               	movf	?___flmul+3,w
 13294  12D4  00C7               	movwf	___fldiv@b+3
 13295  12D5  0828               	movf	?___flmul+2,w
 13296  12D6  00C6               	movwf	___fldiv@b+2
 13297  12D7  0827               	movf	?___flmul+1,w
 13298  12D8  00C5               	movwf	___fldiv@b+1
 13299  12D9  0826               	movf	?___flmul,w
 13300  12DA  00C4               	movwf	___fldiv@b
 13301  12DB  3044               	movlw	68
 13302  12DC  00C3               	movwf	___fldiv@a+3
 13303  12DD  307A               	movlw	122
 13304  12DE  00C2               	movwf	___fldiv@a+2
 13305  12DF  3000               	movlw	0
 13306  12E0  00C1               	movwf	___fldiv@a+1
 13307  12E1  3000               	movlw	0
 13308  12E2  00C0               	movwf	___fldiv@a
 13309  12E3  319C  24E2  3192   	fcall	___fldiv
 13310  12E6  0020               	movlb	0	; select bank0
 13311  12E7  0843               	movf	?___fldiv+3,w
 13312  12E8  00E1               	movwf	___fladd@a+3
 13313  12E9  0842               	movf	?___fldiv+2,w
 13314  12EA  00E0               	movwf	___fladd@a+2
 13315  12EB  0841               	movf	?___fldiv+1,w
 13316  12EC  00DF               	movwf	___fladd@a+1
 13317  12ED  0840               	movf	?___fldiv,w
 13318  12EE  00DE               	movwf	___fladd@a
 13319  12EF  0022               	movlb	2	; select bank2
 13320  12F0  086B               	movf	(_adcOffset+1)^(0+256),w
 13321  12F1  0021               	movlb	1	; select bank1
 13322  12F2  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13323  12F3  0022               	movlb	2	; select bank2
 13324  12F4  086A               	movf	_adcOffset^(0+256),w
 13325  12F5  0021               	movlb	1	; select bank1
 13326  12F6  00B1               	movwf	??_updateVoltages^(0+128)
 13327  12F7  35B1               	lslf	??_updateVoltages^(0+128),f
 13328  12F8  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13329  12F9  35B1               	lslf	??_updateVoltages^(0+128),f
 13330  12FA  0DB2               	rlf	(??_updateVoltages^(0+128)+1),f
 13331  12FB  0831               	movf	??_updateVoltages^(0+128),w
 13332  12FC  00F1               	movwf	___xxtofl@val
 13333  12FD  0832               	movf	(??_updateVoltages+1)^(0+128),w
 13334  12FE  00F2               	movwf	___xxtofl@val+1
 13335  12FF  0D89               	rlf	9,f
 13336  1300  3B89               	subwfb	9,f
 13337  1301  0989               	comf	9,f
 13338  1302  00F3               	movwf	___xxtofl@val+2
 13339  1303  00F4               	movwf	___xxtofl@val+3
 13340  1304  3001               	movlw	1
 13341  1305  31AB  23E3  3192   	fcall	___xxtofl
 13342  1308  0874               	movf	?___xxtofl+3,w
 13343  1309  0020               	movlb	0	; select bank0
 13344  130A  00DD               	movwf	___fladd@b+3
 13345  130B  0873               	movf	?___xxtofl+2,w
 13346  130C  00DC               	movwf	___fladd@b+2
 13347  130D  0872               	movf	?___xxtofl+1,w
 13348  130E  00DB               	movwf	___fladd@b+1
 13349  130F  0871               	movf	?___xxtofl,w
 13350  1310  00DA               	movwf	___fladd@b
 13351  1311  3185  25FE  3192   	fcall	___fladd
 13352  1314  0020               	movlb	0	; select bank0
 13353  1315  085D               	movf	?___fladd+3,w
 13354  1316  0021               	movlb	1	; select bank1
 13355  1317  00AB               	movwf	(___fltol@f1+3)^(0+128)
 13356  1318  0020               	movlb	0	; select bank0
 13357  1319  085C               	movf	?___fladd+2,w
 13358  131A  0021               	movlb	1	; select bank1
 13359  131B  00AA               	movwf	(___fltol@f1+2)^(0+128)
 13360  131C  0020               	movlb	0	; select bank0
 13361  131D  085B               	movf	?___fladd+1,w
 13362  131E  0021               	movlb	1	; select bank1
 13363  131F  00A9               	movwf	(___fltol@f1+1)^(0+128)
 13364  1320  0020               	movlb	0	; select bank0
 13365  1321  085A               	movf	?___fladd,w
 13366  1322  0021               	movlb	1	; select bank1
 13367  1323  00A8               	movwf	___fltol@f1^(0+128)
 13368  1324  31A8  20A6  3192   	fcall	___fltol
 13369  1327  0021               	movlb	1	; select bank1
 13370  1328  082B               	movf	(?___fltol+3)^(0+128),w
 13371  1329  0024               	movlb	4	; select bank4
 13372  132A  00AD               	movwf	(_batVoltage+3)^(0+512)
 13373  132B  0021               	movlb	1	; select bank1
 13374  132C  082A               	movf	(?___fltol+2)^(0+128),w
 13375  132D  0024               	movlb	4	; select bank4
 13376  132E  00AC               	movwf	(_batVoltage+2)^(0+512)
 13377  132F  0021               	movlb	1	; select bank1
 13378  1330  0829               	movf	(?___fltol+1)^(0+128),w
 13379  1331  0024               	movlb	4	; select bank4
 13380  1332  00AB               	movwf	(_batVoltage+1)^(0+512)
 13381  1333  0021               	movlb	1	; select bank1
 13382  1334  0828               	movf	?___fltol^(0+128),w
 13383  1335  0024               	movlb	4	; select bank4
 13384  1336  00AA               	movwf	_batVoltage^(0+512)
 13385                           
 13386                           ;BQ76920.c: 251:     adcVal = ((readRegister(0x18, 0x0C) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0D);
 13387  1337  3018               	movlw	24
 13388  1338  00F5               	movwf	readRegister@slaveAddress
 13389  1339  3000               	movlw	0
 13390  133A  00F6               	movwf	readRegister@slaveAddress+1
 13391  133B  300C               	movlw	12
 13392  133C  00F7               	movwf	readRegister@regAddress
 13393  133D  3000               	movlw	0
 13394  133E  00F8               	movwf	readRegister@regAddress+1
 13395  133F  31B5  2587  3192   	fcall	_readRegister
 13396  1342  303F               	movlw	63
 13397  1343  0575               	andwf	?_readRegister,w
 13398  1344  0021               	movlb	1	; select bank1
 13399  1345  00B1               	movwf	??_updateVoltages^(0+128)
 13400  1346  3000               	movlw	0
 13401  1347  0576               	andwf	?_readRegister+1,w
 13402  1348  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13403  1349  0831               	movf	??_updateVoltages^(0+128),w
 13404  134A  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13405  134B  01B1               	clrf	??_updateVoltages^(0+128)
 13406  134C  3018               	movlw	24
 13407  134D  00F5               	movwf	readRegister@slaveAddress
 13408  134E  3000               	movlw	0
 13409  134F  00F6               	movwf	readRegister@slaveAddress+1
 13410  1350  300D               	movlw	13
 13411  1351  00F7               	movwf	readRegister@regAddress
 13412  1352  3000               	movlw	0
 13413  1353  00F8               	movwf	readRegister@regAddress+1
 13414  1354  31B5  2587  3192   	fcall	_readRegister
 13415  1357  0875               	movf	?_readRegister,w
 13416  1358  0021               	movlb	1	; select bank1
 13417  1359  0431               	iorwf	??_updateVoltages^(0+128),w
 13418  135A  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13419  135B  0876               	movf	?_readRegister+1,w
 13420  135C  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13421  135D  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13422  135E  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13423  135F  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13424  1360  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13425  1361  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13426  1362  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13427                           
 13428                           ;BQ76920.c: 252:     cellVoltages[0] = (adcVal * adcGain / 1000) + adcOffset;
 13429  1363  3000               	movlw	0
 13430  1364  0020               	movlb	0	; select bank0
 13431  1365  00A7               	movwf	___aldiv@divisor+3
 13432  1366  3000               	movlw	0
 13433  1367  00A6               	movwf	___aldiv@divisor+2
 13434  1368  3003               	movlw	3
 13435  1369  00A5               	movwf	___aldiv@divisor+1
 13436  136A  30E8               	movlw	232
 13437  136B  00A4               	movwf	___aldiv@divisor
 13438  136C  0022               	movlb	2	; select bank2
 13439  136D  086E               	movf	_adcGain^(0+256),w
 13440  136E  00F1               	movwf	___lmul@multiplier
 13441  136F  086F               	movf	(_adcGain+1)^(0+256),w
 13442  1370  00F2               	movwf	___lmul@multiplier+1
 13443  1371  0D89               	rlf	9,f
 13444  1372  3B89               	subwfb	9,f
 13445  1373  0989               	comf	9,f
 13446  1374  00F3               	movwf	___lmul@multiplier+2
 13447  1375  00F4               	movwf	___lmul@multiplier+3
 13448  1376  0021               	movlb	1	; select bank1
 13449  1377  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13450  1378  00F8               	movwf	___lmul@multiplicand+3
 13451  1379  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13452  137A  00F7               	movwf	___lmul@multiplicand+2
 13453  137B  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13454  137C  00F6               	movwf	___lmul@multiplicand+1
 13455  137D  0838               	movf	updateVoltages@adcVal^(0+128),w
 13456  137E  00F5               	movwf	___lmul@multiplicand
 13457  137F  31B4  24EE  3192   	fcall	___lmul
 13458  1382  0874               	movf	?___lmul+3,w
 13459  1383  0020               	movlb	0	; select bank0
 13460  1384  00AB               	movwf	___aldiv@dividend+3
 13461  1385  0873               	movf	?___lmul+2,w
 13462  1386  00AA               	movwf	___aldiv@dividend+2
 13463  1387  0872               	movf	?___lmul+1,w
 13464  1388  00A9               	movwf	___aldiv@dividend+1
 13465  1389  0871               	movf	?___lmul,w
 13466  138A  00A8               	movwf	___aldiv@dividend
 13467  138B  31AB  2361  3192   	fcall	___aldiv
 13468  138E  0022               	movlb	2	; select bank2
 13469  138F  086A               	movf	_adcOffset^(0+256),w
 13470  1390  0020               	movlb	0	; select bank0
 13471  1391  0724               	addwf	?___aldiv,w
 13472  1392  0023               	movlb	3	; select bank3
 13473  1393  00AA               	movwf	_cellVoltages^(0+384)
 13474  1394  0022               	movlb	2	; select bank2
 13475  1395  086B               	movf	(_adcOffset+1)^(0+256),w
 13476  1396  0020               	movlb	0	; select bank0
 13477  1397  3D25               	addwfc	?___aldiv+1,w
 13478  1398  0023               	movlb	3	; select bank3
 13479  1399  00AB               	movwf	(_cellVoltages+1)^(0+384)
 13480                           
 13481                           ;BQ76920.c: 253:     adcVal = ((readRegister(0x18, 0x0E) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x0F);
 13482  139A  3018               	movlw	24
 13483  139B  00F5               	movwf	readRegister@slaveAddress
 13484  139C  3000               	movlw	0
 13485  139D  00F6               	movwf	readRegister@slaveAddress+1
 13486  139E  300E               	movlw	14
 13487  139F  00F7               	movwf	readRegister@regAddress
 13488  13A0  3000               	movlw	0
 13489  13A1  00F8               	movwf	readRegister@regAddress+1
 13490  13A2  31B5  2587  3192   	fcall	_readRegister
 13491  13A5  303F               	movlw	63
 13492  13A6  0575               	andwf	?_readRegister,w
 13493  13A7  0021               	movlb	1	; select bank1
 13494  13A8  00B1               	movwf	??_updateVoltages^(0+128)
 13495  13A9  3000               	movlw	0
 13496  13AA  0576               	andwf	?_readRegister+1,w
 13497  13AB  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13498  13AC  0831               	movf	??_updateVoltages^(0+128),w
 13499  13AD  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13500  13AE  01B1               	clrf	??_updateVoltages^(0+128)
 13501  13AF  3018               	movlw	24
 13502  13B0  00F5               	movwf	readRegister@slaveAddress
 13503  13B1  3000               	movlw	0
 13504  13B2  00F6               	movwf	readRegister@slaveAddress+1
 13505  13B3  300F               	movlw	15
 13506  13B4  00F7               	movwf	readRegister@regAddress
 13507  13B5  3000               	movlw	0
 13508  13B6  00F8               	movwf	readRegister@regAddress+1
 13509  13B7  31B5  2587  3192   	fcall	_readRegister
 13510  13BA  0875               	movf	?_readRegister,w
 13511  13BB  0021               	movlb	1	; select bank1
 13512  13BC  0431               	iorwf	??_updateVoltages^(0+128),w
 13513  13BD  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13514  13BE  0876               	movf	?_readRegister+1,w
 13515  13BF  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13516  13C0  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13517  13C1  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13518  13C2  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13519  13C3  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13520  13C4  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13521  13C5  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13522                           
 13523                           ;BQ76920.c: 254:     cellVoltages[1] = (adcVal * adcGain / 1000) + adcOffset;
 13524  13C6  3000               	movlw	0
 13525  13C7  0020               	movlb	0	; select bank0
 13526  13C8  00A7               	movwf	___aldiv@divisor+3
 13527  13C9  3000               	movlw	0
 13528  13CA  00A6               	movwf	___aldiv@divisor+2
 13529  13CB  3003               	movlw	3
 13530  13CC  00A5               	movwf	___aldiv@divisor+1
 13531  13CD  30E8               	movlw	232
 13532  13CE  00A4               	movwf	___aldiv@divisor
 13533  13CF  0022               	movlb	2	; select bank2
 13534  13D0  086E               	movf	_adcGain^(0+256),w
 13535  13D1  00F1               	movwf	___lmul@multiplier
 13536  13D2  086F               	movf	(_adcGain+1)^(0+256),w
 13537  13D3  00F2               	movwf	___lmul@multiplier+1
 13538  13D4  0D89               	rlf	9,f
 13539  13D5  3B89               	subwfb	9,f
 13540  13D6  0989               	comf	9,f
 13541  13D7  00F3               	movwf	___lmul@multiplier+2
 13542  13D8  00F4               	movwf	___lmul@multiplier+3
 13543  13D9  0021               	movlb	1	; select bank1
 13544  13DA  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13545  13DB  00F8               	movwf	___lmul@multiplicand+3
 13546  13DC  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13547  13DD  00F7               	movwf	___lmul@multiplicand+2
 13548  13DE  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13549  13DF  00F6               	movwf	___lmul@multiplicand+1
 13550  13E0  0838               	movf	updateVoltages@adcVal^(0+128),w
 13551  13E1  00F5               	movwf	___lmul@multiplicand
 13552  13E2  31B4  24EE  3192   	fcall	___lmul
 13553  13E5  0874               	movf	?___lmul+3,w
 13554  13E6  0020               	movlb	0	; select bank0
 13555  13E7  00AB               	movwf	___aldiv@dividend+3
 13556  13E8  0873               	movf	?___lmul+2,w
 13557  13E9  00AA               	movwf	___aldiv@dividend+2
 13558  13EA  0872               	movf	?___lmul+1,w
 13559  13EB  00A9               	movwf	___aldiv@dividend+1
 13560  13EC  0871               	movf	?___lmul,w
 13561  13ED  00A8               	movwf	___aldiv@dividend
 13562  13EE  31AB  2361  3192   	fcall	___aldiv
 13563  13F1  0022               	movlb	2	; select bank2
 13564  13F2  086A               	movf	_adcOffset^(0+256),w
 13565  13F3  0020               	movlb	0	; select bank0
 13566  13F4  0724               	addwf	?___aldiv,w
 13567  13F5  0023               	movlb	3	; select bank3
 13568  13F6  00AC               	movwf	(_cellVoltages^(0+384)+2)
 13569  13F7  0022               	movlb	2	; select bank2
 13570  13F8  086B               	movf	(_adcOffset+1)^(0+256),w
 13571  13F9  0020               	movlb	0	; select bank0
 13572  13FA  3D25               	addwfc	?___aldiv+1,w
 13573  13FB  0023               	movlb	3	; select bank3
 13574  13FC  00AD               	movwf	((_cellVoltages+1)^(0+384)+2)
 13575                           
 13576                           ;BQ76920.c: 255:     adcVal = ((readRegister(0x18, 0x10) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x11);
 13577  13FD  3018               	movlw	24
 13578  13FE  00F5               	movwf	readRegister@slaveAddress
 13579  13FF  3000               	movlw	0
 13580  1400  00F6               	movwf	readRegister@slaveAddress+1
 13581  1401  3010               	movlw	16
 13582  1402  00F7               	movwf	readRegister@regAddress
 13583  1403  3000               	movlw	0
 13584  1404  00F8               	movwf	readRegister@regAddress+1
 13585  1405  31B5  2587  3192   	fcall	_readRegister
 13586  1408  303F               	movlw	63
 13587  1409  0575               	andwf	?_readRegister,w
 13588  140A  0021               	movlb	1	; select bank1
 13589  140B  00B1               	movwf	??_updateVoltages^(0+128)
 13590  140C  3000               	movlw	0
 13591  140D  0576               	andwf	?_readRegister+1,w
 13592  140E  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13593  140F  0831               	movf	??_updateVoltages^(0+128),w
 13594  1410  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13595  1411  01B1               	clrf	??_updateVoltages^(0+128)
 13596  1412  3018               	movlw	24
 13597  1413  00F5               	movwf	readRegister@slaveAddress
 13598  1414  3000               	movlw	0
 13599  1415  00F6               	movwf	readRegister@slaveAddress+1
 13600  1416  3011               	movlw	17
 13601  1417  00F7               	movwf	readRegister@regAddress
 13602  1418  3000               	movlw	0
 13603  1419  00F8               	movwf	readRegister@regAddress+1
 13604  141A  31B5  2587  3192   	fcall	_readRegister
 13605  141D  0875               	movf	?_readRegister,w
 13606  141E  0021               	movlb	1	; select bank1
 13607  141F  0431               	iorwf	??_updateVoltages^(0+128),w
 13608  1420  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13609  1421  0876               	movf	?_readRegister+1,w
 13610  1422  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13611  1423  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13612  1424  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13613  1425  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13614  1426  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13615  1427  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13616  1428  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13617                           
 13618                           ;BQ76920.c: 256:     cellVoltages[2] = (adcVal * adcGain / 1000) + adcOffset;
 13619  1429  3000               	movlw	0
 13620  142A  0020               	movlb	0	; select bank0
 13621  142B  00A7               	movwf	___aldiv@divisor+3
 13622  142C  3000               	movlw	0
 13623  142D  00A6               	movwf	___aldiv@divisor+2
 13624  142E  3003               	movlw	3
 13625  142F  00A5               	movwf	___aldiv@divisor+1
 13626  1430  30E8               	movlw	232
 13627  1431  00A4               	movwf	___aldiv@divisor
 13628  1432  0022               	movlb	2	; select bank2
 13629  1433  086E               	movf	_adcGain^(0+256),w
 13630  1434  00F1               	movwf	___lmul@multiplier
 13631  1435  086F               	movf	(_adcGain+1)^(0+256),w
 13632  1436  00F2               	movwf	___lmul@multiplier+1
 13633  1437  0D89               	rlf	9,f
 13634  1438  3B89               	subwfb	9,f
 13635  1439  0989               	comf	9,f
 13636  143A  00F3               	movwf	___lmul@multiplier+2
 13637  143B  00F4               	movwf	___lmul@multiplier+3
 13638  143C  0021               	movlb	1	; select bank1
 13639  143D  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13640  143E  00F8               	movwf	___lmul@multiplicand+3
 13641  143F  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13642  1440  00F7               	movwf	___lmul@multiplicand+2
 13643  1441  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13644  1442  00F6               	movwf	___lmul@multiplicand+1
 13645  1443  0838               	movf	updateVoltages@adcVal^(0+128),w
 13646  1444  00F5               	movwf	___lmul@multiplicand
 13647  1445  31B4  24EE  3192   	fcall	___lmul
 13648  1448  0874               	movf	?___lmul+3,w
 13649  1449  0020               	movlb	0	; select bank0
 13650  144A  00AB               	movwf	___aldiv@dividend+3
 13651  144B  0873               	movf	?___lmul+2,w
 13652  144C  00AA               	movwf	___aldiv@dividend+2
 13653  144D  0872               	movf	?___lmul+1,w
 13654  144E  00A9               	movwf	___aldiv@dividend+1
 13655  144F  0871               	movf	?___lmul,w
 13656  1450  00A8               	movwf	___aldiv@dividend
 13657  1451  31AB  2361  3192   	fcall	___aldiv
 13658  1454  0022               	movlb	2	; select bank2
 13659  1455  086A               	movf	_adcOffset^(0+256),w
 13660  1456  0020               	movlb	0	; select bank0
 13661  1457  0724               	addwf	?___aldiv,w
 13662  1458  0023               	movlb	3	; select bank3
 13663  1459  00AE               	movwf	(_cellVoltages^(0+384)+4)
 13664  145A  0022               	movlb	2	; select bank2
 13665  145B  086B               	movf	(_adcOffset+1)^(0+256),w
 13666  145C  0020               	movlb	0	; select bank0
 13667  145D  3D25               	addwfc	?___aldiv+1,w
 13668  145E  0023               	movlb	3	; select bank3
 13669  145F  00AF               	movwf	((_cellVoltages+1)^(0+384)+4)
 13670                           
 13671                           ;BQ76920.c: 257:     adcVal = ((readRegister(0x18, 0x12) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x13);
 13672  1460  3018               	movlw	24
 13673  1461  00F5               	movwf	readRegister@slaveAddress
 13674  1462  3000               	movlw	0
 13675  1463  00F6               	movwf	readRegister@slaveAddress+1
 13676  1464  3012               	movlw	18
 13677  1465  00F7               	movwf	readRegister@regAddress
 13678  1466  3000               	movlw	0
 13679  1467  00F8               	movwf	readRegister@regAddress+1
 13680  1468  31B5  2587  3192   	fcall	_readRegister
 13681  146B  303F               	movlw	63
 13682  146C  0575               	andwf	?_readRegister,w
 13683  146D  0021               	movlb	1	; select bank1
 13684  146E  00B1               	movwf	??_updateVoltages^(0+128)
 13685  146F  3000               	movlw	0
 13686  1470  0576               	andwf	?_readRegister+1,w
 13687  1471  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13688  1472  0831               	movf	??_updateVoltages^(0+128),w
 13689  1473  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13690  1474  01B1               	clrf	??_updateVoltages^(0+128)
 13691  1475  3018               	movlw	24
 13692  1476  00F5               	movwf	readRegister@slaveAddress
 13693  1477  3000               	movlw	0
 13694  1478  00F6               	movwf	readRegister@slaveAddress+1
 13695  1479  3013               	movlw	19
 13696  147A  00F7               	movwf	readRegister@regAddress
 13697  147B  3000               	movlw	0
 13698  147C  00F8               	movwf	readRegister@regAddress+1
 13699  147D  31B5  2587  3192   	fcall	_readRegister
 13700  1480  0875               	movf	?_readRegister,w
 13701  1481  0021               	movlb	1	; select bank1
 13702  1482  0431               	iorwf	??_updateVoltages^(0+128),w
 13703  1483  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13704  1484  0876               	movf	?_readRegister+1,w
 13705  1485  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13706  1486  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13707  1487  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13708  1488  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13709  1489  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13710  148A  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13711  148B  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13712                           
 13713                           ;BQ76920.c: 258:     cellVoltages[3] = (adcVal * adcGain / 1000) + adcOffset;
 13714  148C  3000               	movlw	0
 13715  148D  0020               	movlb	0	; select bank0
 13716  148E  00A7               	movwf	___aldiv@divisor+3
 13717  148F  3000               	movlw	0
 13718  1490  00A6               	movwf	___aldiv@divisor+2
 13719  1491  3003               	movlw	3
 13720  1492  00A5               	movwf	___aldiv@divisor+1
 13721  1493  30E8               	movlw	232
 13722  1494  00A4               	movwf	___aldiv@divisor
 13723  1495  0022               	movlb	2	; select bank2
 13724  1496  086E               	movf	_adcGain^(0+256),w
 13725  1497  00F1               	movwf	___lmul@multiplier
 13726  1498  086F               	movf	(_adcGain+1)^(0+256),w
 13727  1499  00F2               	movwf	___lmul@multiplier+1
 13728  149A  0D89               	rlf	9,f
 13729  149B  3B89               	subwfb	9,f
 13730  149C  0989               	comf	9,f
 13731  149D  00F3               	movwf	___lmul@multiplier+2
 13732  149E  00F4               	movwf	___lmul@multiplier+3
 13733  149F  0021               	movlb	1	; select bank1
 13734  14A0  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13735  14A1  00F8               	movwf	___lmul@multiplicand+3
 13736  14A2  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13737  14A3  00F7               	movwf	___lmul@multiplicand+2
 13738  14A4  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13739  14A5  00F6               	movwf	___lmul@multiplicand+1
 13740  14A6  0838               	movf	updateVoltages@adcVal^(0+128),w
 13741  14A7  00F5               	movwf	___lmul@multiplicand
 13742  14A8  31B4  24EE  3192   	fcall	___lmul
 13743  14AB  0874               	movf	?___lmul+3,w
 13744  14AC  0020               	movlb	0	; select bank0
 13745  14AD  00AB               	movwf	___aldiv@dividend+3
 13746  14AE  0873               	movf	?___lmul+2,w
 13747  14AF  00AA               	movwf	___aldiv@dividend+2
 13748  14B0  0872               	movf	?___lmul+1,w
 13749  14B1  00A9               	movwf	___aldiv@dividend+1
 13750  14B2  0871               	movf	?___lmul,w
 13751  14B3  00A8               	movwf	___aldiv@dividend
 13752  14B4  31AB  2361  3192   	fcall	___aldiv
 13753  14B7  0022               	movlb	2	; select bank2
 13754  14B8  086A               	movf	_adcOffset^(0+256),w
 13755  14B9  0020               	movlb	0	; select bank0
 13756  14BA  0724               	addwf	?___aldiv,w
 13757  14BB  0023               	movlb	3	; select bank3
 13758  14BC  00B0               	movwf	(_cellVoltages^(0+384)+6)
 13759  14BD  0022               	movlb	2	; select bank2
 13760  14BE  086B               	movf	(_adcOffset+1)^(0+256),w
 13761  14BF  0020               	movlb	0	; select bank0
 13762  14C0  3D25               	addwfc	?___aldiv+1,w
 13763  14C1  0023               	movlb	3	; select bank3
 13764  14C2  00B1               	movwf	((_cellVoltages+1)^(0+384)+6)
 13765                           
 13766                           ;BQ76920.c: 259:     adcVal = ((readRegister(0x18, 0x14) & 0x3F) << 8) | readRegister(0x
      +                          18, 0x15);
 13767  14C3  3018               	movlw	24
 13768  14C4  00F5               	movwf	readRegister@slaveAddress
 13769  14C5  3000               	movlw	0
 13770  14C6  00F6               	movwf	readRegister@slaveAddress+1
 13771  14C7  3014               	movlw	20
 13772  14C8  00F7               	movwf	readRegister@regAddress
 13773  14C9  3000               	movlw	0
 13774  14CA  00F8               	movwf	readRegister@regAddress+1
 13775  14CB  31B5  2587  3192   	fcall	_readRegister
 13776  14CE  303F               	movlw	63
 13777  14CF  0575               	andwf	?_readRegister,w
 13778  14D0  0021               	movlb	1	; select bank1
 13779  14D1  00B1               	movwf	??_updateVoltages^(0+128)
 13780  14D2  3000               	movlw	0
 13781  14D3  0576               	andwf	?_readRegister+1,w
 13782  14D4  00B2               	movwf	(??_updateVoltages+1)^(0+128)
 13783  14D5  0831               	movf	??_updateVoltages^(0+128),w
 13784  14D6  00B2               	movwf	(??_updateVoltages^(0+128)+1)
 13785  14D7  01B1               	clrf	??_updateVoltages^(0+128)
 13786  14D8  3018               	movlw	24
 13787  14D9  00F5               	movwf	readRegister@slaveAddress
 13788  14DA  3000               	movlw	0
 13789  14DB  00F6               	movwf	readRegister@slaveAddress+1
 13790  14DC  3015               	movlw	21
 13791  14DD  00F7               	movwf	readRegister@regAddress
 13792  14DE  3000               	movlw	0
 13793  14DF  00F8               	movwf	readRegister@regAddress+1
 13794  14E0  31B5  2587  3192   	fcall	_readRegister
 13795  14E3  0875               	movf	?_readRegister,w
 13796  14E4  0021               	movlb	1	; select bank1
 13797  14E5  0431               	iorwf	??_updateVoltages^(0+128),w
 13798  14E6  00B8               	movwf	updateVoltages@adcVal^(0+128)
 13799  14E7  0876               	movf	?_readRegister+1,w
 13800  14E8  0432               	iorwf	(??_updateVoltages+1)^(0+128),w
 13801  14E9  00B9               	movwf	(updateVoltages@adcVal+1)^(0+128)
 13802  14EA  01BA               	clrf	(updateVoltages@adcVal^(0+128)+2)
 13803  14EB  1BB9               	btfsc	(updateVoltages@adcVal^(0+128)+1),7
 13804  14EC  03BA               	decf	(updateVoltages@adcVal+2)^(0+128),f
 13805  14ED  083A               	movf	(updateVoltages@adcVal^(0+128)+2),w
 13806  14EE  00BB               	movwf	(updateVoltages@adcVal+3)^(0+128)
 13807                           
 13808                           ;BQ76920.c: 260:     cellVoltages[4] = (adcVal * adcGain / 1000) + adcOffset;
 13809  14EF  3000               	movlw	0
 13810  14F0  0020               	movlb	0	; select bank0
 13811  14F1  00A7               	movwf	___aldiv@divisor+3
 13812  14F2  3000               	movlw	0
 13813  14F3  00A6               	movwf	___aldiv@divisor+2
 13814  14F4  3003               	movlw	3
 13815  14F5  00A5               	movwf	___aldiv@divisor+1
 13816  14F6  30E8               	movlw	232
 13817  14F7  00A4               	movwf	___aldiv@divisor
 13818  14F8  0022               	movlb	2	; select bank2
 13819  14F9  086E               	movf	_adcGain^(0+256),w
 13820  14FA  00F1               	movwf	___lmul@multiplier
 13821  14FB  086F               	movf	(_adcGain+1)^(0+256),w
 13822  14FC  00F2               	movwf	___lmul@multiplier+1
 13823  14FD  0D89               	rlf	9,f
 13824  14FE  3B89               	subwfb	9,f
 13825  14FF  0989               	comf	9,f
 13826  1500  00F3               	movwf	___lmul@multiplier+2
 13827  1501  00F4               	movwf	___lmul@multiplier+3
 13828  1502  0021               	movlb	1	; select bank1
 13829  1503  083B               	movf	(updateVoltages@adcVal+3)^(0+128),w
 13830  1504  00F8               	movwf	___lmul@multiplicand+3
 13831  1505  083A               	movf	(updateVoltages@adcVal+2)^(0+128),w
 13832  1506  00F7               	movwf	___lmul@multiplicand+2
 13833  1507  0839               	movf	(updateVoltages@adcVal+1)^(0+128),w
 13834  1508  00F6               	movwf	___lmul@multiplicand+1
 13835  1509  0838               	movf	updateVoltages@adcVal^(0+128),w
 13836  150A  00F5               	movwf	___lmul@multiplicand
 13837  150B  31B4  24EE  3192   	fcall	___lmul
 13838  150E  0874               	movf	?___lmul+3,w
 13839  150F  0020               	movlb	0	; select bank0
 13840  1510  00AB               	movwf	___aldiv@dividend+3
 13841  1511  0873               	movf	?___lmul+2,w
 13842  1512  00AA               	movwf	___aldiv@dividend+2
 13843  1513  0872               	movf	?___lmul+1,w
 13844  1514  00A9               	movwf	___aldiv@dividend+1
 13845  1515  0871               	movf	?___lmul,w
 13846  1516  00A8               	movwf	___aldiv@dividend
 13847  1517  31AB  2361         	fcall	___aldiv
 13848  1519  0022               	movlb	2	; select bank2
 13849  151A  086A               	movf	_adcOffset^(0+256),w
 13850  151B  0020               	movlb	0	; select bank0
 13851  151C  0724               	addwf	?___aldiv,w
 13852  151D  0023               	movlb	3	; select bank3
 13853  151E  00B2               	movwf	(_cellVoltages^(0+384)+8)
 13854  151F  0022               	movlb	2	; select bank2
 13855  1520  086B               	movf	(_adcOffset+1)^(0+256),w
 13856  1521  0020               	movlb	0	; select bank0
 13857  1522  3D25               	addwfc	?___aldiv+1,w
 13858  1523  0023               	movlb	3	; select bank3
 13859  1524  00B3               	movwf	((_cellVoltages+1)^(0+384)+8)
 13860  1525  0008               	return
 13861  1526                     __end_of_updateVoltages:	
 13862                           
 13863                           	psect	text48
 13864  34EE                     __ptext48:	
 13865 ;; *************** function ___lmul *****************
 13866 ;; Defined at:
 13867 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul32.c"
 13868 ;; Parameters:    Size  Location     Type
 13869 ;;  multiplier      4    1[COMMON] unsigned long 
 13870 ;;  multiplicand    4    5[COMMON] unsigned long 
 13871 ;; Auto vars:     Size  Location     Type
 13872 ;;  product         4    0[BANK0 ] unsigned long 
 13873 ;; Return value:  Size  Location     Type
 13874 ;;                  4    1[COMMON] unsigned long 
 13875 ;; Registers used:
 13876 ;;		wreg, status,2, status,0
 13877 ;; Tracked objects:
 13878 ;;		On entry : 0/0
 13879 ;;		On exit  : 0/0
 13880 ;;		Unchanged: 0/0
 13881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13882 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13883 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13885 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13886 ;;Total ram usage:       12 bytes
 13887 ;; Hardware stack levels used:    1
 13888 ;; Hardware stack levels required when called:    1
 13889 ;; This function calls:
 13890 ;;		Nothing
 13891 ;; This function is called by:
 13892 ;;		_setCellUndervoltageProtection
 13893 ;;		_setCellOvervoltageProtection
 13894 ;;		_updateVoltages
 13895 ;; This function uses a non-reentrant model
 13896 ;;
 13897                           
 13898                           
 13899                           ;psect for function ___lmul
 13900  34EE                     ___lmul:	
 13901                           
 13902                           ;incstack = 0
 13903                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 13904  34EE  3000               	movlw	0
 13905  34EF  0020               	movlb	0	; select bank0
 13906  34F0  00A3               	movwf	___lmul@product+3
 13907  34F1  3000               	movlw	0
 13908  34F2  00A2               	movwf	___lmul@product+2
 13909  34F3  3000               	movlw	0
 13910  34F4  00A1               	movwf	___lmul@product+1
 13911  34F5  3000               	movlw	0
 13912  34F6  00A0               	movwf	___lmul@product
 13913  34F7                     l7316:	
 13914  34F7  1C71               	btfss	___lmul@multiplier,0
 13915  34F8  2D02               	goto	l7320
 13916  34F9  0875               	movf	___lmul@multiplicand,w
 13917  34FA  0020               	movlb	0	; select bank0
 13918  34FB  07A0               	addwf	___lmul@product,f
 13919  34FC  0876               	movf	___lmul@multiplicand+1,w
 13920  34FD  3DA1               	addwfc	___lmul@product+1,f
 13921  34FE  0877               	movf	___lmul@multiplicand+2,w
 13922  34FF  3DA2               	addwfc	___lmul@product+2,f
 13923  3500  0878               	movf	___lmul@multiplicand+3,w
 13924  3501  3DA3               	addwfc	___lmul@product+3,f
 13925  3502                     l7320:	
 13926  3502  3001               	movlw	1
 13927  3503                     u9185:	
 13928  3503  35F5               	lslf	___lmul@multiplicand,f
 13929  3504  0DF6               	rlf	___lmul@multiplicand+1,f
 13930  3505  0DF7               	rlf	___lmul@multiplicand+2,f
 13931  3506  0DF8               	rlf	___lmul@multiplicand+3,f
 13932  3507  0B89               	decfsz	9,f
 13933  3508  2D03               	goto	u9185
 13934  3509  3001               	movlw	1
 13935  350A                     u9195:	
 13936  350A  36F4               	lsrf	___lmul@multiplier+3,f
 13937  350B  0CF3               	rrf	___lmul@multiplier+2,f
 13938  350C  0CF2               	rrf	___lmul@multiplier+1,f
 13939  350D  0CF1               	rrf	___lmul@multiplier,f
 13940  350E  0B89               	decfsz	9,f
 13941  350F  2D0A               	goto	u9195
 13942  3510  0874               	movf	___lmul@multiplier+3,w
 13943  3511  0473               	iorwf	___lmul@multiplier+2,w
 13944  3512  0472               	iorwf	___lmul@multiplier+1,w
 13945  3513  0471               	iorwf	___lmul@multiplier,w
 13946  3514  1D03               	skipz
 13947  3515  2CF7               	goto	l7316
 13948  3516  0020               	movlb	0	; select bank0
 13949  3517  0823               	movf	___lmul@product+3,w
 13950  3518  00F4               	movwf	?___lmul+3
 13951  3519  0822               	movf	___lmul@product+2,w
 13952  351A  00F3               	movwf	?___lmul+2
 13953  351B  0821               	movf	___lmul@product+1,w
 13954  351C  00F2               	movwf	?___lmul+1
 13955  351D  0820               	movf	___lmul@product,w
 13956  351E  00F1               	movwf	?___lmul
 13957  351F  0008               	return
 13958  3520                     __end_of___lmul:	
 13959                           
 13960                           	psect	text49
 13961  1526                     __ptext49:	
 13962 ;; *************** function _updateTemperatures *****************
 13963 ;; Defined at:
 13964 ;;		line 267 in file "BQ76920.c"
 13965 ;; Parameters:    Size  Location     Type
 13966 ;;		None
 13967 ;; Auto vars:     Size  Location     Type
 13968 ;;  tmp             4   67[BANK1 ] float 
 13969 ;;  vtsx            2   73[BANK1 ] int 
 13970 ;;  adcVal          2   71[BANK1 ] int 
 13971 ;; Return value:  Size  Location     Type
 13972 ;;                  1    wreg      void 
 13973 ;; Registers used:
 13974 ;;		wreg, status,2, status,0, pclath, cstack
 13975 ;; Tracked objects:
 13976 ;;		On entry : 0/0
 13977 ;;		On exit  : 0/0
 13978 ;;		Unchanged: 0/0
 13979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13981 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13982 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13983 ;;      Totals:         0       0      55       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13984 ;;Total ram usage:       55 bytes
 13985 ;; Hardware stack levels used:    1
 13986 ;; Hardware stack levels required when called:    4
 13987 ;; This function calls:
 13988 ;;		___fladd
 13989 ;;		___fldiv
 13990 ;;		___flmul
 13991 ;;		___flsub
 13992 ;;		___fltol
 13993 ;;		___xxtofl
 13994 ;;		_logf
 13995 ;;		_readRegister
 13996 ;; This function is called by:
 13997 ;;		_AFE_UPDATE
 13998 ;; This function uses a non-reentrant model
 13999 ;;
 14000                           
 14001                           
 14002                           ;psect for function _updateTemperatures
 14003  1526                     _updateTemperatures:	
 14004                           
 14005                           ;BQ76920.c: 273:      adcVal = ((readRegister(0x18, 0x2C) & 0x3F) << 8) | readRegister(0
      +                          x18, 0x2D);
 14006                           
 14007                           ;incstack = 0
 14008                           ; Regs used in _updateTemperatures: [wreg+status,2+status,0+pclath+cstack]
 14009  1526  3018               	movlw	24
 14010  1527  00F5               	movwf	readRegister@slaveAddress
 14011  1528  3000               	movlw	0
 14012  1529  00F6               	movwf	readRegister@slaveAddress+1
 14013  152A  302C               	movlw	44
 14014  152B  00F7               	movwf	readRegister@regAddress
 14015  152C  3000               	movlw	0
 14016  152D  00F8               	movwf	readRegister@regAddress+1
 14017  152E  31B5  2587  3195   	fcall	_readRegister
 14018  1531  303F               	movlw	63
 14019  1532  0575               	andwf	?_readRegister,w
 14020  1533  0021               	movlb	1	; select bank1
 14021  1534  00B4               	movwf	??_updateTemperatures^(0+128)
 14022  1535  3000               	movlw	0
 14023  1536  0576               	andwf	?_readRegister+1,w
 14024  1537  00B5               	movwf	(??_updateTemperatures+1)^(0+128)
 14025  1538  0834               	movf	??_updateTemperatures^(0+128),w
 14026  1539  00B5               	movwf	(??_updateTemperatures^(0+128)+1)
 14027  153A  01B4               	clrf	??_updateTemperatures^(0+128)
 14028  153B  3018               	movlw	24
 14029  153C  00F5               	movwf	readRegister@slaveAddress
 14030  153D  3000               	movlw	0
 14031  153E  00F6               	movwf	readRegister@slaveAddress+1
 14032  153F  302D               	movlw	45
 14033  1540  00F7               	movwf	readRegister@regAddress
 14034  1541  3000               	movlw	0
 14035  1542  00F8               	movwf	readRegister@regAddress+1
 14036  1543  31B5  2587  3195   	fcall	_readRegister
 14037  1546  0875               	movf	?_readRegister,w
 14038  1547  0021               	movlb	1	; select bank1
 14039  1548  0434               	iorwf	??_updateTemperatures^(0+128),w
 14040  1549  00E7               	movwf	updateTemperatures@adcVal^(0+128)
 14041  154A  0876               	movf	?_readRegister+1,w
 14042  154B  0435               	iorwf	(??_updateTemperatures+1)^(0+128),w
 14043  154C  00E8               	movwf	(updateTemperatures@adcVal+1)^(0+128)
 14044                           
 14045                           ;BQ76920.c: 274:      vtsx = adcVal * 0.382;
 14046  154D  0867               	movf	updateTemperatures@adcVal^(0+128),w
 14047  154E  00F1               	movwf	___xxtofl@val
 14048  154F  0868               	movf	(updateTemperatures@adcVal+1)^(0+128),w
 14049  1550  00F2               	movwf	___xxtofl@val+1
 14050  1551  0D89               	rlf	9,f
 14051  1552  3B89               	subwfb	9,f
 14052  1553  0989               	comf	9,f
 14053  1554  00F3               	movwf	___xxtofl@val+2
 14054  1555  00F4               	movwf	___xxtofl@val+3
 14055  1556  3001               	movlw	1
 14056  1557  31AB  23E3  3195   	fcall	___xxtofl
 14057  155A  0874               	movf	?___xxtofl+3,w
 14058  155B  0020               	movlb	0	; select bank0
 14059  155C  00AD               	movwf	___flmul@a+3
 14060  155D  0873               	movf	?___xxtofl+2,w
 14061  155E  00AC               	movwf	___flmul@a+2
 14062  155F  0872               	movf	?___xxtofl+1,w
 14063  1560  00AB               	movwf	___flmul@a+1
 14064  1561  0871               	movf	?___xxtofl,w
 14065  1562  00AA               	movwf	___flmul@a
 14066  1563  303E               	movlw	62
 14067  1564  00A9               	movwf	___flmul@b+3
 14068  1565  30C3               	movlw	195
 14069  1566  00A8               	movwf	___flmul@b+2
 14070  1567  3095               	movlw	149
 14071  1568  00A7               	movwf	___flmul@b+1
 14072  1569  3081               	movlw	129
 14073  156A  00A6               	movwf	___flmul@b
 14074  156B  3190  2022  3195   	fcall	___flmul
 14075  156E  0020               	movlb	0	; select bank0
 14076  156F  0829               	movf	?___flmul+3,w
 14077  1570  0021               	movlb	1	; select bank1
 14078  1571  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14079  1572  0020               	movlb	0	; select bank0
 14080  1573  0828               	movf	?___flmul+2,w
 14081  1574  0021               	movlb	1	; select bank1
 14082  1575  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14083  1576  0020               	movlb	0	; select bank0
 14084  1577  0827               	movf	?___flmul+1,w
 14085  1578  0021               	movlb	1	; select bank1
 14086  1579  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14087  157A  0020               	movlb	0	; select bank0
 14088  157B  0826               	movf	?___flmul,w
 14089  157C  0021               	movlb	1	; select bank1
 14090  157D  00A8               	movwf	___fltol@f1^(0+128)
 14091  157E  31A8  20A6  3195   	fcall	___fltol
 14092  1581  0021               	movlb	1	; select bank1
 14093  1582  0829               	movf	(?___fltol+1)^(0+128),w
 14094  1583  00EA               	movwf	(updateTemperatures@vtsx+1)^(0+128)
 14095  1584  0828               	movf	?___fltol^(0+128),w
 14096  1585  00E9               	movwf	updateTemperatures@vtsx^(0+128)
 14097                           
 14098                           ;BQ76920.c: 275:      rts = 10000.0 * vtsx / (3300.0 - vtsx);
 14099  1586  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14100  1587  00F1               	movwf	___xxtofl@val
 14101  1588  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14102  1589  00F2               	movwf	___xxtofl@val+1
 14103  158A  0D89               	rlf	9,f
 14104  158B  3B89               	subwfb	9,f
 14105  158C  0989               	comf	9,f
 14106  158D  00F3               	movwf	___xxtofl@val+2
 14107  158E  00F4               	movwf	___xxtofl@val+3
 14108  158F  3001               	movlw	1
 14109  1590  31AB  23E3  3195   	fcall	___xxtofl
 14110  1593  0874               	movf	?___xxtofl+3,w
 14111  1594  0020               	movlb	0	; select bank0
 14112  1595  00AD               	movwf	___flmul@a+3
 14113  1596  0873               	movf	?___xxtofl+2,w
 14114  1597  00AC               	movwf	___flmul@a+2
 14115  1598  0872               	movf	?___xxtofl+1,w
 14116  1599  00AB               	movwf	___flmul@a+1
 14117  159A  0871               	movf	?___xxtofl,w
 14118  159B  00AA               	movwf	___flmul@a
 14119  159C  3046               	movlw	70
 14120  159D  00A9               	movwf	___flmul@b+3
 14121  159E  301C               	movlw	28
 14122  159F  00A8               	movwf	___flmul@b+2
 14123  15A0  3040               	movlw	64
 14124  15A1  00A7               	movwf	___flmul@b+1
 14125  15A2  3000               	movlw	0
 14126  15A3  00A6               	movwf	___flmul@b
 14127  15A4  3190  2022  3195   	fcall	___flmul
 14128  15A7  0020               	movlb	0	; select bank0
 14129  15A8  0829               	movf	?___flmul+3,w
 14130  15A9  00C7               	movwf	___fldiv@b+3
 14131  15AA  0828               	movf	?___flmul+2,w
 14132  15AB  00C6               	movwf	___fldiv@b+2
 14133  15AC  0827               	movf	?___flmul+1,w
 14134  15AD  00C5               	movwf	___fldiv@b+1
 14135  15AE  0826               	movf	?___flmul,w
 14136  15AF  00C4               	movwf	___fldiv@b
 14137  15B0  3045               	movlw	69
 14138  15B1  0021               	movlb	1	; select bank1
 14139  15B2  00A7               	movwf	(___flsub@b+3)^(0+128)
 14140  15B3  304E               	movlw	78
 14141  15B4  00A6               	movwf	(___flsub@b+2)^(0+128)
 14142  15B5  3040               	movlw	64
 14143  15B6  00A5               	movwf	(___flsub@b+1)^(0+128)
 14144  15B7  3000               	movlw	0
 14145  15B8  00A4               	movwf	___flsub@b^(0+128)
 14146  15B9  0869               	movf	updateTemperatures@vtsx^(0+128),w
 14147  15BA  00F1               	movwf	___xxtofl@val
 14148  15BB  086A               	movf	(updateTemperatures@vtsx+1)^(0+128),w
 14149  15BC  00F2               	movwf	___xxtofl@val+1
 14150  15BD  0D89               	rlf	9,f
 14151  15BE  3B89               	subwfb	9,f
 14152  15BF  0989               	comf	9,f
 14153  15C0  00F3               	movwf	___xxtofl@val+2
 14154  15C1  00F4               	movwf	___xxtofl@val+3
 14155  15C2  3001               	movlw	1
 14156  15C3  31AB  23E3  3195   	fcall	___xxtofl
 14157  15C6  0874               	movf	?___xxtofl+3,w
 14158  15C7  0021               	movlb	1	; select bank1
 14159  15C8  00A3               	movwf	(___flsub@a+3)^(0+128)
 14160  15C9  0873               	movf	?___xxtofl+2,w
 14161  15CA  00A2               	movwf	(___flsub@a+2)^(0+128)
 14162  15CB  0872               	movf	?___xxtofl+1,w
 14163  15CC  00A1               	movwf	(___flsub@a+1)^(0+128)
 14164  15CD  0871               	movf	?___xxtofl,w
 14165  15CE  00A0               	movwf	___flsub@a^(0+128)
 14166  15CF  31B5  2552  3195   	fcall	___flsub
 14167  15D2  0021               	movlb	1	; select bank1
 14168  15D3  0823               	movf	(?___flsub+3)^(0+128),w
 14169  15D4  0020               	movlb	0	; select bank0
 14170  15D5  00C3               	movwf	___fldiv@a+3
 14171  15D6  0021               	movlb	1	; select bank1
 14172  15D7  0822               	movf	(?___flsub+2)^(0+128),w
 14173  15D8  0020               	movlb	0	; select bank0
 14174  15D9  00C2               	movwf	___fldiv@a+2
 14175  15DA  0021               	movlb	1	; select bank1
 14176  15DB  0821               	movf	(?___flsub+1)^(0+128),w
 14177  15DC  0020               	movlb	0	; select bank0
 14178  15DD  00C1               	movwf	___fldiv@a+1
 14179  15DE  0021               	movlb	1	; select bank1
 14180  15DF  0820               	movf	?___flsub^(0+128),w
 14181  15E0  0020               	movlb	0	; select bank0
 14182  15E1  00C0               	movwf	___fldiv@a
 14183  15E2  319C  24E2  3195   	fcall	___fldiv
 14184  15E5  0020               	movlb	0	; select bank0
 14185  15E6  0843               	movf	?___fldiv+3,w
 14186  15E7  0021               	movlb	1	; select bank1
 14187  15E8  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14188  15E9  0020               	movlb	0	; select bank0
 14189  15EA  0842               	movf	?___fldiv+2,w
 14190  15EB  0021               	movlb	1	; select bank1
 14191  15EC  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14192  15ED  0020               	movlb	0	; select bank0
 14193  15EE  0841               	movf	?___fldiv+1,w
 14194  15EF  0021               	movlb	1	; select bank1
 14195  15F0  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14196  15F1  0020               	movlb	0	; select bank0
 14197  15F2  0840               	movf	?___fldiv,w
 14198  15F3  0021               	movlb	1	; select bank1
 14199  15F4  00A8               	movwf	___fltol@f1^(0+128)
 14200  15F5  31A8  20A6  3195   	fcall	___fltol
 14201  15F8  0021               	movlb	1	; select bank1
 14202  15F9  082B               	movf	(?___fltol+3)^(0+128),w
 14203  15FA  0023               	movlb	3	; select bank3
 14204  15FB  00BF               	movwf	(_rts+3)^(0+384)
 14205  15FC  0021               	movlb	1	; select bank1
 14206  15FD  082A               	movf	(?___fltol+2)^(0+128),w
 14207  15FE  0023               	movlb	3	; select bank3
 14208  15FF  00BE               	movwf	(_rts+2)^(0+384)
 14209  1600  0021               	movlb	1	; select bank1
 14210  1601  0829               	movf	(?___fltol+1)^(0+128),w
 14211  1602  0023               	movlb	3	; select bank3
 14212  1603  00BD               	movwf	(_rts+1)^(0+384)
 14213  1604  0021               	movlb	1	; select bank1
 14214  1605  0828               	movf	?___fltol^(0+128),w
 14215  1606  0023               	movlb	3	; select bank3
 14216  1607  00BC               	movwf	_rts^(0+384)
 14217                           
 14218                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14219  1608  083F               	movf	(_rts+3)^(0+384),w
 14220  1609  00F4               	movwf	___xxtofl@val+3
 14221  160A  083E               	movf	(_rts+2)^(0+384),w
 14222  160B  00F3               	movwf	___xxtofl@val+2
 14223  160C  083D               	movf	(_rts+1)^(0+384),w
 14224  160D  00F2               	movwf	___xxtofl@val+1
 14225  160E  083C               	movf	_rts^(0+384),w
 14226  160F  00F1               	movwf	___xxtofl@val
 14227  1610  3000               	movlw	0
 14228  1611  31AB  23E3  3195   	fcall	___xxtofl
 14229  1614  0874               	movf	?___xxtofl+3,w
 14230  1615  0021               	movlb	1	; select bank1
 14231  1616  00BA               	movwf	(_updateTemperatures$2147+3)^(0+128)
 14232  1617  0873               	movf	?___xxtofl+2,w
 14233  1618  00B9               	movwf	(_updateTemperatures$2147+2)^(0+128)
 14234  1619  0872               	movf	?___xxtofl+1,w
 14235  161A  00B8               	movwf	(_updateTemperatures$2147+1)^(0+128)
 14236  161B  0871               	movf	?___xxtofl,w
 14237  161C  00B7               	movwf	_updateTemperatures$2147^(0+128)
 14238                           
 14239                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14240  161D  0023               	movlb	3	; select bank3
 14241  161E  083F               	movf	(_rts+3)^(0+384),w
 14242  161F  00F4               	movwf	___xxtofl@val+3
 14243  1620  083E               	movf	(_rts+2)^(0+384),w
 14244  1621  00F3               	movwf	___xxtofl@val+2
 14245  1622  083D               	movf	(_rts+1)^(0+384),w
 14246  1623  00F2               	movwf	___xxtofl@val+1
 14247  1624  083C               	movf	_rts^(0+384),w
 14248  1625  00F1               	movwf	___xxtofl@val
 14249  1626  3000               	movlw	0
 14250  1627  31AB  23E3  3195   	fcall	___xxtofl
 14251  162A  0874               	movf	?___xxtofl+3,w
 14252  162B  0021               	movlb	1	; select bank1
 14253  162C  00BE               	movwf	(_updateTemperatures$2148+3)^(0+128)
 14254  162D  0873               	movf	?___xxtofl+2,w
 14255  162E  00BD               	movwf	(_updateTemperatures$2148+2)^(0+128)
 14256  162F  0872               	movf	?___xxtofl+1,w
 14257  1630  00BC               	movwf	(_updateTemperatures$2148+1)^(0+128)
 14258  1631  0871               	movf	?___xxtofl,w
 14259  1632  00BB               	movwf	_updateTemperatures$2148^(0+128)
 14260                           
 14261                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14262  1633  0023               	movlb	3	; select bank3
 14263  1634  083F               	movf	(_rts+3)^(0+384),w
 14264  1635  00F4               	movwf	___xxtofl@val+3
 14265  1636  083E               	movf	(_rts+2)^(0+384),w
 14266  1637  00F3               	movwf	___xxtofl@val+2
 14267  1638  083D               	movf	(_rts+1)^(0+384),w
 14268  1639  00F2               	movwf	___xxtofl@val+1
 14269  163A  083C               	movf	_rts^(0+384),w
 14270  163B  00F1               	movwf	___xxtofl@val
 14271  163C  3000               	movlw	0
 14272  163D  31AB  23E3  3195   	fcall	___xxtofl
 14273  1640  0874               	movf	?___xxtofl+3,w
 14274  1641  0021               	movlb	1	; select bank1
 14275  1642  00C2               	movwf	(_updateTemperatures$2149+3)^(0+128)
 14276  1643  0873               	movf	?___xxtofl+2,w
 14277  1644  00C1               	movwf	(_updateTemperatures$2149+2)^(0+128)
 14278  1645  0872               	movf	?___xxtofl+1,w
 14279  1646  00C0               	movwf	(_updateTemperatures$2149+1)^(0+128)
 14280  1647  0871               	movf	?___xxtofl,w
 14281  1648  00BF               	movwf	_updateTemperatures$2149^(0+128)
 14282                           
 14283                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14284  1649  083E               	movf	(_updateTemperatures$2148+3)^(0+128),w
 14285  164A  00AB               	movwf	(logf@x+3)^(0+128)
 14286  164B  083D               	movf	(_updateTemperatures$2148+2)^(0+128),w
 14287  164C  00AA               	movwf	(logf@x+2)^(0+128)
 14288  164D  083C               	movf	(_updateTemperatures$2148+1)^(0+128),w
 14289  164E  00A9               	movwf	(logf@x+1)^(0+128)
 14290  164F  083B               	movf	_updateTemperatures$2148^(0+128),w
 14291  1650  00A8               	movwf	logf@x^(0+128)
 14292  1651  3180  2074  3195   	fcall	_logf
 14293  1654  0021               	movlb	1	; select bank1
 14294  1655  082B               	movf	(?_logf+3)^(0+128),w
 14295  1656  00C6               	movwf	(_updateTemperatures$2150+3)^(0+128)
 14296  1657  082A               	movf	(?_logf+2)^(0+128),w
 14297  1658  00C5               	movwf	(_updateTemperatures$2150+2)^(0+128)
 14298  1659  0829               	movf	(?_logf+1)^(0+128),w
 14299  165A  00C4               	movwf	(_updateTemperatures$2150+1)^(0+128)
 14300  165B  0828               	movf	?_logf^(0+128),w
 14301  165C  00C3               	movwf	_updateTemperatures$2150^(0+128)
 14302                           
 14303                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14304  165D  0842               	movf	(_updateTemperatures$2149+3)^(0+128),w
 14305  165E  00AB               	movwf	(logf@x+3)^(0+128)
 14306  165F  0841               	movf	(_updateTemperatures$2149+2)^(0+128),w
 14307  1660  00AA               	movwf	(logf@x+2)^(0+128)
 14308  1661  0840               	movf	(_updateTemperatures$2149+1)^(0+128),w
 14309  1662  00A9               	movwf	(logf@x+1)^(0+128)
 14310  1663  083F               	movf	_updateTemperatures$2149^(0+128),w
 14311  1664  00A8               	movwf	logf@x^(0+128)
 14312  1665  3180  2074  3195   	fcall	_logf
 14313  1668  0021               	movlb	1	; select bank1
 14314  1669  082B               	movf	(?_logf+3)^(0+128),w
 14315  166A  00CA               	movwf	(_updateTemperatures$2151+3)^(0+128)
 14316  166B  082A               	movf	(?_logf+2)^(0+128),w
 14317  166C  00C9               	movwf	(_updateTemperatures$2151+2)^(0+128)
 14318  166D  0829               	movf	(?_logf+1)^(0+128),w
 14319  166E  00C8               	movwf	(_updateTemperatures$2151+1)^(0+128)
 14320  166F  0828               	movf	?_logf^(0+128),w
 14321  1670  00C7               	movwf	_updateTemperatures$2151^(0+128)
 14322                           
 14323                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14324  1671  083A               	movf	(_updateTemperatures$2147+3)^(0+128),w
 14325  1672  00AB               	movwf	(logf@x+3)^(0+128)
 14326  1673  0839               	movf	(_updateTemperatures$2147+2)^(0+128),w
 14327  1674  00AA               	movwf	(logf@x+2)^(0+128)
 14328  1675  0838               	movf	(_updateTemperatures$2147+1)^(0+128),w
 14329  1676  00A9               	movwf	(logf@x+1)^(0+128)
 14330  1677  0837               	movf	_updateTemperatures$2147^(0+128),w
 14331  1678  00A8               	movwf	logf@x^(0+128)
 14332  1679  3180  2074  3195   	fcall	_logf
 14333  167C  0021               	movlb	1	; select bank1
 14334  167D  082B               	movf	(?_logf+3)^(0+128),w
 14335  167E  00CE               	movwf	(_updateTemperatures$2152+3)^(0+128)
 14336  167F  082A               	movf	(?_logf+2)^(0+128),w
 14337  1680  00CD               	movwf	(_updateTemperatures$2152+2)^(0+128)
 14338  1681  0829               	movf	(?_logf+1)^(0+128),w
 14339  1682  00CC               	movwf	(_updateTemperatures$2152+1)^(0+128)
 14340  1683  0828               	movf	?_logf^(0+128),w
 14341  1684  00CB               	movwf	_updateTemperatures$2152^(0+128)
 14342                           
 14343                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14344  1685  0846               	movf	(_updateTemperatures$2150+3)^(0+128),w
 14345  1686  0020               	movlb	0	; select bank0
 14346  1687  00A9               	movwf	___flmul@b+3
 14347  1688  0021               	movlb	1	; select bank1
 14348  1689  0845               	movf	(_updateTemperatures$2150+2)^(0+128),w
 14349  168A  0020               	movlb	0	; select bank0
 14350  168B  00A8               	movwf	___flmul@b+2
 14351  168C  0021               	movlb	1	; select bank1
 14352  168D  0844               	movf	(_updateTemperatures$2150+1)^(0+128),w
 14353  168E  0020               	movlb	0	; select bank0
 14354  168F  00A7               	movwf	___flmul@b+1
 14355  1690  0021               	movlb	1	; select bank1
 14356  1691  0843               	movf	_updateTemperatures$2150^(0+128),w
 14357  1692  0020               	movlb	0	; select bank0
 14358  1693  00A6               	movwf	___flmul@b
 14359  1694  0021               	movlb	1	; select bank1
 14360  1695  084A               	movf	(_updateTemperatures$2151+3)^(0+128),w
 14361  1696  0020               	movlb	0	; select bank0
 14362  1697  00AD               	movwf	___flmul@a+3
 14363  1698  0021               	movlb	1	; select bank1
 14364  1699  0849               	movf	(_updateTemperatures$2151+2)^(0+128),w
 14365  169A  0020               	movlb	0	; select bank0
 14366  169B  00AC               	movwf	___flmul@a+2
 14367  169C  0021               	movlb	1	; select bank1
 14368  169D  0848               	movf	(_updateTemperatures$2151+1)^(0+128),w
 14369  169E  0020               	movlb	0	; select bank0
 14370  169F  00AB               	movwf	___flmul@a+1
 14371  16A0  0021               	movlb	1	; select bank1
 14372  16A1  0847               	movf	_updateTemperatures$2151^(0+128),w
 14373  16A2  0020               	movlb	0	; select bank0
 14374  16A3  00AA               	movwf	___flmul@a
 14375  16A4  3190  2022  3195   	fcall	___flmul
 14376  16A7  0020               	movlb	0	; select bank0
 14377  16A8  0829               	movf	?___flmul+3,w
 14378  16A9  0021               	movlb	1	; select bank1
 14379  16AA  00D2               	movwf	(_updateTemperatures$2153+3)^(0+128)
 14380  16AB  0020               	movlb	0	; select bank0
 14381  16AC  0828               	movf	?___flmul+2,w
 14382  16AD  0021               	movlb	1	; select bank1
 14383  16AE  00D1               	movwf	(_updateTemperatures$2153+2)^(0+128)
 14384  16AF  0020               	movlb	0	; select bank0
 14385  16B0  0827               	movf	?___flmul+1,w
 14386  16B1  0021               	movlb	1	; select bank1
 14387  16B2  00D0               	movwf	(_updateTemperatures$2153+1)^(0+128)
 14388  16B3  0020               	movlb	0	; select bank0
 14389  16B4  0826               	movf	?___flmul,w
 14390  16B5  0021               	movlb	1	; select bank1
 14391  16B6  00CF               	movwf	_updateTemperatures$2153^(0+128)
 14392                           
 14393                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14394  16B7  084E               	movf	(_updateTemperatures$2152+3)^(0+128),w
 14395  16B8  0020               	movlb	0	; select bank0
 14396  16B9  00A9               	movwf	___flmul@b+3
 14397  16BA  0021               	movlb	1	; select bank1
 14398  16BB  084D               	movf	(_updateTemperatures$2152+2)^(0+128),w
 14399  16BC  0020               	movlb	0	; select bank0
 14400  16BD  00A8               	movwf	___flmul@b+2
 14401  16BE  0021               	movlb	1	; select bank1
 14402  16BF  084C               	movf	(_updateTemperatures$2152+1)^(0+128),w
 14403  16C0  0020               	movlb	0	; select bank0
 14404  16C1  00A7               	movwf	___flmul@b+1
 14405  16C2  0021               	movlb	1	; select bank1
 14406  16C3  084B               	movf	_updateTemperatures$2152^(0+128),w
 14407  16C4  0020               	movlb	0	; select bank0
 14408  16C5  00A6               	movwf	___flmul@b
 14409  16C6  0021               	movlb	1	; select bank1
 14410  16C7  0852               	movf	(_updateTemperatures$2153+3)^(0+128),w
 14411  16C8  0020               	movlb	0	; select bank0
 14412  16C9  00AD               	movwf	___flmul@a+3
 14413  16CA  0021               	movlb	1	; select bank1
 14414  16CB  0851               	movf	(_updateTemperatures$2153+2)^(0+128),w
 14415  16CC  0020               	movlb	0	; select bank0
 14416  16CD  00AC               	movwf	___flmul@a+2
 14417  16CE  0021               	movlb	1	; select bank1
 14418  16CF  0850               	movf	(_updateTemperatures$2153+1)^(0+128),w
 14419  16D0  0020               	movlb	0	; select bank0
 14420  16D1  00AB               	movwf	___flmul@a+1
 14421  16D2  0021               	movlb	1	; select bank1
 14422  16D3  084F               	movf	_updateTemperatures$2153^(0+128),w
 14423  16D4  0020               	movlb	0	; select bank0
 14424  16D5  00AA               	movwf	___flmul@a
 14425  16D6  3190  2022  3195   	fcall	___flmul
 14426  16D9  0020               	movlb	0	; select bank0
 14427  16DA  0829               	movf	?___flmul+3,w
 14428  16DB  0021               	movlb	1	; select bank1
 14429  16DC  00D6               	movwf	(_updateTemperatures$2154+3)^(0+128)
 14430  16DD  0020               	movlb	0	; select bank0
 14431  16DE  0828               	movf	?___flmul+2,w
 14432  16DF  0021               	movlb	1	; select bank1
 14433  16E0  00D5               	movwf	(_updateTemperatures$2154+2)^(0+128)
 14434  16E1  0020               	movlb	0	; select bank0
 14435  16E2  0827               	movf	?___flmul+1,w
 14436  16E3  0021               	movlb	1	; select bank1
 14437  16E4  00D4               	movwf	(_updateTemperatures$2154+1)^(0+128)
 14438  16E5  0020               	movlb	0	; select bank0
 14439  16E6  0826               	movf	?___flmul,w
 14440  16E7  0021               	movlb	1	; select bank1
 14441  16E8  00D3               	movwf	_updateTemperatures$2154^(0+128)
 14442                           
 14443                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14444  16E9  0023               	movlb	3	; select bank3
 14445  16EA  083F               	movf	(_rts+3)^(0+384),w
 14446  16EB  00F4               	movwf	___xxtofl@val+3
 14447  16EC  083E               	movf	(_rts+2)^(0+384),w
 14448  16ED  00F3               	movwf	___xxtofl@val+2
 14449  16EE  083D               	movf	(_rts+1)^(0+384),w
 14450  16EF  00F2               	movwf	___xxtofl@val+1
 14451  16F0  083C               	movf	_rts^(0+384),w
 14452  16F1  00F1               	movwf	___xxtofl@val
 14453  16F2  3000               	movlw	0
 14454  16F3  31AB  23E3  3195   	fcall	___xxtofl
 14455  16F6  0874               	movf	?___xxtofl+3,w
 14456  16F7  0021               	movlb	1	; select bank1
 14457  16F8  00DA               	movwf	(_updateTemperatures$2155+3)^(0+128)
 14458  16F9  0873               	movf	?___xxtofl+2,w
 14459  16FA  00D9               	movwf	(_updateTemperatures$2155+2)^(0+128)
 14460  16FB  0872               	movf	?___xxtofl+1,w
 14461  16FC  00D8               	movwf	(_updateTemperatures$2155+1)^(0+128)
 14462  16FD  0871               	movf	?___xxtofl,w
 14463  16FE  00D7               	movwf	_updateTemperatures$2155^(0+128)
 14464                           
 14465                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14466  16FF  085A               	movf	(_updateTemperatures$2155+3)^(0+128),w
 14467  1700  00AB               	movwf	(logf@x+3)^(0+128)
 14468  1701  0859               	movf	(_updateTemperatures$2155+2)^(0+128),w
 14469  1702  00AA               	movwf	(logf@x+2)^(0+128)
 14470  1703  0858               	movf	(_updateTemperatures$2155+1)^(0+128),w
 14471  1704  00A9               	movwf	(logf@x+1)^(0+128)
 14472  1705  0857               	movf	_updateTemperatures$2155^(0+128),w
 14473  1706  00A8               	movwf	logf@x^(0+128)
 14474  1707  3180  2074  3195   	fcall	_logf
 14475  170A  0021               	movlb	1	; select bank1
 14476  170B  082B               	movf	(?_logf+3)^(0+128),w
 14477  170C  00DE               	movwf	(_updateTemperatures$2156+3)^(0+128)
 14478  170D  082A               	movf	(?_logf+2)^(0+128),w
 14479  170E  00DD               	movwf	(_updateTemperatures$2156+2)^(0+128)
 14480  170F  0829               	movf	(?_logf+1)^(0+128),w
 14481  1710  00DC               	movwf	(_updateTemperatures$2156+1)^(0+128)
 14482  1711  0828               	movf	?_logf^(0+128),w
 14483  1712  00DB               	movwf	_updateTemperatures$2156^(0+128)
 14484                           
 14485                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14486  1713  30BC               	movlw	188
 14487  1714  0020               	movlb	0	; select bank0
 14488  1715  00DD               	movwf	___fladd@b+3
 14489  1716  308E               	movlw	142
 14490  1717  00DC               	movwf	___fladd@b+2
 14491  1718  30C5               	movlw	197
 14492  1719  00DB               	movwf	___fladd@b+1
 14493  171A  3072               	movlw	114
 14494  171B  00DA               	movwf	___fladd@b
 14495  171C  303B               	movlw	59
 14496  171D  00A9               	movwf	___flmul@b+3
 14497  171E  304D               	movlw	77
 14498  171F  00A8               	movwf	___flmul@b+2
 14499  1720  3098               	movlw	152
 14500  1721  00A7               	movwf	___flmul@b+1
 14501  1722  3025               	movlw	37
 14502  1723  00A6               	movwf	___flmul@b
 14503  1724  0021               	movlb	1	; select bank1
 14504  1725  085E               	movf	(_updateTemperatures$2156+3)^(0+128),w
 14505  1726  0020               	movlb	0	; select bank0
 14506  1727  00AD               	movwf	___flmul@a+3
 14507  1728  0021               	movlb	1	; select bank1
 14508  1729  085D               	movf	(_updateTemperatures$2156+2)^(0+128),w
 14509  172A  0020               	movlb	0	; select bank0
 14510  172B  00AC               	movwf	___flmul@a+2
 14511  172C  0021               	movlb	1	; select bank1
 14512  172D  085C               	movf	(_updateTemperatures$2156+1)^(0+128),w
 14513  172E  0020               	movlb	0	; select bank0
 14514  172F  00AB               	movwf	___flmul@a+1
 14515  1730  0021               	movlb	1	; select bank1
 14516  1731  085B               	movf	_updateTemperatures$2156^(0+128),w
 14517  1732  0020               	movlb	0	; select bank0
 14518  1733  00AA               	movwf	___flmul@a
 14519  1734  3190  2022  3195   	fcall	___flmul
 14520  1737  0020               	movlb	0	; select bank0
 14521  1738  0829               	movf	?___flmul+3,w
 14522  1739  00E1               	movwf	___fladd@a+3
 14523  173A  0828               	movf	?___flmul+2,w
 14524  173B  00E0               	movwf	___fladd@a+2
 14525  173C  0827               	movf	?___flmul+1,w
 14526  173D  00DF               	movwf	___fladd@a+1
 14527  173E  0826               	movf	?___flmul,w
 14528  173F  00DE               	movwf	___fladd@a
 14529  1740  3185  25FE  3195   	fcall	___fladd
 14530  1743  0020               	movlb	0	; select bank0
 14531  1744  085D               	movf	?___fladd+3,w
 14532  1745  0021               	movlb	1	; select bank1
 14533  1746  00E2               	movwf	(_updateTemperatures$2157+3)^(0+128)
 14534  1747  0020               	movlb	0	; select bank0
 14535  1748  085C               	movf	?___fladd+2,w
 14536  1749  0021               	movlb	1	; select bank1
 14537  174A  00E1               	movwf	(_updateTemperatures$2157+2)^(0+128)
 14538  174B  0020               	movlb	0	; select bank0
 14539  174C  085B               	movf	?___fladd+1,w
 14540  174D  0021               	movlb	1	; select bank1
 14541  174E  00E0               	movwf	(_updateTemperatures$2157+1)^(0+128)
 14542  174F  0020               	movlb	0	; select bank0
 14543  1750  085A               	movf	?___fladd,w
 14544  1751  0021               	movlb	1	; select bank1
 14545  1752  00DF               	movwf	_updateTemperatures$2157^(0+128)
 14546                           
 14547                           ;BQ76920.c: 282:      tmp = 1/ (-0.017428133935807 + 0.003137120345556*logf(rts) + -0.00
      +                          0010382213834 *(logf(rts)*logf(rts)*logf(rts)));
 14548  1753  30B7               	movlw	183
 14549  1754  0020               	movlb	0	; select bank0
 14550  1755  00A9               	movwf	___flmul@b+3
 14551  1756  302E               	movlw	46
 14552  1757  00A8               	movwf	___flmul@b+2
 14553  1758  302F               	movlw	47
 14554  1759  00A7               	movwf	___flmul@b+1
 14555  175A  3045               	movlw	69
 14556  175B  00A6               	movwf	___flmul@b
 14557  175C  0021               	movlb	1	; select bank1
 14558  175D  0856               	movf	(_updateTemperatures$2154+3)^(0+128),w
 14559  175E  0020               	movlb	0	; select bank0
 14560  175F  00AD               	movwf	___flmul@a+3
 14561  1760  0021               	movlb	1	; select bank1
 14562  1761  0855               	movf	(_updateTemperatures$2154+2)^(0+128),w
 14563  1762  0020               	movlb	0	; select bank0
 14564  1763  00AC               	movwf	___flmul@a+2
 14565  1764  0021               	movlb	1	; select bank1
 14566  1765  0854               	movf	(_updateTemperatures$2154+1)^(0+128),w
 14567  1766  0020               	movlb	0	; select bank0
 14568  1767  00AB               	movwf	___flmul@a+1
 14569  1768  0021               	movlb	1	; select bank1
 14570  1769  0853               	movf	_updateTemperatures$2154^(0+128),w
 14571  176A  0020               	movlb	0	; select bank0
 14572  176B  00AA               	movwf	___flmul@a
 14573  176C  3190  2022  3195   	fcall	___flmul
 14574  176F  0020               	movlb	0	; select bank0
 14575  1770  0829               	movf	?___flmul+3,w
 14576  1771  00DD               	movwf	___fladd@b+3
 14577  1772  0828               	movf	?___flmul+2,w
 14578  1773  00DC               	movwf	___fladd@b+2
 14579  1774  0827               	movf	?___flmul+1,w
 14580  1775  00DB               	movwf	___fladd@b+1
 14581  1776  0826               	movf	?___flmul,w
 14582  1777  00DA               	movwf	___fladd@b
 14583  1778  0021               	movlb	1	; select bank1
 14584  1779  0862               	movf	(_updateTemperatures$2157+3)^(0+128),w
 14585  177A  0020               	movlb	0	; select bank0
 14586  177B  00E1               	movwf	___fladd@a+3
 14587  177C  0021               	movlb	1	; select bank1
 14588  177D  0861               	movf	(_updateTemperatures$2157+2)^(0+128),w
 14589  177E  0020               	movlb	0	; select bank0
 14590  177F  00E0               	movwf	___fladd@a+2
 14591  1780  0021               	movlb	1	; select bank1
 14592  1781  0860               	movf	(_updateTemperatures$2157+1)^(0+128),w
 14593  1782  0020               	movlb	0	; select bank0
 14594  1783  00DF               	movwf	___fladd@a+1
 14595  1784  0021               	movlb	1	; select bank1
 14596  1785  085F               	movf	_updateTemperatures$2157^(0+128),w
 14597  1786  0020               	movlb	0	; select bank0
 14598  1787  00DE               	movwf	___fladd@a
 14599  1788  3185  25FE  3195   	fcall	___fladd
 14600  178B  0020               	movlb	0	; select bank0
 14601  178C  085D               	movf	?___fladd+3,w
 14602  178D  00C3               	movwf	___fldiv@a+3
 14603  178E  085C               	movf	?___fladd+2,w
 14604  178F  00C2               	movwf	___fldiv@a+2
 14605  1790  085B               	movf	?___fladd+1,w
 14606  1791  00C1               	movwf	___fldiv@a+1
 14607  1792  085A               	movf	?___fladd,w
 14608  1793  00C0               	movwf	___fldiv@a
 14609  1794  303F               	movlw	63
 14610  1795  00C7               	movwf	___fldiv@b+3
 14611  1796  3080               	movlw	128
 14612  1797  00C6               	movwf	___fldiv@b+2
 14613  1798  3000               	movlw	0
 14614  1799  00C5               	movwf	___fldiv@b+1
 14615  179A  3000               	movlw	0
 14616  179B  00C4               	movwf	___fldiv@b
 14617  179C  319C  24E2  3195   	fcall	___fldiv
 14618  179F  0020               	movlb	0	; select bank0
 14619  17A0  0843               	movf	?___fldiv+3,w
 14620  17A1  0021               	movlb	1	; select bank1
 14621  17A2  00E6               	movwf	(updateTemperatures@tmp+3)^(0+128)
 14622  17A3  0020               	movlb	0	; select bank0
 14623  17A4  0842               	movf	?___fldiv+2,w
 14624  17A5  0021               	movlb	1	; select bank1
 14625  17A6  00E5               	movwf	(updateTemperatures@tmp+2)^(0+128)
 14626  17A7  0020               	movlb	0	; select bank0
 14627  17A8  0841               	movf	?___fldiv+1,w
 14628  17A9  0021               	movlb	1	; select bank1
 14629  17AA  00E4               	movwf	(updateTemperatures@tmp+1)^(0+128)
 14630  17AB  0020               	movlb	0	; select bank0
 14631  17AC  0840               	movf	?___fldiv,w
 14632  17AD  0021               	movlb	1	; select bank1
 14633  17AE  00E3               	movwf	updateTemperatures@tmp^(0+128)
 14634                           
 14635                           ;BQ76920.c: 284:      temperatureThermistor = (tmp - 273.15)*100;
 14636  17AF  0866               	movf	(updateTemperatures@tmp+3)^(0+128),w
 14637  17B0  0020               	movlb	0	; select bank0
 14638  17B1  00E1               	movwf	___fladd@a+3
 14639  17B2  0021               	movlb	1	; select bank1
 14640  17B3  0865               	movf	(updateTemperatures@tmp+2)^(0+128),w
 14641  17B4  0020               	movlb	0	; select bank0
 14642  17B5  00E0               	movwf	___fladd@a+2
 14643  17B6  0021               	movlb	1	; select bank1
 14644  17B7  0864               	movf	(updateTemperatures@tmp+1)^(0+128),w
 14645  17B8  0020               	movlb	0	; select bank0
 14646  17B9  00DF               	movwf	___fladd@a+1
 14647  17BA  0021               	movlb	1	; select bank1
 14648  17BB  0863               	movf	updateTemperatures@tmp^(0+128),w
 14649  17BC  0020               	movlb	0	; select bank0
 14650  17BD  00DE               	movwf	___fladd@a
 14651  17BE  30C3               	movlw	195
 14652  17BF  00DD               	movwf	___fladd@b+3
 14653  17C0  3088               	movlw	136
 14654  17C1  00DC               	movwf	___fladd@b+2
 14655  17C2  3093               	movlw	147
 14656  17C3  00DB               	movwf	___fladd@b+1
 14657  17C4  3033               	movlw	51
 14658  17C5  00DA               	movwf	___fladd@b
 14659  17C6  3185  25FE  3195   	fcall	___fladd
 14660  17C9  0020               	movlb	0	; select bank0
 14661  17CA  085D               	movf	?___fladd+3,w
 14662  17CB  00AD               	movwf	___flmul@a+3
 14663  17CC  085C               	movf	?___fladd+2,w
 14664  17CD  00AC               	movwf	___flmul@a+2
 14665  17CE  085B               	movf	?___fladd+1,w
 14666  17CF  00AB               	movwf	___flmul@a+1
 14667  17D0  085A               	movf	?___fladd,w
 14668  17D1  00AA               	movwf	___flmul@a
 14669  17D2  3042               	movlw	66
 14670  17D3  00A9               	movwf	___flmul@b+3
 14671  17D4  30C8               	movlw	200
 14672  17D5  00A8               	movwf	___flmul@b+2
 14673  17D6  3000               	movlw	0
 14674  17D7  00A7               	movwf	___flmul@b+1
 14675  17D8  3000               	movlw	0
 14676  17D9  00A6               	movwf	___flmul@b
 14677  17DA  3190  2022  3195   	fcall	___flmul
 14678  17DD  0020               	movlb	0	; select bank0
 14679  17DE  0829               	movf	?___flmul+3,w
 14680  17DF  0021               	movlb	1	; select bank1
 14681  17E0  00AB               	movwf	(___fltol@f1+3)^(0+128)
 14682  17E1  0020               	movlb	0	; select bank0
 14683  17E2  0828               	movf	?___flmul+2,w
 14684  17E3  0021               	movlb	1	; select bank1
 14685  17E4  00AA               	movwf	(___fltol@f1+2)^(0+128)
 14686  17E5  0020               	movlb	0	; select bank0
 14687  17E6  0827               	movf	?___flmul+1,w
 14688  17E7  0021               	movlb	1	; select bank1
 14689  17E8  00A9               	movwf	(___fltol@f1+1)^(0+128)
 14690  17E9  0020               	movlb	0	; select bank0
 14691  17EA  0826               	movf	?___flmul,w
 14692  17EB  0021               	movlb	1	; select bank1
 14693  17EC  00A8               	movwf	___fltol@f1^(0+128)
 14694  17ED  31A8  20A6         	fcall	___fltol
 14695  17EF  0021               	movlb	1	; select bank1
 14696  17F0  082B               	movf	(?___fltol+3)^(0+128),w
 14697  17F1  0023               	movlb	3	; select bank3
 14698  17F2  00C3               	movwf	(_temperatureThermistor+3)^(0+384)
 14699  17F3  0021               	movlb	1	; select bank1
 14700  17F4  082A               	movf	(?___fltol+2)^(0+128),w
 14701  17F5  0023               	movlb	3	; select bank3
 14702  17F6  00C2               	movwf	(_temperatureThermistor+2)^(0+384)
 14703  17F7  0021               	movlb	1	; select bank1
 14704  17F8  0829               	movf	(?___fltol+1)^(0+128),w
 14705  17F9  0023               	movlb	3	; select bank3
 14706  17FA  00C1               	movwf	(_temperatureThermistor+1)^(0+384)
 14707  17FB  0021               	movlb	1	; select bank1
 14708  17FC  0828               	movf	?___fltol^(0+128),w
 14709  17FD  0023               	movlb	3	; select bank3
 14710  17FE  00C0               	movwf	_temperatureThermistor^(0+384)
 14711  17FF  0008               	return
 14712  1800                     __end_of_updateTemperatures:	
 14713                           
 14714                           	psect	text50
 14715  0074                     __ptext50:	
 14716 ;; *************** function _logf *****************
 14717 ;; Defined at:
 14718 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\logf.c"
 14719 ;; Parameters:    Size  Location     Type
 14720 ;;  x               4    8[BANK1 ] float 
 14721 ;; Auto vars:     Size  Location     Type
 14722 ;;  ix              4   62[BANK2 ] unsigned long 
 14723 ;;  f               4   58[BANK2 ] float 
 14724 ;;  u               4   54[BANK2 ] struct .
 14725 ;;  w               4   46[BANK2 ] float 
 14726 ;;  z               4   42[BANK2 ] float 
 14727 ;;  s               4   38[BANK2 ] float 
 14728 ;;  dk              4   34[BANK2 ] float 
 14729 ;;  hfsq            4   30[BANK2 ] float 
 14730 ;;  t2              4    8[BANK2 ] float 
 14731 ;;  t1              4    4[BANK2 ] float 
 14732 ;;  R               4    0[BANK2 ] float 
 14733 ;;  k               2   28[BANK2 ] int 
 14734 ;; Return value:  Size  Location     Type
 14735 ;;                  4    8[BANK1 ] float 
 14736 ;; Registers used:
 14737 ;;		wreg, status,2, status,0, pclath, cstack
 14738 ;; Tracked objects:
 14739 ;;		On entry : 0/0
 14740 ;;		On exit  : 0/0
 14741 ;;		Unchanged: 0/0
 14742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14743 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14744 ;;      Locals:         0       0       0      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14745 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14746 ;;      Totals:         0       0      12      66       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14747 ;;Total ram usage:       78 bytes
 14748 ;; Hardware stack levels used:    1
 14749 ;; Hardware stack levels required when called:    3
 14750 ;; This function calls:
 14751 ;;		___fladd
 14752 ;;		___fldiv
 14753 ;;		___flmul
 14754 ;;		___flsub
 14755 ;;		___xxtofl
 14756 ;; This function is called by:
 14757 ;;		_updateTemperatures
 14758 ;; This function uses a non-reentrant model
 14759 ;;
 14760                           
 14761                           
 14762                           ;psect for function _logf
 14763  0074                     _logf:	
 14764                           
 14765                           ;incstack = 0
 14766                           ; Regs used in _logf: [wreg+status,2+status,0+pclath+cstack]
 14767  0074  0023               	movlb	3	; select bank3
 14768  0075  0837               	movf	(logf@F469+3)^(0+384),w
 14769  0076  0022               	movlb	2	; select bank2
 14770  0077  00D9               	movwf	(logf@u+3)^(0+256)
 14771  0078  0023               	movlb	3	; select bank3
 14772  0079  0836               	movf	(logf@F469+2)^(0+384),w
 14773  007A  0022               	movlb	2	; select bank2
 14774  007B  00D8               	movwf	(logf@u+2)^(0+256)
 14775  007C  0023               	movlb	3	; select bank3
 14776  007D  0835               	movf	(logf@F469+1)^(0+384),w
 14777  007E  0022               	movlb	2	; select bank2
 14778  007F  00D7               	movwf	(logf@u+1)^(0+256)
 14779  0080  0023               	movlb	3	; select bank3
 14780  0081  0834               	movf	logf@F469^(0+384),w
 14781  0082  0022               	movlb	2	; select bank2
 14782  0083  00D6               	movwf	logf@u^(0+256)
 14783  0084  0021               	movlb	1	; select bank1
 14784  0085  082B               	movf	(logf@x+3)^(0+128),w
 14785  0086  0022               	movlb	2	; select bank2
 14786  0087  00D9               	movwf	(logf@u+3)^(0+256)
 14787  0088  0021               	movlb	1	; select bank1
 14788  0089  082A               	movf	(logf@x+2)^(0+128),w
 14789  008A  0022               	movlb	2	; select bank2
 14790  008B  00D8               	movwf	(logf@u+2)^(0+256)
 14791  008C  0021               	movlb	1	; select bank1
 14792  008D  0829               	movf	(logf@x+1)^(0+128),w
 14793  008E  0022               	movlb	2	; select bank2
 14794  008F  00D7               	movwf	(logf@u+1)^(0+256)
 14795  0090  0021               	movlb	1	; select bank1
 14796  0091  0828               	movf	logf@x^(0+128),w
 14797  0092  0022               	movlb	2	; select bank2
 14798  0093  00D6               	movwf	logf@u^(0+256)
 14799  0094  0859               	movf	(logf@u+3)^(0+256),w
 14800  0095  00E1               	movwf	(logf@ix+3)^(0+256)
 14801  0096  0858               	movf	(logf@u+2)^(0+256),w
 14802  0097  00E0               	movwf	(logf@ix+2)^(0+256)
 14803  0098  0857               	movf	(logf@u+1)^(0+256),w
 14804  0099  00DF               	movwf	(logf@ix+1)^(0+256)
 14805  009A  0856               	movf	logf@u^(0+256),w
 14806  009B  00DE               	movwf	logf@ix^(0+256)
 14807  009C  01BC               	clrf	logf@k^(0+256)
 14808  009D  01BD               	clrf	(logf@k+1)^(0+256)
 14809  009E  0861               	movf	(logf@ix+3)^(0+256),w
 14810  009F  1D03               	btfss	3,2
 14811  00A0  28A5               	goto	l5684
 14812  00A1  3080               	movlw	128
 14813  00A2  0260               	subwf	(logf@ix+2)^(0+256),w
 14814  00A3  1C03               	btfss	3,0
 14815  00A4  28C1               	goto	l5686
 14816  00A5                     l5684:	
 14817  00A5  085E               	movf	logf@ix^(0+256),w
 14818  00A6  0021               	movlb	1	; select bank1
 14819  00A7  00AC               	movwf	??_logf^(0+128)
 14820  00A8  0022               	movlb	2	; select bank2
 14821  00A9  085F               	movf	(logf@ix+1)^(0+256),w
 14822  00AA  0021               	movlb	1	; select bank1
 14823  00AB  00AD               	movwf	(??_logf^(0+128)+1)
 14824  00AC  0022               	movlb	2	; select bank2
 14825  00AD  0860               	movf	(logf@ix+2)^(0+256),w
 14826  00AE  0021               	movlb	1	; select bank1
 14827  00AF  00AE               	movwf	(??_logf^(0+128)+2)
 14828  00B0  0022               	movlb	2	; select bank2
 14829  00B1  0861               	movf	(logf@ix+3)^(0+256),w
 14830  00B2  0021               	movlb	1	; select bank1
 14831  00B3  00AF               	movwf	(??_logf^(0+128)+3)
 14832  00B4  301F               	movlw	31
 14833  00B5                     u7015:	
 14834  00B5  36AF               	lsrf	(??_logf^(0+128)+3),f
 14835  00B6  0CAE               	rrf	(??_logf^(0+128)+2),f
 14836  00B7  0CAD               	rrf	(??_logf^(0+128)+1),f
 14837  00B8  0CAC               	rrf	??_logf^(0+128),f
 14838  00B9  0B89               	decfsz	9,f
 14839  00BA  28B5               	goto	u7015
 14840  00BB  082F               	movf	(??_logf+3)^(0+128),w
 14841  00BC  042E               	iorwf	(??_logf+2)^(0+128),w
 14842  00BD  042D               	iorwf	(??_logf+1)^(0+128),w
 14843  00BE  042C               	iorwf	??_logf^(0+128),w
 14844  00BF  1903               	skipnz
 14845  00C0  29CA               	goto	l5706
 14846  00C1                     l5686:	
 14847  00C1  0022               	movlb	2	; select bank2
 14848  00C2  085E               	movf	logf@ix^(0+256),w
 14849  00C3  0021               	movlb	1	; select bank1
 14850  00C4  00AC               	movwf	??_logf^(0+128)
 14851  00C5  0022               	movlb	2	; select bank2
 14852  00C6  085F               	movf	(logf@ix+1)^(0+256),w
 14853  00C7  0021               	movlb	1	; select bank1
 14854  00C8  00AD               	movwf	(??_logf^(0+128)+1)
 14855  00C9  0022               	movlb	2	; select bank2
 14856  00CA  0860               	movf	(logf@ix+2)^(0+256),w
 14857  00CB  0021               	movlb	1	; select bank1
 14858  00CC  00AE               	movwf	(??_logf^(0+128)+2)
 14859  00CD  0022               	movlb	2	; select bank2
 14860  00CE  0861               	movf	(logf@ix+3)^(0+256),w
 14861  00CF  0021               	movlb	1	; select bank1
 14862  00D0  00AF               	movwf	(??_logf^(0+128)+3)
 14863  00D1  3001               	movlw	1
 14864  00D2                     u7035:	
 14865  00D2  35AC               	lslf	??_logf^(0+128),f
 14866  00D3  0DAD               	rlf	(??_logf^(0+128)+1),f
 14867  00D4  0DAE               	rlf	(??_logf^(0+128)+2),f
 14868  00D5  0DAF               	rlf	(??_logf^(0+128)+3),f
 14869  00D6  0B89               	decfsz	9,f
 14870  00D7  28D2               	goto	u7035
 14871  00D8  082F               	movf	(??_logf+3)^(0+128),w
 14872  00D9  042E               	iorwf	(??_logf+2)^(0+128),w
 14873  00DA  042D               	iorwf	(??_logf+1)^(0+128),w
 14874  00DB  042C               	iorwf	??_logf^(0+128),w
 14875  00DC  1D03               	skipz
 14876  00DD  2924               	goto	l5692
 14877  00DE  082B               	movf	(logf@x+3)^(0+128),w
 14878  00DF  0020               	movlb	0	; select bank0
 14879  00E0  00A9               	movwf	___flmul@b+3
 14880  00E1  0021               	movlb	1	; select bank1
 14881  00E2  082A               	movf	(logf@x+2)^(0+128),w
 14882  00E3  0020               	movlb	0	; select bank0
 14883  00E4  00A8               	movwf	___flmul@b+2
 14884  00E5  0021               	movlb	1	; select bank1
 14885  00E6  0829               	movf	(logf@x+1)^(0+128),w
 14886  00E7  0020               	movlb	0	; select bank0
 14887  00E8  00A7               	movwf	___flmul@b+1
 14888  00E9  0021               	movlb	1	; select bank1
 14889  00EA  0828               	movf	logf@x^(0+128),w
 14890  00EB  0020               	movlb	0	; select bank0
 14891  00EC  00A6               	movwf	___flmul@b
 14892  00ED  0021               	movlb	1	; select bank1
 14893  00EE  082B               	movf	(logf@x+3)^(0+128),w
 14894  00EF  0020               	movlb	0	; select bank0
 14895  00F0  00AD               	movwf	___flmul@a+3
 14896  00F1  0021               	movlb	1	; select bank1
 14897  00F2  082A               	movf	(logf@x+2)^(0+128),w
 14898  00F3  0020               	movlb	0	; select bank0
 14899  00F4  00AC               	movwf	___flmul@a+2
 14900  00F5  0021               	movlb	1	; select bank1
 14901  00F6  0829               	movf	(logf@x+1)^(0+128),w
 14902  00F7  0020               	movlb	0	; select bank0
 14903  00F8  00AB               	movwf	___flmul@a+1
 14904  00F9  0021               	movlb	1	; select bank1
 14905  00FA  0828               	movf	logf@x^(0+128),w
 14906  00FB  0020               	movlb	0	; select bank0
 14907  00FC  00AA               	movwf	___flmul@a
 14908  00FD  3190  2022  3180   	fcall	___flmul
 14909  0100  0020               	movlb	0	; select bank0
 14910  0101  0829               	movf	?___flmul+3,w
 14911  0102  00C3               	movwf	___fldiv@a+3
 14912  0103  0828               	movf	?___flmul+2,w
 14913  0104  00C2               	movwf	___fldiv@a+2
 14914  0105  0827               	movf	?___flmul+1,w
 14915  0106  00C1               	movwf	___fldiv@a+1
 14916  0107  0826               	movf	?___flmul,w
 14917  0108  00C0               	movwf	___fldiv@a
 14918  0109  30BF               	movlw	191
 14919  010A  00C7               	movwf	___fldiv@b+3
 14920  010B  3080               	movlw	128
 14921  010C  00C6               	movwf	___fldiv@b+2
 14922  010D  3000               	movlw	0
 14923  010E  00C5               	movwf	___fldiv@b+1
 14924  010F  3000               	movlw	0
 14925  0110  00C4               	movwf	___fldiv@b
 14926  0111  319C  24E2         	fcall	___fldiv
 14927  0113  0020               	movlb	0	; select bank0
 14928  0114  0843               	movf	?___fldiv+3,w
 14929  0115  0021               	movlb	1	; select bank1
 14930  0116  00AB               	movwf	(?_logf+3)^(0+128)
 14931  0117  0020               	movlb	0	; select bank0
 14932  0118  0842               	movf	?___fldiv+2,w
 14933  0119  0021               	movlb	1	; select bank1
 14934  011A  00AA               	movwf	(?_logf+2)^(0+128)
 14935  011B  0020               	movlb	0	; select bank0
 14936  011C  0841               	movf	?___fldiv+1,w
 14937  011D  0021               	movlb	1	; select bank1
 14938  011E  00A9               	movwf	(?_logf+1)^(0+128)
 14939  011F  0020               	movlb	0	; select bank0
 14940  0120  0840               	movf	?___fldiv,w
 14941  0121  0021               	movlb	1	; select bank1
 14942  0122  00A8               	movwf	?_logf^(0+128)
 14943  0123  0008               	return
 14944  0124                     l5692:	
 14945  0124  0022               	movlb	2	; select bank2
 14946  0125  085E               	movf	logf@ix^(0+256),w
 14947  0126  0021               	movlb	1	; select bank1
 14948  0127  00AC               	movwf	??_logf^(0+128)
 14949  0128  0022               	movlb	2	; select bank2
 14950  0129  085F               	movf	(logf@ix+1)^(0+256),w
 14951  012A  0021               	movlb	1	; select bank1
 14952  012B  00AD               	movwf	(??_logf^(0+128)+1)
 14953  012C  0022               	movlb	2	; select bank2
 14954  012D  0860               	movf	(logf@ix+2)^(0+256),w
 14955  012E  0021               	movlb	1	; select bank1
 14956  012F  00AE               	movwf	(??_logf^(0+128)+2)
 14957  0130  0022               	movlb	2	; select bank2
 14958  0131  0861               	movf	(logf@ix+3)^(0+256),w
 14959  0132  0021               	movlb	1	; select bank1
 14960  0133  00AF               	movwf	(??_logf^(0+128)+3)
 14961  0134  301F               	movlw	31
 14962  0135                     u7055:	
 14963  0135  36AF               	lsrf	(??_logf^(0+128)+3),f
 14964  0136  0CAE               	rrf	(??_logf^(0+128)+2),f
 14965  0137  0CAD               	rrf	(??_logf^(0+128)+1),f
 14966  0138  0CAC               	rrf	??_logf^(0+128),f
 14967  0139  0B89               	decfsz	9,f
 14968  013A  2935               	goto	u7055
 14969  013B  082F               	movf	(??_logf+3)^(0+128),w
 14970  013C  042E               	iorwf	(??_logf+2)^(0+128),w
 14971  013D  042D               	iorwf	(??_logf+1)^(0+128),w
 14972  013E  042C               	iorwf	??_logf^(0+128),w
 14973  013F  1903               	skipnz
 14974  0140  2981               	goto	l5698
 14975  0141  3000               	movlw	0
 14976  0142  0020               	movlb	0	; select bank0
 14977  0143  00C3               	movwf	___fldiv@a+3
 14978  0144  3000               	movlw	0
 14979  0145  00C2               	movwf	___fldiv@a+2
 14980  0146  3000               	movlw	0
 14981  0147  00C1               	movwf	___fldiv@a+1
 14982  0148  3000               	movlw	0
 14983  0149  00C0               	movwf	___fldiv@a
 14984  014A  0021               	movlb	1	; select bank1
 14985  014B  082B               	movf	(logf@x+3)^(0+128),w
 14986  014C  00A3               	movwf	(___flsub@a+3)^(0+128)
 14987  014D  082A               	movf	(logf@x+2)^(0+128),w
 14988  014E  00A2               	movwf	(___flsub@a+2)^(0+128)
 14989  014F  0829               	movf	(logf@x+1)^(0+128),w
 14990  0150  00A1               	movwf	(___flsub@a+1)^(0+128)
 14991  0151  0828               	movf	logf@x^(0+128),w
 14992  0152  00A0               	movwf	___flsub@a^(0+128)
 14993  0153  082B               	movf	(logf@x+3)^(0+128),w
 14994  0154  00A7               	movwf	(___flsub@b+3)^(0+128)
 14995  0155  082A               	movf	(logf@x+2)^(0+128),w
 14996  0156  00A6               	movwf	(___flsub@b+2)^(0+128)
 14997  0157  0829               	movf	(logf@x+1)^(0+128),w
 14998  0158  00A5               	movwf	(___flsub@b+1)^(0+128)
 14999  0159  0828               	movf	logf@x^(0+128),w
 15000  015A  00A4               	movwf	___flsub@b^(0+128)
 15001  015B  31B5  2552  3180   	fcall	___flsub
 15002  015E  0021               	movlb	1	; select bank1
 15003  015F  0823               	movf	(?___flsub+3)^(0+128),w
 15004  0160  0020               	movlb	0	; select bank0
 15005  0161  00C7               	movwf	___fldiv@b+3
 15006  0162  0021               	movlb	1	; select bank1
 15007  0163  0822               	movf	(?___flsub+2)^(0+128),w
 15008  0164  0020               	movlb	0	; select bank0
 15009  0165  00C6               	movwf	___fldiv@b+2
 15010  0166  0021               	movlb	1	; select bank1
 15011  0167  0821               	movf	(?___flsub+1)^(0+128),w
 15012  0168  0020               	movlb	0	; select bank0
 15013  0169  00C5               	movwf	___fldiv@b+1
 15014  016A  0021               	movlb	1	; select bank1
 15015  016B  0820               	movf	?___flsub^(0+128),w
 15016  016C  0020               	movlb	0	; select bank0
 15017  016D  00C4               	movwf	___fldiv@b
 15018  016E  319C  24E2         	fcall	___fldiv
 15019  0170  0020               	movlb	0	; select bank0
 15020  0171  0843               	movf	?___fldiv+3,w
 15021  0172  0021               	movlb	1	; select bank1
 15022  0173  00AB               	movwf	(?_logf+3)^(0+128)
 15023  0174  0020               	movlb	0	; select bank0
 15024  0175  0842               	movf	?___fldiv+2,w
 15025  0176  0021               	movlb	1	; select bank1
 15026  0177  00AA               	movwf	(?_logf+2)^(0+128)
 15027  0178  0020               	movlb	0	; select bank0
 15028  0179  0841               	movf	?___fldiv+1,w
 15029  017A  0021               	movlb	1	; select bank1
 15030  017B  00A9               	movwf	(?_logf+1)^(0+128)
 15031  017C  0020               	movlb	0	; select bank0
 15032  017D  0840               	movf	?___fldiv,w
 15033  017E  0021               	movlb	1	; select bank1
 15034  017F  00A8               	movwf	?_logf^(0+128)
 15035  0180  0008               	return
 15036  0181                     l5698:	
 15037  0181  30E7               	movlw	231
 15038  0182  0022               	movlb	2	; select bank2
 15039  0183  07BC               	addwf	logf@k^(0+256),f
 15040  0184  30FF               	movlw	255
 15041  0185  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15042  0186  304C               	movlw	76
 15043  0187  0020               	movlb	0	; select bank0
 15044  0188  00A9               	movwf	___flmul@b+3
 15045  0189  3000               	movlw	0
 15046  018A  00A8               	movwf	___flmul@b+2
 15047  018B  3000               	movlw	0
 15048  018C  00A7               	movwf	___flmul@b+1
 15049  018D  3000               	movlw	0
 15050  018E  00A6               	movwf	___flmul@b
 15051  018F  0021               	movlb	1	; select bank1
 15052  0190  082B               	movf	(logf@x+3)^(0+128),w
 15053  0191  0020               	movlb	0	; select bank0
 15054  0192  00AD               	movwf	___flmul@a+3
 15055  0193  0021               	movlb	1	; select bank1
 15056  0194  082A               	movf	(logf@x+2)^(0+128),w
 15057  0195  0020               	movlb	0	; select bank0
 15058  0196  00AC               	movwf	___flmul@a+2
 15059  0197  0021               	movlb	1	; select bank1
 15060  0198  0829               	movf	(logf@x+1)^(0+128),w
 15061  0199  0020               	movlb	0	; select bank0
 15062  019A  00AB               	movwf	___flmul@a+1
 15063  019B  0021               	movlb	1	; select bank1
 15064  019C  0828               	movf	logf@x^(0+128),w
 15065  019D  0020               	movlb	0	; select bank0
 15066  019E  00AA               	movwf	___flmul@a
 15067  019F  3190  2022  3180   	fcall	___flmul
 15068  01A2  0020               	movlb	0	; select bank0
 15069  01A3  0829               	movf	?___flmul+3,w
 15070  01A4  0021               	movlb	1	; select bank1
 15071  01A5  00AB               	movwf	(logf@x+3)^(0+128)
 15072  01A6  0020               	movlb	0	; select bank0
 15073  01A7  0828               	movf	?___flmul+2,w
 15074  01A8  0021               	movlb	1	; select bank1
 15075  01A9  00AA               	movwf	(logf@x+2)^(0+128)
 15076  01AA  0020               	movlb	0	; select bank0
 15077  01AB  0827               	movf	?___flmul+1,w
 15078  01AC  0021               	movlb	1	; select bank1
 15079  01AD  00A9               	movwf	(logf@x+1)^(0+128)
 15080  01AE  0020               	movlb	0	; select bank0
 15081  01AF  0826               	movf	?___flmul,w
 15082  01B0  0021               	movlb	1	; select bank1
 15083  01B1  00A8               	movwf	logf@x^(0+128)
 15084  01B2  082B               	movf	(logf@x+3)^(0+128),w
 15085  01B3  0022               	movlb	2	; select bank2
 15086  01B4  00D9               	movwf	(logf@u+3)^(0+256)
 15087  01B5  0021               	movlb	1	; select bank1
 15088  01B6  082A               	movf	(logf@x+2)^(0+128),w
 15089  01B7  0022               	movlb	2	; select bank2
 15090  01B8  00D8               	movwf	(logf@u+2)^(0+256)
 15091  01B9  0021               	movlb	1	; select bank1
 15092  01BA  0829               	movf	(logf@x+1)^(0+128),w
 15093  01BB  0022               	movlb	2	; select bank2
 15094  01BC  00D7               	movwf	(logf@u+1)^(0+256)
 15095  01BD  0021               	movlb	1	; select bank1
 15096  01BE  0828               	movf	logf@x^(0+128),w
 15097  01BF  0022               	movlb	2	; select bank2
 15098  01C0  00D6               	movwf	logf@u^(0+256)
 15099  01C1  0859               	movf	(logf@u+3)^(0+256),w
 15100  01C2  00E1               	movwf	(logf@ix+3)^(0+256)
 15101  01C3  0858               	movf	(logf@u+2)^(0+256),w
 15102  01C4  00E0               	movwf	(logf@ix+2)^(0+256)
 15103  01C5  0857               	movf	(logf@u+1)^(0+256),w
 15104  01C6  00DF               	movwf	(logf@ix+1)^(0+256)
 15105  01C7  0856               	movf	logf@u^(0+256),w
 15106  01C8  00DE               	movwf	logf@ix^(0+256)
 15107  01C9  29E4               	goto	l5718
 15108  01CA                     l5706:	
 15109  01CA  3080               	movlw	128
 15110  01CB  0022               	movlb	2	; select bank2
 15111  01CC  0260               	subwf	(logf@ix+2)^(0+256),w
 15112  01CD  307F               	movlw	127
 15113  01CE  3B61               	subwfb	(logf@ix+3)^(0+256),w
 15114  01CF  1803               	btfsc	3,0
 15115  01D0  0008               	return
 15116  01D1  3080               	movlw	128
 15117  01D2  0660               	xorwf	(logf@ix+2)^(0+256),w
 15118  01D3  303F               	movlw	63
 15119  01D4  1903               	skipnz
 15120  01D5  0661               	xorwf	(logf@ix+3)^(0+256),w
 15121  01D6  045E               	iorwf	logf@ix^(0+256),w
 15122  01D7  045F               	iorwf	(logf@ix+1)^(0+256),w
 15123  01D8  1D03               	btfss	3,2
 15124  01D9  29E4               	goto	l5718
 15125  01DA  3000               	movlw	0
 15126  01DB  0021               	movlb	1	; select bank1
 15127  01DC  00AB               	movwf	(?_logf+3)^(0+128)
 15128  01DD  3000               	movlw	0
 15129  01DE  00AA               	movwf	(?_logf+2)^(0+128)
 15130  01DF  3000               	movlw	0
 15131  01E0  00A9               	movwf	(?_logf+1)^(0+128)
 15132  01E1  3000               	movlw	0
 15133  01E2  00A8               	movwf	?_logf^(0+128)
 15134  01E3  0008               	return
 15135  01E4                     l5718:	
 15136  01E4  300D               	movlw	13
 15137  01E5  07DE               	addwf	logf@ix^(0+256),f
 15138  01E6  30FB               	movlw	251
 15139  01E7  3DDF               	addwfc	(logf@ix+1)^(0+256),f
 15140  01E8  304A               	movlw	74
 15141  01E9  3DE0               	addwfc	(logf@ix+2)^(0+256),f
 15142  01EA  3000               	movlw	0
 15143  01EB  3DE1               	addwfc	(logf@ix+3)^(0+256),f
 15144  01EC  085E               	movf	logf@ix^(0+256),w
 15145  01ED  0021               	movlb	1	; select bank1
 15146  01EE  00AC               	movwf	??_logf^(0+128)
 15147  01EF  0022               	movlb	2	; select bank2
 15148  01F0  085F               	movf	(logf@ix+1)^(0+256),w
 15149  01F1  0021               	movlb	1	; select bank1
 15150  01F2  00AD               	movwf	(??_logf^(0+128)+1)
 15151  01F3  0022               	movlb	2	; select bank2
 15152  01F4  0860               	movf	(logf@ix+2)^(0+256),w
 15153  01F5  0021               	movlb	1	; select bank1
 15154  01F6  00AE               	movwf	(??_logf^(0+128)+2)
 15155  01F7  0022               	movlb	2	; select bank2
 15156  01F8  0861               	movf	(logf@ix+3)^(0+256),w
 15157  01F9  0021               	movlb	1	; select bank1
 15158  01FA  00AF               	movwf	(??_logf^(0+128)+3)
 15159  01FB  3017               	movlw	23
 15160  01FC                     u7095:	
 15161  01FC  36AF               	lsrf	(??_logf^(0+128)+3),f
 15162  01FD  0CAE               	rrf	(??_logf^(0+128)+2),f
 15163  01FE  0CAD               	rrf	(??_logf^(0+128)+1),f
 15164  01FF  0CAC               	rrf	??_logf^(0+128),f
 15165  0200  0B89               	decfsz	9,f
 15166  0201  29FC               	goto	u7095
 15167  0202  082C               	movf	??_logf^(0+128),w
 15168  0203  3E81               	addlw	129
 15169  0204  00B0               	movwf	(??_logf+4)^(0+128)
 15170  0205  30FF               	movlw	255
 15171  0206  3D2D               	addwfc	(??_logf+1)^(0+128),w
 15172  0207  00B1               	movwf	(??_logf+5)^(0+128)
 15173  0208  0830               	movf	(??_logf+4)^(0+128),w
 15174  0209  0022               	movlb	2	; select bank2
 15175  020A  07BC               	addwf	logf@k^(0+256),f
 15176  020B  0021               	movlb	1	; select bank1
 15177  020C  0831               	movf	(??_logf+5)^(0+128),w
 15178  020D  0022               	movlb	2	; select bank2
 15179  020E  3DBD               	addwfc	(logf@k+1)^(0+256),f
 15180  020F  30F3               	movlw	243
 15181  0210  0021               	movlb	1	; select bank1
 15182  0211  00AC               	movwf	??_logf^(0+128)
 15183  0212  3004               	movlw	4
 15184  0213  00AD               	movwf	(??_logf^(0+128)+1)
 15185  0214  3035               	movlw	53
 15186  0215  00AE               	movwf	(??_logf^(0+128)+2)
 15187  0216  303F               	movlw	63
 15188  0217  00AF               	movwf	(??_logf^(0+128)+3)
 15189  0218  30FF               	movlw	255
 15190  0219  0022               	movlb	2	; select bank2
 15191  021A  055E               	andwf	logf@ix^(0+256),w
 15192  021B  0021               	movlb	1	; select bank1
 15193  021C  00B0               	movwf	(??_logf+4)^(0+128)
 15194  021D  30FF               	movlw	255
 15195  021E  0022               	movlb	2	; select bank2
 15196  021F  055F               	andwf	(logf@ix+1)^(0+256),w
 15197  0220  0021               	movlb	1	; select bank1
 15198  0221  00B1               	movwf	((??_logf+4)^(0+128)+1)
 15199  0222  307F               	movlw	127
 15200  0223  0022               	movlb	2	; select bank2
 15201  0224  0560               	andwf	(logf@ix+2)^(0+256),w
 15202  0225  0021               	movlb	1	; select bank1
 15203  0226  00B2               	movwf	((??_logf+4)^(0+128)+2)
 15204  0227  3000               	movlw	0
 15205  0228  0022               	movlb	2	; select bank2
 15206  0229  0561               	andwf	(logf@ix+3)^(0+256),w
 15207  022A  0021               	movlb	1	; select bank1
 15208  022B  00B3               	movwf	((??_logf+4)^(0+128)+3)
 15209  022C  0830               	movf	(??_logf+4)^(0+128),w
 15210  022D  07AC               	addwf	??_logf^(0+128),f
 15211  022E  0831               	movf	(??_logf+5)^(0+128),w
 15212  022F  3DAD               	addwfc	(??_logf^(0+128)+1),f
 15213  0230  0832               	movf	(??_logf+6)^(0+128),w
 15214  0231  3DAE               	addwfc	(??_logf^(0+128)+2),f
 15215  0232  0833               	movf	(??_logf+7)^(0+128),w
 15216  0233  3DAF               	addwfc	(??_logf^(0+128)+3),f
 15217  0234  082F               	movf	(??_logf+3)^(0+128),w
 15218  0235  0022               	movlb	2	; select bank2
 15219  0236  00E1               	movwf	(logf@ix+3)^(0+256)
 15220  0237  0021               	movlb	1	; select bank1
 15221  0238  082E               	movf	(??_logf+2)^(0+128),w
 15222  0239  0022               	movlb	2	; select bank2
 15223  023A  00E0               	movwf	(logf@ix+2)^(0+256)
 15224  023B  0021               	movlb	1	; select bank1
 15225  023C  082D               	movf	(??_logf+1)^(0+128),w
 15226  023D  0022               	movlb	2	; select bank2
 15227  023E  00DF               	movwf	(logf@ix+1)^(0+256)
 15228  023F  0021               	movlb	1	; select bank1
 15229  0240  082C               	movf	??_logf^(0+128),w
 15230  0241  0022               	movlb	2	; select bank2
 15231  0242  00DE               	movwf	logf@ix^(0+256)
 15232  0243  0861               	movf	(logf@ix+3)^(0+256),w
 15233  0244  00D9               	movwf	(logf@u+3)^(0+256)
 15234  0245  0860               	movf	(logf@ix+2)^(0+256),w
 15235  0246  00D8               	movwf	(logf@u+2)^(0+256)
 15236  0247  085F               	movf	(logf@ix+1)^(0+256),w
 15237  0248  00D7               	movwf	(logf@u+1)^(0+256)
 15238  0249  085E               	movf	logf@ix^(0+256),w
 15239  024A  00D6               	movwf	logf@u^(0+256)
 15240  024B  0859               	movf	(logf@u+3)^(0+256),w
 15241  024C  0021               	movlb	1	; select bank1
 15242  024D  00AB               	movwf	(logf@x+3)^(0+128)
 15243  024E  0022               	movlb	2	; select bank2
 15244  024F  0858               	movf	(logf@u+2)^(0+256),w
 15245  0250  0021               	movlb	1	; select bank1
 15246  0251  00AA               	movwf	(logf@x+2)^(0+128)
 15247  0252  0022               	movlb	2	; select bank2
 15248  0253  0857               	movf	(logf@u+1)^(0+256),w
 15249  0254  0021               	movlb	1	; select bank1
 15250  0255  00A9               	movwf	(logf@x+1)^(0+128)
 15251  0256  0022               	movlb	2	; select bank2
 15252  0257  0856               	movf	logf@u^(0+256),w
 15253  0258  0021               	movlb	1	; select bank1
 15254  0259  00A8               	movwf	logf@x^(0+128)
 15255  025A  30BF               	movlw	191
 15256  025B  0020               	movlb	0	; select bank0
 15257  025C  00DD               	movwf	___fladd@b+3
 15258  025D  3080               	movlw	128
 15259  025E  00DC               	movwf	___fladd@b+2
 15260  025F  3000               	movlw	0
 15261  0260  00DB               	movwf	___fladd@b+1
 15262  0261  3000               	movlw	0
 15263  0262  00DA               	movwf	___fladd@b
 15264  0263  0021               	movlb	1	; select bank1
 15265  0264  082B               	movf	(logf@x+3)^(0+128),w
 15266  0265  0020               	movlb	0	; select bank0
 15267  0266  00E1               	movwf	___fladd@a+3
 15268  0267  0021               	movlb	1	; select bank1
 15269  0268  082A               	movf	(logf@x+2)^(0+128),w
 15270  0269  0020               	movlb	0	; select bank0
 15271  026A  00E0               	movwf	___fladd@a+2
 15272  026B  0021               	movlb	1	; select bank1
 15273  026C  0829               	movf	(logf@x+1)^(0+128),w
 15274  026D  0020               	movlb	0	; select bank0
 15275  026E  00DF               	movwf	___fladd@a+1
 15276  026F  0021               	movlb	1	; select bank1
 15277  0270  0828               	movf	logf@x^(0+128),w
 15278  0271  0020               	movlb	0	; select bank0
 15279  0272  00DE               	movwf	___fladd@a
 15280  0273  3185  25FE  3180   	fcall	___fladd
 15281  0276  0020               	movlb	0	; select bank0
 15282  0277  085D               	movf	?___fladd+3,w
 15283  0278  0022               	movlb	2	; select bank2
 15284  0279  00DD               	movwf	(logf@f+3)^(0+256)
 15285  027A  0020               	movlb	0	; select bank0
 15286  027B  085C               	movf	?___fladd+2,w
 15287  027C  0022               	movlb	2	; select bank2
 15288  027D  00DC               	movwf	(logf@f+2)^(0+256)
 15289  027E  0020               	movlb	0	; select bank0
 15290  027F  085B               	movf	?___fladd+1,w
 15291  0280  0022               	movlb	2	; select bank2
 15292  0281  00DB               	movwf	(logf@f+1)^(0+256)
 15293  0282  0020               	movlb	0	; select bank0
 15294  0283  085A               	movf	?___fladd,w
 15295  0284  0022               	movlb	2	; select bank2
 15296  0285  00DA               	movwf	logf@f^(0+256)
 15297  0286  3040               	movlw	64
 15298  0287  0020               	movlb	0	; select bank0
 15299  0288  00DD               	movwf	___fladd@b+3
 15300  0289  3000               	movlw	0
 15301  028A  00DC               	movwf	___fladd@b+2
 15302  028B  3000               	movlw	0
 15303  028C  00DB               	movwf	___fladd@b+1
 15304  028D  3000               	movlw	0
 15305  028E  00DA               	movwf	___fladd@b
 15306  028F  0022               	movlb	2	; select bank2
 15307  0290  085D               	movf	(logf@f+3)^(0+256),w
 15308  0291  0020               	movlb	0	; select bank0
 15309  0292  00E1               	movwf	___fladd@a+3
 15310  0293  0022               	movlb	2	; select bank2
 15311  0294  085C               	movf	(logf@f+2)^(0+256),w
 15312  0295  0020               	movlb	0	; select bank0
 15313  0296  00E0               	movwf	___fladd@a+2
 15314  0297  0022               	movlb	2	; select bank2
 15315  0298  085B               	movf	(logf@f+1)^(0+256),w
 15316  0299  0020               	movlb	0	; select bank0
 15317  029A  00DF               	movwf	___fladd@a+1
 15318  029B  0022               	movlb	2	; select bank2
 15319  029C  085A               	movf	logf@f^(0+256),w
 15320  029D  0020               	movlb	0	; select bank0
 15321  029E  00DE               	movwf	___fladd@a
 15322  029F  3185  25FE  3180   	fcall	___fladd
 15323  02A2  0020               	movlb	0	; select bank0
 15324  02A3  085D               	movf	?___fladd+3,w
 15325  02A4  00C3               	movwf	___fldiv@a+3
 15326  02A5  085C               	movf	?___fladd+2,w
 15327  02A6  00C2               	movwf	___fldiv@a+2
 15328  02A7  085B               	movf	?___fladd+1,w
 15329  02A8  00C1               	movwf	___fldiv@a+1
 15330  02A9  085A               	movf	?___fladd,w
 15331  02AA  00C0               	movwf	___fldiv@a
 15332  02AB  0022               	movlb	2	; select bank2
 15333  02AC  085D               	movf	(logf@f+3)^(0+256),w
 15334  02AD  0020               	movlb	0	; select bank0
 15335  02AE  00C7               	movwf	___fldiv@b+3
 15336  02AF  0022               	movlb	2	; select bank2
 15337  02B0  085C               	movf	(logf@f+2)^(0+256),w
 15338  02B1  0020               	movlb	0	; select bank0
 15339  02B2  00C6               	movwf	___fldiv@b+2
 15340  02B3  0022               	movlb	2	; select bank2
 15341  02B4  085B               	movf	(logf@f+1)^(0+256),w
 15342  02B5  0020               	movlb	0	; select bank0
 15343  02B6  00C5               	movwf	___fldiv@b+1
 15344  02B7  0022               	movlb	2	; select bank2
 15345  02B8  085A               	movf	logf@f^(0+256),w
 15346  02B9  0020               	movlb	0	; select bank0
 15347  02BA  00C4               	movwf	___fldiv@b
 15348  02BB  319C  24E2  3180   	fcall	___fldiv
 15349  02BE  0020               	movlb	0	; select bank0
 15350  02BF  0843               	movf	?___fldiv+3,w
 15351  02C0  0022               	movlb	2	; select bank2
 15352  02C1  00C9               	movwf	(logf@s+3)^(0+256)
 15353  02C2  0020               	movlb	0	; select bank0
 15354  02C3  0842               	movf	?___fldiv+2,w
 15355  02C4  0022               	movlb	2	; select bank2
 15356  02C5  00C8               	movwf	(logf@s+2)^(0+256)
 15357  02C6  0020               	movlb	0	; select bank0
 15358  02C7  0841               	movf	?___fldiv+1,w
 15359  02C8  0022               	movlb	2	; select bank2
 15360  02C9  00C7               	movwf	(logf@s+1)^(0+256)
 15361  02CA  0020               	movlb	0	; select bank0
 15362  02CB  0840               	movf	?___fldiv,w
 15363  02CC  0022               	movlb	2	; select bank2
 15364  02CD  00C6               	movwf	logf@s^(0+256)
 15365  02CE  0849               	movf	(logf@s+3)^(0+256),w
 15366  02CF  0020               	movlb	0	; select bank0
 15367  02D0  00A9               	movwf	___flmul@b+3
 15368  02D1  0022               	movlb	2	; select bank2
 15369  02D2  0848               	movf	(logf@s+2)^(0+256),w
 15370  02D3  0020               	movlb	0	; select bank0
 15371  02D4  00A8               	movwf	___flmul@b+2
 15372  02D5  0022               	movlb	2	; select bank2
 15373  02D6  0847               	movf	(logf@s+1)^(0+256),w
 15374  02D7  0020               	movlb	0	; select bank0
 15375  02D8  00A7               	movwf	___flmul@b+1
 15376  02D9  0022               	movlb	2	; select bank2
 15377  02DA  0846               	movf	logf@s^(0+256),w
 15378  02DB  0020               	movlb	0	; select bank0
 15379  02DC  00A6               	movwf	___flmul@b
 15380  02DD  0022               	movlb	2	; select bank2
 15381  02DE  0849               	movf	(logf@s+3)^(0+256),w
 15382  02DF  0020               	movlb	0	; select bank0
 15383  02E0  00AD               	movwf	___flmul@a+3
 15384  02E1  0022               	movlb	2	; select bank2
 15385  02E2  0848               	movf	(logf@s+2)^(0+256),w
 15386  02E3  0020               	movlb	0	; select bank0
 15387  02E4  00AC               	movwf	___flmul@a+2
 15388  02E5  0022               	movlb	2	; select bank2
 15389  02E6  0847               	movf	(logf@s+1)^(0+256),w
 15390  02E7  0020               	movlb	0	; select bank0
 15391  02E8  00AB               	movwf	___flmul@a+1
 15392  02E9  0022               	movlb	2	; select bank2
 15393  02EA  0846               	movf	logf@s^(0+256),w
 15394  02EB  0020               	movlb	0	; select bank0
 15395  02EC  00AA               	movwf	___flmul@a
 15396  02ED  3190  2022  3180   	fcall	___flmul
 15397  02F0  0020               	movlb	0	; select bank0
 15398  02F1  0829               	movf	?___flmul+3,w
 15399  02F2  0022               	movlb	2	; select bank2
 15400  02F3  00CD               	movwf	(logf@z+3)^(0+256)
 15401  02F4  0020               	movlb	0	; select bank0
 15402  02F5  0828               	movf	?___flmul+2,w
 15403  02F6  0022               	movlb	2	; select bank2
 15404  02F7  00CC               	movwf	(logf@z+2)^(0+256)
 15405  02F8  0020               	movlb	0	; select bank0
 15406  02F9  0827               	movf	?___flmul+1,w
 15407  02FA  0022               	movlb	2	; select bank2
 15408  02FB  00CB               	movwf	(logf@z+1)^(0+256)
 15409  02FC  0020               	movlb	0	; select bank0
 15410  02FD  0826               	movf	?___flmul,w
 15411  02FE  0022               	movlb	2	; select bank2
 15412  02FF  00CA               	movwf	logf@z^(0+256)
 15413  0300  084D               	movf	(logf@z+3)^(0+256),w
 15414  0301  0020               	movlb	0	; select bank0
 15415  0302  00A9               	movwf	___flmul@b+3
 15416  0303  0022               	movlb	2	; select bank2
 15417  0304  084C               	movf	(logf@z+2)^(0+256),w
 15418  0305  0020               	movlb	0	; select bank0
 15419  0306  00A8               	movwf	___flmul@b+2
 15420  0307  0022               	movlb	2	; select bank2
 15421  0308  084B               	movf	(logf@z+1)^(0+256),w
 15422  0309  0020               	movlb	0	; select bank0
 15423  030A  00A7               	movwf	___flmul@b+1
 15424  030B  0022               	movlb	2	; select bank2
 15425  030C  084A               	movf	logf@z^(0+256),w
 15426  030D  0020               	movlb	0	; select bank0
 15427  030E  00A6               	movwf	___flmul@b
 15428  030F  0022               	movlb	2	; select bank2
 15429  0310  084D               	movf	(logf@z+3)^(0+256),w
 15430  0311  0020               	movlb	0	; select bank0
 15431  0312  00AD               	movwf	___flmul@a+3
 15432  0313  0022               	movlb	2	; select bank2
 15433  0314  084C               	movf	(logf@z+2)^(0+256),w
 15434  0315  0020               	movlb	0	; select bank0
 15435  0316  00AC               	movwf	___flmul@a+2
 15436  0317  0022               	movlb	2	; select bank2
 15437  0318  084B               	movf	(logf@z+1)^(0+256),w
 15438  0319  0020               	movlb	0	; select bank0
 15439  031A  00AB               	movwf	___flmul@a+1
 15440  031B  0022               	movlb	2	; select bank2
 15441  031C  084A               	movf	logf@z^(0+256),w
 15442  031D  0020               	movlb	0	; select bank0
 15443  031E  00AA               	movwf	___flmul@a
 15444  031F  3190  2022  3180   	fcall	___flmul
 15445  0322  0020               	movlb	0	; select bank0
 15446  0323  0829               	movf	?___flmul+3,w
 15447  0324  0022               	movlb	2	; select bank2
 15448  0325  00D1               	movwf	(logf@w+3)^(0+256)
 15449  0326  0020               	movlb	0	; select bank0
 15450  0327  0828               	movf	?___flmul+2,w
 15451  0328  0022               	movlb	2	; select bank2
 15452  0329  00D0               	movwf	(logf@w+2)^(0+256)
 15453  032A  0020               	movlb	0	; select bank0
 15454  032B  0827               	movf	?___flmul+1,w
 15455  032C  0022               	movlb	2	; select bank2
 15456  032D  00CF               	movwf	(logf@w+1)^(0+256)
 15457  032E  0020               	movlb	0	; select bank0
 15458  032F  0826               	movf	?___flmul,w
 15459  0330  0022               	movlb	2	; select bank2
 15460  0331  00CE               	movwf	logf@w^(0+256)
 15461  0332  303E               	movlw	62
 15462  0333  0020               	movlb	0	; select bank0
 15463  0334  00DD               	movwf	___fladd@b+3
 15464  0335  30CC               	movlw	204
 15465  0336  00DC               	movwf	___fladd@b+2
 15466  0337  30CE               	movlw	206
 15467  0338  00DB               	movwf	___fladd@b+1
 15468  0339  3013               	movlw	19
 15469  033A  00DA               	movwf	___fladd@b
 15470  033B  303E               	movlw	62
 15471  033C  00A9               	movwf	___flmul@b+3
 15472  033D  3078               	movlw	120
 15473  033E  00A8               	movwf	___flmul@b+2
 15474  033F  309E               	movlw	158
 15475  0340  00A7               	movwf	___flmul@b+1
 15476  0341  3026               	movlw	38
 15477  0342  00A6               	movwf	___flmul@b
 15478  0343  0022               	movlb	2	; select bank2
 15479  0344  0851               	movf	(logf@w+3)^(0+256),w
 15480  0345  0020               	movlb	0	; select bank0
 15481  0346  00AD               	movwf	___flmul@a+3
 15482  0347  0022               	movlb	2	; select bank2
 15483  0348  0850               	movf	(logf@w+2)^(0+256),w
 15484  0349  0020               	movlb	0	; select bank0
 15485  034A  00AC               	movwf	___flmul@a+2
 15486  034B  0022               	movlb	2	; select bank2
 15487  034C  084F               	movf	(logf@w+1)^(0+256),w
 15488  034D  0020               	movlb	0	; select bank0
 15489  034E  00AB               	movwf	___flmul@a+1
 15490  034F  0022               	movlb	2	; select bank2
 15491  0350  084E               	movf	logf@w^(0+256),w
 15492  0351  0020               	movlb	0	; select bank0
 15493  0352  00AA               	movwf	___flmul@a
 15494  0353  3190  2022  3180   	fcall	___flmul
 15495  0356  0020               	movlb	0	; select bank0
 15496  0357  0829               	movf	?___flmul+3,w
 15497  0358  00E1               	movwf	___fladd@a+3
 15498  0359  0828               	movf	?___flmul+2,w
 15499  035A  00E0               	movwf	___fladd@a+2
 15500  035B  0827               	movf	?___flmul+1,w
 15501  035C  00DF               	movwf	___fladd@a+1
 15502  035D  0826               	movf	?___flmul,w
 15503  035E  00DE               	movwf	___fladd@a
 15504  035F  3185  25FE  3180   	fcall	___fladd
 15505  0362  0020               	movlb	0	; select bank0
 15506  0363  085D               	movf	?___fladd+3,w
 15507  0364  0022               	movlb	2	; select bank2
 15508  0365  00D5               	movwf	(_logf$2158+3)^(0+256)
 15509  0366  0020               	movlb	0	; select bank0
 15510  0367  085C               	movf	?___fladd+2,w
 15511  0368  0022               	movlb	2	; select bank2
 15512  0369  00D4               	movwf	(_logf$2158+2)^(0+256)
 15513  036A  0020               	movlb	0	; select bank0
 15514  036B  085B               	movf	?___fladd+1,w
 15515  036C  0022               	movlb	2	; select bank2
 15516  036D  00D3               	movwf	(_logf$2158+1)^(0+256)
 15517  036E  0020               	movlb	0	; select bank0
 15518  036F  085A               	movf	?___fladd,w
 15519  0370  0022               	movlb	2	; select bank2
 15520  0371  00D2               	movwf	_logf$2158^(0+256)
 15521  0372  0851               	movf	(logf@w+3)^(0+256),w
 15522  0373  0020               	movlb	0	; select bank0
 15523  0374  00A9               	movwf	___flmul@b+3
 15524  0375  0022               	movlb	2	; select bank2
 15525  0376  0850               	movf	(logf@w+2)^(0+256),w
 15526  0377  0020               	movlb	0	; select bank0
 15527  0378  00A8               	movwf	___flmul@b+2
 15528  0379  0022               	movlb	2	; select bank2
 15529  037A  084F               	movf	(logf@w+1)^(0+256),w
 15530  037B  0020               	movlb	0	; select bank0
 15531  037C  00A7               	movwf	___flmul@b+1
 15532  037D  0022               	movlb	2	; select bank2
 15533  037E  084E               	movf	logf@w^(0+256),w
 15534  037F  0020               	movlb	0	; select bank0
 15535  0380  00A6               	movwf	___flmul@b
 15536  0381  0022               	movlb	2	; select bank2
 15537  0382  0855               	movf	(_logf$2158+3)^(0+256),w
 15538  0383  0020               	movlb	0	; select bank0
 15539  0384  00AD               	movwf	___flmul@a+3
 15540  0385  0022               	movlb	2	; select bank2
 15541  0386  0854               	movf	(_logf$2158+2)^(0+256),w
 15542  0387  0020               	movlb	0	; select bank0
 15543  0388  00AC               	movwf	___flmul@a+2
 15544  0389  0022               	movlb	2	; select bank2
 15545  038A  0853               	movf	(_logf$2158+1)^(0+256),w
 15546  038B  0020               	movlb	0	; select bank0
 15547  038C  00AB               	movwf	___flmul@a+1
 15548  038D  0022               	movlb	2	; select bank2
 15549  038E  0852               	movf	_logf$2158^(0+256),w
 15550  038F  0020               	movlb	0	; select bank0
 15551  0390  00AA               	movwf	___flmul@a
 15552  0391  3190  2022  3180   	fcall	___flmul
 15553  0394  0020               	movlb	0	; select bank0
 15554  0395  0829               	movf	?___flmul+3,w
 15555  0396  0022               	movlb	2	; select bank2
 15556  0397  00A7               	movwf	(logf@t1+3)^(0+256)
 15557  0398  0020               	movlb	0	; select bank0
 15558  0399  0828               	movf	?___flmul+2,w
 15559  039A  0022               	movlb	2	; select bank2
 15560  039B  00A6               	movwf	(logf@t1+2)^(0+256)
 15561  039C  0020               	movlb	0	; select bank0
 15562  039D  0827               	movf	?___flmul+1,w
 15563  039E  0022               	movlb	2	; select bank2
 15564  039F  00A5               	movwf	(logf@t1+1)^(0+256)
 15565  03A0  0020               	movlb	0	; select bank0
 15566  03A1  0826               	movf	?___flmul,w
 15567  03A2  0022               	movlb	2	; select bank2
 15568  03A3  00A4               	movwf	logf@t1^(0+256)
 15569  03A4  303F               	movlw	63
 15570  03A5  0020               	movlb	0	; select bank0
 15571  03A6  00DD               	movwf	___fladd@b+3
 15572  03A7  302A               	movlw	42
 15573  03A8  00DC               	movwf	___fladd@b+2
 15574  03A9  30AA               	movlw	170
 15575  03AA  00DB               	movwf	___fladd@b+1
 15576  03AB  30AA               	movlw	170
 15577  03AC  00DA               	movwf	___fladd@b
 15578  03AD  303E               	movlw	62
 15579  03AE  00A9               	movwf	___flmul@b+3
 15580  03AF  3091               	movlw	145
 15581  03B0  00A8               	movwf	___flmul@b+2
 15582  03B1  30E9               	movlw	233
 15583  03B2  00A7               	movwf	___flmul@b+1
 15584  03B3  30EE               	movlw	238
 15585  03B4  00A6               	movwf	___flmul@b
 15586  03B5  0022               	movlb	2	; select bank2
 15587  03B6  0851               	movf	(logf@w+3)^(0+256),w
 15588  03B7  0020               	movlb	0	; select bank0
 15589  03B8  00AD               	movwf	___flmul@a+3
 15590  03B9  0022               	movlb	2	; select bank2
 15591  03BA  0850               	movf	(logf@w+2)^(0+256),w
 15592  03BB  0020               	movlb	0	; select bank0
 15593  03BC  00AC               	movwf	___flmul@a+2
 15594  03BD  0022               	movlb	2	; select bank2
 15595  03BE  084F               	movf	(logf@w+1)^(0+256),w
 15596  03BF  0020               	movlb	0	; select bank0
 15597  03C0  00AB               	movwf	___flmul@a+1
 15598  03C1  0022               	movlb	2	; select bank2
 15599  03C2  084E               	movf	logf@w^(0+256),w
 15600  03C3  0020               	movlb	0	; select bank0
 15601  03C4  00AA               	movwf	___flmul@a
 15602  03C5  3190  2022  3180   	fcall	___flmul
 15603  03C8  0020               	movlb	0	; select bank0
 15604  03C9  0829               	movf	?___flmul+3,w
 15605  03CA  00E1               	movwf	___fladd@a+3
 15606  03CB  0828               	movf	?___flmul+2,w
 15607  03CC  00E0               	movwf	___fladd@a+2
 15608  03CD  0827               	movf	?___flmul+1,w
 15609  03CE  00DF               	movwf	___fladd@a+1
 15610  03CF  0826               	movf	?___flmul,w
 15611  03D0  00DE               	movwf	___fladd@a
 15612  03D1  3185  25FE  3180   	fcall	___fladd
 15613  03D4  0020               	movlb	0	; select bank0
 15614  03D5  085D               	movf	?___fladd+3,w
 15615  03D6  0022               	movlb	2	; select bank2
 15616  03D7  00D5               	movwf	(_logf$2158+3)^(0+256)
 15617  03D8  0020               	movlb	0	; select bank0
 15618  03D9  085C               	movf	?___fladd+2,w
 15619  03DA  0022               	movlb	2	; select bank2
 15620  03DB  00D4               	movwf	(_logf$2158+2)^(0+256)
 15621  03DC  0020               	movlb	0	; select bank0
 15622  03DD  085B               	movf	?___fladd+1,w
 15623  03DE  0022               	movlb	2	; select bank2
 15624  03DF  00D3               	movwf	(_logf$2158+1)^(0+256)
 15625  03E0  0020               	movlb	0	; select bank0
 15626  03E1  085A               	movf	?___fladd,w
 15627  03E2  0022               	movlb	2	; select bank2
 15628  03E3  00D2               	movwf	_logf$2158^(0+256)
 15629  03E4  084D               	movf	(logf@z+3)^(0+256),w
 15630  03E5  0020               	movlb	0	; select bank0
 15631  03E6  00A9               	movwf	___flmul@b+3
 15632  03E7  0022               	movlb	2	; select bank2
 15633  03E8  084C               	movf	(logf@z+2)^(0+256),w
 15634  03E9  0020               	movlb	0	; select bank0
 15635  03EA  00A8               	movwf	___flmul@b+2
 15636  03EB  0022               	movlb	2	; select bank2
 15637  03EC  084B               	movf	(logf@z+1)^(0+256),w
 15638  03ED  0020               	movlb	0	; select bank0
 15639  03EE  00A7               	movwf	___flmul@b+1
 15640  03EF  0022               	movlb	2	; select bank2
 15641  03F0  084A               	movf	logf@z^(0+256),w
 15642  03F1  0020               	movlb	0	; select bank0
 15643  03F2  00A6               	movwf	___flmul@b
 15644  03F3  0022               	movlb	2	; select bank2
 15645  03F4  0855               	movf	(_logf$2158+3)^(0+256),w
 15646  03F5  0020               	movlb	0	; select bank0
 15647  03F6  00AD               	movwf	___flmul@a+3
 15648  03F7  0022               	movlb	2	; select bank2
 15649  03F8  0854               	movf	(_logf$2158+2)^(0+256),w
 15650  03F9  0020               	movlb	0	; select bank0
 15651  03FA  00AC               	movwf	___flmul@a+2
 15652  03FB  0022               	movlb	2	; select bank2
 15653  03FC  0853               	movf	(_logf$2158+1)^(0+256),w
 15654  03FD  0020               	movlb	0	; select bank0
 15655  03FE  00AB               	movwf	___flmul@a+1
 15656  03FF  0022               	movlb	2	; select bank2
 15657  0400  0852               	movf	_logf$2158^(0+256),w
 15658  0401  0020               	movlb	0	; select bank0
 15659  0402  00AA               	movwf	___flmul@a
 15660  0403  3190  2022  3180   	fcall	___flmul
 15661  0406  0020               	movlb	0	; select bank0
 15662  0407  0829               	movf	?___flmul+3,w
 15663  0408  0022               	movlb	2	; select bank2
 15664  0409  00AB               	movwf	(logf@t2+3)^(0+256)
 15665  040A  0020               	movlb	0	; select bank0
 15666  040B  0828               	movf	?___flmul+2,w
 15667  040C  0022               	movlb	2	; select bank2
 15668  040D  00AA               	movwf	(logf@t2+2)^(0+256)
 15669  040E  0020               	movlb	0	; select bank0
 15670  040F  0827               	movf	?___flmul+1,w
 15671  0410  0022               	movlb	2	; select bank2
 15672  0411  00A9               	movwf	(logf@t2+1)^(0+256)
 15673  0412  0020               	movlb	0	; select bank0
 15674  0413  0826               	movf	?___flmul,w
 15675  0414  0022               	movlb	2	; select bank2
 15676  0415  00A8               	movwf	logf@t2^(0+256)
 15677  0416  0827               	movf	(logf@t1+3)^(0+256),w
 15678  0417  0020               	movlb	0	; select bank0
 15679  0418  00DD               	movwf	___fladd@b+3
 15680  0419  0022               	movlb	2	; select bank2
 15681  041A  0826               	movf	(logf@t1+2)^(0+256),w
 15682  041B  0020               	movlb	0	; select bank0
 15683  041C  00DC               	movwf	___fladd@b+2
 15684  041D  0022               	movlb	2	; select bank2
 15685  041E  0825               	movf	(logf@t1+1)^(0+256),w
 15686  041F  0020               	movlb	0	; select bank0
 15687  0420  00DB               	movwf	___fladd@b+1
 15688  0421  0022               	movlb	2	; select bank2
 15689  0422  0824               	movf	logf@t1^(0+256),w
 15690  0423  0020               	movlb	0	; select bank0
 15691  0424  00DA               	movwf	___fladd@b
 15692  0425  0022               	movlb	2	; select bank2
 15693  0426  082B               	movf	(logf@t2+3)^(0+256),w
 15694  0427  0020               	movlb	0	; select bank0
 15695  0428  00E1               	movwf	___fladd@a+3
 15696  0429  0022               	movlb	2	; select bank2
 15697  042A  082A               	movf	(logf@t2+2)^(0+256),w
 15698  042B  0020               	movlb	0	; select bank0
 15699  042C  00E0               	movwf	___fladd@a+2
 15700  042D  0022               	movlb	2	; select bank2
 15701  042E  0829               	movf	(logf@t2+1)^(0+256),w
 15702  042F  0020               	movlb	0	; select bank0
 15703  0430  00DF               	movwf	___fladd@a+1
 15704  0431  0022               	movlb	2	; select bank2
 15705  0432  0828               	movf	logf@t2^(0+256),w
 15706  0433  0020               	movlb	0	; select bank0
 15707  0434  00DE               	movwf	___fladd@a
 15708  0435  3185  25FE  3180   	fcall	___fladd
 15709  0438  0020               	movlb	0	; select bank0
 15710  0439  085D               	movf	?___fladd+3,w
 15711  043A  0022               	movlb	2	; select bank2
 15712  043B  00A3               	movwf	(logf@R+3)^(0+256)
 15713  043C  0020               	movlb	0	; select bank0
 15714  043D  085C               	movf	?___fladd+2,w
 15715  043E  0022               	movlb	2	; select bank2
 15716  043F  00A2               	movwf	(logf@R+2)^(0+256)
 15717  0440  0020               	movlb	0	; select bank0
 15718  0441  085B               	movf	?___fladd+1,w
 15719  0442  0022               	movlb	2	; select bank2
 15720  0443  00A1               	movwf	(logf@R+1)^(0+256)
 15721  0444  0020               	movlb	0	; select bank0
 15722  0445  085A               	movf	?___fladd,w
 15723  0446  0022               	movlb	2	; select bank2
 15724  0447  00A0               	movwf	logf@R^(0+256)
 15725  0448  303F               	movlw	63
 15726  0449  0020               	movlb	0	; select bank0
 15727  044A  00A9               	movwf	___flmul@b+3
 15728  044B  3000               	movlw	0
 15729  044C  00A8               	movwf	___flmul@b+2
 15730  044D  3000               	movlw	0
 15731  044E  00A7               	movwf	___flmul@b+1
 15732  044F  3000               	movlw	0
 15733  0450  00A6               	movwf	___flmul@b
 15734  0451  0022               	movlb	2	; select bank2
 15735  0452  085D               	movf	(logf@f+3)^(0+256),w
 15736  0453  0020               	movlb	0	; select bank0
 15737  0454  00AD               	movwf	___flmul@a+3
 15738  0455  0022               	movlb	2	; select bank2
 15739  0456  085C               	movf	(logf@f+2)^(0+256),w
 15740  0457  0020               	movlb	0	; select bank0
 15741  0458  00AC               	movwf	___flmul@a+2
 15742  0459  0022               	movlb	2	; select bank2
 15743  045A  085B               	movf	(logf@f+1)^(0+256),w
 15744  045B  0020               	movlb	0	; select bank0
 15745  045C  00AB               	movwf	___flmul@a+1
 15746  045D  0022               	movlb	2	; select bank2
 15747  045E  085A               	movf	logf@f^(0+256),w
 15748  045F  0020               	movlb	0	; select bank0
 15749  0460  00AA               	movwf	___flmul@a
 15750  0461  3190  2022  3180   	fcall	___flmul
 15751  0464  0020               	movlb	0	; select bank0
 15752  0465  0829               	movf	?___flmul+3,w
 15753  0466  0022               	movlb	2	; select bank2
 15754  0467  00D5               	movwf	(_logf$2158+3)^(0+256)
 15755  0468  0020               	movlb	0	; select bank0
 15756  0469  0828               	movf	?___flmul+2,w
 15757  046A  0022               	movlb	2	; select bank2
 15758  046B  00D4               	movwf	(_logf$2158+2)^(0+256)
 15759  046C  0020               	movlb	0	; select bank0
 15760  046D  0827               	movf	?___flmul+1,w
 15761  046E  0022               	movlb	2	; select bank2
 15762  046F  00D3               	movwf	(_logf$2158+1)^(0+256)
 15763  0470  0020               	movlb	0	; select bank0
 15764  0471  0826               	movf	?___flmul,w
 15765  0472  0022               	movlb	2	; select bank2
 15766  0473  00D2               	movwf	_logf$2158^(0+256)
 15767  0474  085D               	movf	(logf@f+3)^(0+256),w
 15768  0475  0020               	movlb	0	; select bank0
 15769  0476  00A9               	movwf	___flmul@b+3
 15770  0477  0022               	movlb	2	; select bank2
 15771  0478  085C               	movf	(logf@f+2)^(0+256),w
 15772  0479  0020               	movlb	0	; select bank0
 15773  047A  00A8               	movwf	___flmul@b+2
 15774  047B  0022               	movlb	2	; select bank2
 15775  047C  085B               	movf	(logf@f+1)^(0+256),w
 15776  047D  0020               	movlb	0	; select bank0
 15777  047E  00A7               	movwf	___flmul@b+1
 15778  047F  0022               	movlb	2	; select bank2
 15779  0480  085A               	movf	logf@f^(0+256),w
 15780  0481  0020               	movlb	0	; select bank0
 15781  0482  00A6               	movwf	___flmul@b
 15782  0483  0022               	movlb	2	; select bank2
 15783  0484  0855               	movf	(_logf$2158+3)^(0+256),w
 15784  0485  0020               	movlb	0	; select bank0
 15785  0486  00AD               	movwf	___flmul@a+3
 15786  0487  0022               	movlb	2	; select bank2
 15787  0488  0854               	movf	(_logf$2158+2)^(0+256),w
 15788  0489  0020               	movlb	0	; select bank0
 15789  048A  00AC               	movwf	___flmul@a+2
 15790  048B  0022               	movlb	2	; select bank2
 15791  048C  0853               	movf	(_logf$2158+1)^(0+256),w
 15792  048D  0020               	movlb	0	; select bank0
 15793  048E  00AB               	movwf	___flmul@a+1
 15794  048F  0022               	movlb	2	; select bank2
 15795  0490  0852               	movf	_logf$2158^(0+256),w
 15796  0491  0020               	movlb	0	; select bank0
 15797  0492  00AA               	movwf	___flmul@a
 15798  0493  3190  2022  3180   	fcall	___flmul
 15799  0496  0020               	movlb	0	; select bank0
 15800  0497  0829               	movf	?___flmul+3,w
 15801  0498  0022               	movlb	2	; select bank2
 15802  0499  00C1               	movwf	(logf@hfsq+3)^(0+256)
 15803  049A  0020               	movlb	0	; select bank0
 15804  049B  0828               	movf	?___flmul+2,w
 15805  049C  0022               	movlb	2	; select bank2
 15806  049D  00C0               	movwf	(logf@hfsq+2)^(0+256)
 15807  049E  0020               	movlb	0	; select bank0
 15808  049F  0827               	movf	?___flmul+1,w
 15809  04A0  0022               	movlb	2	; select bank2
 15810  04A1  00BF               	movwf	(logf@hfsq+1)^(0+256)
 15811  04A2  0020               	movlb	0	; select bank0
 15812  04A3  0826               	movf	?___flmul,w
 15813  04A4  0022               	movlb	2	; select bank2
 15814  04A5  00BE               	movwf	logf@hfsq^(0+256)
 15815  04A6  083C               	movf	logf@k^(0+256),w
 15816  04A7  00F1               	movwf	___xxtofl@val
 15817  04A8  083D               	movf	(logf@k+1)^(0+256),w
 15818  04A9  00F2               	movwf	___xxtofl@val+1
 15819  04AA  0D89               	rlf	9,f
 15820  04AB  3B89               	subwfb	9,f
 15821  04AC  0989               	comf	9,f
 15822  04AD  00F3               	movwf	___xxtofl@val+2
 15823  04AE  00F4               	movwf	___xxtofl@val+3
 15824  04AF  3001               	movlw	1
 15825  04B0  31AB  23E3  3180   	fcall	___xxtofl
 15826  04B3  0874               	movf	?___xxtofl+3,w
 15827  04B4  0022               	movlb	2	; select bank2
 15828  04B5  00C5               	movwf	(logf@dk+3)^(0+256)
 15829  04B6  0873               	movf	?___xxtofl+2,w
 15830  04B7  00C4               	movwf	(logf@dk+2)^(0+256)
 15831  04B8  0872               	movf	?___xxtofl+1,w
 15832  04B9  00C3               	movwf	(logf@dk+1)^(0+256)
 15833  04BA  0871               	movf	?___xxtofl,w
 15834  04BB  00C2               	movwf	logf@dk^(0+256)
 15835  04BC  0849               	movf	(logf@s+3)^(0+256),w
 15836  04BD  0020               	movlb	0	; select bank0
 15837  04BE  00A9               	movwf	___flmul@b+3
 15838  04BF  0022               	movlb	2	; select bank2
 15839  04C0  0848               	movf	(logf@s+2)^(0+256),w
 15840  04C1  0020               	movlb	0	; select bank0
 15841  04C2  00A8               	movwf	___flmul@b+2
 15842  04C3  0022               	movlb	2	; select bank2
 15843  04C4  0847               	movf	(logf@s+1)^(0+256),w
 15844  04C5  0020               	movlb	0	; select bank0
 15845  04C6  00A7               	movwf	___flmul@b+1
 15846  04C7  0022               	movlb	2	; select bank2
 15847  04C8  0846               	movf	logf@s^(0+256),w
 15848  04C9  0020               	movlb	0	; select bank0
 15849  04CA  00A6               	movwf	___flmul@b
 15850  04CB  0022               	movlb	2	; select bank2
 15851  04CC  0823               	movf	(logf@R+3)^(0+256),w
 15852  04CD  0020               	movlb	0	; select bank0
 15853  04CE  00DD               	movwf	___fladd@b+3
 15854  04CF  0022               	movlb	2	; select bank2
 15855  04D0  0822               	movf	(logf@R+2)^(0+256),w
 15856  04D1  0020               	movlb	0	; select bank0
 15857  04D2  00DC               	movwf	___fladd@b+2
 15858  04D3  0022               	movlb	2	; select bank2
 15859  04D4  0821               	movf	(logf@R+1)^(0+256),w
 15860  04D5  0020               	movlb	0	; select bank0
 15861  04D6  00DB               	movwf	___fladd@b+1
 15862  04D7  0022               	movlb	2	; select bank2
 15863  04D8  0820               	movf	logf@R^(0+256),w
 15864  04D9  0020               	movlb	0	; select bank0
 15865  04DA  00DA               	movwf	___fladd@b
 15866  04DB  0022               	movlb	2	; select bank2
 15867  04DC  0841               	movf	(logf@hfsq+3)^(0+256),w
 15868  04DD  0020               	movlb	0	; select bank0
 15869  04DE  00E1               	movwf	___fladd@a+3
 15870  04DF  0022               	movlb	2	; select bank2
 15871  04E0  0840               	movf	(logf@hfsq+2)^(0+256),w
 15872  04E1  0020               	movlb	0	; select bank0
 15873  04E2  00E0               	movwf	___fladd@a+2
 15874  04E3  0022               	movlb	2	; select bank2
 15875  04E4  083F               	movf	(logf@hfsq+1)^(0+256),w
 15876  04E5  0020               	movlb	0	; select bank0
 15877  04E6  00DF               	movwf	___fladd@a+1
 15878  04E7  0022               	movlb	2	; select bank2
 15879  04E8  083E               	movf	logf@hfsq^(0+256),w
 15880  04E9  0020               	movlb	0	; select bank0
 15881  04EA  00DE               	movwf	___fladd@a
 15882  04EB  3185  25FE  3180   	fcall	___fladd
 15883  04EE  0020               	movlb	0	; select bank0
 15884  04EF  085D               	movf	?___fladd+3,w
 15885  04F0  00AD               	movwf	___flmul@a+3
 15886  04F1  085C               	movf	?___fladd+2,w
 15887  04F2  00AC               	movwf	___flmul@a+2
 15888  04F3  085B               	movf	?___fladd+1,w
 15889  04F4  00AB               	movwf	___flmul@a+1
 15890  04F5  085A               	movf	?___fladd,w
 15891  04F6  00AA               	movwf	___flmul@a
 15892  04F7  3190  2022  3180   	fcall	___flmul
 15893  04FA  0020               	movlb	0	; select bank0
 15894  04FB  0829               	movf	?___flmul+3,w
 15895  04FC  0022               	movlb	2	; select bank2
 15896  04FD  00AF               	movwf	(_logf$2159+3)^(0+256)
 15897  04FE  0020               	movlb	0	; select bank0
 15898  04FF  0828               	movf	?___flmul+2,w
 15899  0500  0022               	movlb	2	; select bank2
 15900  0501  00AE               	movwf	(_logf$2159+2)^(0+256)
 15901  0502  0020               	movlb	0	; select bank0
 15902  0503  0827               	movf	?___flmul+1,w
 15903  0504  0022               	movlb	2	; select bank2
 15904  0505  00AD               	movwf	(_logf$2159+1)^(0+256)
 15905  0506  0020               	movlb	0	; select bank0
 15906  0507  0826               	movf	?___flmul,w
 15907  0508  0022               	movlb	2	; select bank2
 15908  0509  00AC               	movwf	_logf$2159^(0+256)
 15909  050A  3037               	movlw	55
 15910  050B  0020               	movlb	0	; select bank0
 15911  050C  00A9               	movwf	___flmul@b+3
 15912  050D  3017               	movlw	23
 15913  050E  00A8               	movwf	___flmul@b+2
 15914  050F  30F7               	movlw	247
 15915  0510  00A7               	movwf	___flmul@b+1
 15916  0511  30D1               	movlw	209
 15917  0512  00A6               	movwf	___flmul@b
 15918  0513  0022               	movlb	2	; select bank2
 15919  0514  0845               	movf	(logf@dk+3)^(0+256),w
 15920  0515  0020               	movlb	0	; select bank0
 15921  0516  00AD               	movwf	___flmul@a+3
 15922  0517  0022               	movlb	2	; select bank2
 15923  0518  0844               	movf	(logf@dk+2)^(0+256),w
 15924  0519  0020               	movlb	0	; select bank0
 15925  051A  00AC               	movwf	___flmul@a+2
 15926  051B  0022               	movlb	2	; select bank2
 15927  051C  0843               	movf	(logf@dk+1)^(0+256),w
 15928  051D  0020               	movlb	0	; select bank0
 15929  051E  00AB               	movwf	___flmul@a+1
 15930  051F  0022               	movlb	2	; select bank2
 15931  0520  0842               	movf	logf@dk^(0+256),w
 15932  0521  0020               	movlb	0	; select bank0
 15933  0522  00AA               	movwf	___flmul@a
 15934  0523  3190  2022  3180   	fcall	___flmul
 15935  0526  0020               	movlb	0	; select bank0
 15936  0527  0829               	movf	?___flmul+3,w
 15937  0528  00DD               	movwf	___fladd@b+3
 15938  0529  0828               	movf	?___flmul+2,w
 15939  052A  00DC               	movwf	___fladd@b+2
 15940  052B  0827               	movf	?___flmul+1,w
 15941  052C  00DB               	movwf	___fladd@b+1
 15942  052D  0826               	movf	?___flmul,w
 15943  052E  00DA               	movwf	___fladd@b
 15944  052F  0022               	movlb	2	; select bank2
 15945  0530  082F               	movf	(_logf$2159+3)^(0+256),w
 15946  0531  0020               	movlb	0	; select bank0
 15947  0532  00E1               	movwf	___fladd@a+3
 15948  0533  0022               	movlb	2	; select bank2
 15949  0534  082E               	movf	(_logf$2159+2)^(0+256),w
 15950  0535  0020               	movlb	0	; select bank0
 15951  0536  00E0               	movwf	___fladd@a+2
 15952  0537  0022               	movlb	2	; select bank2
 15953  0538  082D               	movf	(_logf$2159+1)^(0+256),w
 15954  0539  0020               	movlb	0	; select bank0
 15955  053A  00DF               	movwf	___fladd@a+1
 15956  053B  0022               	movlb	2	; select bank2
 15957  053C  082C               	movf	_logf$2159^(0+256),w
 15958  053D  0020               	movlb	0	; select bank0
 15959  053E  00DE               	movwf	___fladd@a
 15960  053F  3185  25FE  3180   	fcall	___fladd
 15961  0542  0020               	movlb	0	; select bank0
 15962  0543  085D               	movf	?___fladd+3,w
 15963  0544  0022               	movlb	2	; select bank2
 15964  0545  00B3               	movwf	(_logf$2160+3)^(0+256)
 15965  0546  0020               	movlb	0	; select bank0
 15966  0547  085C               	movf	?___fladd+2,w
 15967  0548  0022               	movlb	2	; select bank2
 15968  0549  00B2               	movwf	(_logf$2160+2)^(0+256)
 15969  054A  0020               	movlb	0	; select bank0
 15970  054B  085B               	movf	?___fladd+1,w
 15971  054C  0022               	movlb	2	; select bank2
 15972  054D  00B1               	movwf	(_logf$2160+1)^(0+256)
 15973  054E  0020               	movlb	0	; select bank0
 15974  054F  085A               	movf	?___fladd,w
 15975  0550  0022               	movlb	2	; select bank2
 15976  0551  00B0               	movwf	_logf$2160^(0+256)
 15977  0552  0841               	movf	(logf@hfsq+3)^(0+256),w
 15978  0553  0021               	movlb	1	; select bank1
 15979  0554  00A3               	movwf	(___flsub@a+3)^(0+128)
 15980  0555  0022               	movlb	2	; select bank2
 15981  0556  0840               	movf	(logf@hfsq+2)^(0+256),w
 15982  0557  0021               	movlb	1	; select bank1
 15983  0558  00A2               	movwf	(___flsub@a+2)^(0+128)
 15984  0559  0022               	movlb	2	; select bank2
 15985  055A  083F               	movf	(logf@hfsq+1)^(0+256),w
 15986  055B  0021               	movlb	1	; select bank1
 15987  055C  00A1               	movwf	(___flsub@a+1)^(0+128)
 15988  055D  0022               	movlb	2	; select bank2
 15989  055E  083E               	movf	logf@hfsq^(0+256),w
 15990  055F  0021               	movlb	1	; select bank1
 15991  0560  00A0               	movwf	___flsub@a^(0+128)
 15992  0561  0022               	movlb	2	; select bank2
 15993  0562  0833               	movf	(_logf$2160+3)^(0+256),w
 15994  0563  0021               	movlb	1	; select bank1
 15995  0564  00A7               	movwf	(___flsub@b+3)^(0+128)
 15996  0565  0022               	movlb	2	; select bank2
 15997  0566  0832               	movf	(_logf$2160+2)^(0+256),w
 15998  0567  0021               	movlb	1	; select bank1
 15999  0568  00A6               	movwf	(___flsub@b+2)^(0+128)
 16000  0569  0022               	movlb	2	; select bank2
 16001  056A  0831               	movf	(_logf$2160+1)^(0+256),w
 16002  056B  0021               	movlb	1	; select bank1
 16003  056C  00A5               	movwf	(___flsub@b+1)^(0+128)
 16004  056D  0022               	movlb	2	; select bank2
 16005  056E  0830               	movf	_logf$2160^(0+256),w
 16006  056F  0021               	movlb	1	; select bank1
 16007  0570  00A4               	movwf	___flsub@b^(0+128)
 16008  0571  31B5  2552  3180   	fcall	___flsub
 16009  0574  0021               	movlb	1	; select bank1
 16010  0575  0823               	movf	(?___flsub+3)^(0+128),w
 16011  0576  0022               	movlb	2	; select bank2
 16012  0577  00B7               	movwf	(_logf$2161+3)^(0+256)
 16013  0578  0021               	movlb	1	; select bank1
 16014  0579  0822               	movf	(?___flsub+2)^(0+128),w
 16015  057A  0022               	movlb	2	; select bank2
 16016  057B  00B6               	movwf	(_logf$2161+2)^(0+256)
 16017  057C  0021               	movlb	1	; select bank1
 16018  057D  0821               	movf	(?___flsub+1)^(0+128),w
 16019  057E  0022               	movlb	2	; select bank2
 16020  057F  00B5               	movwf	(_logf$2161+1)^(0+256)
 16021  0580  0021               	movlb	1	; select bank1
 16022  0581  0820               	movf	?___flsub^(0+128),w
 16023  0582  0022               	movlb	2	; select bank2
 16024  0583  00B4               	movwf	_logf$2161^(0+256)
 16025  0584  085D               	movf	(logf@f+3)^(0+256),w
 16026  0585  0020               	movlb	0	; select bank0
 16027  0586  00DD               	movwf	___fladd@b+3
 16028  0587  0022               	movlb	2	; select bank2
 16029  0588  085C               	movf	(logf@f+2)^(0+256),w
 16030  0589  0020               	movlb	0	; select bank0
 16031  058A  00DC               	movwf	___fladd@b+2
 16032  058B  0022               	movlb	2	; select bank2
 16033  058C  085B               	movf	(logf@f+1)^(0+256),w
 16034  058D  0020               	movlb	0	; select bank0
 16035  058E  00DB               	movwf	___fladd@b+1
 16036  058F  0022               	movlb	2	; select bank2
 16037  0590  085A               	movf	logf@f^(0+256),w
 16038  0591  0020               	movlb	0	; select bank0
 16039  0592  00DA               	movwf	___fladd@b
 16040  0593  0022               	movlb	2	; select bank2
 16041  0594  0837               	movf	(_logf$2161+3)^(0+256),w
 16042  0595  0020               	movlb	0	; select bank0
 16043  0596  00E1               	movwf	___fladd@a+3
 16044  0597  0022               	movlb	2	; select bank2
 16045  0598  0836               	movf	(_logf$2161+2)^(0+256),w
 16046  0599  0020               	movlb	0	; select bank0
 16047  059A  00E0               	movwf	___fladd@a+2
 16048  059B  0022               	movlb	2	; select bank2
 16049  059C  0835               	movf	(_logf$2161+1)^(0+256),w
 16050  059D  0020               	movlb	0	; select bank0
 16051  059E  00DF               	movwf	___fladd@a+1
 16052  059F  0022               	movlb	2	; select bank2
 16053  05A0  0834               	movf	_logf$2161^(0+256),w
 16054  05A1  0020               	movlb	0	; select bank0
 16055  05A2  00DE               	movwf	___fladd@a
 16056  05A3  3185  25FE  3180   	fcall	___fladd
 16057  05A6  0020               	movlb	0	; select bank0
 16058  05A7  085D               	movf	?___fladd+3,w
 16059  05A8  0022               	movlb	2	; select bank2
 16060  05A9  00BB               	movwf	(_logf$2162+3)^(0+256)
 16061  05AA  0020               	movlb	0	; select bank0
 16062  05AB  085C               	movf	?___fladd+2,w
 16063  05AC  0022               	movlb	2	; select bank2
 16064  05AD  00BA               	movwf	(_logf$2162+2)^(0+256)
 16065  05AE  0020               	movlb	0	; select bank0
 16066  05AF  085B               	movf	?___fladd+1,w
 16067  05B0  0022               	movlb	2	; select bank2
 16068  05B1  00B9               	movwf	(_logf$2162+1)^(0+256)
 16069  05B2  0020               	movlb	0	; select bank0
 16070  05B3  085A               	movf	?___fladd,w
 16071  05B4  0022               	movlb	2	; select bank2
 16072  05B5  00B8               	movwf	_logf$2162^(0+256)
 16073  05B6  303F               	movlw	63
 16074  05B7  0020               	movlb	0	; select bank0
 16075  05B8  00A9               	movwf	___flmul@b+3
 16076  05B9  3031               	movlw	49
 16077  05BA  00A8               	movwf	___flmul@b+2
 16078  05BB  3071               	movlw	113
 16079  05BC  00A7               	movwf	___flmul@b+1
 16080  05BD  3080               	movlw	128
 16081  05BE  00A6               	movwf	___flmul@b
 16082  05BF  0022               	movlb	2	; select bank2
 16083  05C0  0845               	movf	(logf@dk+3)^(0+256),w
 16084  05C1  0020               	movlb	0	; select bank0
 16085  05C2  00AD               	movwf	___flmul@a+3
 16086  05C3  0022               	movlb	2	; select bank2
 16087  05C4  0844               	movf	(logf@dk+2)^(0+256),w
 16088  05C5  0020               	movlb	0	; select bank0
 16089  05C6  00AC               	movwf	___flmul@a+2
 16090  05C7  0022               	movlb	2	; select bank2
 16091  05C8  0843               	movf	(logf@dk+1)^(0+256),w
 16092  05C9  0020               	movlb	0	; select bank0
 16093  05CA  00AB               	movwf	___flmul@a+1
 16094  05CB  0022               	movlb	2	; select bank2
 16095  05CC  0842               	movf	logf@dk^(0+256),w
 16096  05CD  0020               	movlb	0	; select bank0
 16097  05CE  00AA               	movwf	___flmul@a
 16098  05CF  3190  2022  3180   	fcall	___flmul
 16099  05D2  0020               	movlb	0	; select bank0
 16100  05D3  0829               	movf	?___flmul+3,w
 16101  05D4  00DD               	movwf	___fladd@b+3
 16102  05D5  0828               	movf	?___flmul+2,w
 16103  05D6  00DC               	movwf	___fladd@b+2
 16104  05D7  0827               	movf	?___flmul+1,w
 16105  05D8  00DB               	movwf	___fladd@b+1
 16106  05D9  0826               	movf	?___flmul,w
 16107  05DA  00DA               	movwf	___fladd@b
 16108  05DB  0022               	movlb	2	; select bank2
 16109  05DC  083B               	movf	(_logf$2162+3)^(0+256),w
 16110  05DD  0020               	movlb	0	; select bank0
 16111  05DE  00E1               	movwf	___fladd@a+3
 16112  05DF  0022               	movlb	2	; select bank2
 16113  05E0  083A               	movf	(_logf$2162+2)^(0+256),w
 16114  05E1  0020               	movlb	0	; select bank0
 16115  05E2  00E0               	movwf	___fladd@a+2
 16116  05E3  0022               	movlb	2	; select bank2
 16117  05E4  0839               	movf	(_logf$2162+1)^(0+256),w
 16118  05E5  0020               	movlb	0	; select bank0
 16119  05E6  00DF               	movwf	___fladd@a+1
 16120  05E7  0022               	movlb	2	; select bank2
 16121  05E8  0838               	movf	_logf$2162^(0+256),w
 16122  05E9  0020               	movlb	0	; select bank0
 16123  05EA  00DE               	movwf	___fladd@a
 16124  05EB  3185  25FE         	fcall	___fladd
 16125  05ED  0020               	movlb	0	; select bank0
 16126  05EE  085D               	movf	?___fladd+3,w
 16127  05EF  0021               	movlb	1	; select bank1
 16128  05F0  00AB               	movwf	(?_logf+3)^(0+128)
 16129  05F1  0020               	movlb	0	; select bank0
 16130  05F2  085C               	movf	?___fladd+2,w
 16131  05F3  0021               	movlb	1	; select bank1
 16132  05F4  00AA               	movwf	(?_logf+2)^(0+128)
 16133  05F5  0020               	movlb	0	; select bank0
 16134  05F6  085B               	movf	?___fladd+1,w
 16135  05F7  0021               	movlb	1	; select bank1
 16136  05F8  00A9               	movwf	(?_logf+1)^(0+128)
 16137  05F9  0020               	movlb	0	; select bank0
 16138  05FA  085A               	movf	?___fladd,w
 16139  05FB  0021               	movlb	1	; select bank1
 16140  05FC  00A8               	movwf	?_logf^(0+128)
 16141  05FD  0008               	return
 16142  05FE                     __end_of_logf:	
 16143                           
 16144                           	psect	text51
 16145  2E77                     __ptext51:	
 16146 ;; *************** function _updateCurrent *****************
 16147 ;; Defined at:
 16148 ;;		line 200 in file "BQ76920.c"
 16149 ;; Parameters:    Size  Location     Type
 16150 ;;		None
 16151 ;; Auto vars:     Size  Location     Type
 16152 ;;  adcVal          2   21[BANK1 ] int 
 16153 ;;  sys_stat        1    0        struct regSYS_STAT
 16154 ;; Return value:  Size  Location     Type
 16155 ;;                  1    wreg      void 
 16156 ;; Registers used:
 16157 ;;		wreg, status,2, status,0, pclath, cstack
 16158 ;; Tracked objects:
 16159 ;;		On entry : 0/0
 16160 ;;		On exit  : 0/0
 16161 ;;		Unchanged: 0/0
 16162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16164 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16165 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16166 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16167 ;;Total ram usage:        6 bytes
 16168 ;; Hardware stack levels used:    1
 16169 ;; Hardware stack levels required when called:    3
 16170 ;; This function calls:
 16171 ;;		_I2C_writeRegister
 16172 ;;		___fldiv
 16173 ;;		___flmul
 16174 ;;		___flneg
 16175 ;;		___fltol
 16176 ;;		___xxtofl
 16177 ;;		_readRegister
 16178 ;; This function is called by:
 16179 ;;		_AFE_UPDATE
 16180 ;; This function uses a non-reentrant model
 16181 ;;
 16182                           
 16183                           
 16184                           ;psect for function _updateCurrent
 16185  2E77                     _updateCurrent:	
 16186                           
 16187                           ;incstack = 0
 16188                           ; Regs used in _updateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16189  2E77  3018               	movlw	24
 16190  2E78  00F5               	movwf	readRegister@slaveAddress
 16191  2E79  3000               	movlw	0
 16192  2E7A  00F6               	movwf	readRegister@slaveAddress+1
 16193  2E7B  3000               	movlw	0
 16194  2E7C  00F7               	movwf	readRegister@regAddress
 16195  2E7D  00F8               	movwf	readRegister@regAddress+1
 16196  2E7E  31B5  2587  31AE   	fcall	_readRegister
 16197                           
 16198                           ;BQ76920.c: 207:     adcVal = (readRegister(0x18, 0x32) << 8)| readRegister(0x18, 0x33);
 16199  2E81  3018               	movlw	24
 16200  2E82  00F5               	movwf	readRegister@slaveAddress
 16201  2E83  3000               	movlw	0
 16202  2E84  00F6               	movwf	readRegister@slaveAddress+1
 16203  2E85  3032               	movlw	50
 16204  2E86  00F7               	movwf	readRegister@regAddress
 16205  2E87  3000               	movlw	0
 16206  2E88  00F8               	movwf	readRegister@regAddress+1
 16207  2E89  31B5  2587  31AE   	fcall	_readRegister
 16208  2E8C  0875               	movf	?_readRegister,w
 16209  2E8D  0021               	movlb	1	; select bank1
 16210  2E8E  00B1               	movwf	??_updateCurrent^(0+128)
 16211  2E8F  0876               	movf	?_readRegister+1,w
 16212  2E90  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16213  2E91  0831               	movf	??_updateCurrent^(0+128),w
 16214  2E92  00B2               	movwf	(??_updateCurrent^(0+128)+1)
 16215  2E93  01B1               	clrf	??_updateCurrent^(0+128)
 16216  2E94  3018               	movlw	24
 16217  2E95  00F5               	movwf	readRegister@slaveAddress
 16218  2E96  3000               	movlw	0
 16219  2E97  00F6               	movwf	readRegister@slaveAddress+1
 16220  2E98  3033               	movlw	51
 16221  2E99  00F7               	movwf	readRegister@regAddress
 16222  2E9A  3000               	movlw	0
 16223  2E9B  00F8               	movwf	readRegister@regAddress+1
 16224  2E9C  31B5  2587  31AE   	fcall	_readRegister
 16225  2E9F  0875               	movf	?_readRegister,w
 16226  2EA0  0021               	movlb	1	; select bank1
 16227  2EA1  0431               	iorwf	??_updateCurrent^(0+128),w
 16228  2EA2  00B5               	movwf	updateCurrent@adcVal^(0+128)
 16229  2EA3  0876               	movf	?_readRegister+1,w
 16230  2EA4  0432               	iorwf	(??_updateCurrent+1)^(0+128),w
 16231  2EA5  00B6               	movwf	(updateCurrent@adcVal+1)^(0+128)
 16232                           
 16233                           ;BQ76920.c: 208:     batCurrent = -(adcVal * 8.44 / 19.6);
 16234  2EA6  0835               	movf	updateCurrent@adcVal^(0+128),w
 16235  2EA7  00F1               	movwf	___xxtofl@val
 16236  2EA8  0836               	movf	(updateCurrent@adcVal+1)^(0+128),w
 16237  2EA9  00F2               	movwf	___xxtofl@val+1
 16238  2EAA  0D89               	rlf	9,f
 16239  2EAB  3B89               	subwfb	9,f
 16240  2EAC  0989               	comf	9,f
 16241  2EAD  00F3               	movwf	___xxtofl@val+2
 16242  2EAE  00F4               	movwf	___xxtofl@val+3
 16243  2EAF  3001               	movlw	1
 16244  2EB0  31AB  23E3  31AE   	fcall	___xxtofl
 16245  2EB3  0874               	movf	?___xxtofl+3,w
 16246  2EB4  0020               	movlb	0	; select bank0
 16247  2EB5  00AD               	movwf	___flmul@a+3
 16248  2EB6  0873               	movf	?___xxtofl+2,w
 16249  2EB7  00AC               	movwf	___flmul@a+2
 16250  2EB8  0872               	movf	?___xxtofl+1,w
 16251  2EB9  00AB               	movwf	___flmul@a+1
 16252  2EBA  0871               	movf	?___xxtofl,w
 16253  2EBB  00AA               	movwf	___flmul@a
 16254  2EBC  3041               	movlw	65
 16255  2EBD  00A9               	movwf	___flmul@b+3
 16256  2EBE  3007               	movlw	7
 16257  2EBF  00A8               	movwf	___flmul@b+2
 16258  2EC0  300A               	movlw	10
 16259  2EC1  00A7               	movwf	___flmul@b+1
 16260  2EC2  303D               	movlw	61
 16261  2EC3  00A6               	movwf	___flmul@b
 16262  2EC4  3190  2022  31AE   	fcall	___flmul
 16263  2EC7  0020               	movlb	0	; select bank0
 16264  2EC8  0829               	movf	?___flmul+3,w
 16265  2EC9  00C7               	movwf	___fldiv@b+3
 16266  2ECA  0828               	movf	?___flmul+2,w
 16267  2ECB  00C6               	movwf	___fldiv@b+2
 16268  2ECC  0827               	movf	?___flmul+1,w
 16269  2ECD  00C5               	movwf	___fldiv@b+1
 16270  2ECE  0826               	movf	?___flmul,w
 16271  2ECF  00C4               	movwf	___fldiv@b
 16272  2ED0  3041               	movlw	65
 16273  2ED1  00C3               	movwf	___fldiv@a+3
 16274  2ED2  309C               	movlw	156
 16275  2ED3  00C2               	movwf	___fldiv@a+2
 16276  2ED4  30CC               	movlw	204
 16277  2ED5  00C1               	movwf	___fldiv@a+1
 16278  2ED6  30CD               	movlw	205
 16279  2ED7  00C0               	movwf	___fldiv@a
 16280  2ED8  319C  24E2  31AE   	fcall	___fldiv
 16281  2EDB  0020               	movlb	0	; select bank0
 16282  2EDC  0843               	movf	?___fldiv+3,w
 16283  2EDD  00DD               	movwf	___flneg@f1+3
 16284  2EDE  0842               	movf	?___fldiv+2,w
 16285  2EDF  00DC               	movwf	___flneg@f1+2
 16286  2EE0  0841               	movf	?___fldiv+1,w
 16287  2EE1  00DB               	movwf	___flneg@f1+1
 16288  2EE2  0840               	movf	?___fldiv,w
 16289  2EE3  00DA               	movwf	___flneg@f1
 16290  2EE4  31B2  228D  31AE   	fcall	___flneg
 16291  2EE7  0020               	movlb	0	; select bank0
 16292  2EE8  085D               	movf	?___flneg+3,w
 16293  2EE9  0021               	movlb	1	; select bank1
 16294  2EEA  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16295  2EEB  0020               	movlb	0	; select bank0
 16296  2EEC  085C               	movf	?___flneg+2,w
 16297  2EED  0021               	movlb	1	; select bank1
 16298  2EEE  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16299  2EEF  0020               	movlb	0	; select bank0
 16300  2EF0  085B               	movf	?___flneg+1,w
 16301  2EF1  0021               	movlb	1	; select bank1
 16302  2EF2  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16303  2EF3  0020               	movlb	0	; select bank0
 16304  2EF4  085A               	movf	?___flneg,w
 16305  2EF5  0021               	movlb	1	; select bank1
 16306  2EF6  00A8               	movwf	___fltol@f1^(0+128)
 16307  2EF7  31A8  20A6  31AE   	fcall	___fltol
 16308  2EFA  0021               	movlb	1	; select bank1
 16309  2EFB  082B               	movf	(?___fltol+3)^(0+128),w
 16310  2EFC  0023               	movlb	3	; select bank3
 16311  2EFD  00C7               	movwf	(_batCurrent+3)^(0+384)
 16312  2EFE  0021               	movlb	1	; select bank1
 16313  2EFF  082A               	movf	(?___fltol+2)^(0+128),w
 16314  2F00  0023               	movlb	3	; select bank3
 16315  2F01  00C6               	movwf	(_batCurrent+2)^(0+384)
 16316  2F02  0021               	movlb	1	; select bank1
 16317  2F03  0829               	movf	(?___fltol+1)^(0+128),w
 16318  2F04  0023               	movlb	3	; select bank3
 16319  2F05  00C5               	movwf	(_batCurrent+1)^(0+384)
 16320  2F06  0021               	movlb	1	; select bank1
 16321  2F07  0828               	movf	?___fltol^(0+128),w
 16322  2F08  0023               	movlb	3	; select bank3
 16323  2F09  00C4               	movwf	_batCurrent^(0+384)
 16324                           
 16325                           ;BQ76920.c: 210:     if (batCurrent > -10 && batCurrent < 10)
 16326  2F0A  1FC7               	btfss	(_batCurrent+3)^(0+384),7
 16327  2F0B  2F16               	goto	l7576
 16328  2F0C  30F7               	movlw	247
 16329  2F0D  0244               	subwf	_batCurrent^(0+384),w
 16330  2F0E  30FF               	movlw	255
 16331  2F0F  3B45               	subwfb	(_batCurrent+1)^(0+384),w
 16332  2F10  30FF               	movlw	255
 16333  2F11  3B46               	subwfb	(_batCurrent+2)^(0+384),w
 16334  2F12  30FF               	movlw	255
 16335  2F13  3B47               	subwfb	(_batCurrent+3)^(0+384),w
 16336  2F14  1C03               	btfss	3,0
 16337  2F15  2F2D               	goto	l7580
 16338  2F16                     l7576:	
 16339  2F16  1BC7               	btfsc	(_batCurrent+3)^(0+384),7
 16340  2F17  2F25               	goto	l7578
 16341  2F18  0847               	movf	(_batCurrent+3)^(0+384),w
 16342  2F19  1D03               	btfss	3,2
 16343  2F1A  2F2D               	goto	l7580
 16344  2F1B  0846               	movf	(_batCurrent+2)^(0+384),w
 16345  2F1C  1D03               	btfss	3,2
 16346  2F1D  2F2D               	goto	l7580
 16347  2F1E  0845               	movf	(_batCurrent+1)^(0+384),w
 16348  2F1F  1D03               	btfss	3,2
 16349  2F20  2F2D               	goto	l7580
 16350  2F21  300A               	movlw	10
 16351  2F22  0244               	subwf	_batCurrent^(0+384),w
 16352  2F23  1803               	btfsc	3,0
 16353  2F24  2F2D               	goto	l7580
 16354  2F25                     l7578:	
 16355                           
 16356                           ;BQ76920.c: 211:     {;BQ76920.c: 212:       batCurrent = 0;
 16357  2F25  3000               	movlw	0
 16358  2F26  00C7               	movwf	(_batCurrent+3)^(0+384)
 16359  2F27  3000               	movlw	0
 16360  2F28  00C6               	movwf	(_batCurrent+2)^(0+384)
 16361  2F29  3000               	movlw	0
 16362  2F2A  00C5               	movwf	(_batCurrent+1)^(0+384)
 16363  2F2B  3000               	movlw	0
 16364  2F2C  00C4               	movwf	_batCurrent^(0+384)
 16365  2F2D                     l7580:	
 16366                           
 16367                           ;BQ76920.c: 215:     I2C_writeRegister(0x18, 0x00, 0x80);
 16368  2F2D  3018               	movlw	24
 16369  2F2E  00F5               	movwf	I2C_writeRegister@slaveAddress
 16370  2F2F  3000               	movlw	0
 16371  2F30  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16372  2F31  3000               	movlw	0
 16373  2F32  00F7               	movwf	I2C_writeRegister@regAddress
 16374  2F33  00F8               	movwf	I2C_writeRegister@regAddress+1
 16375  2F34  3080               	movlw	128
 16376  2F35  00F9               	movwf	I2C_writeRegister@data
 16377  2F36  3000               	movlw	0
 16378  2F37  00FA               	movwf	I2C_writeRegister@data+1
 16379  2F38  31B3  23DF         	fcall	_I2C_writeRegister
 16380  2F3A  0008               	return
 16381  2F3B                     __end_of_updateCurrent:	
 16382                           
 16383                           	psect	text52
 16384  328D                     __ptext52:	
 16385 ;; *************** function ___flneg *****************
 16386 ;; Defined at:
 16387 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\flneg.c"
 16388 ;; Parameters:    Size  Location     Type
 16389 ;;  f1              4   58[BANK0 ] void 
 16390 ;; Auto vars:     Size  Location     Type
 16391 ;;		None
 16392 ;; Return value:  Size  Location     Type
 16393 ;;                  4   58[BANK0 ] void 
 16394 ;; Registers used:
 16395 ;;		wreg
 16396 ;; Tracked objects:
 16397 ;;		On entry : 0/0
 16398 ;;		On exit  : 0/0
 16399 ;;		Unchanged: 0/0
 16400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16401 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16404 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16405 ;;Total ram usage:        4 bytes
 16406 ;; Hardware stack levels used:    1
 16407 ;; Hardware stack levels required when called:    1
 16408 ;; This function calls:
 16409 ;;		Nothing
 16410 ;; This function is called by:
 16411 ;;		_updateCurrent
 16412 ;; This function uses a non-reentrant model
 16413 ;;
 16414                           
 16415                           
 16416                           ;psect for function ___flneg
 16417  328D                     ___flneg:	
 16418                           
 16419                           ;incstack = 0
 16420                           ; Regs used in ___flneg: [wreg]
 16421  328D  0020               	movlb	0	; select bank0
 16422  328E  085D               	movf	___flneg@f1+3,w
 16423  328F  045C               	iorwf	___flneg@f1+2,w
 16424  3290  045B               	iorwf	___flneg@f1+1,w
 16425  3291  045A               	iorwf	___flneg@f1,w
 16426  3292  1903               	skipnz
 16427  3293  0008               	return
 16428  3294  3080               	movlw	128
 16429  3295  06DD               	xorwf	___flneg@f1+3,f
 16430  3296  0008               	return
 16431  3297                     __end_of___flneg:	
 16432                           
 16433                           	psect	text53
 16434  35F4                     __ptext53:	
 16435 ;; *************** function _enableDischarging *****************
 16436 ;; Defined at:
 16437 ;;		line 291 in file "BQ76920.c"
 16438 ;; Parameters:    Size  Location     Type
 16439 ;;  enable          2    0[BANK0 ] unsigned int 
 16440 ;; Auto vars:     Size  Location     Type
 16441 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 16442 ;; Return value:  Size  Location     Type
 16443 ;;                  1    wreg      void 
 16444 ;; Registers used:
 16445 ;;		wreg, status,2, status,0, pclath, cstack
 16446 ;; Tracked objects:
 16447 ;;		On entry : 0/0
 16448 ;;		On exit  : 0/0
 16449 ;;		Unchanged: 0/0
 16450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16451 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16452 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16454 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16455 ;;Total ram usage:        5 bytes
 16456 ;; Hardware stack levels used:    1
 16457 ;; Hardware stack levels required when called:    3
 16458 ;; This function calls:
 16459 ;;		_I2C_writeRegister
 16460 ;;		_readRegister
 16461 ;; This function is called by:
 16462 ;;		_AFE_UPDATE
 16463 ;; This function uses a non-reentrant model
 16464 ;;
 16465                           
 16466                           
 16467                           ;psect for function _enableDischarging
 16468  35F4                     _enableDischarging:	
 16469                           
 16470                           ;BQ76920.c: 292:     uint8_t sys_ctrl2;;BQ76920.c: 293:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 16471                           
 16472                           ;incstack = 0
 16473                           ; Regs used in _enableDischarging: [wreg+status,2+status,0+pclath+cstack]
 16474  35F4  3018               	movlw	24
 16475  35F5  00F5               	movwf	readRegister@slaveAddress
 16476  35F6  3000               	movlw	0
 16477  35F7  00F6               	movwf	readRegister@slaveAddress+1
 16478  35F8  3005               	movlw	5
 16479  35F9  00F7               	movwf	readRegister@regAddress
 16480  35FA  3000               	movlw	0
 16481  35FB  00F8               	movwf	readRegister@regAddress+1
 16482  35FC  31B5  2587  31B5   	fcall	_readRegister
 16483  35FF  0875               	movf	?_readRegister,w
 16484  3600  0020               	movlb	0	; select bank0
 16485  3601  00A2               	movwf	??_enableDischarging
 16486  3602  0822               	movf	??_enableDischarging,w
 16487  3603  00FB               	movwf	enableDischarging@sys_ctrl2
 16488                           
 16489                           ;BQ76920.c: 294:     if(enable){
 16490  3604  0820               	movf	enableDischarging@enable,w
 16491  3605  0421               	iorwf	enableDischarging@enable+1,w
 16492  3606  1903               	btfsc	3,2
 16493  3607  2E18               	goto	l7670
 16494                           
 16495                           ;BQ76920.c: 295:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x02);
 16496  3608  3018               	movlw	24
 16497  3609  00F5               	movwf	I2C_writeRegister@slaveAddress
 16498  360A  3000               	movlw	0
 16499  360B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16500  360C  3005               	movlw	5
 16501  360D  00F7               	movwf	I2C_writeRegister@regAddress
 16502  360E  3000               	movlw	0
 16503  360F  00F8               	movwf	I2C_writeRegister@regAddress+1
 16504  3610  3002               	movlw	2
 16505  3611  047B               	iorwf	enableDischarging@sys_ctrl2,w
 16506  3612  00F9               	movwf	I2C_writeRegister@data
 16507  3613  3000               	movlw	0
 16508  3614  00FA               	movwf	I2C_writeRegister@data+1
 16509  3615  31B3  23DF         	fcall	_I2C_writeRegister
 16510                           
 16511                           ;BQ76920.c: 296:     }else{
 16512  3617  0008               	return
 16513  3618                     l7670:	
 16514                           
 16515                           ;BQ76920.c: 297:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x02));
 16516  3618  3018               	movlw	24
 16517  3619  00F5               	movwf	I2C_writeRegister@slaveAddress
 16518  361A  3000               	movlw	0
 16519  361B  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16520  361C  3005               	movlw	5
 16521  361D  00F7               	movwf	I2C_writeRegister@regAddress
 16522  361E  3000               	movlw	0
 16523  361F  00F8               	movwf	I2C_writeRegister@regAddress+1
 16524  3620  087B               	movf	enableDischarging@sys_ctrl2,w
 16525  3621  39FD               	andlw	253
 16526  3622  00A2               	movwf	??_enableDischarging
 16527  3623  01A3               	clrf	??_enableDischarging+1
 16528  3624  0822               	movf	??_enableDischarging,w
 16529  3625  00F9               	movwf	I2C_writeRegister@data
 16530  3626  0823               	movf	??_enableDischarging+1,w
 16531  3627  00FA               	movwf	I2C_writeRegister@data+1
 16532  3628  31B3  23DF         	fcall	_I2C_writeRegister
 16533  362A  0008               	return
 16534  362B                     __end_of_enableDischarging:	
 16535                           
 16536                           	psect	text54
 16537  35BD                     __ptext54:	
 16538 ;; *************** function _enableCharging *****************
 16539 ;; Defined at:
 16540 ;;		line 301 in file "BQ76920.c"
 16541 ;; Parameters:    Size  Location     Type
 16542 ;;  enable          2    0[BANK0 ] unsigned int 
 16543 ;; Auto vars:     Size  Location     Type
 16544 ;;  sys_ctrl2       1   11[COMMON] unsigned char 
 16545 ;; Return value:  Size  Location     Type
 16546 ;;                  1    wreg      void 
 16547 ;; Registers used:
 16548 ;;		wreg, status,2, status,0, pclath, cstack
 16549 ;; Tracked objects:
 16550 ;;		On entry : 0/0
 16551 ;;		On exit  : 0/0
 16552 ;;		Unchanged: 0/0
 16553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16554 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16556 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16557 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16558 ;;Total ram usage:        5 bytes
 16559 ;; Hardware stack levels used:    1
 16560 ;; Hardware stack levels required when called:    3
 16561 ;; This function calls:
 16562 ;;		_I2C_writeRegister
 16563 ;;		_readRegister
 16564 ;; This function is called by:
 16565 ;;		_AFE_UPDATE
 16566 ;; This function uses a non-reentrant model
 16567 ;;
 16568                           
 16569                           
 16570                           ;psect for function _enableCharging
 16571  35BD                     _enableCharging:	
 16572                           
 16573                           ;BQ76920.c: 302:     uint8_t sys_ctrl2;;BQ76920.c: 303:     sys_ctrl2 = readRegister(0x1
      +                          8, 0x05);
 16574                           
 16575                           ;incstack = 0
 16576                           ; Regs used in _enableCharging: [wreg+status,2+status,0+pclath+cstack]
 16577  35BD  3018               	movlw	24
 16578  35BE  00F5               	movwf	readRegister@slaveAddress
 16579  35BF  3000               	movlw	0
 16580  35C0  00F6               	movwf	readRegister@slaveAddress+1
 16581  35C1  3005               	movlw	5
 16582  35C2  00F7               	movwf	readRegister@regAddress
 16583  35C3  3000               	movlw	0
 16584  35C4  00F8               	movwf	readRegister@regAddress+1
 16585  35C5  31B5  2587  31B5   	fcall	_readRegister
 16586  35C8  0875               	movf	?_readRegister,w
 16587  35C9  0020               	movlb	0	; select bank0
 16588  35CA  00A2               	movwf	??_enableCharging
 16589  35CB  0822               	movf	??_enableCharging,w
 16590  35CC  00FB               	movwf	enableCharging@sys_ctrl2
 16591                           
 16592                           ;BQ76920.c: 304:     if(enable){
 16593  35CD  0820               	movf	enableCharging@enable,w
 16594  35CE  0421               	iorwf	enableCharging@enable+1,w
 16595  35CF  1903               	btfsc	3,2
 16596  35D0  2DE1               	goto	l7678
 16597                           
 16598                           ;BQ76920.c: 305:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 | 0x01);
 16599  35D1  3018               	movlw	24
 16600  35D2  00F5               	movwf	I2C_writeRegister@slaveAddress
 16601  35D3  3000               	movlw	0
 16602  35D4  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16603  35D5  3005               	movlw	5
 16604  35D6  00F7               	movwf	I2C_writeRegister@regAddress
 16605  35D7  3000               	movlw	0
 16606  35D8  00F8               	movwf	I2C_writeRegister@regAddress+1
 16607  35D9  3001               	movlw	1
 16608  35DA  047B               	iorwf	enableCharging@sys_ctrl2,w
 16609  35DB  00F9               	movwf	I2C_writeRegister@data
 16610  35DC  3000               	movlw	0
 16611  35DD  00FA               	movwf	I2C_writeRegister@data+1
 16612  35DE  31B3  23DF         	fcall	_I2C_writeRegister
 16613                           
 16614                           ;BQ76920.c: 306:     }else{
 16615  35E0  0008               	return
 16616  35E1                     l7678:	
 16617                           
 16618                           ;BQ76920.c: 307:     I2C_writeRegister(0x18, 0x05, sys_ctrl2 & ~(0x01));
 16619  35E1  3018               	movlw	24
 16620  35E2  00F5               	movwf	I2C_writeRegister@slaveAddress
 16621  35E3  3000               	movlw	0
 16622  35E4  00F6               	movwf	I2C_writeRegister@slaveAddress+1
 16623  35E5  3005               	movlw	5
 16624  35E6  00F7               	movwf	I2C_writeRegister@regAddress
 16625  35E7  3000               	movlw	0
 16626  35E8  00F8               	movwf	I2C_writeRegister@regAddress+1
 16627  35E9  087B               	movf	enableCharging@sys_ctrl2,w
 16628  35EA  39FE               	andlw	254
 16629  35EB  00A2               	movwf	??_enableCharging
 16630  35EC  01A3               	clrf	??_enableCharging+1
 16631  35ED  0822               	movf	??_enableCharging,w
 16632  35EE  00F9               	movwf	I2C_writeRegister@data
 16633  35EF  0823               	movf	??_enableCharging+1,w
 16634  35F0  00FA               	movwf	I2C_writeRegister@data+1
 16635  35F1  31B3  23DF         	fcall	_I2C_writeRegister
 16636  35F3  0008               	return
 16637  35F4                     __end_of_enableCharging:	
 16638                           
 16639                           	psect	text55
 16640  33DF                     __ptext55:	
 16641 ;; *************** function _I2C_writeRegister *****************
 16642 ;; Defined at:
 16643 ;;		line 104 in file "I2C.c"
 16644 ;; Parameters:    Size  Location     Type
 16645 ;;  slaveAddress    2    5[COMMON] int 
 16646 ;;  regAddress      2    7[COMMON] int 
 16647 ;;  data            2    9[COMMON] int 
 16648 ;; Auto vars:     Size  Location     Type
 16649 ;;		None
 16650 ;; Return value:  Size  Location     Type
 16651 ;;                  1    wreg      void 
 16652 ;; Registers used:
 16653 ;;		wreg, status,2, status,0, pclath, cstack
 16654 ;; Tracked objects:
 16655 ;;		On entry : 0/0
 16656 ;;		On exit  : 0/0
 16657 ;;		Unchanged: 0/0
 16658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16659 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16662 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16663 ;;Total ram usage:        6 bytes
 16664 ;; Hardware stack levels used:    1
 16665 ;; Hardware stack levels required when called:    2
 16666 ;; This function calls:
 16667 ;;		_send_I2C_controlByte
 16668 ;;		_send_I2C_data
 16669 ;;		_send_I2C_startBit
 16670 ;;		_send_I2C_stopBit
 16671 ;; This function is called by:
 16672 ;;		_beginAFEcommunication
 16673 ;;		_setShortCircuitProtection
 16674 ;;		_setOverCurrentDischargeProtection
 16675 ;;		_setCellUndervoltageProtection
 16676 ;;		_setCellOvervoltageProtection
 16677 ;;		_updateCurrent
 16678 ;;		_enableDischarging
 16679 ;;		_enableCharging
 16680 ;; This function uses a non-reentrant model
 16681 ;;
 16682                           
 16683                           
 16684                           ;psect for function _I2C_writeRegister
 16685  33DF                     _I2C_writeRegister:	
 16686                           
 16687                           ;I2C.c: 105:     send_I2C_startBit();
 16688                           
 16689                           ;incstack = 0
 16690                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
 16691  33DF  31B2  2261  31B3   	fcall	_send_I2C_startBit
 16692                           
 16693                           ;I2C.c: 106:     send_I2C_controlByte(slaveAddress, 0);
 16694  33E2  0876               	movf	I2C_writeRegister@slaveAddress+1,w
 16695  33E3  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 16696  33E4  0875               	movf	I2C_writeRegister@slaveAddress,w
 16697  33E5  00F1               	movwf	send_I2C_controlByte@BlockAddress
 16698  33E6  3000               	movlw	0
 16699  33E7  00F3               	movwf	send_I2C_controlByte@RW_bit
 16700  33E8  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 16701  33E9  31B2  2283  31B3   	fcall	_send_I2C_controlByte
 16702                           
 16703                           ;I2C.c: 107:     send_I2C_data(regAddress);
 16704  33EC  0878               	movf	I2C_writeRegister@regAddress+1,w
 16705  33ED  00F2               	movwf	send_I2C_data@databyte+1
 16706  33EE  0877               	movf	I2C_writeRegister@regAddress,w
 16707  33EF  00F1               	movwf	send_I2C_data@databyte
 16708  33F0  3198  2000  31B3   	fcall	_send_I2C_data
 16709                           
 16710                           ;I2C.c: 108:     send_I2C_data(data);
 16711  33F3  087A               	movf	I2C_writeRegister@data+1,w
 16712  33F4  00F2               	movwf	send_I2C_data@databyte+1
 16713  33F5  0879               	movf	I2C_writeRegister@data,w
 16714  33F6  00F1               	movwf	send_I2C_data@databyte
 16715  33F7  3198  2000  31B3   	fcall	_send_I2C_data
 16716                           
 16717                           ;I2C.c: 109:     send_I2C_stopBit();
 16718  33FA  31B2  2269         	fcall	_send_I2C_stopBit
 16719  33FC  0008               	return
 16720  33FD                     __end_of_I2C_writeRegister:	
 16721                           
 16722                           	psect	text56
 16723  21AD                     __ptext56:	
 16724 ;; *************** function _coulomb_counter *****************
 16725 ;; Defined at:
 16726 ;;		line 38 in file "algorithms.c"
 16727 ;; Parameters:    Size  Location     Type
 16728 ;;		None
 16729 ;; Auto vars:     Size  Location     Type
 16730 ;;  i               2   17[BANK1 ] int 
 16731 ;; Return value:  Size  Location     Type
 16732 ;;                  1    wreg      void 
 16733 ;; Registers used:
 16734 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16735 ;; Tracked objects:
 16736 ;;		On entry : 0/0
 16737 ;;		On exit  : 0/0
 16738 ;;		Unchanged: 0/0
 16739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16741 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16742 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16743 ;;      Totals:         0       2       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16744 ;;Total ram usage:        4 bytes
 16745 ;; Hardware stack levels used:    1
 16746 ;; Hardware stack levels required when called:    3
 16747 ;; This function calls:
 16748 ;;		___fldiv
 16749 ;;		___flmul
 16750 ;;		___flsub
 16751 ;;		___fltol
 16752 ;;		___xxtofl
 16753 ;; This function is called by:
 16754 ;;		_AFE_UPDATE
 16755 ;; This function uses a non-reentrant model
 16756 ;;
 16757                           
 16758                           
 16759                           ;psect for function _coulomb_counter
 16760  21AD                     _coulomb_counter:	
 16761                           
 16762                           ;algorithms.c: 39:     for(int i = 0; i<5;i++){
 16763                           
 16764                           ;incstack = 0
 16765                           ; Regs used in _coulomb_counter: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16766  21AD  0021               	movlb	1	; select bank1
 16767  21AE  01B1               	clrf	coulomb_counter@i^(0+128)
 16768  21AF  01B2               	clrf	(coulomb_counter@i+1)^(0+128)
 16769  21B0                     l6130:	
 16770                           
 16771                           ;algorithms.c: 40:        cellCharge[i] = cellCharge[i] - (batCurrent * (500/ 3600000.0)
      +                          );
 16772  21B0  0021               	movlb	1	; select bank1
 16773  21B1  3531               	lslf	coulomb_counter@i^(0+128),w
 16774  21B2  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 16775  21B3  0086               	movwf	6
 16776  21B4  3001               	movlw	1	; select bank3/4
 16777  21B5  0087               	movwf	7
 16778  21B6  3F40               	moviw [0]fsr1
 16779  21B7  0020               	movlb	0	; select bank0
 16780  21B8  00EE               	movwf	??_coulomb_counter
 16781  21B9  3F41               	moviw [1]fsr1
 16782  21BA  00EF               	movwf	??_coulomb_counter+1
 16783  21BB  086E               	movf	??_coulomb_counter,w
 16784  21BC  00F1               	movwf	___xxtofl@val
 16785  21BD  086F               	movf	??_coulomb_counter+1,w
 16786  21BE  00F2               	movwf	___xxtofl@val+1
 16787  21BF  0D89               	rlf	9,f
 16788  21C0  3B89               	subwfb	9,f
 16789  21C1  0989               	comf	9,f
 16790  21C2  00F3               	movwf	___xxtofl@val+2
 16791  21C3  00F4               	movwf	___xxtofl@val+3
 16792  21C4  3001               	movlw	1
 16793  21C5  31AB  23E3  31A1   	fcall	___xxtofl
 16794  21C8  0874               	movf	?___xxtofl+3,w
 16795  21C9  0021               	movlb	1	; select bank1
 16796  21CA  00A7               	movwf	(___flsub@b+3)^(0+128)
 16797  21CB  0873               	movf	?___xxtofl+2,w
 16798  21CC  00A6               	movwf	(___flsub@b+2)^(0+128)
 16799  21CD  0872               	movf	?___xxtofl+1,w
 16800  21CE  00A5               	movwf	(___flsub@b+1)^(0+128)
 16801  21CF  0871               	movf	?___xxtofl,w
 16802  21D0  00A4               	movwf	___flsub@b^(0+128)
 16803  21D1  0023               	movlb	3	; select bank3
 16804  21D2  0847               	movf	(_batCurrent+3)^(0+384),w
 16805  21D3  00F4               	movwf	___xxtofl@val+3
 16806  21D4  0846               	movf	(_batCurrent+2)^(0+384),w
 16807  21D5  00F3               	movwf	___xxtofl@val+2
 16808  21D6  0845               	movf	(_batCurrent+1)^(0+384),w
 16809  21D7  00F2               	movwf	___xxtofl@val+1
 16810  21D8  0844               	movf	_batCurrent^(0+384),w
 16811  21D9  00F1               	movwf	___xxtofl@val
 16812  21DA  3001               	movlw	1
 16813  21DB  31AB  23E3  31A1   	fcall	___xxtofl
 16814  21DE  0874               	movf	?___xxtofl+3,w
 16815  21DF  0020               	movlb	0	; select bank0
 16816  21E0  00AD               	movwf	___flmul@a+3
 16817  21E1  0873               	movf	?___xxtofl+2,w
 16818  21E2  00AC               	movwf	___flmul@a+2
 16819  21E3  0872               	movf	?___xxtofl+1,w
 16820  21E4  00AB               	movwf	___flmul@a+1
 16821  21E5  0871               	movf	?___xxtofl,w
 16822  21E6  00AA               	movwf	___flmul@a
 16823  21E7  3039               	movlw	57
 16824  21E8  00A9               	movwf	___flmul@b+3
 16825  21E9  3011               	movlw	17
 16826  21EA  00A8               	movwf	___flmul@b+2
 16827  21EB  30A2               	movlw	162
 16828  21EC  00A7               	movwf	___flmul@b+1
 16829  21ED  30B4               	movlw	180
 16830  21EE  00A6               	movwf	___flmul@b
 16831  21EF  3190  2022  31A1   	fcall	___flmul
 16832  21F2  0020               	movlb	0	; select bank0
 16833  21F3  0829               	movf	?___flmul+3,w
 16834  21F4  0021               	movlb	1	; select bank1
 16835  21F5  00A3               	movwf	(___flsub@a+3)^(0+128)
 16836  21F6  0020               	movlb	0	; select bank0
 16837  21F7  0828               	movf	?___flmul+2,w
 16838  21F8  0021               	movlb	1	; select bank1
 16839  21F9  00A2               	movwf	(___flsub@a+2)^(0+128)
 16840  21FA  0020               	movlb	0	; select bank0
 16841  21FB  0827               	movf	?___flmul+1,w
 16842  21FC  0021               	movlb	1	; select bank1
 16843  21FD  00A1               	movwf	(___flsub@a+1)^(0+128)
 16844  21FE  0020               	movlb	0	; select bank0
 16845  21FF  0826               	movf	?___flmul,w
 16846  2200  0021               	movlb	1	; select bank1
 16847  2201  00A0               	movwf	___flsub@a^(0+128)
 16848  2202  31B5  2552  31A1   	fcall	___flsub
 16849  2205  0021               	movlb	1	; select bank1
 16850  2206  0823               	movf	(?___flsub+3)^(0+128),w
 16851  2207  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16852  2208  0822               	movf	(?___flsub+2)^(0+128),w
 16853  2209  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16854  220A  0821               	movf	(?___flsub+1)^(0+128),w
 16855  220B  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16856  220C  0820               	movf	?___flsub^(0+128),w
 16857  220D  00A8               	movwf	___fltol@f1^(0+128)
 16858  220E  31A8  20A6  31A1   	fcall	___fltol
 16859  2211  0021               	movlb	1	; select bank1
 16860  2212  3531               	lslf	coulomb_counter@i^(0+128),w
 16861  2213  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 16862  2214  0086               	movwf	6
 16863  2215  3001               	movlw	1	; select bank3/4
 16864  2216  0087               	movwf	7
 16865  2217  0828               	movf	?___fltol^(0+128),w
 16866  2218  3FC0               	movwi [0]fsr1
 16867  2219  0829               	movf	(?___fltol+1)^(0+128),w
 16868  221A  3FC1               	movwi [1]fsr1
 16869                           
 16870                           ;algorithms.c: 41:        cellSOC[i] = ((cellCharge[i] * 100.0 )/samsung_cell_max_charge
      +                          );
 16871  221B  3531               	lslf	coulomb_counter@i^(0+128),w
 16872  221C  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 16873  221D  0086               	movwf	6
 16874  221E  3001               	movlw	1	; select bank3/4
 16875  221F  0087               	movwf	7
 16876  2220  3F40               	moviw [0]fsr1
 16877  2221  0020               	movlb	0	; select bank0
 16878  2222  00EE               	movwf	??_coulomb_counter
 16879  2223  3F41               	moviw [1]fsr1
 16880  2224  00EF               	movwf	??_coulomb_counter+1
 16881  2225  086E               	movf	??_coulomb_counter,w
 16882  2226  00F1               	movwf	___xxtofl@val
 16883  2227  086F               	movf	??_coulomb_counter+1,w
 16884  2228  00F2               	movwf	___xxtofl@val+1
 16885  2229  0D89               	rlf	9,f
 16886  222A  3B89               	subwfb	9,f
 16887  222B  0989               	comf	9,f
 16888  222C  00F3               	movwf	___xxtofl@val+2
 16889  222D  00F4               	movwf	___xxtofl@val+3
 16890  222E  3001               	movlw	1
 16891  222F  31AB  23E3  31A1   	fcall	___xxtofl
 16892  2232  0874               	movf	?___xxtofl+3,w
 16893  2233  0020               	movlb	0	; select bank0
 16894  2234  00AD               	movwf	___flmul@a+3
 16895  2235  0873               	movf	?___xxtofl+2,w
 16896  2236  00AC               	movwf	___flmul@a+2
 16897  2237  0872               	movf	?___xxtofl+1,w
 16898  2238  00AB               	movwf	___flmul@a+1
 16899  2239  0871               	movf	?___xxtofl,w
 16900  223A  00AA               	movwf	___flmul@a
 16901  223B  3042               	movlw	66
 16902  223C  00A9               	movwf	___flmul@b+3
 16903  223D  30C8               	movlw	200
 16904  223E  00A8               	movwf	___flmul@b+2
 16905  223F  3000               	movlw	0
 16906  2240  00A7               	movwf	___flmul@b+1
 16907  2241  3000               	movlw	0
 16908  2242  00A6               	movwf	___flmul@b
 16909  2243  3190  2022  31A1   	fcall	___flmul
 16910  2246  0020               	movlb	0	; select bank0
 16911  2247  0829               	movf	?___flmul+3,w
 16912  2248  00C7               	movwf	___fldiv@b+3
 16913  2249  0828               	movf	?___flmul+2,w
 16914  224A  00C6               	movwf	___fldiv@b+2
 16915  224B  0827               	movf	?___flmul+1,w
 16916  224C  00C5               	movwf	___fldiv@b+1
 16917  224D  0826               	movf	?___flmul,w
 16918  224E  00C4               	movwf	___fldiv@b
 16919  224F  3045               	movlw	69
 16920  2250  00C3               	movwf	___fldiv@a+3
 16921  2251  301C               	movlw	28
 16922  2252  00C2               	movwf	___fldiv@a+2
 16923  2253  3040               	movlw	64
 16924  2254  00C1               	movwf	___fldiv@a+1
 16925  2255  3000               	movlw	0
 16926  2256  00C0               	movwf	___fldiv@a
 16927  2257  319C  24E2  31A1   	fcall	___fldiv
 16928  225A  0020               	movlb	0	; select bank0
 16929  225B  0843               	movf	?___fldiv+3,w
 16930  225C  0021               	movlb	1	; select bank1
 16931  225D  00AB               	movwf	(___fltol@f1+3)^(0+128)
 16932  225E  0020               	movlb	0	; select bank0
 16933  225F  0842               	movf	?___fldiv+2,w
 16934  2260  0021               	movlb	1	; select bank1
 16935  2261  00AA               	movwf	(___fltol@f1+2)^(0+128)
 16936  2262  0020               	movlb	0	; select bank0
 16937  2263  0841               	movf	?___fldiv+1,w
 16938  2264  0021               	movlb	1	; select bank1
 16939  2265  00A9               	movwf	(___fltol@f1+1)^(0+128)
 16940  2266  0020               	movlb	0	; select bank0
 16941  2267  0840               	movf	?___fldiv,w
 16942  2268  0021               	movlb	1	; select bank1
 16943  2269  00A8               	movwf	___fltol@f1^(0+128)
 16944  226A  31A8  20A6  31A1   	fcall	___fltol
 16945  226D  0021               	movlb	1	; select bank1
 16946  226E  3531               	lslf	coulomb_counter@i^(0+128),w
 16947  226F  3E20               	addlw	(low (_cellSOC| (0+512)))& (0+255)
 16948  2270  0086               	movwf	6
 16949  2271  3002               	movlw	2	; select bank4/5
 16950  2272  0087               	movwf	7
 16951  2273  0828               	movf	?___fltol^(0+128),w
 16952  2274  3FC0               	movwi [0]fsr1
 16953  2275  0829               	movf	(?___fltol+1)^(0+128),w
 16954  2276  3FC1               	movwi [1]fsr1
 16955                           
 16956                           ;algorithms.c: 42:      }
 16957  2277  3001               	movlw	1
 16958  2278  07B1               	addwf	coulomb_counter@i^(0+128),f
 16959  2279  3000               	movlw	0
 16960  227A  3DB2               	addwfc	(coulomb_counter@i+1)^(0+128),f
 16961  227B  0832               	movf	(coulomb_counter@i+1)^(0+128),w
 16962  227C  3A80               	xorlw	128
 16963  227D  0020               	movlb	0	; select bank0
 16964  227E  00EE               	movwf	??_coulomb_counter
 16965  227F  3080               	movlw	128
 16966  2280  026E               	subwf	??_coulomb_counter,w
 16967  2281  1D03               	skipz
 16968  2282  2A86               	goto	u7635
 16969  2283  3005               	movlw	5
 16970  2284  0021               	movlb	1	; select bank1
 16971  2285  0231               	subwf	coulomb_counter@i^(0+128),w
 16972  2286                     u7635:	
 16973  2286  1803               	btfsc	3,0
 16974  2287  0008               	return
 16975  2288  29B0               	goto	l6130
 16976  2289                     __end_of_coulomb_counter:	
 16977                           
 16978                           	psect	text57
 16979  3552                     __ptext57:	
 16980 ;; *************** function ___flsub *****************
 16981 ;; Defined at:
 16982 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 16983 ;; Parameters:    Size  Location     Type
 16984 ;;  a               4    0[BANK1 ] void 
 16985 ;;  b               4    4[BANK1 ] void 
 16986 ;; Auto vars:     Size  Location     Type
 16987 ;;		None
 16988 ;; Return value:  Size  Location     Type
 16989 ;;                  4    0[BANK1 ] void 
 16990 ;; Registers used:
 16991 ;;		wreg, status,2, status,0, pclath, cstack
 16992 ;; Tracked objects:
 16993 ;;		On entry : 0/0
 16994 ;;		On exit  : 0/0
 16995 ;;		Unchanged: 0/0
 16996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16997 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17000 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17001 ;;Total ram usage:        8 bytes
 17002 ;; Hardware stack levels used:    1
 17003 ;; Hardware stack levels required when called:    2
 17004 ;; This function calls:
 17005 ;;		___fladd
 17006 ;; This function is called by:
 17007 ;;		_updateTemperatures
 17008 ;;		_coulomb_counter
 17009 ;;		_logf
 17010 ;; This function uses a non-reentrant model
 17011 ;;
 17012                           
 17013                           
 17014                           ;psect for function ___flsub
 17015  3552                     ___flsub:	
 17016                           
 17017                           ;incstack = 0
 17018                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 17019  3552  3080               	movlw	128
 17020  3553  0021               	movlb	1	; select bank1
 17021  3554  06A3               	xorwf	(___flsub@a+3)^(0+128),f
 17022  3555  0827               	movf	(___flsub@b+3)^(0+128),w
 17023  3556  0020               	movlb	0	; select bank0
 17024  3557  00DD               	movwf	___fladd@b+3
 17025  3558  0021               	movlb	1	; select bank1
 17026  3559  0826               	movf	(___flsub@b+2)^(0+128),w
 17027  355A  0020               	movlb	0	; select bank0
 17028  355B  00DC               	movwf	___fladd@b+2
 17029  355C  0021               	movlb	1	; select bank1
 17030  355D  0825               	movf	(___flsub@b+1)^(0+128),w
 17031  355E  0020               	movlb	0	; select bank0
 17032  355F  00DB               	movwf	___fladd@b+1
 17033  3560  0021               	movlb	1	; select bank1
 17034  3561  0824               	movf	___flsub@b^(0+128),w
 17035  3562  0020               	movlb	0	; select bank0
 17036  3563  00DA               	movwf	___fladd@b
 17037  3564  0021               	movlb	1	; select bank1
 17038  3565  0823               	movf	(___flsub@a+3)^(0+128),w
 17039  3566  0020               	movlb	0	; select bank0
 17040  3567  00E1               	movwf	___fladd@a+3
 17041  3568  0021               	movlb	1	; select bank1
 17042  3569  0822               	movf	(___flsub@a+2)^(0+128),w
 17043  356A  0020               	movlb	0	; select bank0
 17044  356B  00E0               	movwf	___fladd@a+2
 17045  356C  0021               	movlb	1	; select bank1
 17046  356D  0821               	movf	(___flsub@a+1)^(0+128),w
 17047  356E  0020               	movlb	0	; select bank0
 17048  356F  00DF               	movwf	___fladd@a+1
 17049  3570  0021               	movlb	1	; select bank1
 17050  3571  0820               	movf	___flsub@a^(0+128),w
 17051  3572  0020               	movlb	0	; select bank0
 17052  3573  00DE               	movwf	___fladd@a
 17053  3574  3185  25FE         	fcall	___fladd
 17054  3576  0020               	movlb	0	; select bank0
 17055  3577  085D               	movf	?___fladd+3,w
 17056  3578  0021               	movlb	1	; select bank1
 17057  3579  00A3               	movwf	(?___flsub+3)^(0+128)
 17058  357A  0020               	movlb	0	; select bank0
 17059  357B  085C               	movf	?___fladd+2,w
 17060  357C  0021               	movlb	1	; select bank1
 17061  357D  00A2               	movwf	(?___flsub+2)^(0+128)
 17062  357E  0020               	movlb	0	; select bank0
 17063  357F  085B               	movf	?___fladd+1,w
 17064  3580  0021               	movlb	1	; select bank1
 17065  3581  00A1               	movwf	(?___flsub+1)^(0+128)
 17066  3582  0020               	movlb	0	; select bank0
 17067  3583  085A               	movf	?___fladd,w
 17068  3584  0021               	movlb	1	; select bank1
 17069  3585  00A0               	movwf	?___flsub^(0+128)
 17070  3586  0008               	return
 17071  3587                     __end_of___flsub:	
 17072                           
 17073                           	psect	text58
 17074  05FE                     __ptext58:	
 17075 ;; *************** function ___fladd *****************
 17076 ;; Defined at:
 17077 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
 17078 ;; Parameters:    Size  Location     Type
 17079 ;;  b               4   58[BANK0 ] void 
 17080 ;;  a               4   62[BANK0 ] void 
 17081 ;; Auto vars:     Size  Location     Type
 17082 ;;  grs             1   77[BANK0 ] unsigned char 
 17083 ;;  bexp            1   76[BANK0 ] unsigned char 
 17084 ;;  aexp            1   75[BANK0 ] unsigned char 
 17085 ;;  signs           1   74[BANK0 ] unsigned char 
 17086 ;; Return value:  Size  Location     Type
 17087 ;;                  4   58[BANK0 ] unsigned char 
 17088 ;; Registers used:
 17089 ;;		wreg, status,2, status,0
 17090 ;; Tracked objects:
 17091 ;;		On entry : 0/0
 17092 ;;		On exit  : 0/0
 17093 ;;		Unchanged: 0/0
 17094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17095 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17096 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17097 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17098 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17099 ;;Total ram usage:       20 bytes
 17100 ;; Hardware stack levels used:    1
 17101 ;; Hardware stack levels required when called:    1
 17102 ;; This function calls:
 17103 ;;		Nothing
 17104 ;; This function is called by:
 17105 ;;		_updateVoltages
 17106 ;;		_updateTemperatures
 17107 ;;		___flsub
 17108 ;;		_logf
 17109 ;; This function uses a non-reentrant model
 17110 ;;
 17111                           
 17112                           
 17113                           ;psect for function ___fladd
 17114  05FE                     ___fladd:	
 17115                           
 17116                           ;incstack = 0
 17117                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 17118  05FE  0020               	movlb	0	; select bank0
 17119  05FF  085D               	movf	___fladd@b+3,w
 17120  0600  3980               	andlw	128
 17121  0601  00E2               	movwf	??___fladd
 17122  0602  0862               	movf	??___fladd,w
 17123  0603  00EA               	movwf	___fladd@signs
 17124  0604  355D               	lslf	___fladd@b+3,w
 17125  0605  00E2               	movwf	??___fladd
 17126  0606  0862               	movf	??___fladd,w
 17127  0607  00EC               	movwf	___fladd@bexp
 17128  0608  1BDC               	btfsc	___fladd@b+2,7
 17129  0609  146C               	bsf	___fladd@bexp,0
 17130  060A  086C               	movf	___fladd@bexp,w
 17131  060B  1903               	btfsc	3,2
 17132  060C  2E1B               	goto	l5094
 17133  060D  0A6C               	incf	___fladd@bexp,w
 17134  060E  1D03               	btfss	3,2
 17135  060F  2E18               	goto	l5090
 17136  0610  3000               	movlw	0
 17137  0611  00DD               	movwf	___fladd@b+3
 17138  0612  3000               	movlw	0
 17139  0613  00DC               	movwf	___fladd@b+2
 17140  0614  3000               	movlw	0
 17141  0615  00DB               	movwf	___fladd@b+1
 17142  0616  3000               	movlw	0
 17143  0617  00DA               	movwf	___fladd@b
 17144  0618                     l5090:	
 17145  0618  17DC               	bsf	___fladd@b+2,7
 17146  0619  01DD               	clrf	___fladd@b+3
 17147  061A  2E23               	goto	l5096
 17148  061B                     l5094:	
 17149  061B  3000               	movlw	0
 17150  061C  00DD               	movwf	___fladd@b+3
 17151  061D  3000               	movlw	0
 17152  061E  00DC               	movwf	___fladd@b+2
 17153  061F  3000               	movlw	0
 17154  0620  00DB               	movwf	___fladd@b+1
 17155  0621  3000               	movlw	0
 17156  0622  00DA               	movwf	___fladd@b
 17157  0623                     l5096:	
 17158  0623  0861               	movf	___fladd@a+3,w
 17159  0624  3980               	andlw	128
 17160  0625  00E2               	movwf	??___fladd
 17161  0626  0862               	movf	??___fladd,w
 17162  0627  00EB               	movwf	___fladd@aexp
 17163  0628  086B               	movf	___fladd@aexp,w
 17164  0629  066A               	xorwf	___fladd@signs,w
 17165  062A  1D03               	btfss	3,2
 17166  062B  176A               	bsf	___fladd@signs,6
 17167  062C  3561               	lslf	___fladd@a+3,w
 17168  062D  00E2               	movwf	??___fladd
 17169  062E  0862               	movf	??___fladd,w
 17170  062F  00EB               	movwf	___fladd@aexp
 17171  0630  1BE0               	btfsc	___fladd@a+2,7
 17172  0631  146B               	bsf	___fladd@aexp,0
 17173  0632  086B               	movf	___fladd@aexp,w
 17174  0633  1903               	btfsc	3,2
 17175  0634  2E43               	goto	l5118
 17176  0635  0A6B               	incf	___fladd@aexp,w
 17177  0636  1D03               	btfss	3,2
 17178  0637  2E40               	goto	l5114
 17179  0638  3000               	movlw	0
 17180  0639  00E1               	movwf	___fladd@a+3
 17181  063A  3000               	movlw	0
 17182  063B  00E0               	movwf	___fladd@a+2
 17183  063C  3000               	movlw	0
 17184  063D  00DF               	movwf	___fladd@a+1
 17185  063E  3000               	movlw	0
 17186  063F  00DE               	movwf	___fladd@a
 17187  0640                     l5114:	
 17188  0640  17E0               	bsf	___fladd@a+2,7
 17189  0641  01E1               	clrf	___fladd@a+3
 17190  0642  2E4B               	goto	l1322
 17191  0643                     l5118:	
 17192  0643  3000               	movlw	0
 17193  0644  00E1               	movwf	___fladd@a+3
 17194  0645  3000               	movlw	0
 17195  0646  00E0               	movwf	___fladd@a+2
 17196  0647  3000               	movlw	0
 17197  0648  00DF               	movwf	___fladd@a+1
 17198  0649  3000               	movlw	0
 17199  064A  00DE               	movwf	___fladd@a
 17200  064B                     l1322:	
 17201  064B  086C               	movf	___fladd@bexp,w
 17202  064C  026B               	subwf	___fladd@aexp,w
 17203  064D  1803               	skipnc
 17204  064E  2E91               	goto	l5154
 17205  064F  1F6A               	btfss	___fladd@signs,6
 17206  0650  2E55               	goto	l5124
 17207  0651  3080               	movlw	128
 17208  0652  00E2               	movwf	??___fladd
 17209  0653  0862               	movf	??___fladd,w
 17210  0654  06EA               	xorwf	___fladd@signs,f
 17211  0655                     l5124:	
 17212  0655  086C               	movf	___fladd@bexp,w
 17213  0656  00E2               	movwf	??___fladd
 17214  0657  0862               	movf	??___fladd,w
 17215  0658  00ED               	movwf	___fladd@grs
 17216  0659  086B               	movf	___fladd@aexp,w
 17217  065A  00E2               	movwf	??___fladd
 17218  065B  0862               	movf	??___fladd,w
 17219  065C  00EC               	movwf	___fladd@bexp
 17220  065D  086D               	movf	___fladd@grs,w
 17221  065E  00E2               	movwf	??___fladd
 17222  065F  0862               	movf	??___fladd,w
 17223  0660  00EB               	movwf	___fladd@aexp
 17224  0661  085A               	movf	___fladd@b,w
 17225  0662  00E2               	movwf	??___fladd
 17226  0663  0862               	movf	??___fladd,w
 17227  0664  00ED               	movwf	___fladd@grs
 17228  0665  085E               	movf	___fladd@a,w
 17229  0666  00E2               	movwf	??___fladd
 17230  0667  0862               	movf	??___fladd,w
 17231  0668  00DA               	movwf	___fladd@b
 17232  0669  086D               	movf	___fladd@grs,w
 17233  066A  00E2               	movwf	??___fladd
 17234  066B  0862               	movf	??___fladd,w
 17235  066C  00DE               	movwf	___fladd@a
 17236  066D  085B               	movf	___fladd@b+1,w
 17237  066E  00E2               	movwf	??___fladd
 17238  066F  0862               	movf	??___fladd,w
 17239  0670  00ED               	movwf	___fladd@grs
 17240  0671  085F               	movf	___fladd@a+1,w
 17241  0672  00E2               	movwf	??___fladd
 17242  0673  0862               	movf	??___fladd,w
 17243  0674  00DB               	movwf	___fladd@b+1
 17244  0675  086D               	movf	___fladd@grs,w
 17245  0676  00E2               	movwf	??___fladd
 17246  0677  0862               	movf	??___fladd,w
 17247  0678  00DF               	movwf	___fladd@a+1
 17248  0679  085C               	movf	___fladd@b+2,w
 17249  067A  00E2               	movwf	??___fladd
 17250  067B  0862               	movf	??___fladd,w
 17251  067C  00ED               	movwf	___fladd@grs
 17252  067D  0860               	movf	___fladd@a+2,w
 17253  067E  00E2               	movwf	??___fladd
 17254  067F  0862               	movf	??___fladd,w
 17255  0680  00DC               	movwf	___fladd@b+2
 17256  0681  086D               	movf	___fladd@grs,w
 17257  0682  00E2               	movwf	??___fladd
 17258  0683  0862               	movf	??___fladd,w
 17259  0684  00E0               	movwf	___fladd@a+2
 17260  0685  085D               	movf	___fladd@b+3,w
 17261  0686  00E2               	movwf	??___fladd
 17262  0687  0862               	movf	??___fladd,w
 17263  0688  00ED               	movwf	___fladd@grs
 17264  0689  0861               	movf	___fladd@a+3,w
 17265  068A  00E2               	movwf	??___fladd
 17266  068B  0862               	movf	??___fladd,w
 17267  068C  00DD               	movwf	___fladd@b+3
 17268  068D  086D               	movf	___fladd@grs,w
 17269  068E  00E2               	movwf	??___fladd
 17270  068F  0862               	movf	??___fladd,w
 17271  0690  00E1               	movwf	___fladd@a+3
 17272  0691                     l5154:	
 17273  0691  01ED               	clrf	___fladd@grs
 17274  0692  086B               	movf	___fladd@aexp,w
 17275  0693  00E2               	movwf	??___fladd
 17276  0694  01E3               	clrf	??___fladd+1
 17277  0695  0863               	movf	??___fladd+1,w
 17278  0696  00E5               	movwf	??___fladd+3
 17279  0697  086C               	movf	___fladd@bexp,w
 17280  0698  0262               	subwf	??___fladd,w
 17281  0699  00E4               	movwf	??___fladd+2
 17282  069A  1C03               	skipc
 17283  069B  03E5               	decf	??___fladd+3,f
 17284  069C  0865               	movf	??___fladd+3,w
 17285  069D  3A80               	xorlw	128
 17286  069E  00E6               	movwf	??___fladd+4
 17287  069F  3080               	movlw	128
 17288  06A0  0266               	subwf	??___fladd+4,w
 17289  06A1  1D03               	skipz
 17290  06A2  2EA5               	goto	u5865
 17291  06A3  301A               	movlw	26
 17292  06A4  0264               	subwf	??___fladd+2,w
 17293  06A5                     u5865:	
 17294  06A5  1C03               	skipc
 17295  06A6  2ED9               	goto	l5172
 17296  06A7  0020               	movlb	0	; select bank0
 17297  06A8  085D               	movf	___fladd@b+3,w
 17298  06A9  045C               	iorwf	___fladd@b+2,w
 17299  06AA  045B               	iorwf	___fladd@b+1,w
 17300  06AB  045A               	iorwf	___fladd@b,w
 17301  06AC  1903               	btfsc	3,2
 17302  06AD  2EB0               	goto	u5870
 17303  06AE  3001               	movlw	1
 17304  06AF  2EB1               	goto	u5880
 17305  06B0                     u5870:	
 17306  06B0  3000               	movlw	0
 17307  06B1                     u5880:	
 17308  06B1  00E2               	movwf	??___fladd
 17309  06B2  0862               	movf	??___fladd,w
 17310  06B3  00ED               	movwf	___fladd@grs
 17311  06B4  3000               	movlw	0
 17312  06B5  00DD               	movwf	___fladd@b+3
 17313  06B6  3000               	movlw	0
 17314  06B7  00DC               	movwf	___fladd@b+2
 17315  06B8  3000               	movlw	0
 17316  06B9  00DB               	movwf	___fladd@b+1
 17317  06BA  3000               	movlw	0
 17318  06BB  00DA               	movwf	___fladd@b
 17319  06BC  086B               	movf	___fladd@aexp,w
 17320  06BD  00E2               	movwf	??___fladd
 17321  06BE  0862               	movf	??___fladd,w
 17322  06BF  00EC               	movwf	___fladd@bexp
 17323  06C0  2EDE               	goto	l1326
 17324  06C1                     l1328:	
 17325  06C1  1C6D               	btfss	___fladd@grs,0
 17326  06C2  2EC9               	goto	l5162
 17327  06C3  366D               	lsrf	___fladd@grs,w
 17328  06C4  3801               	iorlw	1
 17329  06C5  00E2               	movwf	??___fladd
 17330  06C6  0862               	movf	??___fladd,w
 17331  06C7  00ED               	movwf	___fladd@grs
 17332  06C8  2ECB               	goto	l5164
 17333  06C9                     l5162:	
 17334  06C9  1003               	clrc
 17335  06CA  0CED               	rrf	___fladd@grs,f
 17336  06CB                     l5164:	
 17337  06CB  185A               	btfsc	___fladd@b,0
 17338  06CC  17ED               	bsf	___fladd@grs,7
 17339  06CD  3001               	movlw	1
 17340  06CE  00E2               	movwf	??___fladd
 17341  06CF                     u5915:	
 17342  06CF  37DD               	asrf	___fladd@b+3,f
 17343  06D0  0CDC               	rrf	___fladd@b+2,f
 17344  06D1  0CDB               	rrf	___fladd@b+1,f
 17345  06D2  0CDA               	rrf	___fladd@b,f
 17346  06D3  0BE2               	decfsz	??___fladd& (0+127),f
 17347  06D4  2ECF               	goto	u5915
 17348  06D5  3001               	movlw	1
 17349  06D6  00E2               	movwf	??___fladd
 17350  06D7  0862               	movf	??___fladd,w
 17351  06D8  07EC               	addwf	___fladd@bexp,f
 17352  06D9                     l5172:	
 17353  06D9  0020               	movlb	0	; select bank0
 17354  06DA  086B               	movf	___fladd@aexp,w
 17355  06DB  026C               	subwf	___fladd@bexp,w
 17356  06DC  1C03               	skipc
 17357  06DD  2EC1               	goto	l1328
 17358  06DE                     l1326:	
 17359  06DE  1B6A               	btfsc	___fladd@signs,6
 17360  06DF  2F0F               	goto	l5198
 17361  06E0  086C               	movf	___fladd@bexp,w
 17362  06E1  1D03               	btfss	3,2
 17363  06E2  2EEC               	goto	l5180
 17364  06E3  3000               	movlw	0
 17365  06E4  00DD               	movwf	?___fladd+3
 17366  06E5  3000               	movlw	0
 17367  06E6  00DC               	movwf	?___fladd+2
 17368  06E7  3000               	movlw	0
 17369  06E8  00DB               	movwf	?___fladd+1
 17370  06E9  3000               	movlw	0
 17371  06EA  00DA               	movwf	?___fladd
 17372  06EB  0008               	return
 17373  06EC                     l5180:	
 17374  06EC  085E               	movf	___fladd@a,w
 17375  06ED  07DA               	addwf	___fladd@b,f
 17376  06EE  085F               	movf	___fladd@a+1,w
 17377  06EF  3DDB               	addwfc	___fladd@b+1,f
 17378  06F0  0860               	movf	___fladd@a+2,w
 17379  06F1  3DDC               	addwfc	___fladd@b+2,f
 17380  06F2  0861               	movf	___fladd@a+3,w
 17381  06F3  3DDD               	addwfc	___fladd@b+3,f
 17382  06F4  1C5D               	btfss	___fladd@b+3,0
 17383  06F5  2F89               	goto	l5232
 17384  06F6  1C6D               	btfss	___fladd@grs,0
 17385  06F7  2EFE               	goto	l5188
 17386  06F8  366D               	lsrf	___fladd@grs,w
 17387  06F9  3801               	iorlw	1
 17388  06FA  00E2               	movwf	??___fladd
 17389  06FB  0862               	movf	??___fladd,w
 17390  06FC  00ED               	movwf	___fladd@grs
 17391  06FD  2F00               	goto	l5190
 17392  06FE                     l5188:	
 17393  06FE  1003               	clrc
 17394  06FF  0CED               	rrf	___fladd@grs,f
 17395  0700                     l5190:	
 17396  0700  185A               	btfsc	___fladd@b,0
 17397  0701  17ED               	bsf	___fladd@grs,7
 17398  0702  3001               	movlw	1
 17399  0703  00E2               	movwf	??___fladd
 17400  0704                     u5985:	
 17401  0704  37DD               	asrf	___fladd@b+3,f
 17402  0705  0CDC               	rrf	___fladd@b+2,f
 17403  0706  0CDB               	rrf	___fladd@b+1,f
 17404  0707  0CDA               	rrf	___fladd@b,f
 17405  0708  0BE2               	decfsz	??___fladd& (0+127),f
 17406  0709  2F04               	goto	u5985
 17407  070A  3001               	movlw	1
 17408  070B  00E2               	movwf	??___fladd
 17409  070C  0862               	movf	??___fladd,w
 17410  070D  07EC               	addwf	___fladd@bexp,f
 17411  070E  2F89               	goto	l5232
 17412  070F                     l5198:	
 17413  070F  085D               	movf	___fladd@b+3,w
 17414  0710  3A80               	xorlw	128
 17415  0711  00E2               	movwf	??___fladd
 17416  0712  0861               	movf	___fladd@a+3,w
 17417  0713  3A80               	xorlw	128
 17418  0714  0262               	subwf	??___fladd,w
 17419  0715  1D03               	skipz
 17420  0716  2F21               	goto	u5993
 17421  0717  0860               	movf	___fladd@a+2,w
 17422  0718  025C               	subwf	___fladd@b+2,w
 17423  0719  1D03               	skipz
 17424  071A  2F21               	goto	u5993
 17425  071B  085F               	movf	___fladd@a+1,w
 17426  071C  025B               	subwf	___fladd@b+1,w
 17427  071D  1D03               	skipz
 17428  071E  2F21               	goto	u5993
 17429  071F  085E               	movf	___fladd@a,w
 17430  0720  025A               	subwf	___fladd@b,w
 17431  0721                     u5993:	
 17432  0721  1803               	skipnc
 17433  0722  2F59               	goto	l5208
 17434  0723  30FF               	movlw	255
 17435  0724  00E2               	movwf	??___fladd
 17436  0725  30FF               	movlw	255
 17437  0726  00E3               	movwf	??___fladd+1
 17438  0727  30FF               	movlw	255
 17439  0728  00E4               	movwf	??___fladd+2
 17440  0729  30FF               	movlw	255
 17441  072A  00E5               	movwf	??___fladd+3
 17442  072B  085A               	movf	___fladd@b,w
 17443  072C  025E               	subwf	___fladd@a,w
 17444  072D  00E6               	movwf	??___fladd+4
 17445  072E  085B               	movf	___fladd@b+1,w
 17446  072F  3B5F               	subwfb	___fladd@a+1,w
 17447  0730  00E7               	movwf	??___fladd+5
 17448  0731  085C               	movf	___fladd@b+2,w
 17449  0732  3B60               	subwfb	___fladd@a+2,w
 17450  0733  00E8               	movwf	??___fladd+6
 17451  0734  085D               	movf	___fladd@b+3,w
 17452  0735  3B61               	subwfb	___fladd@a+3,w
 17453  0736  00E9               	movwf	??___fladd+7
 17454  0737  0866               	movf	??___fladd+4,w
 17455  0738  07E2               	addwf	??___fladd,f
 17456  0739  0867               	movf	??___fladd+5,w
 17457  073A  3DE3               	addwfc	??___fladd+1,f
 17458  073B  0868               	movf	??___fladd+6,w
 17459  073C  3DE4               	addwfc	??___fladd+2,f
 17460  073D  0869               	movf	??___fladd+7,w
 17461  073E  3DE5               	addwfc	??___fladd+3,f
 17462  073F  0865               	movf	??___fladd+3,w
 17463  0740  00DD               	movwf	___fladd@b+3
 17464  0741  0864               	movf	??___fladd+2,w
 17465  0742  00DC               	movwf	___fladd@b+2
 17466  0743  0863               	movf	??___fladd+1,w
 17467  0744  00DB               	movwf	___fladd@b+1
 17468  0745  0862               	movf	??___fladd,w
 17469  0746  00DA               	movwf	___fladd@b
 17470  0747  3080               	movlw	128
 17471  0748  00E2               	movwf	??___fladd
 17472  0749  0862               	movf	??___fladd,w
 17473  074A  06EA               	xorwf	___fladd@signs,f
 17474  074B  09ED               	comf	___fladd@grs,f
 17475  074C  0AED               	incf	___fladd@grs,f
 17476  074D  086D               	movf	___fladd@grs,w
 17477  074E  1D03               	btfss	3,2
 17478  074F  2F61               	goto	l1343
 17479  0750  3001               	movlw	1
 17480  0751  07DA               	addwf	___fladd@b,f
 17481  0752  3000               	movlw	0
 17482  0753  3DDB               	addwfc	___fladd@b+1,f
 17483  0754  3000               	movlw	0
 17484  0755  3DDC               	addwfc	___fladd@b+2,f
 17485  0756  3000               	movlw	0
 17486  0757  3DDD               	addwfc	___fladd@b+3,f
 17487  0758  2F61               	goto	l1343
 17488  0759                     l5208:	
 17489  0759  085E               	movf	___fladd@a,w
 17490  075A  02DA               	subwf	___fladd@b,f
 17491  075B  085F               	movf	___fladd@a+1,w
 17492  075C  3BDB               	subwfb	___fladd@b+1,f
 17493  075D  0860               	movf	___fladd@a+2,w
 17494  075E  3BDC               	subwfb	___fladd@b+2,f
 17495  075F  0861               	movf	___fladd@a+3,w
 17496  0760  3BDD               	subwfb	___fladd@b+3,f
 17497  0761                     l1343:	
 17498  0761  085D               	movf	___fladd@b+3,w
 17499  0762  045C               	iorwf	___fladd@b+2,w
 17500  0763  045B               	iorwf	___fladd@b+1,w
 17501  0764  045A               	iorwf	___fladd@b,w
 17502  0765  1D03               	skipz
 17503  0766  2F87               	goto	l5230
 17504  0767  086D               	movf	___fladd@grs,w
 17505  0768  1D03               	btfss	3,2
 17506  0769  2F87               	goto	l5230
 17507  076A  3000               	movlw	0
 17508  076B  00DD               	movwf	?___fladd+3
 17509  076C  3000               	movlw	0
 17510  076D  00DC               	movwf	?___fladd+2
 17511  076E  3000               	movlw	0
 17512  076F  00DB               	movwf	?___fladd+1
 17513  0770  3000               	movlw	0
 17514  0771  00DA               	movwf	?___fladd
 17515  0772  0008               	return
 17516  0773                     l5216:	
 17517  0773  3001               	movlw	1
 17518  0774                     u6035:	
 17519  0774  35DA               	lslf	___fladd@b,f
 17520  0775  0DDB               	rlf	___fladd@b+1,f
 17521  0776  0DDC               	rlf	___fladd@b+2,f
 17522  0777  0DDD               	rlf	___fladd@b+3,f
 17523  0778  0B89               	decfsz	9,f
 17524  0779  2F74               	goto	u6035
 17525  077A  1BED               	btfsc	___fladd@grs,7
 17526  077B  145A               	bsf	___fladd@b,0
 17527  077C  1C6D               	btfss	___fladd@grs,0
 17528  077D  2F80               	goto	l5224
 17529  077E  1403               	setc
 17530  077F  2F81               	goto	L4
 17531  0780                     l5224:	
 17532  0780  1003               	clrc
 17533  0781                     L4:	
 17534  0781  0DED               	rlf	___fladd@grs,f
 17535  0782  086C               	movf	___fladd@bexp,w
 17536  0783  1903               	btfsc	3,2
 17537  0784  2F87               	goto	l5230
 17538  0785  3001               	movlw	1
 17539  0786  02EC               	subwf	___fladd@bexp,f
 17540  0787                     l5230:	
 17541  0787  1FDC               	btfss	___fladd@b+2,7
 17542  0788  2F73               	goto	l5216
 17543  0789                     l5232:	
 17544  0789  01EB               	clrf	___fladd@aexp
 17545  078A  1FED               	btfss	___fladd@grs,7
 17546  078B  2F94               	goto	l5242
 17547  078C  086D               	movf	___fladd@grs,w
 17548  078D  397F               	andlw	127
 17549  078E  1903               	btfsc	3,2
 17550  078F  185A               	btfsc	___fladd@b,0
 17551  0790  2F92               	goto	l5238
 17552  0791  2F94               	goto	l5242
 17553  0792                     l5238:	
 17554  0792  01EB               	clrf	___fladd@aexp
 17555  0793  0AEB               	incf	___fladd@aexp,f
 17556  0794                     l5242:	
 17557  0794  086B               	movf	___fladd@aexp,w
 17558  0795  1903               	btfsc	3,2
 17559  0796  2FC0               	goto	l1356
 17560  0797  3001               	movlw	1
 17561  0798  07DA               	addwf	___fladd@b,f
 17562  0799  3000               	movlw	0
 17563  079A  3DDB               	addwfc	___fladd@b+1,f
 17564  079B  3000               	movlw	0
 17565  079C  3DDC               	addwfc	___fladd@b+2,f
 17566  079D  3000               	movlw	0
 17567  079E  3DDD               	addwfc	___fladd@b+3,f
 17568  079F  1C5D               	btfss	___fladd@b+3,0
 17569  07A0  2FC0               	goto	l1356
 17570  07A1  085A               	movf	___fladd@b,w
 17571  07A2  00E2               	movwf	??___fladd
 17572  07A3  085B               	movf	___fladd@b+1,w
 17573  07A4  00E3               	movwf	??___fladd+1
 17574  07A5  085C               	movf	___fladd@b+2,w
 17575  07A6  00E4               	movwf	??___fladd+2
 17576  07A7  085D               	movf	___fladd@b+3,w
 17577  07A8  00E5               	movwf	??___fladd+3
 17578  07A9  3001               	movlw	1
 17579  07AA  00E6               	movwf	??___fladd+4
 17580  07AB                     u6135:	
 17581  07AB  37E5               	asrf	??___fladd+3,f
 17582  07AC  0CE4               	rrf	??___fladd+2,f
 17583  07AD  0CE3               	rrf	??___fladd+1,f
 17584  07AE  0CE2               	rrf	??___fladd,f
 17585  07AF  0BE6               	decfsz	??___fladd+4,f
 17586  07B0  2FAB               	goto	u6135
 17587  07B1  0865               	movf	??___fladd+3,w
 17588  07B2  00DD               	movwf	___fladd@b+3
 17589  07B3  0864               	movf	??___fladd+2,w
 17590  07B4  00DC               	movwf	___fladd@b+2
 17591  07B5  0863               	movf	??___fladd+1,w
 17592  07B6  00DB               	movwf	___fladd@b+1
 17593  07B7  0862               	movf	??___fladd,w
 17594  07B8  00DA               	movwf	___fladd@b
 17595  07B9  0A6C               	incf	___fladd@bexp,w
 17596  07BA  1903               	btfsc	3,2
 17597  07BB  2FC0               	goto	l1356
 17598  07BC  3001               	movlw	1
 17599  07BD  00E2               	movwf	??___fladd
 17600  07BE  0862               	movf	??___fladd,w
 17601  07BF  07EC               	addwf	___fladd@bexp,f
 17602  07C0                     l1356:	
 17603  07C0  0A6C               	incf	___fladd@bexp,w
 17604  07C1  1D03               	btfss	3,2
 17605  07C2  086C               	movf	___fladd@bexp,w
 17606  07C3  1D03               	btfss	3,2
 17607  07C4  2FD0               	goto	l5260
 17608  07C5  3000               	movlw	0
 17609  07C6  00DD               	movwf	___fladd@b+3
 17610  07C7  3000               	movlw	0
 17611  07C8  00DC               	movwf	___fladd@b+2
 17612  07C9  3000               	movlw	0
 17613  07CA  00DB               	movwf	___fladd@b+1
 17614  07CB  3000               	movlw	0
 17615  07CC  00DA               	movwf	___fladd@b
 17616  07CD  086C               	movf	___fladd@bexp,w
 17617  07CE  1903               	btfsc	3,2
 17618  07CF  01EA               	clrf	___fladd@signs
 17619  07D0                     l5260:	
 17620  07D0  1C6C               	btfss	___fladd@bexp,0
 17621  07D1  2FD4               	goto	l5264
 17622  07D2  17DC               	bsf	___fladd@b+2,7
 17623  07D3  2FD8               	goto	l1364
 17624  07D4                     l5264:	
 17625  07D4  307F               	movlw	127
 17626  07D5  00E2               	movwf	??___fladd
 17627  07D6  0862               	movf	??___fladd,w
 17628  07D7  05DC               	andwf	___fladd@b+2,f
 17629  07D8                     l1364:	
 17630  07D8  366C               	lsrf	___fladd@bexp,w
 17631  07D9  00E2               	movwf	??___fladd
 17632  07DA  0862               	movf	??___fladd,w
 17633  07DB  00DD               	movwf	___fladd@b+3
 17634  07DC  1FEA               	btfss	___fladd@signs,7
 17635  07DD  0008               	return
 17636  07DE  17DD               	bsf	___fladd@b+3,7
 17637  07DF  0008               	return
 17638  07E0                     __end_of___fladd:	
 17639                           
 17640                           	psect	text59
 17641  2012                     __ptext59:	
 17642 ;; *************** function _calibrate_BATTSOC *****************
 17643 ;; Defined at:
 17644 ;;		line 23 in file "algorithms.c"
 17645 ;; Parameters:    Size  Location     Type
 17646 ;;		None
 17647 ;; Auto vars:     Size  Location     Type
 17648 ;;  j               2   24[BANK1 ] int 
 17649 ;;  i               2   22[BANK1 ] int 
 17650 ;; Return value:  Size  Location     Type
 17651 ;;                  1    wreg      void 
 17652 ;; Registers used:
 17653 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17654 ;; Tracked objects:
 17655 ;;		On entry : 0/0
 17656 ;;		On exit  : 0/0
 17657 ;;		Unchanged: 0/0
 17658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17660 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17661 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17662 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17663 ;;Total ram usage:        9 bytes
 17664 ;; Hardware stack levels used:    1
 17665 ;; Hardware stack levels required when called:    3
 17666 ;; This function calls:
 17667 ;;		___fldiv
 17668 ;;		___flmul
 17669 ;;		___fltol
 17670 ;;		___xxtofl
 17671 ;; This function is called by:
 17672 ;;		_AFE_UPDATE
 17673 ;; This function uses a non-reentrant model
 17674 ;;
 17675                           
 17676                           
 17677                           ;psect for function _calibrate_BATTSOC
 17678  2012                     _calibrate_BATTSOC:	
 17679                           
 17680                           ;algorithms.c: 26:     for(int i = 0; i<5;i++){
 17681                           
 17682                           ;incstack = 0
 17683                           ; Regs used in _calibrate_BATTSOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17684  2012  0021               	movlb	1	; select bank1
 17685  2013  01B6               	clrf	calibrate_BATTSOC@i^(0+128)
 17686  2014  01B7               	clrf	(calibrate_BATTSOC@i+1)^(0+128)
 17687  2015                     l6108:	
 17688                           
 17689                           ;algorithms.c: 27:         for(int j = 0; j < 46; j++ ){
 17690  2015  0021               	movlb	1	; select bank1
 17691  2016  01B8               	clrf	calibrate_BATTSOC@j^(0+128)
 17692  2017  01B9               	clrf	(calibrate_BATTSOC@j+1)^(0+128)
 17693  2018                     l6114:	
 17694                           
 17695                           ;algorithms.c: 28:             if(cellVoltages[i]>=lookupTableSamsung_voltage[j]){
 17696  2018  0021               	movlb	1	; select bank1
 17697  2019  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 17698  201A  0085               	movwf	5
 17699  201B  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 17700  201C  0084               	movwf	4
 17701  201D  3584               	lslf	4,f
 17702  201E  0D85               	rlf	5,f
 17703  201F  305C               	movlw	low (_lookupTableSamsung_voltage| (0+32768))
 17704  2020  0784               	addwf	4,f
 17705  2021  30B0               	movlw	high (_lookupTableSamsung_voltage| (0+32768))
 17706  2022  3D85               	addwfc	5,f
 17707  2023  3F00               	moviw [0]fsr0
 17708  2024  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 17709  2025  3F01               	moviw [1]fsr0
 17710  2026  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 17711  2027  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 17712  2028  3EAA               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
 17713  2029  0086               	movwf	6
 17714  202A  3001               	movlw	1	; select bank3/4
 17715  202B  0087               	movwf	7
 17716  202C  3F40               	moviw [0]fsr1
 17717  202D  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 17718  202E  3F41               	moviw [1]fsr1
 17719  202F  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 17720  2030  0834               	movf	(??_calibrate_BATTSOC+3)^(0+128),w
 17721  2031  3A80               	xorlw	128
 17722  2032  00B5               	movwf	(??_calibrate_BATTSOC+4)^(0+128)
 17723  2033  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 17724  2034  3A80               	xorlw	128
 17725  2035  0235               	subwf	(??_calibrate_BATTSOC+4)^(0+128),w
 17726  2036  1D03               	skipz
 17727  2037  283A               	goto	u7605
 17728  2038  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 17729  2039  0233               	subwf	(??_calibrate_BATTSOC+2)^(0+128),w
 17730  203A                     u7605:	
 17731  203A  1C03               	skipc
 17732  203B  28B7               	goto	l6120
 17733                           
 17734                           ;algorithms.c: 29:                 cellSOC[i] = lookupTableSamsung_SOC[j];
 17735  203C  0021               	movlb	1	; select bank1
 17736  203D  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 17737  203E  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 17738  203F  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 17739  2040  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 17740  2041  35B1               	lslf	??_calibrate_BATTSOC^(0+128),f
 17741  2042  0DB2               	rlf	(??_calibrate_BATTSOC^(0+128)+1),f
 17742  2043  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 17743  2044  00B3               	movwf	(??_calibrate_BATTSOC+2)^(0+128)
 17744  2045  30B0               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 17745  2046  00B4               	movwf	((??_calibrate_BATTSOC+2)^(0+128)+1)
 17746  2047  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 17747  2048  0733               	addwf	(??_calibrate_BATTSOC+2)^(0+128),w
 17748  2049  0086               	movwf	6
 17749  204A  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 17750  204B  3D34               	addwfc	(??_calibrate_BATTSOC+3)^(0+128),w
 17751  204C  0087               	movwf	7
 17752  204D  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 17753  204E  3E20               	addlw	(low (_cellSOC| (0+512)))& (0+255)
 17754  204F  0084               	movwf	4
 17755  2050  3002               	movlw	2	; select bank4/5
 17756  2051  0085               	movwf	5
 17757  2052  3F40               	moviw [0]fsr1
 17758  2053  3F80               	movwi [0]fsr0
 17759  2054  3F41               	moviw [1]fsr1
 17760  2055  3F81               	movwi [1]fsr0
 17761                           
 17762                           ;algorithms.c: 30:                 cellCharge[i] = (lookupTableSamsung_SOC[j]/100.0) * s
      +                          amsung_cell_max_charge;
 17763  2056  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 17764  2057  0085               	movwf	5
 17765  2058  0838               	movf	calibrate_BATTSOC@j^(0+128),w
 17766  2059  0084               	movwf	4
 17767  205A  3584               	lslf	4,f
 17768  205B  0D85               	rlf	5,f
 17769  205C  3000               	movlw	low (_lookupTableSamsung_SOC| (0+32768))
 17770  205D  0784               	addwf	4,f
 17771  205E  30B0               	movlw	high (_lookupTableSamsung_SOC| (0+32768))
 17772  205F  3D85               	addwfc	5,f
 17773  2060  3F00               	moviw [0]fsr0
 17774  2061  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 17775  2062  3F01               	moviw [1]fsr0
 17776  2063  00B2               	movwf	(??_calibrate_BATTSOC^(0+128)+1)
 17777  2064  0831               	movf	??_calibrate_BATTSOC^(0+128),w
 17778  2065  00F1               	movwf	___xxtofl@val
 17779  2066  0832               	movf	(??_calibrate_BATTSOC+1)^(0+128),w
 17780  2067  00F2               	movwf	___xxtofl@val+1
 17781  2068  0D89               	rlf	9,f
 17782  2069  3B89               	subwfb	9,f
 17783  206A  0989               	comf	9,f
 17784  206B  00F3               	movwf	___xxtofl@val+2
 17785  206C  00F4               	movwf	___xxtofl@val+3
 17786  206D  3001               	movlw	1
 17787  206E  31AB  23E3  31A0   	fcall	___xxtofl
 17788  2071  0874               	movf	?___xxtofl+3,w
 17789  2072  0020               	movlb	0	; select bank0
 17790  2073  00C7               	movwf	___fldiv@b+3
 17791  2074  0873               	movf	?___xxtofl+2,w
 17792  2075  00C6               	movwf	___fldiv@b+2
 17793  2076  0872               	movf	?___xxtofl+1,w
 17794  2077  00C5               	movwf	___fldiv@b+1
 17795  2078  0871               	movf	?___xxtofl,w
 17796  2079  00C4               	movwf	___fldiv@b
 17797  207A  3042               	movlw	66
 17798  207B  00C3               	movwf	___fldiv@a+3
 17799  207C  30C8               	movlw	200
 17800  207D  00C2               	movwf	___fldiv@a+2
 17801  207E  3000               	movlw	0
 17802  207F  00C1               	movwf	___fldiv@a+1
 17803  2080  3000               	movlw	0
 17804  2081  00C0               	movwf	___fldiv@a
 17805  2082  319C  24E2  31A0   	fcall	___fldiv
 17806  2085  0020               	movlb	0	; select bank0
 17807  2086  0843               	movf	?___fldiv+3,w
 17808  2087  00AD               	movwf	___flmul@a+3
 17809  2088  0842               	movf	?___fldiv+2,w
 17810  2089  00AC               	movwf	___flmul@a+2
 17811  208A  0841               	movf	?___fldiv+1,w
 17812  208B  00AB               	movwf	___flmul@a+1
 17813  208C  0840               	movf	?___fldiv,w
 17814  208D  00AA               	movwf	___flmul@a
 17815  208E  3045               	movlw	69
 17816  208F  00A9               	movwf	___flmul@b+3
 17817  2090  301C               	movlw	28
 17818  2091  00A8               	movwf	___flmul@b+2
 17819  2092  3040               	movlw	64
 17820  2093  00A7               	movwf	___flmul@b+1
 17821  2094  3000               	movlw	0
 17822  2095  00A6               	movwf	___flmul@b
 17823  2096  3190  2022  31A0   	fcall	___flmul
 17824  2099  0020               	movlb	0	; select bank0
 17825  209A  0829               	movf	?___flmul+3,w
 17826  209B  0021               	movlb	1	; select bank1
 17827  209C  00AB               	movwf	(___fltol@f1+3)^(0+128)
 17828  209D  0020               	movlb	0	; select bank0
 17829  209E  0828               	movf	?___flmul+2,w
 17830  209F  0021               	movlb	1	; select bank1
 17831  20A0  00AA               	movwf	(___fltol@f1+2)^(0+128)
 17832  20A1  0020               	movlb	0	; select bank0
 17833  20A2  0827               	movf	?___flmul+1,w
 17834  20A3  0021               	movlb	1	; select bank1
 17835  20A4  00A9               	movwf	(___fltol@f1+1)^(0+128)
 17836  20A5  0020               	movlb	0	; select bank0
 17837  20A6  0826               	movf	?___flmul,w
 17838  20A7  0021               	movlb	1	; select bank1
 17839  20A8  00A8               	movwf	___fltol@f1^(0+128)
 17840  20A9  31A8  20A6  31A0   	fcall	___fltol
 17841  20AC  0021               	movlb	1	; select bank1
 17842  20AD  3536               	lslf	calibrate_BATTSOC@i^(0+128),w
 17843  20AE  3EA0               	addlw	(low (_cellCharge| (0+256)))& (0+255)
 17844  20AF  0086               	movwf	6
 17845  20B0  3001               	movlw	1	; select bank3/4
 17846  20B1  0087               	movwf	7
 17847  20B2  0828               	movf	?___fltol^(0+128),w
 17848  20B3  3FC0               	movwi [0]fsr1
 17849  20B4  0829               	movf	(?___fltol+1)^(0+128),w
 17850  20B5  3FC1               	movwi [1]fsr1
 17851                           
 17852                           ;algorithms.c: 31:                 break;
 17853  20B6  28C7               	goto	l6122
 17854  20B7                     l6120:	
 17855                           
 17856                           ;algorithms.c: 33:         }
 17857  20B7  3001               	movlw	1
 17858  20B8  0021               	movlb	1	; select bank1
 17859  20B9  07B8               	addwf	calibrate_BATTSOC@j^(0+128),f
 17860  20BA  3000               	movlw	0
 17861  20BB  3DB9               	addwfc	(calibrate_BATTSOC@j+1)^(0+128),f
 17862  20BC  0839               	movf	(calibrate_BATTSOC@j+1)^(0+128),w
 17863  20BD  3A80               	xorlw	128
 17864  20BE  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 17865  20BF  3080               	movlw	128
 17866  20C0  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 17867  20C1  1D03               	skipz
 17868  20C2  28C5               	goto	u7615
 17869  20C3  302E               	movlw	46
 17870  20C4  0238               	subwf	calibrate_BATTSOC@j^(0+128),w
 17871  20C5                     u7615:	
 17872  20C5  1C03               	skipc
 17873  20C6  2818               	goto	l6114
 17874  20C7                     l6122:	
 17875                           
 17876                           ;algorithms.c: 34:     }
 17877  20C7  3001               	movlw	1
 17878  20C8  0021               	movlb	1	; select bank1
 17879  20C9  07B6               	addwf	calibrate_BATTSOC@i^(0+128),f
 17880  20CA  3000               	movlw	0
 17881  20CB  3DB7               	addwfc	(calibrate_BATTSOC@i+1)^(0+128),f
 17882  20CC  0837               	movf	(calibrate_BATTSOC@i+1)^(0+128),w
 17883  20CD  3A80               	xorlw	128
 17884  20CE  00B1               	movwf	??_calibrate_BATTSOC^(0+128)
 17885  20CF  3080               	movlw	128
 17886  20D0  0231               	subwf	??_calibrate_BATTSOC^(0+128),w
 17887  20D1  1D03               	skipz
 17888  20D2  28D5               	goto	u7625
 17889  20D3  3005               	movlw	5
 17890  20D4  0236               	subwf	calibrate_BATTSOC@i^(0+128),w
 17891  20D5                     u7625:	
 17892  20D5  1803               	btfsc	3,0
 17893  20D6  0008               	return
 17894  20D7  2815               	goto	l6108
 17895  20D8                     __end_of_calibrate_BATTSOC:	
 17896                           
 17897                           	psect	text60
 17898  2BE3                     __ptext60:	
 17899 ;; *************** function ___xxtofl *****************
 17900 ;; Defined at:
 17901 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
 17902 ;; Parameters:    Size  Location     Type
 17903 ;;  sign            1    wreg     unsigned char 
 17904 ;;  val             4    1[COMMON] long 
 17905 ;; Auto vars:     Size  Location     Type
 17906 ;;  sign            1    0[BANK0 ] unsigned char 
 17907 ;;  arg             4    2[BANK0 ] unsigned long 
 17908 ;;  exp             1    1[BANK0 ] unsigned char 
 17909 ;; Return value:  Size  Location     Type
 17910 ;;                  4    1[COMMON] unsigned char 
 17911 ;; Registers used:
 17912 ;;		wreg, status,2, status,0
 17913 ;; Tracked objects:
 17914 ;;		On entry : 0/0
 17915 ;;		On exit  : 0/0
 17916 ;;		Unchanged: 0/0
 17917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17919 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17920 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17921 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17922 ;;Total ram usage:       14 bytes
 17923 ;; Hardware stack levels used:    1
 17924 ;; Hardware stack levels required when called:    1
 17925 ;; This function calls:
 17926 ;;		Nothing
 17927 ;; This function is called by:
 17928 ;;		_setShortCircuitProtection
 17929 ;;		_setOverCurrentDischargeProtection
 17930 ;;		_updateCurrent
 17931 ;;		_updateVoltages
 17932 ;;		_updateTemperatures
 17933 ;;		_calibrate_BATTSOC
 17934 ;;		_coulomb_counter
 17935 ;;		_logf
 17936 ;;		_AFE_getSetShortCircuitCurrent
 17937 ;;		_AFE_getOverCurrentDischargeCurrent
 17938 ;; This function uses a non-reentrant model
 17939 ;;
 17940                           
 17941                           
 17942                           ;psect for function ___xxtofl
 17943  2BE3                     ___xxtofl:	
 17944                           
 17945                           ;incstack = 0
 17946                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 17947                           ;___xxtofl@sign stored from wreg
 17948  2BE3  0020               	movlb	0	; select bank0
 17949  2BE4  00A0               	movwf	___xxtofl@sign
 17950  2BE5  0820               	movf	___xxtofl@sign,w
 17951  2BE6  1D03               	btfss	3,2
 17952  2BE7  1FF4               	btfss	___xxtofl@val+3,7
 17953  2BE8  2BF9               	goto	l5608
 17954  2BE9  0971               	comf	___xxtofl@val,w
 17955  2BEA  00A2               	movwf	___xxtofl@arg
 17956  2BEB  0972               	comf	___xxtofl@val+1,w
 17957  2BEC  00A3               	movwf	___xxtofl@arg+1
 17958  2BED  0973               	comf	___xxtofl@val+2,w
 17959  2BEE  00A4               	movwf	___xxtofl@arg+2
 17960  2BEF  0974               	comf	___xxtofl@val+3,w
 17961  2BF0  00A5               	movwf	___xxtofl@arg+3
 17962  2BF1  0AA2               	incf	___xxtofl@arg,f
 17963  2BF2  1903               	skipnz
 17964  2BF3  0AA3               	incf	___xxtofl@arg+1,f
 17965  2BF4  1903               	skipnz
 17966  2BF5  0AA4               	incf	___xxtofl@arg+2,f
 17967  2BF6  1903               	skipnz
 17968  2BF7  0AA5               	incf	___xxtofl@arg+3,f
 17969  2BF8  2C01               	goto	l1456
 17970  2BF9                     l5608:	
 17971  2BF9  0874               	movf	___xxtofl@val+3,w
 17972  2BFA  00A5               	movwf	___xxtofl@arg+3
 17973  2BFB  0873               	movf	___xxtofl@val+2,w
 17974  2BFC  00A4               	movwf	___xxtofl@arg+2
 17975  2BFD  0872               	movf	___xxtofl@val+1,w
 17976  2BFE  00A3               	movwf	___xxtofl@arg+1
 17977  2BFF  0871               	movf	___xxtofl@val,w
 17978  2C00  00A2               	movwf	___xxtofl@arg
 17979  2C01                     l1456:	
 17980  2C01  0874               	movf	___xxtofl@val+3,w
 17981  2C02  0473               	iorwf	___xxtofl@val+2,w
 17982  2C03  0472               	iorwf	___xxtofl@val+1,w
 17983  2C04  0471               	iorwf	___xxtofl@val,w
 17984  2C05  1D03               	skipz
 17985  2C06  2C10               	goto	l5614
 17986  2C07  3000               	movlw	0
 17987  2C08  00F4               	movwf	?___xxtofl+3
 17988  2C09  3000               	movlw	0
 17989  2C0A  00F3               	movwf	?___xxtofl+2
 17990  2C0B  3000               	movlw	0
 17991  2C0C  00F2               	movwf	?___xxtofl+1
 17992  2C0D  3000               	movlw	0
 17993  2C0E  00F1               	movwf	?___xxtofl
 17994  2C0F  0008               	return
 17995  2C10                     l5614:	
 17996  2C10  3096               	movlw	150
 17997  2C11  00F5               	movwf	??___xxtofl
 17998  2C12  0875               	movf	??___xxtofl,w
 17999  2C13  00A1               	movwf	___xxtofl@exp
 18000  2C14                     l5618:	
 18001  2C14  30FE               	movlw	254
 18002  2C15  0525               	andwf	___xxtofl@arg+3,w
 18003  2C16  1903               	btfsc	3,2
 18004  2C17  2C37               	goto	l1462
 18005  2C18  3001               	movlw	1
 18006  2C19  00F5               	movwf	??___xxtofl
 18007  2C1A  0875               	movf	??___xxtofl,w
 18008  2C1B  07A1               	addwf	___xxtofl@exp,f
 18009  2C1C  3001               	movlw	1
 18010  2C1D                     u6885:	
 18011  2C1D  36A5               	lsrf	___xxtofl@arg+3,f
 18012  2C1E  0CA4               	rrf	___xxtofl@arg+2,f
 18013  2C1F  0CA3               	rrf	___xxtofl@arg+1,f
 18014  2C20  0CA2               	rrf	___xxtofl@arg,f
 18015  2C21  0B89               	decfsz	9,f
 18016  2C22  2C1D               	goto	u6885
 18017  2C23  2C14               	goto	l5618
 18018  2C24                     l5620:	
 18019  2C24  3001               	movlw	1
 18020  2C25  00F5               	movwf	??___xxtofl
 18021  2C26  0875               	movf	??___xxtofl,w
 18022  2C27  07A1               	addwf	___xxtofl@exp,f
 18023  2C28  3001               	movlw	1
 18024  2C29  07A2               	addwf	___xxtofl@arg,f
 18025  2C2A  3000               	movlw	0
 18026  2C2B  3DA3               	addwfc	___xxtofl@arg+1,f
 18027  2C2C  3000               	movlw	0
 18028  2C2D  3DA4               	addwfc	___xxtofl@arg+2,f
 18029  2C2E  3000               	movlw	0
 18030  2C2F  3DA5               	addwfc	___xxtofl@arg+3,f
 18031  2C30  3001               	movlw	1
 18032  2C31                     u6905:	
 18033  2C31  36A5               	lsrf	___xxtofl@arg+3,f
 18034  2C32  0CA4               	rrf	___xxtofl@arg+2,f
 18035  2C33  0CA3               	rrf	___xxtofl@arg+1,f
 18036  2C34  0CA2               	rrf	___xxtofl@arg,f
 18037  2C35  0B89               	decfsz	9,f
 18038  2C36  2C31               	goto	u6905
 18039  2C37                     l1462:	
 18040  2C37  30FF               	movlw	255
 18041  2C38  0525               	andwf	___xxtofl@arg+3,w
 18042  2C39  1903               	btfsc	3,2
 18043  2C3A  2C49               	goto	l5628
 18044  2C3B  2C24               	goto	l5620
 18045  2C3C                     l5630:	
 18046  2C3C  3002               	movlw	2
 18047  2C3D  0221               	subwf	___xxtofl@exp,w
 18048  2C3E  1C03               	btfss	3,0
 18049  2C3F  2C4B               	goto	l1469
 18050  2C40  3001               	movlw	1
 18051  2C41  02A1               	subwf	___xxtofl@exp,f
 18052  2C42  3001               	movlw	1
 18053  2C43                     u6925:	
 18054  2C43  35A2               	lslf	___xxtofl@arg,f
 18055  2C44  0DA3               	rlf	___xxtofl@arg+1,f
 18056  2C45  0DA4               	rlf	___xxtofl@arg+2,f
 18057  2C46  0DA5               	rlf	___xxtofl@arg+3,f
 18058  2C47  0B89               	decfsz	9,f
 18059  2C48  2C43               	goto	u6925
 18060  2C49                     l5628:	
 18061  2C49  1FA4               	btfss	___xxtofl@arg+2,7
 18062  2C4A  2C3C               	goto	l5630
 18063  2C4B                     l1469:	
 18064  2C4B  1821               	btfsc	___xxtofl@exp,0
 18065  2C4C  2C55               	goto	l1470
 18066  2C4D  30FF               	movlw	255
 18067  2C4E  05A2               	andwf	___xxtofl@arg,f
 18068  2C4F  30FF               	movlw	255
 18069  2C50  05A3               	andwf	___xxtofl@arg+1,f
 18070  2C51  307F               	movlw	127
 18071  2C52  05A4               	andwf	___xxtofl@arg+2,f
 18072  2C53  30FF               	movlw	255
 18073  2C54  05A5               	andwf	___xxtofl@arg+3,f
 18074  2C55                     l1470:	
 18075  2C55  1003               	clrc
 18076  2C56  0CA1               	rrf	___xxtofl@exp,f
 18077  2C57  0821               	movf	___xxtofl@exp,w
 18078  2C58  00F5               	movwf	??___xxtofl
 18079  2C59  01F6               	clrf	??___xxtofl+1
 18080  2C5A  01F7               	clrf	??___xxtofl+2
 18081  2C5B  01F8               	clrf	??___xxtofl+3
 18082  2C5C  3018               	movlw	24
 18083  2C5D                     u6965:	
 18084  2C5D  35F5               	lslf	??___xxtofl,f
 18085  2C5E  0DF6               	rlf	??___xxtofl+1,f
 18086  2C5F  0DF7               	rlf	??___xxtofl+2,f
 18087  2C60  0DF8               	rlf	??___xxtofl+3,f
 18088  2C61  0B89               	decfsz	9,f
 18089  2C62  2C5D               	goto	u6965
 18090  2C63  0875               	movf	??___xxtofl,w
 18091  2C64  04A2               	iorwf	___xxtofl@arg,f
 18092  2C65  0876               	movf	??___xxtofl+1,w
 18093  2C66  04A3               	iorwf	___xxtofl@arg+1,f
 18094  2C67  0877               	movf	??___xxtofl+2,w
 18095  2C68  04A4               	iorwf	___xxtofl@arg+2,f
 18096  2C69  0878               	movf	??___xxtofl+3,w
 18097  2C6A  04A5               	iorwf	___xxtofl@arg+3,f
 18098  2C6B  0820               	movf	___xxtofl@sign,w
 18099  2C6C  1D03               	btfss	3,2
 18100  2C6D  1FF4               	btfss	___xxtofl@val+3,7
 18101  2C6E  2C70               	goto	l5642
 18102  2C6F  17A5               	bsf	___xxtofl@arg+3,7
 18103  2C70                     l5642:	
 18104  2C70  0825               	movf	___xxtofl@arg+3,w
 18105  2C71  00F4               	movwf	?___xxtofl+3
 18106  2C72  0824               	movf	___xxtofl@arg+2,w
 18107  2C73  00F3               	movwf	?___xxtofl+2
 18108  2C74  0823               	movf	___xxtofl@arg+1,w
 18109  2C75  00F2               	movwf	?___xxtofl+1
 18110  2C76  0822               	movf	___xxtofl@arg,w
 18111  2C77  00F1               	movwf	?___xxtofl
 18112  2C78  0008               	return
 18113  2C79                     __end_of___xxtofl:	
 18114                           
 18115                           	psect	text61
 18116  28A6                     __ptext61:	
 18117 ;; *************** function ___fltol *****************
 18118 ;; Defined at:
 18119 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
 18120 ;; Parameters:    Size  Location     Type
 18121 ;;  f1              4    8[BANK1 ] unsigned char 
 18122 ;; Auto vars:     Size  Location     Type
 18123 ;;  exp1            1   11[COMMON] unsigned char 
 18124 ;;  sign1           1   10[COMMON] unsigned char 
 18125 ;; Return value:  Size  Location     Type
 18126 ;;                  4    8[BANK1 ] long 
 18127 ;; Registers used:
 18128 ;;		wreg, status,2, status,0
 18129 ;; Tracked objects:
 18130 ;;		On entry : 0/0
 18131 ;;		On exit  : 0/0
 18132 ;;		Unchanged: 0/0
 18133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18134 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18136 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18137 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18138 ;;Total ram usage:       11 bytes
 18139 ;; Hardware stack levels used:    1
 18140 ;; Hardware stack levels required when called:    1
 18141 ;; This function calls:
 18142 ;;		Nothing
 18143 ;; This function is called by:
 18144 ;;		_updateCurrent
 18145 ;;		_updateVoltages
 18146 ;;		_updateTemperatures
 18147 ;;		_calibrate_BATTSOC
 18148 ;;		_coulomb_counter
 18149 ;;		_AFE_getSetShortCircuitCurrent
 18150 ;;		_AFE_getOverCurrentDischargeCurrent
 18151 ;; This function uses a non-reentrant model
 18152 ;;
 18153                           
 18154                           
 18155                           ;psect for function ___fltol
 18156  28A6                     ___fltol:	
 18157                           
 18158                           ;incstack = 0
 18159                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 18160  28A6  1003               	clrc
 18161  28A7  0021               	movlb	1	; select bank1
 18162  28A8  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
 18163  28A9  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
 18164  28AA  00AC               	movwf	??___fltol^(0+128)
 18165  28AB  082C               	movf	??___fltol^(0+128),w
 18166  28AC  00FB               	movwf	___fltol@exp1
 18167  28AD  087B               	movf	___fltol@exp1,w
 18168  28AE  1D03               	btfss	3,2
 18169  28AF  28B9               	goto	l5852
 18170  28B0                     l5848:	
 18171  28B0  3000               	movlw	0
 18172  28B1  00AB               	movwf	(?___fltol+3)^(0+128)
 18173  28B2  3000               	movlw	0
 18174  28B3  00AA               	movwf	(?___fltol+2)^(0+128)
 18175  28B4  3000               	movlw	0
 18176  28B5  00A9               	movwf	(?___fltol+1)^(0+128)
 18177  28B6  3000               	movlw	0
 18178  28B7  00A8               	movwf	?___fltol^(0+128)
 18179  28B8  0008               	return
 18180  28B9                     l5852:	
 18181  28B9  0828               	movf	___fltol@f1^(0+128),w
 18182  28BA  00AC               	movwf	??___fltol^(0+128)
 18183  28BB  0829               	movf	(___fltol@f1+1)^(0+128),w
 18184  28BC  00AD               	movwf	(??___fltol^(0+128)+1)
 18185  28BD  082A               	movf	(___fltol@f1+2)^(0+128),w
 18186  28BE  00AE               	movwf	(??___fltol^(0+128)+2)
 18187  28BF  082B               	movf	(___fltol@f1+3)^(0+128),w
 18188  28C0  00AF               	movwf	(??___fltol^(0+128)+3)
 18189  28C1  301F               	movlw	31
 18190  28C2                     u7315:	
 18191  28C2  36AF               	lsrf	(??___fltol^(0+128)+3),f
 18192  28C3  0CAE               	rrf	(??___fltol^(0+128)+2),f
 18193  28C4  0CAD               	rrf	(??___fltol^(0+128)+1),f
 18194  28C5  0CAC               	rrf	??___fltol^(0+128),f
 18195  28C6  0B89               	decfsz	9,f
 18196  28C7  28C2               	goto	u7315
 18197  28C8  082C               	movf	??___fltol^(0+128),w
 18198  28C9  00B0               	movwf	(??___fltol+4)^(0+128)
 18199  28CA  0830               	movf	(??___fltol+4)^(0+128),w
 18200  28CB  00FA               	movwf	___fltol@sign1
 18201  28CC  17AA               	bsf	(___fltol@f1^(0+128)+2),7
 18202  28CD  30FF               	movlw	255
 18203  28CE  05A8               	andwf	___fltol@f1^(0+128),f
 18204  28CF  30FF               	movlw	255
 18205  28D0  05A9               	andwf	(___fltol@f1+1)^(0+128),f
 18206  28D1  30FF               	movlw	255
 18207  28D2  05AA               	andwf	(___fltol@f1+2)^(0+128),f
 18208  28D3  3000               	movlw	0
 18209  28D4  05AB               	andwf	(___fltol@f1+3)^(0+128),f
 18210  28D5  3096               	movlw	150
 18211  28D6  02FB               	subwf	___fltol@exp1,f
 18212  28D7  1FFB               	btfss	___fltol@exp1,7
 18213  28D8  28EC               	goto	l5870
 18214  28D9  087B               	movf	___fltol@exp1,w
 18215  28DA  3A80               	xorlw	128
 18216  28DB  3E97               	addlw	151
 18217  28DC  1C03               	btfss	3,0
 18218  28DD  28B0               	goto	l5848
 18219  28DE                     l5868:	
 18220  28DE  3001               	movlw	1
 18221  28DF                     u7345:	
 18222  28DF  36AB               	lsrf	(___fltol@f1+3)^(0+128),f
 18223  28E0  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
 18224  28E1  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
 18225  28E2  0CA8               	rrf	___fltol@f1^(0+128),f
 18226  28E3  0B89               	decfsz	9,f
 18227  28E4  28DF               	goto	u7345
 18228  28E5  3001               	movlw	1
 18229  28E6  00AC               	movwf	??___fltol^(0+128)
 18230  28E7  082C               	movf	??___fltol^(0+128),w
 18231  28E8  07FB               	addwf	___fltol@exp1,f
 18232  28E9  1903               	btfsc	3,2
 18233  28EA  28FD               	goto	l5878
 18234  28EB  28DE               	goto	l5868
 18235  28EC                     l5870:	
 18236  28EC  3020               	movlw	32
 18237  28ED  027B               	subwf	___fltol@exp1,w
 18238  28EE  1803               	btfsc	3,0
 18239  28EF  28B0               	goto	l5848
 18240  28F0                     l1222:	
 18241  28F0  087B               	movf	___fltol@exp1,w
 18242  28F1  1903               	btfsc	3,2
 18243  28F2  28FD               	goto	l5878
 18244  28F3  3001               	movlw	1
 18245  28F4                     u7375:	
 18246  28F4  35A8               	lslf	___fltol@f1^(0+128),f
 18247  28F5  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
 18248  28F6  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
 18249  28F7  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
 18250  28F8  0B89               	decfsz	9,f
 18251  28F9  28F4               	goto	u7375
 18252  28FA  3001               	movlw	1
 18253  28FB  02FB               	subwf	___fltol@exp1,f
 18254  28FC  28F0               	goto	l1222
 18255  28FD                     l5878:	
 18256  28FD  087A               	movf	___fltol@sign1,w
 18257  28FE  1903               	btfsc	3,2
 18258  28FF  0008               	return
 18259  2900  09A8               	comf	___fltol@f1^(0+128),f
 18260  2901  09A9               	comf	(___fltol@f1+1)^(0+128),f
 18261  2902  09AA               	comf	(___fltol@f1+2)^(0+128),f
 18262  2903  09AB               	comf	(___fltol@f1+3)^(0+128),f
 18263  2904  0AA8               	incf	___fltol@f1^(0+128),f
 18264  2905  1903               	skipnz
 18265  2906  0AA9               	incf	(___fltol@f1+1)^(0+128),f
 18266  2907  1903               	skipnz
 18267  2908  0AAA               	incf	(___fltol@f1+2)^(0+128),f
 18268  2909  1903               	skipnz
 18269  290A  0AAB               	incf	(___fltol@f1+3)^(0+128),f
 18270  290B  0008               	return
 18271  290C                     __end_of___fltol:	
 18272                           
 18273                           	psect	text62
 18274  1022                     __ptext62:	
 18275 ;; *************** function ___flmul *****************
 18276 ;; Defined at:
 18277 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
 18278 ;; Parameters:    Size  Location     Type
 18279 ;;  b               4    6[BANK0 ] long 
 18280 ;;  a               4   10[BANK0 ] long 
 18281 ;; Auto vars:     Size  Location     Type
 18282 ;;  prod            4   26[BANK0 ] struct .
 18283 ;;  grs             4   20[BANK0 ] unsigned long 
 18284 ;;  temp            2   30[BANK0 ] struct .
 18285 ;;  bexp            1   25[BANK0 ] unsigned char 
 18286 ;;  aexp            1   24[BANK0 ] unsigned char 
 18287 ;;  sign            1   19[BANK0 ] unsigned char 
 18288 ;; Return value:  Size  Location     Type
 18289 ;;                  4    6[BANK0 ] unsigned char 
 18290 ;; Registers used:
 18291 ;;		wreg, status,2, status,0, pclath, cstack
 18292 ;; Tracked objects:
 18293 ;;		On entry : 0/0
 18294 ;;		On exit  : 0/0
 18295 ;;		Unchanged: 0/0
 18296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18297 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18298 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18299 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18300 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18301 ;;Total ram usage:       26 bytes
 18302 ;; Hardware stack levels used:    1
 18303 ;; Hardware stack levels required when called:    2
 18304 ;; This function calls:
 18305 ;;		__Umul8_16
 18306 ;; This function is called by:
 18307 ;;		_setShortCircuitProtection
 18308 ;;		_setOverCurrentDischargeProtection
 18309 ;;		_updateCurrent
 18310 ;;		_updateVoltages
 18311 ;;		_updateTemperatures
 18312 ;;		_calibrate_BATTSOC
 18313 ;;		_coulomb_counter
 18314 ;;		_logf
 18315 ;; This function uses a non-reentrant model
 18316 ;;
 18317                           
 18318                           
 18319                           ;psect for function ___flmul
 18320  1022                     ___flmul:	
 18321                           
 18322                           ;incstack = 0
 18323                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 18324  1022  0020               	movlb	0	; select bank0
 18325  1023  0829               	movf	___flmul@b+3,w
 18326  1024  3980               	andlw	128
 18327  1025  00AE               	movwf	??___flmul
 18328  1026  082E               	movf	??___flmul,w
 18329  1027  00B3               	movwf	___flmul@sign
 18330  1028  3529               	lslf	___flmul@b+3,w
 18331  1029  00AE               	movwf	??___flmul
 18332  102A  082E               	movf	??___flmul,w
 18333  102B  00B9               	movwf	___flmul@bexp
 18334  102C  1BA8               	btfsc	___flmul@b+2,7
 18335  102D  1439               	bsf	___flmul@bexp,0
 18336  102E  0839               	movf	___flmul@bexp,w
 18337  102F  1903               	btfsc	3,2
 18338  1030  283E               	goto	l5478
 18339  1031  0A39               	incf	___flmul@bexp,w
 18340  1032  1D03               	btfss	3,2
 18341  1033  283C               	goto	l5476
 18342  1034  3000               	movlw	0
 18343  1035  00A9               	movwf	___flmul@b+3
 18344  1036  3000               	movlw	0
 18345  1037  00A8               	movwf	___flmul@b+2
 18346  1038  3000               	movlw	0
 18347  1039  00A7               	movwf	___flmul@b+1
 18348  103A  3000               	movlw	0
 18349  103B  00A6               	movwf	___flmul@b
 18350  103C                     l5476:	
 18351  103C  17A8               	bsf	___flmul@b+2,7
 18352  103D  2846               	goto	l5480
 18353  103E                     l5478:	
 18354  103E  3000               	movlw	0
 18355  103F  00A9               	movwf	___flmul@b+3
 18356  1040  3000               	movlw	0
 18357  1041  00A8               	movwf	___flmul@b+2
 18358  1042  3000               	movlw	0
 18359  1043  00A7               	movwf	___flmul@b+1
 18360  1044  3000               	movlw	0
 18361  1045  00A6               	movwf	___flmul@b
 18362  1046                     l5480:	
 18363  1046  082D               	movf	___flmul@a+3,w
 18364  1047  3980               	andlw	128
 18365  1048  00AE               	movwf	??___flmul
 18366  1049  082E               	movf	??___flmul,w
 18367  104A  06B3               	xorwf	___flmul@sign,f
 18368  104B  352D               	lslf	___flmul@a+3,w
 18369  104C  00AE               	movwf	??___flmul
 18370  104D  082E               	movf	??___flmul,w
 18371  104E  00B8               	movwf	___flmul@aexp
 18372  104F  1BAC               	btfsc	___flmul@a+2,7
 18373  1050  1438               	bsf	___flmul@aexp,0
 18374  1051  0838               	movf	___flmul@aexp,w
 18375  1052  1903               	btfsc	3,2
 18376  1053  2861               	goto	l5496
 18377  1054  0A38               	incf	___flmul@aexp,w
 18378  1055  1D03               	btfss	3,2
 18379  1056  285F               	goto	l5494
 18380  1057  3000               	movlw	0
 18381  1058  00AD               	movwf	___flmul@a+3
 18382  1059  3000               	movlw	0
 18383  105A  00AC               	movwf	___flmul@a+2
 18384  105B  3000               	movlw	0
 18385  105C  00AB               	movwf	___flmul@a+1
 18386  105D  3000               	movlw	0
 18387  105E  00AA               	movwf	___flmul@a
 18388  105F                     l5494:	
 18389  105F  17AC               	bsf	___flmul@a+2,7
 18390  1060  2869               	goto	l5498
 18391  1061                     l5496:	
 18392  1061  3000               	movlw	0
 18393  1062  00AD               	movwf	___flmul@a+3
 18394  1063  3000               	movlw	0
 18395  1064  00AC               	movwf	___flmul@a+2
 18396  1065  3000               	movlw	0
 18397  1066  00AB               	movwf	___flmul@a+1
 18398  1067  3000               	movlw	0
 18399  1068  00AA               	movwf	___flmul@a
 18400  1069                     l5498:	
 18401  1069  0838               	movf	___flmul@aexp,w
 18402  106A  1D03               	btfss	3,2
 18403  106B  0839               	movf	___flmul@bexp,w
 18404  106C  1D03               	btfss	3,2
 18405  106D  2877               	goto	l5506
 18406  106E  3000               	movlw	0
 18407  106F  00A9               	movwf	?___flmul+3
 18408  1070  3000               	movlw	0
 18409  1071  00A8               	movwf	?___flmul+2
 18410  1072  3000               	movlw	0
 18411  1073  00A7               	movwf	?___flmul+1
 18412  1074  3000               	movlw	0
 18413  1075  00A6               	movwf	?___flmul
 18414  1076  0008               	return
 18415  1077                     l5506:	
 18416  1077  0826               	movf	___flmul@b,w
 18417  1078  00AE               	movwf	??___flmul
 18418  1079  082E               	movf	??___flmul,w
 18419  107A  00F1               	movwf	__Umul8_16@multiplicand
 18420  107B  082C               	movf	___flmul@a+2,w
 18421  107C  3187  27E0  3190   	fcall	__Umul8_16
 18422  107F  0872               	movf	?__Umul8_16+1,w
 18423  1080  0020               	movlb	0	; select bank0
 18424  1081  00BF               	movwf	___flmul@temp+1
 18425  1082  0871               	movf	?__Umul8_16,w
 18426  1083  00BE               	movwf	___flmul@temp
 18427  1084  083E               	movf	___flmul@temp,w
 18428  1085  00AE               	movwf	??___flmul
 18429  1086  01AF               	clrf	??___flmul+1
 18430  1087  01B0               	clrf	??___flmul+2
 18431  1088  01B1               	clrf	??___flmul+3
 18432  1089  0831               	movf	??___flmul+3,w
 18433  108A  00B7               	movwf	___flmul@grs+3
 18434  108B  0830               	movf	??___flmul+2,w
 18435  108C  00B6               	movwf	___flmul@grs+2
 18436  108D  082F               	movf	??___flmul+1,w
 18437  108E  00B5               	movwf	___flmul@grs+1
 18438  108F  082E               	movf	??___flmul,w
 18439  1090  00B4               	movwf	___flmul@grs
 18440  1091  083F               	movf	___flmul@temp+1,w
 18441  1092  00AE               	movwf	??___flmul
 18442  1093  01AF               	clrf	??___flmul+1
 18443  1094  01B0               	clrf	??___flmul+2
 18444  1095  01B1               	clrf	??___flmul+3
 18445  1096  0831               	movf	??___flmul+3,w
 18446  1097  00BD               	movwf	___flmul@prod+3
 18447  1098  0830               	movf	??___flmul+2,w
 18448  1099  00BC               	movwf	___flmul@prod+2
 18449  109A  082F               	movf	??___flmul+1,w
 18450  109B  00BB               	movwf	___flmul@prod+1
 18451  109C  082E               	movf	??___flmul,w
 18452  109D  00BA               	movwf	___flmul@prod
 18453  109E  0827               	movf	___flmul@b+1,w
 18454  109F  00AE               	movwf	??___flmul
 18455  10A0  082E               	movf	??___flmul,w
 18456  10A1  00F1               	movwf	__Umul8_16@multiplicand
 18457  10A2  082B               	movf	___flmul@a+1,w
 18458  10A3  3187  27E0  3190   	fcall	__Umul8_16
 18459  10A6  0872               	movf	?__Umul8_16+1,w
 18460  10A7  0020               	movlb	0	; select bank0
 18461  10A8  00BF               	movwf	___flmul@temp+1
 18462  10A9  0871               	movf	?__Umul8_16,w
 18463  10AA  00BE               	movwf	___flmul@temp
 18464  10AB  083E               	movf	___flmul@temp,w
 18465  10AC  00AE               	movwf	??___flmul
 18466  10AD  01AF               	clrf	??___flmul+1
 18467  10AE  01B0               	clrf	??___flmul+2
 18468  10AF  01B1               	clrf	??___flmul+3
 18469  10B0  082E               	movf	??___flmul,w
 18470  10B1  07B4               	addwf	___flmul@grs,f
 18471  10B2  082F               	movf	??___flmul+1,w
 18472  10B3  3DB5               	addwfc	___flmul@grs+1,f
 18473  10B4  0830               	movf	??___flmul+2,w
 18474  10B5  3DB6               	addwfc	___flmul@grs+2,f
 18475  10B6  0831               	movf	??___flmul+3,w
 18476  10B7  3DB7               	addwfc	___flmul@grs+3,f
 18477  10B8  083F               	movf	___flmul@temp+1,w
 18478  10B9  00AE               	movwf	??___flmul
 18479  10BA  01AF               	clrf	??___flmul+1
 18480  10BB  01B0               	clrf	??___flmul+2
 18481  10BC  01B1               	clrf	??___flmul+3
 18482  10BD  082E               	movf	??___flmul,w
 18483  10BE  07BA               	addwf	___flmul@prod,f
 18484  10BF  082F               	movf	??___flmul+1,w
 18485  10C0  3DBB               	addwfc	___flmul@prod+1,f
 18486  10C1  0830               	movf	??___flmul+2,w
 18487  10C2  3DBC               	addwfc	___flmul@prod+2,f
 18488  10C3  0831               	movf	??___flmul+3,w
 18489  10C4  3DBD               	addwfc	___flmul@prod+3,f
 18490  10C5  0828               	movf	___flmul@b+2,w
 18491  10C6  00AE               	movwf	??___flmul
 18492  10C7  082E               	movf	??___flmul,w
 18493  10C8  00F1               	movwf	__Umul8_16@multiplicand
 18494  10C9  082A               	movf	___flmul@a,w
 18495  10CA  3187  27E0  3190   	fcall	__Umul8_16
 18496  10CD  0872               	movf	?__Umul8_16+1,w
 18497  10CE  0020               	movlb	0	; select bank0
 18498  10CF  00BF               	movwf	___flmul@temp+1
 18499  10D0  0871               	movf	?__Umul8_16,w
 18500  10D1  00BE               	movwf	___flmul@temp
 18501  10D2  083E               	movf	___flmul@temp,w
 18502  10D3  00AE               	movwf	??___flmul
 18503  10D4  01AF               	clrf	??___flmul+1
 18504  10D5  01B0               	clrf	??___flmul+2
 18505  10D6  01B1               	clrf	??___flmul+3
 18506  10D7  082E               	movf	??___flmul,w
 18507  10D8  07B4               	addwf	___flmul@grs,f
 18508  10D9  082F               	movf	??___flmul+1,w
 18509  10DA  3DB5               	addwfc	___flmul@grs+1,f
 18510  10DB  0830               	movf	??___flmul+2,w
 18511  10DC  3DB6               	addwfc	___flmul@grs+2,f
 18512  10DD  0831               	movf	??___flmul+3,w
 18513  10DE  3DB7               	addwfc	___flmul@grs+3,f
 18514  10DF  083F               	movf	___flmul@temp+1,w
 18515  10E0  00AE               	movwf	??___flmul
 18516  10E1  01AF               	clrf	??___flmul+1
 18517  10E2  01B0               	clrf	??___flmul+2
 18518  10E3  01B1               	clrf	??___flmul+3
 18519  10E4  082E               	movf	??___flmul,w
 18520  10E5  07BA               	addwf	___flmul@prod,f
 18521  10E6  082F               	movf	??___flmul+1,w
 18522  10E7  3DBB               	addwfc	___flmul@prod+1,f
 18523  10E8  0830               	movf	??___flmul+2,w
 18524  10E9  3DBC               	addwfc	___flmul@prod+2,f
 18525  10EA  0831               	movf	??___flmul+3,w
 18526  10EB  3DBD               	addwfc	___flmul@prod+3,f
 18527  10EC  3008               	movlw	8
 18528  10ED                     u6675:	
 18529  10ED  35B4               	lslf	___flmul@grs,f
 18530  10EE  0DB5               	rlf	___flmul@grs+1,f
 18531  10EF  0DB6               	rlf	___flmul@grs+2,f
 18532  10F0  0DB7               	rlf	___flmul@grs+3,f
 18533  10F1  0B89               	decfsz	9,f
 18534  10F2  28ED               	goto	u6675
 18535  10F3  0827               	movf	___flmul@b+1,w
 18536  10F4  00AE               	movwf	??___flmul
 18537  10F5  082E               	movf	??___flmul,w
 18538  10F6  00F1               	movwf	__Umul8_16@multiplicand
 18539  10F7  082A               	movf	___flmul@a,w
 18540  10F8  3187  27E0  3190   	fcall	__Umul8_16
 18541  10FB  0872               	movf	?__Umul8_16+1,w
 18542  10FC  0020               	movlb	0	; select bank0
 18543  10FD  00BF               	movwf	___flmul@temp+1
 18544  10FE  0871               	movf	?__Umul8_16,w
 18545  10FF  00BE               	movwf	___flmul@temp
 18546  1100  083E               	movf	___flmul@temp,w
 18547  1101  07B4               	addwf	___flmul@grs,f
 18548  1102  083F               	movf	___flmul@temp+1,w
 18549  1103  3DB5               	addwfc	___flmul@grs+1,f
 18550  1104  3000               	movlw	0
 18551  1105  3DB6               	addwfc	___flmul@grs+2,f
 18552  1106  3DB7               	addwfc	___flmul@grs+3,f
 18553  1107  0826               	movf	___flmul@b,w
 18554  1108  00AE               	movwf	??___flmul
 18555  1109  082E               	movf	??___flmul,w
 18556  110A  00F1               	movwf	__Umul8_16@multiplicand
 18557  110B  082B               	movf	___flmul@a+1,w
 18558  110C  3187  27E0  3190   	fcall	__Umul8_16
 18559  110F  0872               	movf	?__Umul8_16+1,w
 18560  1110  0020               	movlb	0	; select bank0
 18561  1111  00BF               	movwf	___flmul@temp+1
 18562  1112  0871               	movf	?__Umul8_16,w
 18563  1113  00BE               	movwf	___flmul@temp
 18564  1114  083E               	movf	___flmul@temp,w
 18565  1115  07B4               	addwf	___flmul@grs,f
 18566  1116  083F               	movf	___flmul@temp+1,w
 18567  1117  3DB5               	addwfc	___flmul@grs+1,f
 18568  1118  3000               	movlw	0
 18569  1119  3DB6               	addwfc	___flmul@grs+2,f
 18570  111A  3DB7               	addwfc	___flmul@grs+3,f
 18571  111B  3008               	movlw	8
 18572  111C                     u6685:	
 18573  111C  35B4               	lslf	___flmul@grs,f
 18574  111D  0DB5               	rlf	___flmul@grs+1,f
 18575  111E  0DB6               	rlf	___flmul@grs+2,f
 18576  111F  0DB7               	rlf	___flmul@grs+3,f
 18577  1120  0B89               	decfsz	9,f
 18578  1121  291C               	goto	u6685
 18579  1122  0826               	movf	___flmul@b,w
 18580  1123  00AE               	movwf	??___flmul
 18581  1124  082E               	movf	??___flmul,w
 18582  1125  00F1               	movwf	__Umul8_16@multiplicand
 18583  1126  082A               	movf	___flmul@a,w
 18584  1127  3187  27E0  3190   	fcall	__Umul8_16
 18585  112A  0872               	movf	?__Umul8_16+1,w
 18586  112B  0020               	movlb	0	; select bank0
 18587  112C  00BF               	movwf	___flmul@temp+1
 18588  112D  0871               	movf	?__Umul8_16,w
 18589  112E  00BE               	movwf	___flmul@temp
 18590  112F  083E               	movf	___flmul@temp,w
 18591  1130  07B4               	addwf	___flmul@grs,f
 18592  1131  083F               	movf	___flmul@temp+1,w
 18593  1132  3DB5               	addwfc	___flmul@grs+1,f
 18594  1133  3000               	movlw	0
 18595  1134  3DB6               	addwfc	___flmul@grs+2,f
 18596  1135  3DB7               	addwfc	___flmul@grs+3,f
 18597  1136  0827               	movf	___flmul@b+1,w
 18598  1137  00AE               	movwf	??___flmul
 18599  1138  082E               	movf	??___flmul,w
 18600  1139  00F1               	movwf	__Umul8_16@multiplicand
 18601  113A  082C               	movf	___flmul@a+2,w
 18602  113B  3187  27E0  3190   	fcall	__Umul8_16
 18603  113E  0872               	movf	?__Umul8_16+1,w
 18604  113F  0020               	movlb	0	; select bank0
 18605  1140  00BF               	movwf	___flmul@temp+1
 18606  1141  0871               	movf	?__Umul8_16,w
 18607  1142  00BE               	movwf	___flmul@temp
 18608  1143  083E               	movf	___flmul@temp,w
 18609  1144  07BA               	addwf	___flmul@prod,f
 18610  1145  083F               	movf	___flmul@temp+1,w
 18611  1146  3DBB               	addwfc	___flmul@prod+1,f
 18612  1147  3000               	movlw	0
 18613  1148  3DBC               	addwfc	___flmul@prod+2,f
 18614  1149  3DBD               	addwfc	___flmul@prod+3,f
 18615  114A  0828               	movf	___flmul@b+2,w
 18616  114B  00AE               	movwf	??___flmul
 18617  114C  082E               	movf	??___flmul,w
 18618  114D  00F1               	movwf	__Umul8_16@multiplicand
 18619  114E  082B               	movf	___flmul@a+1,w
 18620  114F  3187  27E0  3190   	fcall	__Umul8_16
 18621  1152  0872               	movf	?__Umul8_16+1,w
 18622  1153  0020               	movlb	0	; select bank0
 18623  1154  00BF               	movwf	___flmul@temp+1
 18624  1155  0871               	movf	?__Umul8_16,w
 18625  1156  00BE               	movwf	___flmul@temp
 18626  1157  083E               	movf	___flmul@temp,w
 18627  1158  07BA               	addwf	___flmul@prod,f
 18628  1159  083F               	movf	___flmul@temp+1,w
 18629  115A  3DBB               	addwfc	___flmul@prod+1,f
 18630  115B  3000               	movlw	0
 18631  115C  3DBC               	addwfc	___flmul@prod+2,f
 18632  115D  3DBD               	addwfc	___flmul@prod+3,f
 18633  115E  0828               	movf	___flmul@b+2,w
 18634  115F  00AE               	movwf	??___flmul
 18635  1160  082E               	movf	??___flmul,w
 18636  1161  00F1               	movwf	__Umul8_16@multiplicand
 18637  1162  082C               	movf	___flmul@a+2,w
 18638  1163  3187  27E0  3190   	fcall	__Umul8_16
 18639  1166  0872               	movf	?__Umul8_16+1,w
 18640  1167  0020               	movlb	0	; select bank0
 18641  1168  00BF               	movwf	___flmul@temp+1
 18642  1169  0871               	movf	?__Umul8_16,w
 18643  116A  00BE               	movwf	___flmul@temp
 18644  116B  083E               	movf	___flmul@temp,w
 18645  116C  00AE               	movwf	??___flmul
 18646  116D  083F               	movf	___flmul@temp+1,w
 18647  116E  00AF               	movwf	??___flmul+1
 18648  116F  01B0               	clrf	??___flmul+2
 18649  1170  01B1               	clrf	??___flmul+3
 18650  1171  3008               	movlw	8
 18651  1172                     u6695:	
 18652  1172  35AE               	lslf	??___flmul,f
 18653  1173  0DAF               	rlf	??___flmul+1,f
 18654  1174  0DB0               	rlf	??___flmul+2,f
 18655  1175  0DB1               	rlf	??___flmul+3,f
 18656  1176  0B89               	decfsz	9,f
 18657  1177  2972               	goto	u6695
 18658  1178  082E               	movf	??___flmul,w
 18659  1179  07BA               	addwf	___flmul@prod,f
 18660  117A  082F               	movf	??___flmul+1,w
 18661  117B  3DBB               	addwfc	___flmul@prod+1,f
 18662  117C  0830               	movf	??___flmul+2,w
 18663  117D  3DBC               	addwfc	___flmul@prod+2,f
 18664  117E  0831               	movf	??___flmul+3,w
 18665  117F  3DBD               	addwfc	___flmul@prod+3,f
 18666  1180  0834               	movf	___flmul@grs,w
 18667  1181  00AE               	movwf	??___flmul
 18668  1182  0835               	movf	___flmul@grs+1,w
 18669  1183  00AF               	movwf	??___flmul+1
 18670  1184  0836               	movf	___flmul@grs+2,w
 18671  1185  00B0               	movwf	??___flmul+2
 18672  1186  0837               	movf	___flmul@grs+3,w
 18673  1187  00B1               	movwf	??___flmul+3
 18674  1188  3018               	movlw	24
 18675  1189                     u6705:	
 18676  1189  36B1               	lsrf	??___flmul+3,f
 18677  118A  0CB0               	rrf	??___flmul+2,f
 18678  118B  0CAF               	rrf	??___flmul+1,f
 18679  118C  0CAE               	rrf	??___flmul,f
 18680  118D  0B89               	decfsz	9,f
 18681  118E  2989               	goto	u6705
 18682  118F  082E               	movf	??___flmul,w
 18683  1190  07BA               	addwf	___flmul@prod,f
 18684  1191  082F               	movf	??___flmul+1,w
 18685  1192  3DBB               	addwfc	___flmul@prod+1,f
 18686  1193  0830               	movf	??___flmul+2,w
 18687  1194  3DBC               	addwfc	___flmul@prod+2,f
 18688  1195  0831               	movf	??___flmul+3,w
 18689  1196  3DBD               	addwfc	___flmul@prod+3,f
 18690  1197  3008               	movlw	8
 18691  1198                     u6715:	
 18692  1198  35B4               	lslf	___flmul@grs,f
 18693  1199  0DB5               	rlf	___flmul@grs+1,f
 18694  119A  0DB6               	rlf	___flmul@grs+2,f
 18695  119B  0DB7               	rlf	___flmul@grs+3,f
 18696  119C  0B89               	decfsz	9,f
 18697  119D  2998               	goto	u6715
 18698  119E  0839               	movf	___flmul@bexp,w
 18699  119F  0738               	addwf	___flmul@aexp,w
 18700  11A0  00AE               	movwf	??___flmul
 18701  11A1  01AF               	clrf	??___flmul+1
 18702  11A2  0DAF               	rlf	??___flmul+1,f
 18703  11A3  082E               	movf	??___flmul,w
 18704  11A4  3E82               	addlw	130
 18705  11A5  00BE               	movwf	___flmul@temp
 18706  11A6  30FF               	movlw	255
 18707  11A7  3D2F               	addwfc	??___flmul+1,w
 18708  11A8  00BF               	movwf	___flmul@temp+1
 18709  11A9                     l5558:	
 18710  11A9  1BBC               	btfsc	___flmul@prod+2,7
 18711  11AA  29C0               	goto	l5560
 18712  11AB  3001               	movlw	1
 18713  11AC                     u6725:	
 18714  11AC  35BA               	lslf	___flmul@prod,f
 18715  11AD  0DBB               	rlf	___flmul@prod+1,f
 18716  11AE  0DBC               	rlf	___flmul@prod+2,f
 18717  11AF  0DBD               	rlf	___flmul@prod+3,f
 18718  11B0  0B89               	decfsz	9,f
 18719  11B1  29AC               	goto	u6725
 18720  11B2  1BB7               	btfsc	___flmul@grs+3,7
 18721  11B3  143A               	bsf	___flmul@prod,0
 18722  11B4  3001               	movlw	1
 18723  11B5                     u6745:	
 18724  11B5  35B4               	lslf	___flmul@grs,f
 18725  11B6  0DB5               	rlf	___flmul@grs+1,f
 18726  11B7  0DB6               	rlf	___flmul@grs+2,f
 18727  11B8  0DB7               	rlf	___flmul@grs+3,f
 18728  11B9  0B89               	decfsz	9,f
 18729  11BA  29B5               	goto	u6745
 18730  11BB  30FF               	movlw	255
 18731  11BC  07BE               	addwf	___flmul@temp,f
 18732  11BD  30FF               	movlw	255
 18733  11BE  3DBF               	addwfc	___flmul@temp+1,f
 18734  11BF  29A9               	goto	l5558
 18735  11C0                     l5560:	
 18736  11C0  01B8               	clrf	___flmul@aexp
 18737  11C1  1FB7               	btfss	___flmul@grs+3,7
 18738  11C2  29D9               	goto	l5570
 18739  11C3  30FF               	movlw	255
 18740  11C4  0534               	andwf	___flmul@grs,w
 18741  11C5  00AE               	movwf	??___flmul
 18742  11C6  30FF               	movlw	255
 18743  11C7  0535               	andwf	___flmul@grs+1,w
 18744  11C8  00AF               	movwf	??___flmul+1
 18745  11C9  30FF               	movlw	255
 18746  11CA  0536               	andwf	___flmul@grs+2,w
 18747  11CB  00B0               	movwf	??___flmul+2
 18748  11CC  307F               	movlw	127
 18749  11CD  0537               	andwf	___flmul@grs+3,w
 18750  11CE  00B1               	movwf	??___flmul+3
 18751  11CF  0831               	movf	??___flmul+3,w
 18752  11D0  0430               	iorwf	??___flmul+2,w
 18753  11D1  042F               	iorwf	??___flmul+1,w
 18754  11D2  042E               	iorwf	??___flmul,w
 18755  11D3  1903               	skipnz
 18756  11D4  183A               	btfsc	___flmul@prod,0
 18757  11D5  29D7               	goto	l5566
 18758  11D6  29D9               	goto	l5570
 18759  11D7                     l5566:	
 18760  11D7  01B8               	clrf	___flmul@aexp
 18761  11D8  0AB8               	incf	___flmul@aexp,f
 18762  11D9                     l5570:	
 18763  11D9  0838               	movf	___flmul@aexp,w
 18764  11DA  1903               	btfsc	3,2
 18765  11DB  2A02               	goto	l5580
 18766  11DC  3001               	movlw	1
 18767  11DD  07BA               	addwf	___flmul@prod,f
 18768  11DE  3000               	movlw	0
 18769  11DF  3DBB               	addwfc	___flmul@prod+1,f
 18770  11E0  3000               	movlw	0
 18771  11E1  3DBC               	addwfc	___flmul@prod+2,f
 18772  11E2  3000               	movlw	0
 18773  11E3  3DBD               	addwfc	___flmul@prod+3,f
 18774  11E4  1C3D               	btfss	___flmul@prod+3,0
 18775  11E5  2A02               	goto	l5580
 18776  11E6  083A               	movf	___flmul@prod,w
 18777  11E7  00AE               	movwf	??___flmul
 18778  11E8  083B               	movf	___flmul@prod+1,w
 18779  11E9  00AF               	movwf	??___flmul+1
 18780  11EA  083C               	movf	___flmul@prod+2,w
 18781  11EB  00B0               	movwf	??___flmul+2
 18782  11EC  083D               	movf	___flmul@prod+3,w
 18783  11ED  00B1               	movwf	??___flmul+3
 18784  11EE  3001               	movlw	1
 18785  11EF  00B2               	movwf	??___flmul+4
 18786  11F0                     u6815:	
 18787  11F0  37B1               	asrf	??___flmul+3,f
 18788  11F1  0CB0               	rrf	??___flmul+2,f
 18789  11F2  0CAF               	rrf	??___flmul+1,f
 18790  11F3  0CAE               	rrf	??___flmul,f
 18791  11F4  0BB2               	decfsz	??___flmul+4,f
 18792  11F5  29F0               	goto	u6815
 18793  11F6  0831               	movf	??___flmul+3,w
 18794  11F7  00BD               	movwf	___flmul@prod+3
 18795  11F8  0830               	movf	??___flmul+2,w
 18796  11F9  00BC               	movwf	___flmul@prod+2
 18797  11FA  082F               	movf	??___flmul+1,w
 18798  11FB  00BB               	movwf	___flmul@prod+1
 18799  11FC  082E               	movf	??___flmul,w
 18800  11FD  00BA               	movwf	___flmul@prod
 18801  11FE  3001               	movlw	1
 18802  11FF  07BE               	addwf	___flmul@temp,f
 18803  1200  3000               	movlw	0
 18804  1201  3DBF               	addwfc	___flmul@temp+1,f
 18805  1202                     l5580:	
 18806  1202  083F               	movf	___flmul@temp+1,w
 18807  1203  3A80               	xorlw	128
 18808  1204  00AE               	movwf	??___flmul
 18809  1205  3080               	movlw	128
 18810  1206  022E               	subwf	??___flmul,w
 18811  1207  1D03               	skipz
 18812  1208  2A0B               	goto	u6825
 18813  1209  30FF               	movlw	255
 18814  120A  023E               	subwf	___flmul@temp,w
 18815  120B                     u6825:	
 18816  120B  1C03               	skipc
 18817  120C  2A17               	goto	l5584
 18818  120D  307F               	movlw	127
 18819  120E  0020               	movlb	0	; select bank0
 18820  120F  00BD               	movwf	___flmul@prod+3
 18821  1210  3080               	movlw	128
 18822  1211  00BC               	movwf	___flmul@prod+2
 18823  1212  3000               	movlw	0
 18824  1213  00BB               	movwf	___flmul@prod+1
 18825  1214  3000               	movlw	0
 18826  1215  00BA               	movwf	___flmul@prod
 18827  1216  2A41               	goto	l1430
 18828  1217                     l5584:	
 18829  1217  0020               	movlb	0	; select bank0
 18830  1218  083F               	movf	___flmul@temp+1,w
 18831  1219  3A80               	xorlw	128
 18832  121A  00AE               	movwf	??___flmul
 18833  121B  3080               	movlw	128
 18834  121C  022E               	subwf	??___flmul,w
 18835  121D  1D03               	skipz
 18836  121E  2A21               	goto	u6835
 18837  121F  3001               	movlw	1
 18838  1220  023E               	subwf	___flmul@temp,w
 18839  1221                     u6835:	
 18840  1221  1803               	skipnc
 18841  1222  2A2E               	goto	l5590
 18842  1223  3000               	movlw	0
 18843  1224  0020               	movlb	0	; select bank0
 18844  1225  00BD               	movwf	___flmul@prod+3
 18845  1226  3000               	movlw	0
 18846  1227  00BC               	movwf	___flmul@prod+2
 18847  1228  3000               	movlw	0
 18848  1229  00BB               	movwf	___flmul@prod+1
 18849  122A  3000               	movlw	0
 18850  122B  00BA               	movwf	___flmul@prod
 18851  122C  01B3               	clrf	___flmul@sign
 18852  122D  2A41               	goto	l1430
 18853  122E                     l5590:	
 18854  122E  0020               	movlb	0	; select bank0
 18855  122F  083E               	movf	___flmul@temp,w
 18856  1230  00AE               	movwf	??___flmul
 18857  1231  082E               	movf	??___flmul,w
 18858  1232  00B9               	movwf	___flmul@bexp
 18859  1233  30FF               	movlw	255
 18860  1234  05BA               	andwf	___flmul@prod,f
 18861  1235  30FF               	movlw	255
 18862  1236  05BB               	andwf	___flmul@prod+1,f
 18863  1237  307F               	movlw	127
 18864  1238  05BC               	andwf	___flmul@prod+2,f
 18865  1239  3000               	movlw	0
 18866  123A  05BD               	andwf	___flmul@prod+3,f
 18867  123B  1839               	btfsc	___flmul@bexp,0
 18868  123C  17BC               	bsf	___flmul@prod+2,7
 18869  123D  3639               	lsrf	___flmul@bexp,w
 18870  123E  00AE               	movwf	??___flmul
 18871  123F  082E               	movf	??___flmul,w
 18872  1240  00BD               	movwf	___flmul@prod+3
 18873  1241                     l1430:	
 18874  1241  0833               	movf	___flmul@sign,w
 18875  1242  00AE               	movwf	??___flmul
 18876  1243  082E               	movf	??___flmul,w
 18877  1244  04BD               	iorwf	___flmul@prod+3,f
 18878  1245  083D               	movf	___flmul@prod+3,w
 18879  1246  00A9               	movwf	?___flmul+3
 18880  1247  083C               	movf	___flmul@prod+2,w
 18881  1248  00A8               	movwf	?___flmul+2
 18882  1249  083B               	movf	___flmul@prod+1,w
 18883  124A  00A7               	movwf	?___flmul+1
 18884  124B  083A               	movf	___flmul@prod,w
 18885  124C  00A6               	movwf	?___flmul
 18886  124D  0008               	return
 18887  124E                     __end_of___flmul:	
 18888                           
 18889                           	psect	text63
 18890  07E0                     __ptext63:	
 18891 ;; *************** function __Umul8_16 *****************
 18892 ;; Defined at:
 18893 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8_16.c"
 18894 ;; Parameters:    Size  Location     Type
 18895 ;;  multiplier      1    wreg     unsigned char 
 18896 ;;  multiplicand    1    1[COMMON] unsigned char 
 18897 ;; Auto vars:     Size  Location     Type
 18898 ;;  multiplier      1    9[COMMON] unsigned char 
 18899 ;;  word_mpld       2    7[COMMON] unsigned int 
 18900 ;;  product         2    5[COMMON] unsigned int 
 18901 ;; Return value:  Size  Location     Type
 18902 ;;                  2    1[COMMON] unsigned int 
 18903 ;; Registers used:
 18904 ;;		wreg, status,2, status,0
 18905 ;; Tracked objects:
 18906 ;;		On entry : 0/0
 18907 ;;		On exit  : 0/0
 18908 ;;		Unchanged: 0/0
 18909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18910 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18911 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18913 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18914 ;;Total ram usage:        9 bytes
 18915 ;; Hardware stack levels used:    1
 18916 ;; Hardware stack levels required when called:    1
 18917 ;; This function calls:
 18918 ;;		Nothing
 18919 ;; This function is called by:
 18920 ;;		___flmul
 18921 ;; This function uses a non-reentrant model
 18922 ;;
 18923                           
 18924                           
 18925                           ;psect for function __Umul8_16
 18926  07E0                     __Umul8_16:	
 18927                           
 18928                           ;incstack = 0
 18929                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 18930                           ;__Umul8_16@multiplier stored from wreg
 18931  07E0  00F9               	movwf	__Umul8_16@multiplier
 18932  07E1  01F5               	clrf	__Umul8_16@product
 18933  07E2  01F6               	clrf	__Umul8_16@product+1
 18934  07E3  0871               	movf	__Umul8_16@multiplicand,w
 18935  07E4  00F3               	movwf	??__Umul8_16
 18936  07E5  01F4               	clrf	??__Umul8_16+1
 18937  07E6  0873               	movf	??__Umul8_16,w
 18938  07E7  00F7               	movwf	__Umul8_16@word_mpld
 18939  07E8  0874               	movf	??__Umul8_16+1,w
 18940  07E9  00F8               	movwf	__Umul8_16@word_mpld+1
 18941  07EA                     l5274:	
 18942  07EA  1C79               	btfss	__Umul8_16@multiplier,0
 18943  07EB  2FF0               	goto	l1623
 18944  07EC  0877               	movf	__Umul8_16@word_mpld,w
 18945  07ED  07F5               	addwf	__Umul8_16@product,f
 18946  07EE  0878               	movf	__Umul8_16@word_mpld+1,w
 18947  07EF  3DF6               	addwfc	__Umul8_16@product+1,f
 18948  07F0                     l1623:	
 18949  07F0  3001               	movlw	1
 18950  07F1                     u6215:	
 18951  07F1  35F7               	lslf	__Umul8_16@word_mpld,f
 18952  07F2  0DF8               	rlf	__Umul8_16@word_mpld+1,f
 18953  07F3  0B89               	decfsz	9,f
 18954  07F4  2FF1               	goto	u6215
 18955  07F5  1003               	clrc
 18956  07F6  0CF9               	rrf	__Umul8_16@multiplier,f
 18957  07F7  0879               	movf	__Umul8_16@multiplier,w
 18958  07F8  1D03               	btfss	3,2
 18959  07F9  2FEA               	goto	l5274
 18960  07FA  0876               	movf	__Umul8_16@product+1,w
 18961  07FB  00F2               	movwf	?__Umul8_16+1
 18962  07FC  0875               	movf	__Umul8_16@product,w
 18963  07FD  00F1               	movwf	?__Umul8_16
 18964  07FE  0008               	return
 18965  07FF                     __end_of__Umul8_16:	
 18966                           
 18967                           	psect	text64
 18968  1CE2                     __ptext64:	
 18969 ;; *************** function ___fldiv *****************
 18970 ;; Defined at:
 18971 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcdiv.c"
 18972 ;; Parameters:    Size  Location     Type
 18973 ;;  a               4   32[BANK0 ] unsigned int 
 18974 ;;  b               4   36[BANK0 ] unsigned int 
 18975 ;; Auto vars:     Size  Location     Type
 18976 ;;  grs             4   52[BANK0 ] unsigned long 
 18977 ;;  rem             4   45[BANK0 ] unsigned long 
 18978 ;;  new_exp         2   50[BANK0 ] int 
 18979 ;;  aexp            1   57[BANK0 ] unsigned char 
 18980 ;;  bexp            1   56[BANK0 ] unsigned char 
 18981 ;;  sign            1   49[BANK0 ] unsigned char 
 18982 ;; Return value:  Size  Location     Type
 18983 ;;                  4   32[BANK0 ] unsigned char 
 18984 ;; Registers used:
 18985 ;;		wreg, status,2, status,0
 18986 ;; Tracked objects:
 18987 ;;		On entry : 0/0
 18988 ;;		On exit  : 0/0
 18989 ;;		Unchanged: 0/0
 18990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18991 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18992 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18993 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18994 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18995 ;;Total ram usage:       26 bytes
 18996 ;; Hardware stack levels used:    1
 18997 ;; Hardware stack levels required when called:    1
 18998 ;; This function calls:
 18999 ;;		Nothing
 19000 ;; This function is called by:
 19001 ;;		_setShortCircuitProtection
 19002 ;;		_setOverCurrentDischargeProtection
 19003 ;;		_updateCurrent
 19004 ;;		_updateVoltages
 19005 ;;		_updateTemperatures
 19006 ;;		_calibrate_BATTSOC
 19007 ;;		_coulomb_counter
 19008 ;;		_logf
 19009 ;;		_AFE_getSetShortCircuitCurrent
 19010 ;;		_AFE_getOverCurrentDischargeCurrent
 19011 ;; This function uses a non-reentrant model
 19012 ;;
 19013                           
 19014                           
 19015                           ;psect for function ___fldiv
 19016  1CE2                     ___fldiv:	
 19017                           
 19018                           ;incstack = 0
 19019                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19020  1CE2  0020               	movlb	0	; select bank0
 19021  1CE3  0847               	movf	___fldiv@b+3,w
 19022  1CE4  3980               	andlw	128
 19023  1CE5  00C8               	movwf	??___fldiv
 19024  1CE6  0848               	movf	??___fldiv,w
 19025  1CE7  00D1               	movwf	___fldiv@sign
 19026  1CE8  3547               	lslf	___fldiv@b+3,w
 19027  1CE9  00C8               	movwf	??___fldiv
 19028  1CEA  0848               	movf	??___fldiv,w
 19029  1CEB  00D8               	movwf	___fldiv@bexp
 19030  1CEC  1BC6               	btfsc	___fldiv@b+2,7
 19031  1CED  1458               	bsf	___fldiv@bexp,0
 19032  1CEE  0858               	movf	___fldiv@bexp,w
 19033  1CEF  1903               	btfsc	3,2
 19034  1CF0  2CFF               	goto	l5340
 19035  1CF1  0A58               	incf	___fldiv@bexp,w
 19036  1CF2  1D03               	btfss	3,2
 19037  1CF3  2CFC               	goto	l5336
 19038  1CF4  3000               	movlw	0
 19039  1CF5  00C7               	movwf	___fldiv@b+3
 19040  1CF6  3000               	movlw	0
 19041  1CF7  00C6               	movwf	___fldiv@b+2
 19042  1CF8  3000               	movlw	0
 19043  1CF9  00C5               	movwf	___fldiv@b+1
 19044  1CFA  3000               	movlw	0
 19045  1CFB  00C4               	movwf	___fldiv@b
 19046  1CFC                     l5336:	
 19047  1CFC  17C6               	bsf	___fldiv@b+2,7
 19048  1CFD  01C7               	clrf	___fldiv@b+3
 19049  1CFE  2D07               	goto	l5342
 19050  1CFF                     l5340:	
 19051  1CFF  3000               	movlw	0
 19052  1D00  00C7               	movwf	___fldiv@b+3
 19053  1D01  3000               	movlw	0
 19054  1D02  00C6               	movwf	___fldiv@b+2
 19055  1D03  3000               	movlw	0
 19056  1D04  00C5               	movwf	___fldiv@b+1
 19057  1D05  3000               	movlw	0
 19058  1D06  00C4               	movwf	___fldiv@b
 19059  1D07                     l5342:	
 19060  1D07  0843               	movf	___fldiv@a+3,w
 19061  1D08  3980               	andlw	128
 19062  1D09  00C8               	movwf	??___fldiv
 19063  1D0A  0848               	movf	??___fldiv,w
 19064  1D0B  06D1               	xorwf	___fldiv@sign,f
 19065  1D0C  3543               	lslf	___fldiv@a+3,w
 19066  1D0D  00C8               	movwf	??___fldiv
 19067  1D0E  0848               	movf	??___fldiv,w
 19068  1D0F  00D9               	movwf	___fldiv@aexp
 19069  1D10  1BC2               	btfsc	___fldiv@a+2,7
 19070  1D11  1459               	bsf	___fldiv@aexp,0
 19071  1D12  0859               	movf	___fldiv@aexp,w
 19072  1D13  1903               	btfsc	3,2
 19073  1D14  2D23               	goto	l5360
 19074  1D15  0A59               	incf	___fldiv@aexp,w
 19075  1D16  1D03               	btfss	3,2
 19076  1D17  2D20               	goto	l5356
 19077  1D18  3000               	movlw	0
 19078  1D19  00C3               	movwf	___fldiv@a+3
 19079  1D1A  3000               	movlw	0
 19080  1D1B  00C2               	movwf	___fldiv@a+2
 19081  1D1C  3000               	movlw	0
 19082  1D1D  00C1               	movwf	___fldiv@a+1
 19083  1D1E  3000               	movlw	0
 19084  1D1F  00C0               	movwf	___fldiv@a
 19085  1D20                     l5356:	
 19086  1D20  17C2               	bsf	___fldiv@a+2,7
 19087  1D21  01C3               	clrf	___fldiv@a+3
 19088  1D22  2D2B               	goto	l1378
 19089  1D23                     l5360:	
 19090  1D23  3000               	movlw	0
 19091  1D24  00C3               	movwf	___fldiv@a+3
 19092  1D25  3000               	movlw	0
 19093  1D26  00C2               	movwf	___fldiv@a+2
 19094  1D27  3000               	movlw	0
 19095  1D28  00C1               	movwf	___fldiv@a+1
 19096  1D29  3000               	movlw	0
 19097  1D2A  00C0               	movwf	___fldiv@a
 19098  1D2B                     l1378:	
 19099  1D2B  0843               	movf	___fldiv@a+3,w
 19100  1D2C  0442               	iorwf	___fldiv@a+2,w
 19101  1D2D  0441               	iorwf	___fldiv@a+1,w
 19102  1D2E  0440               	iorwf	___fldiv@a,w
 19103  1D2F  1D03               	skipz
 19104  1D30  2D4A               	goto	l5370
 19105  1D31  3000               	movlw	0
 19106  1D32  00C7               	movwf	___fldiv@b+3
 19107  1D33  3000               	movlw	0
 19108  1D34  00C6               	movwf	___fldiv@b+2
 19109  1D35  3000               	movlw	0
 19110  1D36  00C5               	movwf	___fldiv@b+1
 19111  1D37  3000               	movlw	0
 19112  1D38  00C4               	movwf	___fldiv@b
 19113  1D39  3080               	movlw	128
 19114  1D3A  04C6               	iorwf	___fldiv@b+2,f
 19115  1D3B  307F               	movlw	127
 19116  1D3C  04C7               	iorwf	___fldiv@b+3,f
 19117  1D3D                     L5:	
 19118  1D3D  0851               	movf	___fldiv@sign,w
 19119  1D3E  00C8               	movwf	??___fldiv
 19120  1D3F  0848               	movf	??___fldiv,w
 19121  1D40  04C7               	iorwf	___fldiv@b+3,f
 19122  1D41  0847               	movf	___fldiv@b+3,w
 19123  1D42  00C3               	movwf	?___fldiv+3
 19124  1D43  0846               	movf	___fldiv@b+2,w
 19125  1D44  00C2               	movwf	?___fldiv+2
 19126  1D45  0845               	movf	___fldiv@b+1,w
 19127  1D46  00C1               	movwf	?___fldiv+1
 19128  1D47  0844               	movf	___fldiv@b,w
 19129  1D48  00C0               	movwf	?___fldiv
 19130  1D49  0008               	return
 19131  1D4A                     l5370:	
 19132  1D4A  0858               	movf	___fldiv@bexp,w
 19133  1D4B  1D03               	btfss	3,2
 19134  1D4C  2D56               	goto	l5376
 19135  1D4D  3000               	movlw	0
 19136  1D4E  00C3               	movwf	?___fldiv+3
 19137  1D4F  3000               	movlw	0
 19138  1D50  00C2               	movwf	?___fldiv+2
 19139  1D51  3000               	movlw	0
 19140  1D52  00C1               	movwf	?___fldiv+1
 19141  1D53  3000               	movlw	0
 19142  1D54  00C0               	movwf	?___fldiv
 19143  1D55  0008               	return
 19144  1D56                     l5376:	
 19145  1D56  0858               	movf	___fldiv@bexp,w
 19146  1D57  00C8               	movwf	??___fldiv
 19147  1D58  01C9               	clrf	??___fldiv+1
 19148  1D59  0849               	movf	??___fldiv+1,w
 19149  1D5A  00CB               	movwf	??___fldiv+3
 19150  1D5B  0859               	movf	___fldiv@aexp,w
 19151  1D5C  0248               	subwf	??___fldiv,w
 19152  1D5D  00CA               	movwf	??___fldiv+2
 19153  1D5E  1C03               	skipc
 19154  1D5F  03CB               	decf	??___fldiv+3,f
 19155  1D60  084A               	movf	??___fldiv+2,w
 19156  1D61  3E7F               	addlw	127
 19157  1D62  00D2               	movwf	___fldiv@new_exp
 19158  1D63  3000               	movlw	0
 19159  1D64  3D4B               	addwfc	??___fldiv+3,w
 19160  1D65  00D3               	movwf	___fldiv@new_exp+1
 19161  1D66  0847               	movf	___fldiv@b+3,w
 19162  1D67  00D0               	movwf	___fldiv@rem+3
 19163  1D68  0846               	movf	___fldiv@b+2,w
 19164  1D69  00CF               	movwf	___fldiv@rem+2
 19165  1D6A  0845               	movf	___fldiv@b+1,w
 19166  1D6B  00CE               	movwf	___fldiv@rem+1
 19167  1D6C  0844               	movf	___fldiv@b,w
 19168  1D6D  00CD               	movwf	___fldiv@rem
 19169  1D6E  3000               	movlw	0
 19170  1D6F  00C7               	movwf	___fldiv@b+3
 19171  1D70  3000               	movlw	0
 19172  1D71  00C6               	movwf	___fldiv@b+2
 19173  1D72  3000               	movlw	0
 19174  1D73  00C5               	movwf	___fldiv@b+1
 19175  1D74  3000               	movlw	0
 19176  1D75  00C4               	movwf	___fldiv@b
 19177  1D76  3000               	movlw	0
 19178  1D77  00D7               	movwf	___fldiv@grs+3
 19179  1D78  3000               	movlw	0
 19180  1D79  00D6               	movwf	___fldiv@grs+2
 19181  1D7A  3000               	movlw	0
 19182  1D7B  00D5               	movwf	___fldiv@grs+1
 19183  1D7C  3000               	movlw	0
 19184  1D7D  00D4               	movwf	___fldiv@grs
 19185  1D7E  01D9               	clrf	___fldiv@aexp
 19186  1D7F                     l5404:	
 19187  1D7F  301A               	movlw	26
 19188  1D80  0259               	subwf	___fldiv@aexp,w
 19189  1D81  1803               	btfsc	3,0
 19190  1D82  2DBB               	goto	l5406
 19191  1D83  0859               	movf	___fldiv@aexp,w
 19192  1D84  1903               	btfsc	3,2
 19193  1D85  2D9D               	goto	l5396
 19194  1D86  3001               	movlw	1
 19195  1D87                     u6395:	
 19196  1D87  35CD               	lslf	___fldiv@rem,f
 19197  1D88  0DCE               	rlf	___fldiv@rem+1,f
 19198  1D89  0DCF               	rlf	___fldiv@rem+2,f
 19199  1D8A  0DD0               	rlf	___fldiv@rem+3,f
 19200  1D8B  0B89               	decfsz	9,f
 19201  1D8C  2D87               	goto	u6395
 19202  1D8D  3001               	movlw	1
 19203  1D8E                     u6405:	
 19204  1D8E  35C4               	lslf	___fldiv@b,f
 19205  1D8F  0DC5               	rlf	___fldiv@b+1,f
 19206  1D90  0DC6               	rlf	___fldiv@b+2,f
 19207  1D91  0DC7               	rlf	___fldiv@b+3,f
 19208  1D92  0B89               	decfsz	9,f
 19209  1D93  2D8E               	goto	u6405
 19210  1D94  1BD7               	btfsc	___fldiv@grs+3,7
 19211  1D95  1444               	bsf	___fldiv@b,0
 19212  1D96  3001               	movlw	1
 19213  1D97                     u6425:	
 19214  1D97  35D4               	lslf	___fldiv@grs,f
 19215  1D98  0DD5               	rlf	___fldiv@grs+1,f
 19216  1D99  0DD6               	rlf	___fldiv@grs+2,f
 19217  1D9A  0DD7               	rlf	___fldiv@grs+3,f
 19218  1D9B  0B89               	decfsz	9,f
 19219  1D9C  2D97               	goto	u6425
 19220  1D9D                     l5396:	
 19221  1D9D  0843               	movf	___fldiv@a+3,w
 19222  1D9E  0250               	subwf	___fldiv@rem+3,w
 19223  1D9F  1D03               	skipz
 19224  1DA0  2DAB               	goto	u6435
 19225  1DA1  0842               	movf	___fldiv@a+2,w
 19226  1DA2  024F               	subwf	___fldiv@rem+2,w
 19227  1DA3  1D03               	skipz
 19228  1DA4  2DAB               	goto	u6435
 19229  1DA5  0841               	movf	___fldiv@a+1,w
 19230  1DA6  024E               	subwf	___fldiv@rem+1,w
 19231  1DA7  1D03               	skipz
 19232  1DA8  2DAB               	goto	u6435
 19233  1DA9  0840               	movf	___fldiv@a,w
 19234  1DAA  024D               	subwf	___fldiv@rem,w
 19235  1DAB                     u6435:	
 19236  1DAB  1C03               	skipc
 19237  1DAC  2DB6               	goto	l5402
 19238  1DAD  1757               	bsf	___fldiv@grs+3,6
 19239  1DAE  0840               	movf	___fldiv@a,w
 19240  1DAF  02CD               	subwf	___fldiv@rem,f
 19241  1DB0  0841               	movf	___fldiv@a+1,w
 19242  1DB1  3BCE               	subwfb	___fldiv@rem+1,f
 19243  1DB2  0842               	movf	___fldiv@a+2,w
 19244  1DB3  3BCF               	subwfb	___fldiv@rem+2,f
 19245  1DB4  0843               	movf	___fldiv@a+3,w
 19246  1DB5  3BD0               	subwfb	___fldiv@rem+3,f
 19247  1DB6                     l5402:	
 19248  1DB6  3001               	movlw	1
 19249  1DB7  00C8               	movwf	??___fldiv
 19250  1DB8  0848               	movf	??___fldiv,w
 19251  1DB9  07D9               	addwf	___fldiv@aexp,f
 19252  1DBA  2D7F               	goto	l5404
 19253  1DBB                     l5406:	
 19254  1DBB  0850               	movf	___fldiv@rem+3,w
 19255  1DBC  044F               	iorwf	___fldiv@rem+2,w
 19256  1DBD  044E               	iorwf	___fldiv@rem+1,w
 19257  1DBE  044D               	iorwf	___fldiv@rem,w
 19258  1DBF  1D03               	btfss	3,2
 19259  1DC0  1454               	bsf	___fldiv@grs,0
 19260  1DC1                     l5420:	
 19261  1DC1  1BC6               	btfsc	___fldiv@b+2,7
 19262  1DC2  2DD8               	goto	l5422
 19263  1DC3  3001               	movlw	1
 19264  1DC4                     u6465:	
 19265  1DC4  35C4               	lslf	___fldiv@b,f
 19266  1DC5  0DC5               	rlf	___fldiv@b+1,f
 19267  1DC6  0DC6               	rlf	___fldiv@b+2,f
 19268  1DC7  0DC7               	rlf	___fldiv@b+3,f
 19269  1DC8  0B89               	decfsz	9,f
 19270  1DC9  2DC4               	goto	u6465
 19271  1DCA  1BD7               	btfsc	___fldiv@grs+3,7
 19272  1DCB  1444               	bsf	___fldiv@b,0
 19273  1DCC  3001               	movlw	1
 19274  1DCD                     u6485:	
 19275  1DCD  35D4               	lslf	___fldiv@grs,f
 19276  1DCE  0DD5               	rlf	___fldiv@grs+1,f
 19277  1DCF  0DD6               	rlf	___fldiv@grs+2,f
 19278  1DD0  0DD7               	rlf	___fldiv@grs+3,f
 19279  1DD1  0B89               	decfsz	9,f
 19280  1DD2  2DCD               	goto	u6485
 19281  1DD3  30FF               	movlw	255
 19282  1DD4  07D2               	addwf	___fldiv@new_exp,f
 19283  1DD5  30FF               	movlw	255
 19284  1DD6  3DD3               	addwfc	___fldiv@new_exp+1,f
 19285  1DD7  2DC1               	goto	l5420
 19286  1DD8                     l5422:	
 19287  1DD8  01D9               	clrf	___fldiv@aexp
 19288  1DD9  1FD7               	btfss	___fldiv@grs+3,7
 19289  1DDA  2DF1               	goto	l5432
 19290  1DDB  30FF               	movlw	255
 19291  1DDC  0554               	andwf	___fldiv@grs,w
 19292  1DDD  00C8               	movwf	??___fldiv
 19293  1DDE  30FF               	movlw	255
 19294  1DDF  0555               	andwf	___fldiv@grs+1,w
 19295  1DE0  00C9               	movwf	??___fldiv+1
 19296  1DE1  30FF               	movlw	255
 19297  1DE2  0556               	andwf	___fldiv@grs+2,w
 19298  1DE3  00CA               	movwf	??___fldiv+2
 19299  1DE4  307F               	movlw	127
 19300  1DE5  0557               	andwf	___fldiv@grs+3,w
 19301  1DE6  00CB               	movwf	??___fldiv+3
 19302  1DE7  084B               	movf	??___fldiv+3,w
 19303  1DE8  044A               	iorwf	??___fldiv+2,w
 19304  1DE9  0449               	iorwf	??___fldiv+1,w
 19305  1DEA  0448               	iorwf	??___fldiv,w
 19306  1DEB  1903               	skipnz
 19307  1DEC  1844               	btfsc	___fldiv@b,0
 19308  1DED  2DEF               	goto	l5428
 19309  1DEE  2DF1               	goto	l5432
 19310  1DEF                     l5428:	
 19311  1DEF  01D9               	clrf	___fldiv@aexp
 19312  1DF0  0AD9               	incf	___fldiv@aexp,f
 19313  1DF1                     l5432:	
 19314  1DF1  0859               	movf	___fldiv@aexp,w
 19315  1DF2  1903               	btfsc	3,2
 19316  1DF3  2E1A               	goto	l5442
 19317  1DF4  3001               	movlw	1
 19318  1DF5  07C4               	addwf	___fldiv@b,f
 19319  1DF6  3000               	movlw	0
 19320  1DF7  3DC5               	addwfc	___fldiv@b+1,f
 19321  1DF8  3000               	movlw	0
 19322  1DF9  3DC6               	addwfc	___fldiv@b+2,f
 19323  1DFA  3000               	movlw	0
 19324  1DFB  3DC7               	addwfc	___fldiv@b+3,f
 19325  1DFC  1C47               	btfss	___fldiv@b+3,0
 19326  1DFD  2E1A               	goto	l5442
 19327  1DFE  0844               	movf	___fldiv@b,w
 19328  1DFF  00C8               	movwf	??___fldiv
 19329  1E00  0845               	movf	___fldiv@b+1,w
 19330  1E01  00C9               	movwf	??___fldiv+1
 19331  1E02  0846               	movf	___fldiv@b+2,w
 19332  1E03  00CA               	movwf	??___fldiv+2
 19333  1E04  0847               	movf	___fldiv@b+3,w
 19334  1E05  00CB               	movwf	??___fldiv+3
 19335  1E06  3001               	movlw	1
 19336  1E07  00CC               	movwf	??___fldiv+4
 19337  1E08                     u6555:	
 19338  1E08  37CB               	asrf	??___fldiv+3,f
 19339  1E09  0CCA               	rrf	??___fldiv+2,f
 19340  1E0A  0CC9               	rrf	??___fldiv+1,f
 19341  1E0B  0CC8               	rrf	??___fldiv,f
 19342  1E0C  0BCC               	decfsz	??___fldiv+4,f
 19343  1E0D  2E08               	goto	u6555
 19344  1E0E  084B               	movf	??___fldiv+3,w
 19345  1E0F  00C7               	movwf	___fldiv@b+3
 19346  1E10  084A               	movf	??___fldiv+2,w
 19347  1E11  00C6               	movwf	___fldiv@b+2
 19348  1E12  0849               	movf	??___fldiv+1,w
 19349  1E13  00C5               	movwf	___fldiv@b+1
 19350  1E14  0848               	movf	??___fldiv,w
 19351  1E15  00C4               	movwf	___fldiv@b
 19352  1E16  3001               	movlw	1
 19353  1E17  07D2               	addwf	___fldiv@new_exp,f
 19354  1E18  3000               	movlw	0
 19355  1E19  3DD3               	addwfc	___fldiv@new_exp+1,f
 19356  1E1A                     l5442:	
 19357  1E1A  0853               	movf	___fldiv@new_exp+1,w
 19358  1E1B  3A80               	xorlw	128
 19359  1E1C  00C8               	movwf	??___fldiv
 19360  1E1D  3080               	movlw	128
 19361  1E1E  0248               	subwf	??___fldiv,w
 19362  1E1F  1D03               	skipz
 19363  1E20  2E23               	goto	u6565
 19364  1E21  30FF               	movlw	255
 19365  1E22  0252               	subwf	___fldiv@new_exp,w
 19366  1E23                     u6565:	
 19367  1E23  1C03               	skipc
 19368  1E24  2E32               	goto	l1399
 19369  1E25  30FF               	movlw	255
 19370  1E26  0020               	movlb	0	; select bank0
 19371  1E27  00D2               	movwf	___fldiv@new_exp
 19372  1E28  3000               	movlw	0
 19373  1E29  00D3               	movwf	___fldiv@new_exp+1
 19374  1E2A  3000               	movlw	0
 19375  1E2B  00C7               	movwf	___fldiv@b+3
 19376  1E2C  3000               	movlw	0
 19377  1E2D  00C6               	movwf	___fldiv@b+2
 19378  1E2E  3000               	movlw	0
 19379  1E2F  00C5               	movwf	___fldiv@b+1
 19380  1E30  3000               	movlw	0
 19381  1E31  00C4               	movwf	___fldiv@b
 19382  1E32                     l1399:	
 19383  1E32  0020               	movlb	0	; select bank0
 19384  1E33  0853               	movf	___fldiv@new_exp+1,w
 19385  1E34  3A80               	xorlw	128
 19386  1E35  00C8               	movwf	??___fldiv
 19387  1E36  3080               	movlw	128
 19388  1E37  0248               	subwf	??___fldiv,w
 19389  1E38  1D03               	skipz
 19390  1E39  2E3C               	goto	u6575
 19391  1E3A  3001               	movlw	1
 19392  1E3B  0252               	subwf	___fldiv@new_exp,w
 19393  1E3C                     u6575:	
 19394  1E3C  1803               	skipnc
 19395  1E3D  2E4A               	goto	l1400
 19396  1E3E  0020               	movlb	0	; select bank0
 19397  1E3F  01D2               	clrf	___fldiv@new_exp
 19398  1E40  01D3               	clrf	___fldiv@new_exp+1
 19399  1E41  3000               	movlw	0
 19400  1E42  00C7               	movwf	___fldiv@b+3
 19401  1E43  3000               	movlw	0
 19402  1E44  00C6               	movwf	___fldiv@b+2
 19403  1E45  3000               	movlw	0
 19404  1E46  00C5               	movwf	___fldiv@b+1
 19405  1E47  3000               	movlw	0
 19406  1E48  00C4               	movwf	___fldiv@b
 19407  1E49  01D1               	clrf	___fldiv@sign
 19408  1E4A                     l1400:	
 19409  1E4A  0020               	movlb	0	; select bank0
 19410  1E4B  0852               	movf	___fldiv@new_exp,w
 19411  1E4C  00C8               	movwf	??___fldiv
 19412  1E4D  0848               	movf	??___fldiv,w
 19413  1E4E  00D8               	movwf	___fldiv@bexp
 19414  1E4F  1C58               	btfss	___fldiv@bexp,0
 19415  1E50  2E53               	goto	l5456
 19416  1E51  17C6               	bsf	___fldiv@b+2,7
 19417  1E52  2E57               	goto	l1402
 19418  1E53                     l5456:	
 19419  1E53  307F               	movlw	127
 19420  1E54  00C8               	movwf	??___fldiv
 19421  1E55  0848               	movf	??___fldiv,w
 19422  1E56  05C6               	andwf	___fldiv@b+2,f
 19423  1E57                     l1402:	
 19424  1E57  3658               	lsrf	___fldiv@bexp,w
 19425  1E58  00C8               	movwf	??___fldiv
 19426  1E59  0848               	movf	??___fldiv,w
 19427  1E5A  00C7               	movwf	___fldiv@b+3
 19428  1E5B  2D3D               	goto	L5
 19429  1E5C                     __end_of___fldiv:	
 19430                           
 19431                           	psect	text65
 19432  2847                     __ptext65:	
 19433 ;; *************** function _AFE_Status *****************
 19434 ;; Defined at:
 19435 ;;		line 45 in file "algorithms.c"
 19436 ;; Parameters:    Size  Location     Type
 19437 ;;		None
 19438 ;; Auto vars:     Size  Location     Type
 19439 ;;  error_flag      2    2[BANK0 ] int 
 19440 ;;  sys_stat        1    4[BANK0 ] struct regSYS_STAT
 19441 ;; Return value:  Size  Location     Type
 19442 ;;                  2    0[BANK0 ] int 
 19443 ;; Registers used:
 19444 ;;		wreg, status,2, status,0, pclath, cstack
 19445 ;; Tracked objects:
 19446 ;;		On entry : 0/0
 19447 ;;		On exit  : 0/0
 19448 ;;		Unchanged: 0/0
 19449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19450 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19451 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19453 ;;      Totals:         1       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19454 ;;Total ram usage:        6 bytes
 19455 ;; Hardware stack levels used:    1
 19456 ;; Hardware stack levels required when called:    3
 19457 ;; This function calls:
 19458 ;;		_readRegister
 19459 ;; This function is called by:
 19460 ;;		_AFE_UPDATE
 19461 ;; This function uses a non-reentrant model
 19462 ;;
 19463                           
 19464                           
 19465                           ;psect for function _AFE_Status
 19466  2847                     _AFE_Status:	
 19467                           
 19468                           ;algorithms.c: 47:     regSYS_STAT_t sys_stat;;algorithms.c: 48:     int error_flag = 0;
 19469                           
 19470                           ;incstack = 0
 19471                           ; Regs used in _AFE_Status: [wreg+status,2+status,0+pclath+cstack]
 19472  2847  0020               	movlb	0	; select bank0
 19473  2848  01A2               	clrf	AFE_Status@error_flag
 19474  2849  01A3               	clrf	AFE_Status@error_flag+1
 19475                           
 19476                           ;algorithms.c: 49:     sys_stat.regByte = readRegister(0x18, 0x00);
 19477  284A  3018               	movlw	24
 19478  284B  00F5               	movwf	readRegister@slaveAddress
 19479  284C  3000               	movlw	0
 19480  284D  00F6               	movwf	readRegister@slaveAddress+1
 19481  284E  3000               	movlw	0
 19482  284F  00F7               	movwf	readRegister@regAddress
 19483  2850  00F8               	movwf	readRegister@regAddress+1
 19484  2851  31B5  2587  31A8   	fcall	_readRegister
 19485  2854  0875               	movf	?_readRegister,w
 19486  2855  00FB               	movwf	??_AFE_Status
 19487  2856  087B               	movf	??_AFE_Status,w
 19488  2857  0020               	movlb	0	; select bank0
 19489  2858  00A4               	movwf	AFE_Status@sys_stat
 19490                           
 19491                           ;algorithms.c: 53:     if (sys_stat.regByte & 0x20){
 19492  2859  1EA4               	btfss	AFE_Status@sys_stat,5
 19493  285A  2865               	goto	l7642
 19494                           
 19495                           ;algorithms.c: 54:         XR_error = 1;
 19496  285B  3001               	movlw	1
 19497  285C  0023               	movlb	3	; select bank3
 19498  285D  00DC               	movwf	_XR_error^(0+384)
 19499  285E  3000               	movlw	0
 19500  285F  00DD               	movwf	(_XR_error^(0+384)+1)
 19501                           
 19502                           ;algorithms.c: 55:         error_flag=1;
 19503  2860  3001               	movlw	1
 19504  2861  0020               	movlb	0	; select bank0
 19505  2862  00A2               	movwf	AFE_Status@error_flag
 19506  2863  3000               	movlw	0
 19507  2864  00A3               	movwf	AFE_Status@error_flag+1
 19508  2865                     l7642:	
 19509                           
 19510                           ;algorithms.c: 58:     if(sys_stat.regByte & 0x10){
 19511  2865  1E24               	btfss	AFE_Status@sys_stat,4
 19512  2866  2871               	goto	l7646
 19513                           
 19514                           ;algorithms.c: 59:         alert_error = 1;
 19515  2867  3001               	movlw	1
 19516  2868  0023               	movlb	3	; select bank3
 19517  2869  00DA               	movwf	_alert_error^(0+384)
 19518  286A  3000               	movlw	0
 19519  286B  00DB               	movwf	(_alert_error^(0+384)+1)
 19520                           
 19521                           ;algorithms.c: 60:         error_flag=1;
 19522  286C  3001               	movlw	1
 19523  286D  0020               	movlb	0	; select bank0
 19524  286E  00A2               	movwf	AFE_Status@error_flag
 19525  286F  3000               	movlw	0
 19526  2870  00A3               	movwf	AFE_Status@error_flag+1
 19527  2871                     l7646:	
 19528                           
 19529                           ;algorithms.c: 63:     if(sys_stat.regByte & 0x08 ){
 19530  2871  1DA4               	btfss	AFE_Status@sys_stat,3
 19531  2872  287D               	goto	l7650
 19532                           
 19533                           ;algorithms.c: 64:         uv_error = 1;
 19534  2873  3001               	movlw	1
 19535  2874  0023               	movlb	3	; select bank3
 19536  2875  00D8               	movwf	_uv_error^(0+384)
 19537  2876  3000               	movlw	0
 19538  2877  00D9               	movwf	(_uv_error^(0+384)+1)
 19539                           
 19540                           ;algorithms.c: 65:         error_flag=1;
 19541  2878  3001               	movlw	1
 19542  2879  0020               	movlb	0	; select bank0
 19543  287A  00A2               	movwf	AFE_Status@error_flag
 19544  287B  3000               	movlw	0
 19545  287C  00A3               	movwf	AFE_Status@error_flag+1
 19546  287D                     l7650:	
 19547                           
 19548                           ;algorithms.c: 68:     if(sys_stat.regByte & 0x04 ){
 19549  287D  1D24               	btfss	AFE_Status@sys_stat,2
 19550  287E  2889               	goto	l7654
 19551                           
 19552                           ;algorithms.c: 69:         ov_error = 1;
 19553  287F  3001               	movlw	1
 19554  2880  0023               	movlb	3	; select bank3
 19555  2881  00D6               	movwf	_ov_error^(0+384)
 19556  2882  3000               	movlw	0
 19557  2883  00D7               	movwf	(_ov_error^(0+384)+1)
 19558                           
 19559                           ;algorithms.c: 70:         error_flag=1;
 19560  2884  3001               	movlw	1
 19561  2885  0020               	movlb	0	; select bank0
 19562  2886  00A2               	movwf	AFE_Status@error_flag
 19563  2887  3000               	movlw	0
 19564  2888  00A3               	movwf	AFE_Status@error_flag+1
 19565  2889                     l7654:	
 19566                           
 19567                           ;algorithms.c: 73:    if(sys_stat.regByte & 0x02 ){
 19568  2889  1CA4               	btfss	AFE_Status@sys_stat,1
 19569  288A  2895               	goto	l7658
 19570                           
 19571                           ;algorithms.c: 74:         scd_error = 1;
 19572  288B  3001               	movlw	1
 19573  288C  0023               	movlb	3	; select bank3
 19574  288D  00D4               	movwf	_scd_error^(0+384)
 19575  288E  3000               	movlw	0
 19576  288F  00D5               	movwf	(_scd_error^(0+384)+1)
 19577                           
 19578                           ;algorithms.c: 75:         error_flag=1;
 19579  2890  3001               	movlw	1
 19580  2891  0020               	movlb	0	; select bank0
 19581  2892  00A2               	movwf	AFE_Status@error_flag
 19582  2893  3000               	movlw	0
 19583  2894  00A3               	movwf	AFE_Status@error_flag+1
 19584  2895                     l7658:	
 19585                           
 19586                           ;algorithms.c: 78:    if(sys_stat.regByte & 0x01){
 19587  2895  1C24               	btfss	AFE_Status@sys_stat,0
 19588  2896  28A1               	goto	l704
 19589                           
 19590                           ;algorithms.c: 79:         ocd_error = 1;
 19591  2897  3001               	movlw	1
 19592  2898  0023               	movlb	3	; select bank3
 19593  2899  00D2               	movwf	_ocd_error^(0+384)
 19594  289A  3000               	movlw	0
 19595  289B  00D3               	movwf	(_ocd_error^(0+384)+1)
 19596                           
 19597                           ;algorithms.c: 80:         error_flag=1;
 19598  289C  3001               	movlw	1
 19599  289D  0020               	movlb	0	; select bank0
 19600  289E  00A2               	movwf	AFE_Status@error_flag
 19601  289F  3000               	movlw	0
 19602  28A0  00A3               	movwf	AFE_Status@error_flag+1
 19603  28A1                     l704:	
 19604                           ;algorithms.c: 81:     }
 19605                           
 19606                           
 19607                           ;algorithms.c: 83:     return error_flag;
 19608  28A1  0823               	movf	AFE_Status@error_flag+1,w
 19609  28A2  00A1               	movwf	?_AFE_Status+1
 19610  28A3  0822               	movf	AFE_Status@error_flag,w
 19611  28A4  00A0               	movwf	?_AFE_Status
 19612  28A5  0008               	return
 19613  28A6                     __end_of_AFE_Status:	
 19614                           
 19615                           	psect	text66
 19616  3440                     __ptext66:	
 19617 ;; *************** function _AFE_FET_Status *****************
 19618 ;; Defined at:
 19619 ;;		line 86 in file "algorithms.c"
 19620 ;; Parameters:    Size  Location     Type
 19621 ;;		None
 19622 ;; Auto vars:     Size  Location     Type
 19623 ;;  sys_ctrl2       1    0[BANK0 ] unsigned char 
 19624 ;; Return value:  Size  Location     Type
 19625 ;;                  1    wreg      void 
 19626 ;; Registers used:
 19627 ;;		wreg, status,2, status,0, pclath, cstack
 19628 ;; Tracked objects:
 19629 ;;		On entry : 0/0
 19630 ;;		On exit  : 0/0
 19631 ;;		Unchanged: 0/0
 19632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19634 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19635 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19636 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19637 ;;Total ram usage:        2 bytes
 19638 ;; Hardware stack levels used:    1
 19639 ;; Hardware stack levels required when called:    3
 19640 ;; This function calls:
 19641 ;;		_readRegister
 19642 ;; This function is called by:
 19643 ;;		_AFE_UPDATE
 19644 ;; This function uses a non-reentrant model
 19645 ;;
 19646                           
 19647                           
 19648                           ;psect for function _AFE_FET_Status
 19649  3440                     _AFE_FET_Status:	
 19650                           
 19651                           ;algorithms.c: 87:     uint8_t sys_ctrl2;;algorithms.c: 88:     sys_ctrl2 = readRegister
      +                          (0x18, 0x05);
 19652                           
 19653                           ;incstack = 0
 19654                           ; Regs used in _AFE_FET_Status: [wreg+status,2+status,0+pclath+cstack]
 19655  3440  3018               	movlw	24
 19656  3441  00F5               	movwf	readRegister@slaveAddress
 19657  3442  3000               	movlw	0
 19658  3443  00F6               	movwf	readRegister@slaveAddress+1
 19659  3444  3005               	movlw	5
 19660  3445  00F7               	movwf	readRegister@regAddress
 19661  3446  3000               	movlw	0
 19662  3447  00F8               	movwf	readRegister@regAddress+1
 19663  3448  31B5  2587  31B4   	fcall	_readRegister
 19664  344B  0875               	movf	?_readRegister,w
 19665  344C  00FB               	movwf	??_AFE_FET_Status
 19666  344D  087B               	movf	??_AFE_FET_Status,w
 19667  344E  0020               	movlb	0	; select bank0
 19668  344F  00A0               	movwf	AFE_FET_Status@sys_ctrl2
 19669                           
 19670                           ;algorithms.c: 89:     chg_fet_enable = 0;
 19671  3450  0023               	movlb	3	; select bank3
 19672  3451  01D0               	clrf	_chg_fet_enable^(0+384)
 19673  3452  01D1               	clrf	(_chg_fet_enable+1)^(0+384)
 19674                           
 19675                           ;algorithms.c: 90:     dschg_fet_enable = 0;
 19676  3453  01CE               	clrf	_dschg_fet_enable^(0+384)
 19677  3454  01CF               	clrf	(_dschg_fet_enable+1)^(0+384)
 19678                           
 19679                           ;algorithms.c: 92:    if(sys_ctrl2 & 0x01){
 19680  3455  0020               	movlb	0	; select bank0
 19681  3456  1C20               	btfss	AFE_FET_Status@sys_ctrl2,0
 19682  3457  2C5D               	goto	l7630
 19683                           
 19684                           ;algorithms.c: 93:        chg_fet_enable = 1;
 19685  3458  3001               	movlw	1
 19686  3459  0023               	movlb	3	; select bank3
 19687  345A  00D0               	movwf	_chg_fet_enable^(0+384)
 19688  345B  3000               	movlw	0
 19689  345C  00D1               	movwf	(_chg_fet_enable^(0+384)+1)
 19690  345D                     l7630:	
 19691                           
 19692                           ;algorithms.c: 96:    if(sys_ctrl2 & 0x02){
 19693  345D  0020               	movlb	0	; select bank0
 19694  345E  1CA0               	btfss	AFE_FET_Status@sys_ctrl2,1
 19695  345F  0008               	return
 19696                           
 19697                           ;algorithms.c: 97:        dschg_fet_enable = 1;
 19698  3460  3001               	movlw	1
 19699  3461  0023               	movlb	3	; select bank3
 19700  3462  00CE               	movwf	_dschg_fet_enable^(0+384)
 19701  3463  3000               	movlw	0
 19702  3464  00CF               	movwf	(_dschg_fet_enable^(0+384)+1)
 19703  3465  0008               	return
 19704  3466                     __end_of_AFE_FET_Status:	
 19705                           
 19706                           	psect	text67
 19707  3587                     __ptext67:	
 19708 ;; *************** function _readRegister *****************
 19709 ;; Defined at:
 19710 ;;		line 115 in file "I2C.c"
 19711 ;; Parameters:    Size  Location     Type
 19712 ;;  slaveAddress    2    5[COMMON] int 
 19713 ;;  regAddress      2    7[COMMON] int 
 19714 ;; Auto vars:     Size  Location     Type
 19715 ;;  recievedData    2    9[COMMON] int 
 19716 ;; Return value:  Size  Location     Type
 19717 ;;                  2    5[COMMON] int 
 19718 ;; Registers used:
 19719 ;;		wreg, status,2, status,0, pclath, cstack
 19720 ;; Tracked objects:
 19721 ;;		On entry : 0/0
 19722 ;;		On exit  : 0/0
 19723 ;;		Unchanged: 0/0
 19724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19728 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19729 ;;Total ram usage:        6 bytes
 19730 ;; Hardware stack levels used:    1
 19731 ;; Hardware stack levels required when called:    2
 19732 ;; This function calls:
 19733 ;;		_read_I2C_data
 19734 ;;		_send_I2C_NACK
 19735 ;;		_send_I2C_controlByte
 19736 ;;		_send_I2C_data
 19737 ;;		_send_I2C_startBit
 19738 ;;		_send_I2C_stopBit
 19739 ;; This function is called by:
 19740 ;;		_beginAFEcommunication
 19741 ;;		_setCellUndervoltageProtection
 19742 ;;		_setCellOvervoltageProtection
 19743 ;;		_updateCurrent
 19744 ;;		_updateVoltages
 19745 ;;		_updateTemperatures
 19746 ;;		_enableDischarging
 19747 ;;		_enableCharging
 19748 ;;		_AFE_Status
 19749 ;;		_AFE_FET_Status
 19750 ;;		_printotAFERegisters
 19751 ;; This function uses a non-reentrant model
 19752 ;;
 19753                           
 19754                           
 19755                           ;psect for function _readRegister
 19756  3587                     _readRegister:	
 19757                           
 19758                           ;I2C.c: 116:     int recievedData;;I2C.c: 117:     send_I2C_startBit();
 19759                           
 19760                           ;incstack = 0
 19761                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
 19762  3587  31B2  2261  31B5   	fcall	_send_I2C_startBit
 19763                           
 19764                           ;I2C.c: 118:     send_I2C_controlByte(slaveAddress, 0);
 19765  358A  0876               	movf	readRegister@slaveAddress+1,w
 19766  358B  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19767  358C  0875               	movf	readRegister@slaveAddress,w
 19768  358D  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19769  358E  3000               	movlw	0
 19770  358F  00F3               	movwf	send_I2C_controlByte@RW_bit
 19771  3590  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19772  3591  31B2  2283  31B5   	fcall	_send_I2C_controlByte
 19773                           
 19774                           ;I2C.c: 119:     send_I2C_data(regAddress);
 19775  3594  0878               	movf	readRegister@regAddress+1,w
 19776  3595  00F2               	movwf	send_I2C_data@databyte+1
 19777  3596  0877               	movf	readRegister@regAddress,w
 19778  3597  00F1               	movwf	send_I2C_data@databyte
 19779  3598  3198  2000  31B5   	fcall	_send_I2C_data
 19780                           
 19781                           ;I2C.c: 120:     send_I2C_stopBit();
 19782  359B  31B2  2269  31B5   	fcall	_send_I2C_stopBit
 19783                           
 19784                           ;I2C.c: 121:     send_I2C_startBit();
 19785  359E  31B2  2261  31B5   	fcall	_send_I2C_startBit
 19786                           
 19787                           ;I2C.c: 122:     send_I2C_controlByte(slaveAddress, 1);
 19788  35A1  0876               	movf	readRegister@slaveAddress+1,w
 19789  35A2  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
 19790  35A3  0875               	movf	readRegister@slaveAddress,w
 19791  35A4  00F1               	movwf	send_I2C_controlByte@BlockAddress
 19792  35A5  3001               	movlw	1
 19793  35A6  00F3               	movwf	send_I2C_controlByte@RW_bit
 19794  35A7  3000               	movlw	0
 19795  35A8  00F4               	movwf	send_I2C_controlByte@RW_bit+1
 19796  35A9  31B2  2283  31B5   	fcall	_send_I2C_controlByte
 19797                           
 19798                           ;I2C.c: 123:     recievedData = read_I2C_data();
 19799  35AC  31A0  2002  31B5   	fcall	_read_I2C_data
 19800  35AF  0872               	movf	?_read_I2C_data+1,w
 19801  35B0  00FA               	movwf	readRegister@recievedData+1
 19802  35B1  0871               	movf	?_read_I2C_data,w
 19803  35B2  00F9               	movwf	readRegister@recievedData
 19804                           
 19805                           ;I2C.c: 124:     send_I2C_NACK();
 19806  35B3  31B2  227A  31B5   	fcall	_send_I2C_NACK
 19807                           
 19808                           ;I2C.c: 125:     send_I2C_stopBit();
 19809  35B6  31B2  2269         	fcall	_send_I2C_stopBit
 19810                           
 19811                           ;I2C.c: 126:     return recievedData;
 19812  35B8  087A               	movf	readRegister@recievedData+1,w
 19813  35B9  00F6               	movwf	?_readRegister+1
 19814  35BA  0879               	movf	readRegister@recievedData,w
 19815  35BB  00F5               	movwf	?_readRegister
 19816  35BC  0008               	return
 19817  35BD                     __end_of_readRegister:	
 19818                           
 19819                           	psect	text68
 19820  3269                     __ptext68:	
 19821 ;; *************** function _send_I2C_stopBit *****************
 19822 ;; Defined at:
 19823 ;;		line 78 in file "I2C.c"
 19824 ;; Parameters:    Size  Location     Type
 19825 ;;		None
 19826 ;; Auto vars:     Size  Location     Type
 19827 ;;		None
 19828 ;; Return value:  Size  Location     Type
 19829 ;;                  1    wreg      void 
 19830 ;; Registers used:
 19831 ;;		None
 19832 ;; Tracked objects:
 19833 ;;		On entry : 0/0
 19834 ;;		On exit  : 0/0
 19835 ;;		Unchanged: 0/0
 19836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19841 ;;Total ram usage:        0 bytes
 19842 ;; Hardware stack levels used:    1
 19843 ;; Hardware stack levels required when called:    1
 19844 ;; This function calls:
 19845 ;;		Nothing
 19846 ;; This function is called by:
 19847 ;;		_I2C_writeRegister
 19848 ;;		_readRegister
 19849 ;; This function uses a non-reentrant model
 19850 ;;
 19851                           
 19852                           
 19853                           ;psect for function _send_I2C_stopBit
 19854  3269                     _send_I2C_stopBit:	
 19855                           
 19856                           ;I2C.c: 79:     PIR1bits.SSP1IF = 0;
 19857                           
 19858                           ;incstack = 0
 19859                           ; Regs used in _send_I2C_stopBit: []
 19860  3269  0020               	movlb	0	; select bank0
 19861  326A  1191               	bcf	17,3	;volatile
 19862                           
 19863                           ;I2C.c: 80:     SSPCON2bits.PEN = 1;
 19864  326B  0024               	movlb	4	; select bank4
 19865  326C  1516               	bsf	22,2	;volatile
 19866  326D                     l336:	
 19867                           ;I2C.c: 81:     while (!PIR1bits.SSP1IF);
 19868                           
 19869  326D  0020               	movlb	0	; select bank0
 19870  326E  1991               	btfsc	17,3	;volatile
 19871  326F  0008               	return
 19872  3270  2A6D               	goto	l336
 19873  3271                     __end_of_send_I2C_stopBit:	
 19874                           
 19875                           	psect	text69
 19876  3261                     __ptext69:	
 19877 ;; *************** function _send_I2C_startBit *****************
 19878 ;; Defined at:
 19879 ;;		line 65 in file "I2C.c"
 19880 ;; Parameters:    Size  Location     Type
 19881 ;;		None
 19882 ;; Auto vars:     Size  Location     Type
 19883 ;;		None
 19884 ;; Return value:  Size  Location     Type
 19885 ;;                  1    wreg      void 
 19886 ;; Registers used:
 19887 ;;		None
 19888 ;; Tracked objects:
 19889 ;;		On entry : 0/0
 19890 ;;		On exit  : 0/0
 19891 ;;		Unchanged: 0/0
 19892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19897 ;;Total ram usage:        0 bytes
 19898 ;; Hardware stack levels used:    1
 19899 ;; Hardware stack levels required when called:    1
 19900 ;; This function calls:
 19901 ;;		Nothing
 19902 ;; This function is called by:
 19903 ;;		_I2C_writeRegister
 19904 ;;		_readRegister
 19905 ;; This function uses a non-reentrant model
 19906 ;;
 19907                           
 19908                           
 19909                           ;psect for function _send_I2C_startBit
 19910  3261                     _send_I2C_startBit:	
 19911                           
 19912                           ;I2C.c: 66:     PIR1bits.SSP1IF = 0;
 19913                           
 19914                           ;incstack = 0
 19915                           ; Regs used in _send_I2C_startBit: []
 19916  3261  0020               	movlb	0	; select bank0
 19917  3262  1191               	bcf	17,3	;volatile
 19918                           
 19919                           ;I2C.c: 67:     SSPCON2bits.SEN = 1;
 19920  3263  0024               	movlb	4	; select bank4
 19921  3264  1416               	bsf	22,0	;volatile
 19922  3265                     l324:	
 19923                           ;I2C.c: 68:     while (!PIR1bits.SSP1IF);
 19924                           
 19925  3265  0020               	movlb	0	; select bank0
 19926  3266  1991               	btfsc	17,3	;volatile
 19927  3267  0008               	return
 19928  3268  2A65               	goto	l324
 19929  3269                     __end_of_send_I2C_startBit:	
 19930                           
 19931                           	psect	text70
 19932  1800                     __ptext70:	
 19933 ;; *************** function _send_I2C_data *****************
 19934 ;; Defined at:
 19935 ;;		line 33 in file "I2C.c"
 19936 ;; Parameters:    Size  Location     Type
 19937 ;;  databyte        2    1[COMMON] unsigned int 
 19938 ;; Auto vars:     Size  Location     Type
 19939 ;;		None
 19940 ;; Return value:  Size  Location     Type
 19941 ;;                  1    wreg      void 
 19942 ;; Registers used:
 19943 ;;		wreg
 19944 ;; Tracked objects:
 19945 ;;		On entry : 0/0
 19946 ;;		On exit  : 0/0
 19947 ;;		Unchanged: 0/0
 19948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19953 ;;Total ram usage:        2 bytes
 19954 ;; Hardware stack levels used:    1
 19955 ;; Hardware stack levels required when called:    1
 19956 ;; This function calls:
 19957 ;;		Nothing
 19958 ;; This function is called by:
 19959 ;;		_I2C_writeRegister
 19960 ;;		_readRegister
 19961 ;; This function uses a non-reentrant model
 19962 ;;
 19963                           
 19964                           
 19965                           ;psect for function _send_I2C_data
 19966  1800                     _send_I2C_data:	
 19967                           
 19968                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
 19969                           
 19970                           ;incstack = 0
 19971                           ; Regs used in _send_I2C_data: [wreg]
 19972  1800  0020               	movlb	0	; select bank0
 19973  1801  1191               	bcf	17,3	;volatile
 19974                           
 19975                           ;I2C.c: 35:     SSPBUF = databyte;
 19976  1802  0871               	movf	send_I2C_data@databyte,w
 19977  1803  0024               	movlb	4	; select bank4
 19978  1804  0091               	movwf	17	;volatile
 19979  1805                     l306:	
 19980                           ;I2C.c: 37:     while (!PIR1bits.SSP1IF);
 19981                           
 19982  1805  0020               	movlb	0	; select bank0
 19983  1806  1991               	btfsc	17,3	;volatile
 19984  1807  0008               	return
 19985  1808  2805               	goto	l306
 19986  1809                     __end_of_send_I2C_data:	
 19987                           
 19988                           	psect	text71
 19989  3283                     __ptext71:	
 19990 ;; *************** function _send_I2C_controlByte *****************
 19991 ;; Defined at:
 19992 ;;		line 53 in file "I2C.c"
 19993 ;; Parameters:    Size  Location     Type
 19994 ;;  BlockAddress    2    1[COMMON] unsigned int 
 19995 ;;  RW_bit          2    3[COMMON] unsigned int 
 19996 ;; Auto vars:     Size  Location     Type
 19997 ;;		None
 19998 ;; Return value:  Size  Location     Type
 19999 ;;                  1    wreg      void 
 20000 ;; Registers used:
 20001 ;;		wreg, status,2, status,0
 20002 ;; Tracked objects:
 20003 ;;		On entry : 0/0
 20004 ;;		On exit  : 0/0
 20005 ;;		Unchanged: 0/0
 20006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20010 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20011 ;;Total ram usage:        4 bytes
 20012 ;; Hardware stack levels used:    1
 20013 ;; Hardware stack levels required when called:    1
 20014 ;; This function calls:
 20015 ;;		Nothing
 20016 ;; This function is called by:
 20017 ;;		_I2C_writeRegister
 20018 ;;		_readRegister
 20019 ;; This function uses a non-reentrant model
 20020 ;;
 20021                           
 20022                           
 20023                           ;psect for function _send_I2C_controlByte
 20024  3283                     _send_I2C_controlByte:	
 20025                           
 20026                           ;I2C.c: 54:     PIR1bits.SSP1IF = 0;
 20027                           
 20028                           ;incstack = 0
 20029                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
 20030  3283  0020               	movlb	0	; select bank0
 20031  3284  1191               	bcf	17,3	;volatile
 20032                           
 20033                           ;I2C.c: 60:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
 20034  3285  3571               	lslf	send_I2C_controlByte@BlockAddress,w
 20035  3286  0773               	addwf	send_I2C_controlByte@RW_bit,w
 20036  3287  0024               	movlb	4	; select bank4
 20037  3288  0091               	movwf	17	;volatile
 20038  3289                     l318:	
 20039                           ;I2C.c: 62:     while (!PIR1bits.SSP1IF);
 20040                           
 20041  3289  0020               	movlb	0	; select bank0
 20042  328A  1991               	btfsc	17,3	;volatile
 20043  328B  0008               	return
 20044  328C  2A89               	goto	l318
 20045  328D                     __end_of_send_I2C_controlByte:	
 20046                           
 20047                           	psect	text72
 20048  327A                     __ptext72:	
 20049 ;; *************** function _send_I2C_NACK *****************
 20050 ;; Defined at:
 20051 ;;		line 91 in file "I2C.c"
 20052 ;; Parameters:    Size  Location     Type
 20053 ;;		None
 20054 ;; Auto vars:     Size  Location     Type
 20055 ;;		None
 20056 ;; Return value:  Size  Location     Type
 20057 ;;                  1    wreg      void 
 20058 ;; Registers used:
 20059 ;;		None
 20060 ;; Tracked objects:
 20061 ;;		On entry : 0/0
 20062 ;;		On exit  : 0/0
 20063 ;;		Unchanged: 0/0
 20064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20069 ;;Total ram usage:        0 bytes
 20070 ;; Hardware stack levels used:    1
 20071 ;; Hardware stack levels required when called:    1
 20072 ;; This function calls:
 20073 ;;		Nothing
 20074 ;; This function is called by:
 20075 ;;		_readRegister
 20076 ;; This function uses a non-reentrant model
 20077 ;;
 20078                           
 20079                           
 20080                           ;psect for function _send_I2C_NACK
 20081  327A                     _send_I2C_NACK:	
 20082                           
 20083                           ;I2C.c: 92:     PIR1bits.SSP1IF = 0;
 20084                           
 20085                           ;incstack = 0
 20086                           ; Regs used in _send_I2C_NACK: []
 20087  327A  0020               	movlb	0	; select bank0
 20088  327B  1191               	bcf	17,3	;volatile
 20089                           
 20090                           ;I2C.c: 93:     SSPCON2bits.ACKDT = 1;
 20091  327C  0024               	movlb	4	; select bank4
 20092  327D  1696               	bsf	22,5	;volatile
 20093                           
 20094                           ;I2C.c: 94:     SSPCON2bits.ACKEN = 1;
 20095  327E  1616               	bsf	22,4	;volatile
 20096  327F                     l348:	
 20097                           ;I2C.c: 95:     while (!PIR1bits.SSP1IF);
 20098                           
 20099  327F  0020               	movlb	0	; select bank0
 20100  3280  1991               	btfsc	17,3	;volatile
 20101  3281  0008               	return
 20102  3282  2A7F               	goto	l348
 20103  3283                     __end_of_send_I2C_NACK:	
 20104                           
 20105                           	psect	text73
 20106  2002                     __ptext73:	
 20107 ;; *************** function _read_I2C_data *****************
 20108 ;; Defined at:
 20109 ;;		line 43 in file "I2C.c"
 20110 ;; Parameters:    Size  Location     Type
 20111 ;;		None
 20112 ;; Auto vars:     Size  Location     Type
 20113 ;;		None
 20114 ;; Return value:  Size  Location     Type
 20115 ;;                  2    1[COMMON] unsigned int 
 20116 ;; Registers used:
 20117 ;;		wreg
 20118 ;; Tracked objects:
 20119 ;;		On entry : 0/0
 20120 ;;		On exit  : 0/0
 20121 ;;		Unchanged: 0/0
 20122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20125 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20126 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20127 ;;Total ram usage:        4 bytes
 20128 ;; Hardware stack levels used:    1
 20129 ;; Hardware stack levels required when called:    1
 20130 ;; This function calls:
 20131 ;;		Nothing
 20132 ;; This function is called by:
 20133 ;;		_readRegister
 20134 ;; This function uses a non-reentrant model
 20135 ;;
 20136                           
 20137                           
 20138                           ;psect for function _read_I2C_data
 20139  2002                     _read_I2C_data:	
 20140                           
 20141                           ;I2C.c: 44:     PIR1bits.SSP1IF = 0;
 20142                           
 20143                           ;incstack = 0
 20144                           ; Regs used in _read_I2C_data: [wreg]
 20145  2002  0020               	movlb	0	; select bank0
 20146  2003  1191               	bcf	17,3	;volatile
 20147                           
 20148                           ;I2C.c: 45:     SSPCON2bits.RCEN = 1;
 20149  2004  0024               	movlb	4	; select bank4
 20150  2005  1596               	bsf	22,3	;volatile
 20151  2006                     l312:	
 20152                           ;I2C.c: 46:     while (!PIR1bits.SSP1IF);
 20153                           
 20154  2006  0020               	movlb	0	; select bank0
 20155  2007  1D91               	btfss	17,3	;volatile
 20156  2008  2806               	goto	l312
 20157                           
 20158                           ;I2C.c: 47:     return (SSPBUF);
 20159  2009  0024               	movlb	4	; select bank4
 20160  200A  0811               	movf	17,w	;volatile
 20161  200B  00F3               	movwf	??_read_I2C_data
 20162  200C  01F4               	clrf	??_read_I2C_data+1
 20163  200D  0873               	movf	??_read_I2C_data,w
 20164  200E  00F1               	movwf	?_read_I2C_data
 20165  200F  0874               	movf	??_read_I2C_data+1,w
 20166  2010  00F2               	movwf	?_read_I2C_data+1
 20167  2011  0008               	return
 20168  2012                     __end_of_read_I2C_data:	
 20169                           
 20170                           	psect	text74
 20171  32A1                     __ptext74:	
 20172 ;; *************** function _init_TMR1 *****************
 20173 ;; Defined at:
 20174 ;;		line 189 in file "main.c"
 20175 ;; Parameters:    Size  Location     Type
 20176 ;;		None
 20177 ;; Auto vars:     Size  Location     Type
 20178 ;;		None
 20179 ;; Return value:  Size  Location     Type
 20180 ;;                  1    wreg      void 
 20181 ;; Registers used:
 20182 ;;		wreg, status,2, status,0
 20183 ;; Tracked objects:
 20184 ;;		On entry : 0/0
 20185 ;;		On exit  : 0/0
 20186 ;;		Unchanged: 0/0
 20187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20192 ;;Total ram usage:        0 bytes
 20193 ;; Hardware stack levels used:    1
 20194 ;; Hardware stack levels required when called:    1
 20195 ;; This function calls:
 20196 ;;		Nothing
 20197 ;; This function is called by:
 20198 ;;		_main
 20199 ;; This function uses a non-reentrant model
 20200 ;;
 20201                           
 20202                           
 20203                           ;psect for function _init_TMR1
 20204  32A1                     _init_TMR1:	
 20205                           
 20206                           ;main.c: 192:     T1CONbits.T1CKPS = 0b00;
 20207                           
 20208                           ;incstack = 0
 20209                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 20210  32A1  30CF               	movlw	-49
 20211  32A2  0020               	movlb	0	; select bank0
 20212  32A3  0598               	andwf	24,f	;volatile
 20213                           
 20214                           ;main.c: 194:     TMR1 = 0;
 20215  32A4  0196               	clrf	22	;volatile
 20216  32A5  0197               	clrf	23	;volatile
 20217                           
 20218                           ;main.c: 196:     T1CONbits.TMR1ON = 1;
 20219  32A6  1418               	bsf	24,0	;volatile
 20220                           
 20221                           ;main.c: 198:     PIE1bits.TMR1IE = 1;
 20222  32A7  0021               	movlb	1	; select bank1
 20223  32A8  1411               	bsf	17,0	;volatile
 20224                           
 20225                           ;main.c: 200:     INTCONbits.PEIE = 1;
 20226  32A9  170B               	bsf	11,6	;volatile
 20227                           
 20228                           ;main.c: 202:     (INTCONbits.GIE = 1);
 20229  32AA  178B               	bsf	11,7	;volatile
 20230  32AB  0008               	return
 20231  32AC                     __end_of_init_TMR1:	
 20232                           
 20233                           	psect	text75
 20234  324F                     __ptext75:	
 20235 ;; *************** function _init_RGB *****************
 20236 ;; Defined at:
 20237 ;;		line 6 in file "RGB.c"
 20238 ;; Parameters:    Size  Location     Type
 20239 ;;		None
 20240 ;; Auto vars:     Size  Location     Type
 20241 ;;		None
 20242 ;; Return value:  Size  Location     Type
 20243 ;;                  1    wreg      void 
 20244 ;; Registers used:
 20245 ;;		None
 20246 ;; Tracked objects:
 20247 ;;		On entry : 0/0
 20248 ;;		On exit  : 0/0
 20249 ;;		Unchanged: 0/0
 20250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20255 ;;Total ram usage:        0 bytes
 20256 ;; Hardware stack levels used:    1
 20257 ;; Hardware stack levels required when called:    1
 20258 ;; This function calls:
 20259 ;;		Nothing
 20260 ;; This function is called by:
 20261 ;;		_main
 20262 ;; This function uses a non-reentrant model
 20263 ;;
 20264                           
 20265                           
 20266                           ;psect for function _init_RGB
 20267  324F                     _init_RGB:	
 20268                           
 20269                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 20270                           
 20271                           ;incstack = 0
 20272                           ; Regs used in _init_RGB: []
 20273  324F  0022               	movlb	2	; select bank2
 20274  3250  160C               	bsf	12,4	;volatile
 20275                           
 20276                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 20277  3251  168C               	bsf	12,5	;volatile
 20278                           
 20279                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 20280  3252  1410               	bsf	16,0	;volatile
 20281  3253  0008               	return
 20282  3254                     __end_of_init_RGB:	
 20283                           
 20284                           	psect	text76
 20285  32B8                     __ptext76:	
 20286 ;; *************** function _init_I2C *****************
 20287 ;; Defined at:
 20288 ;;		line 10 in file "I2C.c"
 20289 ;; Parameters:    Size  Location     Type
 20290 ;;		None
 20291 ;; Auto vars:     Size  Location     Type
 20292 ;;		None
 20293 ;; Return value:  Size  Location     Type
 20294 ;;                  1    wreg      void 
 20295 ;; Registers used:
 20296 ;;		wreg, status,2, status,0
 20297 ;; Tracked objects:
 20298 ;;		On entry : 0/0
 20299 ;;		On exit  : 0/0
 20300 ;;		Unchanged: 0/0
 20301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20304 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20305 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20306 ;;Total ram usage:        1 bytes
 20307 ;; Hardware stack levels used:    1
 20308 ;; Hardware stack levels required when called:    1
 20309 ;; This function calls:
 20310 ;;		Nothing
 20311 ;; This function is called by:
 20312 ;;		_main
 20313 ;; This function uses a non-reentrant model
 20314 ;;
 20315                           
 20316                           
 20317                           ;psect for function _init_I2C
 20318  32B8                     _init_I2C:	
 20319                           
 20320                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 20321                           
 20322                           ;incstack = 0
 20323                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 20324  32B8  0024               	movlb	4	; select bank4
 20325  32B9  0815               	movf	21,w	;volatile
 20326  32BA  39F0               	andlw	-16
 20327  32BB  3808               	iorlw	8
 20328  32BC  0095               	movwf	21	;volatile
 20329                           
 20330                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 20331  32BD  1695               	bsf	21,5	;volatile
 20332                           
 20333                           ;I2C.c: 24:     SSPADD = 39;
 20334  32BE  3027               	movlw	39
 20335  32BF  0092               	movwf	18	;volatile
 20336                           
 20337                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 20338  32C0  3034               	movlw	52
 20339  32C1  00F1               	movwf	??_init_I2C
 20340  32C2  30F2               	movlw	242
 20341  32C3                     u9787:	
 20342  32C3  0B89               	decfsz	9,f
 20343  32C4  2AC3               	goto	u9787
 20344  32C5  0BF1               	decfsz	??_init_I2C,f
 20345  32C6  2AC3               	goto	u9787
 20346  32C7  0008               	return
 20347  32C8                     __end_of_init_I2C:	
 20348                           
 20349                           	psect	text77
 20350  0808                     __ptext77:	
 20351 ;; *************** function _init_GPIO *****************
 20352 ;; Defined at:
 20353 ;;		line 206 in file "main.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;		None
 20356 ;; Auto vars:     Size  Location     Type
 20357 ;;		None
 20358 ;; Return value:  Size  Location     Type
 20359 ;;                  1    wreg      void 
 20360 ;; Registers used:
 20361 ;;		wreg, status,2, status,0
 20362 ;; Tracked objects:
 20363 ;;		On entry : 0/0
 20364 ;;		On exit  : 0/0
 20365 ;;		Unchanged: 0/0
 20366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20371 ;;Total ram usage:        0 bytes
 20372 ;; Hardware stack levels used:    1
 20373 ;; Hardware stack levels required when called:    1
 20374 ;; This function calls:
 20375 ;;		Nothing
 20376 ;; This function is called by:
 20377 ;;		_main
 20378 ;; This function uses a non-reentrant model
 20379 ;;
 20380                           
 20381                           
 20382                           ;psect for function _init_GPIO
 20383  0808                     _init_GPIO:	
 20384                           
 20385                           ;main.c: 212:     TRISBbits.TRISB2 = 0;
 20386                           
 20387                           ;incstack = 0
 20388                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 20389  0808  0021               	movlb	1	; select bank1
 20390  0809  110D               	bcf	13,2	;volatile
 20391                           
 20392                           ;main.c: 213:     ANSELBbits.ANSB2 = 0;
 20393  080A  0023               	movlb	3	; select bank3
 20394  080B  110D               	bcf	13,2	;volatile
 20395                           
 20396                           ;main.c: 214:     TRISBbits.TRISB3 = 1;
 20397  080C  0021               	movlb	1	; select bank1
 20398  080D  158D               	bsf	13,3	;volatile
 20399                           
 20400                           ;main.c: 215:     ANSELBbits.ANSB3 = 0;
 20401  080E  0023               	movlb	3	; select bank3
 20402  080F  118D               	bcf	13,3	;volatile
 20403                           
 20404                           ;main.c: 220:     ANSELCbits.ANSC4 = 0;
 20405  0810  120E               	bcf	14,4	;volatile
 20406                           
 20407                           ;main.c: 221:     ANSELCbits.ANSC5 = 0;
 20408  0811  128E               	bcf	14,5	;volatile
 20409                           
 20410                           ;main.c: 222:     TRISCbits.TRISC4 = 1;
 20411  0812  0021               	movlb	1	; select bank1
 20412  0813  160E               	bsf	14,4	;volatile
 20413                           
 20414                           ;main.c: 223:     TRISCbits.TRISC5 = 1;
 20415  0814  168E               	bsf	14,5	;volatile
 20416                           
 20417                           ;main.c: 232:     TRISAbits.TRISA4 = 0;
 20418  0815  120C               	bcf	12,4	;volatile
 20419                           
 20420                           ;main.c: 233:     TRISAbits.TRISA5 = 0;
 20421  0816  128C               	bcf	12,5	;volatile
 20422                           
 20423                           ;main.c: 234:     TRISEbits.TRISE0 = 0;
 20424  0817  1010               	bcf	16,0	;volatile
 20425                           
 20426                           ;main.c: 239:     TRISAbits.TRISA3 = 0;
 20427  0818  118C               	bcf	12,3	;volatile
 20428                           
 20429                           ;main.c: 240:     LATAbits.LATA3 = 0;
 20430  0819  0022               	movlb	2	; select bank2
 20431  081A  118C               	bcf	12,3	;volatile
 20432                           
 20433                           ;main.c: 246:     PPSLOCK = 0x55;
 20434  081B  3055               	movlw	85
 20435  081C  003C               	movlb	28	; select bank28
 20436  081D  008F               	movwf	15	;volsfr
 20437                           
 20438                           ;main.c: 247:     PPSLOCK = 0xAA;
 20439  081E  30AA               	movlw	170
 20440  081F  008F               	movwf	15	;volsfr
 20441                           
 20442                           ;main.c: 248:     PPSLOCKbits.PPSLOCKED = 0x00;
 20443  0820  100F               	bcf	15,0	;volsfr
 20444                           
 20445                           ;main.c: 252:     RC4PPSbits.RC4PPS = 0x0011;
 20446  0821  003D               	movlb	29	; select bank29
 20447  0822  0824               	movf	36,w	;volatile
 20448  0823  39E0               	andlw	-32
 20449  0824  3811               	iorlw	17
 20450  0825  00A4               	movwf	36	;volatile
 20451                           
 20452                           ;main.c: 253:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 20453  0826  003C               	movlb	28	; select bank28
 20454  0827  0821               	movf	33,w	;volatile
 20455  0828  39E0               	andlw	-32
 20456  0829  3814               	iorlw	20
 20457  082A  00A1               	movwf	33	;volatile
 20458                           
 20459                           ;main.c: 254:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 20460  082B  0820               	movf	32,w	;volatile
 20461  082C  39E0               	andlw	-32
 20462  082D  3815               	iorlw	21
 20463  082E  00A0               	movwf	32	;volatile
 20464                           
 20465                           ;main.c: 255:     RC5PPSbits.RC5PPS = 0x0010;
 20466  082F  003D               	movlb	29	; select bank29
 20467  0830  0825               	movf	37,w	;volatile
 20468  0831  39E0               	andlw	-32
 20469  0832  3810               	iorlw	16
 20470  0833  00A5               	movwf	37	;volatile
 20471                           
 20472                           ;main.c: 258:     RB2PPSbits.RB2PPS = 0x14;
 20473  0834  081A               	movf	26,w	;volatile
 20474  0835  39E0               	andlw	-32
 20475  0836  3814               	iorlw	20
 20476  0837  009A               	movwf	26	;volatile
 20477                           
 20478                           ;main.c: 259:     RXPPSbits.RXPPS = 0x0B;
 20479  0838  003C               	movlb	28	; select bank28
 20480  0839  0824               	movf	36,w	;volatile
 20481  083A  39E0               	andlw	-32
 20482  083B  380B               	iorlw	11
 20483  083C  00A4               	movwf	36	;volatile
 20484                           
 20485                           ;main.c: 261:     PPSLOCK = 0x55;
 20486  083D  3055               	movlw	85
 20487  083E  008F               	movwf	15	;volsfr
 20488                           
 20489                           ;main.c: 262:     PPSLOCK = 0xAA;
 20490  083F  30AA               	movlw	170
 20491  0840  008F               	movwf	15	;volsfr
 20492                           
 20493                           ;main.c: 263:     PPSLOCKbits.PPSLOCKED = 0x01;
 20494  0841  140F               	bsf	15,0	;volsfr
 20495  0842  0008               	return
 20496  0843                     __end_of_init_GPIO:	
 20497                           
 20498                           	psect	text78
 20499  3254                     __ptext78:	
 20500 ;; *************** function _initWDT *****************
 20501 ;; Defined at:
 20502 ;;		line 267 in file "main.c"
 20503 ;; Parameters:    Size  Location     Type
 20504 ;;		None
 20505 ;; Auto vars:     Size  Location     Type
 20506 ;;		None
 20507 ;; Return value:  Size  Location     Type
 20508 ;;                  1    wreg      void 
 20509 ;; Registers used:
 20510 ;;		wreg, status,2, status,0
 20511 ;; Tracked objects:
 20512 ;;		On entry : 0/0
 20513 ;;		On exit  : 0/0
 20514 ;;		Unchanged: 0/0
 20515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20520 ;;Total ram usage:        0 bytes
 20521 ;; Hardware stack levels used:    1
 20522 ;; Hardware stack levels required when called:    1
 20523 ;; This function calls:
 20524 ;;		Nothing
 20525 ;; This function is called by:
 20526 ;;		_main
 20527 ;; This function uses a non-reentrant model
 20528 ;;
 20529                           
 20530                           
 20531                           ;psect for function _initWDT
 20532  3254                     _initWDT:	
 20533                           
 20534                           ;main.c: 269:     WDTCONbits.WDTPS = 0b01101;
 20535                           
 20536                           ;incstack = 0
 20537                           ; Regs used in _initWDT: [wreg+status,2+status,0]
 20538  3254  0021               	movlb	1	; select bank1
 20539  3255  0817               	movf	23,w	;volatile
 20540  3256  39C1               	andlw	-63
 20541  3257  381A               	iorlw	26
 20542  3258  0097               	movwf	23	;volatile
 20543  3259  0008               	return
 20544  325A                     __end_of_initWDT:	
 20545                           
 20546                           	psect	text79
 20547  2800                     __ptext79:	
 20548 ;; *************** function _initClock *****************
 20549 ;; Defined at:
 20550 ;;		line 180 in file "main.c"
 20551 ;; Parameters:    Size  Location     Type
 20552 ;;		None
 20553 ;; Auto vars:     Size  Location     Type
 20554 ;;		None
 20555 ;; Return value:  Size  Location     Type
 20556 ;;                  1    wreg      void 
 20557 ;; Registers used:
 20558 ;;		status,2, status,0, pclath, cstack
 20559 ;; Tracked objects:
 20560 ;;		On entry : 0/0
 20561 ;;		On exit  : 0/0
 20562 ;;		Unchanged: 0/0
 20563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20568 ;;Total ram usage:        0 bytes
 20569 ;; Hardware stack levels used:    1
 20570 ;; Hardware stack levels required when called:    2
 20571 ;; This function calls:
 20572 ;;		_internal_16
 20573 ;; This function is called by:
 20574 ;;		_main
 20575 ;; This function uses a non-reentrant model
 20576 ;;
 20577                           
 20578                           
 20579                           ;psect for function _initClock
 20580  2800                     _initClock:	
 20581                           
 20582                           ;main.c: 182:     internal_16();
 20583                           
 20584                           ;incstack = 0
 20585                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 20586  2800  31B2  2271         	fcall	_internal_16
 20587  2802  0008               	return
 20588  2803                     __end_of_initClock:	
 20589                           
 20590                           	psect	text80
 20591  3271                     __ptext80:	
 20592 ;; *************** function _internal_16 *****************
 20593 ;; Defined at:
 20594 ;;		line 26 in file "pic16f1719_internals.c"
 20595 ;; Parameters:    Size  Location     Type
 20596 ;;		None
 20597 ;; Auto vars:     Size  Location     Type
 20598 ;;		None
 20599 ;; Return value:  Size  Location     Type
 20600 ;;                  1    wreg      void 
 20601 ;; Registers used:
 20602 ;;		None
 20603 ;; Tracked objects:
 20604 ;;		On entry : 0/0
 20605 ;;		On exit  : 0/0
 20606 ;;		Unchanged: 0/0
 20607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20612 ;;Total ram usage:        0 bytes
 20613 ;; Hardware stack levels used:    1
 20614 ;; Hardware stack levels required when called:    1
 20615 ;; This function calls:
 20616 ;;		Nothing
 20617 ;; This function is called by:
 20618 ;;		_initClock
 20619 ;; This function uses a non-reentrant model
 20620 ;;
 20621                           
 20622                           
 20623                           ;psect for function _internal_16
 20624  3271                     _internal_16:	
 20625                           
 20626                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 20627                           
 20628                           ;incstack = 0
 20629                           ; Regs used in _internal_16: []
 20630  3271  0021               	movlb	1	; select bank1
 20631  3272  1019               	bcf	25,0	;volatile
 20632                           
 20633                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 20634  3273  1099               	bcf	25,1	;volatile
 20635                           
 20636                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 20637  3274  1599               	bsf	25,3	;volatile
 20638                           
 20639                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 20640  3275  1619               	bsf	25,4	;volatile
 20641                           
 20642                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 20643  3276  1699               	bsf	25,5	;volatile
 20644                           
 20645                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 20646  3277  1719               	bsf	25,6	;volatile
 20647                           
 20648                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 20649  3278  1399               	bcf	25,7	;volatile
 20650  3279  0008               	return
 20651  327A                     __end_of_internal_16:	
 20652                           
 20653                           	psect	text81
 20654  2D1A                     __ptext81:	
 20655 ;; *************** function _EUSART_Initialize *****************
 20656 ;; Defined at:
 20657 ;;		line 6 in file "EUSART.c"
 20658 ;; Parameters:    Size  Location     Type
 20659 ;;  baudrate        4   18[BANK0 ] const long 
 20660 ;; Auto vars:     Size  Location     Type
 20661 ;;  x               2   10[COMMON] unsigned int 
 20662 ;; Return value:  Size  Location     Type
 20663 ;;                  1    wreg      unsigned char 
 20664 ;; Registers used:
 20665 ;;		wreg, status,2, status,0, pclath, cstack
 20666 ;; Tracked objects:
 20667 ;;		On entry : 0/0
 20668 ;;		On exit  : 0/0
 20669 ;;		Unchanged: 0/0
 20670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20671 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20673 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20674 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20675 ;;Total ram usage:       18 bytes
 20676 ;; Hardware stack levels used:    1
 20677 ;; Hardware stack levels required when called:    2
 20678 ;; This function calls:
 20679 ;;		___aldiv
 20680 ;; This function is called by:
 20681 ;;		_main
 20682 ;; This function uses a non-reentrant model
 20683 ;;
 20684                           
 20685                           
 20686                           ;psect for function _EUSART_Initialize
 20687  2D1A                     _EUSART_Initialize:	
 20688                           
 20689                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 20690                           
 20691                           ;incstack = 0
 20692                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 20693  2D1A  0020               	movlb	0	; select bank0
 20694  2D1B  0832               	movf	EUSART_Initialize@baudrate,w
 20695  2D1C  00B6               	movwf	??_EUSART_Initialize
 20696  2D1D  0833               	movf	EUSART_Initialize@baudrate+1,w
 20697  2D1E  00B7               	movwf	??_EUSART_Initialize+1
 20698  2D1F  0834               	movf	EUSART_Initialize@baudrate+2,w
 20699  2D20  00B8               	movwf	??_EUSART_Initialize+2
 20700  2D21  0835               	movf	EUSART_Initialize@baudrate+3,w
 20701  2D22  00B9               	movwf	??_EUSART_Initialize+3
 20702  2D23  3006               	movlw	6
 20703  2D24                     u9675:	
 20704  2D24  35B6               	lslf	??_EUSART_Initialize,f
 20705  2D25  0DB7               	rlf	??_EUSART_Initialize+1,f
 20706  2D26  0DB8               	rlf	??_EUSART_Initialize+2,f
 20707  2D27  0DB9               	rlf	??_EUSART_Initialize+3,f
 20708  2D28  0B89               	decfsz	9,f
 20709  2D29  2D24               	goto	u9675
 20710  2D2A  0839               	movf	??_EUSART_Initialize+3,w
 20711  2D2B  00A7               	movwf	___aldiv@divisor+3
 20712  2D2C  0838               	movf	??_EUSART_Initialize+2,w
 20713  2D2D  00A6               	movwf	___aldiv@divisor+2
 20714  2D2E  0837               	movf	??_EUSART_Initialize+1,w
 20715  2D2F  00A5               	movwf	___aldiv@divisor+1
 20716  2D30  0836               	movf	??_EUSART_Initialize,w
 20717  2D31  00A4               	movwf	___aldiv@divisor
 20718  2D32  0832               	movf	EUSART_Initialize@baudrate,w
 20719  2D33  00BA               	movwf	??_EUSART_Initialize+4
 20720  2D34  0833               	movf	EUSART_Initialize@baudrate+1,w
 20721  2D35  00BB               	movwf	??_EUSART_Initialize+5
 20722  2D36  0834               	movf	EUSART_Initialize@baudrate+2,w
 20723  2D37  00BC               	movwf	??_EUSART_Initialize+6
 20724  2D38  0835               	movf	EUSART_Initialize@baudrate+3,w
 20725  2D39  00BD               	movwf	??_EUSART_Initialize+7
 20726  2D3A  3006               	movlw	6
 20727  2D3B                     u9685:	
 20728  2D3B  35BA               	lslf	??_EUSART_Initialize+4,f
 20729  2D3C  0DBB               	rlf	??_EUSART_Initialize+5,f
 20730  2D3D  0DBC               	rlf	??_EUSART_Initialize+6,f
 20731  2D3E  0DBD               	rlf	??_EUSART_Initialize+7,f
 20732  2D3F  0B89               	decfsz	9,f
 20733  2D40  2D3B               	goto	u9685
 20734  2D41  3000               	movlw	0
 20735  2D42  00BE               	movwf	??_EUSART_Initialize+8
 20736  2D43  3024               	movlw	36
 20737  2D44  00BF               	movwf	??_EUSART_Initialize+9
 20738  2D45  30F4               	movlw	244
 20739  2D46  00C0               	movwf	??_EUSART_Initialize+10
 20740  2D47  3000               	movlw	0
 20741  2D48  00C1               	movwf	??_EUSART_Initialize+11
 20742  2D49  083A               	movf	??_EUSART_Initialize+4,w
 20743  2D4A  02BE               	subwf	??_EUSART_Initialize+8,f
 20744  2D4B  083B               	movf	??_EUSART_Initialize+5,w
 20745  2D4C  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20746  2D4D  083C               	movf	??_EUSART_Initialize+6,w
 20747  2D4E  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20748  2D4F  083D               	movf	??_EUSART_Initialize+7,w
 20749  2D50  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20750  2D51  0841               	movf	??_EUSART_Initialize+11,w
 20751  2D52  00AB               	movwf	___aldiv@dividend+3
 20752  2D53  0840               	movf	??_EUSART_Initialize+10,w
 20753  2D54  00AA               	movwf	___aldiv@dividend+2
 20754  2D55  083F               	movf	??_EUSART_Initialize+9,w
 20755  2D56  00A9               	movwf	___aldiv@dividend+1
 20756  2D57  083E               	movf	??_EUSART_Initialize+8,w
 20757  2D58  00A8               	movwf	___aldiv@dividend
 20758  2D59  31AB  2361  31AD   	fcall	___aldiv
 20759  2D5C  0020               	movlb	0	; select bank0
 20760  2D5D  0825               	movf	?___aldiv+1,w
 20761  2D5E  00FB               	movwf	EUSART_Initialize@x+1
 20762  2D5F  0824               	movf	?___aldiv,w
 20763  2D60  00FA               	movwf	EUSART_Initialize@x
 20764                           
 20765                           ;EUSART.c: 10:  if(x>255)
 20766  2D61  3001               	movlw	1
 20767  2D62  027B               	subwf	EUSART_Initialize@x+1,w
 20768  2D63  3000               	movlw	0
 20769  2D64  1903               	skipnz
 20770  2D65  027A               	subwf	EUSART_Initialize@x,w
 20771  2D66  1C03               	skipc
 20772  2D67  2DB0               	goto	l7748
 20773                           
 20774                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 20775  2D68  0832               	movf	EUSART_Initialize@baudrate,w
 20776  2D69  00B6               	movwf	??_EUSART_Initialize
 20777  2D6A  0833               	movf	EUSART_Initialize@baudrate+1,w
 20778  2D6B  00B7               	movwf	??_EUSART_Initialize+1
 20779  2D6C  0834               	movf	EUSART_Initialize@baudrate+2,w
 20780  2D6D  00B8               	movwf	??_EUSART_Initialize+2
 20781  2D6E  0835               	movf	EUSART_Initialize@baudrate+3,w
 20782  2D6F  00B9               	movwf	??_EUSART_Initialize+3
 20783  2D70  3004               	movlw	4
 20784  2D71                     u9705:	
 20785  2D71  35B6               	lslf	??_EUSART_Initialize,f
 20786  2D72  0DB7               	rlf	??_EUSART_Initialize+1,f
 20787  2D73  0DB8               	rlf	??_EUSART_Initialize+2,f
 20788  2D74  0DB9               	rlf	??_EUSART_Initialize+3,f
 20789  2D75  0B89               	decfsz	9,f
 20790  2D76  2D71               	goto	u9705
 20791  2D77  0839               	movf	??_EUSART_Initialize+3,w
 20792  2D78  00A7               	movwf	___aldiv@divisor+3
 20793  2D79  0838               	movf	??_EUSART_Initialize+2,w
 20794  2D7A  00A6               	movwf	___aldiv@divisor+2
 20795  2D7B  0837               	movf	??_EUSART_Initialize+1,w
 20796  2D7C  00A5               	movwf	___aldiv@divisor+1
 20797  2D7D  0836               	movf	??_EUSART_Initialize,w
 20798  2D7E  00A4               	movwf	___aldiv@divisor
 20799  2D7F  0832               	movf	EUSART_Initialize@baudrate,w
 20800  2D80  00BA               	movwf	??_EUSART_Initialize+4
 20801  2D81  0833               	movf	EUSART_Initialize@baudrate+1,w
 20802  2D82  00BB               	movwf	??_EUSART_Initialize+5
 20803  2D83  0834               	movf	EUSART_Initialize@baudrate+2,w
 20804  2D84  00BC               	movwf	??_EUSART_Initialize+6
 20805  2D85  0835               	movf	EUSART_Initialize@baudrate+3,w
 20806  2D86  00BD               	movwf	??_EUSART_Initialize+7
 20807  2D87  3004               	movlw	4
 20808  2D88                     u9715:	
 20809  2D88  35BA               	lslf	??_EUSART_Initialize+4,f
 20810  2D89  0DBB               	rlf	??_EUSART_Initialize+5,f
 20811  2D8A  0DBC               	rlf	??_EUSART_Initialize+6,f
 20812  2D8B  0DBD               	rlf	??_EUSART_Initialize+7,f
 20813  2D8C  0B89               	decfsz	9,f
 20814  2D8D  2D88               	goto	u9715
 20815  2D8E  3000               	movlw	0
 20816  2D8F  00BE               	movwf	??_EUSART_Initialize+8
 20817  2D90  3024               	movlw	36
 20818  2D91  00BF               	movwf	??_EUSART_Initialize+9
 20819  2D92  30F4               	movlw	244
 20820  2D93  00C0               	movwf	??_EUSART_Initialize+10
 20821  2D94  3000               	movlw	0
 20822  2D95  00C1               	movwf	??_EUSART_Initialize+11
 20823  2D96  083A               	movf	??_EUSART_Initialize+4,w
 20824  2D97  02BE               	subwf	??_EUSART_Initialize+8,f
 20825  2D98  083B               	movf	??_EUSART_Initialize+5,w
 20826  2D99  3BBF               	subwfb	??_EUSART_Initialize+9,f
 20827  2D9A  083C               	movf	??_EUSART_Initialize+6,w
 20828  2D9B  3BC0               	subwfb	??_EUSART_Initialize+10,f
 20829  2D9C  083D               	movf	??_EUSART_Initialize+7,w
 20830  2D9D  3BC1               	subwfb	??_EUSART_Initialize+11,f
 20831  2D9E  0841               	movf	??_EUSART_Initialize+11,w
 20832  2D9F  00AB               	movwf	___aldiv@dividend+3
 20833  2DA0  0840               	movf	??_EUSART_Initialize+10,w
 20834  2DA1  00AA               	movwf	___aldiv@dividend+2
 20835  2DA2  083F               	movf	??_EUSART_Initialize+9,w
 20836  2DA3  00A9               	movwf	___aldiv@dividend+1
 20837  2DA4  083E               	movf	??_EUSART_Initialize+8,w
 20838  2DA5  00A8               	movwf	___aldiv@dividend
 20839  2DA6  31AB  2361  31AD   	fcall	___aldiv
 20840  2DA9  0020               	movlb	0	; select bank0
 20841  2DAA  0825               	movf	?___aldiv+1,w
 20842  2DAB  00FB               	movwf	EUSART_Initialize@x+1
 20843  2DAC  0824               	movf	?___aldiv,w
 20844  2DAD  00FA               	movwf	EUSART_Initialize@x
 20845                           
 20846                           ;EUSART.c: 13:   BRGH = 1;
 20847  2DAE  0023               	movlb	3	; select bank3
 20848  2DAF  151E               	bsf	30,2	;volatile
 20849  2DB0                     l7748:	
 20850                           
 20851                           ;EUSART.c: 15:  if(x<256)
 20852  2DB0  3001               	movlw	1
 20853  2DB1  027B               	subwf	EUSART_Initialize@x+1,w
 20854  2DB2  3000               	movlw	0
 20855  2DB3  1903               	skipnz
 20856  2DB4  027A               	subwf	EUSART_Initialize@x,w
 20857  2DB5  1803               	skipnc
 20858  2DB6  0008               	return
 20859                           
 20860                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 20861  2DB7  087A               	movf	EUSART_Initialize@x,w
 20862  2DB8  0023               	movlb	3	; select bank3
 20863  2DB9  009B               	movwf	27	;volatile
 20864                           
 20865                           ;EUSART.c: 18:    SYNC = 0;
 20866  2DBA  121E               	bcf	30,4	;volatile
 20867                           
 20868                           ;EUSART.c: 19:    SPEN = 1;
 20869  2DBB  179D               	bsf	29,7	;volatile
 20870                           
 20871                           ;EUSART.c: 20:           TRISC7 = 1;
 20872  2DBC  0021               	movlb	1	; select bank1
 20873  2DBD  178E               	bsf	14,7	;volatile
 20874                           
 20875                           ;EUSART.c: 21:           TRISC6 = 1;
 20876  2DBE  170E               	bsf	14,6	;volatile
 20877                           
 20878                           ;EUSART.c: 22:           CREN = 1;
 20879  2DBF  0023               	movlb	3	; select bank3
 20880  2DC0  161D               	bsf	29,4	;volatile
 20881                           
 20882                           ;EUSART.c: 23:           TXEN = 1;
 20883  2DC1  169E               	bsf	30,5	;volatile
 20884  2DC2  0008               	return
 20885  2DC3                     __end_of_EUSART_Initialize:	
 20886                           
 20887                           	psect	text82
 20888  2B61                     __ptext82:	
 20889 ;; *************** function ___aldiv *****************
 20890 ;; Defined at:
 20891 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 20892 ;; Parameters:    Size  Location     Type
 20893 ;;  divisor         4    4[BANK0 ] long 
 20894 ;;  dividend        4    8[BANK0 ] long 
 20895 ;; Auto vars:     Size  Location     Type
 20896 ;;  quotient        4   14[BANK0 ] long 
 20897 ;;  sign            1   13[BANK0 ] unsigned char 
 20898 ;;  counter         1   12[BANK0 ] unsigned char 
 20899 ;; Return value:  Size  Location     Type
 20900 ;;                  4    4[BANK0 ] long 
 20901 ;; Registers used:
 20902 ;;		wreg, status,2, status,0
 20903 ;; Tracked objects:
 20904 ;;		On entry : 0/0
 20905 ;;		On exit  : 0/0
 20906 ;;		Unchanged: 0/0
 20907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20908 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20909 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20910 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20911 ;;      Totals:         1      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20912 ;;Total ram usage:       15 bytes
 20913 ;; Hardware stack levels used:    1
 20914 ;; Hardware stack levels required when called:    1
 20915 ;; This function calls:
 20916 ;;		Nothing
 20917 ;; This function is called by:
 20918 ;;		_EUSART_Initialize
 20919 ;;		_setCellUndervoltageProtection
 20920 ;;		_setCellOvervoltageProtection
 20921 ;;		_updateVoltages
 20922 ;; This function uses a non-reentrant model
 20923 ;;
 20924                           
 20925                           
 20926                           ;psect for function ___aldiv
 20927  2B61                     ___aldiv:	
 20928                           
 20929                           ;incstack = 0
 20930                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 20931  2B61  0020               	movlb	0	; select bank0
 20932  2B62  01AD               	clrf	___aldiv@sign
 20933  2B63  1FA7               	btfss	___aldiv@divisor+3,7
 20934  2B64  2B72               	goto	l1086
 20935  2B65  09A4               	comf	___aldiv@divisor,f
 20936  2B66  09A5               	comf	___aldiv@divisor+1,f
 20937  2B67  09A6               	comf	___aldiv@divisor+2,f
 20938  2B68  09A7               	comf	___aldiv@divisor+3,f
 20939  2B69  0AA4               	incf	___aldiv@divisor,f
 20940  2B6A  1903               	skipnz
 20941  2B6B  0AA5               	incf	___aldiv@divisor+1,f
 20942  2B6C  1903               	skipnz
 20943  2B6D  0AA6               	incf	___aldiv@divisor+2,f
 20944  2B6E  1903               	skipnz
 20945  2B6F  0AA7               	incf	___aldiv@divisor+3,f
 20946  2B70  01AD               	clrf	___aldiv@sign
 20947  2B71  0AAD               	incf	___aldiv@sign,f
 20948  2B72                     l1086:	
 20949  2B72  1FAB               	btfss	___aldiv@dividend+3,7
 20950  2B73  2B83               	goto	l7338
 20951  2B74  09A8               	comf	___aldiv@dividend,f
 20952  2B75  09A9               	comf	___aldiv@dividend+1,f
 20953  2B76  09AA               	comf	___aldiv@dividend+2,f
 20954  2B77  09AB               	comf	___aldiv@dividend+3,f
 20955  2B78  0AA8               	incf	___aldiv@dividend,f
 20956  2B79  1903               	skipnz
 20957  2B7A  0AA9               	incf	___aldiv@dividend+1,f
 20958  2B7B  1903               	skipnz
 20959  2B7C  0AAA               	incf	___aldiv@dividend+2,f
 20960  2B7D  1903               	skipnz
 20961  2B7E  0AAB               	incf	___aldiv@dividend+3,f
 20962  2B7F  3001               	movlw	1
 20963  2B80  00F9               	movwf	??___aldiv
 20964  2B81  0879               	movf	??___aldiv,w
 20965  2B82  06AD               	xorwf	___aldiv@sign,f
 20966  2B83                     l7338:	
 20967  2B83  3000               	movlw	0
 20968  2B84  00B1               	movwf	___aldiv@quotient+3
 20969  2B85  3000               	movlw	0
 20970  2B86  00B0               	movwf	___aldiv@quotient+2
 20971  2B87  3000               	movlw	0
 20972  2B88  00AF               	movwf	___aldiv@quotient+1
 20973  2B89  3000               	movlw	0
 20974  2B8A  00AE               	movwf	___aldiv@quotient
 20975  2B8B  0827               	movf	___aldiv@divisor+3,w
 20976  2B8C  0426               	iorwf	___aldiv@divisor+2,w
 20977  2B8D  0425               	iorwf	___aldiv@divisor+1,w
 20978  2B8E  0424               	iorwf	___aldiv@divisor,w
 20979  2B8F  1903               	skipnz
 20980  2B90  2BCC               	goto	l7360
 20981  2B91  01AC               	clrf	___aldiv@counter
 20982  2B92  0AAC               	incf	___aldiv@counter,f
 20983  2B93                     l7346:	
 20984  2B93  1BA7               	btfsc	___aldiv@divisor+3,7
 20985  2B94  2BA1               	goto	l7348
 20986  2B95  3001               	movlw	1
 20987  2B96                     u9245:	
 20988  2B96  35A4               	lslf	___aldiv@divisor,f
 20989  2B97  0DA5               	rlf	___aldiv@divisor+1,f
 20990  2B98  0DA6               	rlf	___aldiv@divisor+2,f
 20991  2B99  0DA7               	rlf	___aldiv@divisor+3,f
 20992  2B9A  0B89               	decfsz	9,f
 20993  2B9B  2B96               	goto	u9245
 20994  2B9C  3001               	movlw	1
 20995  2B9D  00F9               	movwf	??___aldiv
 20996  2B9E  0879               	movf	??___aldiv,w
 20997  2B9F  07AC               	addwf	___aldiv@counter,f
 20998  2BA0  2B93               	goto	l7346
 20999  2BA1                     l7348:	
 21000  2BA1  3001               	movlw	1
 21001  2BA2                     u9265:	
 21002  2BA2  35AE               	lslf	___aldiv@quotient,f
 21003  2BA3  0DAF               	rlf	___aldiv@quotient+1,f
 21004  2BA4  0DB0               	rlf	___aldiv@quotient+2,f
 21005  2BA5  0DB1               	rlf	___aldiv@quotient+3,f
 21006  2BA6  0B89               	decfsz	9,f
 21007  2BA7  2BA2               	goto	u9265
 21008  2BA8  0827               	movf	___aldiv@divisor+3,w
 21009  2BA9  022B               	subwf	___aldiv@dividend+3,w
 21010  2BAA  1D03               	skipz
 21011  2BAB  2BB6               	goto	u9275
 21012  2BAC  0826               	movf	___aldiv@divisor+2,w
 21013  2BAD  022A               	subwf	___aldiv@dividend+2,w
 21014  2BAE  1D03               	skipz
 21015  2BAF  2BB6               	goto	u9275
 21016  2BB0  0825               	movf	___aldiv@divisor+1,w
 21017  2BB1  0229               	subwf	___aldiv@dividend+1,w
 21018  2BB2  1D03               	skipz
 21019  2BB3  2BB6               	goto	u9275
 21020  2BB4  0824               	movf	___aldiv@divisor,w
 21021  2BB5  0228               	subwf	___aldiv@dividend,w
 21022  2BB6                     u9275:	
 21023  2BB6  1C03               	skipc
 21024  2BB7  2BC1               	goto	l7356
 21025  2BB8  0824               	movf	___aldiv@divisor,w
 21026  2BB9  02A8               	subwf	___aldiv@dividend,f
 21027  2BBA  0825               	movf	___aldiv@divisor+1,w
 21028  2BBB  3BA9               	subwfb	___aldiv@dividend+1,f
 21029  2BBC  0826               	movf	___aldiv@divisor+2,w
 21030  2BBD  3BAA               	subwfb	___aldiv@dividend+2,f
 21031  2BBE  0827               	movf	___aldiv@divisor+3,w
 21032  2BBF  3BAB               	subwfb	___aldiv@dividend+3,f
 21033  2BC0  142E               	bsf	___aldiv@quotient,0
 21034  2BC1                     l7356:	
 21035  2BC1  3001               	movlw	1
 21036  2BC2                     u9285:	
 21037  2BC2  36A7               	lsrf	___aldiv@divisor+3,f
 21038  2BC3  0CA6               	rrf	___aldiv@divisor+2,f
 21039  2BC4  0CA5               	rrf	___aldiv@divisor+1,f
 21040  2BC5  0CA4               	rrf	___aldiv@divisor,f
 21041  2BC6  0B89               	decfsz	9,f
 21042  2BC7  2BC2               	goto	u9285
 21043  2BC8  3001               	movlw	1
 21044  2BC9  02AC               	subwf	___aldiv@counter,f
 21045  2BCA  1D03               	btfss	3,2
 21046  2BCB  2BA1               	goto	l7348
 21047  2BCC                     l7360:	
 21048  2BCC  082D               	movf	___aldiv@sign,w
 21049  2BCD  1903               	btfsc	3,2
 21050  2BCE  2BDA               	goto	l7364
 21051  2BCF  09AE               	comf	___aldiv@quotient,f
 21052  2BD0  09AF               	comf	___aldiv@quotient+1,f
 21053  2BD1  09B0               	comf	___aldiv@quotient+2,f
 21054  2BD2  09B1               	comf	___aldiv@quotient+3,f
 21055  2BD3  0AAE               	incf	___aldiv@quotient,f
 21056  2BD4  1903               	skipnz
 21057  2BD5  0AAF               	incf	___aldiv@quotient+1,f
 21058  2BD6  1903               	skipnz
 21059  2BD7  0AB0               	incf	___aldiv@quotient+2,f
 21060  2BD8  1903               	skipnz
 21061  2BD9  0AB1               	incf	___aldiv@quotient+3,f
 21062  2BDA                     l7364:	
 21063  2BDA  0831               	movf	___aldiv@quotient+3,w
 21064  2BDB  00A7               	movwf	?___aldiv+3
 21065  2BDC  0830               	movf	___aldiv@quotient+2,w
 21066  2BDD  00A6               	movwf	?___aldiv+2
 21067  2BDE  082F               	movf	___aldiv@quotient+1,w
 21068  2BDF  00A5               	movwf	?___aldiv+1
 21069  2BE0  082E               	movf	___aldiv@quotient,w
 21070  2BE1  00A4               	movwf	?___aldiv
 21071  2BE2  0008               	return
 21072  2BE3                     __end_of___aldiv:	
 21073                           
 21074                           	psect	intentry
 21075  0004                     __pintentry:	
 21076 ;; *************** function _myIsr *****************
 21077 ;; Defined at:
 21078 ;;		line 54 in file "main.c"
 21079 ;; Parameters:    Size  Location     Type
 21080 ;;		None
 21081 ;; Auto vars:     Size  Location     Type
 21082 ;;		None
 21083 ;; Return value:  Size  Location     Type
 21084 ;;                  1    wreg      void 
 21085 ;; Registers used:
 21086 ;;		wreg, status,2, status,0
 21087 ;; Tracked objects:
 21088 ;;		On entry : 0/0
 21089 ;;		On exit  : 0/0
 21090 ;;		Unchanged: 0/0
 21091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21094 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21095 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21096 ;;Total ram usage:        1 bytes
 21097 ;; Hardware stack levels used:    1
 21098 ;; This function calls:
 21099 ;;		Nothing
 21100 ;; This function is called by:
 21101 ;;		Interrupt level 1
 21102 ;; This function uses a non-reentrant model
 21103 ;;
 21104                           
 21105  0004                     _myIsr:	
 21106                           
 21107                           ;incstack = 0
 21108  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21109                           
 21110                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 21111  0005  3180               	pagesel	$
 21112                           
 21113                           ;main.c: 56:     static uint8_t count = 0;;main.c: 58:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 21114  0006  0020               	movlb	0	; select bank0
 21115  0007  1C11               	btfss	17,0	;volatile
 21116  0008  281C               	goto	i1l173
 21117  0009  0021               	movlb	1	; select bank1
 21118  000A  1C11               	btfss	17,0	;volatile
 21119  000B  281C               	goto	i1l173
 21120                           
 21121                           ;main.c: 59:         PIR1bits.TMR1IF = 0;
 21122  000C  0020               	movlb	0	; select bank0
 21123  000D  1011               	bcf	17,0	;volatile
 21124                           
 21125                           ;main.c: 60:         count++;
 21126  000E  3001               	movlw	1
 21127  000F  00F0               	movwf	??_myIsr
 21128  0010  0870               	movf	??_myIsr,w
 21129  0011  0023               	movlb	3	; select bank3
 21130  0012  07E6               	addwf	myIsr@count^(0+384),f
 21131                           
 21132                           ;main.c: 63:         if (count == 61) {
 21133  0013  303D               	movlw	61
 21134  0014  0666               	xorwf	myIsr@count^(0+384),w
 21135  0015  1D03               	btfss	3,2
 21136  0016  281C               	goto	i1l173
 21137                           
 21138                           ;main.c: 64:             tmr1_flag = 1;
 21139  0017  3001               	movlw	1
 21140  0018  00F0               	movwf	??_myIsr
 21141  0019  0870               	movf	??_myIsr,w
 21142  001A  00E7               	movwf	_tmr1_flag^(0+384)	;volatile
 21143                           
 21144                           ;main.c: 65:             count = 0;
 21145  001B  01E6               	clrf	myIsr@count^(0+384)
 21146  001C                     i1l173:	
 21147  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21148  001D  0009               	retfie
 21149  001E                     __end_of_myIsr:	
 21150  007E                     btemp	set	126	;btemp
 21151  007E                     int$flags	set	126
 21152  007E                     wtemp0	set	126
 21153  2771                     
 21154                           	psect	text7_split_1
 21155  2706                     l6974:	
 21156                           
 21157                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 21158  2706  0859               	movf	vfpfcnvrt@fmt,w
 21159  2707  0086               	movwf	6
 21160  2708  0187               	clrf	7
 21161  2709  3F40               	moviw [0]fsr1
 21162  270A  00F1               	movwf	strncmp@_l
 21163  270B  3F41               	moviw [1]fsr1
 21164  270C  00F2               	movwf	strncmp@_l+1
 21165  270D  30BE               	movlw	low (STR_19| (0+32768))
 21166  270E  00F3               	movwf	strncmp@_r
 21167  270F  30B9               	movlw	high (STR_19| (0+32768))
 21168  2710  00F4               	movwf	strncmp@_r+1
 21169  2711  3003               	movlw	3
 21170  2712  00F5               	movwf	strncmp@n
 21171  2713  3000               	movlw	0
 21172  2714  00F6               	movwf	strncmp@n+1
 21173  2715  31B7  2704  31A7   	fcall	_strncmp
 21174  2718  0871               	movf	?_strncmp,w
 21175  2719  0472               	iorwf	?_strncmp+1,w
 21176  271A  1903               	btfsc	3,2
 21177  271B  2F33               	goto	l6978
 21178  271C  0020               	movlb	0	; select bank0
 21179  271D  0859               	movf	vfpfcnvrt@fmt,w
 21180  271E  0086               	movwf	6
 21181  271F  0187               	clrf	7
 21182  2720  3F40               	moviw [0]fsr1
 21183  2721  00F1               	movwf	strncmp@_l
 21184  2722  3F41               	moviw [1]fsr1
 21185  2723  00F2               	movwf	strncmp@_l+1
 21186  2724  30C2               	movlw	low (STR_23| (0+32768))
 21187  2725  00F3               	movwf	strncmp@_r
 21188  2726  30B9               	movlw	high (STR_23| (0+32768))
 21189  2727  00F4               	movwf	strncmp@_r+1
 21190  2728  3003               	movlw	3
 21191  2729  00F5               	movwf	strncmp@n
 21192  272A  3000               	movlw	0
 21193  272B  00F6               	movwf	strncmp@n+1
 21194  272C  31B7  2704  31A7   	fcall	_strncmp
 21195  272F  0871               	movf	?_strncmp,w
 21196  2730  0472               	iorwf	?_strncmp+1,w
 21197  2731  1D03               	btfss	3,2
 21198  2732  2F7E               	goto	l6986
 21199  2733                     l6978:	
 21200                           
 21201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 21202  2733  0020               	movlb	0	; select bank0
 21203  2734  0859               	movf	vfpfcnvrt@fmt,w
 21204  2735  0086               	movwf	6
 21205  2736  0187               	clrf	7
 21206  2737  3003               	movlw	3
 21207  2738  0781               	addwf	1,f
 21208  2739  3141               	addfsr 1,1
 21209  273A  1803               	skipnc
 21210  273B  0A81               	incf	1,f
 21211                           
 21212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21213  273C  085A               	movf	vfpfcnvrt@ap,w
 21214  273D  0086               	movwf	6
 21215  273E  0187               	clrf	7
 21216  273F  0801               	movf	1,w
 21217  2740  0084               	movwf	4
 21218  2741  0185               	clrf	5
 21219  2742  3002               	movlw	2
 21220  2743  0781               	addwf	1,f
 21221  2744  0800               	movf	0,w
 21222  2745  0021               	movlb	1	; select bank1
 21223  2746  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21224  2747  3980               	andlw	128
 21225  2748  1D03               	skipz
 21226  2749  30FF               	movlw	255
 21227  274A  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21228  274B  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21229  274C  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21230  274D  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21231  274E  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21232  274F  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21233  2750  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21234                           
 21235                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 21236  2751  0020               	movlb	0	; select bank0
 21237  2752  0858               	movf	vfpfcnvrt@fp+1,w
 21238  2753  00B1               	movwf	dtoa@fp+1
 21239  2754  0857               	movf	vfpfcnvrt@fp,w
 21240  2755  00B0               	movwf	dtoa@fp
 21241  2756  0021               	movlb	1	; select bank1
 21242  2757  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21243  2758  0020               	movlb	0	; select bank0
 21244  2759  00B2               	movwf	dtoa@d
 21245  275A  0021               	movlb	1	; select bank1
 21246  275B  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21247  275C  0020               	movlb	0	; select bank0
 21248  275D  00B3               	movwf	dtoa@d+1
 21249  275E  0021               	movlb	1	; select bank1
 21250  275F  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21251  2760  0020               	movlb	0	; select bank0
 21252  2761  00B4               	movwf	dtoa@d+2
 21253  2762  0021               	movlb	1	; select bank1
 21254  2763  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21255  2764  0020               	movlb	0	; select bank0
 21256  2765  00B5               	movwf	dtoa@d+3
 21257  2766  0021               	movlb	1	; select bank1
 21258  2767  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21259  2768  0020               	movlb	0	; select bank0
 21260  2769  00B6               	movwf	dtoa@d+4
 21261  276A  0021               	movlb	1	; select bank1
 21262  276B  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21263  276C  0020               	movlb	0	; select bank0
 21264  276D  00B7               	movwf	dtoa@d+5
 21265  276E  0021               	movlb	1	; select bank1
 21266  276F  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21267  2770  0020               	movlb	0	; select bank0
 21268  2771  00B8               	movwf	dtoa@d+6
 21269  2772  0021               	movlb	1	; select bank1
 21270  2773  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21271  2774  0020               	movlb	0	; select bank0
 21272  2775  00B9               	movwf	dtoa@d+7
 21273  2776  319A  2236         	fcall	_dtoa
 21274  2778  0020               	movlb	0	; select bank0
 21275  2779  0831               	movf	?_dtoa+1,w
 21276  277A  00D8               	movwf	?_vfpfcnvrt+1
 21277  277B  0830               	movf	?_dtoa,w
 21278  277C  00D7               	movwf	?_vfpfcnvrt
 21279  277D  0008               	return
 21280  277E                     l6986:	
 21281                           
 21282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 21283  277E  0020               	movlb	0	; select bank0
 21284  277F  0859               	movf	vfpfcnvrt@fmt,w
 21285  2780  0086               	movwf	6
 21286  2781  0187               	clrf	7
 21287  2782  3F40               	moviw [0]fsr1
 21288  2783  00F1               	movwf	strncmp@_l
 21289  2784  3F41               	moviw [1]fsr1
 21290  2785  00F2               	movwf	strncmp@_l+1
 21291  2786  30BF               	movlw	low ((STR_19+1)| (0+32768))
 21292  2787  00F3               	movwf	strncmp@_r
 21293  2788  30B9               	movlw	high ((STR_19+1)| (0+32768))
 21294  2789  00F4               	movwf	strncmp@_r+1
 21295  278A  3002               	movlw	2
 21296  278B  00F5               	movwf	strncmp@n
 21297  278C  3000               	movlw	0
 21298  278D  00F6               	movwf	strncmp@n+1
 21299  278E  31B7  2704  31A7   	fcall	_strncmp
 21300  2791  0871               	movf	?_strncmp,w
 21301  2792  0472               	iorwf	?_strncmp+1,w
 21302  2793  1903               	btfsc	3,2
 21303  2794  2FAC               	goto	l6990
 21304  2795  0020               	movlb	0	; select bank0
 21305  2796  0859               	movf	vfpfcnvrt@fmt,w
 21306  2797  0086               	movwf	6
 21307  2798  0187               	clrf	7
 21308  2799  3F40               	moviw [0]fsr1
 21309  279A  00F1               	movwf	strncmp@_l
 21310  279B  3F41               	moviw [1]fsr1
 21311  279C  00F2               	movwf	strncmp@_l+1
 21312  279D  30C3               	movlw	low ((STR_23+1)| (0+32768))
 21313  279E  00F3               	movwf	strncmp@_r
 21314  279F  30B9               	movlw	high ((STR_23+1)| (0+32768))
 21315  27A0  00F4               	movwf	strncmp@_r+1
 21316  27A1  3002               	movlw	2
 21317  27A2  00F5               	movwf	strncmp@n
 21318  27A3  3000               	movlw	0
 21319  27A4  00F6               	movwf	strncmp@n+1
 21320  27A5  31B7  2704  31A7   	fcall	_strncmp
 21321  27A8  0871               	movf	?_strncmp,w
 21322  27A9  0472               	iorwf	?_strncmp+1,w
 21323  27AA  1D03               	btfss	3,2
 21324  27AB  2FFE               	goto	L9
 21325  27AC                     l6990:	
 21326                           
 21327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 21328  27AC  0020               	movlb	0	; select bank0
 21329  27AD  0859               	movf	vfpfcnvrt@fmt,w
 21330  27AE  0086               	movwf	6
 21331  27AF  0187               	clrf	7
 21332  27B0  3002               	movlw	2
 21333  27B1  0781               	addwf	1,f
 21334  27B2  3141               	addfsr 1,1
 21335  27B3  1803               	skipnc
 21336  27B4  0A81               	incf	1,f
 21337                           
 21338                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21339  27B5  085A               	movf	vfpfcnvrt@ap,w
 21340  27B6  0086               	movwf	6
 21341  27B7  0187               	clrf	7
 21342  27B8  0801               	movf	1,w
 21343  27B9  0084               	movwf	4
 21344  27BA  0185               	clrf	5
 21345  27BB  3002               	movlw	2
 21346  27BC  0781               	addwf	1,f
 21347  27BD  3F00               	moviw [0]fsr0
 21348  27BE  00DB               	movwf	??_vfpfcnvrt
 21349  27BF  3F01               	moviw [1]fsr0
 21350  27C0  00DC               	movwf	??_vfpfcnvrt+1
 21351  27C1  085B               	movf	??_vfpfcnvrt,w
 21352  27C2  0021               	movlb	1	; select bank1
 21353  27C3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21354  27C4  0020               	movlb	0	; select bank0
 21355  27C5  085C               	movf	??_vfpfcnvrt+1,w
 21356  27C6  0021               	movlb	1	; select bank1
 21357  27C7  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21358  27C8  0D89               	rlf	9,f
 21359  27C9  3B89               	subwfb	9,f
 21360  27CA  0989               	comf	9,f
 21361  27CB  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21362  27CC  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21363  27CD  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21364  27CE  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21365  27CF  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21366  27D0  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21367                           
 21368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 21369  27D1  0020               	movlb	0	; select bank0
 21370  27D2  0858               	movf	vfpfcnvrt@fp+1,w
 21371  27D3  00B1               	movwf	dtoa@fp+1
 21372  27D4  0857               	movf	vfpfcnvrt@fp,w
 21373  27D5  00B0               	movwf	dtoa@fp
 21374  27D6  0021               	movlb	1	; select bank1
 21375  27D7  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21376  27D8  0020               	movlb	0	; select bank0
 21377  27D9  00B2               	movwf	dtoa@d
 21378  27DA  0021               	movlb	1	; select bank1
 21379  27DB  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21380  27DC  0020               	movlb	0	; select bank0
 21381  27DD  00B3               	movwf	dtoa@d+1
 21382  27DE  0021               	movlb	1	; select bank1
 21383  27DF  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21384  27E0  0020               	movlb	0	; select bank0
 21385  27E1  00B4               	movwf	dtoa@d+2
 21386  27E2  0021               	movlb	1	; select bank1
 21387  27E3  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21388  27E4  0020               	movlb	0	; select bank0
 21389  27E5  00B5               	movwf	dtoa@d+3
 21390  27E6  0021               	movlb	1	; select bank1
 21391  27E7  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21392  27E8  0020               	movlb	0	; select bank0
 21393  27E9  00B6               	movwf	dtoa@d+4
 21394  27EA  0021               	movlb	1	; select bank1
 21395  27EB  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21396  27EC  0020               	movlb	0	; select bank0
 21397  27ED  00B7               	movwf	dtoa@d+5
 21398  27EE  0021               	movlb	1	; select bank1
 21399  27EF  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21400  27F0  0020               	movlb	0	; select bank0
 21401  27F1  00B8               	movwf	dtoa@d+6
 21402  27F2  0021               	movlb	1	; select bank1
 21403  27F3  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21404  27F4  0020               	movlb	0	; select bank0
 21405  27F5  00B9               	movwf	dtoa@d+7
 21406  27F6  319A  2236         	fcall	_dtoa
 21407  27F8  0020               	movlb	0	; select bank0
 21408  27F9  0831               	movf	?_dtoa+1,w
 21409  27FA  00D8               	movwf	?_vfpfcnvrt+1
 21410  27FB  0830               	movf	?_dtoa,w
 21411  27FC  00D7               	movwf	?_vfpfcnvrt
 21412  27FD  0008               	return
 21413  27FE                     L9:	
 21414  27FE                     L8:	
 21415  27FE  3188  2843         	ljmp	l6998
 21416                           
 21417                           	psect	text7_split_2
 21418  0843                     l6998:	
 21419                           
 21420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 21421  0843  0020               	movlb	0	; select bank0
 21422  0844  0859               	movf	vfpfcnvrt@fmt,w
 21423  0845  0086               	movwf	6
 21424  0846  0187               	clrf	7
 21425  0847  3F40               	moviw [0]fsr1
 21426  0848  00DB               	movwf	??_vfpfcnvrt
 21427  0849  3F41               	moviw [1]fsr1
 21428  084A  00DC               	movwf	??_vfpfcnvrt+1
 21429  084B  085B               	movf	??_vfpfcnvrt,w
 21430  084C  0084               	movwf	4
 21431  084D  085C               	movf	??_vfpfcnvrt+1,w
 21432  084E  0085               	movwf	5
 21433  084F  0012               	moviw fsr0++
 21434  0850  3A64               	xorlw	100
 21435  0851  1903               	btfsc	3,2
 21436  0852  2862               	goto	l7002
 21437  0853  0859               	movf	vfpfcnvrt@fmt,w
 21438  0854  0086               	movwf	6
 21439  0855  0187               	clrf	7
 21440  0856  3F40               	moviw [0]fsr1
 21441  0857  00DB               	movwf	??_vfpfcnvrt
 21442  0858  3F41               	moviw [1]fsr1
 21443  0859  00DC               	movwf	??_vfpfcnvrt+1
 21444  085A  085B               	movf	??_vfpfcnvrt,w
 21445  085B  0084               	movwf	4
 21446  085C  085C               	movf	??_vfpfcnvrt+1,w
 21447  085D  0085               	movwf	5
 21448  085E  0012               	moviw fsr0++
 21449  085F  3A69               	xorlw	105
 21450  0860  1D03               	btfss	3,2
 21451  0861  28B3               	goto	l7010
 21452  0862                     l7002:	
 21453                           
 21454                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 21455  0862  0859               	movf	vfpfcnvrt@fmt,w
 21456  0863  0086               	movwf	6
 21457  0864  0187               	clrf	7
 21458  0865  3001               	movlw	1
 21459  0866  0781               	addwf	1,f
 21460  0867  3141               	addfsr 1,1
 21461  0868  1803               	skipnc
 21462  0869  0A81               	incf	1,f
 21463                           
 21464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 21465  086A  085A               	movf	vfpfcnvrt@ap,w
 21466  086B  0086               	movwf	6
 21467  086C  0187               	clrf	7
 21468  086D  0801               	movf	1,w
 21469  086E  0084               	movwf	4
 21470  086F  0185               	clrf	5
 21471  0870  3002               	movlw	2
 21472  0871  0781               	addwf	1,f
 21473  0872  3F00               	moviw [0]fsr0
 21474  0873  00DB               	movwf	??_vfpfcnvrt
 21475  0874  3F01               	moviw [1]fsr0
 21476  0875  00DC               	movwf	??_vfpfcnvrt+1
 21477  0876  085B               	movf	??_vfpfcnvrt,w
 21478  0877  0021               	movlb	1	; select bank1
 21479  0878  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21480  0879  0020               	movlb	0	; select bank0
 21481  087A  085C               	movf	??_vfpfcnvrt+1,w
 21482  087B  0021               	movlb	1	; select bank1
 21483  087C  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21484  087D  0D89               	rlf	9,f
 21485  087E  3B89               	subwfb	9,f
 21486  087F  0989               	comf	9,f
 21487  0880  00AA               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 21488  0881  00AB               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 21489  0882  00AC               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 21490  0883  00AD               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 21491  0884  00AE               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 21492  0885  00AF               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 21493                           
 21494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 21495  0886  0020               	movlb	0	; select bank0
 21496  0887  0858               	movf	vfpfcnvrt@fp+1,w
 21497  0888  00B1               	movwf	dtoa@fp+1
 21498  0889  0857               	movf	vfpfcnvrt@fp,w
 21499  088A  00B0               	movwf	dtoa@fp
 21500  088B  0021               	movlb	1	; select bank1
 21501  088C  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21502  088D  0020               	movlb	0	; select bank0
 21503  088E  00B2               	movwf	dtoa@d
 21504  088F  0021               	movlb	1	; select bank1
 21505  0890  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21506  0891  0020               	movlb	0	; select bank0
 21507  0892  00B3               	movwf	dtoa@d+1
 21508  0893  0021               	movlb	1	; select bank1
 21509  0894  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21510  0895  0020               	movlb	0	; select bank0
 21511  0896  00B4               	movwf	dtoa@d+2
 21512  0897  0021               	movlb	1	; select bank1
 21513  0898  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21514  0899  0020               	movlb	0	; select bank0
 21515  089A  00B5               	movwf	dtoa@d+3
 21516  089B  0021               	movlb	1	; select bank1
 21517  089C  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21518  089D  0020               	movlb	0	; select bank0
 21519  089E  00B6               	movwf	dtoa@d+4
 21520  089F  0021               	movlb	1	; select bank1
 21521  08A0  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21522  08A1  0020               	movlb	0	; select bank0
 21523  08A2  00B7               	movwf	dtoa@d+5
 21524  08A3  0021               	movlb	1	; select bank1
 21525  08A4  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21526  08A5  0020               	movlb	0	; select bank0
 21527  08A6  00B8               	movwf	dtoa@d+6
 21528  08A7  0021               	movlb	1	; select bank1
 21529  08A8  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21530  08A9  0020               	movlb	0	; select bank0
 21531  08AA  00B9               	movwf	dtoa@d+7
 21532  08AB  319A  2236         	fcall	_dtoa
 21533  08AD  0020               	movlb	0	; select bank0
 21534  08AE  0831               	movf	?_dtoa+1,w
 21535  08AF  00D8               	movwf	?_vfpfcnvrt+1
 21536  08B0  0830               	movf	?_dtoa,w
 21537  08B1  00D7               	movwf	?_vfpfcnvrt
 21538  08B2  0008               	return
 21539  08B3                     l7010:	
 21540                           
 21541                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 21542  08B3  0859               	movf	vfpfcnvrt@fmt,w
 21543  08B4  0086               	movwf	6
 21544  08B5  0187               	clrf	7
 21545  08B6  3F40               	moviw [0]fsr1
 21546  08B7  00F1               	movwf	strncmp@_l
 21547  08B8  3F41               	moviw [1]fsr1
 21548  08B9  00F2               	movwf	strncmp@_l+1
 21549  08BA  30DD               	movlw	low (STR_37| (0+32768))
 21550  08BB  00F3               	movwf	strncmp@_r
 21551  08BC  30B9               	movlw	high (STR_37| (0+32768))
 21552  08BD  00F4               	movwf	strncmp@_r+1
 21553  08BE  3002               	movlw	2
 21554  08BF  00F5               	movwf	strncmp@n
 21555  08C0  3000               	movlw	0
 21556  08C1  00F6               	movwf	strncmp@n+1
 21557  08C2  31B7  2704  3188   	fcall	_strncmp
 21558  08C5  0871               	movf	?_strncmp,w
 21559  08C6  0472               	iorwf	?_strncmp+1,w
 21560  08C7  1903               	btfsc	3,2
 21561  08C8  28E0               	goto	l7014
 21562  08C9  0020               	movlb	0	; select bank0
 21563  08CA  0859               	movf	vfpfcnvrt@fmt,w
 21564  08CB  0086               	movwf	6
 21565  08CC  0187               	clrf	7
 21566  08CD  3F40               	moviw [0]fsr1
 21567  08CE  00F1               	movwf	strncmp@_l
 21568  08CF  3F41               	moviw [1]fsr1
 21569  08D0  00F2               	movwf	strncmp@_l+1
 21570  08D1  30E0               	movlw	low (STR_41| (0+32768))
 21571  08D2  00F3               	movwf	strncmp@_r
 21572  08D3  30B9               	movlw	high (STR_41| (0+32768))
 21573  08D4  00F4               	movwf	strncmp@_r+1
 21574  08D5  3002               	movlw	2
 21575  08D6  00F5               	movwf	strncmp@n
 21576  08D7  3000               	movlw	0
 21577  08D8  00F6               	movwf	strncmp@n+1
 21578  08D9  31B7  2704  3188   	fcall	_strncmp
 21579  08DC  0871               	movf	?_strncmp,w
 21580  08DD  0472               	iorwf	?_strncmp+1,w
 21581  08DE  1D03               	btfss	3,2
 21582  08DF  2929               	goto	l7022
 21583  08E0                     l7014:	
 21584                           
 21585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 21586  08E0  0020               	movlb	0	; select bank0
 21587  08E1  0859               	movf	vfpfcnvrt@fmt,w
 21588  08E2  0086               	movwf	6
 21589  08E3  0187               	clrf	7
 21590  08E4  3002               	movlw	2
 21591  08E5  0781               	addwf	1,f
 21592  08E6  3141               	addfsr 1,1
 21593  08E7  1803               	skipnc
 21594  08E8  0A81               	incf	1,f
 21595                           
 21596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21597  08E9  085A               	movf	vfpfcnvrt@ap,w
 21598  08EA  0086               	movwf	6
 21599  08EB  0187               	clrf	7
 21600  08EC  0801               	movf	1,w
 21601  08ED  0084               	movwf	4
 21602  08EE  0185               	clrf	5
 21603  08EF  3002               	movlw	2
 21604  08F0  0781               	addwf	1,f
 21605  08F1  3F00               	moviw [0]fsr0
 21606  08F2  0021               	movlb	1	; select bank1
 21607  08F3  00A8               	movwf	vfpfcnvrt@ll^(0+128)
 21608  08F4  3F01               	moviw [1]fsr0
 21609  08F5  00A9               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 21610  08F6  01AA               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 21611  08F7  01AB               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 21612  08F8  01AC               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 21613  08F9  01AD               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 21614  08FA  01AE               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 21615  08FB  01AF               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 21616                           
 21617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 21618  08FC  0020               	movlb	0	; select bank0
 21619  08FD  0858               	movf	vfpfcnvrt@fp+1,w
 21620  08FE  00B1               	movwf	dtoa@fp+1
 21621  08FF  0857               	movf	vfpfcnvrt@fp,w
 21622  0900  00B0               	movwf	dtoa@fp
 21623  0901  0021               	movlb	1	; select bank1
 21624  0902  0828               	movf	vfpfcnvrt@ll^(0+128),w
 21625  0903  0020               	movlb	0	; select bank0
 21626  0904  00B2               	movwf	dtoa@d
 21627  0905  0021               	movlb	1	; select bank1
 21628  0906  0829               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 21629  0907  0020               	movlb	0	; select bank0
 21630  0908  00B3               	movwf	dtoa@d+1
 21631  0909  0021               	movlb	1	; select bank1
 21632  090A  082A               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 21633  090B  0020               	movlb	0	; select bank0
 21634  090C  00B4               	movwf	dtoa@d+2
 21635  090D  0021               	movlb	1	; select bank1
 21636  090E  082B               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 21637  090F  0020               	movlb	0	; select bank0
 21638  0910  00B5               	movwf	dtoa@d+3
 21639  0911  0021               	movlb	1	; select bank1
 21640  0912  082C               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 21641  0913  0020               	movlb	0	; select bank0
 21642  0914  00B6               	movwf	dtoa@d+4
 21643  0915  0021               	movlb	1	; select bank1
 21644  0916  082D               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 21645  0917  0020               	movlb	0	; select bank0
 21646  0918  00B7               	movwf	dtoa@d+5
 21647  0919  0021               	movlb	1	; select bank1
 21648  091A  082E               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 21649  091B  0020               	movlb	0	; select bank0
 21650  091C  00B8               	movwf	dtoa@d+6
 21651  091D  0021               	movlb	1	; select bank1
 21652  091E  082F               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 21653  091F  0020               	movlb	0	; select bank0
 21654  0920  00B9               	movwf	dtoa@d+7
 21655  0921  319A  2236         	fcall	_dtoa
 21656  0923  0020               	movlb	0	; select bank0
 21657  0924  0831               	movf	?_dtoa+1,w
 21658  0925  00D8               	movwf	?_vfpfcnvrt+1
 21659  0926  0830               	movf	?_dtoa,w
 21660  0927  00D7               	movwf	?_vfpfcnvrt
 21661  0928  0008               	return
 21662  0929                     l7022:	
 21663                           
 21664                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 21665  0929  0020               	movlb	0	; select bank0
 21666  092A  0859               	movf	vfpfcnvrt@fmt,w
 21667  092B  0086               	movwf	6
 21668  092C  0187               	clrf	7
 21669  092D  3F40               	moviw [0]fsr1
 21670  092E  00F1               	movwf	strncmp@_l
 21671  092F  3F41               	moviw [1]fsr1
 21672  0930  00F2               	movwf	strncmp@_l+1
 21673  0931  30CA               	movlw	low (STR_46| (0+32768))
 21674  0932  00F3               	movwf	strncmp@_r
 21675  0933  30B9               	movlw	high (STR_46| (0+32768))
 21676  0934  00F4               	movwf	strncmp@_r+1
 21677  0935  3003               	movlw	3
 21678  0936  00F5               	movwf	strncmp@n
 21679  0937  3000               	movlw	0
 21680  0938  00F6               	movwf	strncmp@n+1
 21681  0939  31B7  2704  3188   	fcall	_strncmp
 21682  093C  0871               	movf	?_strncmp,w
 21683  093D  0472               	iorwf	?_strncmp+1,w
 21684  093E  1D03               	btfss	3,2
 21685  093F  2988               	goto	l7032
 21686                           
 21687                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 21688  0940  0020               	movlb	0	; select bank0
 21689  0941  0859               	movf	vfpfcnvrt@fmt,w
 21690  0942  0086               	movwf	6
 21691  0943  0187               	clrf	7
 21692  0944  3003               	movlw	3
 21693  0945  0781               	addwf	1,f
 21694  0946  3141               	addfsr 1,1
 21695  0947  1803               	skipnc
 21696  0948  0A81               	incf	1,f
 21697                           
 21698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 21699  0949  085A               	movf	vfpfcnvrt@ap,w
 21700  094A  0086               	movwf	6
 21701  094B  0187               	clrf	7
 21702  094C  0801               	movf	1,w
 21703  094D  0084               	movwf	4
 21704  094E  0185               	clrf	5
 21705  094F  3002               	movlw	2
 21706  0950  0781               	addwf	1,f
 21707  0951  0800               	movf	0,w
 21708  0952  0021               	movlb	1	; select bank1
 21709  0953  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21710  0954  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 21711  0955  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21712  0956  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21713  0957  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21714  0958  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21715  0959  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21716  095A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21717                           
 21718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 21719  095B  0020               	movlb	0	; select bank0
 21720  095C  0858               	movf	vfpfcnvrt@fp+1,w
 21721  095D  00B1               	movwf	otoa@fp+1
 21722  095E  0857               	movf	vfpfcnvrt@fp,w
 21723  095F  00B0               	movwf	otoa@fp
 21724  0960  0021               	movlb	1	; select bank1
 21725  0961  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21726  0962  0020               	movlb	0	; select bank0
 21727  0963  00B2               	movwf	otoa@d
 21728  0964  0021               	movlb	1	; select bank1
 21729  0965  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21730  0966  0020               	movlb	0	; select bank0
 21731  0967  00B3               	movwf	otoa@d+1
 21732  0968  0021               	movlb	1	; select bank1
 21733  0969  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21734  096A  0020               	movlb	0	; select bank0
 21735  096B  00B4               	movwf	otoa@d+2
 21736  096C  0021               	movlb	1	; select bank1
 21737  096D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21738  096E  0020               	movlb	0	; select bank0
 21739  096F  00B5               	movwf	otoa@d+3
 21740  0970  0021               	movlb	1	; select bank1
 21741  0971  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21742  0972  0020               	movlb	0	; select bank0
 21743  0973  00B6               	movwf	otoa@d+4
 21744  0974  0021               	movlb	1	; select bank1
 21745  0975  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21746  0976  0020               	movlb	0	; select bank0
 21747  0977  00B7               	movwf	otoa@d+5
 21748  0978  0021               	movlb	1	; select bank1
 21749  0979  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21750  097A  0020               	movlb	0	; select bank0
 21751  097B  00B8               	movwf	otoa@d+6
 21752  097C  0021               	movlb	1	; select bank1
 21753  097D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21754  097E  0020               	movlb	0	; select bank0
 21755  097F  00B9               	movwf	otoa@d+7
 21756  0980  31A5  2522         	fcall	_otoa
 21757  0982  0020               	movlb	0	; select bank0
 21758  0983  0831               	movf	?_otoa+1,w
 21759  0984  00D8               	movwf	?_vfpfcnvrt+1
 21760  0985  0830               	movf	?_otoa,w
 21761  0986  00D7               	movwf	?_vfpfcnvrt
 21762  0987  0008               	return
 21763  0988                     l7032:	
 21764                           
 21765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 21766  0988  0020               	movlb	0	; select bank0
 21767  0989  0859               	movf	vfpfcnvrt@fmt,w
 21768  098A  0086               	movwf	6
 21769  098B  0187               	clrf	7
 21770  098C  3F40               	moviw [0]fsr1
 21771  098D  00F1               	movwf	strncmp@_l
 21772  098E  3F41               	moviw [1]fsr1
 21773  098F  00F2               	movwf	strncmp@_l+1
 21774  0990  30CB               	movlw	low ((STR_46+1)| (0+32768))
 21775  0991  00F3               	movwf	strncmp@_r
 21776  0992  30B9               	movlw	high ((STR_46+1)| (0+32768))
 21777  0993  00F4               	movwf	strncmp@_r+1
 21778  0994  3002               	movlw	2
 21779  0995  00F5               	movwf	strncmp@n
 21780  0996  3000               	movlw	0
 21781  0997  00F6               	movwf	strncmp@n+1
 21782  0998  31B7  2704  3188   	fcall	_strncmp
 21783  099B  0871               	movf	?_strncmp,w
 21784  099C  0472               	iorwf	?_strncmp+1,w
 21785  099D  1D03               	btfss	3,2
 21786  099E  29E8               	goto	l7042
 21787                           
 21788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 21789  099F  0020               	movlb	0	; select bank0
 21790  09A0  0859               	movf	vfpfcnvrt@fmt,w
 21791  09A1  0086               	movwf	6
 21792  09A2  0187               	clrf	7
 21793  09A3  3002               	movlw	2
 21794  09A4  0781               	addwf	1,f
 21795  09A5  3141               	addfsr 1,1
 21796  09A6  1803               	skipnc
 21797  09A7  0A81               	incf	1,f
 21798                           
 21799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 21800  09A8  085A               	movf	vfpfcnvrt@ap,w
 21801  09A9  0086               	movwf	6
 21802  09AA  0187               	clrf	7
 21803  09AB  0801               	movf	1,w
 21804  09AC  0084               	movwf	4
 21805  09AD  0185               	clrf	5
 21806  09AE  3002               	movlw	2
 21807  09AF  0781               	addwf	1,f
 21808  09B0  3F00               	moviw [0]fsr0
 21809  09B1  0021               	movlb	1	; select bank1
 21810  09B2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21811  09B3  3F01               	moviw [1]fsr0
 21812  09B4  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21813  09B5  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21814  09B6  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21815  09B7  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21816  09B8  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21817  09B9  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21818  09BA  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21819                           
 21820                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 21821  09BB  0020               	movlb	0	; select bank0
 21822  09BC  0858               	movf	vfpfcnvrt@fp+1,w
 21823  09BD  00B1               	movwf	otoa@fp+1
 21824  09BE  0857               	movf	vfpfcnvrt@fp,w
 21825  09BF  00B0               	movwf	otoa@fp
 21826  09C0  0021               	movlb	1	; select bank1
 21827  09C1  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21828  09C2  0020               	movlb	0	; select bank0
 21829  09C3  00B2               	movwf	otoa@d
 21830  09C4  0021               	movlb	1	; select bank1
 21831  09C5  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21832  09C6  0020               	movlb	0	; select bank0
 21833  09C7  00B3               	movwf	otoa@d+1
 21834  09C8  0021               	movlb	1	; select bank1
 21835  09C9  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21836  09CA  0020               	movlb	0	; select bank0
 21837  09CB  00B4               	movwf	otoa@d+2
 21838  09CC  0021               	movlb	1	; select bank1
 21839  09CD  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21840  09CE  0020               	movlb	0	; select bank0
 21841  09CF  00B5               	movwf	otoa@d+3
 21842  09D0  0021               	movlb	1	; select bank1
 21843  09D1  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21844  09D2  0020               	movlb	0	; select bank0
 21845  09D3  00B6               	movwf	otoa@d+4
 21846  09D4  0021               	movlb	1	; select bank1
 21847  09D5  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21848  09D6  0020               	movlb	0	; select bank0
 21849  09D7  00B7               	movwf	otoa@d+5
 21850  09D8  0021               	movlb	1	; select bank1
 21851  09D9  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21852  09DA  0020               	movlb	0	; select bank0
 21853  09DB  00B8               	movwf	otoa@d+6
 21854  09DC  0021               	movlb	1	; select bank1
 21855  09DD  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21856  09DE  0020               	movlb	0	; select bank0
 21857  09DF  00B9               	movwf	otoa@d+7
 21858  09E0  31A5  2522         	fcall	_otoa
 21859  09E2  0020               	movlb	0	; select bank0
 21860  09E3  0831               	movf	?_otoa+1,w
 21861  09E4  00D8               	movwf	?_vfpfcnvrt+1
 21862  09E5  0830               	movf	?_otoa,w
 21863  09E6  00D7               	movwf	?_vfpfcnvrt
 21864  09E7  0008               	return
 21865  09E8                     l7042:	
 21866                           
 21867                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 21868  09E8  0020               	movlb	0	; select bank0
 21869  09E9  0859               	movf	vfpfcnvrt@fmt,w
 21870  09EA  0086               	movwf	6
 21871  09EB  0187               	clrf	7
 21872  09EC  3F40               	moviw [0]fsr1
 21873  09ED  00DB               	movwf	??_vfpfcnvrt
 21874  09EE  3F41               	moviw [1]fsr1
 21875  09EF  00DC               	movwf	??_vfpfcnvrt+1
 21876  09F0  085B               	movf	??_vfpfcnvrt,w
 21877  09F1  0084               	movwf	4
 21878  09F2  085C               	movf	??_vfpfcnvrt+1,w
 21879  09F3  0085               	movwf	5
 21880  09F4  0012               	moviw fsr0++
 21881  09F5  3A6F               	xorlw	111
 21882  09F6  1D03               	btfss	3,2
 21883  09F7  2A40               	goto	l7052
 21884                           
 21885                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 21886  09F8  0859               	movf	vfpfcnvrt@fmt,w
 21887  09F9  0086               	movwf	6
 21888  09FA  0187               	clrf	7
 21889  09FB  3001               	movlw	1
 21890  09FC  0781               	addwf	1,f
 21891  09FD  3141               	addfsr 1,1
 21892  09FE  1803               	skipnc
 21893  09FF  0A81               	incf	1,f
 21894                           
 21895                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 21896  0A00  085A               	movf	vfpfcnvrt@ap,w
 21897  0A01  0086               	movwf	6
 21898  0A02  0187               	clrf	7
 21899  0A03  0801               	movf	1,w
 21900  0A04  0084               	movwf	4
 21901  0A05  0185               	clrf	5
 21902  0A06  3002               	movlw	2
 21903  0A07  0781               	addwf	1,f
 21904  0A08  3F00               	moviw [0]fsr0
 21905  0A09  0021               	movlb	1	; select bank1
 21906  0A0A  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 21907  0A0B  3F01               	moviw [1]fsr0
 21908  0A0C  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 21909  0A0D  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 21910  0A0E  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 21911  0A0F  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 21912  0A10  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 21913  0A11  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 21914  0A12  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 21915                           
 21916                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 21917  0A13  0020               	movlb	0	; select bank0
 21918  0A14  0858               	movf	vfpfcnvrt@fp+1,w
 21919  0A15  00B1               	movwf	otoa@fp+1
 21920  0A16  0857               	movf	vfpfcnvrt@fp,w
 21921  0A17  00B0               	movwf	otoa@fp
 21922  0A18  0021               	movlb	1	; select bank1
 21923  0A19  0833               	movf	vfpfcnvrt@llu^(0+128),w
 21924  0A1A  0020               	movlb	0	; select bank0
 21925  0A1B  00B2               	movwf	otoa@d
 21926  0A1C  0021               	movlb	1	; select bank1
 21927  0A1D  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 21928  0A1E  0020               	movlb	0	; select bank0
 21929  0A1F  00B3               	movwf	otoa@d+1
 21930  0A20  0021               	movlb	1	; select bank1
 21931  0A21  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 21932  0A22  0020               	movlb	0	; select bank0
 21933  0A23  00B4               	movwf	otoa@d+2
 21934  0A24  0021               	movlb	1	; select bank1
 21935  0A25  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 21936  0A26  0020               	movlb	0	; select bank0
 21937  0A27  00B5               	movwf	otoa@d+3
 21938  0A28  0021               	movlb	1	; select bank1
 21939  0A29  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 21940  0A2A  0020               	movlb	0	; select bank0
 21941  0A2B  00B6               	movwf	otoa@d+4
 21942  0A2C  0021               	movlb	1	; select bank1
 21943  0A2D  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 21944  0A2E  0020               	movlb	0	; select bank0
 21945  0A2F  00B7               	movwf	otoa@d+5
 21946  0A30  0021               	movlb	1	; select bank1
 21947  0A31  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 21948  0A32  0020               	movlb	0	; select bank0
 21949  0A33  00B8               	movwf	otoa@d+6
 21950  0A34  0021               	movlb	1	; select bank1
 21951  0A35  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 21952  0A36  0020               	movlb	0	; select bank0
 21953  0A37  00B9               	movwf	otoa@d+7
 21954  0A38  31A5  2522         	fcall	_otoa
 21955  0A3A  0020               	movlb	0	; select bank0
 21956  0A3B  0831               	movf	?_otoa+1,w
 21957  0A3C  00D8               	movwf	?_vfpfcnvrt+1
 21958  0A3D  0830               	movf	?_otoa,w
 21959  0A3E  00D7               	movwf	?_vfpfcnvrt
 21960  0A3F  0008               	return
 21961  0A40                     l7052:	
 21962                           
 21963                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 21964  0A40  0859               	movf	vfpfcnvrt@fmt,w
 21965  0A41  0086               	movwf	6
 21966  0A42  0187               	clrf	7
 21967  0A43  3F40               	moviw [0]fsr1
 21968  0A44  00F1               	movwf	strncmp@_l
 21969  0A45  3F41               	moviw [1]fsr1
 21970  0A46  00F2               	movwf	strncmp@_l+1
 21971  0A47  30E6               	movlw	low (STR_56| (0+32768))
 21972  0A48  00F3               	movwf	strncmp@_r
 21973  0A49  30B9               	movlw	high (STR_56| (0+32768))
 21974  0A4A  00F4               	movwf	strncmp@_r+1
 21975  0A4B  3002               	movlw	2
 21976  0A4C  00F5               	movwf	strncmp@n
 21977  0A4D  3000               	movlw	0
 21978  0A4E  00F6               	movwf	strncmp@n+1
 21979  0A4F  31B7  2704  3188   	fcall	_strncmp
 21980  0A52  0871               	movf	?_strncmp,w
 21981  0A53  0472               	iorwf	?_strncmp+1,w
 21982  0A54  1D03               	btfss	3,2
 21983  0A55  2A9F               	goto	l7062
 21984                           
 21985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 21986  0A56  0020               	movlb	0	; select bank0
 21987  0A57  0859               	movf	vfpfcnvrt@fmt,w
 21988  0A58  0086               	movwf	6
 21989  0A59  0187               	clrf	7
 21990  0A5A  3002               	movlw	2
 21991  0A5B  0781               	addwf	1,f
 21992  0A5C  3141               	addfsr 1,1
 21993  0A5D  1803               	skipnc
 21994  0A5E  0A81               	incf	1,f
 21995                           
 21996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 21997  0A5F  085A               	movf	vfpfcnvrt@ap,w
 21998  0A60  0086               	movwf	6
 21999  0A61  0187               	clrf	7
 22000  0A62  0801               	movf	1,w
 22001  0A63  0084               	movwf	4
 22002  0A64  0185               	clrf	5
 22003  0A65  3002               	movlw	2
 22004  0A66  0781               	addwf	1,f
 22005  0A67  3F00               	moviw [0]fsr0
 22006  0A68  0021               	movlb	1	; select bank1
 22007  0A69  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22008  0A6A  3F01               	moviw [1]fsr0
 22009  0A6B  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22010  0A6C  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22011  0A6D  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22012  0A6E  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22013  0A6F  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22014  0A70  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22015  0A71  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22016                           
 22017                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 22018  0A72  0020               	movlb	0	; select bank0
 22019  0A73  0858               	movf	vfpfcnvrt@fp+1,w
 22020  0A74  00B1               	movwf	otoa@fp+1
 22021  0A75  0857               	movf	vfpfcnvrt@fp,w
 22022  0A76  00B0               	movwf	otoa@fp
 22023  0A77  0021               	movlb	1	; select bank1
 22024  0A78  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22025  0A79  0020               	movlb	0	; select bank0
 22026  0A7A  00B2               	movwf	otoa@d
 22027  0A7B  0021               	movlb	1	; select bank1
 22028  0A7C  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22029  0A7D  0020               	movlb	0	; select bank0
 22030  0A7E  00B3               	movwf	otoa@d+1
 22031  0A7F  0021               	movlb	1	; select bank1
 22032  0A80  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22033  0A81  0020               	movlb	0	; select bank0
 22034  0A82  00B4               	movwf	otoa@d+2
 22035  0A83  0021               	movlb	1	; select bank1
 22036  0A84  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22037  0A85  0020               	movlb	0	; select bank0
 22038  0A86  00B5               	movwf	otoa@d+3
 22039  0A87  0021               	movlb	1	; select bank1
 22040  0A88  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22041  0A89  0020               	movlb	0	; select bank0
 22042  0A8A  00B6               	movwf	otoa@d+4
 22043  0A8B  0021               	movlb	1	; select bank1
 22044  0A8C  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22045  0A8D  0020               	movlb	0	; select bank0
 22046  0A8E  00B7               	movwf	otoa@d+5
 22047  0A8F  0021               	movlb	1	; select bank1
 22048  0A90  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22049  0A91  0020               	movlb	0	; select bank0
 22050  0A92  00B8               	movwf	otoa@d+6
 22051  0A93  0021               	movlb	1	; select bank1
 22052  0A94  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22053  0A95  0020               	movlb	0	; select bank0
 22054  0A96  00B9               	movwf	otoa@d+7
 22055  0A97  31A5  2522         	fcall	_otoa
 22056  0A99  0020               	movlb	0	; select bank0
 22057  0A9A  0831               	movf	?_otoa+1,w
 22058  0A9B  00D8               	movwf	?_vfpfcnvrt+1
 22059  0A9C  0830               	movf	?_otoa,w
 22060  0A9D  00D7               	movwf	?_vfpfcnvrt
 22061  0A9E  0008               	return
 22062  0A9F                     l7062:	
 22063                           
 22064                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 22065  0A9F  0020               	movlb	0	; select bank0
 22066  0AA0  0859               	movf	vfpfcnvrt@fmt,w
 22067  0AA1  0086               	movwf	6
 22068  0AA2  0187               	clrf	7
 22069  0AA3  3F40               	moviw [0]fsr1
 22070  0AA4  00F1               	movwf	strncmp@_l
 22071  0AA5  3F41               	moviw [1]fsr1
 22072  0AA6  00F2               	movwf	strncmp@_l+1
 22073  0AA7  30C6               	movlw	low (STR_61| (0+32768))
 22074  0AA8  00F3               	movwf	strncmp@_r
 22075  0AA9  30B9               	movlw	high (STR_61| (0+32768))
 22076  0AAA  00F4               	movwf	strncmp@_r+1
 22077  0AAB  3003               	movlw	3
 22078  0AAC  00F5               	movwf	strncmp@n
 22079  0AAD  3000               	movlw	0
 22080  0AAE  00F6               	movwf	strncmp@n+1
 22081  0AAF  31B7  2704  3188   	fcall	_strncmp
 22082  0AB2  0871               	movf	?_strncmp,w
 22083  0AB3  0472               	iorwf	?_strncmp+1,w
 22084  0AB4  1D03               	btfss	3,2
 22085  0AB5  2B36               	goto	l7074
 22086                           
 22087                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 22088  0AB6  0020               	movlb	0	; select bank0
 22089  0AB7  0859               	movf	vfpfcnvrt@fmt,w
 22090  0AB8  0086               	movwf	6
 22091  0AB9  0187               	clrf	7
 22092  0ABA  3003               	movlw	3
 22093  0ABB  0781               	addwf	1,f
 22094  0ABC  3141               	addfsr 1,1
 22095  0ABD  1803               	skipnc
 22096  0ABE  0A81               	incf	1,f
 22097                           
 22098                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22099  0ABF  085A               	movf	vfpfcnvrt@ap,w
 22100  0AC0  0086               	movwf	6
 22101  0AC1  0187               	clrf	7
 22102  0AC2  0801               	movf	1,w
 22103  0AC3  0084               	movwf	4
 22104  0AC4  0185               	clrf	5
 22105  0AC5  3002               	movlw	2
 22106  0AC6  0781               	addwf	1,f
 22107  0AC7  3F00               	moviw [0]fsr0
 22108  0AC8  0021               	movlb	1	; select bank1
 22109  0AC9  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22110  0ACA  3F01               	moviw [1]fsr0
 22111  0ACB  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22112                           
 22113                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 22114  0ACC  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22115  0ACD  0086               	movwf	6
 22116  0ACE  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22117  0ACF  0087               	movwf	7
 22118  0AD0  0022               	movlb	2	; select bank2
 22119  0AD1  0862               	movf	_nout^(0+256),w
 22120  0AD2  0081               	movwf	1
 22121  0AD3  2B32               	goto	l7070
 22122  0AD4                     l7076:	
 22123                           
 22124                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 22125  0AD4  0020               	movlb	0	; select bank0
 22126  0AD5  0859               	movf	vfpfcnvrt@fmt,w
 22127  0AD6  0086               	movwf	6
 22128  0AD7  0187               	clrf	7
 22129  0AD8  3002               	movlw	2
 22130  0AD9  0781               	addwf	1,f
 22131  0ADA  3141               	addfsr 1,1
 22132  0ADB  1803               	skipnc
 22133  0ADC  0A81               	incf	1,f
 22134                           
 22135                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 22136  0ADD  085A               	movf	vfpfcnvrt@ap,w
 22137  0ADE  0086               	movwf	6
 22138  0ADF  0187               	clrf	7
 22139  0AE0  0801               	movf	1,w
 22140  0AE1  0084               	movwf	4
 22141  0AE2  0185               	clrf	5
 22142  0AE3  3002               	movlw	2
 22143  0AE4  0781               	addwf	1,f
 22144  0AE5  3F00               	moviw [0]fsr0
 22145  0AE6  0021               	movlb	1	; select bank1
 22146  0AE7  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22147  0AE8  3F01               	moviw [1]fsr0
 22148  0AE9  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22149                           
 22150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 22151  0AEA  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22152  0AEB  0086               	movwf	6
 22153  0AEC  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22154  0AED  0087               	movwf	7
 22155  0AEE  0022               	movlb	2	; select bank2
 22156  0AEF  0862               	movf	_nout^(0+256),w
 22157  0AF0  3FC0               	movwi [0]fsr1
 22158  0AF1  0863               	movf	(_nout+1)^(0+256),w
 22159  0AF2  3FC1               	movwi [1]fsr1
 22160  0AF3  2B32               	goto	l7070
 22161  0AF4                     l7088:	
 22162                           
 22163                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 22164  0AF4  0859               	movf	vfpfcnvrt@fmt,w
 22165  0AF5  0086               	movwf	6
 22166  0AF6  0187               	clrf	7
 22167  0AF7  3001               	movlw	1
 22168  0AF8  0781               	addwf	1,f
 22169  0AF9  3141               	addfsr 1,1
 22170  0AFA  1803               	skipnc
 22171  0AFB  0A81               	incf	1,f
 22172                           
 22173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 22174  0AFC  085A               	movf	vfpfcnvrt@ap,w
 22175  0AFD  0086               	movwf	6
 22176  0AFE  0187               	clrf	7
 22177  0AFF  0801               	movf	1,w
 22178  0B00  0084               	movwf	4
 22179  0B01  0185               	clrf	5
 22180  0B02  3002               	movlw	2
 22181  0B03  0781               	addwf	1,f
 22182  0B04  3F00               	moviw [0]fsr0
 22183  0B05  0021               	movlb	1	; select bank1
 22184  0B06  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22185  0B07  3F01               	moviw [1]fsr0
 22186  0B08  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22187                           
 22188                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 22189  0B09  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22190  0B0A  0086               	movwf	6
 22191  0B0B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22192  0B0C  0087               	movwf	7
 22193  0B0D  0022               	movlb	2	; select bank2
 22194  0B0E  0862               	movf	_nout^(0+256),w
 22195  0B0F  3FC0               	movwi [0]fsr1
 22196  0B10  0863               	movf	(_nout+1)^(0+256),w
 22197  0B11  3FC1               	movwi [1]fsr1
 22198  0B12  2B32               	goto	l7070
 22199  0B13                     l7100:	
 22200                           
 22201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 22202  0B13  0020               	movlb	0	; select bank0
 22203  0B14  0859               	movf	vfpfcnvrt@fmt,w
 22204  0B15  0086               	movwf	6
 22205  0B16  0187               	clrf	7
 22206  0B17  3002               	movlw	2
 22207  0B18  0781               	addwf	1,f
 22208  0B19  3141               	addfsr 1,1
 22209  0B1A  1803               	skipnc
 22210  0B1B  0A81               	incf	1,f
 22211                           
 22212                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 22213  0B1C  085A               	movf	vfpfcnvrt@ap,w
 22214  0B1D  0086               	movwf	6
 22215  0B1E  0187               	clrf	7
 22216  0B1F  0801               	movf	1,w
 22217  0B20  0084               	movwf	4
 22218  0B21  0185               	clrf	5
 22219  0B22  3002               	movlw	2
 22220  0B23  0781               	addwf	1,f
 22221  0B24  3F00               	moviw [0]fsr0
 22222  0B25  0021               	movlb	1	; select bank1
 22223  0B26  00B0               	movwf	vfpfcnvrt@vp^(0+128)
 22224  0B27  3F01               	moviw [1]fsr0
 22225  0B28  00B1               	movwf	(vfpfcnvrt@vp+1)^(0+128)
 22226                           
 22227                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 22228  0B29  0830               	movf	vfpfcnvrt@vp^(0+128),w
 22229  0B2A  0086               	movwf	6
 22230  0B2B  0831               	movf	(vfpfcnvrt@vp+1)^(0+128),w
 22231  0B2C  0087               	movwf	7
 22232  0B2D  0022               	movlb	2	; select bank2
 22233  0B2E  0862               	movf	_nout^(0+256),w
 22234  0B2F  3FC0               	movwi [0]fsr1
 22235  0B30  0863               	movf	(_nout+1)^(0+256),w
 22236  0B31  3FC1               	movwi [1]fsr1
 22237  0B32                     l7070:	
 22238                           
 22239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 22240  0B32  0020               	movlb	0	; select bank0
 22241  0B33  01D7               	clrf	?_vfpfcnvrt
 22242  0B34  01D8               	clrf	?_vfpfcnvrt+1
 22243  0B35  0008               	return
 22244  0B36                     l7074:	
 22245                           
 22246                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 22247  0B36  0020               	movlb	0	; select bank0
 22248  0B37  0859               	movf	vfpfcnvrt@fmt,w
 22249  0B38  0086               	movwf	6
 22250  0B39  0187               	clrf	7
 22251  0B3A  3F40               	moviw [0]fsr1
 22252  0B3B  00F1               	movwf	strncmp@_l
 22253  0B3C  3F41               	moviw [1]fsr1
 22254  0B3D  00F2               	movwf	strncmp@_l+1
 22255  0B3E  30C7               	movlw	low ((STR_61+1)| (0+32768))
 22256  0B3F  00F3               	movwf	strncmp@_r
 22257  0B40  30B9               	movlw	high ((STR_61+1)| (0+32768))
 22258  0B41  00F4               	movwf	strncmp@_r+1
 22259  0B42  3002               	movlw	2
 22260  0B43  00F5               	movwf	strncmp@n
 22261  0B44  3000               	movlw	0
 22262  0B45  00F6               	movwf	strncmp@n+1
 22263  0B46  31B7  2704  3188   	fcall	_strncmp
 22264  0B49  0871               	movf	?_strncmp,w
 22265  0B4A  0472               	iorwf	?_strncmp+1,w
 22266  0B4B  1903               	btfsc	3,2
 22267  0B4C  2AD4               	goto	l7076
 22268                           
 22269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 22270  0B4D  0020               	movlb	0	; select bank0
 22271  0B4E  0859               	movf	vfpfcnvrt@fmt,w
 22272  0B4F  0086               	movwf	6
 22273  0B50  0187               	clrf	7
 22274  0B51  3F40               	moviw [0]fsr1
 22275  0B52  00DB               	movwf	??_vfpfcnvrt
 22276  0B53  3F41               	moviw [1]fsr1
 22277  0B54  00DC               	movwf	??_vfpfcnvrt+1
 22278  0B55  085B               	movf	??_vfpfcnvrt,w
 22279  0B56  0084               	movwf	4
 22280  0B57  085C               	movf	??_vfpfcnvrt+1,w
 22281  0B58  0085               	movwf	5
 22282  0B59  0012               	moviw fsr0++
 22283  0B5A  3A6E               	xorlw	110
 22284  0B5B  1903               	btfsc	3,2
 22285  0B5C  2AF4               	goto	l7088
 22286                           
 22287                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 22288  0B5D  0859               	movf	vfpfcnvrt@fmt,w
 22289  0B5E  0086               	movwf	6
 22290  0B5F  0187               	clrf	7
 22291  0B60  3F40               	moviw [0]fsr1
 22292  0B61  00F1               	movwf	strncmp@_l
 22293  0B62  3F41               	moviw [1]fsr1
 22294  0B63  00F2               	movwf	strncmp@_l+1
 22295  0B64  30E3               	movlw	low (STR_71| (0+32768))
 22296  0B65  00F3               	movwf	strncmp@_r
 22297  0B66  30B9               	movlw	high (STR_71| (0+32768))
 22298  0B67  00F4               	movwf	strncmp@_r+1
 22299  0B68  3002               	movlw	2
 22300  0B69  00F5               	movwf	strncmp@n
 22301  0B6A  3000               	movlw	0
 22302  0B6B  00F6               	movwf	strncmp@n+1
 22303  0B6C  31B7  2704  3188   	fcall	_strncmp
 22304  0B6F  0871               	movf	?_strncmp,w
 22305  0B70  0472               	iorwf	?_strncmp+1,w
 22306  0B71  1903               	btfsc	3,2
 22307  0B72  2B13               	goto	l7100
 22308                           
 22309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 22310  0B73  0020               	movlb	0	; select bank0
 22311  0B74  0859               	movf	vfpfcnvrt@fmt,w
 22312  0B75  0086               	movwf	6
 22313  0B76  0187               	clrf	7
 22314  0B77  3F40               	moviw [0]fsr1
 22315  0B78  00DB               	movwf	??_vfpfcnvrt
 22316  0B79  3F41               	moviw [1]fsr1
 22317  0B7A  00DC               	movwf	??_vfpfcnvrt+1
 22318  0B7B  085B               	movf	??_vfpfcnvrt,w
 22319  0B7C  0084               	movwf	4
 22320  0B7D  085C               	movf	??_vfpfcnvrt+1,w
 22321  0B7E  0085               	movwf	5
 22322  0B7F  0012               	moviw fsr0++
 22323  0B80  3A70               	xorlw	112
 22324  0B81  1D03               	btfss	3,2
 22325  0B82  2BCF               	goto	l7120
 22326                           
 22327                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 22328  0B83  0859               	movf	vfpfcnvrt@fmt,w
 22329  0B84  0086               	movwf	6
 22330  0B85  0187               	clrf	7
 22331  0B86  3001               	movlw	1
 22332  0B87  0781               	addwf	1,f
 22333  0B88  3141               	addfsr 1,1
 22334  0B89  1803               	skipnc
 22335  0B8A  0A81               	incf	1,f
 22336                           
 22337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 22338  0B8B  085A               	movf	vfpfcnvrt@ap,w
 22339  0B8C  0086               	movwf	6
 22340  0B8D  0187               	clrf	7
 22341  0B8E  0801               	movf	1,w
 22342  0B8F  0084               	movwf	4
 22343  0B90  0185               	clrf	5
 22344  0B91  3002               	movlw	2
 22345  0B92  0781               	addwf	1,f
 22346  0B93  3F00               	moviw [0]fsr0
 22347  0B94  0021               	movlb	1	; select bank1
 22348  0B95  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22349  0B96  3F01               	moviw [1]fsr0
 22350  0B97  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22351  0B98  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22352  0B99  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22353  0B9A  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22354  0B9B  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22355  0B9C  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22356  0B9D  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22357                           
 22358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 22359  0B9E  0020               	movlb	0	; select bank0
 22360  0B9F  0858               	movf	vfpfcnvrt@fp+1,w
 22361  0BA0  00B1               	movwf	xtoa@fp+1
 22362  0BA1  0857               	movf	vfpfcnvrt@fp,w
 22363  0BA2  00B0               	movwf	xtoa@fp
 22364  0BA3  0021               	movlb	1	; select bank1
 22365  0BA4  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22366  0BA5  0020               	movlb	0	; select bank0
 22367  0BA6  00B2               	movwf	xtoa@d
 22368  0BA7  0021               	movlb	1	; select bank1
 22369  0BA8  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22370  0BA9  0020               	movlb	0	; select bank0
 22371  0BAA  00B3               	movwf	xtoa@d+1
 22372  0BAB  0021               	movlb	1	; select bank1
 22373  0BAC  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22374  0BAD  0020               	movlb	0	; select bank0
 22375  0BAE  00B4               	movwf	xtoa@d+2
 22376  0BAF  0021               	movlb	1	; select bank1
 22377  0BB0  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22378  0BB1  0020               	movlb	0	; select bank0
 22379  0BB2  00B5               	movwf	xtoa@d+3
 22380  0BB3  0021               	movlb	1	; select bank1
 22381  0BB4  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22382  0BB5  0020               	movlb	0	; select bank0
 22383  0BB6  00B6               	movwf	xtoa@d+4
 22384  0BB7  0021               	movlb	1	; select bank1
 22385  0BB8  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22386  0BB9  0020               	movlb	0	; select bank0
 22387  0BBA  00B7               	movwf	xtoa@d+5
 22388  0BBB  0021               	movlb	1	; select bank1
 22389  0BBC  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22390  0BBD  0020               	movlb	0	; select bank0
 22391  0BBE  00B8               	movwf	xtoa@d+6
 22392  0BBF  0021               	movlb	1	; select bank1
 22393  0BC0  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22394  0BC1  0020               	movlb	0	; select bank0
 22395  0BC2  00B9               	movwf	xtoa@d+7
 22396  0BC3  3078               	movlw	120
 22397  0BC4  00DB               	movwf	??_vfpfcnvrt
 22398  0BC5  085B               	movf	??_vfpfcnvrt,w
 22399  0BC6  00BA               	movwf	xtoa@x
 22400  0BC7  319B  2389         	fcall	_xtoa
 22401  0BC9  0020               	movlb	0	; select bank0
 22402  0BCA  0831               	movf	?_xtoa+1,w
 22403  0BCB  00D8               	movwf	?_vfpfcnvrt+1
 22404  0BCC  0830               	movf	?_xtoa,w
 22405  0BCD  00D7               	movwf	?_vfpfcnvrt
 22406  0BCE  0008               	return
 22407  0BCF                     l7120:	
 22408                           
 22409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 22410  0BCF  0859               	movf	vfpfcnvrt@fmt,w
 22411  0BD0  0086               	movwf	6
 22412  0BD1  0187               	clrf	7
 22413  0BD2  3F40               	moviw [0]fsr1
 22414  0BD3  00DB               	movwf	??_vfpfcnvrt
 22415  0BD4  3F41               	moviw [1]fsr1
 22416  0BD5  00DC               	movwf	??_vfpfcnvrt+1
 22417  0BD6  085B               	movf	??_vfpfcnvrt,w
 22418  0BD7  0084               	movwf	4
 22419  0BD8  085C               	movf	??_vfpfcnvrt+1,w
 22420  0BD9  0085               	movwf	5
 22421  0BDA  0012               	moviw fsr0++
 22422  0BDB  3A73               	xorlw	115
 22423  0BDC  1D03               	btfss	3,2
 22424  0BDD  2C08               	goto	l7130
 22425                           
 22426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 22427  0BDE  0859               	movf	vfpfcnvrt@fmt,w
 22428  0BDF  0086               	movwf	6
 22429  0BE0  0187               	clrf	7
 22430  0BE1  3001               	movlw	1
 22431  0BE2  0781               	addwf	1,f
 22432  0BE3  3141               	addfsr 1,1
 22433  0BE4  1803               	skipnc
 22434  0BE5  0A81               	incf	1,f
 22435                           
 22436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 22437  0BE6  085A               	movf	vfpfcnvrt@ap,w
 22438  0BE7  0086               	movwf	6
 22439  0BE8  0187               	clrf	7
 22440  0BE9  0801               	movf	1,w
 22441  0BEA  0084               	movwf	4
 22442  0BEB  0185               	clrf	5
 22443  0BEC  3002               	movlw	2
 22444  0BED  0781               	addwf	1,f
 22445  0BEE  3F00               	moviw [0]fsr0
 22446  0BEF  0021               	movlb	1	; select bank1
 22447  0BF0  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 22448  0BF1  3F01               	moviw [1]fsr0
 22449  0BF2  00A1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 22450                           
 22451                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 22452  0BF3  0020               	movlb	0	; select bank0
 22453  0BF4  0858               	movf	vfpfcnvrt@fp+1,w
 22454  0BF5  00A1               	movwf	stoa@fp+1
 22455  0BF6  0857               	movf	vfpfcnvrt@fp,w
 22456  0BF7  00A0               	movwf	stoa@fp
 22457  0BF8  0021               	movlb	1	; select bank1
 22458  0BF9  0821               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 22459  0BFA  0020               	movlb	0	; select bank0
 22460  0BFB  00A3               	movwf	stoa@s+1
 22461  0BFC  0021               	movlb	1	; select bank1
 22462  0BFD  0820               	movf	vfpfcnvrt@cp^(0+128),w
 22463  0BFE  0020               	movlb	0	; select bank0
 22464  0BFF  00A2               	movwf	stoa@s
 22465  0C00  31AF  273B         	fcall	_stoa
 22466  0C02  0020               	movlb	0	; select bank0
 22467  0C03  0821               	movf	?_stoa+1,w
 22468  0C04  00D8               	movwf	?_vfpfcnvrt+1
 22469  0C05  0820               	movf	?_stoa,w
 22470  0C06  00D7               	movwf	?_vfpfcnvrt
 22471  0C07  0008               	return
 22472  0C08                     l7130:	
 22473                           
 22474                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 22475  0C08  0859               	movf	vfpfcnvrt@fmt,w
 22476  0C09  0086               	movwf	6
 22477  0C0A  0187               	clrf	7
 22478  0C0B  3F40               	moviw [0]fsr1
 22479  0C0C  00F1               	movwf	strncmp@_l
 22480  0C0D  3F41               	moviw [1]fsr1
 22481  0C0E  00F2               	movwf	strncmp@_l+1
 22482  0C0F  30CE               	movlw	low (STR_76| (0+32768))
 22483  0C10  00F3               	movwf	strncmp@_r
 22484  0C11  30B9               	movlw	high (STR_76| (0+32768))
 22485  0C12  00F4               	movwf	strncmp@_r+1
 22486  0C13  3003               	movlw	3
 22487  0C14  00F5               	movwf	strncmp@n
 22488  0C15  3000               	movlw	0
 22489  0C16  00F6               	movwf	strncmp@n+1
 22490  0C17  31B7  2704  3188   	fcall	_strncmp
 22491  0C1A  0871               	movf	?_strncmp,w
 22492  0C1B  0472               	iorwf	?_strncmp+1,w
 22493  0C1C  1D03               	btfss	3,2
 22494  0C1D  2C66               	goto	l7140
 22495                           
 22496                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 22497  0C1E  0020               	movlb	0	; select bank0
 22498  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 22499  0C20  0086               	movwf	6
 22500  0C21  0187               	clrf	7
 22501  0C22  3003               	movlw	3
 22502  0C23  0781               	addwf	1,f
 22503  0C24  3141               	addfsr 1,1
 22504  0C25  1803               	skipnc
 22505  0C26  0A81               	incf	1,f
 22506                           
 22507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22508  0C27  085A               	movf	vfpfcnvrt@ap,w
 22509  0C28  0086               	movwf	6
 22510  0C29  0187               	clrf	7
 22511  0C2A  0801               	movf	1,w
 22512  0C2B  0084               	movwf	4
 22513  0C2C  0185               	clrf	5
 22514  0C2D  3002               	movlw	2
 22515  0C2E  0781               	addwf	1,f
 22516  0C2F  0800               	movf	0,w
 22517  0C30  0021               	movlb	1	; select bank1
 22518  0C31  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22519  0C32  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22520  0C33  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22521  0C34  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22522  0C35  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22523  0C36  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22524  0C37  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22525  0C38  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22526                           
 22527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 22528  0C39  0020               	movlb	0	; select bank0
 22529  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 22530  0C3B  00B1               	movwf	utoa@fp+1
 22531  0C3C  0857               	movf	vfpfcnvrt@fp,w
 22532  0C3D  00B0               	movwf	utoa@fp
 22533  0C3E  0021               	movlb	1	; select bank1
 22534  0C3F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22535  0C40  0020               	movlb	0	; select bank0
 22536  0C41  00B2               	movwf	utoa@d
 22537  0C42  0021               	movlb	1	; select bank1
 22538  0C43  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22539  0C44  0020               	movlb	0	; select bank0
 22540  0C45  00B3               	movwf	utoa@d+1
 22541  0C46  0021               	movlb	1	; select bank1
 22542  0C47  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22543  0C48  0020               	movlb	0	; select bank0
 22544  0C49  00B4               	movwf	utoa@d+2
 22545  0C4A  0021               	movlb	1	; select bank1
 22546  0C4B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22547  0C4C  0020               	movlb	0	; select bank0
 22548  0C4D  00B5               	movwf	utoa@d+3
 22549  0C4E  0021               	movlb	1	; select bank1
 22550  0C4F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22551  0C50  0020               	movlb	0	; select bank0
 22552  0C51  00B6               	movwf	utoa@d+4
 22553  0C52  0021               	movlb	1	; select bank1
 22554  0C53  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22555  0C54  0020               	movlb	0	; select bank0
 22556  0C55  00B7               	movwf	utoa@d+5
 22557  0C56  0021               	movlb	1	; select bank1
 22558  0C57  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22559  0C58  0020               	movlb	0	; select bank0
 22560  0C59  00B8               	movwf	utoa@d+6
 22561  0C5A  0021               	movlb	1	; select bank1
 22562  0C5B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22563  0C5C  0020               	movlb	0	; select bank0
 22564  0C5D  00B9               	movwf	utoa@d+7
 22565  0C5E  31A4  2441         	fcall	_utoa
 22566  0C60  0020               	movlb	0	; select bank0
 22567  0C61  0831               	movf	?_utoa+1,w
 22568  0C62  00D8               	movwf	?_vfpfcnvrt+1
 22569  0C63  0830               	movf	?_utoa,w
 22570  0C64  00D7               	movwf	?_vfpfcnvrt
 22571  0C65  0008               	return
 22572  0C66                     l7140:	
 22573                           
 22574                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 22575  0C66  0020               	movlb	0	; select bank0
 22576  0C67  0859               	movf	vfpfcnvrt@fmt,w
 22577  0C68  0086               	movwf	6
 22578  0C69  0187               	clrf	7
 22579  0C6A  3F40               	moviw [0]fsr1
 22580  0C6B  00F1               	movwf	strncmp@_l
 22581  0C6C  3F41               	moviw [1]fsr1
 22582  0C6D  00F2               	movwf	strncmp@_l+1
 22583  0C6E  30CF               	movlw	low ((STR_76+1)| (0+32768))
 22584  0C6F  00F3               	movwf	strncmp@_r
 22585  0C70  30B9               	movlw	high ((STR_76+1)| (0+32768))
 22586  0C71  00F4               	movwf	strncmp@_r+1
 22587  0C72  3002               	movlw	2
 22588  0C73  00F5               	movwf	strncmp@n
 22589  0C74  3000               	movlw	0
 22590  0C75  00F6               	movwf	strncmp@n+1
 22591  0C76  31B7  2704  3188   	fcall	_strncmp
 22592  0C79  0871               	movf	?_strncmp,w
 22593  0C7A  0472               	iorwf	?_strncmp+1,w
 22594  0C7B  1D03               	btfss	3,2
 22595  0C7C  2CC6               	goto	l7150
 22596                           
 22597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 22598  0C7D  0020               	movlb	0	; select bank0
 22599  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 22600  0C7F  0086               	movwf	6
 22601  0C80  0187               	clrf	7
 22602  0C81  3002               	movlw	2
 22603  0C82  0781               	addwf	1,f
 22604  0C83  3141               	addfsr 1,1
 22605  0C84  1803               	skipnc
 22606  0C85  0A81               	incf	1,f
 22607                           
 22608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 22609  0C86  085A               	movf	vfpfcnvrt@ap,w
 22610  0C87  0086               	movwf	6
 22611  0C88  0187               	clrf	7
 22612  0C89  0801               	movf	1,w
 22613  0C8A  0084               	movwf	4
 22614  0C8B  0185               	clrf	5
 22615  0C8C  3002               	movlw	2
 22616  0C8D  0781               	addwf	1,f
 22617  0C8E  3F00               	moviw [0]fsr0
 22618  0C8F  0021               	movlb	1	; select bank1
 22619  0C90  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22620  0C91  3F01               	moviw [1]fsr0
 22621  0C92  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22622  0C93  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22623  0C94  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22624  0C95  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22625  0C96  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22626  0C97  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22627  0C98  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22628                           
 22629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 22630  0C99  0020               	movlb	0	; select bank0
 22631  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 22632  0C9B  00B1               	movwf	utoa@fp+1
 22633  0C9C  0857               	movf	vfpfcnvrt@fp,w
 22634  0C9D  00B0               	movwf	utoa@fp
 22635  0C9E  0021               	movlb	1	; select bank1
 22636  0C9F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22637  0CA0  0020               	movlb	0	; select bank0
 22638  0CA1  00B2               	movwf	utoa@d
 22639  0CA2  0021               	movlb	1	; select bank1
 22640  0CA3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22641  0CA4  0020               	movlb	0	; select bank0
 22642  0CA5  00B3               	movwf	utoa@d+1
 22643  0CA6  0021               	movlb	1	; select bank1
 22644  0CA7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22645  0CA8  0020               	movlb	0	; select bank0
 22646  0CA9  00B4               	movwf	utoa@d+2
 22647  0CAA  0021               	movlb	1	; select bank1
 22648  0CAB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22649  0CAC  0020               	movlb	0	; select bank0
 22650  0CAD  00B5               	movwf	utoa@d+3
 22651  0CAE  0021               	movlb	1	; select bank1
 22652  0CAF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22653  0CB0  0020               	movlb	0	; select bank0
 22654  0CB1  00B6               	movwf	utoa@d+4
 22655  0CB2  0021               	movlb	1	; select bank1
 22656  0CB3  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22657  0CB4  0020               	movlb	0	; select bank0
 22658  0CB5  00B7               	movwf	utoa@d+5
 22659  0CB6  0021               	movlb	1	; select bank1
 22660  0CB7  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22661  0CB8  0020               	movlb	0	; select bank0
 22662  0CB9  00B8               	movwf	utoa@d+6
 22663  0CBA  0021               	movlb	1	; select bank1
 22664  0CBB  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22665  0CBC  0020               	movlb	0	; select bank0
 22666  0CBD  00B9               	movwf	utoa@d+7
 22667  0CBE  31A4  2441         	fcall	_utoa
 22668  0CC0  0020               	movlb	0	; select bank0
 22669  0CC1  0831               	movf	?_utoa+1,w
 22670  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 22671  0CC3  0830               	movf	?_utoa,w
 22672  0CC4  00D7               	movwf	?_vfpfcnvrt
 22673  0CC5  0008               	return
 22674  0CC6                     l7150:	
 22675                           
 22676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 22677  0CC6  0020               	movlb	0	; select bank0
 22678  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 22679  0CC8  0086               	movwf	6
 22680  0CC9  0187               	clrf	7
 22681  0CCA  3F40               	moviw [0]fsr1
 22682  0CCB  00DB               	movwf	??_vfpfcnvrt
 22683  0CCC  3F41               	moviw [1]fsr1
 22684  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 22685  0CCE  085B               	movf	??_vfpfcnvrt,w
 22686  0CCF  0084               	movwf	4
 22687  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 22688  0CD1  0085               	movwf	5
 22689  0CD2  0012               	moviw fsr0++
 22690  0CD3  3A75               	xorlw	117
 22691  0CD4  1D03               	btfss	3,2
 22692  0CD5  2D1E               	goto	l7160
 22693                           
 22694                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 22695  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 22696  0CD7  0086               	movwf	6
 22697  0CD8  0187               	clrf	7
 22698  0CD9  3001               	movlw	1
 22699  0CDA  0781               	addwf	1,f
 22700  0CDB  3141               	addfsr 1,1
 22701  0CDC  1803               	skipnc
 22702  0CDD  0A81               	incf	1,f
 22703                           
 22704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 22705  0CDE  085A               	movf	vfpfcnvrt@ap,w
 22706  0CDF  0086               	movwf	6
 22707  0CE0  0187               	clrf	7
 22708  0CE1  0801               	movf	1,w
 22709  0CE2  0084               	movwf	4
 22710  0CE3  0185               	clrf	5
 22711  0CE4  3002               	movlw	2
 22712  0CE5  0781               	addwf	1,f
 22713  0CE6  3F00               	moviw [0]fsr0
 22714  0CE7  0021               	movlb	1	; select bank1
 22715  0CE8  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22716  0CE9  3F01               	moviw [1]fsr0
 22717  0CEA  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22718  0CEB  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22719  0CEC  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22720  0CED  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22721  0CEE  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22722  0CEF  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22723  0CF0  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22724                           
 22725                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 22726  0CF1  0020               	movlb	0	; select bank0
 22727  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 22728  0CF3  00B1               	movwf	utoa@fp+1
 22729  0CF4  0857               	movf	vfpfcnvrt@fp,w
 22730  0CF5  00B0               	movwf	utoa@fp
 22731  0CF6  0021               	movlb	1	; select bank1
 22732  0CF7  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22733  0CF8  0020               	movlb	0	; select bank0
 22734  0CF9  00B2               	movwf	utoa@d
 22735  0CFA  0021               	movlb	1	; select bank1
 22736  0CFB  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22737  0CFC  0020               	movlb	0	; select bank0
 22738  0CFD  00B3               	movwf	utoa@d+1
 22739  0CFE  0021               	movlb	1	; select bank1
 22740  0CFF  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22741  0D00  0020               	movlb	0	; select bank0
 22742  0D01  00B4               	movwf	utoa@d+2
 22743  0D02  0021               	movlb	1	; select bank1
 22744  0D03  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22745  0D04  0020               	movlb	0	; select bank0
 22746  0D05  00B5               	movwf	utoa@d+3
 22747  0D06  0021               	movlb	1	; select bank1
 22748  0D07  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22749  0D08  0020               	movlb	0	; select bank0
 22750  0D09  00B6               	movwf	utoa@d+4
 22751  0D0A  0021               	movlb	1	; select bank1
 22752  0D0B  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22753  0D0C  0020               	movlb	0	; select bank0
 22754  0D0D  00B7               	movwf	utoa@d+5
 22755  0D0E  0021               	movlb	1	; select bank1
 22756  0D0F  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22757  0D10  0020               	movlb	0	; select bank0
 22758  0D11  00B8               	movwf	utoa@d+6
 22759  0D12  0021               	movlb	1	; select bank1
 22760  0D13  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22761  0D14  0020               	movlb	0	; select bank0
 22762  0D15  00B9               	movwf	utoa@d+7
 22763  0D16  31A4  2441         	fcall	_utoa
 22764  0D18  0020               	movlb	0	; select bank0
 22765  0D19  0831               	movf	?_utoa+1,w
 22766  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 22767  0D1B  0830               	movf	?_utoa,w
 22768  0D1C  00D7               	movwf	?_vfpfcnvrt
 22769  0D1D  0008               	return
 22770  0D1E                     l7160:	
 22771                           
 22772                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 22773  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 22774  0D1F  0086               	movwf	6
 22775  0D20  0187               	clrf	7
 22776  0D21  3F40               	moviw [0]fsr1
 22777  0D22  00F1               	movwf	strncmp@_l
 22778  0D23  3F41               	moviw [1]fsr1
 22779  0D24  00F2               	movwf	strncmp@_l+1
 22780  0D25  30E9               	movlw	low (STR_86| (0+32768))
 22781  0D26  00F3               	movwf	strncmp@_r
 22782  0D27  30B9               	movlw	high (STR_86| (0+32768))
 22783  0D28  00F4               	movwf	strncmp@_r+1
 22784  0D29  3002               	movlw	2
 22785  0D2A  00F5               	movwf	strncmp@n
 22786  0D2B  3000               	movlw	0
 22787  0D2C  00F6               	movwf	strncmp@n+1
 22788  0D2D  31B7  2704  3188   	fcall	_strncmp
 22789  0D30  0871               	movf	?_strncmp,w
 22790  0D31  0472               	iorwf	?_strncmp+1,w
 22791  0D32  1D03               	btfss	3,2
 22792  0D33  2D7D               	goto	l7170
 22793                           
 22794                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 22795  0D34  0020               	movlb	0	; select bank0
 22796  0D35  0859               	movf	vfpfcnvrt@fmt,w
 22797  0D36  0086               	movwf	6
 22798  0D37  0187               	clrf	7
 22799  0D38  3002               	movlw	2
 22800  0D39  0781               	addwf	1,f
 22801  0D3A  3141               	addfsr 1,1
 22802  0D3B  1803               	skipnc
 22803  0D3C  0A81               	incf	1,f
 22804                           
 22805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 22806  0D3D  085A               	movf	vfpfcnvrt@ap,w
 22807  0D3E  0086               	movwf	6
 22808  0D3F  0187               	clrf	7
 22809  0D40  0801               	movf	1,w
 22810  0D41  0084               	movwf	4
 22811  0D42  0185               	clrf	5
 22812  0D43  3002               	movlw	2
 22813  0D44  0781               	addwf	1,f
 22814  0D45  3F00               	moviw [0]fsr0
 22815  0D46  0021               	movlb	1	; select bank1
 22816  0D47  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22817  0D48  3F01               	moviw [1]fsr0
 22818  0D49  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 22819  0D4A  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22820  0D4B  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22821  0D4C  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22822  0D4D  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22823  0D4E  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22824  0D4F  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22825                           
 22826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 22827  0D50  0020               	movlb	0	; select bank0
 22828  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 22829  0D52  00B1               	movwf	utoa@fp+1
 22830  0D53  0857               	movf	vfpfcnvrt@fp,w
 22831  0D54  00B0               	movwf	utoa@fp
 22832  0D55  0021               	movlb	1	; select bank1
 22833  0D56  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22834  0D57  0020               	movlb	0	; select bank0
 22835  0D58  00B2               	movwf	utoa@d
 22836  0D59  0021               	movlb	1	; select bank1
 22837  0D5A  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22838  0D5B  0020               	movlb	0	; select bank0
 22839  0D5C  00B3               	movwf	utoa@d+1
 22840  0D5D  0021               	movlb	1	; select bank1
 22841  0D5E  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22842  0D5F  0020               	movlb	0	; select bank0
 22843  0D60  00B4               	movwf	utoa@d+2
 22844  0D61  0021               	movlb	1	; select bank1
 22845  0D62  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22846  0D63  0020               	movlb	0	; select bank0
 22847  0D64  00B5               	movwf	utoa@d+3
 22848  0D65  0021               	movlb	1	; select bank1
 22849  0D66  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22850  0D67  0020               	movlb	0	; select bank0
 22851  0D68  00B6               	movwf	utoa@d+4
 22852  0D69  0021               	movlb	1	; select bank1
 22853  0D6A  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22854  0D6B  0020               	movlb	0	; select bank0
 22855  0D6C  00B7               	movwf	utoa@d+5
 22856  0D6D  0021               	movlb	1	; select bank1
 22857  0D6E  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 22858  0D6F  0020               	movlb	0	; select bank0
 22859  0D70  00B8               	movwf	utoa@d+6
 22860  0D71  0021               	movlb	1	; select bank1
 22861  0D72  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 22862  0D73  0020               	movlb	0	; select bank0
 22863  0D74  00B9               	movwf	utoa@d+7
 22864  0D75  31A4  2441         	fcall	_utoa
 22865  0D77  0020               	movlb	0	; select bank0
 22866  0D78  0831               	movf	?_utoa+1,w
 22867  0D79  00D8               	movwf	?_vfpfcnvrt+1
 22868  0D7A  0830               	movf	?_utoa,w
 22869  0D7B  00D7               	movwf	?_vfpfcnvrt
 22870  0D7C  0008               	return
 22871  0D7D                     l7170:	
 22872                           
 22873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 22874  0D7D  0020               	movlb	0	; select bank0
 22875  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 22876  0D7F  0086               	movwf	6
 22877  0D80  0187               	clrf	7
 22878  0D81  3F40               	moviw [0]fsr1
 22879  0D82  00F1               	movwf	strncmp@_l
 22880  0D83  3F41               	moviw [1]fsr1
 22881  0D84  00F2               	movwf	strncmp@_l+1
 22882  0D85  30D2               	movlw	low (STR_91| (0+32768))
 22883  0D86  00F3               	movwf	strncmp@_r
 22884  0D87  30B9               	movlw	high (STR_91| (0+32768))
 22885  0D88  00F4               	movwf	strncmp@_r+1
 22886  0D89  3003               	movlw	3
 22887  0D8A  00F5               	movwf	strncmp@n
 22888  0D8B  3000               	movlw	0
 22889  0D8C  00F6               	movwf	strncmp@n+1
 22890  0D8D  31B7  2704  3188   	fcall	_strncmp
 22891  0D90  0871               	movf	?_strncmp,w
 22892  0D91  0472               	iorwf	?_strncmp+1,w
 22893  0D92  1903               	btfsc	3,2
 22894  0D93  2DAB               	goto	l7174
 22895  0D94  0020               	movlb	0	; select bank0
 22896  0D95  0859               	movf	vfpfcnvrt@fmt,w
 22897  0D96  0086               	movwf	6
 22898  0D97  0187               	clrf	7
 22899  0D98  3F40               	moviw [0]fsr1
 22900  0D99  00F1               	movwf	strncmp@_l
 22901  0D9A  3F41               	moviw [1]fsr1
 22902  0D9B  00F2               	movwf	strncmp@_l+1
 22903  0D9C  30BA               	movlw	low (STR_95| (0+32768))
 22904  0D9D  00F3               	movwf	strncmp@_r
 22905  0D9E  30B9               	movlw	high (STR_95| (0+32768))
 22906  0D9F  00F4               	movwf	strncmp@_r+1
 22907  0DA0  3003               	movlw	3
 22908  0DA1  00F5               	movwf	strncmp@n
 22909  0DA2  3000               	movlw	0
 22910  0DA3  00F6               	movwf	strncmp@n+1
 22911  0DA4  31B7  2704  3188   	fcall	_strncmp
 22912  0DA7  0871               	movf	?_strncmp,w
 22913  0DA8  0472               	iorwf	?_strncmp+1,w
 22914  0DA9  1D03               	btfss	3,2
 22915  0DAA  2E0D               	goto	l7184
 22916  0DAB                     l7174:	
 22917                           
 22918                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 22919  0DAB  0020               	movlb	0	; select bank0
 22920  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 22921  0DAD  0086               	movwf	6
 22922  0DAE  0187               	clrf	7
 22923  0DAF  3F40               	moviw [0]fsr1
 22924  0DB0  00DB               	movwf	??_vfpfcnvrt
 22925  0DB1  3F41               	moviw [1]fsr1
 22926  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 22927  0DB3  3002               	movlw	2
 22928  0DB4  075B               	addwf	??_vfpfcnvrt,w
 22929  0DB5  0084               	movwf	4
 22930  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 22931  0DB7  1803               	skipnc
 22932  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 22933  0DB9  0085               	movwf	5
 22934  0DBA  0800               	movf	0,w	;code access
 22935  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 22936  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 22937  0DBD  0021               	movlb	1	; select bank1
 22938  0DBE  00B2               	movwf	vfpfcnvrt@c^(0+128)
 22939                           
 22940                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 22941  0DBF  0020               	movlb	0	; select bank0
 22942  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 22943  0DC1  0086               	movwf	6
 22944  0DC2  0187               	clrf	7
 22945  0DC3  3003               	movlw	3
 22946  0DC4  0781               	addwf	1,f
 22947  0DC5  3141               	addfsr 1,1
 22948  0DC6  1803               	skipnc
 22949  0DC7  0A81               	incf	1,f
 22950                           
 22951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 22952  0DC8  085A               	movf	vfpfcnvrt@ap,w
 22953  0DC9  0086               	movwf	6
 22954  0DCA  0187               	clrf	7
 22955  0DCB  0801               	movf	1,w
 22956  0DCC  0084               	movwf	4
 22957  0DCD  0185               	clrf	5
 22958  0DCE  3002               	movlw	2
 22959  0DCF  0781               	addwf	1,f
 22960  0DD0  0800               	movf	0,w
 22961  0DD1  0021               	movlb	1	; select bank1
 22962  0DD2  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 22963  0DD3  01B4               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 22964  0DD4  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 22965  0DD5  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 22966  0DD6  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 22967  0DD7  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 22968  0DD8  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 22969  0DD9  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 22970                           
 22971                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 22972  0DDA  0020               	movlb	0	; select bank0
 22973  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 22974  0DDC  00B1               	movwf	xtoa@fp+1
 22975  0DDD  0857               	movf	vfpfcnvrt@fp,w
 22976  0DDE  00B0               	movwf	xtoa@fp
 22977  0DDF  0021               	movlb	1	; select bank1
 22978  0DE0  0833               	movf	vfpfcnvrt@llu^(0+128),w
 22979  0DE1  0020               	movlb	0	; select bank0
 22980  0DE2  00B2               	movwf	xtoa@d
 22981  0DE3  0021               	movlb	1	; select bank1
 22982  0DE4  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 22983  0DE5  0020               	movlb	0	; select bank0
 22984  0DE6  00B3               	movwf	xtoa@d+1
 22985  0DE7  0021               	movlb	1	; select bank1
 22986  0DE8  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 22987  0DE9  0020               	movlb	0	; select bank0
 22988  0DEA  00B4               	movwf	xtoa@d+2
 22989  0DEB  0021               	movlb	1	; select bank1
 22990  0DEC  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 22991  0DED  0020               	movlb	0	; select bank0
 22992  0DEE  00B5               	movwf	xtoa@d+3
 22993  0DEF  0021               	movlb	1	; select bank1
 22994  0DF0  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 22995  0DF1  0020               	movlb	0	; select bank0
 22996  0DF2  00B6               	movwf	xtoa@d+4
 22997  0DF3  0021               	movlb	1	; select bank1
 22998  0DF4  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 22999  0DF5  0020               	movlb	0	; select bank0
 23000  0DF6  00B7               	movwf	xtoa@d+5
 23001  0DF7  0021               	movlb	1	; select bank1
 23002  0DF8  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23003  0DF9  0020               	movlb	0	; select bank0
 23004  0DFA  00B8               	movwf	xtoa@d+6
 23005  0DFB  0021               	movlb	1	; select bank1
 23006  0DFC  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23007  0DFD  0020               	movlb	0	; select bank0
 23008  0DFE  00B9               	movwf	xtoa@d+7
 23009  0DFF  0021               	movlb	1	; select bank1
 23010  0E00  0832               	movf	vfpfcnvrt@c^(0+128),w
 23011  0E01  0020               	movlb	0	; select bank0
 23012  0E02  00DB               	movwf	??_vfpfcnvrt
 23013  0E03  085B               	movf	??_vfpfcnvrt,w
 23014  0E04  00BA               	movwf	xtoa@x
 23015  0E05  319B  2389         	fcall	_xtoa
 23016  0E07  0020               	movlb	0	; select bank0
 23017  0E08  0831               	movf	?_xtoa+1,w
 23018  0E09  00D8               	movwf	?_vfpfcnvrt+1
 23019  0E0A  0830               	movf	?_xtoa,w
 23020  0E0B  00D7               	movwf	?_vfpfcnvrt
 23021  0E0C  0008               	return
 23022  0E0D                     l7184:	
 23023                           
 23024                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 23025  0E0D  0020               	movlb	0	; select bank0
 23026  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 23027  0E0F  0086               	movwf	6
 23028  0E10  0187               	clrf	7
 23029  0E11  3F40               	moviw [0]fsr1
 23030  0E12  00F1               	movwf	strncmp@_l
 23031  0E13  3F41               	moviw [1]fsr1
 23032  0E14  00F2               	movwf	strncmp@_l+1
 23033  0E15  30D3               	movlw	low ((STR_91+1)| (0+32768))
 23034  0E16  00F3               	movwf	strncmp@_r
 23035  0E17  30B9               	movlw	high ((STR_91+1)| (0+32768))
 23036  0E18  00F4               	movwf	strncmp@_r+1
 23037  0E19  3002               	movlw	2
 23038  0E1A  00F5               	movwf	strncmp@n
 23039  0E1B  3000               	movlw	0
 23040  0E1C  00F6               	movwf	strncmp@n+1
 23041  0E1D  31B7  2704  3188   	fcall	_strncmp
 23042  0E20  0871               	movf	?_strncmp,w
 23043  0E21  0472               	iorwf	?_strncmp+1,w
 23044  0E22  1903               	btfsc	3,2
 23045  0E23  2E3B               	goto	l7188
 23046  0E24  0020               	movlb	0	; select bank0
 23047  0E25  0859               	movf	vfpfcnvrt@fmt,w
 23048  0E26  0086               	movwf	6
 23049  0E27  0187               	clrf	7
 23050  0E28  3F40               	moviw [0]fsr1
 23051  0E29  00F1               	movwf	strncmp@_l
 23052  0E2A  3F41               	moviw [1]fsr1
 23053  0E2B  00F2               	movwf	strncmp@_l+1
 23054  0E2C  30BB               	movlw	low ((STR_95+1)| (0+32768))
 23055  0E2D  00F3               	movwf	strncmp@_r
 23056  0E2E  30B9               	movlw	high ((STR_95+1)| (0+32768))
 23057  0E2F  00F4               	movwf	strncmp@_r+1
 23058  0E30  3002               	movlw	2
 23059  0E31  00F5               	movwf	strncmp@n
 23060  0E32  3000               	movlw	0
 23061  0E33  00F6               	movwf	strncmp@n+1
 23062  0E34  31B7  2704  3188   	fcall	_strncmp
 23063  0E37  0871               	movf	?_strncmp,w
 23064  0E38  0472               	iorwf	?_strncmp+1,w
 23065  0E39  1D03               	btfss	3,2
 23066  0E3A  2E9E               	goto	l7198
 23067  0E3B                     l7188:	
 23068                           
 23069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 23070  0E3B  0020               	movlb	0	; select bank0
 23071  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 23072  0E3D  0086               	movwf	6
 23073  0E3E  0187               	clrf	7
 23074  0E3F  3F40               	moviw [0]fsr1
 23075  0E40  00DB               	movwf	??_vfpfcnvrt
 23076  0E41  3F41               	moviw [1]fsr1
 23077  0E42  00DC               	movwf	??_vfpfcnvrt+1
 23078  0E43  3001               	movlw	1
 23079  0E44  075B               	addwf	??_vfpfcnvrt,w
 23080  0E45  0084               	movwf	4
 23081  0E46  085C               	movf	??_vfpfcnvrt+1,w
 23082  0E47  1803               	skipnc
 23083  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 23084  0E49  0085               	movwf	5
 23085  0E4A  0800               	movf	0,w	;code access
 23086  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 23087  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 23088  0E4D  0021               	movlb	1	; select bank1
 23089  0E4E  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23090                           
 23091                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 23092  0E4F  0020               	movlb	0	; select bank0
 23093  0E50  0859               	movf	vfpfcnvrt@fmt,w
 23094  0E51  0086               	movwf	6
 23095  0E52  0187               	clrf	7
 23096  0E53  3002               	movlw	2
 23097  0E54  0781               	addwf	1,f
 23098  0E55  3141               	addfsr 1,1
 23099  0E56  1803               	skipnc
 23100  0E57  0A81               	incf	1,f
 23101                           
 23102                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 23103  0E58  085A               	movf	vfpfcnvrt@ap,w
 23104  0E59  0086               	movwf	6
 23105  0E5A  0187               	clrf	7
 23106  0E5B  0801               	movf	1,w
 23107  0E5C  0084               	movwf	4
 23108  0E5D  0185               	clrf	5
 23109  0E5E  3002               	movlw	2
 23110  0E5F  0781               	addwf	1,f
 23111  0E60  3F00               	moviw [0]fsr0
 23112  0E61  0021               	movlb	1	; select bank1
 23113  0E62  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23114  0E63  3F01               	moviw [1]fsr0
 23115  0E64  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23116  0E65  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23117  0E66  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23118  0E67  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23119  0E68  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23120  0E69  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23121  0E6A  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23122                           
 23123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 23124  0E6B  0020               	movlb	0	; select bank0
 23125  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 23126  0E6D  00B1               	movwf	xtoa@fp+1
 23127  0E6E  0857               	movf	vfpfcnvrt@fp,w
 23128  0E6F  00B0               	movwf	xtoa@fp
 23129  0E70  0021               	movlb	1	; select bank1
 23130  0E71  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23131  0E72  0020               	movlb	0	; select bank0
 23132  0E73  00B2               	movwf	xtoa@d
 23133  0E74  0021               	movlb	1	; select bank1
 23134  0E75  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23135  0E76  0020               	movlb	0	; select bank0
 23136  0E77  00B3               	movwf	xtoa@d+1
 23137  0E78  0021               	movlb	1	; select bank1
 23138  0E79  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23139  0E7A  0020               	movlb	0	; select bank0
 23140  0E7B  00B4               	movwf	xtoa@d+2
 23141  0E7C  0021               	movlb	1	; select bank1
 23142  0E7D  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23143  0E7E  0020               	movlb	0	; select bank0
 23144  0E7F  00B5               	movwf	xtoa@d+3
 23145  0E80  0021               	movlb	1	; select bank1
 23146  0E81  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23147  0E82  0020               	movlb	0	; select bank0
 23148  0E83  00B6               	movwf	xtoa@d+4
 23149  0E84  0021               	movlb	1	; select bank1
 23150  0E85  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23151  0E86  0020               	movlb	0	; select bank0
 23152  0E87  00B7               	movwf	xtoa@d+5
 23153  0E88  0021               	movlb	1	; select bank1
 23154  0E89  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23155  0E8A  0020               	movlb	0	; select bank0
 23156  0E8B  00B8               	movwf	xtoa@d+6
 23157  0E8C  0021               	movlb	1	; select bank1
 23158  0E8D  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23159  0E8E  0020               	movlb	0	; select bank0
 23160  0E8F  00B9               	movwf	xtoa@d+7
 23161  0E90  0021               	movlb	1	; select bank1
 23162  0E91  0832               	movf	vfpfcnvrt@c^(0+128),w
 23163  0E92  0020               	movlb	0	; select bank0
 23164  0E93  00DB               	movwf	??_vfpfcnvrt
 23165  0E94  085B               	movf	??_vfpfcnvrt,w
 23166  0E95  00BA               	movwf	xtoa@x
 23167  0E96  319B  2389         	fcall	_xtoa
 23168  0E98  0020               	movlb	0	; select bank0
 23169  0E99  0831               	movf	?_xtoa+1,w
 23170  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 23171  0E9B  0830               	movf	?_xtoa,w
 23172  0E9C  00D7               	movwf	?_vfpfcnvrt
 23173  0E9D  0008               	return
 23174  0E9E                     l7198:	
 23175                           
 23176                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 23177  0E9E  0020               	movlb	0	; select bank0
 23178  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 23179  0EA0  0086               	movwf	6
 23180  0EA1  0187               	clrf	7
 23181  0EA2  3F40               	moviw [0]fsr1
 23182  0EA3  00DB               	movwf	??_vfpfcnvrt
 23183  0EA4  3F41               	moviw [1]fsr1
 23184  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 23185  0EA6  085B               	movf	??_vfpfcnvrt,w
 23186  0EA7  0084               	movwf	4
 23187  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 23188  0EA9  0085               	movwf	5
 23189  0EAA  0012               	moviw fsr0++
 23190  0EAB  3A78               	xorlw	120
 23191  0EAC  1903               	btfsc	3,2
 23192  0EAD  2EBD               	goto	l7202
 23193  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 23194  0EAF  0086               	movwf	6
 23195  0EB0  0187               	clrf	7
 23196  0EB1  3F40               	moviw [0]fsr1
 23197  0EB2  00DB               	movwf	??_vfpfcnvrt
 23198  0EB3  3F41               	moviw [1]fsr1
 23199  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 23200  0EB5  085B               	movf	??_vfpfcnvrt,w
 23201  0EB6  0084               	movwf	4
 23202  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 23203  0EB8  0085               	movwf	5
 23204  0EB9  0012               	moviw fsr0++
 23205  0EBA  3A58               	xorlw	88
 23206  0EBB  1D03               	btfss	3,2
 23207  0EBC  2F1C               	goto	l7212
 23208  0EBD                     l7202:	
 23209                           
 23210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 23211  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 23212  0EBE  0086               	movwf	6
 23213  0EBF  0187               	clrf	7
 23214  0EC0  3F40               	moviw [0]fsr1
 23215  0EC1  00DB               	movwf	??_vfpfcnvrt
 23216  0EC2  3F41               	moviw [1]fsr1
 23217  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 23218  0EC4  085B               	movf	??_vfpfcnvrt,w
 23219  0EC5  0084               	movwf	4
 23220  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 23221  0EC7  0085               	movwf	5
 23222  0EC8  0800               	movf	0,w	;code access
 23223  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 23224  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 23225  0ECB  0021               	movlb	1	; select bank1
 23226  0ECC  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23227                           
 23228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 23229  0ECD  0020               	movlb	0	; select bank0
 23230  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 23231  0ECF  0086               	movwf	6
 23232  0ED0  0187               	clrf	7
 23233  0ED1  3001               	movlw	1
 23234  0ED2  0781               	addwf	1,f
 23235  0ED3  3141               	addfsr 1,1
 23236  0ED4  1803               	skipnc
 23237  0ED5  0A81               	incf	1,f
 23238                           
 23239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 23240  0ED6  085A               	movf	vfpfcnvrt@ap,w
 23241  0ED7  0086               	movwf	6
 23242  0ED8  0187               	clrf	7
 23243  0ED9  0801               	movf	1,w
 23244  0EDA  0084               	movwf	4
 23245  0EDB  0185               	clrf	5
 23246  0EDC  3002               	movlw	2
 23247  0EDD  0781               	addwf	1,f
 23248  0EDE  3F00               	moviw [0]fsr0
 23249  0EDF  0021               	movlb	1	; select bank1
 23250  0EE0  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23251  0EE1  3F01               	moviw [1]fsr0
 23252  0EE2  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23253  0EE3  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23254  0EE4  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23255  0EE5  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23256  0EE6  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23257  0EE7  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23258  0EE8  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23259                           
 23260                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 23261  0EE9  0020               	movlb	0	; select bank0
 23262  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 23263  0EEB  00B1               	movwf	xtoa@fp+1
 23264  0EEC  0857               	movf	vfpfcnvrt@fp,w
 23265  0EED  00B0               	movwf	xtoa@fp
 23266  0EEE  0021               	movlb	1	; select bank1
 23267  0EEF  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23268  0EF0  0020               	movlb	0	; select bank0
 23269  0EF1  00B2               	movwf	xtoa@d
 23270  0EF2  0021               	movlb	1	; select bank1
 23271  0EF3  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23272  0EF4  0020               	movlb	0	; select bank0
 23273  0EF5  00B3               	movwf	xtoa@d+1
 23274  0EF6  0021               	movlb	1	; select bank1
 23275  0EF7  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23276  0EF8  0020               	movlb	0	; select bank0
 23277  0EF9  00B4               	movwf	xtoa@d+2
 23278  0EFA  0021               	movlb	1	; select bank1
 23279  0EFB  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23280  0EFC  0020               	movlb	0	; select bank0
 23281  0EFD  00B5               	movwf	xtoa@d+3
 23282  0EFE  0021               	movlb	1	; select bank1
 23283  0EFF  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23284  0F00  0020               	movlb	0	; select bank0
 23285  0F01  00B6               	movwf	xtoa@d+4
 23286  0F02  0021               	movlb	1	; select bank1
 23287  0F03  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23288  0F04  0020               	movlb	0	; select bank0
 23289  0F05  00B7               	movwf	xtoa@d+5
 23290  0F06  0021               	movlb	1	; select bank1
 23291  0F07  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23292  0F08  0020               	movlb	0	; select bank0
 23293  0F09  00B8               	movwf	xtoa@d+6
 23294  0F0A  0021               	movlb	1	; select bank1
 23295  0F0B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23296  0F0C  0020               	movlb	0	; select bank0
 23297  0F0D  00B9               	movwf	xtoa@d+7
 23298  0F0E  0021               	movlb	1	; select bank1
 23299  0F0F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23300  0F10  0020               	movlb	0	; select bank0
 23301  0F11  00DB               	movwf	??_vfpfcnvrt
 23302  0F12  085B               	movf	??_vfpfcnvrt,w
 23303  0F13  00BA               	movwf	xtoa@x
 23304  0F14  319B  2389         	fcall	_xtoa
 23305  0F16  0020               	movlb	0	; select bank0
 23306  0F17  0831               	movf	?_xtoa+1,w
 23307  0F18  00D8               	movwf	?_vfpfcnvrt+1
 23308  0F19  0830               	movf	?_xtoa,w
 23309  0F1A  00D7               	movwf	?_vfpfcnvrt
 23310  0F1B  0008               	return
 23311  0F1C                     l7212:	
 23312                           
 23313                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 23314  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 23315  0F1D  0086               	movwf	6
 23316  0F1E  0187               	clrf	7
 23317  0F1F  3F40               	moviw [0]fsr1
 23318  0F20  00F1               	movwf	strncmp@_l
 23319  0F21  3F41               	moviw [1]fsr1
 23320  0F22  00F2               	movwf	strncmp@_l+1
 23321  0F23  30EC               	movlw	low (STR_109| (0+32768))
 23322  0F24  00F3               	movwf	strncmp@_r
 23323  0F25  30B9               	movlw	high (STR_109| (0+32768))
 23324  0F26  00F4               	movwf	strncmp@_r+1
 23325  0F27  3002               	movlw	2
 23326  0F28  00F5               	movwf	strncmp@n
 23327  0F29  3000               	movlw	0
 23328  0F2A  00F6               	movwf	strncmp@n+1
 23329  0F2B  31B7  2704  3188   	fcall	_strncmp
 23330  0F2E  0871               	movf	?_strncmp,w
 23331  0F2F  0472               	iorwf	?_strncmp+1,w
 23332  0F30  1903               	btfsc	3,2
 23333  0F31  2F49               	goto	l7216
 23334  0F32  0020               	movlb	0	; select bank0
 23335  0F33  0859               	movf	vfpfcnvrt@fmt,w
 23336  0F34  0086               	movwf	6
 23337  0F35  0187               	clrf	7
 23338  0F36  3F40               	moviw [0]fsr1
 23339  0F37  00F1               	movwf	strncmp@_l
 23340  0F38  3F41               	moviw [1]fsr1
 23341  0F39  00F2               	movwf	strncmp@_l+1
 23342  0F3A  30DA               	movlw	low (STR_113| (0+32768))
 23343  0F3B  00F3               	movwf	strncmp@_r
 23344  0F3C  30B9               	movlw	high (STR_113| (0+32768))
 23345  0F3D  00F4               	movwf	strncmp@_r+1
 23346  0F3E  3002               	movlw	2
 23347  0F3F  00F5               	movwf	strncmp@n
 23348  0F40  3000               	movlw	0
 23349  0F41  00F6               	movwf	strncmp@n+1
 23350  0F42  31B7  2704  3188   	fcall	_strncmp
 23351  0F45  0871               	movf	?_strncmp,w
 23352  0F46  0472               	iorwf	?_strncmp+1,w
 23353  0F47  1D03               	btfss	3,2
 23354  0F48  2FAC               	goto	l7226
 23355  0F49                     l7216:	
 23356                           
 23357                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 23358  0F49  0020               	movlb	0	; select bank0
 23359  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 23360  0F4B  0086               	movwf	6
 23361  0F4C  0187               	clrf	7
 23362  0F4D  3F40               	moviw [0]fsr1
 23363  0F4E  00DB               	movwf	??_vfpfcnvrt
 23364  0F4F  3F41               	moviw [1]fsr1
 23365  0F50  00DC               	movwf	??_vfpfcnvrt+1
 23366  0F51  3001               	movlw	1
 23367  0F52  075B               	addwf	??_vfpfcnvrt,w
 23368  0F53  0084               	movwf	4
 23369  0F54  085C               	movf	??_vfpfcnvrt+1,w
 23370  0F55  1803               	skipnc
 23371  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 23372  0F57  0085               	movwf	5
 23373  0F58  0800               	movf	0,w	;code access
 23374  0F59  00DD               	movwf	??_vfpfcnvrt+2
 23375  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 23376  0F5B  0021               	movlb	1	; select bank1
 23377  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 23378                           
 23379                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 23380  0F5D  0020               	movlb	0	; select bank0
 23381  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 23382  0F5F  0086               	movwf	6
 23383  0F60  0187               	clrf	7
 23384  0F61  3002               	movlw	2
 23385  0F62  0781               	addwf	1,f
 23386  0F63  3141               	addfsr 1,1
 23387  0F64  1803               	skipnc
 23388  0F65  0A81               	incf	1,f
 23389                           
 23390                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 23391  0F66  085A               	movf	vfpfcnvrt@ap,w
 23392  0F67  0086               	movwf	6
 23393  0F68  0187               	clrf	7
 23394  0F69  0801               	movf	1,w
 23395  0F6A  0084               	movwf	4
 23396  0F6B  0185               	clrf	5
 23397  0F6C  3002               	movlw	2
 23398  0F6D  0781               	addwf	1,f
 23399  0F6E  3F00               	moviw [0]fsr0
 23400  0F6F  0021               	movlb	1	; select bank1
 23401  0F70  00B3               	movwf	vfpfcnvrt@llu^(0+128)
 23402  0F71  3F01               	moviw [1]fsr0
 23403  0F72  00B4               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 23404  0F73  01B5               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 23405  0F74  01B6               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 23406  0F75  01B7               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 23407  0F76  01B8               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 23408  0F77  01B9               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 23409  0F78  01BA               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 23410                           
 23411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 23412  0F79  0020               	movlb	0	; select bank0
 23413  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 23414  0F7B  00B1               	movwf	xtoa@fp+1
 23415  0F7C  0857               	movf	vfpfcnvrt@fp,w
 23416  0F7D  00B0               	movwf	xtoa@fp
 23417  0F7E  0021               	movlb	1	; select bank1
 23418  0F7F  0833               	movf	vfpfcnvrt@llu^(0+128),w
 23419  0F80  0020               	movlb	0	; select bank0
 23420  0F81  00B2               	movwf	xtoa@d
 23421  0F82  0021               	movlb	1	; select bank1
 23422  0F83  0834               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 23423  0F84  0020               	movlb	0	; select bank0
 23424  0F85  00B3               	movwf	xtoa@d+1
 23425  0F86  0021               	movlb	1	; select bank1
 23426  0F87  0835               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 23427  0F88  0020               	movlb	0	; select bank0
 23428  0F89  00B4               	movwf	xtoa@d+2
 23429  0F8A  0021               	movlb	1	; select bank1
 23430  0F8B  0836               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 23431  0F8C  0020               	movlb	0	; select bank0
 23432  0F8D  00B5               	movwf	xtoa@d+3
 23433  0F8E  0021               	movlb	1	; select bank1
 23434  0F8F  0837               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 23435  0F90  0020               	movlb	0	; select bank0
 23436  0F91  00B6               	movwf	xtoa@d+4
 23437  0F92  0021               	movlb	1	; select bank1
 23438  0F93  0838               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 23439  0F94  0020               	movlb	0	; select bank0
 23440  0F95  00B7               	movwf	xtoa@d+5
 23441  0F96  0021               	movlb	1	; select bank1
 23442  0F97  0839               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 23443  0F98  0020               	movlb	0	; select bank0
 23444  0F99  00B8               	movwf	xtoa@d+6
 23445  0F9A  0021               	movlb	1	; select bank1
 23446  0F9B  083A               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 23447  0F9C  0020               	movlb	0	; select bank0
 23448  0F9D  00B9               	movwf	xtoa@d+7
 23449  0F9E  0021               	movlb	1	; select bank1
 23450  0F9F  0832               	movf	vfpfcnvrt@c^(0+128),w
 23451  0FA0  0020               	movlb	0	; select bank0
 23452  0FA1  00DB               	movwf	??_vfpfcnvrt
 23453  0FA2  085B               	movf	??_vfpfcnvrt,w
 23454  0FA3  00BA               	movwf	xtoa@x
 23455  0FA4  319B  2389         	fcall	_xtoa
 23456  0FA6  0020               	movlb	0	; select bank0
 23457  0FA7  0831               	movf	?_xtoa+1,w
 23458  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 23459  0FA9  0830               	movf	?_xtoa,w
 23460  0FAA  00D7               	movwf	?_vfpfcnvrt
 23461  0FAB  0008               	return
 23462  0FAC                     l7226:	
 23463                           
 23464                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 23465  0FAC  0020               	movlb	0	; select bank0
 23466  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 23467  0FAE  0086               	movwf	6
 23468  0FAF  0187               	clrf	7
 23469  0FB0  3F40               	moviw [0]fsr1
 23470  0FB1  00DB               	movwf	??_vfpfcnvrt
 23471  0FB2  3F41               	moviw [1]fsr1
 23472  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 23473  0FB4  085B               	movf	??_vfpfcnvrt,w
 23474  0FB5  0084               	movwf	4
 23475  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 23476  0FB7  0085               	movwf	5
 23477  0FB8  0012               	moviw fsr0++
 23478  0FB9  3A25               	xorlw	37
 23479  0FBA  1D03               	btfss	3,2
 23480  0FBB  2FD4               	goto	l7236
 23481                           
 23482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 23483  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 23484  0FBD  0086               	movwf	6
 23485  0FBE  0187               	clrf	7
 23486  0FBF  3001               	movlw	1
 23487  0FC0  0781               	addwf	1,f
 23488  0FC1  3141               	addfsr 1,1
 23489  0FC2  1803               	skipnc
 23490  0FC3  0A81               	incf	1,f
 23491                           
 23492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 23493  0FC4  3025               	movlw	37
 23494  0FC5  00F1               	movwf	fputc@c
 23495  0FC6  3000               	movlw	0
 23496  0FC7  00F2               	movwf	fputc@c+1
 23497  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 23498  0FC9  00F4               	movwf	fputc@fp+1
 23499  0FCA  0857               	movf	vfpfcnvrt@fp,w
 23500  0FCB  00F3               	movwf	fputc@fp
 23501  0FCC  31B7  2756         	fcall	_fputc
 23502  0FCE                     l7232:	
 23503                           
 23504                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 23505  0FCE  3001               	movlw	1
 23506  0FCF  0020               	movlb	0	; select bank0
 23507  0FD0  00D7               	movwf	?_vfpfcnvrt
 23508  0FD1  3000               	movlw	0
 23509  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 23510  0FD3  0008               	return
 23511  0FD4                     l7236:	
 23512                           
 23513                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 23514  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 23515  0FD5  0086               	movwf	6
 23516  0FD6  0187               	clrf	7
 23517  0FD7  3001               	movlw	1
 23518  0FD8  0781               	addwf	1,f
 23519  0FD9  3141               	addfsr 1,1
 23520  0FDA  1803               	skipnc
 23521  0FDB  0A81               	incf	1,f
 23522  0FDC  2B32               	goto	l7070
 23523  0FDD                     l7242:	
 23524                           
 23525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 23526  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 23527  0FDE  0086               	movwf	6
 23528  0FDF  0187               	clrf	7
 23529  0FE0  3F40               	moviw [0]fsr1
 23530  0FE1  00DB               	movwf	??_vfpfcnvrt
 23531  0FE2  3F41               	moviw [1]fsr1
 23532  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 23533  0FE4  085B               	movf	??_vfpfcnvrt,w
 23534  0FE5  0084               	movwf	4
 23535  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 23536  0FE7  0085               	movwf	5
 23537  0FE8  0800               	movf	0,w	;code access
 23538  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 23539  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 23540  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 23541  0FEC  00F1               	movwf	fputc@c
 23542  0FED  085E               	movf	??_vfpfcnvrt+3,w
 23543  0FEE  00F2               	movwf	fputc@c+1
 23544  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 23545  0FF0  00F4               	movwf	fputc@fp+1
 23546  0FF1  0857               	movf	vfpfcnvrt@fp,w
 23547  0FF2  00F3               	movwf	fputc@fp
 23548  0FF3  31B7  2756  3188   	fcall	_fputc
 23549                           
 23550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 23551  0FF6  0020               	movlb	0	; select bank0
 23552  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 23553  0FF8  0086               	movwf	6
 23554  0FF9  0187               	clrf	7
 23555  0FFA  3001               	movlw	1
 23556  0FFB  0781               	addwf	1,f
 23557  0FFC  3141               	addfsr 1,1
 23558  0FFD  1803               	skipnc
 23559  0FFE  0A81               	incf	1,f
 23560  0FFF  2FCE               	goto	l7232
 23561  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     381
    Constant    298
    Data        11
    BSS         135
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     66      80
    BANK3            80      0      78
    BANK4            80      0      53
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_102(CODE[3]), 
		 -> STR_97(CODE[4]), STR_93(CODE[4]), STR_88(CODE[3]), STR_83(CODE[3]), 
		 -> STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), STR_43(CODE[3]), 
		 -> STR_39(CODE[3]), STR_34(CODE[3]), STR_30(CODE[3]), STR_25(CODE[4]), 
		 -> STR_21(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_115(CODE[3]), STR_111(CODE[3]), STR_106(CODE[3]), STR_102(CODE[3]), 
		 -> STR_97(CODE[4]), STR_93(CODE[4]), STR_88(CODE[3]), STR_83(CODE[3]), 
		 -> STR_78(CODE[4]), STR_73(CODE[3]), STR_68(CODE[3]), STR_63(CODE[4]), 
		 -> STR_58(CODE[3]), STR_53(CODE[3]), STR_48(CODE[4]), STR_43(CODE[3]), 
		 -> STR_39(CODE[3]), STR_34(CODE[3]), STR_30(CODE[3]), STR_25(CODE[4]), 
		 -> STR_21(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> updateTemperatures@vtsx(BANK1[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK4[32]), sp__logf(UNKNOWN), 
		 -> updateTemperatures@vtsx(BANK1[2]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1836_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 40
		 -> STR_17(CODE[18]), STR_16(CODE[18]), STR_15(CODE[19]), STR_14(CODE[20]), 
		 -> STR_13(CODE[20]), STR_12(CODE[21]), STR_11(CODE[21]), STR_10(CODE[21]), 
		 -> STR_9(CODE[22]), STR_8(CODE[22]), STR_7(CODE[21]), STR_6(CODE[21]), 
		 -> STR_3(CODE[6]), STR_2(CODE[4]), STR_1(CODE[40]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), updateTemperatures@vtsx(BANK1[2]), 

    vfpfcnvrt@vp	PTR void  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), updateTemperatures@vtsx(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 4
		 -> ?_snprintf(BANK1[2]), sp__logf(UNKNOWN), updateTemperatures@vtsx(BANK1[2]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), sp__logf(UNKNOWN), updateTemperatures@vtsx(BANK1[2]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK4[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_18(CODE[3]), STR_5(CODE[3]), STR_4(CODE[38]), messageBuffer(BIGRAM[127]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _watchdog_timeout_shutdown->_RGB_color
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _EUSART_Write_Text->_EUSART_Write
    _setTemperatureLimitsint->___wmul
    _setShortCircuitProtection->_I2C_writeRegister
    _setOverCurrentDischargeProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_I2C_writeRegister
    _setCellUndervoltageProtection->_readRegister
    _setCellOvervoltageProtection->_I2C_writeRegister
    _setCellOvervoltageProtection->_readRegister
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _AFE_UPDATE->_AFE_FET_Status
    _AFE_UPDATE->_AFE_Status
    _AFE_UPDATE->_enableCharging
    _AFE_UPDATE->_enableDischarging
    _updateVoltages->___fltol
    _updateTemperatures->___fltol
    _updateCurrent->___fltol
    _enableDischarging->_I2C_writeRegister
    _enableDischarging->_readRegister
    _enableCharging->_I2C_writeRegister
    _enableCharging->_readRegister
    _I2C_writeRegister->_send_I2C_controlByte
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___flmul->__Umul8_16
    _AFE_Status->_readRegister
    _AFE_FET_Status->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _statemachine->_snprintf
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _setShortCircuitProtection->___flge
    _setOverCurrentDischargeProtection->___flge
    ___flge->___fldiv
    _setCellUndervoltageProtection->___aldiv
    _setCellOvervoltageProtection->___aldiv
    _AFE_UPDATE->_coulomb_counter
    _updateVoltages->___fladd
    _updateTemperatures->___fladd
    _logf->___fladd
    ___flneg->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    _EUSART_Initialize->___aldiv
    ___aldiv->___lmul

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_statemachine
    _printcellParameters->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt
    _init_AFE->_setOverCurrentDischargeProtection
    _init_AFE->_setShortCircuitProtection
    _AFE_UPDATE->_updateTemperatures
    _updateVoltages->___fltol
    _updateTemperatures->_logf
    _logf->___flsub
    _updateCurrent->___fltol
    _coulomb_counter->___fltol
    _calibrate_BATTSOC->___fltol
    ___fltol->___flsub

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _updateTemperatures->_logf

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  379563
                                             78 BANK1      2     2      0
                  _EUSART_Initialize
                          _initClock
                            _initWDT
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
          _watchdog_timeout_shutdown
 ---------------------------------------------------------------------------------
 (1) _watchdog_timeout_shutdown                            2     2      0     402
                                              3 COMMON     2     2      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0  376783
                                             75 BANK1      3     3      0
                         _AFE_UPDATE
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                _printcellParameters
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _printcellParameters                                  0     0      0   55486
                  _EUSART_Write_Text
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            14     4     10   54006
                                             76 BANK0      4     4      0
                                             44 BANK1     10     0     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   49669
                                             74 BANK0      2     2      0
                                             27 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   48632
                                             65 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   47857
                                             55 BANK0     10     6      4
                                              0 BANK1     27    27      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    7640
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     161
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     161
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    6353
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     311
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     314
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5013
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                23    19      4    2068
                                             10 COMMON     2     2      0
                                              0 BANK0     21    17      4
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    5833
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    7036
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     448
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     452
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    4945
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    4685
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     182
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1605
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1290
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    2025
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write_Text                                    5     3      2    1480
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0   70567
       _setCellOvervoltageProtection
      _setCellUndervoltageProtection
  _setOverCurrentDischargeProtection
          _setShortCircuitProtection
              _setShuntResistorValue
            _setTemperatureLimitsint
 ---------------------------------------------------------------------------------
 (3) _setTemperatureLimitsint                              8     0      8    1244
                                              0 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     852
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _setShuntResistorValue                                4     0      4      98
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) _setShortCircuitProtection                           21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _setOverCurrentDischargeProtection                   21    15      6   17884
                                             70 BANK0      9     3      6
                                              0 BANK1     12    12      0
                  _I2C_writeRegister
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     486
                                             58 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _setCellUndervoltageProtection                       21    17      4   16730
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _setCellOvervoltageProtection                        21    17      4   16727
                                             18 BANK0     21    17      4
                  _I2C_writeRegister
                            ___aldiv
                             ___lmul
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2   12962
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     402
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     402
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _AFE_UPDATE                                           0     0      0  181444
                     _AFE_FET_Status
                         _AFE_Status
                  _calibrate_BATTSOC
                    _coulomb_counter
                     _enableCharging
                  _enableDischarging
                      _updateCurrent
                 _updateTemperatures
                     _updateVoltages
 ---------------------------------------------------------------------------------
 (3) _updateVoltages                                      11    11      0   28905
                                             17 BANK1     11    11      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                             ___lmul
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8    1396
                                              1 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _updateTemperatures                                  55    55      0   52876
                                             20 BANK1     55    55      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                               _logf
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _logf                                                78    74      4   22362
                                              8 BANK1     12     8      4
                                              0 BANK2     66    66      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _updateCurrent                                        6     6      0   26028
                                             17 BANK1      6     6      0
                  _I2C_writeRegister
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     121
                                             58 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _enableDischarging                                    5     3      2   13012
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _enableCharging                                       5     3      2   13012
                                             11 COMMON     1     1      0
                                              0 BANK0      4     2      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _I2C_writeRegister                                    6     0      6    4776
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (3) _coulomb_counter                                      4     4      0   17940
                                             78 BANK0      2     2      0
                                             17 BANK1      2     2      0
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4765
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    4112
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _calibrate_BATTSOC                                    9     9      0   13265
                                             17 BANK1      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    2130
                                              1 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     989
                                             10 COMMON     2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    6825
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              1 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             26    18      8    3097
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _AFE_Status                                           6     4      2    8291
                                             11 COMMON     1     1      0
                                              0 BANK0      5     3      2
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _AFE_FET_Status                                       2     2      0    8115
                                             11 COMMON     1     1      0
                                              0 BANK0      1     1      0
                       _readRegister
 ---------------------------------------------------------------------------------
 (4) _readRegister                                         6     2      4    8050
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (5) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _send_I2C_controlByte                                 4     0      4     602
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initWDT                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4    2378
                                             10 COMMON     2     2      0
                                             18 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8    2065
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
       ___lmul (ARG)
   _initClock
     _internal_16
   _initWDT
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _AFE_UPDATE
       _AFE_FET_Status
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _AFE_Status
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _calibrate_BATTSOC
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _coulomb_counter
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
       _enableCharging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _enableDischarging
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateCurrent
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateTemperatures
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl
         _logf
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul
             __Umul8_16
             ___xxtofl (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _updateVoltages
         ___aldiv
           ___lmul (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flsub (ARG)
             ___fladd
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
       _setCellOvervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setCellUndervoltageProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___aldiv
           ___lmul (ARG)
         ___lmul
         _readRegister
           _read_I2C_data
           _send_I2C_NACK
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
       _setOverCurrentDischargeProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShortCircuitProtection
         _I2C_writeRegister
           _send_I2C_controlByte
           _send_I2C_data
           _send_I2C_startBit
           _send_I2C_stopBit
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flge
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___flmul
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl
       _setShuntResistorValue
       _setTemperatureLimitsint
         ___wmul
     _printcellParameters
       _EUSART_Write_Text
         _EUSART_Write
       _snprintf
         _vsnprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _fputc
                 _putch
               _isdigit
               _otoa
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _stoa
                 _fputc
                   _putch
                 _strlen
               _strncmp
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _toupper
                   _islower
     _snprintf
       _vsnprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower
   _watchdog_timeout_shutdown
     _RGB_color

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     42      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4E      11       97.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      35      13       66.3%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     180      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     180      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 07 19:13:33 2020

          __end_of_setShortCircuitProtection 1A36                               _maxCellVoltage 01CC  
                      __end_of_send_I2C_data 1809                                 ___fldiv@aexp 0059  
                               ___fldiv@bexp 0058                               _updateVoltages 124E  
                               ___fldiv@sign 0051                           ?_calibrate_BATTSOC 0070  
                                __CFG_CP$OFF 0000                          ___wmul@multiplicand 0073  
                      _setShuntResistorValue 3297                               _chg_fet_enable 01D0  
                        __Umul8_16@word_mpld 0077                                          l312 2006  
                                        l306 1805                                          l324 3265  
                                        l318 3289                                          l511 2E71  
                                        l271 0801                      enableDischarging@enable 0020  
                                        l336 326D                                          l192 29EB  
                                        l370 33FE                                          l348 327F  
                                        l372 3403                                          l373 3408  
                                        l374 341D                                          l704 28A1  
                                        l813 36C9                                          l816 36E9  
                                        l912 1BAB                                          l833 1A9D  
                                        l834 1AB1                                          l828 1A7B  
                                        l908 1B90                                          l837 1B47  
                                        l829 1A82                                          l933 1CAE  
                                        l854 2529                                          l942 1E81  
                                        l944 1E8D                                          l865 25E4  
                                        l945 1E90                                          l858 2544  
                                        l946 1E93                                          l859 25D9  
                                        l947 1E96                                          l876 2F7D  
                                        l885 2FD8                                          l893 2448  
                                        l949 1EC9                                          l897 2463  
                                        _Lg1 39AE                                          _Lg2 39AA  
                                        _Lg3 39A6                                          _Lg4 39A2  
                        __size_of_AFE_UPDATE 003A                          ??_calibrate_BATTSOC 00B1  
                                        _abs 32F6                               RGB_color@color 0071  
                                        _pad 36B3                                          _rts 01BC  
                               __CFG_BORV$LO 0000                                          wreg 0009  
                               __CFG_IESO$ON 0000                                 ___flmul@aexp 0038  
                               ___flmul@bexp 0039       setCellOvervoltageProtection@voltage_mV 0032  
    setCellUndervoltageProtection@voltage_mV 0032                                 ___flmul@sign 0033  
                               ___flmul@temp 003E                                 ___flmul@prod 003A  
                               _statemachine 2975                                 __CFG_LVP$OFF 0000  
                        __size_of_AFE_Status 005F                                 ___fltol@exp1 007B  
                                       l1021 335D                                         l1121 26F4  
                                       l1202 2A55                                         ?_abs 0074  
                                       l1222 28F0                                         l1134 242F  
                                       l1400 1E4A                                         l1402 1E57  
                                       l1322 064B                                         l1086 2B72  
                                       l1430 1241                                         l1326 06DE  
                                       l1254 2AD3                                         l1343 0761  
                                       l1328 06C1                                         l1264 2964  
                                       l1364 07D8                                         l1356 07C0  
                                       l1470 2C55                                         l1462 2C37  
                                       l1623 07F0                                         l1199 2A07  
                                       l1456 2C01                                         l1378 1D2B  
                                       l1469 2C4B                                         l1399 1E32  
                                       l1496 2CE2                                         l4304 238F  
                                       l5114 0640                                         l4170 3789  
                                       l4322 2402                                         l5124 0655  
                                       l4164 375E                                         l4316 23C3  
                                       l4324 240E                                         l4308 23B6  
                                       l4340 2A8E                                         l5230 0787  
                                       l5118 0643                                         l4166 3762  
                                       l4182 346A                                         l4190 32EF  
                                       l4270 2664                                         l4318 23D2  
                                       l4502 2F56                                         l6120 20B7  
                                       l5224 0780                                         l5216 0773  
                                       l5208 0759                                         l5232 0789  
                                       l4248 3357                                         l4272 2668  
                                       l4520 2F9F                                         l4360 2928  
                                       l5402 1DB6                                         l6122 20C7  
                                       l6114 2018                                         l5242 0794  
                                       l5162 06C9                                         l5154 0691  
                                       l5090 0618                                         l6130 21B0  
                                       l4282 267F                                         l4266 263D  
                                       l4530 2FAF                                         l4522 2FAC  
                                       l4338 2A7F                                         l7010 08B3  
                                       l7002 0862                                         l5420 1DC1  
                                       l5404 1D7F                                         l5340 1CFF  
                                       l6108 2015                                         l5260 07D0  
                                       l5180 06EC                                         l5164 06CB  
                                       l5172 06D9                                         l4188 32E3  
                                       l4292 26C7                                         l4284 268E  
                                       l4540 2FFA                                         l4516 2F8E  
                                       l4700 373E                                         l4348 2AC7  
                                       l4364 2958                                         l7100 0B13  
                                       l5422 1DD8                                         l5406 1DBB  
                                       l5342 1D07                                         l5238 0792  
                                       l5190 0700                                         l5094 061B  
                                       l4374 33BA                                         l4294 26D3  
                                       l4534 2FDC                                         l4702 3719  
                                       l4358 2919                                         l7022 0929  
                                       l7014 08E0                                         ?_pad 0026  
                                       l5432 1DF1                                         l5360 1D23  
                                       l5336 1CFC                                         l5264 07D4  
                                       l5096 0623                                         l7120 0BCF  
                                       l7032 0988                                         l5442 1E1A  
                                       l5370 1D4A                                         l5274 07EA  
                                       l5506 1077                                         l4538 2FED  
                                       l7202 0EBD                                         l7130 0C08  
                                       l7042 09E8                                         l5428 1DEF  
                                       l5356 1D20                                         l5620 2C24  
                                       l5188 06FE                                         l4708 3745  
                                       l7212 0F1C                                         l7140 0C66  
                                       l7052 0A40                                         l5630 2C3C  
                                       l5614 2C10                                         l5198 070F  
                                       l7150 0CC6                                         l7070 0B32  
                                       l7062 0A9F                                         l5456 1E53  
                                       l5376 1D56                                         l5560 11C0  
                                       l5480 1046                                         l5608 2BF9  
                                       l7320 3502                                         l6256 3430  
                                       l6600 36BF                                         l7232 0FCE  
                                       l7216 0F49                                         l7160 0D1E  
                                       l5570 11D9                                         l5642 2C70  
                                       l5618 2C14                                         l5706 01CA  
                                       l6610 36CB                                         l7226 0FAC  
                                       l7170 0D7D                                         l7074 0B36  
                                       l7242 0FDD                                         l5396 1D9D  
                                       l5580 1202                                         l5476 103C  
                                       l5628 2C49                                         l7316 34F7  
                                       l6604 36C7                                         l7236 0FD4  
                                       l7076 0AD4                                         l5590 122E  
                                       l5566 11D7                                         l5558 11A9  
                                       l5494 105F                                         l5478 103E  
                                       l5718 01E4                                         l7502 231D  
                                       l7422 19D9                                         l6614 36F5  
                                       l7174 0DAB                                         l7360 2BCC  
                                       l5584 1217                                         l5496 1061  
                                       l5824 2A21                                         l7416 192D  
                                       l6632 3499                                         l6800 1BED  
                                       l7184 0E0D                                         l7088 0AF4  
                                       l7280 34C5                                         l7346 2B93  
                                       l7338 2B83                                         l5498 1069  
                                       l7506 2345                                         l7434 19EB  
                                       l6634 34A2                                         l6714 258B  
                                       l6706 253C                                         l7282 34E5  
                                       l7364 2BDA                                         l7356 2BC1  
                                       l7348 2BA1                                         l5852 28B9  
                                       l5692 0124                                         l5684 00A5  
                                       l7532 218D                                         l5828 2A3B  
                                       l7460 18C4                                         l6660 1AAC  
                                       l6740 25FD                                         l6724 2566  
                                       l7188 0E3B                                         l6900 1E83  
                                       l7380 2B0B                                         l7630 345D  
                                       l5870 28EC                                         l5686 00C1  
                                       l5918 340D                                         l7454 1818  
                                       l7438 1A15                                         l6654 1A95  
                                       l6750 245B                                         l7198 0E9E  
                                       l6910 1E99                                         l7382 2B13  
                                       l7374 2AF7                                         l5848 28B0  
                                       l7720 363E                                         l7528 2165  
                                       l7472 18D6                                         l5936 333D  
                                       l6664 1ADE                                         l6840 1CCC  
                                       l6816 1C3B                                         l6824 1C7D  
                                       l6920 1ED0                                         l7392 2B51  
                                       l7800 29D3                                         l7650 287D  
                                       l7642 2865                                         l5698 0181  
                                       l7722 3642                                         l6674 1AB9  
                                       l6682 1B53                                         l7394 2B55  
                                       l5868 28DE                                         l7580 2F2D  
                                       l7724 3645                                         l7476 18FE  
                                       l6692 1B66                                         l6756 24A6  
                                       l6932 1EFE                                         l6916 1E9E  
                                       l7396 2B5C                                         l7654 2889  
                                       l7646 2871                                         l5878 28FD  
                                       l7670 3618                                         l6870 2CE6  
                                       l6862 2CAA                                         l6686 1B5B  
                                       l6766 2507                                         l6934 1F0E  
                                       l6942 1F41                                         l7576 2F16  
                                       l6880 2D15                                         l6864 2CAF  
                                       l6856 2C9A                                         l6848 2C7E  
                                       l6696 1B73                                         l6768 2482  
                                       l6776 250C                                         l6792 1BBB  
                                       l6936 1F17                                         l7824 3541  
                                       l7658 2895                                         l7578 2F25  
                                       l6866 2CC3                                         l6786 1BA3  
                                       l6954 1F82                                         l7748 2DB0  
                                       l6796 1BD3                                         l6956 1F92  
                                       l6964 1FC5                                         l7678 35E1  
                                       l7686 2DC8                                         l6990 27AC  
                                       l6974 2706                                         l6958 1F9B  
                                       l7790 29A8                                         l7768 2976  
                                       l6986 277E                                         l6978 2733  
                                       l7794 29BD                                         l7786 2998  
                                       l7990 3412                                         l6998 0843  
                                       l7984 29DD                                         l7986 1EB7  
                                       l7988 2CBB                                         STR_1 3802  
                               __CFG_WDTE$ON 0000                                         STR_2 39D6  
                                       STR_3 399C                                         STR_4 382A  
                                       STR_6 38F0                                         STR_7 389C  
                                       STR_8 3870                                         STR_9 3886  
                                       _BRGH 0CF2                                         _CREN 0CEC  
                                       u4220 32D7                                         u4230 32D8  
                                       u4150 331C                                         u4055 3787  
                                       u4320 266F                                         u4160 331D  
                                       u4145 32FF                                         u4170 33D7  
                                       u4180 33D8                                         u4255 335E  
                                       u4265 3363                                         u6035 0774  
                                       u4355 26B4                                         u4525 2AB4  
                                       u6215 07F1                                         u6135 07AB  
                                       u7015 00B5                                         u4455 23F0  
                 enableDischarging@sys_ctrl2 007B                                         u4490 2A6F  
                                       u7035 00D2                                         u6405 1D8E  
                                       u4565 2946                                         u7055 0135  
                                       u8040 1010                                         u6425 1D97  
                                       u8025 36D5                                         u4905 2F76  
                                       u8050 1011                                         _SCS0 04C8  
                                       u6435 1DAB                                         u7315 28C2  
                                       _SCS1 04C9                                         u4925 2FAA  
                                       u4870 2F45                                         u7095 01FC  
                                       u8135 1A8D                                         u4935 2FB9  
                                       u8080 1A51                                         u6465 1DC4  
                                       u6705 1189                                         u7345 28DF  
                                       u8305 2586                                         u8090 1A52  
                                       u6555 1E08                                         u6395 1D87  
                                       u6715 1198                                         u5915 06CF  
                                       u4955 2FF8                                         u6565 1E23  
                                       u6485 1DCD                                         u6725 11AC  
                                       u7605 203A                                         u8165 1B51  
                                       u5870 06B0                                         u6575 1E3C  
                                       u6815 11F0                                         u7375 28F4  
                                       u7615 20C5                                         u8255 2534  
                                       u5880 06B1                                         u7800 3436  
                                       u6825 120B                                         u6745 11B5  
                                       u6905 2C31                                         u7625 20D5  
                                       u5865 06A5                                         u8185 1ACD  
                                       u8265 25BD                                         u8425 1B9B  
                                       u8610 2CFA                                         u8450 1C04  
                                       u6835 1221                                         u6675 10ED  
                                       u7635 2286                                         u8195 1AD9  
                                       u8275 25E2                                         u8355 2453  
                                       u8515 1C61                                         u8620 2CFB  
                                       u8460 1C05                                         u8700 1F33  
                                       u9245 2B96                                         u6685 111C  
                                       u6925 2C43                                         u8525 1C87  
                                       u8445 1BE7                                         u8710 1F34  
                                       u6695 1172                                         u8295 257A  
                                       u8480 1C24                                         u9265 2BA2  
                                       u5993 0721                                         u5985 0704  
                                       u9185 3503                                         u9425 18EF  
                                       u8385 2495                                         u8545 1C9D  
                                       u7770 3426                                         u8490 1C25  
                                       u9275 2BB6                                         u9195 350A  
                                       u8395 24A1                                         u8555 1CA9  
                                       u9355 2B48                                         u7780 3427  
                                       u9285 2BC2                                         u6965 2C5D  
                                       u6885 2C1D                                         u9445 22F7  
                                       u7790 3435                                         u8750 1FB7  
                                       u9455 2335                                         u8760 1FB8  
                                       u9705 2D71                                         u9625 2DDE  
                                       u9385 1A04                                         u9715 2D88  
                                       u9475 2146                                         u7980 3333  
                                       u9645 2E44                                         u9485 217D  
                                       u7990 3334                                         u9675 2D24  
                                       u9685 2D3B                                         u9757 354A  
                                       u9767 3399                                         u9777 29B5  
                                       _TMR1 0016                                         u9787 32C3  
                                       _SPEN 0CEF                                         _TXEN 0CF5  
                                       _SYNC 0CF4                  ??_watchdog_timeout_shutdown 0073  
                               __CFG_WRT$OFF 0000                                         abs@a 0074  
                                       _dbuf 022E                               ?_updateCurrent 0070  
                                       _atoi 2C79                                         _ctoa 348C  
                                       _main 3520                                         _dtoa 1A36  
                                       _logf 0074                                         _prec 0166  
                                       _otoa 2522                                         _nout 0162  
                                       pad@i 002C                                         pad@p 0029  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       pad@w 002E                                         _stoa 2F3B  
                                       btemp 007E                                         _utoa 2441  
                                       _xtoa 1B89                                         start 001E  
                  __end_of_calibrate_BATTSOC 20D8                              ___fldiv@new_exp 0052  
                     __end_of_updateVoltages 1526                     __end_of_send_I2C_stopBit 3271  
                          _enableDischarging 35F4                                        ??_abs 0076  
                                      ??_pad 002B                         _send_I2C_controlByte 3283  
                              ?_EUSART_Write 0070                           ?_enableDischarging 0020  
                              ___fltol@sign1 007A                              __end_of___aldiv 2BE3  
                            __end_of___aodiv 2706                                        ?_atoi 0077  
                                      ?_ctoa 0030                              __end_of___fladd 07E0  
                                      ?_main 0070                                        ?_dtoa 0030  
                            __end_of___aomod 2441                I2C_writeRegister@slaveAddress 0075  
                                      ?_logf 00A8                              __end_of___fldiv 1E5C  
                            __end_of___flneg 3297                                        STR_10 38B1  
                                      STR_11 38C6                                        STR_12 38DB  
                                      STR_21 39BE                                        STR_13 3905  
                                      STR_30 39BF                                        STR_14 3919  
                                      STR_23 39C2                                        STR_15 392D  
                                      STR_16 3940                                        STR_25 39C2  
                                      STR_41 39E0                                        STR_17 3952  
                                      STR_34 39C3                                        STR_43 39E0  
                                      STR_19 39BE                                        STR_53 39CB  
                                      STR_37 39DD                                        STR_61 39C6  
                                      STR_46 39CA                                        STR_39 39DD  
                                      STR_63 39C6                                        STR_71 39E3  
                                      STR_48 39CA                                        STR_56 39E6  
                                      STR_73 39E3                                        STR_58 39E6  
                                      STR_83 39CF                                        STR_91 39D2  
                                      STR_68 39C7                                        STR_76 39CE  
                                      STR_93 39D2                                        STR_78 39CE  
                                      STR_86 39E9                                        STR_95 39BA  
                                      STR_88 39E9                              __end_of___flmul 124E  
                                      STR_97 39BA                                        ?_otoa 0030  
                            __end_of___flsub 3587                              __end_of___fltol 290C  
                                      ?_stoa 0020                                        ?_utoa 0030  
                            __end_of___lodiv 2AE4                                        ?_xtoa 0030  
                            __end_of___lomod 2975                                        _IRCF0 04CB  
                                      _IRCF1 04CC                                        _IRCF2 04CD  
                                      _IRCF3 04CE                       __size_of_read_I2C_data 0010  
                                      i1l173 001C                                 vfpfcnvrt@fmt 0059  
                               vfpfcnvrt@llu 00B3                                        _SPBRG 019B  
                         __size_of_RGB_color 0021                          ___lmul@multiplicand 0075  
                        ??_enableDischarging 0022                               __CFG_FCMEN$OFF 0000  
                            __end_of_initWDT 325A                                        _flags 0168  
                                      _errno 01C8                                        _fputc 3756  
                            __end_of_isalpha 33DF                                        _fputs 3466  
                                      _myIsr 0004                              __end_of_isdigit 32DF  
                                      atoi@n 002B                                        pad@fp 0026  
                                      atoi@s 0077                                        _width 0164  
                                      ctoa@c 0032                                        _putch 07FF  
                                      ctoa@w 0034                                        dtoa@d 0032  
                                      dtoa@i 004D                                        dtoa@n 0045  
                                      dtoa@p 003F                                        dtoa@s 0043  
                                      dtoa@w 0041                              __end_of_islower 333B  
                            __end_of_isspace 33C2                                        logf@R 0120  
                                      logf@f 015A                                        logf@k 013C  
                                      logf@s 0146                                        logf@u 0156  
                                      logf@w 014E                                        logf@x 00A8  
                                      logf@z 014A           __end_of_lookupTableSamsung_voltage 30B8  
                 _lookupTableSamsung_voltage 305C                               __CFG_BOREN$OFF 0000  
                            __end_of_isupper 3324                                        otoa@d 0032  
                                      otoa@i 0050                                        otoa@n 0048  
                                      otoa@p 0042                                        otoa@t 0044  
                                      otoa@w 0046                      enableCharging@sys_ctrl2 007B  
                                      stoa@i 002B                                        stoa@l 0033  
                                      stoa@p 0031                                        stoa@s 0022  
                                      stoa@w 002D                                        utoa@d 0032  
                                      utoa@i 0047                                        utoa@n 003F  
                                      utoa@p 003B                                        utoa@w 003D  
                                      status 0003                                        wtemp0 007E  
                                      xtoa@c 0055                                        xtoa@d 0032  
                                      xtoa@i 0053                                        xtoa@n 004B  
                                      xtoa@p 0047                                        xtoa@w 0049  
                                      xtoa@x 003A                            _SCD_delay_setting 3994  
                            __end_of_strncmp 3756                              __end_of_toupper 1022  
                           ___lodiv@dividend 0028                                 ?_internal_16 0070  
                   __size_of_coulomb_counter 00DC                                 _toupper$1903 0079  
                             __CFG_MCLRE$OFF 0000                    __end_of_enableDischarging 362B  
                            __initialization 0020                              ?_updateVoltages 0070  
                   updateTemperatures@adcVal 00E7        setTemperatureLimitsint@maxCharge_degC 0026  
                               __end_of_atoi 2D1A                                 __end_of_ctoa 34BD  
                               __end_of_main 3552                                 __end_of_dtoa 1B89  
                               __end_of_logf 05FE                                 __end_of_otoa 2613  
                               __end_of_stoa 3000                                 __end_of_utoa 2522  
                               __end_of_xtoa 1CE2                     __end_of_UV_delay_setting 3994  
                     ?_setShuntResistorValue 0071                       beginAFEcommunication@i 002D  
                      ?_send_I2C_controlByte 0071                               ??_EUSART_Write 0071  
                  _watchdog_timeout_shutdown 338B                               __CFG_LPBOR$OFF 0000  
                          _ATmega328_address 3800                                       ??_atoi 0020  
                                     ??_ctoa 0033                                       ??_main 00EE  
                                     ??_dtoa 003A                                       ??_logf 00AC  
                                     ??_otoa 003A                                       ??_stoa 007A  
                                     ??_utoa 003A                                       ??_xtoa 003B  
                __end_of_printcellParameters 36B3                               __CFG_PLLEN$OFF 0000  
                           ___lodiv@quotient 0072                                ?_readRegister 0075  
                                     ?_fputc 0071                                       STR_102 39D3  
                                     ?_fputs 007A                                       STR_111 39EC  
                                     STR_113 39DA                                       STR_106 39BB  
                                     STR_115 39DA                                       ?_myIsr 0070  
                                     STR_109 39EC                               __CFG_ZCDDIS$ON 0000  
                                     ?_putch 0070                __end_of_OCD_threshold_setting 3870  
                            ??_updateCurrent 00B1                                       _RC1REG 0199  
                  __end_of_SCD_delay_setting 399C                                vfpfcnvrt@done 00A2  
                               ??_AFE_UPDATE 007C                                       _TX1REG 019A  
                                     u440lld 238D                                       _SPLLEN 04CF  
                                     u429lld 263B                                       _SSPADD 0212  
                                     _TRISC6 0476                                       _TRISC7 0477  
                                     _SSPBUF 0211                                _read_I2C_data 2002  
                           __end_of___xxtofl 2C79                   __size_of_calibrate_BATTSOC 00C6  
                             __CFG_PWRTE$OFF 0000                            __end_of_RGB_color 341E  
                               vfprintf@cfmt 0068                                 ??_AFE_Status 007B  
                                     ___flge 29EC                                       ___lmul 34EE  
                                  ??___aldiv 0079                                    ??___aodiv 0071  
                             _minCellVoltage 01CA                                    ??___fladd 0062  
                                  ??___aomod 0071                                       ___wmul 3355  
                                     _ln2_hi 39B6                                    ??___fldiv 0048  
                                     _ln2_lo 39B2                                    ??___flneg 007A  
                             __CFG_STVREN$ON 0000                                    ??___flmul 002E  
                                  ??___flsub 007A                                    ??___fltol 00AC  
                                  ??___lodiv 0071                             __end_of_init_I2C 32C8  
                                  ??___lomod 0071                             __end_of_init_AFE 3800  
                           __end_of_init_RGB 3254                    __end_of_ATmega328_address 3802  
                      _beginAFEcommunication 2DC3                                       pad@buf 0028  
                                     ctoa@fp 0030                                       dtoa@fp 0030  
                                     _strlen 32DF                                       logf@t1 0124  
                                     logf@t2 0128                                    ??_initWDT 0071  
                                     logf@dk 0142                                       logf@ix 015E  
                                     fputc@c 0071                                       fputs@c 0022  
                                     fputs@i 0023                                       fputs@s 0025  
                                  ??_isalpha 0073                                    ??_isdigit 0073  
                         __end_of_AFE_UPDATE 3665                           __size_of__Umul8_16 001F  
                                  ??_islower 0073                                    ??_isspace 0073  
                        _updateVoltages$2146 00B4                                       otoa@fp 0030  
                             ??_readRegister 0079                                    ??_isupper 0073  
                                     stoa@cp 002F                                       stoa@fp 0020  
                                     putch@c 0070                             __end_of_vfprintf 34EE  
                                     utoa@fp 0030              ??_setCellUndervoltageProtection 0036  
                           __end_of_snprintf 338B                                       xtoa@fp 0030  
                                  ??_strncmp 0077                                    ??_toupper 0020  
                         __end_of_AFE_Status 28A6                                   ___flge@ff1 005A  
                                 ___flge@ff2 005E                                 ___xxtofl@arg 0022  
                               ___xxtofl@exp 0021                                 ___xxtofl@val 0071  
                    __end_of__initialization 0070                               ?_read_I2C_data 0071  
                                 ___flneg@f1 005A                             coulomb_counter@i 00B1  
                                 ___fltol@f1 00A8                      AFE_FET_Status@sys_ctrl2 0020  
                   ?_setTemperatureLimitsint 0020                   __size_of_enableDischarging 0037  
   setTemperatureLimitsint@minDischarge_degC 0020                               __pcstackCOMMON 0070  
                     ??_send_I2C_controlByte 0075                                 __pidataBANK3 324B  
                               __pidataBANK4 325A                                __end_of_fputc 37AA  
                              __end_of_fputs 348C                                __end_of_myIsr 001E  
                               _cellVoltages 01AA                                __end_of_putch 0800  
                          ??_coulomb_counter 006E                      __size_of_AFE_FET_Status 0026  
                                 _batCurrent 01C4                           _RGB_AWAIT_AFE_CONN 341E  
                     updateTemperatures@vtsx 00E9                  __size_of_updateTemperatures 02DA  
                                 _batVoltage 022A                          ?_RGB_AWAIT_AFE_CONN 0070  
                    __size_of_enableCharging 0037                                   _cellCharge 01A0  
                                    ??_fputc 0075                                      ??_fputs 0020  
                                    ??_myIsr 0070                                      ??_putch 0071  
          setShortCircuitProtection@delay_us 006A                                   __pbssBANK2 0162  
                                 __pbssBANK3 01A0                                   __pbssBANK4 0220  
                       __end_of_EUSART_Write 0808              setShortCircuitProtection@i_1000 00AA  
                         __size_of_init_GPIO 003B                           __size_of_initClock 0003  
                         __size_of_init_TMR1 000B                          statemachine@success 00ED  
                          __end_of__Umul8_16 07FF                                   __pmaintext 3520  
                       ??_RGB_AWAIT_AFE_CONN 0073                         __size_of_internal_16 0009  
            setShortCircuitProtection@scaler 00A0                                      ?___flge 005A  
                          ?_send_I2C_stopBit 0070                                      ?___lmul 0071  
                                    ?___wmul 0071        setTemperatureLimitsint@minCharge_degC 0024  
                            __CFG_PPS1WAY$ON 0000                   ?_setShortCircuitProtection 0066  
                                 __pintentry 0004                       ?_beginAFEcommunication 0020  
                         ??_send_I2C_stopBit 0071                               ___lmul@product 0020  
                                    ?_strlen 0071                      _shuntResistorValue_mOhm 01B8  
                                  ?___xxtofl 0071                           __size_of_vfpfcnvrt F1A4  
         __size_of_watchdog_timeout_shutdown 001B                                      _PPSLOCK 0E0F  
                     __size_of_send_I2C_NACK 0009                             ___lomod@dividend 0028  
                            ??_read_I2C_data 0073                       __size_of_send_I2C_data 0009  
                                  ?_init_I2C 0070                                    ?_init_AFE 0070  
                                  ?_init_RGB 0070         __end_of_setCellOvervoltageProtection 21AD  
      __size_of_setCellOvervoltageProtection 00D5                 _setCellOvervoltageProtection 20D8  
                           ??_updateVoltages 00B1        __end_of_setCellUndervoltageProtection 2365  
     __size_of_setCellUndervoltageProtection 00DC                _setCellUndervoltageProtection 2289  
                   readRegister@recievedData 0079                      ??_setShuntResistorValue 0075  
                    _samsung_cell_max_charge 01EA                           __size_of_vsnprintf 007D  
                       __end_of_readRegister 35BD                                      ___aldiv 2B61  
                                    _adcGain 016E                              __size_of___flge 007C  
                                    ___aodiv 2613                                      ___fladd 05FE  
                                    ___aomod 2365                                      ___fldiv 1CE2  
                                    ___flneg 328D                              __size_of___lmul 0032  
                                    ___flmul 1022                                      ___flsub 3552  
                                    ___fltol 28A6                              __size_of___wmul 001B  
                                    ___lodiv 2A68                                      ___lomod 290C  
                                  ?_vfprintf 0061                                    ?_snprintf 00CC  
                                    _cellSOC 0220                                _messageBuffer 2771  
                                    __ptext1 338B                                      __ptext2 2975  
                                    __ptext3 3665                                      __ptext4 3370  
                                    __ptext5 2AE4                                      __ptext6 34BD  
                                    __ptext7 1E5C                                      __ptext8 1B89  
                                    __ptext9 1000                            __end_of_init_GPIO 0843  
                          __end_of_initClock 2803                            __end_of_init_TMR1 32AC  
                            __size_of_strlen 0017                                    _T1CONbits 0018  
                                    _initWDT 3254                                 __size_of_abs 0017  
                               __size_of_pad 0051                                      _isalpha 33C2  
                                    _isdigit 32C8                                   ??___xxtofl 0075  
                           ___aldiv@dividend 0028                                      _islower 3324  
                                    _isspace 33A6    __end_of_setOverCurrentDischargeProtection 191E  
 __size_of_setOverCurrentDischargeProtection 0115          ??_setOverCurrentDischargeProtection 006C  
         ?_setOverCurrentDischargeProtection 0066            _setOverCurrentDischargeProtection 1809  
                                    _isupper 330D                                      atoi@neg 0024  
                                    clrloop0 32AD            __end_of_watchdog_timeout_shutdown 33A6  
                                    _strncmp 3704                                      _toupper 1000  
                       end_of_initialization 0070                                   ??_init_I2C 0071  
                                 ??_init_AFE 007B                                   ??_init_RGB 0071  
                                    fputc@fp 0073                                      fputs@fp 007A  
              ?_setCellOvervoltageProtection 0032                            _EUSART_Initialize 2D1A  
                         ?_EUSART_Initialize 0032                            __end_of_vfpfcnvrt 1000  
                              _send_I2C_NACK 327A                             ___aldiv@quotient 002E  
                 send_I2C_controlByte@RW_bit 0073                                      psplit$0 440091  
                                    psplit$1 910092                                _send_I2C_data 1800  
                                  _RGB_color 33FD                                   ??_vfprintf 0066  
                         EUSART_Initialize@x 007A                                   ??_snprintf 006C  
                                    strlen@a 0073                                      strlen@s 0071  
                             _AFE_FET_Status 3440                          ??_EUSART_Initialize 0036  
                                ___fladd@grs 006D                             __CFG_FOSC$INTOSC 0000  
                              ___xxtofl@sign 0020                                    _TRISAbits 008C  
                                  _TRISBbits 008D                                    _TRISCbits 008E  
                                  _TRISEbits 0090                        __size_of_EUSART_Write 0008  
                             _enableCharging 35BD                            __end_of_vsnprintf 2B61  
                                ___fldiv@grs 0054                                  ___fldiv@rem 004D  
               __size_of_printcellParameters 004E                __end_of_SCD_threshold_setting 3984  
                                  _RXPPSbits 0E24                            _I2C_writeRegister 33DF  
                                ___flmul@grs 0034                       _lookupTableSamsung_SOC 3000  
                  __end_of_EUSART_Initialize 2DC3                        __end_of_updateCurrent 2F3B  
                      _OCD_threshold_setting 3850                             _dschg_fet_enable 01CE  
                            _coulomb_counter 21AD                           ?_I2C_writeRegister 0075  
           beginAFEcommunication@commSuccess 002B                               ?_send_I2C_NACK 0070  
                   readRegister@slaveAddress 0075               ?_setCellUndervoltageProtection 0032  
                             ?_send_I2C_data 0071                       __end_of_AFE_FET_Status 3466  
                        ??_I2C_writeRegister 007B                                   ?_RGB_color 0071  
                             __end_of___flge 2A68                               __end_of___lmul 3520  
                                vfpfcnvrt@ap 005A                                  vfpfcnvrt@cp 00A0  
                                vfpfcnvrt@fp 0057                                  vfpfcnvrt@ll 00A8  
                             __end_of___wmul 3370                                  vfpfcnvrt@vp 00B0  
                             __end_of_ln2_hi 39BA                               __end_of_ln2_lo 39B6  
                               _EUSART_Write 0800                  I2C_writeRegister@regAddress 0077  
              setShuntResistorValue@res_mOhm 0071                       __end_of_enableCharging 35F4  
           __size_of_setTemperatureLimitsint 0044                               __end_of_strlen 32F6  
                        start_initialization 0020                              ___lodiv@divisor 0020  
                            ___lodiv@counter 007A                          _thermistorBetaValue 01EC  
                                __end_of_Lg1 39B2                                  __end_of_Lg2 39AE  
                                __end_of_Lg3 39AA                                  __end_of_Lg4 39A6  
                              ?_statemachine 0070                                  __end_of_abs 330D  
                                __end_of_pad 3704                            _minCellTempCharge 01E4  
              setCellOvervoltageProtection@i 0045                         _maxCellTempDischarge 01DE  
                       updateVoltages@adcVal 00B8                         _minCellTempDischarge 01E2  
                          pnum$text7_split_1 0091                            pnum$text7_split_2 0092  
                  __end_of_I2C_writeRegister 33FD       _setOverCurrentDischargeProtection$2145 00A4  
        setCellOvervoltageProtection@delay_s 0034         setCellUndervoltageProtection@delay_s 0034  
                          _EUSART_Write_Text 333B                        __size_of_readRegister 0036  
                         ?_EUSART_Write_Text 0072                      ??_beginAFEcommunication 0022  
                                vfprintf@fmt 0063                                     ??___flge 0062  
                                   ??___lmul 0079                                     ??___wmul 0075  
             ??_setCellOvervoltageProtection 0036          setCellOvervoltageProtection@ov_trip 0044  
                            ?_AFE_FET_Status 0070                                    __Umul8_16 07E0  
                ??_setShortCircuitProtection 006C                                  __pdataBANK3 01EA  
                                __pdataBANK4 024E                          ??_EUSART_Write_Text 0074  
              __size_of_send_I2C_controlByte 000A         setCellUndervoltageProtection@uv_trip 0044  
                 __end_of_updateTemperatures 1800                                     ??_strlen 0073  
                                  ___fladd@a 005E                                    ___fladd@b 005A  
                               vsnprintf@cnt 00C4                                 vsnprintf@fmt 00BF  
                                  ___fldiv@a 0040                                    ___fldiv@b 0044  
                                __pbssBIGRAM 2771                              ?_enableCharging 0020  
                       enableCharging@enable 0020                                    _adcOffset 016A  
                                  ___flmul@a 002A                                    ___flmul@b 0026  
                                __pbssCOMMON 007C                                    ___flsub@a 00A0  
                                  ___flsub@b 00A4                               ??_statemachine 00EB  
                                  ___latbits 0003             send_I2C_controlByte@BlockAddress 0071  
                                 myIsr@count 01E6                                __pcstackBANK0 0020  
                              __pcstackBANK1 00A0                                __pcstackBANK2 0120  
                           ___aodiv@dividend 0028                    __size_of_send_I2C_stopBit 0008  
                                snprintf@fmt 00D0                            __size_of___xxtofl 0096  
                               _readRegister 3587                      __end_of_coulomb_counter 2289  
   setTemperatureLimitsint@maxDischarge_degC 0022                        updateTemperatures@tmp 00E3  
                  __end_of_EUSART_Write_Text 3355                           calibrate_BATTSOC@i 00B6  
                         calibrate_BATTSOC@j 00B8                   __size_of_EUSART_Initialize 00A9  
                              ??_internal_16 0071                                    _atoi$1770 0028  
                                  _atoi$1768 0026                                    _atoi$1769 002A  
                           _OV_delay_setting 3984                            __size_of_init_I2C 0010  
                      I2C_writeRegister@data 0079                              ??_send_I2C_NACK 0071  
                          __size_of_init_AFE 0056                            __size_of_init_RGB 0005  
                          _send_I2C_startBit 3261                                    _dtoa$1317 003D  
                            ??_send_I2C_data 0073                  __size_of_RGB_AWAIT_AFE_CONN 0022  
                                _alert_error 01DA               __size_of_setShuntResistorValue 000A  
                                   ?___aldiv 0024                                     ?___aodiv 0020  
                         ?_send_I2C_startBit 0070                                     ?___fladd 005A  
              __end_of_setShuntResistorValue 32A1                                     ?___aomod 0020  
                                   ?___fldiv 0040                                     ?___flneg 005A  
                           ___aodiv@quotient 0074                                     ?___flmul 0026  
                       AFE_Status@error_flag 0022                                     ?___flsub 00A0  
                                   ?___fltol 00A8                                     ?___lodiv 0020  
                                   ?___lomod 0020                                  ??_RGB_color 0073  
                                 ?__Umul8_16 0071                    EUSART_Initialize@baudrate 0032  
                                  _logf$2160 0130                                    _logf$2161 0134  
                                  _logf$2162 0138                                    _logf$2158 0152  
                                  _logf$2159 012C                            __size_of_vfprintf 0031  
                        ??_send_I2C_startBit 0071                            __size_of_snprintf 001B  
                            ___lomod@divisor 0020                                     ?_initWDT 0070  
                            ___lomod@counter 0072                                     ?_isalpha 0071  
                                   ?_isdigit 0071                                    _ocd_error 01D2  
                                   ?_islower 0071                                     ?_isspace 0071  
                                  _init_GPIO 0808                                     ?_isupper 0071  
                                  _initClock 2800                                    _init_TMR1 32A1  
                                  _currState 01E9                    _setShortCircuitProtection 191E  
                 __size_of_I2C_writeRegister 001E                               __size_of_fputc 0054  
                             __size_of_fputs 0026                               __size_of_myIsr 001A  
                                   ?_strncmp 0071                                     ?_toupper 0077  
                             __size_of_putch 0001                                    _scd_error 01D4  
                            ___aldiv@divisor 0024                        __end_of_read_I2C_data 2012  
                            ___aldiv@counter 002C                               ___wmul@product 0075  
                                   _LATAbits 010C                                     _LATEbits 0110  
                  __end_of_send_I2C_startBit 3269                                    clear_ram0 32AC  
                                  _tmr1_flag 01E7                                     _PIE1bits 0091  
         setOverCurrentDischargeProtection@i 00A8                                     _PIR1bits 0011  
                 setShortCircuitProtection@i 00A8                          __end_of_internal_16 327A  
                        _printcellParameters 3665                                    _vfpfcnvrt 1E5C  
                                  _xtoa$1353 0043                                    _xtoa$1354 0045  
                          ___wmul@multiplier 0071                      _setTemperatureLimitsint 2803  
                                 ?_init_GPIO 0070                                   ?_initClock 0070  
                                 ?_init_TMR1 0070                        send_I2C_data@databyte 0071  
                               _isspace$1795 0075                                   vfpfcnvrt@c 00B2  
                          ___lmul@multiplier 0071                         ?_printcellParameters 0070  
                           ?_coulomb_counter 0070                        _temperatureThermistor 01C0  
                 __size_of_EUSART_Write_Text 001A                   ?_watchdog_timeout_shutdown 0070  
                                  _vsnprintf 2AE4                                     _XR_error 01DC  
                                 _AFE_UPDATE 362B                            _OCD_delay_setting 3964  
                       __end_of_statemachine 29EC                                   vfprintf@ap 0065  
                                 vfprintf@fp 0061                                   _AFE_Status 2847  
                                ??__Umul8_16 0073                             __size_of___aldiv 0082  
                           __size_of___aodiv 00F3                             __size_of___fladd 01E2  
                    __size_of_updateVoltages 02D8                             __size_of___aomod 00DC  
                           __size_of___fldiv 017A                             __size_of___flneg 000A  
             _setShortCircuitProtection$2144 00A4                                  vsnprintf@ap 00C1  
                           __size_of___flmul 022C                             __size_of___flsub 0035  
                           __size_of___fltol 0066                       readRegister@regAddress 0077  
                           __size_of___lodiv 007C                             __size_of___lomod 0069  
                                 ?_vfpfcnvrt 0057                                   snprintf@ap 006F  
                            ___aodiv@divisor 0020                              ___aodiv@counter 0072  
                                 _ANSELBbits 018D                                   _ANSELCbits 018E  
                                   ___xxtofl 2BE3  setOverCurrentDischargeProtection@current_mA 0066  
                           __size_of_initWDT 0006                             __size_of_isalpha 001D  
                           __size_of_isdigit 0017               __end_of_lookupTableSamsung_SOC 305C  
                           _send_I2C_stopBit 3269                             __size_of_islower 0017  
                           __size_of_isspace 001C                                     __ptext10 3324  
                                   __ptext11 330D                                     __ptext20 32F6  
                                   __ptext12 33C2                                     __ptext21 2365  
                                   __ptext13 2441                                     __ptext30 33A6  
                                   __ptext22 2613                                     __ptext14 290C  
                                   __ptext31 32C8                                     __ptext23 348C  
                                   __ptext15 2A68                                     __ptext40 29EC  
                                   __ptext32 333B                                     __ptext24 36B3  
                                   __ptext16 3704                                     __ptext41 2289  
                                   __ptext33 0800                                     __ptext25 32DF  
                                   __ptext17 2F3B                                     __ptext50 0074  
                                   __ptext42 20D8                                     __ptext34 37AA  
                                   __ptext26 3466                                     __ptext18 2522  
                                   __ptext51 2E77                                     __ptext43 2DC3  
                                   __ptext35 2803                                     __ptext27 3756  
                                   __ptext19 1A36                                     __ptext60 2BE3  
                                   __ptext52 328D                                     __ptext44 341E  
                                   __ptext36 3355                                     __ptext28 07FF  
                                   __ptext61 28A6                                     __ptext53 35F4  
                                   __ptext45 33FD                                     __ptext37 3297  
                                   __ptext29 2C79                                     __ptext70 1800  
                                   __ptext62 1022                                     __ptext54 35BD  
                                   __ptext46 362B                                     __ptext38 191E  
                                   __ptext71 3283                                     __ptext63 07E0  
                                   __ptext55 33DF                                     __ptext47 124E  
                                   __ptext39 1809                                     __ptext80 3271  
                                   __ptext72 327A                                     __ptext64 1CE2  
                                   __ptext56 21AD                                     __ptext48 34EE  
                                   __ptext81 2D1A                                     __ptext73 2002  
                                   __ptext65 2847                                     __ptext57 3552  
                                   __ptext49 1526                                     __ptext82 2B61  
                                   __ptext74 32A1                                     __ptext66 3440  
                                   __ptext58 05FE                                     __ptext75 324F  
                                   __ptext67 3587                                     __ptext59 2012  
                                   __ptext76 32B8                                     __ptext68 3269  
                                   __ptext77 0808                                     __ptext69 3261  
                                   __ptext78 3254                                     __ptext79 2800  
                           __size_of_isupper 0017                        ??_printcellParameters 007C  
             setCellUndervoltageProtection@i 0045                    __end_of_OCD_delay_setting 3974  
                           __size_of_strncmp 0052                             __size_of_toupper 0022  
                                 ?_vsnprintf 00BB                          updateCurrent@adcVal 00B5  
                                   _init_I2C 32B8                                     _init_AFE 37AA  
                                   _init_RGB 324F                                __size_of_atoi 00A1  
                              __size_of_ctoa 0031                                __size_of_main 0032  
                              __size_of_dtoa 0153                                _SSPDATPPSbits 0E21  
                                  pnum$text7 0044                                __size_of_logf 058A  
                              __size_of_otoa 00F1                        _SCD_threshold_setting 3974  
                              __size_of_stoa 00C5                                __size_of_utoa 00E1  
                 __size_of_send_I2C_startBit 0008                                __size_of_xtoa 0159  
                                _internal_16 3271                             ??_AFE_FET_Status 007B  
                                 _RB2PPSbits 0E9A                                   _RC1STAbits 019D  
                                  stoa@F1152 024E                                     _ov_error 01D6  
                                 _RC4PPSbits 0EA4               __size_of_beginAFEcommunication 00B4  
                              _SSPCLKPPSbits 0E20                __end_of_beginAFEcommunication 2E77  
                                   int$flags 007E                                   _RC5PPSbits 0EA5  
                                   _protect1 016D                                     _protect2 016C  
                                   _protect3 01E8                    ??_setTemperatureLimitsint 0077  
                                   _vfprintf 34BD                             ??_enableCharging 0022  
                                   _snprintf 3370                                     _uv_error 01D8  
                           ___aomod@dividend 0028                                     logf@F469 01B4  
                     __size_of_updateCurrent 00C4    setOverCurrentDischargeProtection@delay_ms 006A  
                   __end_of_OV_delay_setting 398C                               _vfpfcnvrt$1368 00A4  
                             _vfpfcnvrt$1369 00A6                                   _INTCONbits 000B  
                                ??_init_GPIO 0071                                  ??_initClock 0071  
                                ??_init_TMR1 0071                                     logf@hfsq 013E  
                             __pstringtext10 39A6                               __pstringtext11 39AA  
                             __pstringtext20 38B1                               __pstringtext12 39AE  
                             __pstringtext21 38C6                               __pstringtext13 39B2  
                             __pstringtext30 39BA                               __pstringtext22 38DB  
                             __pstringtext14 39B6                               __pstringtext31 39BE  
                             __pstringtext23 38F0                               __pstringtext15 3800  
                             __pstringtext40 39E0                               __pstringtext32 39C2  
                             __pstringtext24 3905                               __pstringtext16 382A  
                             __pstringtext41 39E3                               __pstringtext33 39C6  
                             __pstringtext25 3919                               __pstringtext17 3870  
                             __pstringtext42 39E6                               __pstringtext34 39CA  
                             __pstringtext26 392D                               __pstringtext18 3886  
                             __pstringtext43 39E9                               __pstringtext35 39CE  
                             __pstringtext27 3940                               __pstringtext19 389C  
                             __pstringtext44 39EC                               __pstringtext36 39D2  
                             __pstringtext28 3952                               __pstringtext45 0000  
                             __pstringtext37 39D6                               __pstringtext29 399C  
                             __pstringtext38 39DA                               __pstringtext39 39DD  
                                   isalpha@c 0071                                     isdigit@c 0071  
                                 vsnprintf@f 00C6                                   vsnprintf@n 00BD  
                                 vsnprintf@s 00BB                           _updateTemperatures 1526  
                           _UV_delay_setting 398C                                    snprintf@n 00CE  
                                  snprintf@s 00CC                 __end_of_send_I2C_controlByte 328D  
                                   intlevel1 0000          setShortCircuitProtection@current_mA 0066  
                                   islower@c 0071                                  ?_AFE_UPDATE 0070  
                                   isspace@c 0071                          ?_updateTemperatures 0070  
                          __CFG_CLKOUTEN$OFF 0000                                  _PPSLOCKbits 0E0F  
                                   isupper@c 0071           __size_of_setShortCircuitProtection 0118  
                                  strncmp@_l 0071                                    strncmp@_r 0073  
                                ?_AFE_Status 0020                            _maxCellTempCharge 01E0  
                            ___aomod@divisor 0020                                  ??_vfpfcnvrt 005B  
                                   stoa@nuls 0024                              ___aomod@counter 0072  
                              __pstringtext1 3000                                __pstringtext2 305C  
                              __pstringtext3 3850                                __pstringtext4 3964  
                              __pstringtext5 3974                                __pstringtext6 3984  
                              __pstringtext7 398C                                __pstringtext8 3994  
                              __pstringtext9 39A2                           AFE_Status@sys_stat 0024  
                       ??_updateTemperatures 00B4                       __Umul8_16@multiplicand 0071  
                             _vsnprintf$1940 00C2      setOverCurrentDischargeProtection@i_1009 00AA  
                                   strncmp@l 0078                                     strncmp@n 0075  
                                   strncmp@r 007A                                     toupper@c 0077  
                      EUSART_Write_Text@text 0072                                 ___aldiv@sign 002D  
                                _SSPCON2bits 0216                                   _WDTCONbits 0097  
                              ___fladd@signs 006A              __end_of_setTemperatureLimitsint 2847  
                         EUSART_Write@txData 0071                                 ___aodiv@sign 0073  
    setOverCurrentDischargeProtection@scaler 00A0                                  ??_vsnprintf 006A  
                    _updateTemperatures$2150 00C3                      _updateTemperatures$2151 00C7  
                    _updateTemperatures$2152 00CB                      _updateTemperatures$2153 00CF  
                    _updateTemperatures$2154 00D3                      _updateTemperatures$2155 00D7  
                    _updateTemperatures$2147 00B7                      _updateTemperatures$2156 00DB  
                    _updateTemperatures$2148 00BB                      _updateTemperatures$2157 00DF  
                    _updateTemperatures$2149 00BF                                 ___fladd@aexp 006B  
                               ___fladd@bexp 006C                        __size_of_statemachine 0077  
                                 _STATUSbits 0003                                  _toggleColor 007C  
                       __Umul8_16@multiplier 0079                                _updateCurrent 2E77  
                                 _SSPCONbits 0215                   __end_of_RGB_AWAIT_AFE_CONN 3440  
                               ___aomod@sign 0073                           EUSART_Write_Text@i 0075  
                      __end_of_send_I2C_NACK 3283                            __Umul8_16@product 0075  
                          _calibrate_BATTSOC 2012  
