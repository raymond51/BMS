

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Dec 19 22:47:19 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F1719
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	cinit,global,class=CODE,merge=1,delta=2
    33                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    35                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    36                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    37                           	psect	clrtext,global,class=CODE,delta=2
    38                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    39                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    40                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    41                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    42                           	psect	text1,local,class=CODE,merge=1,delta=2
    43                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    45                           	psect	text4,local,class=CODE,merge=1,delta=2
    46                           	psect	text5,local,class=CODE,merge=1,delta=2
    47                           	psect	text6,local,class=CODE,merge=1,delta=2
    48                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    50                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text11,local,class=CODE,merge=1,delta=2
    53                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text15,local,class=CODE,merge=1,delta=2
    57                           	psect	text16,local,class=CODE,merge=1,delta=2
    58                           	psect	text17,local,class=CODE,merge=1,delta=2
    59                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text21,local,class=CODE,merge=1,delta=2
    63                           	psect	text22,local,class=CODE,merge=1,delta=2
    64                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text31,local,class=CODE,merge=1,delta=2
    73                           	psect	text32,local,class=CODE,merge=1,delta=2
    74                           	psect	text33,local,class=CODE,merge=1,delta=2
    75                           	psect	text34,local,class=CODE,merge=1,delta=2
    76                           	psect	text35,local,class=CODE,merge=1,delta=2
    77                           	psect	text36,local,class=CODE,merge=1,delta=2
    78                           	psect	text37,local,class=CODE,merge=1,delta=2
    79                           	psect	text38,local,class=CODE,merge=1,delta=2
    80                           	psect	text39,local,class=CODE,merge=1,delta=2
    81                           	psect	text40,local,class=CODE,merge=1,delta=2
    82                           	psect	text41,local,class=CODE,merge=1,delta=2
    83                           	psect	text42,local,class=CODE,merge=1,delta=2
    84                           	psect	text43,local,class=CODE,merge=1,delta=2
    85                           	psect	text44,local,class=CODE,merge=1,delta=2
    86                           	psect	text45,local,class=CODE,merge=1,delta=2
    87                           	psect	text46,local,class=CODE,merge=1,delta=2
    88                           	psect	text47,local,class=CODE,merge=1,delta=2
    89                           	psect	text48,local,class=CODE,merge=1,delta=2
    90                           	psect	text49,local,class=CODE,merge=1,delta=2
    91                           	psect	text50,local,class=CODE,merge=1,delta=2
    92                           	psect	text51,local,class=CODE,merge=1,delta=2
    93                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    94                           	psect	intentry,global,class=CODE,delta=2
    95                           	psect	text5_split_1,local,class=CODE,merge=1,delta=2
    96                           	psect	text5_split_2,local,class=CODE,merge=1,delta=2
    97                           	dabs	1,0xCA0,32
    98                           	dabs	1,0xC20,80
    99                           	dabs	1,0xBE1,15
   100                           	dabs	1,0x2771,0,_messageBuffer
   101                           	dabs	1,0x7E,2
   102  0000                     
   103                           ; Version 2.05
   104                           ; Generated 20/12/2018 GMT
   105                           ; 
   106                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   107                           ; All rights reserved.
   108                           ; 
   109                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   110                           ; 
   111                           ; Redistribution and use in source and binary forms, with or without modification, are
   112                           ; permitted provided that the following conditions are met:
   113                           ; 
   114                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   115                           ;        conditions and the following disclaimer.
   116                           ; 
   117                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   118                           ;        of conditions and the following disclaimer in the documentation and/or other
   119                           ;        materials provided with the distribution.
   120                           ; 
   121                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   122                           ;        software without specific prior written permission.
   123                           ; 
   124                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   125                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   126                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   127                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   128                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   129                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   130                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   131                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   132                           ; 
   133                           ; 
   134                           ; Code-generator required, PIC16F1719 Definitions
   135                           ; 
   136                           ; SFR Addresses
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009A                     	;# 
   180  009B                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  0110                     	;# 
   191  0111                     	;# 
   192  0112                     	;# 
   193  0113                     	;# 
   194  0114                     	;# 
   195  0115                     	;# 
   196  0116                     	;# 
   197  0117                     	;# 
   198  0118                     	;# 
   199  0119                     	;# 
   200  011A                     	;# 
   201  011B                     	;# 
   202  011B                     	;# 
   203  011C                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  018E                     	;# 
   207  018F                     	;# 
   208  0190                     	;# 
   209  0191                     	;# 
   210  0191                     	;# 
   211  0192                     	;# 
   212  0193                     	;# 
   213  0193                     	;# 
   214  0194                     	;# 
   215  0195                     	;# 
   216  0196                     	;# 
   217  0197                     	;# 
   218  0199                     	;# 
   219  0199                     	;# 
   220  0199                     	;# 
   221  019A                     	;# 
   222  019A                     	;# 
   223  019A                     	;# 
   224  019B                     	;# 
   225  019B                     	;# 
   226  019B                     	;# 
   227  019B                     	;# 
   228  019B                     	;# 
   229  019C                     	;# 
   230  019C                     	;# 
   231  019C                     	;# 
   232  019D                     	;# 
   233  019D                     	;# 
   234  019D                     	;# 
   235  019E                     	;# 
   236  019E                     	;# 
   237  019E                     	;# 
   238  019F                     	;# 
   239  019F                     	;# 
   240  019F                     	;# 
   241  019F                     	;# 
   242  019F                     	;# 
   243  020C                     	;# 
   244  020D                     	;# 
   245  020E                     	;# 
   246  020F                     	;# 
   247  0210                     	;# 
   248  0211                     	;# 
   249  0211                     	;# 
   250  0212                     	;# 
   251  0212                     	;# 
   252  0213                     	;# 
   253  0213                     	;# 
   254  0214                     	;# 
   255  0214                     	;# 
   256  0215                     	;# 
   257  0215                     	;# 
   258  0215                     	;# 
   259  0215                     	;# 
   260  0216                     	;# 
   261  0216                     	;# 
   262  0217                     	;# 
   263  0217                     	;# 
   264  028C                     	;# 
   265  028D                     	;# 
   266  028E                     	;# 
   267  028F                     	;# 
   268  0290                     	;# 
   269  0291                     	;# 
   270  0291                     	;# 
   271  0292                     	;# 
   272  0293                     	;# 
   273  0293                     	;# 
   274  0298                     	;# 
   275  0298                     	;# 
   276  0299                     	;# 
   277  029A                     	;# 
   278  029A                     	;# 
   279  029E                     	;# 
   280  030C                     	;# 
   281  030D                     	;# 
   282  030E                     	;# 
   283  030F                     	;# 
   284  0310                     	;# 
   285  038C                     	;# 
   286  038D                     	;# 
   287  038E                     	;# 
   288  038F                     	;# 
   289  0390                     	;# 
   290  0391                     	;# 
   291  0392                     	;# 
   292  0393                     	;# 
   293  0394                     	;# 
   294  0395                     	;# 
   295  0396                     	;# 
   296  0397                     	;# 
   297  0398                     	;# 
   298  0399                     	;# 
   299  039D                     	;# 
   300  039E                     	;# 
   301  039F                     	;# 
   302  0415                     	;# 
   303  0416                     	;# 
   304  0417                     	;# 
   305  041C                     	;# 
   306  041D                     	;# 
   307  041E                     	;# 
   308  0498                     	;# 
   309  0498                     	;# 
   310  0499                     	;# 
   311  049A                     	;# 
   312  049B                     	;# 
   313  049B                     	;# 
   314  049C                     	;# 
   315  049D                     	;# 
   316  049E                     	;# 
   317  049F                     	;# 
   318  0511                     	;# 
   319  0515                     	;# 
   320  0617                     	;# 
   321  0618                     	;# 
   322  0619                     	;# 
   323  0619                     	;# 
   324  061A                     	;# 
   325  061B                     	;# 
   326  061C                     	;# 
   327  061C                     	;# 
   328  0691                     	;# 
   329  0692                     	;# 
   330  0693                     	;# 
   331  0694                     	;# 
   332  0695                     	;# 
   333  0696                     	;# 
   334  0697                     	;# 
   335  0698                     	;# 
   336  0699                     	;# 
   337  069A                     	;# 
   338  069B                     	;# 
   339  069C                     	;# 
   340  069D                     	;# 
   341  069E                     	;# 
   342  069F                     	;# 
   343  0E0F                     	;# 
   344  0E10                     	;# 
   345  0E11                     	;# 
   346  0E12                     	;# 
   347  0E13                     	;# 
   348  0E14                     	;# 
   349  0E15                     	;# 
   350  0E17                     	;# 
   351  0E20                     	;# 
   352  0E21                     	;# 
   353  0E22                     	;# 
   354  0E24                     	;# 
   355  0E25                     	;# 
   356  0E28                     	;# 
   357  0E29                     	;# 
   358  0E2A                     	;# 
   359  0E2B                     	;# 
   360  0E90                     	;# 
   361  0E91                     	;# 
   362  0E92                     	;# 
   363  0E93                     	;# 
   364  0E94                     	;# 
   365  0E95                     	;# 
   366  0E96                     	;# 
   367  0E97                     	;# 
   368  0E98                     	;# 
   369  0E99                     	;# 
   370  0E9A                     	;# 
   371  0E9B                     	;# 
   372  0E9C                     	;# 
   373  0E9D                     	;# 
   374  0E9E                     	;# 
   375  0E9F                     	;# 
   376  0EA0                     	;# 
   377  0EA1                     	;# 
   378  0EA2                     	;# 
   379  0EA3                     	;# 
   380  0EA4                     	;# 
   381  0EA5                     	;# 
   382  0EA6                     	;# 
   383  0EA7                     	;# 
   384  0EA8                     	;# 
   385  0EA9                     	;# 
   386  0EAA                     	;# 
   387  0EAB                     	;# 
   388  0EAC                     	;# 
   389  0EAD                     	;# 
   390  0EAE                     	;# 
   391  0EAF                     	;# 
   392  0EB0                     	;# 
   393  0EB1                     	;# 
   394  0EB2                     	;# 
   395  0F0F                     	;# 
   396  0F10                     	;# 
   397  0F11                     	;# 
   398  0F12                     	;# 
   399  0F13                     	;# 
   400  0F14                     	;# 
   401  0F15                     	;# 
   402  0F16                     	;# 
   403  0F17                     	;# 
   404  0F18                     	;# 
   405  0F19                     	;# 
   406  0F1A                     	;# 
   407  0F1B                     	;# 
   408  0F1C                     	;# 
   409  0F1D                     	;# 
   410  0F1E                     	;# 
   411  0F1F                     	;# 
   412  0F20                     	;# 
   413  0F21                     	;# 
   414  0F22                     	;# 
   415  0F23                     	;# 
   416  0F24                     	;# 
   417  0F25                     	;# 
   418  0F26                     	;# 
   419  0F27                     	;# 
   420  0F28                     	;# 
   421  0F29                     	;# 
   422  0F2A                     	;# 
   423  0F2B                     	;# 
   424  0F2C                     	;# 
   425  0F2D                     	;# 
   426  0F2E                     	;# 
   427  0F2F                     	;# 
   428  0F30                     	;# 
   429  0F31                     	;# 
   430  0F32                     	;# 
   431  0F33                     	;# 
   432  0F34                     	;# 
   433  0F35                     	;# 
   434  0F36                     	;# 
   435  0F37                     	;# 
   436  0FE4                     	;# 
   437  0FE5                     	;# 
   438  0FE6                     	;# 
   439  0FE7                     	;# 
   440  0FE8                     	;# 
   441  0FE9                     	;# 
   442  0FEA                     	;# 
   443  0FEB                     	;# 
   444  0FED                     	;# 
   445  0FEE                     	;# 
   446  0FEF                     	;# 
   447  0000                     	;# 
   448  0001                     	;# 
   449  0002                     	;# 
   450  0003                     	;# 
   451  0004                     	;# 
   452  0005                     	;# 
   453  0006                     	;# 
   454  0007                     	;# 
   455  0008                     	;# 
   456  0009                     	;# 
   457  000A                     	;# 
   458  000B                     	;# 
   459  000C                     	;# 
   460  000D                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0016                     	;# 
   470  0017                     	;# 
   471  0018                     	;# 
   472  0019                     	;# 
   473  001A                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  008C                     	;# 
   477  008D                     	;# 
   478  008E                     	;# 
   479  008F                     	;# 
   480  0090                     	;# 
   481  0091                     	;# 
   482  0092                     	;# 
   483  0093                     	;# 
   484  0095                     	;# 
   485  0096                     	;# 
   486  0097                     	;# 
   487  0098                     	;# 
   488  0099                     	;# 
   489  009A                     	;# 
   490  009B                     	;# 
   491  009B                     	;# 
   492  009C                     	;# 
   493  009D                     	;# 
   494  009E                     	;# 
   495  009F                     	;# 
   496  010C                     	;# 
   497  010D                     	;# 
   498  010E                     	;# 
   499  010F                     	;# 
   500  0110                     	;# 
   501  0111                     	;# 
   502  0112                     	;# 
   503  0113                     	;# 
   504  0114                     	;# 
   505  0115                     	;# 
   506  0116                     	;# 
   507  0117                     	;# 
   508  0118                     	;# 
   509  0119                     	;# 
   510  011A                     	;# 
   511  011B                     	;# 
   512  011B                     	;# 
   513  011C                     	;# 
   514  018C                     	;# 
   515  018D                     	;# 
   516  018E                     	;# 
   517  018F                     	;# 
   518  0190                     	;# 
   519  0191                     	;# 
   520  0191                     	;# 
   521  0192                     	;# 
   522  0193                     	;# 
   523  0193                     	;# 
   524  0194                     	;# 
   525  0195                     	;# 
   526  0196                     	;# 
   527  0197                     	;# 
   528  0199                     	;# 
   529  0199                     	;# 
   530  0199                     	;# 
   531  019A                     	;# 
   532  019A                     	;# 
   533  019A                     	;# 
   534  019B                     	;# 
   535  019B                     	;# 
   536  019B                     	;# 
   537  019B                     	;# 
   538  019B                     	;# 
   539  019C                     	;# 
   540  019C                     	;# 
   541  019C                     	;# 
   542  019D                     	;# 
   543  019D                     	;# 
   544  019D                     	;# 
   545  019E                     	;# 
   546  019E                     	;# 
   547  019E                     	;# 
   548  019F                     	;# 
   549  019F                     	;# 
   550  019F                     	;# 
   551  019F                     	;# 
   552  019F                     	;# 
   553  020C                     	;# 
   554  020D                     	;# 
   555  020E                     	;# 
   556  020F                     	;# 
   557  0210                     	;# 
   558  0211                     	;# 
   559  0211                     	;# 
   560  0212                     	;# 
   561  0212                     	;# 
   562  0213                     	;# 
   563  0213                     	;# 
   564  0214                     	;# 
   565  0214                     	;# 
   566  0215                     	;# 
   567  0215                     	;# 
   568  0215                     	;# 
   569  0215                     	;# 
   570  0216                     	;# 
   571  0216                     	;# 
   572  0217                     	;# 
   573  0217                     	;# 
   574  028C                     	;# 
   575  028D                     	;# 
   576  028E                     	;# 
   577  028F                     	;# 
   578  0290                     	;# 
   579  0291                     	;# 
   580  0291                     	;# 
   581  0292                     	;# 
   582  0293                     	;# 
   583  0293                     	;# 
   584  0298                     	;# 
   585  0298                     	;# 
   586  0299                     	;# 
   587  029A                     	;# 
   588  029A                     	;# 
   589  029E                     	;# 
   590  030C                     	;# 
   591  030D                     	;# 
   592  030E                     	;# 
   593  030F                     	;# 
   594  0310                     	;# 
   595  038C                     	;# 
   596  038D                     	;# 
   597  038E                     	;# 
   598  038F                     	;# 
   599  0390                     	;# 
   600  0391                     	;# 
   601  0392                     	;# 
   602  0393                     	;# 
   603  0394                     	;# 
   604  0395                     	;# 
   605  0396                     	;# 
   606  0397                     	;# 
   607  0398                     	;# 
   608  0399                     	;# 
   609  039D                     	;# 
   610  039E                     	;# 
   611  039F                     	;# 
   612  0415                     	;# 
   613  0416                     	;# 
   614  0417                     	;# 
   615  041C                     	;# 
   616  041D                     	;# 
   617  041E                     	;# 
   618  0498                     	;# 
   619  0498                     	;# 
   620  0499                     	;# 
   621  049A                     	;# 
   622  049B                     	;# 
   623  049B                     	;# 
   624  049C                     	;# 
   625  049D                     	;# 
   626  049E                     	;# 
   627  049F                     	;# 
   628  0511                     	;# 
   629  0515                     	;# 
   630  0617                     	;# 
   631  0618                     	;# 
   632  0619                     	;# 
   633  0619                     	;# 
   634  061A                     	;# 
   635  061B                     	;# 
   636  061C                     	;# 
   637  061C                     	;# 
   638  0691                     	;# 
   639  0692                     	;# 
   640  0693                     	;# 
   641  0694                     	;# 
   642  0695                     	;# 
   643  0696                     	;# 
   644  0697                     	;# 
   645  0698                     	;# 
   646  0699                     	;# 
   647  069A                     	;# 
   648  069B                     	;# 
   649  069C                     	;# 
   650  069D                     	;# 
   651  069E                     	;# 
   652  069F                     	;# 
   653  0E0F                     	;# 
   654  0E10                     	;# 
   655  0E11                     	;# 
   656  0E12                     	;# 
   657  0E13                     	;# 
   658  0E14                     	;# 
   659  0E15                     	;# 
   660  0E17                     	;# 
   661  0E20                     	;# 
   662  0E21                     	;# 
   663  0E22                     	;# 
   664  0E24                     	;# 
   665  0E25                     	;# 
   666  0E28                     	;# 
   667  0E29                     	;# 
   668  0E2A                     	;# 
   669  0E2B                     	;# 
   670  0E90                     	;# 
   671  0E91                     	;# 
   672  0E92                     	;# 
   673  0E93                     	;# 
   674  0E94                     	;# 
   675  0E95                     	;# 
   676  0E96                     	;# 
   677  0E97                     	;# 
   678  0E98                     	;# 
   679  0E99                     	;# 
   680  0E9A                     	;# 
   681  0E9B                     	;# 
   682  0E9C                     	;# 
   683  0E9D                     	;# 
   684  0E9E                     	;# 
   685  0E9F                     	;# 
   686  0EA0                     	;# 
   687  0EA1                     	;# 
   688  0EA2                     	;# 
   689  0EA3                     	;# 
   690  0EA4                     	;# 
   691  0EA5                     	;# 
   692  0EA6                     	;# 
   693  0EA7                     	;# 
   694  0EA8                     	;# 
   695  0EA9                     	;# 
   696  0EAA                     	;# 
   697  0EAB                     	;# 
   698  0EAC                     	;# 
   699  0EAD                     	;# 
   700  0EAE                     	;# 
   701  0EAF                     	;# 
   702  0EB0                     	;# 
   703  0EB1                     	;# 
   704  0EB2                     	;# 
   705  0F0F                     	;# 
   706  0F10                     	;# 
   707  0F11                     	;# 
   708  0F12                     	;# 
   709  0F13                     	;# 
   710  0F14                     	;# 
   711  0F15                     	;# 
   712  0F16                     	;# 
   713  0F17                     	;# 
   714  0F18                     	;# 
   715  0F19                     	;# 
   716  0F1A                     	;# 
   717  0F1B                     	;# 
   718  0F1C                     	;# 
   719  0F1D                     	;# 
   720  0F1E                     	;# 
   721  0F1F                     	;# 
   722  0F20                     	;# 
   723  0F21                     	;# 
   724  0F22                     	;# 
   725  0F23                     	;# 
   726  0F24                     	;# 
   727  0F25                     	;# 
   728  0F26                     	;# 
   729  0F27                     	;# 
   730  0F28                     	;# 
   731  0F29                     	;# 
   732  0F2A                     	;# 
   733  0F2B                     	;# 
   734  0F2C                     	;# 
   735  0F2D                     	;# 
   736  0F2E                     	;# 
   737  0F2F                     	;# 
   738  0F30                     	;# 
   739  0F31                     	;# 
   740  0F32                     	;# 
   741  0F33                     	;# 
   742  0F34                     	;# 
   743  0F35                     	;# 
   744  0F36                     	;# 
   745  0F37                     	;# 
   746  0FE4                     	;# 
   747  0FE5                     	;# 
   748  0FE6                     	;# 
   749  0FE7                     	;# 
   750  0FE8                     	;# 
   751  0FE9                     	;# 
   752  0FEA                     	;# 
   753  0FEB                     	;# 
   754  0FED                     	;# 
   755  0FEE                     	;# 
   756  0FEF                     	;# 
   757  0000                     	;# 
   758  0001                     	;# 
   759  0002                     	;# 
   760  0003                     	;# 
   761  0004                     	;# 
   762  0005                     	;# 
   763  0006                     	;# 
   764  0007                     	;# 
   765  0008                     	;# 
   766  0009                     	;# 
   767  000A                     	;# 
   768  000B                     	;# 
   769  000C                     	;# 
   770  000D                     	;# 
   771  000E                     	;# 
   772  000F                     	;# 
   773  0010                     	;# 
   774  0011                     	;# 
   775  0012                     	;# 
   776  0013                     	;# 
   777  0015                     	;# 
   778  0016                     	;# 
   779  0016                     	;# 
   780  0017                     	;# 
   781  0018                     	;# 
   782  0019                     	;# 
   783  001A                     	;# 
   784  001B                     	;# 
   785  001C                     	;# 
   786  008C                     	;# 
   787  008D                     	;# 
   788  008E                     	;# 
   789  008F                     	;# 
   790  0090                     	;# 
   791  0091                     	;# 
   792  0092                     	;# 
   793  0093                     	;# 
   794  0095                     	;# 
   795  0096                     	;# 
   796  0097                     	;# 
   797  0098                     	;# 
   798  0099                     	;# 
   799  009A                     	;# 
   800  009B                     	;# 
   801  009B                     	;# 
   802  009C                     	;# 
   803  009D                     	;# 
   804  009E                     	;# 
   805  009F                     	;# 
   806  010C                     	;# 
   807  010D                     	;# 
   808  010E                     	;# 
   809  010F                     	;# 
   810  0110                     	;# 
   811  0111                     	;# 
   812  0112                     	;# 
   813  0113                     	;# 
   814  0114                     	;# 
   815  0115                     	;# 
   816  0116                     	;# 
   817  0117                     	;# 
   818  0118                     	;# 
   819  0119                     	;# 
   820  011A                     	;# 
   821  011B                     	;# 
   822  011B                     	;# 
   823  011C                     	;# 
   824  018C                     	;# 
   825  018D                     	;# 
   826  018E                     	;# 
   827  018F                     	;# 
   828  0190                     	;# 
   829  0191                     	;# 
   830  0191                     	;# 
   831  0192                     	;# 
   832  0193                     	;# 
   833  0193                     	;# 
   834  0194                     	;# 
   835  0195                     	;# 
   836  0196                     	;# 
   837  0197                     	;# 
   838  0199                     	;# 
   839  0199                     	;# 
   840  0199                     	;# 
   841  019A                     	;# 
   842  019A                     	;# 
   843  019A                     	;# 
   844  019B                     	;# 
   845  019B                     	;# 
   846  019B                     	;# 
   847  019B                     	;# 
   848  019B                     	;# 
   849  019C                     	;# 
   850  019C                     	;# 
   851  019C                     	;# 
   852  019D                     	;# 
   853  019D                     	;# 
   854  019D                     	;# 
   855  019E                     	;# 
   856  019E                     	;# 
   857  019E                     	;# 
   858  019F                     	;# 
   859  019F                     	;# 
   860  019F                     	;# 
   861  019F                     	;# 
   862  019F                     	;# 
   863  020C                     	;# 
   864  020D                     	;# 
   865  020E                     	;# 
   866  020F                     	;# 
   867  0210                     	;# 
   868  0211                     	;# 
   869  0211                     	;# 
   870  0212                     	;# 
   871  0212                     	;# 
   872  0213                     	;# 
   873  0213                     	;# 
   874  0214                     	;# 
   875  0214                     	;# 
   876  0215                     	;# 
   877  0215                     	;# 
   878  0215                     	;# 
   879  0215                     	;# 
   880  0216                     	;# 
   881  0216                     	;# 
   882  0217                     	;# 
   883  0217                     	;# 
   884  028C                     	;# 
   885  028D                     	;# 
   886  028E                     	;# 
   887  028F                     	;# 
   888  0290                     	;# 
   889  0291                     	;# 
   890  0291                     	;# 
   891  0292                     	;# 
   892  0293                     	;# 
   893  0293                     	;# 
   894  0298                     	;# 
   895  0298                     	;# 
   896  0299                     	;# 
   897  029A                     	;# 
   898  029A                     	;# 
   899  029E                     	;# 
   900  030C                     	;# 
   901  030D                     	;# 
   902  030E                     	;# 
   903  030F                     	;# 
   904  0310                     	;# 
   905  038C                     	;# 
   906  038D                     	;# 
   907  038E                     	;# 
   908  038F                     	;# 
   909  0390                     	;# 
   910  0391                     	;# 
   911  0392                     	;# 
   912  0393                     	;# 
   913  0394                     	;# 
   914  0395                     	;# 
   915  0396                     	;# 
   916  0397                     	;# 
   917  0398                     	;# 
   918  0399                     	;# 
   919  039D                     	;# 
   920  039E                     	;# 
   921  039F                     	;# 
   922  0415                     	;# 
   923  0416                     	;# 
   924  0417                     	;# 
   925  041C                     	;# 
   926  041D                     	;# 
   927  041E                     	;# 
   928  0498                     	;# 
   929  0498                     	;# 
   930  0499                     	;# 
   931  049A                     	;# 
   932  049B                     	;# 
   933  049B                     	;# 
   934  049C                     	;# 
   935  049D                     	;# 
   936  049E                     	;# 
   937  049F                     	;# 
   938  0511                     	;# 
   939  0515                     	;# 
   940  0617                     	;# 
   941  0618                     	;# 
   942  0619                     	;# 
   943  0619                     	;# 
   944  061A                     	;# 
   945  061B                     	;# 
   946  061C                     	;# 
   947  061C                     	;# 
   948  0691                     	;# 
   949  0692                     	;# 
   950  0693                     	;# 
   951  0694                     	;# 
   952  0695                     	;# 
   953  0696                     	;# 
   954  0697                     	;# 
   955  0698                     	;# 
   956  0699                     	;# 
   957  069A                     	;# 
   958  069B                     	;# 
   959  069C                     	;# 
   960  069D                     	;# 
   961  069E                     	;# 
   962  069F                     	;# 
   963  0E0F                     	;# 
   964  0E10                     	;# 
   965  0E11                     	;# 
   966  0E12                     	;# 
   967  0E13                     	;# 
   968  0E14                     	;# 
   969  0E15                     	;# 
   970  0E17                     	;# 
   971  0E20                     	;# 
   972  0E21                     	;# 
   973  0E22                     	;# 
   974  0E24                     	;# 
   975  0E25                     	;# 
   976  0E28                     	;# 
   977  0E29                     	;# 
   978  0E2A                     	;# 
   979  0E2B                     	;# 
   980  0E90                     	;# 
   981  0E91                     	;# 
   982  0E92                     	;# 
   983  0E93                     	;# 
   984  0E94                     	;# 
   985  0E95                     	;# 
   986  0E96                     	;# 
   987  0E97                     	;# 
   988  0E98                     	;# 
   989  0E99                     	;# 
   990  0E9A                     	;# 
   991  0E9B                     	;# 
   992  0E9C                     	;# 
   993  0E9D                     	;# 
   994  0E9E                     	;# 
   995  0E9F                     	;# 
   996  0EA0                     	;# 
   997  0EA1                     	;# 
   998  0EA2                     	;# 
   999  0EA3                     	;# 
  1000  0EA4                     	;# 
  1001  0EA5                     	;# 
  1002  0EA6                     	;# 
  1003  0EA7                     	;# 
  1004  0EA8                     	;# 
  1005  0EA9                     	;# 
  1006  0EAA                     	;# 
  1007  0EAB                     	;# 
  1008  0EAC                     	;# 
  1009  0EAD                     	;# 
  1010  0EAE                     	;# 
  1011  0EAF                     	;# 
  1012  0EB0                     	;# 
  1013  0EB1                     	;# 
  1014  0EB2                     	;# 
  1015  0F0F                     	;# 
  1016  0F10                     	;# 
  1017  0F11                     	;# 
  1018  0F12                     	;# 
  1019  0F13                     	;# 
  1020  0F14                     	;# 
  1021  0F15                     	;# 
  1022  0F16                     	;# 
  1023  0F17                     	;# 
  1024  0F18                     	;# 
  1025  0F19                     	;# 
  1026  0F1A                     	;# 
  1027  0F1B                     	;# 
  1028  0F1C                     	;# 
  1029  0F1D                     	;# 
  1030  0F1E                     	;# 
  1031  0F1F                     	;# 
  1032  0F20                     	;# 
  1033  0F21                     	;# 
  1034  0F22                     	;# 
  1035  0F23                     	;# 
  1036  0F24                     	;# 
  1037  0F25                     	;# 
  1038  0F26                     	;# 
  1039  0F27                     	;# 
  1040  0F28                     	;# 
  1041  0F29                     	;# 
  1042  0F2A                     	;# 
  1043  0F2B                     	;# 
  1044  0F2C                     	;# 
  1045  0F2D                     	;# 
  1046  0F2E                     	;# 
  1047  0F2F                     	;# 
  1048  0F30                     	;# 
  1049  0F31                     	;# 
  1050  0F32                     	;# 
  1051  0F33                     	;# 
  1052  0F34                     	;# 
  1053  0F35                     	;# 
  1054  0F36                     	;# 
  1055  0F37                     	;# 
  1056  0FE4                     	;# 
  1057  0FE5                     	;# 
  1058  0FE6                     	;# 
  1059  0FE7                     	;# 
  1060  0FE8                     	;# 
  1061  0FE9                     	;# 
  1062  0FEA                     	;# 
  1063  0FEB                     	;# 
  1064  0FED                     	;# 
  1065  0FEE                     	;# 
  1066  0FEF                     	;# 
  1067  0000                     	;# 
  1068  0001                     	;# 
  1069  0002                     	;# 
  1070  0003                     	;# 
  1071  0004                     	;# 
  1072  0005                     	;# 
  1073  0006                     	;# 
  1074  0007                     	;# 
  1075  0008                     	;# 
  1076  0009                     	;# 
  1077  000A                     	;# 
  1078  000B                     	;# 
  1079  000C                     	;# 
  1080  000D                     	;# 
  1081  000E                     	;# 
  1082  000F                     	;# 
  1083  0010                     	;# 
  1084  0011                     	;# 
  1085  0012                     	;# 
  1086  0013                     	;# 
  1087  0015                     	;# 
  1088  0016                     	;# 
  1089  0016                     	;# 
  1090  0017                     	;# 
  1091  0018                     	;# 
  1092  0019                     	;# 
  1093  001A                     	;# 
  1094  001B                     	;# 
  1095  001C                     	;# 
  1096  008C                     	;# 
  1097  008D                     	;# 
  1098  008E                     	;# 
  1099  008F                     	;# 
  1100  0090                     	;# 
  1101  0091                     	;# 
  1102  0092                     	;# 
  1103  0093                     	;# 
  1104  0095                     	;# 
  1105  0096                     	;# 
  1106  0097                     	;# 
  1107  0098                     	;# 
  1108  0099                     	;# 
  1109  009A                     	;# 
  1110  009B                     	;# 
  1111  009B                     	;# 
  1112  009C                     	;# 
  1113  009D                     	;# 
  1114  009E                     	;# 
  1115  009F                     	;# 
  1116  010C                     	;# 
  1117  010D                     	;# 
  1118  010E                     	;# 
  1119  010F                     	;# 
  1120  0110                     	;# 
  1121  0111                     	;# 
  1122  0112                     	;# 
  1123  0113                     	;# 
  1124  0114                     	;# 
  1125  0115                     	;# 
  1126  0116                     	;# 
  1127  0117                     	;# 
  1128  0118                     	;# 
  1129  0119                     	;# 
  1130  011A                     	;# 
  1131  011B                     	;# 
  1132  011B                     	;# 
  1133  011C                     	;# 
  1134  018C                     	;# 
  1135  018D                     	;# 
  1136  018E                     	;# 
  1137  018F                     	;# 
  1138  0190                     	;# 
  1139  0191                     	;# 
  1140  0191                     	;# 
  1141  0192                     	;# 
  1142  0193                     	;# 
  1143  0193                     	;# 
  1144  0194                     	;# 
  1145  0195                     	;# 
  1146  0196                     	;# 
  1147  0197                     	;# 
  1148  0199                     	;# 
  1149  0199                     	;# 
  1150  0199                     	;# 
  1151  019A                     	;# 
  1152  019A                     	;# 
  1153  019A                     	;# 
  1154  019B                     	;# 
  1155  019B                     	;# 
  1156  019B                     	;# 
  1157  019B                     	;# 
  1158  019B                     	;# 
  1159  019C                     	;# 
  1160  019C                     	;# 
  1161  019C                     	;# 
  1162  019D                     	;# 
  1163  019D                     	;# 
  1164  019D                     	;# 
  1165  019E                     	;# 
  1166  019E                     	;# 
  1167  019E                     	;# 
  1168  019F                     	;# 
  1169  019F                     	;# 
  1170  019F                     	;# 
  1171  019F                     	;# 
  1172  019F                     	;# 
  1173  020C                     	;# 
  1174  020D                     	;# 
  1175  020E                     	;# 
  1176  020F                     	;# 
  1177  0210                     	;# 
  1178  0211                     	;# 
  1179  0211                     	;# 
  1180  0212                     	;# 
  1181  0212                     	;# 
  1182  0213                     	;# 
  1183  0213                     	;# 
  1184  0214                     	;# 
  1185  0214                     	;# 
  1186  0215                     	;# 
  1187  0215                     	;# 
  1188  0215                     	;# 
  1189  0215                     	;# 
  1190  0216                     	;# 
  1191  0216                     	;# 
  1192  0217                     	;# 
  1193  0217                     	;# 
  1194  028C                     	;# 
  1195  028D                     	;# 
  1196  028E                     	;# 
  1197  028F                     	;# 
  1198  0290                     	;# 
  1199  0291                     	;# 
  1200  0291                     	;# 
  1201  0292                     	;# 
  1202  0293                     	;# 
  1203  0293                     	;# 
  1204  0298                     	;# 
  1205  0298                     	;# 
  1206  0299                     	;# 
  1207  029A                     	;# 
  1208  029A                     	;# 
  1209  029E                     	;# 
  1210  030C                     	;# 
  1211  030D                     	;# 
  1212  030E                     	;# 
  1213  030F                     	;# 
  1214  0310                     	;# 
  1215  038C                     	;# 
  1216  038D                     	;# 
  1217  038E                     	;# 
  1218  038F                     	;# 
  1219  0390                     	;# 
  1220  0391                     	;# 
  1221  0392                     	;# 
  1222  0393                     	;# 
  1223  0394                     	;# 
  1224  0395                     	;# 
  1225  0396                     	;# 
  1226  0397                     	;# 
  1227  0398                     	;# 
  1228  0399                     	;# 
  1229  039D                     	;# 
  1230  039E                     	;# 
  1231  039F                     	;# 
  1232  0415                     	;# 
  1233  0416                     	;# 
  1234  0417                     	;# 
  1235  041C                     	;# 
  1236  041D                     	;# 
  1237  041E                     	;# 
  1238  0498                     	;# 
  1239  0498                     	;# 
  1240  0499                     	;# 
  1241  049A                     	;# 
  1242  049B                     	;# 
  1243  049B                     	;# 
  1244  049C                     	;# 
  1245  049D                     	;# 
  1246  049E                     	;# 
  1247  049F                     	;# 
  1248  0511                     	;# 
  1249  0515                     	;# 
  1250  0617                     	;# 
  1251  0618                     	;# 
  1252  0619                     	;# 
  1253  0619                     	;# 
  1254  061A                     	;# 
  1255  061B                     	;# 
  1256  061C                     	;# 
  1257  061C                     	;# 
  1258  0691                     	;# 
  1259  0692                     	;# 
  1260  0693                     	;# 
  1261  0694                     	;# 
  1262  0695                     	;# 
  1263  0696                     	;# 
  1264  0697                     	;# 
  1265  0698                     	;# 
  1266  0699                     	;# 
  1267  069A                     	;# 
  1268  069B                     	;# 
  1269  069C                     	;# 
  1270  069D                     	;# 
  1271  069E                     	;# 
  1272  069F                     	;# 
  1273  0E0F                     	;# 
  1274  0E10                     	;# 
  1275  0E11                     	;# 
  1276  0E12                     	;# 
  1277  0E13                     	;# 
  1278  0E14                     	;# 
  1279  0E15                     	;# 
  1280  0E17                     	;# 
  1281  0E20                     	;# 
  1282  0E21                     	;# 
  1283  0E22                     	;# 
  1284  0E24                     	;# 
  1285  0E25                     	;# 
  1286  0E28                     	;# 
  1287  0E29                     	;# 
  1288  0E2A                     	;# 
  1289  0E2B                     	;# 
  1290  0E90                     	;# 
  1291  0E91                     	;# 
  1292  0E92                     	;# 
  1293  0E93                     	;# 
  1294  0E94                     	;# 
  1295  0E95                     	;# 
  1296  0E96                     	;# 
  1297  0E97                     	;# 
  1298  0E98                     	;# 
  1299  0E99                     	;# 
  1300  0E9A                     	;# 
  1301  0E9B                     	;# 
  1302  0E9C                     	;# 
  1303  0E9D                     	;# 
  1304  0E9E                     	;# 
  1305  0E9F                     	;# 
  1306  0EA0                     	;# 
  1307  0EA1                     	;# 
  1308  0EA2                     	;# 
  1309  0EA3                     	;# 
  1310  0EA4                     	;# 
  1311  0EA5                     	;# 
  1312  0EA6                     	;# 
  1313  0EA7                     	;# 
  1314  0EA8                     	;# 
  1315  0EA9                     	;# 
  1316  0EAA                     	;# 
  1317  0EAB                     	;# 
  1318  0EAC                     	;# 
  1319  0EAD                     	;# 
  1320  0EAE                     	;# 
  1321  0EAF                     	;# 
  1322  0EB0                     	;# 
  1323  0EB1                     	;# 
  1324  0EB2                     	;# 
  1325  0F0F                     	;# 
  1326  0F10                     	;# 
  1327  0F11                     	;# 
  1328  0F12                     	;# 
  1329  0F13                     	;# 
  1330  0F14                     	;# 
  1331  0F15                     	;# 
  1332  0F16                     	;# 
  1333  0F17                     	;# 
  1334  0F18                     	;# 
  1335  0F19                     	;# 
  1336  0F1A                     	;# 
  1337  0F1B                     	;# 
  1338  0F1C                     	;# 
  1339  0F1D                     	;# 
  1340  0F1E                     	;# 
  1341  0F1F                     	;# 
  1342  0F20                     	;# 
  1343  0F21                     	;# 
  1344  0F22                     	;# 
  1345  0F23                     	;# 
  1346  0F24                     	;# 
  1347  0F25                     	;# 
  1348  0F26                     	;# 
  1349  0F27                     	;# 
  1350  0F28                     	;# 
  1351  0F29                     	;# 
  1352  0F2A                     	;# 
  1353  0F2B                     	;# 
  1354  0F2C                     	;# 
  1355  0F2D                     	;# 
  1356  0F2E                     	;# 
  1357  0F2F                     	;# 
  1358  0F30                     	;# 
  1359  0F31                     	;# 
  1360  0F32                     	;# 
  1361  0F33                     	;# 
  1362  0F34                     	;# 
  1363  0F35                     	;# 
  1364  0F36                     	;# 
  1365  0F37                     	;# 
  1366  0FE4                     	;# 
  1367  0FE5                     	;# 
  1368  0FE6                     	;# 
  1369  0FE7                     	;# 
  1370  0FE8                     	;# 
  1371  0FE9                     	;# 
  1372  0FEA                     	;# 
  1373  0FEB                     	;# 
  1374  0FED                     	;# 
  1375  0FEE                     	;# 
  1376  0FEF                     	;# 
  1377  0000                     	;# 
  1378  0001                     	;# 
  1379  0002                     	;# 
  1380  0003                     	;# 
  1381  0004                     	;# 
  1382  0005                     	;# 
  1383  0006                     	;# 
  1384  0007                     	;# 
  1385  0008                     	;# 
  1386  0009                     	;# 
  1387  000A                     	;# 
  1388  000B                     	;# 
  1389  000C                     	;# 
  1390  000D                     	;# 
  1391  000E                     	;# 
  1392  000F                     	;# 
  1393  0010                     	;# 
  1394  0011                     	;# 
  1395  0012                     	;# 
  1396  0013                     	;# 
  1397  0015                     	;# 
  1398  0016                     	;# 
  1399  0016                     	;# 
  1400  0017                     	;# 
  1401  0018                     	;# 
  1402  0019                     	;# 
  1403  001A                     	;# 
  1404  001B                     	;# 
  1405  001C                     	;# 
  1406  008C                     	;# 
  1407  008D                     	;# 
  1408  008E                     	;# 
  1409  008F                     	;# 
  1410  0090                     	;# 
  1411  0091                     	;# 
  1412  0092                     	;# 
  1413  0093                     	;# 
  1414  0095                     	;# 
  1415  0096                     	;# 
  1416  0097                     	;# 
  1417  0098                     	;# 
  1418  0099                     	;# 
  1419  009A                     	;# 
  1420  009B                     	;# 
  1421  009B                     	;# 
  1422  009C                     	;# 
  1423  009D                     	;# 
  1424  009E                     	;# 
  1425  009F                     	;# 
  1426  010C                     	;# 
  1427  010D                     	;# 
  1428  010E                     	;# 
  1429  010F                     	;# 
  1430  0110                     	;# 
  1431  0111                     	;# 
  1432  0112                     	;# 
  1433  0113                     	;# 
  1434  0114                     	;# 
  1435  0115                     	;# 
  1436  0116                     	;# 
  1437  0117                     	;# 
  1438  0118                     	;# 
  1439  0119                     	;# 
  1440  011A                     	;# 
  1441  011B                     	;# 
  1442  011B                     	;# 
  1443  011C                     	;# 
  1444  018C                     	;# 
  1445  018D                     	;# 
  1446  018E                     	;# 
  1447  018F                     	;# 
  1448  0190                     	;# 
  1449  0191                     	;# 
  1450  0191                     	;# 
  1451  0192                     	;# 
  1452  0193                     	;# 
  1453  0193                     	;# 
  1454  0194                     	;# 
  1455  0195                     	;# 
  1456  0196                     	;# 
  1457  0197                     	;# 
  1458  0199                     	;# 
  1459  0199                     	;# 
  1460  0199                     	;# 
  1461  019A                     	;# 
  1462  019A                     	;# 
  1463  019A                     	;# 
  1464  019B                     	;# 
  1465  019B                     	;# 
  1466  019B                     	;# 
  1467  019B                     	;# 
  1468  019B                     	;# 
  1469  019C                     	;# 
  1470  019C                     	;# 
  1471  019C                     	;# 
  1472  019D                     	;# 
  1473  019D                     	;# 
  1474  019D                     	;# 
  1475  019E                     	;# 
  1476  019E                     	;# 
  1477  019E                     	;# 
  1478  019F                     	;# 
  1479  019F                     	;# 
  1480  019F                     	;# 
  1481  019F                     	;# 
  1482  019F                     	;# 
  1483  020C                     	;# 
  1484  020D                     	;# 
  1485  020E                     	;# 
  1486  020F                     	;# 
  1487  0210                     	;# 
  1488  0211                     	;# 
  1489  0211                     	;# 
  1490  0212                     	;# 
  1491  0212                     	;# 
  1492  0213                     	;# 
  1493  0213                     	;# 
  1494  0214                     	;# 
  1495  0214                     	;# 
  1496  0215                     	;# 
  1497  0215                     	;# 
  1498  0215                     	;# 
  1499  0215                     	;# 
  1500  0216                     	;# 
  1501  0216                     	;# 
  1502  0217                     	;# 
  1503  0217                     	;# 
  1504  028C                     	;# 
  1505  028D                     	;# 
  1506  028E                     	;# 
  1507  028F                     	;# 
  1508  0290                     	;# 
  1509  0291                     	;# 
  1510  0291                     	;# 
  1511  0292                     	;# 
  1512  0293                     	;# 
  1513  0293                     	;# 
  1514  0298                     	;# 
  1515  0298                     	;# 
  1516  0299                     	;# 
  1517  029A                     	;# 
  1518  029A                     	;# 
  1519  029E                     	;# 
  1520  030C                     	;# 
  1521  030D                     	;# 
  1522  030E                     	;# 
  1523  030F                     	;# 
  1524  0310                     	;# 
  1525  038C                     	;# 
  1526  038D                     	;# 
  1527  038E                     	;# 
  1528  038F                     	;# 
  1529  0390                     	;# 
  1530  0391                     	;# 
  1531  0392                     	;# 
  1532  0393                     	;# 
  1533  0394                     	;# 
  1534  0395                     	;# 
  1535  0396                     	;# 
  1536  0397                     	;# 
  1537  0398                     	;# 
  1538  0399                     	;# 
  1539  039D                     	;# 
  1540  039E                     	;# 
  1541  039F                     	;# 
  1542  0415                     	;# 
  1543  0416                     	;# 
  1544  0417                     	;# 
  1545  041C                     	;# 
  1546  041D                     	;# 
  1547  041E                     	;# 
  1548  0498                     	;# 
  1549  0498                     	;# 
  1550  0499                     	;# 
  1551  049A                     	;# 
  1552  049B                     	;# 
  1553  049B                     	;# 
  1554  049C                     	;# 
  1555  049D                     	;# 
  1556  049E                     	;# 
  1557  049F                     	;# 
  1558  0511                     	;# 
  1559  0515                     	;# 
  1560  0617                     	;# 
  1561  0618                     	;# 
  1562  0619                     	;# 
  1563  0619                     	;# 
  1564  061A                     	;# 
  1565  061B                     	;# 
  1566  061C                     	;# 
  1567  061C                     	;# 
  1568  0691                     	;# 
  1569  0692                     	;# 
  1570  0693                     	;# 
  1571  0694                     	;# 
  1572  0695                     	;# 
  1573  0696                     	;# 
  1574  0697                     	;# 
  1575  0698                     	;# 
  1576  0699                     	;# 
  1577  069A                     	;# 
  1578  069B                     	;# 
  1579  069C                     	;# 
  1580  069D                     	;# 
  1581  069E                     	;# 
  1582  069F                     	;# 
  1583  0E0F                     	;# 
  1584  0E10                     	;# 
  1585  0E11                     	;# 
  1586  0E12                     	;# 
  1587  0E13                     	;# 
  1588  0E14                     	;# 
  1589  0E15                     	;# 
  1590  0E17                     	;# 
  1591  0E20                     	;# 
  1592  0E21                     	;# 
  1593  0E22                     	;# 
  1594  0E24                     	;# 
  1595  0E25                     	;# 
  1596  0E28                     	;# 
  1597  0E29                     	;# 
  1598  0E2A                     	;# 
  1599  0E2B                     	;# 
  1600  0E90                     	;# 
  1601  0E91                     	;# 
  1602  0E92                     	;# 
  1603  0E93                     	;# 
  1604  0E94                     	;# 
  1605  0E95                     	;# 
  1606  0E96                     	;# 
  1607  0E97                     	;# 
  1608  0E98                     	;# 
  1609  0E99                     	;# 
  1610  0E9A                     	;# 
  1611  0E9B                     	;# 
  1612  0E9C                     	;# 
  1613  0E9D                     	;# 
  1614  0E9E                     	;# 
  1615  0E9F                     	;# 
  1616  0EA0                     	;# 
  1617  0EA1                     	;# 
  1618  0EA2                     	;# 
  1619  0EA3                     	;# 
  1620  0EA4                     	;# 
  1621  0EA5                     	;# 
  1622  0EA6                     	;# 
  1623  0EA7                     	;# 
  1624  0EA8                     	;# 
  1625  0EA9                     	;# 
  1626  0EAA                     	;# 
  1627  0EAB                     	;# 
  1628  0EAC                     	;# 
  1629  0EAD                     	;# 
  1630  0EAE                     	;# 
  1631  0EAF                     	;# 
  1632  0EB0                     	;# 
  1633  0EB1                     	;# 
  1634  0EB2                     	;# 
  1635  0F0F                     	;# 
  1636  0F10                     	;# 
  1637  0F11                     	;# 
  1638  0F12                     	;# 
  1639  0F13                     	;# 
  1640  0F14                     	;# 
  1641  0F15                     	;# 
  1642  0F16                     	;# 
  1643  0F17                     	;# 
  1644  0F18                     	;# 
  1645  0F19                     	;# 
  1646  0F1A                     	;# 
  1647  0F1B                     	;# 
  1648  0F1C                     	;# 
  1649  0F1D                     	;# 
  1650  0F1E                     	;# 
  1651  0F1F                     	;# 
  1652  0F20                     	;# 
  1653  0F21                     	;# 
  1654  0F22                     	;# 
  1655  0F23                     	;# 
  1656  0F24                     	;# 
  1657  0F25                     	;# 
  1658  0F26                     	;# 
  1659  0F27                     	;# 
  1660  0F28                     	;# 
  1661  0F29                     	;# 
  1662  0F2A                     	;# 
  1663  0F2B                     	;# 
  1664  0F2C                     	;# 
  1665  0F2D                     	;# 
  1666  0F2E                     	;# 
  1667  0F2F                     	;# 
  1668  0F30                     	;# 
  1669  0F31                     	;# 
  1670  0F32                     	;# 
  1671  0F33                     	;# 
  1672  0F34                     	;# 
  1673  0F35                     	;# 
  1674  0F36                     	;# 
  1675  0F37                     	;# 
  1676  0FE4                     	;# 
  1677  0FE5                     	;# 
  1678  0FE6                     	;# 
  1679  0FE7                     	;# 
  1680  0FE8                     	;# 
  1681  0FE9                     	;# 
  1682  0FEA                     	;# 
  1683  0FEB                     	;# 
  1684  0FED                     	;# 
  1685  0FEE                     	;# 
  1686  0FEF                     	;# 
  1687  0000                     	;# 
  1688  0001                     	;# 
  1689  0002                     	;# 
  1690  0003                     	;# 
  1691  0004                     	;# 
  1692  0005                     	;# 
  1693  0006                     	;# 
  1694  0007                     	;# 
  1695  0008                     	;# 
  1696  0009                     	;# 
  1697  000A                     	;# 
  1698  000B                     	;# 
  1699  000C                     	;# 
  1700  000D                     	;# 
  1701  000E                     	;# 
  1702  000F                     	;# 
  1703  0010                     	;# 
  1704  0011                     	;# 
  1705  0012                     	;# 
  1706  0013                     	;# 
  1707  0015                     	;# 
  1708  0016                     	;# 
  1709  0016                     	;# 
  1710  0017                     	;# 
  1711  0018                     	;# 
  1712  0019                     	;# 
  1713  001A                     	;# 
  1714  001B                     	;# 
  1715  001C                     	;# 
  1716  008C                     	;# 
  1717  008D                     	;# 
  1718  008E                     	;# 
  1719  008F                     	;# 
  1720  0090                     	;# 
  1721  0091                     	;# 
  1722  0092                     	;# 
  1723  0093                     	;# 
  1724  0095                     	;# 
  1725  0096                     	;# 
  1726  0097                     	;# 
  1727  0098                     	;# 
  1728  0099                     	;# 
  1729  009A                     	;# 
  1730  009B                     	;# 
  1731  009B                     	;# 
  1732  009C                     	;# 
  1733  009D                     	;# 
  1734  009E                     	;# 
  1735  009F                     	;# 
  1736  010C                     	;# 
  1737  010D                     	;# 
  1738  010E                     	;# 
  1739  010F                     	;# 
  1740  0110                     	;# 
  1741  0111                     	;# 
  1742  0112                     	;# 
  1743  0113                     	;# 
  1744  0114                     	;# 
  1745  0115                     	;# 
  1746  0116                     	;# 
  1747  0117                     	;# 
  1748  0118                     	;# 
  1749  0119                     	;# 
  1750  011A                     	;# 
  1751  011B                     	;# 
  1752  011B                     	;# 
  1753  011C                     	;# 
  1754  018C                     	;# 
  1755  018D                     	;# 
  1756  018E                     	;# 
  1757  018F                     	;# 
  1758  0190                     	;# 
  1759  0191                     	;# 
  1760  0191                     	;# 
  1761  0192                     	;# 
  1762  0193                     	;# 
  1763  0193                     	;# 
  1764  0194                     	;# 
  1765  0195                     	;# 
  1766  0196                     	;# 
  1767  0197                     	;# 
  1768  0199                     	;# 
  1769  0199                     	;# 
  1770  0199                     	;# 
  1771  019A                     	;# 
  1772  019A                     	;# 
  1773  019A                     	;# 
  1774  019B                     	;# 
  1775  019B                     	;# 
  1776  019B                     	;# 
  1777  019B                     	;# 
  1778  019B                     	;# 
  1779  019C                     	;# 
  1780  019C                     	;# 
  1781  019C                     	;# 
  1782  019D                     	;# 
  1783  019D                     	;# 
  1784  019D                     	;# 
  1785  019E                     	;# 
  1786  019E                     	;# 
  1787  019E                     	;# 
  1788  019F                     	;# 
  1789  019F                     	;# 
  1790  019F                     	;# 
  1791  019F                     	;# 
  1792  019F                     	;# 
  1793  020C                     	;# 
  1794  020D                     	;# 
  1795  020E                     	;# 
  1796  020F                     	;# 
  1797  0210                     	;# 
  1798  0211                     	;# 
  1799  0211                     	;# 
  1800  0212                     	;# 
  1801  0212                     	;# 
  1802  0213                     	;# 
  1803  0213                     	;# 
  1804  0214                     	;# 
  1805  0214                     	;# 
  1806  0215                     	;# 
  1807  0215                     	;# 
  1808  0215                     	;# 
  1809  0215                     	;# 
  1810  0216                     	;# 
  1811  0216                     	;# 
  1812  0217                     	;# 
  1813  0217                     	;# 
  1814  028C                     	;# 
  1815  028D                     	;# 
  1816  028E                     	;# 
  1817  028F                     	;# 
  1818  0290                     	;# 
  1819  0291                     	;# 
  1820  0291                     	;# 
  1821  0292                     	;# 
  1822  0293                     	;# 
  1823  0293                     	;# 
  1824  0298                     	;# 
  1825  0298                     	;# 
  1826  0299                     	;# 
  1827  029A                     	;# 
  1828  029A                     	;# 
  1829  029E                     	;# 
  1830  030C                     	;# 
  1831  030D                     	;# 
  1832  030E                     	;# 
  1833  030F                     	;# 
  1834  0310                     	;# 
  1835  038C                     	;# 
  1836  038D                     	;# 
  1837  038E                     	;# 
  1838  038F                     	;# 
  1839  0390                     	;# 
  1840  0391                     	;# 
  1841  0392                     	;# 
  1842  0393                     	;# 
  1843  0394                     	;# 
  1844  0395                     	;# 
  1845  0396                     	;# 
  1846  0397                     	;# 
  1847  0398                     	;# 
  1848  0399                     	;# 
  1849  039D                     	;# 
  1850  039E                     	;# 
  1851  039F                     	;# 
  1852  0415                     	;# 
  1853  0416                     	;# 
  1854  0417                     	;# 
  1855  041C                     	;# 
  1856  041D                     	;# 
  1857  041E                     	;# 
  1858  0498                     	;# 
  1859  0498                     	;# 
  1860  0499                     	;# 
  1861  049A                     	;# 
  1862  049B                     	;# 
  1863  049B                     	;# 
  1864  049C                     	;# 
  1865  049D                     	;# 
  1866  049E                     	;# 
  1867  049F                     	;# 
  1868  0511                     	;# 
  1869  0515                     	;# 
  1870  0617                     	;# 
  1871  0618                     	;# 
  1872  0619                     	;# 
  1873  0619                     	;# 
  1874  061A                     	;# 
  1875  061B                     	;# 
  1876  061C                     	;# 
  1877  061C                     	;# 
  1878  0691                     	;# 
  1879  0692                     	;# 
  1880  0693                     	;# 
  1881  0694                     	;# 
  1882  0695                     	;# 
  1883  0696                     	;# 
  1884  0697                     	;# 
  1885  0698                     	;# 
  1886  0699                     	;# 
  1887  069A                     	;# 
  1888  069B                     	;# 
  1889  069C                     	;# 
  1890  069D                     	;# 
  1891  069E                     	;# 
  1892  069F                     	;# 
  1893  0E0F                     	;# 
  1894  0E10                     	;# 
  1895  0E11                     	;# 
  1896  0E12                     	;# 
  1897  0E13                     	;# 
  1898  0E14                     	;# 
  1899  0E15                     	;# 
  1900  0E17                     	;# 
  1901  0E20                     	;# 
  1902  0E21                     	;# 
  1903  0E22                     	;# 
  1904  0E24                     	;# 
  1905  0E25                     	;# 
  1906  0E28                     	;# 
  1907  0E29                     	;# 
  1908  0E2A                     	;# 
  1909  0E2B                     	;# 
  1910  0E90                     	;# 
  1911  0E91                     	;# 
  1912  0E92                     	;# 
  1913  0E93                     	;# 
  1914  0E94                     	;# 
  1915  0E95                     	;# 
  1916  0E96                     	;# 
  1917  0E97                     	;# 
  1918  0E98                     	;# 
  1919  0E99                     	;# 
  1920  0E9A                     	;# 
  1921  0E9B                     	;# 
  1922  0E9C                     	;# 
  1923  0E9D                     	;# 
  1924  0E9E                     	;# 
  1925  0E9F                     	;# 
  1926  0EA0                     	;# 
  1927  0EA1                     	;# 
  1928  0EA2                     	;# 
  1929  0EA3                     	;# 
  1930  0EA4                     	;# 
  1931  0EA5                     	;# 
  1932  0EA6                     	;# 
  1933  0EA7                     	;# 
  1934  0EA8                     	;# 
  1935  0EA9                     	;# 
  1936  0EAA                     	;# 
  1937  0EAB                     	;# 
  1938  0EAC                     	;# 
  1939  0EAD                     	;# 
  1940  0EAE                     	;# 
  1941  0EAF                     	;# 
  1942  0EB0                     	;# 
  1943  0EB1                     	;# 
  1944  0EB2                     	;# 
  1945  0F0F                     	;# 
  1946  0F10                     	;# 
  1947  0F11                     	;# 
  1948  0F12                     	;# 
  1949  0F13                     	;# 
  1950  0F14                     	;# 
  1951  0F15                     	;# 
  1952  0F16                     	;# 
  1953  0F17                     	;# 
  1954  0F18                     	;# 
  1955  0F19                     	;# 
  1956  0F1A                     	;# 
  1957  0F1B                     	;# 
  1958  0F1C                     	;# 
  1959  0F1D                     	;# 
  1960  0F1E                     	;# 
  1961  0F1F                     	;# 
  1962  0F20                     	;# 
  1963  0F21                     	;# 
  1964  0F22                     	;# 
  1965  0F23                     	;# 
  1966  0F24                     	;# 
  1967  0F25                     	;# 
  1968  0F26                     	;# 
  1969  0F27                     	;# 
  1970  0F28                     	;# 
  1971  0F29                     	;# 
  1972  0F2A                     	;# 
  1973  0F2B                     	;# 
  1974  0F2C                     	;# 
  1975  0F2D                     	;# 
  1976  0F2E                     	;# 
  1977  0F2F                     	;# 
  1978  0F30                     	;# 
  1979  0F31                     	;# 
  1980  0F32                     	;# 
  1981  0F33                     	;# 
  1982  0F34                     	;# 
  1983  0F35                     	;# 
  1984  0F36                     	;# 
  1985  0F37                     	;# 
  1986  0FE4                     	;# 
  1987  0FE5                     	;# 
  1988  0FE6                     	;# 
  1989  0FE7                     	;# 
  1990  0FE8                     	;# 
  1991  0FE9                     	;# 
  1992  0FEA                     	;# 
  1993  0FEB                     	;# 
  1994  0FED                     	;# 
  1995  0FEE                     	;# 
  1996  0FEF                     	;_messageBuffer
  1997                           
  1998                           	psect	idataBANK2
  1999  1DA3                     __pidataBANK2:	
  2000                           
  2001                           ;initializer for stoa@F1152
  2002  1DA3  3428               	retlw	40
  2003  1DA4  346E               	retlw	110
  2004  1DA5  3475               	retlw	117
  2005  1DA6  346C               	retlw	108
  2006  1DA7  346C               	retlw	108
  2007  1DA8  3429               	retlw	41
  2008  1DA9  3400               	retlw	0
  2009                           
  2010                           	psect	stringtext1
  2011  2107                     __pstringtext1:	
  2012  2107                     _OCD_threshold_setting:	
  2013  2107  3411               	retlw	17
  2014  2108  3400               	retlw	0
  2015  2109  3416               	retlw	22
  2016  210A  3400               	retlw	0
  2017  210B  341C               	retlw	28
  2018  210C  3400               	retlw	0
  2019  210D  3421               	retlw	33
  2020  210E  3400               	retlw	0
  2021  210F  3427               	retlw	39
  2022  2110  3400               	retlw	0
  2023  2111  342C               	retlw	44
  2024  2112  3400               	retlw	0
  2025  2113  3432               	retlw	50
  2026  2114  3400               	retlw	0
  2027  2115  3438               	retlw	56
  2028  2116  3400               	retlw	0
  2029  2117  343D               	retlw	61
  2030  2118  3400               	retlw	0
  2031  2119  3443               	retlw	67
  2032  211A  3400               	retlw	0
  2033  211B  3448               	retlw	72
  2034  211C  3400               	retlw	0
  2035  211D  344E               	retlw	78
  2036  211E  3400               	retlw	0
  2037  211F  3453               	retlw	83
  2038  2120  3400               	retlw	0
  2039  2121  3459               	retlw	89
  2040  2122  3400               	retlw	0
  2041  2123  345E               	retlw	94
  2042  2124  3400               	retlw	0
  2043  2125  3464               	retlw	100
  2044  2126  3400               	retlw	0
  2045  2127                     __end_of_OCD_threshold_setting:	
  2046                           
  2047                           	psect	stringtext2
  2048  2127                     __pstringtext2:	
  2049  2127                     _OCD_delay_setting:	
  2050  2127  3408               	retlw	8
  2051  2128  3400               	retlw	0
  2052  2129  3414               	retlw	20
  2053  212A  3400               	retlw	0
  2054  212B  3428               	retlw	40
  2055  212C  3400               	retlw	0
  2056  212D  3450               	retlw	80
  2057  212E  3400               	retlw	0
  2058  212F  34A0               	retlw	160
  2059  2130  3400               	retlw	0
  2060  2131  3440               	retlw	64
  2061  2132  3401               	retlw	1
  2062  2133  3480               	retlw	128
  2063  2134  3402               	retlw	2
  2064  2135  3400               	retlw	0
  2065  2136  3405               	retlw	5
  2066  2137                     __end_of_OCD_delay_setting:	
  2067                           
  2068                           	psect	stringtext3
  2069  2137                     __pstringtext3:	
  2070  2137                     _SCD_threshold_setting:	
  2071  2137  342C               	retlw	44
  2072  2138  3400               	retlw	0
  2073  2139  3443               	retlw	67
  2074  213A  3400               	retlw	0
  2075  213B  3459               	retlw	89
  2076  213C  3400               	retlw	0
  2077  213D  346F               	retlw	111
  2078  213E  3400               	retlw	0
  2079  213F  3485               	retlw	133
  2080  2140  3400               	retlw	0
  2081  2141  349B               	retlw	155
  2082  2142  3400               	retlw	0
  2083  2143  34B2               	retlw	178
  2084  2144  3400               	retlw	0
  2085  2145  34C8               	retlw	200
  2086  2146  3400               	retlw	0
  2087  2147                     __end_of_SCD_threshold_setting:	
  2088                           
  2089                           	psect	stringtext4
  2090  2147                     __pstringtext4:	
  2091  2147                     _OV_delay_setting:	
  2092  2147  3401               	retlw	1
  2093  2148  3400               	retlw	0
  2094  2149  3402               	retlw	2
  2095  214A  3400               	retlw	0
  2096  214B  3404               	retlw	4
  2097  214C  3400               	retlw	0
  2098  214D  3408               	retlw	8
  2099  214E  3400               	retlw	0
  2100  214F                     __end_of_OV_delay_setting:	
  2101                           
  2102                           	psect	stringtext5
  2103  214F                     __pstringtext5:	
  2104  214F                     _UV_delay_setting:	
  2105  214F  3401               	retlw	1
  2106  2150  3400               	retlw	0
  2107  2151  3404               	retlw	4
  2108  2152  3400               	retlw	0
  2109  2153  3408               	retlw	8
  2110  2154  3400               	retlw	0
  2111  2155  3410               	retlw	16
  2112  2156  3400               	retlw	0
  2113  2157                     __end_of_UV_delay_setting:	
  2114                           
  2115                           	psect	stringtext6
  2116  2157                     __pstringtext6:	
  2117  2157                     _SCD_delay_setting:	
  2118  2157  3446               	retlw	70
  2119  2158  3400               	retlw	0
  2120  2159  3464               	retlw	100
  2121  215A  3400               	retlw	0
  2122  215B  34C8               	retlw	200
  2123  215C  3400               	retlw	0
  2124  215D  3490               	retlw	144
  2125  215E  3401               	retlw	1
  2126  215F                     __end_of_SCD_delay_setting:	
  2127                           
  2128                           	psect	stringtext7
  2129  2000                     __pstringtext7:	
  2130  2000                     _ATmega328_address:	
  2131  2000  3402               	retlw	2
  2132  2001  3400               	retlw	0
  2133  2002                     __end_of_ATmega328_address:	
  2134  0016                     _TMR1	set	22
  2135  000B                     _INTCONbits	set	11
  2136  0018                     _T1CONbits	set	24
  2137  0011                     _PIR1bits	set	17
  2138  0090                     _TRISEbits	set	144
  2139  008C                     _TRISAbits	set	140
  2140  008E                     _TRISCbits	set	142
  2141  008D                     _TRISBbits	set	141
  2142  0091                     _PIE1bits	set	145
  2143  0476                     _TRISC6	set	1142
  2144  0477                     _TRISC7	set	1143
  2145  04CF                     _SPLLEN	set	1231
  2146  04CE                     _IRCF3	set	1230
  2147  04CD                     _IRCF2	set	1229
  2148  04CC                     _IRCF1	set	1228
  2149  04CB                     _IRCF0	set	1227
  2150  04C9                     _SCS1	set	1225
  2151  04C8                     _SCS0	set	1224
  2152  0110                     _LATEbits	set	272
  2153  010C                     _LATAbits	set	268
  2154  019A                     _TX1REG	set	410
  2155  0199                     _RC1REG	set	409
  2156  019D                     _RC1STAbits	set	413
  2157  019B                     _SPBRG	set	411
  2158  018E                     _ANSELCbits	set	398
  2159  018D                     _ANSELBbits	set	397
  2160  0CF5                     _TXEN	set	3317
  2161  0CEC                     _CREN	set	3308
  2162  0CEF                     _SPEN	set	3311
  2163  0CF4                     _SYNC	set	3316
  2164  0CF2                     _BRGH	set	3314
  2165  0216                     _SSPCON2bits	set	534
  2166  0211                     _SSPBUF	set	529
  2167  0212                     _SSPADD	set	530
  2168  0215                     _SSPCONbits	set	533
  2169  0E24                     _RXPPSbits	set	3620
  2170  0E20                     _SSPCLKPPSbits	set	3616
  2171  0E21                     _SSPDATPPSbits	set	3617
  2172  0E0F                     _PPSLOCKbits	set	3599
  2173  0E0F                     _PPSLOCK	set	3599
  2174  0E9A                     _RB2PPSbits	set	3738
  2175  0EA5                     _RC5PPSbits	set	3749
  2176  0EA4                     _RC4PPSbits	set	3748
  2177  2002                     STR_2:	
  2178  2002  3443               	retlw	67	;'C'
  2179  2003  346F               	retlw	111	;'o'
  2180  2004  346D               	retlw	109	;'m'
  2181  2005  346D               	retlw	109	;'m'
  2182  2006  3475               	retlw	117	;'u'
  2183  2007  346E               	retlw	110	;'n'
  2184  2008  3469               	retlw	105	;'i'
  2185  2009  3463               	retlw	99	;'c'
  2186  200A  3461               	retlw	97	;'a'
  2187  200B  3474               	retlw	116	;'t'
  2188  200C  3469               	retlw	105	;'i'
  2189  200D  346F               	retlw	111	;'o'
  2190  200E  346E               	retlw	110	;'n'
  2191  200F  3420               	retlw	32	;' '
  2192  2010  3477               	retlw	119	;'w'
  2193  2011  3469               	retlw	105	;'i'
  2194  2012  3474               	retlw	116	;'t'
  2195  2013  3468               	retlw	104	;'h'
  2196  2014  3420               	retlw	32	;' '
  2197  2015  3442               	retlw	66	;'B'
  2198  2016  3451               	retlw	81	;'Q'
  2199  2017  3437               	retlw	55	;'7'
  2200  2018  3436               	retlw	54	;'6'
  2201  2019  3439               	retlw	57	;'9'
  2202  201A  3432               	retlw	50	;'2'
  2203  201B  3430               	retlw	48	;'0'
  2204  201C  3420               	retlw	32	;' '
  2205  201D  3441               	retlw	65	;'A'
  2206  201E  3446               	retlw	70	;'F'
  2207  201F  3445               	retlw	69	;'E'
  2208  2020  3420               	retlw	32	;' '
  2209  2021  3465               	retlw	101	;'e'
  2210  2022  3473               	retlw	115	;'s'
  2211  2023  3474               	retlw	116	;'t'
  2212  2024  3461               	retlw	97	;'a'
  2213  2025  3462               	retlw	98	;'b'
  2214  2026  346C               	retlw	108	;'l'
  2215  2027  3469               	retlw	105	;'i'
  2216  2028  3473               	retlw	115	;'s'
  2217  2029  3468               	retlw	104	;'h'
  2218  202A  3465               	retlw	101	;'e'
  2219  202B  3464               	retlw	100	;'d'
  2220  202C  3421               	retlw	33	;'!'
  2221  202D  340A               	retlw	10
  2222  202E  340D               	retlw	13
  2223  202F  3400               	retlw	0
  2224                           
  2225                           	psect	stringtext8
  2226  2030                     __pstringtext8:	
  2227  2030                     STR_4:	
  2228  2030  3441               	retlw	65	;'A'
  2229  2031  3474               	retlw	116	;'t'
  2230  2032  3474               	retlw	116	;'t'
  2231  2033  3465               	retlw	101	;'e'
  2232  2034  346D               	retlw	109	;'m'
  2233  2035  3470               	retlw	112	;'p'
  2234  2036  3474               	retlw	116	;'t'
  2235  2037  3420               	retlw	32	;' '
  2236  2038  3474               	retlw	116	;'t'
  2237  2039  346F               	retlw	111	;'o'
  2238  203A  3420               	retlw	32	;' '
  2239  203B  3473               	retlw	115	;'s'
  2240  203C  3465               	retlw	101	;'e'
  2241  203D  3474               	retlw	116	;'t'
  2242  203E  3420               	retlw	32	;' '
  2243  203F  3473               	retlw	115	;'s'
  2244  2040  3479               	retlw	121	;'y'
  2245  2041  3473               	retlw	115	;'s'
  2246  2042  3474               	retlw	116	;'t'
  2247  2043  3465               	retlw	101	;'e'
  2248  2044  346D               	retlw	109	;'m'
  2249  2045  3420               	retlw	32	;' '
  2250  2046  3470               	retlw	112	;'p'
  2251  2047  3461               	retlw	97	;'a'
  2252  2048  3472               	retlw	114	;'r'
  2253  2049  3461               	retlw	97	;'a'
  2254  204A  346D               	retlw	109	;'m'
  2255  204B  3465               	retlw	101	;'e'
  2256  204C  3474               	retlw	116	;'t'
  2257  204D  3465               	retlw	101	;'e'
  2258  204E  3472               	retlw	114	;'r'
  2259  204F  3473               	retlw	115	;'s'
  2260  2050  3420               	retlw	32	;' '
  2261  2051  3474               	retlw	116	;'t'
  2262  2052  346F               	retlw	111	;'o'
  2263  2053  3420               	retlw	32	;' '
  2264  2054  3441               	retlw	65	;'A'
  2265  2055  3446               	retlw	70	;'F'
  2266  2056  3445               	retlw	69	;'E'
  2267  2057  342E               	retlw	46	;'.'
  2268  2058  342E               	retlw	46	;'.'
  2269  2059  342E               	retlw	46	;'.'
  2270  205A  340A               	retlw	10
  2271  205B  340D               	retlw	13
  2272  205C  3400               	retlw	0
  2273                           
  2274                           	psect	stringtext9
  2275  205D                     __pstringtext9:	
  2276  205D                     STR_6:	
  2277  205D  344E               	retlw	78	;'N'
  2278  205E  346F               	retlw	111	;'o'
  2279  205F  3477               	retlw	119	;'w'
  2280  2060  3420               	retlw	32	;' '
  2281  2061  3472               	retlw	114	;'r'
  2282  2062  3465               	retlw	101	;'e'
  2283  2063  3461               	retlw	97	;'a'
  2284  2064  3464               	retlw	100	;'d'
  2285  2065  3469               	retlw	105	;'i'
  2286  2066  346E               	retlw	110	;'n'
  2287  2067  3467               	retlw	103	;'g'
  2288  2068  3420               	retlw	32	;' '
  2289  2069  3441               	retlw	65	;'A'
  2290  206A  3446               	retlw	70	;'F'
  2291  206B  3445               	retlw	69	;'E'
  2292  206C  3420               	retlw	32	;' '
  2293  206D  3464               	retlw	100	;'d'
  2294  206E  3461               	retlw	97	;'a'
  2295  206F  3474               	retlw	116	;'t'
  2296  2070  3461               	retlw	97	;'a'
  2297  2071  3420               	retlw	32	;' '
  2298  2072  3461               	retlw	97	;'a'
  2299  2073  3474               	retlw	116	;'t'
  2300  2074  3420               	retlw	32	;' '
  2301  2075  3472               	retlw	114	;'r'
  2302  2076  3465               	retlw	101	;'e'
  2303  2077  3467               	retlw	103	;'g'
  2304  2078  3475               	retlw	117	;'u'
  2305  2079  346C               	retlw	108	;'l'
  2306  207A  3461               	retlw	97	;'a'
  2307  207B  3472               	retlw	114	;'r'
  2308  207C  3420               	retlw	32	;' '
  2309  207D  3469               	retlw	105	;'i'
  2310  207E  346E               	retlw	110	;'n'
  2311  207F  3474               	retlw	116	;'t'
  2312  2080  3465               	retlw	101	;'e'
  2313  2081  3472               	retlw	114	;'r'
  2314  2082  3476               	retlw	118	;'v'
  2315  2083  3461               	retlw	97	;'a'
  2316  2084  346C               	retlw	108	;'l'
  2317  2085  3473               	retlw	115	;'s'
  2318  2086  342E               	retlw	46	;'.'
  2319  2087  340A               	retlw	10
  2320  2088  340D               	retlw	13
  2321  2089  3400               	retlw	0
  2322                           
  2323                           	psect	stringtext10
  2324  208A                     __pstringtext10:	
  2325  208A                     STR_3:	
  2326  208A  344F               	retlw	79	;'O'
  2327  208B  3462               	retlw	98	;'b'
  2328  208C  3474               	retlw	116	;'t'
  2329  208D  3461               	retlw	97	;'a'
  2330  208E  3469               	retlw	105	;'i'
  2331  208F  346E               	retlw	110	;'n'
  2332  2090  3465               	retlw	101	;'e'
  2333  2091  3464               	retlw	100	;'d'
  2334  2092  3420               	retlw	32	;' '
  2335  2093  3461               	retlw	97	;'a'
  2336  2094  3464               	retlw	100	;'d'
  2337  2095  3463               	retlw	99	;'c'
  2338  2096  344F               	retlw	79	;'O'
  2339  2097  3466               	retlw	102	;'f'
  2340  2098  3466               	retlw	102	;'f'
  2341  2099  3473               	retlw	115	;'s'
  2342  209A  3465               	retlw	101	;'e'
  2343  209B  3474               	retlw	116	;'t'
  2344  209C  3420               	retlw	32	;' '
  2345  209D  343D               	retlw	61	;'='
  2346  209E  3420               	retlw	32	;' '
  2347  209F  3425               	retlw	37	;'%'
  2348  20A0  3469               	retlw	105	;'i'
  2349  20A1  3420               	retlw	32	;' '
  2350  20A2  3461               	retlw	97	;'a'
  2351  20A3  346E               	retlw	110	;'n'
  2352  20A4  3464               	retlw	100	;'d'
  2353  20A5  3420               	retlw	32	;' '
  2354  20A6  3461               	retlw	97	;'a'
  2355  20A7  3464               	retlw	100	;'d'
  2356  20A8  3463               	retlw	99	;'c'
  2357  20A9  3447               	retlw	71	;'G'
  2358  20AA  3461               	retlw	97	;'a'
  2359  20AB  3469               	retlw	105	;'i'
  2360  20AC  346E               	retlw	110	;'n'
  2361  20AD  3420               	retlw	32	;' '
  2362  20AE  343D               	retlw	61	;'='
  2363  20AF  3420               	retlw	32	;' '
  2364  20B0  3425               	retlw	37	;'%'
  2365  20B1  3469               	retlw	105	;'i'
  2366  20B2  340A               	retlw	10
  2367  20B3  340D               	retlw	13
  2368  20B4  3400               	retlw	0
  2369                           
  2370                           	psect	stringtext11
  2371  20B5                     __pstringtext11:	
  2372  20B5                     STR_5:	
  2373  20B5  3449               	retlw	73	;'I'
  2374  20B6  346E               	retlw	110	;'n'
  2375  20B7  3469               	retlw	105	;'i'
  2376  20B8  3474               	retlw	116	;'t'
  2377  20B9  3469               	retlw	105	;'i'
  2378  20BA  3461               	retlw	97	;'a'
  2379  20BB  346C               	retlw	108	;'l'
  2380  20BC  3420               	retlw	32	;' '
  2381  20BD  3470               	retlw	112	;'p'
  2382  20BE  3461               	retlw	97	;'a'
  2383  20BF  3472               	retlw	114	;'r'
  2384  20C0  3461               	retlw	97	;'a'
  2385  20C1  346D               	retlw	109	;'m'
  2386  20C2  3465               	retlw	101	;'e'
  2387  20C3  3474               	retlw	116	;'t'
  2388  20C4  3465               	retlw	101	;'e'
  2389  20C5  3472               	retlw	114	;'r'
  2390  20C6  3473               	retlw	115	;'s'
  2391  20C7  3420               	retlw	32	;' '
  2392  20C8  3466               	retlw	102	;'f'
  2393  20C9  346F               	retlw	111	;'o'
  2394  20CA  3472               	retlw	114	;'r'
  2395  20CB  3420               	retlw	32	;' '
  2396  20CC  3442               	retlw	66	;'B'
  2397  20CD  3451               	retlw	81	;'Q'
  2398  20CE  3437               	retlw	55	;'7'
  2399  20CF  3436               	retlw	54	;'6'
  2400  20D0  3439               	retlw	57	;'9'
  2401  20D1  3432               	retlw	50	;'2'
  2402  20D2  3430               	retlw	48	;'0'
  2403  20D3  3420               	retlw	32	;' '
  2404  20D4  3441               	retlw	65	;'A'
  2405  20D5  3446               	retlw	70	;'F'
  2406  20D6  3445               	retlw	69	;'E'
  2407  20D7  3420               	retlw	32	;' '
  2408  20D8  3473               	retlw	115	;'s'
  2409  20D9  3465               	retlw	101	;'e'
  2410  20DA  3474               	retlw	116	;'t'
  2411  20DB  3421               	retlw	33	;'!'
  2412  20DC  340A               	retlw	10
  2413  20DD  340D               	retlw	13
  2414  20DE  3400               	retlw	0
  2415                           
  2416                           	psect	stringtext12
  2417  20DF                     __pstringtext12:	
  2418  20DF                     STR_1:	
  2419  20DF  3441               	retlw	65	;'A'
  2420  20E0  3474               	retlw	116	;'t'
  2421  20E1  3474               	retlw	116	;'t'
  2422  20E2  3465               	retlw	101	;'e'
  2423  20E3  346D               	retlw	109	;'m'
  2424  20E4  3470               	retlw	112	;'p'
  2425  20E5  3474               	retlw	116	;'t'
  2426  20E6  3469               	retlw	105	;'i'
  2427  20E7  346E               	retlw	110	;'n'
  2428  20E8  3467               	retlw	103	;'g'
  2429  20E9  3420               	retlw	32	;' '
  2430  20EA  3474               	retlw	116	;'t'
  2431  20EB  346F               	retlw	111	;'o'
  2432  20EC  3420               	retlw	32	;' '
  2433  20ED  3463               	retlw	99	;'c'
  2434  20EE  346F               	retlw	111	;'o'
  2435  20EF  346D               	retlw	109	;'m'
  2436  20F0  346D               	retlw	109	;'m'
  2437  20F1  3475               	retlw	117	;'u'
  2438  20F2  346E               	retlw	110	;'n'
  2439  20F3  3469               	retlw	105	;'i'
  2440  20F4  3463               	retlw	99	;'c'
  2441  20F5  3461               	retlw	97	;'a'
  2442  20F6  3474               	retlw	116	;'t'
  2443  20F7  3465               	retlw	101	;'e'
  2444  20F8  3420               	retlw	32	;' '
  2445  20F9  3477               	retlw	119	;'w'
  2446  20FA  3469               	retlw	105	;'i'
  2447  20FB  3474               	retlw	116	;'t'
  2448  20FC  3468               	retlw	104	;'h'
  2449  20FD  3420               	retlw	32	;' '
  2450  20FE  3441               	retlw	65	;'A'
  2451  20FF  3446               	retlw	70	;'F'
  2452  2100  3445               	retlw	69	;'E'
  2453  2101  342E               	retlw	46	;'.'
  2454  2102  342E               	retlw	46	;'.'
  2455  2103  342E               	retlw	46	;'.'
  2456  2104  340A               	retlw	10
  2457  2105  340D               	retlw	13
  2458  2106  3400               	retlw	0
  2459                           
  2460                           	psect	stringtext13
  2461  215F                     __pstringtext13:	
  2462  215F                     STR_83:	
  2463  215F  3468               	retlw	104	;'h'
  2464  2160  3468               	retlw	104	;'h'
  2465  2161  3458               	retlw	88	;'X'
  2466  2162  3400               	retlw	0
  2467                           
  2468                           	psect	stringtext14
  2469  2163                     __pstringtext14:	
  2470  2163                     STR_7:	
  2471  2163  3468               	retlw	104	;'h'
  2472  2164  3468               	retlw	104	;'h'
  2473  2165  3464               	retlw	100	;'d'
  2474  2166  3400               	retlw	0
  2475                           
  2476                           	psect	stringtext15
  2477  2167                     __pstringtext15:	
  2478  2167                     STR_11:	
  2479  2167  3468               	retlw	104	;'h'
  2480  2168  3468               	retlw	104	;'h'
  2481  2169  3469               	retlw	105	;'i'
  2482  216A  3400               	retlw	0
  2483                           
  2484                           	psect	stringtext16
  2485  216B                     __pstringtext16:	
  2486  216B                     STR_49:	
  2487  216B  3468               	retlw	104	;'h'
  2488  216C  3468               	retlw	104	;'h'
  2489  216D  346E               	retlw	110	;'n'
  2490  216E  3400               	retlw	0
  2491                           
  2492                           	psect	stringtext17
  2493  216F                     __pstringtext17:	
  2494  216F                     STR_34:	
  2495  216F  3468               	retlw	104	;'h'
  2496  2170  3468               	retlw	104	;'h'
  2497  2171  346F               	retlw	111	;'o'
  2498  2172  3400               	retlw	0
  2499                           
  2500                           	psect	stringtext18
  2501  2173                     __pstringtext18:	
  2502  2173                     STR_64:	
  2503  2173  3468               	retlw	104	;'h'
  2504  2174  3468               	retlw	104	;'h'
  2505  2175  3475               	retlw	117	;'u'
  2506  2176  3400               	retlw	0
  2507                           
  2508                           	psect	stringtext19
  2509  2177                     __pstringtext19:	
  2510  2177                     STR_79:	
  2511  2177  3468               	retlw	104	;'h'
  2512  2178  3468               	retlw	104	;'h'
  2513  2179  3478               	retlw	120	;'x'
  2514  217A  3400               	retlw	0
  2515                           
  2516                           	psect	stringtext20
  2517  217B                     __pstringtext20:	
  2518  217B                     STR_101:	
  2519  217B  347A               	retlw	122	;'z'
  2520  217C  3458               	retlw	88	;'X'
  2521  217D  3400               	retlw	0
  2522                           
  2523                           	psect	stringtext21
  2524  217E                     __pstringtext21:	
  2525  217E                     STR_25:	
  2526  217E  347A               	retlw	122	;'z'
  2527  217F  3464               	retlw	100	;'d'
  2528  2180  3400               	retlw	0
  2529                           
  2530                           	psect	stringtext22
  2531  2181                     __pstringtext22:	
  2532  2181                     STR_29:	
  2533  2181  347A               	retlw	122	;'z'
  2534  2182  3469               	retlw	105	;'i'
  2535  2183  3400               	retlw	0
  2536                           
  2537                           	psect	stringtext23
  2538  2184                     __pstringtext23:	
  2539  2184                     STR_59:	
  2540  2184  347A               	retlw	122	;'z'
  2541  2185  346E               	retlw	110	;'n'
  2542  2186  3400               	retlw	0
  2543                           
  2544                           	psect	stringtext24
  2545  2187                     __pstringtext24:	
  2546  2187                     STR_44:	
  2547  2187  347A               	retlw	122	;'z'
  2548  2188  346F               	retlw	111	;'o'
  2549  2189  3400               	retlw	0
  2550                           
  2551                           	psect	stringtext25
  2552  218A                     __pstringtext25:	
  2553  218A                     STR_74:	
  2554  218A  347A               	retlw	122	;'z'
  2555  218B  3475               	retlw	117	;'u'
  2556  218C  3400               	retlw	0
  2557                           
  2558                           	psect	stringtext26
  2559  218D                     __pstringtext26:	
  2560  218D                     STR_97:	
  2561  218D  347A               	retlw	122	;'z'
  2562  218E  3478               	retlw	120	;'x'
  2563  218F  3400               	retlw	0
  2564                           
  2565                           	psect	stringtext27
  2566  0000                     __pstringtext27:	
  2567  2160                     
  2568                           ; #config settings
  2569  0000                     
  2570                           	psect	cinit
  2571  0020                     start_initialization:	
  2572  0020                     __initialization:		;BIGRAM
  2573                           
  2574                           ; Initialize objects allocated to BANK2
  2575  0020  30A3               	movlw	low __pidataBANK2
  2576  0021  0084               	movwf	4
  2577  0022  309D               	movlw	(high __pidataBANK2)| (0+128)
  2578  0023  0085               	movwf	5
  2579  0024  0022               	movlb	2	; select bank2
  2580  0025  0012               	moviw fsr0++
  2581  0026  00CA               	movwf	__pdataBANK2& (0+127)
  2582  0027  0012               	moviw fsr0++
  2583  0028  00CB               	movwf	(__pdataBANK2+1)& (0+127)
  2584  0029  0012               	moviw fsr0++
  2585  002A  00CC               	movwf	(__pdataBANK2+2)& (0+127)
  2586  002B  0012               	moviw fsr0++
  2587  002C  00CD               	movwf	(__pdataBANK2+3)& (0+127)
  2588  002D  0012               	moviw fsr0++
  2589  002E  00CE               	movwf	(__pdataBANK2+4)& (0+127)
  2590  002F  0012               	moviw fsr0++
  2591  0030  00CF               	movwf	(__pdataBANK2+5)& (0+127)
  2592  0031  0012               	moviw fsr0++
  2593  0032  00D0               	movwf	(__pdataBANK2+6)& (0+127)
  2594                           
  2595                           ; Clear objects allocated to BIGRAM
  2596  0033  3071               	movlw	low (0+10097)
  2597  0034  0084               	movwf	4
  2598  0035  3027               	movlw	high (0+10097)
  2599  0036  0085               	movwf	5
  2600  0037  307F               	movlw	127
  2601  0038  00FE               	movwf	btemp
  2602  0039  3000               	movlw	0
  2603  003A  00FF               	movwf	btemp+1
  2604  003B  319D  25F2  3180   	fcall	clear_ram0
  2605                           
  2606                           ; Clear objects allocated to COMMON
  2607  003E  01FC               	clrf	__pbssCOMMON& (0+127)
  2608                           
  2609                           ; Clear objects allocated to BANK1
  2610  003F  30DA               	movlw	low __pbssBANK1
  2611  0040  0084               	movwf	4
  2612  0041  3000               	movlw	high __pbssBANK1
  2613  0042  0085               	movwf	5
  2614  0043  3011               	movlw	17
  2615  0044  00FE               	movwf	btemp
  2616  0045  3000               	movlw	0
  2617  0046  00FF               	movwf	btemp+1
  2618  0047  319D  25F2  3180   	fcall	clear_ram0
  2619                           
  2620                           ; Clear objects allocated to BANK2
  2621  004A  3020               	movlw	low __pbssBANK2
  2622  004B  0084               	movwf	4
  2623  004C  3001               	movlw	high __pbssBANK2
  2624  004D  0085               	movwf	5
  2625  004E  302A               	movlw	42
  2626  004F  00FE               	movwf	btemp
  2627  0050  3000               	movlw	0
  2628  0051  00FF               	movwf	btemp+1
  2629  0052  319D  25F2         	fcall	clear_ram0
  2630  0054                     end_of_initialization:	
  2631                           ;End of C runtime variable initialization code
  2632                           
  2633  0054                     __end_of__initialization:	
  2634  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2635  0055  0020               	movlb	0
  2636  0056  319F  2FA7         	ljmp	_main	;jump to C main() function
  2637                           
  2638                           	psect	bssCOMMON
  2639  007C                     __pbssCOMMON:	
  2640  007C                     _toggleColor:	
  2641  007C                     	ds	1
  2642                           
  2643                           	psect	bssBANK1
  2644  00DA                     __pbssBANK1:	
  2645  00DA                     _errno:	
  2646  00DA                     	ds	2
  2647  00DC                     _nout:	
  2648  00DC                     	ds	2
  2649  00DE                     _width:	
  2650  00DE                     	ds	2
  2651  00E0                     _prec:	
  2652  00E0                     	ds	2
  2653  00E2                     _flags:	
  2654  00E2                     	ds	2
  2655  00E4                     _adcOffset:	
  2656  00E4                     	ds	2
  2657  00E6                     _adcGain:	
  2658  00E6                     	ds	2
  2659  00E8                     myIsr@count:	
  2660  00E8                     	ds	1
  2661  00E9                     _tmr1_flag:	
  2662  00E9                     	ds	1
  2663  00EA                     _currState:	
  2664  00EA                     	ds	1
  2665                           
  2666                           	psect	bssBANK2
  2667  0120                     __pbssBANK2:	
  2668  0120                     _cellVoltages:	
  2669  0120                     	ds	10
  2670  012A                     _dbuf:	
  2671  012A                     	ds	32
  2672                           
  2673                           	psect	dataBANK2
  2674  014A                     __pdataBANK2:	
  2675  014A                     stoa@F1152:	
  2676  014A                     	ds	7
  2677                           
  2678                           	psect	clrtext
  2679  1DF2                     clear_ram0:	
  2680                           ;	Called with FSR0 containing the base address, and
  2681                           ;	btemp/btemp+1 has the size to clear
  2682                           
  2683  1DF2  0064               	clrwdt	;clear the watchdog before getting into this loop
  2684  1DF3                     clrloop0:	
  2685  1DF3  0180               	clrf	0	;clear RAM location pointed to by FSR
  2686  1DF4  3101               	addfsr 0,1
  2687  1DF5  3001               	movlw	1
  2688  1DF6  02FE               	subwf	126,f
  2689  1DF7  3000               	movlw	0
  2690  1DF8  3BFF               	subwfb	127,f
  2691  1DF9  087F               	movf	127,w
  2692  1DFA  047E               	iorwf	126,w
  2693  1DFB  1903               	btfsc	3,2
  2694  1DFC  3400               	retlw	0	;all done for this memory range, return
  2695  1DFD  2DF3               	goto	clrloop0	;have we reached the end yet?
  2696                           
  2697                           	psect	cstackBANK1
  2698  00A0                     __pcstackBANK1:	
  2699  00A0                     vfpfcnvrt@cp:	
  2700                           
  2701                           ; 1 bytes @ 0x0
  2702  00A0                     	ds	1
  2703  00A1                     vfpfcnvrt@done:	
  2704                           
  2705                           ; 2 bytes @ 0x1
  2706  00A1                     	ds	2
  2707  00A3                     _vfpfcnvrt$887:	
  2708                           
  2709                           ; 2 bytes @ 0x3
  2710  00A3                     	ds	2
  2711  00A5                     _vfpfcnvrt$888:	
  2712                           
  2713                           ; 2 bytes @ 0x5
  2714  00A5                     	ds	2
  2715  00A7                     vfpfcnvrt@ll:	
  2716                           
  2717                           ; 8 bytes @ 0x7
  2718  00A7                     	ds	8
  2719  00AF                     vfpfcnvrt@vp:	
  2720                           
  2721                           ; 1 bytes @ 0xF
  2722  00AF                     	ds	1
  2723  00B0                     vfpfcnvrt@c:	
  2724                           
  2725                           ; 1 bytes @ 0x10
  2726  00B0                     	ds	1
  2727  00B1                     vfpfcnvrt@llu:	
  2728                           
  2729                           ; 8 bytes @ 0x11
  2730  00B1                     	ds	8
  2731  00B9                     ?_vsnprintf:	
  2732  00B9                     vsnprintf@s:	
  2733                           ; 2 bytes @ 0x19
  2734                           
  2735                           
  2736                           ; 2 bytes @ 0x19
  2737  00B9                     	ds	2
  2738  00BB                     vsnprintf@n:	
  2739                           
  2740                           ; 2 bytes @ 0x1B
  2741  00BB                     	ds	2
  2742  00BD                     vsnprintf@fmt:	
  2743                           
  2744                           ; 2 bytes @ 0x1D
  2745  00BD                     	ds	2
  2746  00BF                     vsnprintf@ap:	
  2747                           
  2748                           ; 1 bytes @ 0x1F
  2749  00BF                     	ds	1
  2750  00C0                     _vsnprintf$1431:	
  2751                           
  2752                           ; 2 bytes @ 0x20
  2753  00C0                     	ds	2
  2754  00C2                     vsnprintf@cnt:	
  2755                           
  2756                           ; 2 bytes @ 0x22
  2757  00C2                     	ds	2
  2758  00C4                     vsnprintf@f:	
  2759                           
  2760                           ; 6 bytes @ 0x24
  2761  00C4                     	ds	6
  2762  00CA                     ?_snprintf:	
  2763  00CA                     snprintf@s:	
  2764                           ; 2 bytes @ 0x2A
  2765                           
  2766                           
  2767                           ; 2 bytes @ 0x2A
  2768  00CA                     	ds	2
  2769  00CC                     snprintf@n:	
  2770                           
  2771                           ; 2 bytes @ 0x2C
  2772  00CC                     	ds	2
  2773  00CE                     snprintf@fmt:	
  2774                           
  2775                           ; 2 bytes @ 0x2E
  2776  00CE                     	ds	8
  2777  00D6                     snprintf@ap:	
  2778                           
  2779                           ; 1 bytes @ 0x36
  2780  00D6                     	ds	1
  2781  00D7                     ??_statemachine:	
  2782                           
  2783                           ; 1 bytes @ 0x37
  2784  00D7                     	ds	2
  2785  00D9                     ??_main:	
  2786                           
  2787                           ; 1 bytes @ 0x39
  2788  00D9                     	ds	1
  2789                           
  2790                           	psect	cstackCOMMON
  2791  0070                     __pcstackCOMMON:	
  2792  0070                     ?_initClock:	
  2793  0070                     ?_init_GPIO:	
  2794                           ; 1 bytes @ 0x0
  2795                           
  2796  0070                     ?_init_I2C:	
  2797                           ; 1 bytes @ 0x0
  2798                           
  2799  0070                     ?_init_TMR1:	
  2800                           ; 1 bytes @ 0x0
  2801                           
  2802  0070                     ?_init_RGB:	
  2803                           ; 1 bytes @ 0x0
  2804                           
  2805  0070                     ?_statemachine:	
  2806                           ; 1 bytes @ 0x0
  2807                           
  2808  0070                     ?_RGB_AWAIT_AFE_CONN:	
  2809                           ; 1 bytes @ 0x0
  2810                           
  2811  0070                     ?_init_AFE:	
  2812                           ; 1 bytes @ 0x0
  2813                           
  2814  0070                     ?_internal_16:	
  2815                           ; 1 bytes @ 0x0
  2816                           
  2817  0070                     ?_putch:	
  2818                           ; 1 bytes @ 0x0
  2819                           
  2820  0070                     ?_myIsr:	
  2821                           ; 1 bytes @ 0x0
  2822                           
  2823  0070                     ??_myIsr:	
  2824                           ; 1 bytes @ 0x0
  2825                           
  2826  0070                     ?_main:	
  2827                           ; 1 bytes @ 0x0
  2828                           
  2829  0070                     ?_EUSART_Write:	
  2830                           ; 1 bytes @ 0x0
  2831                           
  2832  0070                     ?_send_I2C_startBit:	
  2833                           ; 1 bytes @ 0x0
  2834                           
  2835  0070                     ?_send_I2C_stopBit:	
  2836                           ; 1 bytes @ 0x0
  2837                           
  2838  0070                     ?_send_I2C_NACK:	
  2839                           ; 1 bytes @ 0x0
  2840                           
  2841  0070                     putch@c:	
  2842                           ; 1 bytes @ 0x0
  2843                           
  2844                           
  2845                           ; 1 bytes @ 0x0
  2846  0070                     	ds	1
  2847  0071                     ??_initClock:	
  2848  0071                     ??_init_GPIO:	
  2849                           ; 1 bytes @ 0x1
  2850                           
  2851  0071                     ??_init_I2C:	
  2852                           ; 1 bytes @ 0x1
  2853                           
  2854  0071                     ??_init_TMR1:	
  2855                           ; 1 bytes @ 0x1
  2856                           
  2857  0071                     ??_init_RGB:	
  2858                           ; 1 bytes @ 0x1
  2859                           
  2860  0071                     ?_RGB_color:	
  2861                           ; 1 bytes @ 0x1
  2862                           
  2863  0071                     ??_init_AFE:	
  2864                           ; 1 bytes @ 0x1
  2865                           
  2866  0071                     ??_internal_16:	
  2867                           ; 1 bytes @ 0x1
  2868                           
  2869  0071                     ??_putch:	
  2870                           ; 1 bytes @ 0x1
  2871                           
  2872  0071                     ??_EUSART_Write:	
  2873                           ; 1 bytes @ 0x1
  2874                           
  2875  0071                     ?_send_I2C_data:	
  2876                           ; 1 bytes @ 0x1
  2877                           
  2878  0071                     ?_send_I2C_controlByte:	
  2879                           ; 1 bytes @ 0x1
  2880                           
  2881  0071                     ??_send_I2C_startBit:	
  2882                           ; 1 bytes @ 0x1
  2883                           
  2884  0071                     ??_send_I2C_stopBit:	
  2885                           ; 1 bytes @ 0x1
  2886                           
  2887  0071                     ??_send_I2C_NACK:	
  2888                           ; 1 bytes @ 0x1
  2889                           
  2890  0071                     ??___aodiv:	
  2891                           ; 1 bytes @ 0x1
  2892                           
  2893  0071                     ??___aomod:	
  2894                           ; 1 bytes @ 0x1
  2895                           
  2896  0071                     ??___lodiv:	
  2897                           ; 1 bytes @ 0x1
  2898                           
  2899  0071                     ??___lomod:	
  2900                           ; 1 bytes @ 0x1
  2901                           
  2902  0071                     ?_fputc:	
  2903                           ; 1 bytes @ 0x1
  2904                           
  2905  0071                     ?_strlen:	
  2906                           ; 2 bytes @ 0x1
  2907                           
  2908  0071                     ?_isupper:	
  2909                           ; 2 bytes @ 0x1
  2910                           
  2911  0071                     ?_isalpha:	
  2912                           ; 2 bytes @ 0x1
  2913                           
  2914  0071                     ?_isdigit:	
  2915                           ; 2 bytes @ 0x1
  2916                           
  2917  0071                     ?_strncmp:	
  2918                           ; 2 bytes @ 0x1
  2919                           
  2920  0071                     ?_isspace:	
  2921                           ; 2 bytes @ 0x1
  2922                           
  2923  0071                     ?_islower:	
  2924                           ; 2 bytes @ 0x1
  2925                           
  2926  0071                     ?_read_I2C_data:	
  2927                           ; 2 bytes @ 0x1
  2928                           
  2929  0071                     ?___wmul:	
  2930                           ; 2 bytes @ 0x1
  2931                           
  2932  0071                     ?___aldiv:	
  2933                           ; 2 bytes @ 0x1
  2934                           
  2935  0071                     EUSART_Write@txData:	
  2936                           ; 4 bytes @ 0x1
  2937                           
  2938  0071                     send_I2C_data@databyte:	
  2939                           ; 1 bytes @ 0x1
  2940                           
  2941  0071                     send_I2C_controlByte@BlockAddress:	
  2942                           ; 2 bytes @ 0x1
  2943                           
  2944  0071                     RGB_color@color:	
  2945                           ; 2 bytes @ 0x1
  2946                           
  2947  0071                     ___wmul@multiplier:	
  2948                           ; 2 bytes @ 0x1
  2949                           
  2950  0071                     isalpha@c:	
  2951                           ; 2 bytes @ 0x1
  2952                           
  2953  0071                     isdigit@c:	
  2954                           ; 2 bytes @ 0x1
  2955                           
  2956  0071                     isspace@c:	
  2957                           ; 2 bytes @ 0x1
  2958                           
  2959  0071                     isupper@c:	
  2960                           ; 2 bytes @ 0x1
  2961                           
  2962  0071                     fputc@c:	
  2963                           ; 2 bytes @ 0x1
  2964                           
  2965  0071                     strlen@s:	
  2966                           ; 2 bytes @ 0x1
  2967                           
  2968  0071                     strncmp@_l:	
  2969                           ; 2 bytes @ 0x1
  2970                           
  2971  0071                     islower@c:	
  2972                           ; 2 bytes @ 0x1
  2973                           
  2974  0071                     ___aldiv@divisor:	
  2975                           ; 2 bytes @ 0x1
  2976                           
  2977                           
  2978                           ; 4 bytes @ 0x1
  2979  0071                     	ds	1
  2980  0072                     ?_EUSART_Write_Text:	
  2981  0072                     ___aodiv@counter:	
  2982                           ; 1 bytes @ 0x2
  2983                           
  2984  0072                     ___aomod@counter:	
  2985                           ; 1 bytes @ 0x2
  2986                           
  2987  0072                     ___lomod@counter:	
  2988                           ; 1 bytes @ 0x2
  2989                           
  2990  0072                     EUSART_Write_Text@text:	
  2991                           ; 1 bytes @ 0x2
  2992                           
  2993  0072                     ___lodiv@quotient:	
  2994                           ; 2 bytes @ 0x2
  2995                           
  2996                           
  2997                           ; 8 bytes @ 0x2
  2998  0072                     	ds	1
  2999  0073                     ??_RGB_AWAIT_AFE_CONN:	
  3000  0073                     ??_RGB_color:	
  3001                           ; 1 bytes @ 0x3
  3002                           
  3003  0073                     ??_strlen:	
  3004                           ; 1 bytes @ 0x3
  3005                           
  3006  0073                     ??_isupper:	
  3007                           ; 1 bytes @ 0x3
  3008                           
  3009  0073                     ??_isalpha:	
  3010                           ; 1 bytes @ 0x3
  3011                           
  3012  0073                     ??_isdigit:	
  3013                           ; 1 bytes @ 0x3
  3014                           
  3015  0073                     ??_isspace:	
  3016                           ; 1 bytes @ 0x3
  3017                           
  3018  0073                     ??_islower:	
  3019                           ; 1 bytes @ 0x3
  3020                           
  3021  0073                     ??_send_I2C_data:	
  3022                           ; 1 bytes @ 0x3
  3023                           
  3024  0073                     ??_read_I2C_data:	
  3025                           ; 1 bytes @ 0x3
  3026                           
  3027  0073                     ___aodiv@sign:	
  3028                           ; 1 bytes @ 0x3
  3029                           
  3030  0073                     ___aomod@sign:	
  3031                           ; 1 bytes @ 0x3
  3032                           
  3033  0073                     send_I2C_controlByte@RW_bit:	
  3034                           ; 1 bytes @ 0x3
  3035                           
  3036  0073                     ___wmul@multiplicand:	
  3037                           ; 2 bytes @ 0x3
  3038                           
  3039  0073                     fputc@fp:	
  3040                           ; 2 bytes @ 0x3
  3041                           
  3042  0073                     strlen@a:	
  3043                           ; 2 bytes @ 0x3
  3044                           
  3045  0073                     strncmp@_r:	
  3046                           ; 2 bytes @ 0x3
  3047                           
  3048                           
  3049                           ; 2 bytes @ 0x3
  3050  0073                     	ds	1
  3051  0074                     ??_EUSART_Write_Text:	
  3052  0074                     ?_abs:	
  3053                           ; 1 bytes @ 0x4
  3054                           
  3055  0074                     abs@a:	
  3056                           ; 2 bytes @ 0x4
  3057                           
  3058  0074                     ___aodiv@quotient:	
  3059                           ; 2 bytes @ 0x4
  3060                           
  3061                           
  3062                           ; 8 bytes @ 0x4
  3063  0074                     	ds	1
  3064  0075                     ??_fputc:	
  3065  0075                     ??_send_I2C_controlByte:	
  3066                           ; 1 bytes @ 0x5
  3067                           
  3068  0075                     ?_I2C_writeRegister:	
  3069                           ; 1 bytes @ 0x5
  3070                           
  3071  0075                     ??___wmul:	
  3072                           ; 1 bytes @ 0x5
  3073                           
  3074  0075                     ?_readRegister:	
  3075                           ; 1 bytes @ 0x5
  3076                           
  3077  0075                     _isspace$1314:	
  3078                           ; 2 bytes @ 0x5
  3079                           
  3080  0075                     EUSART_Write_Text@i:	
  3081                           ; 1 bytes @ 0x5
  3082                           
  3083  0075                     I2C_writeRegister@slaveAddress:	
  3084                           ; 2 bytes @ 0x5
  3085                           
  3086  0075                     readRegister@slaveAddress:	
  3087                           ; 2 bytes @ 0x5
  3088                           
  3089  0075                     ___wmul@product:	
  3090                           ; 2 bytes @ 0x5
  3091                           
  3092  0075                     strncmp@n:	
  3093                           ; 2 bytes @ 0x5
  3094                           
  3095  0075                     ___aldiv@dividend:	
  3096                           ; 2 bytes @ 0x5
  3097                           
  3098                           
  3099                           ; 4 bytes @ 0x5
  3100  0075                     	ds	1
  3101  0076                     ??_abs:	
  3102                           
  3103                           ; 1 bytes @ 0x6
  3104  0076                     	ds	1
  3105  0077                     ??_strncmp:	
  3106  0077                     ?_toupper:	
  3107                           ; 1 bytes @ 0x7
  3108                           
  3109  0077                     ?_atoi:	
  3110                           ; 2 bytes @ 0x7
  3111                           
  3112  0077                     I2C_writeRegister@regAddress:	
  3113                           ; 2 bytes @ 0x7
  3114                           
  3115  0077                     readRegister@regAddress:	
  3116                           ; 2 bytes @ 0x7
  3117                           
  3118  0077                     atoi@s:	
  3119                           ; 2 bytes @ 0x7
  3120                           
  3121  0077                     toupper@c:	
  3122                           ; 2 bytes @ 0x7
  3123                           
  3124                           
  3125                           ; 2 bytes @ 0x7
  3126  0077                     	ds	1
  3127  0078                     strncmp@l:	
  3128                           
  3129                           ; 2 bytes @ 0x8
  3130  0078                     	ds	1
  3131  0079                     ??_readRegister:	
  3132  0079                     ??___aldiv:	
  3133                           ; 1 bytes @ 0x9
  3134                           
  3135  0079                     I2C_writeRegister@data:	
  3136                           ; 1 bytes @ 0x9
  3137                           
  3138  0079                     readRegister@recievedData:	
  3139                           ; 2 bytes @ 0x9
  3140                           
  3141  0079                     _toupper$1394:	
  3142                           ; 2 bytes @ 0x9
  3143                           
  3144                           
  3145                           ; 2 bytes @ 0x9
  3146  0079                     	ds	1
  3147  007A                     ??_stoa:	
  3148  007A                     ?_fputs:	
  3149                           ; 1 bytes @ 0xA
  3150                           
  3151  007A                     ___lodiv@counter:	
  3152                           ; 2 bytes @ 0xA
  3153                           
  3154  007A                     EUSART_Initialize@x:	
  3155                           ; 1 bytes @ 0xA
  3156                           
  3157  007A                     fputs@fp:	
  3158                           ; 2 bytes @ 0xA
  3159                           
  3160  007A                     strncmp@r:	
  3161                           ; 2 bytes @ 0xA
  3162                           
  3163                           
  3164                           ; 2 bytes @ 0xA
  3165  007A                     	ds	1
  3166  007B                     ??_I2C_writeRegister:	
  3167                           
  3168                           ; 1 bytes @ 0xB
  3169  007B                     	ds	1
  3170                           
  3171                           	psect	cstackBANK0
  3172  0020                     __pcstackBANK0:	
  3173  0020                     ??_fputs:	
  3174  0020                     ??_toupper:	
  3175                           ; 1 bytes @ 0x0
  3176                           
  3177  0020                     ??_atoi:	
  3178                           ; 1 bytes @ 0x0
  3179                           
  3180  0020                     ?_beginAFEcommunication:	
  3181                           ; 1 bytes @ 0x0
  3182                           
  3183  0020                     ?_stoa:	
  3184                           ; 2 bytes @ 0x0
  3185                           
  3186  0020                     ?___aodiv:	
  3187                           ; 2 bytes @ 0x0
  3188                           
  3189  0020                     ?___aomod:	
  3190                           ; 8 bytes @ 0x0
  3191                           
  3192  0020                     ?___lodiv:	
  3193                           ; 8 bytes @ 0x0
  3194                           
  3195  0020                     ?___lomod:	
  3196                           ; 8 bytes @ 0x0
  3197                           
  3198  0020                     ___aldiv@counter:	
  3199                           ; 8 bytes @ 0x0
  3200                           
  3201  0020                     stoa@fp:	
  3202                           ; 1 bytes @ 0x0
  3203                           
  3204  0020                     ___aodiv@divisor:	
  3205                           ; 2 bytes @ 0x0
  3206                           
  3207  0020                     ___aomod@divisor:	
  3208                           ; 8 bytes @ 0x0
  3209                           
  3210  0020                     ___lodiv@divisor:	
  3211                           ; 8 bytes @ 0x0
  3212                           
  3213  0020                     ___lomod@divisor:	
  3214                           ; 8 bytes @ 0x0
  3215                           
  3216                           
  3217                           ; 8 bytes @ 0x0
  3218  0020                     	ds	1
  3219  0021                     ___aldiv@sign:	
  3220                           
  3221                           ; 1 bytes @ 0x1
  3222  0021                     	ds	1
  3223  0022                     ??_beginAFEcommunication:	
  3224  0022                     stoa@s:	
  3225                           ; 1 bytes @ 0x2
  3226                           
  3227  0022                     fputs@c:	
  3228                           ; 1 bytes @ 0x2
  3229                           
  3230  0022                     ___aldiv@quotient:	
  3231                           ; 1 bytes @ 0x2
  3232                           
  3233                           
  3234                           ; 4 bytes @ 0x2
  3235  0022                     	ds	1
  3236  0023                     fputs@i:	
  3237  0023                     stoa@nuls:	
  3238                           ; 2 bytes @ 0x3
  3239                           
  3240                           
  3241                           ; 7 bytes @ 0x3
  3242  0023                     	ds	1
  3243  0024                     atoi@neg:	
  3244                           
  3245                           ; 2 bytes @ 0x4
  3246  0024                     	ds	1
  3247  0025                     fputs@s:	
  3248                           
  3249                           ; 1 bytes @ 0x5
  3250  0025                     	ds	1
  3251  0026                     ?_EUSART_Initialize:	
  3252  0026                     ?_pad:	
  3253                           ; 1 bytes @ 0x6
  3254                           
  3255  0026                     pad@fp:	
  3256                           ; 2 bytes @ 0x6
  3257                           
  3258  0026                     _atoi$1287:	
  3259                           ; 2 bytes @ 0x6
  3260                           
  3261  0026                     EUSART_Initialize@baudrate:	
  3262                           ; 2 bytes @ 0x6
  3263                           
  3264                           
  3265                           ; 4 bytes @ 0x6
  3266  0026                     	ds	2
  3267  0028                     pad@buf:	
  3268  0028                     _atoi$1289:	
  3269                           ; 1 bytes @ 0x8
  3270                           
  3271  0028                     ___aodiv@dividend:	
  3272                           ; 2 bytes @ 0x8
  3273                           
  3274  0028                     ___aomod@dividend:	
  3275                           ; 8 bytes @ 0x8
  3276                           
  3277  0028                     ___lodiv@dividend:	
  3278                           ; 8 bytes @ 0x8
  3279                           
  3280  0028                     ___lomod@dividend:	
  3281                           ; 8 bytes @ 0x8
  3282                           
  3283                           
  3284                           ; 8 bytes @ 0x8
  3285  0028                     	ds	1
  3286  0029                     pad@p:	
  3287                           
  3288                           ; 2 bytes @ 0x9
  3289  0029                     	ds	1
  3290  002A                     ??_EUSART_Initialize:	
  3291  002A                     _atoi$1288:	
  3292                           ; 1 bytes @ 0xA
  3293                           
  3294  002A                     stoa@i:	
  3295                           ; 1 bytes @ 0xA
  3296                           
  3297                           
  3298                           ; 2 bytes @ 0xA
  3299  002A                     	ds	1
  3300  002B                     ??_pad:	
  3301  002B                     beginAFEcommunication@commSuccess:	
  3302                           ; 1 bytes @ 0xB
  3303                           
  3304  002B                     atoi@n:	
  3305                           ; 2 bytes @ 0xB
  3306                           
  3307                           
  3308                           ; 2 bytes @ 0xB
  3309  002B                     	ds	1
  3310  002C                     pad@i:	
  3311  002C                     stoa@w:	
  3312                           ; 2 bytes @ 0xC
  3313                           
  3314                           
  3315                           ; 2 bytes @ 0xC
  3316  002C                     	ds	1
  3317  002D                     beginAFEcommunication@i:	
  3318                           
  3319                           ; 2 bytes @ 0xD
  3320  002D                     	ds	1
  3321  002E                     stoa@cp:	
  3322  002E                     pad@w:	
  3323                           ; 1 bytes @ 0xE
  3324                           
  3325                           
  3326                           ; 2 bytes @ 0xE
  3327  002E                     	ds	1
  3328  002F                     stoa@p:	
  3329                           
  3330                           ; 2 bytes @ 0xF
  3331  002F                     	ds	1
  3332  0030                     ?_ctoa:	
  3333  0030                     ?_dtoa:	
  3334                           ; 2 bytes @ 0x10
  3335                           
  3336  0030                     ?_otoa:	
  3337                           ; 2 bytes @ 0x10
  3338                           
  3339  0030                     ?_utoa:	
  3340                           ; 2 bytes @ 0x10
  3341                           
  3342  0030                     ?_xtoa:	
  3343                           ; 2 bytes @ 0x10
  3344                           
  3345  0030                     ctoa@fp:	
  3346                           ; 2 bytes @ 0x10
  3347                           
  3348  0030                     dtoa@fp:	
  3349                           ; 2 bytes @ 0x10
  3350                           
  3351  0030                     otoa@fp:	
  3352                           ; 2 bytes @ 0x10
  3353                           
  3354  0030                     utoa@fp:	
  3355                           ; 2 bytes @ 0x10
  3356                           
  3357  0030                     xtoa@fp:	
  3358                           ; 2 bytes @ 0x10
  3359                           
  3360                           
  3361                           ; 2 bytes @ 0x10
  3362  0030                     	ds	1
  3363  0031                     stoa@l:	
  3364                           
  3365                           ; 2 bytes @ 0x11
  3366  0031                     	ds	1
  3367  0032                     ctoa@c:	
  3368  0032                     dtoa@d:	
  3369                           ; 1 bytes @ 0x12
  3370                           
  3371  0032                     otoa@d:	
  3372                           ; 8 bytes @ 0x12
  3373                           
  3374  0032                     utoa@d:	
  3375                           ; 8 bytes @ 0x12
  3376                           
  3377  0032                     xtoa@d:	
  3378                           ; 8 bytes @ 0x12
  3379                           
  3380                           
  3381                           ; 8 bytes @ 0x12
  3382  0032                     	ds	1
  3383  0033                     ??_ctoa:	
  3384                           
  3385                           ; 1 bytes @ 0x13
  3386  0033                     	ds	1
  3387  0034                     ctoa@w:	
  3388                           
  3389                           ; 2 bytes @ 0x14
  3390  0034                     	ds	6
  3391  003A                     ??_dtoa:	
  3392  003A                     ??_otoa:	
  3393                           ; 1 bytes @ 0x1A
  3394                           
  3395  003A                     ??_utoa:	
  3396                           ; 1 bytes @ 0x1A
  3397                           
  3398  003A                     xtoa@x:	
  3399                           ; 1 bytes @ 0x1A
  3400                           
  3401                           
  3402                           ; 1 bytes @ 0x1A
  3403  003A                     	ds	1
  3404  003B                     ??_xtoa:	
  3405  003B                     utoa@p:	
  3406                           ; 1 bytes @ 0x1B
  3407                           
  3408                           
  3409                           ; 2 bytes @ 0x1B
  3410  003B                     	ds	2
  3411  003D                     _dtoa$836:	
  3412  003D                     utoa@w:	
  3413                           ; 2 bytes @ 0x1D
  3414                           
  3415                           
  3416                           ; 2 bytes @ 0x1D
  3417  003D                     	ds	2
  3418  003F                     dtoa@p:	
  3419  003F                     utoa@n:	
  3420                           ; 2 bytes @ 0x1F
  3421                           
  3422                           
  3423                           ; 8 bytes @ 0x1F
  3424  003F                     	ds	2
  3425  0041                     dtoa@w:	
  3426                           
  3427                           ; 2 bytes @ 0x21
  3428  0041                     	ds	1
  3429  0042                     otoa@p:	
  3430                           
  3431                           ; 2 bytes @ 0x22
  3432  0042                     	ds	1
  3433  0043                     dtoa@s:	
  3434  0043                     _xtoa$872:	
  3435                           ; 2 bytes @ 0x23
  3436                           
  3437                           
  3438                           ; 2 bytes @ 0x23
  3439  0043                     	ds	1
  3440  0044                     otoa@t:	
  3441                           
  3442                           ; 2 bytes @ 0x24
  3443  0044                     	ds	1
  3444  0045                     _xtoa$873:	
  3445  0045                     dtoa@n:	
  3446                           ; 2 bytes @ 0x25
  3447                           
  3448                           
  3449                           ; 8 bytes @ 0x25
  3450  0045                     	ds	1
  3451  0046                     otoa@w:	
  3452                           
  3453                           ; 2 bytes @ 0x26
  3454  0046                     	ds	1
  3455  0047                     utoa@i:	
  3456  0047                     xtoa@p:	
  3457                           ; 2 bytes @ 0x27
  3458                           
  3459                           
  3460                           ; 2 bytes @ 0x27
  3461  0047                     	ds	1
  3462  0048                     otoa@n:	
  3463                           
  3464                           ; 8 bytes @ 0x28
  3465  0048                     	ds	1
  3466  0049                     xtoa@w:	
  3467                           
  3468                           ; 2 bytes @ 0x29
  3469  0049                     	ds	2
  3470  004B                     xtoa@n:	
  3471                           
  3472                           ; 8 bytes @ 0x2B
  3473  004B                     	ds	2
  3474  004D                     dtoa@i:	
  3475                           
  3476                           ; 2 bytes @ 0x2D
  3477  004D                     	ds	3
  3478  0050                     otoa@i:	
  3479                           
  3480                           ; 2 bytes @ 0x30
  3481  0050                     	ds	3
  3482  0053                     xtoa@i:	
  3483                           
  3484                           ; 2 bytes @ 0x33
  3485  0053                     	ds	2
  3486  0055                     xtoa@c:	
  3487                           
  3488                           ; 2 bytes @ 0x35
  3489  0055                     	ds	2
  3490  0057                     ?_vfpfcnvrt:	
  3491  0057                     vfpfcnvrt@fp:	
  3492                           ; 2 bytes @ 0x37
  3493                           
  3494                           
  3495                           ; 2 bytes @ 0x37
  3496  0057                     	ds	2
  3497  0059                     vfpfcnvrt@fmt:	
  3498                           
  3499                           ; 1 bytes @ 0x39
  3500  0059                     	ds	1
  3501  005A                     vfpfcnvrt@ap:	
  3502                           
  3503                           ; 1 bytes @ 0x3A
  3504  005A                     	ds	1
  3505  005B                     ??_vfpfcnvrt:	
  3506                           
  3507                           ; 1 bytes @ 0x3B
  3508  005B                     	ds	8
  3509  0063                     ?_vfprintf:	
  3510  0063                     vfprintf@fp:	
  3511                           ; 2 bytes @ 0x43
  3512                           
  3513                           
  3514                           ; 2 bytes @ 0x43
  3515  0063                     	ds	2
  3516  0065                     vfprintf@fmt:	
  3517                           
  3518                           ; 2 bytes @ 0x45
  3519  0065                     	ds	2
  3520  0067                     vfprintf@ap:	
  3521                           
  3522                           ; 1 bytes @ 0x47
  3523  0067                     	ds	1
  3524  0068                     ??_vfprintf:	
  3525                           
  3526                           ; 1 bytes @ 0x48
  3527  0068                     	ds	2
  3528  006A                     vfprintf@cfmt:	
  3529                           
  3530                           ; 2 bytes @ 0x4A
  3531  006A                     	ds	2
  3532  006C                     ??_vsnprintf:	
  3533                           
  3534                           ; 1 bytes @ 0x4C
  3535  006C                     	ds	2
  3536  006E                     ??_snprintf:	
  3537                           
  3538                           ; 1 bytes @ 0x4E
  3539  006E                     	ds	1
  3540  006F                     statemachine@success:	
  3541                           
  3542                           ; 1 bytes @ 0x4F
  3543  006F                     	ds	1
  3544                           
  3545                           	psect	maintext
  3546  1FA7                     __pmaintext:	
  3547 ;;
  3548 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  3549 ;;
  3550 ;; *************** function _main *****************
  3551 ;; Defined at:
  3552 ;;		line 76 in file "main.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : B1F/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3568 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3569 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3570 ;;Total ram usage:        1 bytes
  3571 ;; Hardware stack levels required when called:   11
  3572 ;; This function calls:
  3573 ;;		_EUSART_Initialize
  3574 ;;		_initClock
  3575 ;;		_init_GPIO
  3576 ;;		_init_I2C
  3577 ;;		_init_RGB
  3578 ;;		_init_TMR1
  3579 ;;		_statemachine
  3580 ;; This function is called by:
  3581 ;;		Startup code after reset
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585                           
  3586                           ;psect for function _main
  3587  1FA7                     _main:	
  3588                           
  3589                           ;main.c: 79:     initClock();
  3590                           
  3591                           ;incstack = 0
  3592                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3593  1FA7  319D  259B  319F   	fcall	_initClock
  3594                           
  3595                           ;main.c: 80:     init_GPIO();
  3596  1FAA  3190  2052  319F   	fcall	_init_GPIO
  3597                           
  3598                           ;main.c: 81:     init_I2C();
  3599  1FAD  319D  25FE  319F   	fcall	_init_I2C
  3600                           
  3601                           ;main.c: 82:     EUSART_Initialize(9600);
  3602  1FB0  3000               	movlw	0
  3603  1FB1  0020               	movlb	0	; select bank0
  3604  1FB2  00A9               	movwf	EUSART_Initialize@baudrate+3
  3605  1FB3  3000               	movlw	0
  3606  1FB4  00A8               	movwf	EUSART_Initialize@baudrate+2
  3607  1FB5  3025               	movlw	37
  3608  1FB6  00A7               	movwf	EUSART_Initialize@baudrate+1
  3609  1FB7  3080               	movlw	128
  3610  1FB8  00A6               	movwf	EUSART_Initialize@baudrate
  3611  1FB9  3194  2424  319F   	fcall	_EUSART_Initialize
  3612                           
  3613                           ;main.c: 83:     init_TMR1();
  3614  1FBC  319D  25E7  319F   	fcall	_init_TMR1
  3615                           
  3616                           ;main.c: 84:     init_RGB();
  3617  1FBF  319D  259E  319F   	fcall	_init_RGB
  3618  1FC2                     l5095:	
  3619                           
  3620                           ;main.c: 88:         statemachine();
  3621  1FC2  3192  22E7  319F   	fcall	_statemachine
  3622                           
  3623                           ;main.c: 90:         _delay((unsigned long)((10)*(16000000/4000.0)));
  3624  1FC5  3034               	movlw	52
  3625  1FC6  0021               	movlb	1	; select bank1
  3626  1FC7  00D9               	movwf	??_main^(0+128)
  3627  1FC8  30F1               	movlw	241
  3628  1FC9                     u6407:	
  3629  1FC9  0B89               	decfsz	9,f
  3630  1FCA  2FC9               	goto	u6407
  3631  1FCB  0BD9               	decfsz	??_main^(0+128),f
  3632  1FCC  2FC9               	goto	u6407
  3633  1FCD  3200               	nop2
  3634  1FCE  2FC2               	goto	l5095
  3635  1FCF                     __end_of_main:	
  3636                           
  3637                           	psect	text1
  3638  12E7                     __ptext1:	
  3639 ;; *************** function _statemachine *****************
  3640 ;; Defined at:
  3641 ;;		line 96 in file "main.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;		None
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  success         1   79[BANK0 ] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      void 
  3648 ;; Registers used:
  3649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3657 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3658 ;;      Totals:         0       1       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3659 ;;Total ram usage:        3 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:   10
  3662 ;; This function calls:
  3663 ;;		_EUSART_Write_Text
  3664 ;;		_RGB_AWAIT_AFE_CONN
  3665 ;;		_RGB_color
  3666 ;;		_beginAFEcommunication
  3667 ;;		_init_AFE
  3668 ;;		_snprintf
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           
  3675                           ;psect for function _statemachine
  3676  12E7                     _statemachine:	
  3677                           
  3678                           ;main.c: 98:     switch (currState) {
  3679                           
  3680                           ;incstack = 0
  3681                           ; Regs used in _statemachine: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3682  12E7  2B6E               	goto	l5077
  3683  12E8                     l5033:	
  3684                           
  3685                           ;main.c: 101:             if (tmr1_flag) {
  3686  12E8  0869               	movf	_tmr1_flag^(0+128),w	;volatile
  3687  12E9  1903               	btfsc	3,2
  3688  12EA  0008               	return
  3689                           
  3690                           ;main.c: 102:                 tmr1_flag = 0;
  3691  12EB  01E9               	clrf	_tmr1_flag^(0+128)	;volatile
  3692                           
  3693                           ;main.c: 103:                 RGB_AWAIT_AFE_CONN();
  3694  12EC  319F  273D  3192   	fcall	_RGB_AWAIT_AFE_CONN
  3695                           
  3696                           ;main.c: 104:                 uint8_t success = beginAFEcommunication();
  3697  12EF  3194  24CC  3192   	fcall	_beginAFEcommunication
  3698  12F2  0020               	movlb	0	; select bank0
  3699  12F3  0820               	movf	?_beginAFEcommunication,w
  3700  12F4  0021               	movlb	1	; select bank1
  3701  12F5  00D7               	movwf	??_statemachine^(0+128)
  3702  12F6  0857               	movf	??_statemachine^(0+128),w
  3703  12F7  0020               	movlb	0	; select bank0
  3704  12F8  00EF               	movwf	statemachine@success
  3705                           
  3706                           ;main.c: 107:                 EUSART_Write_Text("Attempting to communicate with AFE...\n
      +                          \r");
  3707  12F9  30DF               	movlw	low (STR_1| (0+32768))
  3708  12FA  00F2               	movwf	EUSART_Write_Text@text
  3709  12FB  30A0               	movlw	high (STR_1| (0+32768))
  3710  12FC  00F3               	movwf	EUSART_Write_Text@text+1
  3711  12FD  319E  2691  3192   	fcall	_EUSART_Write_Text
  3712                           
  3713                           ;main.c: 109:                 if (success) {
  3714  1300  0020               	movlb	0	; select bank0
  3715  1301  086F               	movf	statemachine@success,w
  3716  1302  1903               	btfsc	3,2
  3717  1303  0008               	return
  3718                           
  3719                           ;main.c: 110:                     T1CONbits.TMR1ON = 0;
  3720  1304  1018               	bcf	24,0	;volatile
  3721                           
  3722                           ;main.c: 111:                     PIE1bits.TMR1IE = 0;
  3723  1305  0021               	movlb	1	; select bank1
  3724  1306  1011               	bcf	17,0	;volatile
  3725                           
  3726                           ;main.c: 112:                     RGB_color(0);
  3727  1307  3000               	movlw	0
  3728  1308  00F1               	movwf	RGB_color@color
  3729  1309  00F2               	movwf	RGB_color@color+1
  3730  130A  319F  271C  3192   	fcall	_RGB_color
  3731                           
  3732                           ;main.c: 113:                     tmr1_flag = 0;
  3733  130D  0021               	movlb	1	; select bank1
  3734  130E  01E9               	clrf	_tmr1_flag^(0+128)	;volatile
  3735                           
  3736                           ;main.c: 116:                     _delay((unsigned long)((5)*(16000000/4000.0)));
  3737  130F  301A               	movlw	26
  3738  1310  0021               	movlb	1	; select bank1
  3739  1311  00D7               	movwf	??_statemachine^(0+128)
  3740  1312  30F8               	movlw	248
  3741  1313                     u6417:	
  3742  1313  0B89               	decfsz	9,f
  3743  1314  2B13               	goto	u6417
  3744  1315  0BD7               	decfsz	??_statemachine^(0+128),f
  3745  1316  2B13               	goto	u6417
  3746  1317  0000               	nop
  3747                           
  3748                           ;main.c: 117:                     EUSART_Write_Text("Communication with BQ76920 AFE esta
      +                          blished!\n\r");
  3749  1318  3002               	movlw	low (STR_2| (0+32768))
  3750  1319  00F2               	movwf	EUSART_Write_Text@text
  3751  131A  30A0               	movlw	high (STR_2| (0+32768))
  3752  131B  00F3               	movwf	EUSART_Write_Text@text+1
  3753  131C  319E  2691  3192   	fcall	_EUSART_Write_Text
  3754                           
  3755                           ;main.c: 118:                     snprintf(messageBuffer, 127, "Obtained adcOffset = %i 
      +                          and adcGain = %i\n\r", adcOffset, adcGain);
  3756  131F  3071               	movlw	113
  3757  1320  0021               	movlb	1	; select bank1
  3758  1321  00CA               	movwf	snprintf@s^(0+128)
  3759  1322  3027               	movlw	39
  3760  1323  00CB               	movwf	(snprintf@s^(0+128)+1)
  3761  1324  307F               	movlw	127
  3762  1325  00CC               	movwf	snprintf@n^(0+128)
  3763  1326  3000               	movlw	0
  3764  1327  00CD               	movwf	(snprintf@n^(0+128)+1)
  3765  1328  308A               	movlw	low (STR_3| (0+32768))
  3766  1329  00CE               	movwf	snprintf@fmt^(0+128)
  3767  132A  30A0               	movlw	high (STR_3| (0+32768))
  3768  132B  00CF               	movwf	(snprintf@fmt^(0+128)+1)
  3769  132C  0865               	movf	(_adcOffset+1)^(0+128),w
  3770  132D  00D1               	movwf	((?_snprintf+1)^(0+128)+6)
  3771  132E  0864               	movf	_adcOffset^(0+128),w
  3772  132F  00D0               	movwf	(?_snprintf^(0+128)+6)
  3773  1330  0867               	movf	(_adcGain+1)^(0+128),w
  3774  1331  00D3               	movwf	((?_snprintf+1)^(0+128)+8)
  3775  1332  0866               	movf	_adcGain^(0+128),w
  3776  1333  00D2               	movwf	(?_snprintf^(0+128)+8)
  3777  1334  319E  26C6  3192   	fcall	_snprintf
  3778                           
  3779                           ;main.c: 119:                     EUSART_Write_Text(messageBuffer);
  3780  1337  3071               	movlw	113
  3781  1338  00F2               	movwf	EUSART_Write_Text@text
  3782  1339  3027               	movlw	39
  3783  133A  00F3               	movwf	EUSART_Write_Text@text+1
  3784  133B  319E  2691  3192   	fcall	_EUSART_Write_Text
  3785                           
  3786                           ;main.c: 120:                     EUSART_Write_Text("Attempt to set system parameters to
      +                           AFE...\n\r");
  3787  133E  3030               	movlw	low (STR_4| (0+32768))
  3788  133F  00F2               	movwf	EUSART_Write_Text@text
  3789  1340  30A0               	movlw	high (STR_4| (0+32768))
  3790  1341  00F3               	movwf	EUSART_Write_Text@text+1
  3791  1342  319E  2691         	fcall	_EUSART_Write_Text
  3792                           
  3793                           ;main.c: 122:                     currState = 1;
  3794  1344  0021               	movlb	1	; select bank1
  3795  1345  01EA               	clrf	_currState^(0+128)
  3796  1346  0AEA               	incf	_currState^(0+128),f
  3797  1347  0008               	return
  3798  1348                     l5063:	
  3799                           
  3800                           ;main.c: 131:             init_AFE();
  3801  1348  3180  2002  3192   	fcall	_init_AFE
  3802                           
  3803                           ;main.c: 134:             _delay((unsigned long)((5)*(16000000/4000.0)));
  3804  134B  301A               	movlw	26
  3805  134C  0021               	movlb	1	; select bank1
  3806  134D  00D7               	movwf	??_statemachine^(0+128)
  3807  134E  30F8               	movlw	248
  3808  134F                     u6427:	
  3809  134F  0B89               	decfsz	9,f
  3810  1350  2B4F               	goto	u6427
  3811  1351  0BD7               	decfsz	??_statemachine^(0+128),f
  3812  1352  2B4F               	goto	u6427
  3813  1353  0000               	nop
  3814                           
  3815                           ;main.c: 135:             EUSART_Write_Text("Initial parameters for BQ76920 AFE set!\n\r
      +                          ");
  3816  1354  30B5               	movlw	low (STR_5| (0+32768))
  3817  1355  00F2               	movwf	EUSART_Write_Text@text
  3818  1356  30A0               	movlw	high (STR_5| (0+32768))
  3819  1357  00F3               	movwf	EUSART_Write_Text@text+1
  3820  1358  319E  2691  3192   	fcall	_EUSART_Write_Text
  3821                           
  3822                           ;main.c: 136:             EUSART_Write_Text("Now reading AFE data at regular intervals.\
      +                          n\r");
  3823  135B  305D               	movlw	low (STR_6| (0+32768))
  3824  135C  00F2               	movwf	EUSART_Write_Text@text
  3825  135D  30A0               	movlw	high (STR_6| (0+32768))
  3826  135E  00F3               	movwf	EUSART_Write_Text@text+1
  3827  135F  319E  2691  3192   	fcall	_EUSART_Write_Text
  3828                           
  3829                           ;main.c: 138:             RGB_color(1);
  3830  1362  3001               	movlw	1
  3831  1363  00F1               	movwf	RGB_color@color
  3832  1364  3000               	movlw	0
  3833  1365  00F2               	movwf	RGB_color@color+1
  3834  1366  319F  271C         	fcall	_RGB_color
  3835                           
  3836                           ;main.c: 139:             currState = 2;
  3837  1368  3002               	movlw	2
  3838  1369  0021               	movlb	1	; select bank1
  3839  136A  00D7               	movwf	??_statemachine^(0+128)
  3840  136B  0857               	movf	??_statemachine^(0+128),w
  3841  136C  00EA               	movwf	_currState^(0+128)
  3842                           
  3843                           ;main.c: 140:             break;
  3844  136D  0008               	return
  3845  136E                     l5077:	
  3846  136E  0021               	movlb	1	; select bank1
  3847  136F  086A               	movf	_currState^(0+128),w
  3848  1370  00D7               	movwf	??_statemachine^(0+128)
  3849  1371  01D8               	clrf	(??_statemachine^(0+128)+1)
  3850                           
  3851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3852                           ; Switch size 1, requested type "simple"
  3853                           ; Number of cases is 1, Range of values is 0 to 0
  3854                           ; switch strategies available:
  3855                           ; Name         Instructions Cycles
  3856                           ; simple_byte            4     3 (average)
  3857                           ; direct_byte            8     6 (fixed)
  3858                           ; jumptable            260     6 (fixed)
  3859                           ;	Chosen strategy is simple_byte
  3860  1372  0858               	movf	(??_statemachine+1)^(0+128),w
  3861  1373  3A00               	xorlw	0	; case 0
  3862  1374  1903               	skipnz
  3863  1375  2B77               	goto	l5205
  3864  1376  2B82               	goto	l123
  3865  1377                     l5205:	
  3866                           
  3867                           ; Switch size 1, requested type "simple"
  3868                           ; Number of cases is 3, Range of values is 0 to 2
  3869                           ; switch strategies available:
  3870                           ; Name         Instructions Cycles
  3871                           ; simple_byte           10     6 (average)
  3872                           ; direct_byte           12     6 (fixed)
  3873                           ; jumptable            260     6 (fixed)
  3874                           ;	Chosen strategy is simple_byte
  3875  1377  0857               	movf	??_statemachine^(0+128),w
  3876  1378  3A00               	xorlw	0	; case 0
  3877  1379  1903               	skipnz
  3878  137A  2AE8               	goto	l5033
  3879  137B  3A01               	xorlw	1	; case 1
  3880  137C  1903               	skipnz
  3881  137D  2B48               	goto	l5063
  3882  137E  3A03               	xorlw	3	; case 2
  3883  137F  1903               	skipnz
  3884  1380  2B82               	goto	l123
  3885  1381  2B82               	goto	l123
  3886  1382                     l123:	
  3887  1382  0008               	return
  3888  1383                     __end_of_statemachine:	
  3889                           
  3890                           	psect	text2
  3891  1EC6                     __ptext2:	
  3892 ;; *************** function _snprintf *****************
  3893 ;; Defined at:
  3894 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\snprintf.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  s               2   42[BANK1 ] PTR unsigned char 
  3897 ;;		 -> messageBuffer(127), 
  3898 ;;  n               2   44[BANK1 ] unsigned int 
  3899 ;;  fmt             2   46[BANK1 ] PTR const unsigned char 
  3900 ;;		 -> STR_3(43), 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  ret             2    0        int 
  3903 ;;  ap              1   54[BANK1 ] PTR void [1]
  3904 ;;		 -> ?_snprintf(2), 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  2   42[BANK1 ] int 
  3907 ;; Registers used:
  3908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3914 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3915 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3916 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3917 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3918 ;;Total ram usage:       14 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:    9
  3921 ;; This function calls:
  3922 ;;		_vsnprintf
  3923 ;; This function is called by:
  3924 ;;		_statemachine
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           
  3929                           ;psect for function _snprintf
  3930  1EC6                     _snprintf:	
  3931                           
  3932                           ;incstack = 0
  3933                           ; Regs used in _snprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3934  1EC6  30D0               	movlw	(low ((?_snprintf| 0+6)))& (0+255)
  3935  1EC7  0020               	movlb	0	; select bank0
  3936  1EC8  00EE               	movwf	??_snprintf
  3937  1EC9  086E               	movf	??_snprintf,w
  3938  1ECA  0021               	movlb	1	; select bank1
  3939  1ECB  00D6               	movwf	snprintf@ap^(0+128)
  3940  1ECC  084B               	movf	(snprintf@s+1)^(0+128),w
  3941  1ECD  00BA               	movwf	(vsnprintf@s+1)^(0+128)
  3942  1ECE  084A               	movf	snprintf@s^(0+128),w
  3943  1ECF  00B9               	movwf	vsnprintf@s^(0+128)
  3944  1ED0  084D               	movf	(snprintf@n+1)^(0+128),w
  3945  1ED1  00BC               	movwf	(vsnprintf@n+1)^(0+128)
  3946  1ED2  084C               	movf	snprintf@n^(0+128),w
  3947  1ED3  00BB               	movwf	vsnprintf@n^(0+128)
  3948  1ED4  084F               	movf	(snprintf@fmt+1)^(0+128),w
  3949  1ED5  00BE               	movwf	(vsnprintf@fmt+1)^(0+128)
  3950  1ED6  084E               	movf	snprintf@fmt^(0+128),w
  3951  1ED7  00BD               	movwf	vsnprintf@fmt^(0+128)
  3952  1ED8  30D6               	movlw	(low (snprintf@ap| 0))& (0+255)
  3953  1ED9  0020               	movlb	0	; select bank0
  3954  1EDA  00EE               	movwf	??_snprintf
  3955  1EDB  086E               	movf	??_snprintf,w
  3956  1EDC  0021               	movlb	1	; select bank1
  3957  1EDD  00BF               	movwf	vsnprintf@ap^(0+128)
  3958  1EDE  3191  21EA         	fcall	_vsnprintf
  3959  1EE0  0008               	return
  3960  1EE1                     __end_of_snprintf:	
  3961                           
  3962                           	psect	text3
  3963  11EA                     __ptext3:	
  3964 ;; *************** function _vsnprintf *****************
  3965 ;; Defined at:
  3966 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_vsnprintf.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  s               2   25[BANK1 ] PTR unsigned char 
  3969 ;;		 -> messageBuffer(127), 
  3970 ;;  n               2   27[BANK1 ] unsigned int 
  3971 ;;  fmt             2   29[BANK1 ] PTR const unsigned char 
  3972 ;;		 -> STR_3(43), 
  3973 ;;  ap              1   31[BANK1 ] PTR PTR void 
  3974 ;;		 -> snprintf@ap(1), 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;  f               6   36[BANK1 ] struct _IO_FILE
  3977 ;;  cnt             2   34[BANK1 ] int 
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  2   25[BANK1 ] int 
  3980 ;; Registers used:
  3981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3987 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3988 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3989 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3990 ;;      Totals:         0       2      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3991 ;;Total ram usage:       19 bytes
  3992 ;; Hardware stack levels used:    1
  3993 ;; Hardware stack levels required when called:    8
  3994 ;; This function calls:
  3995 ;;		_vfprintf
  3996 ;; This function is called by:
  3997 ;;		_snprintf
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           
  4002                           ;psect for function _vsnprintf
  4003  11EA                     _vsnprintf:	
  4004                           
  4005                           ;incstack = 0
  4006                           ; Regs used in _vsnprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4007  11EA  3080               	movlw	128
  4008  11EB  0021               	movlb	1	; select bank1
  4009  11EC  023C               	subwf	(vsnprintf@n+1)^(0+128),w
  4010  11ED  3000               	movlw	0
  4011  11EE  1903               	skipnz
  4012  11EF  023B               	subwf	vsnprintf@n^(0+128),w
  4013  11F0  1C03               	skipc
  4014  11F1  29FB               	goto	l4955
  4015  11F2  304B               	movlw	75
  4016  11F3  00DA               	movwf	_errno^(0+128)
  4017  11F4  3000               	movlw	0
  4018  11F5  00DB               	movwf	(_errno^(0+128)+1)
  4019  11F6  30FF               	movlw	255
  4020  11F7  00B9               	movwf	?_vsnprintf^(0+128)
  4021  11F8  30FF               	movlw	255
  4022  11F9  00BA               	movwf	(?_vsnprintf^(0+128)+1)
  4023  11FA  0008               	return
  4024  11FB                     l4955:	
  4025  11FB  083A               	movf	(vsnprintf@s+1)^(0+128),w
  4026  11FC  00C5               	movwf	(vsnprintf@f+1)^(0+128)
  4027  11FD  0839               	movf	vsnprintf@s^(0+128),w
  4028  11FE  00C4               	movwf	vsnprintf@f^(0+128)
  4029  11FF  3000               	movlw	0
  4030  1200  023C               	subwf	(vsnprintf@n+1)^(0+128),w
  4031  1201  3002               	movlw	2
  4032  1202  1903               	skipnz
  4033  1203  023B               	subwf	vsnprintf@n^(0+128),w
  4034  1204  1C03               	skipc
  4035  1205  2A0F               	goto	l4961
  4036  1206  083B               	movf	vsnprintf@n^(0+128),w
  4037  1207  3EFF               	addlw	255
  4038  1208  00C8               	movwf	(vsnprintf@f^(0+128)+4)
  4039  1209  30FF               	movlw	255
  4040  120A  3D3C               	addwfc	(vsnprintf@n+1)^(0+128),w
  4041  120B  00C9               	movwf	((vsnprintf@f+1)^(0+128)+4)
  4042  120C  01C6               	clrf	(vsnprintf@f^(0+128)+2)
  4043  120D  01C7               	clrf	((vsnprintf@f+1)^(0+128)+2)
  4044  120E  2A17               	goto	l4963
  4045  120F                     l4961:	
  4046  120F  3001               	movlw	1
  4047  1210  00C8               	movwf	(vsnprintf@f^(0+128)+4)
  4048  1211  3000               	movlw	0
  4049  1212  00C9               	movwf	(vsnprintf@f^(0+128)+5)
  4050  1213  3001               	movlw	1
  4051  1214  00C6               	movwf	(vsnprintf@f^(0+128)+2)
  4052  1215  3000               	movlw	0
  4053  1216  00C7               	movwf	(vsnprintf@f^(0+128)+3)
  4054  1217                     l4963:	
  4055  1217  30C4               	movlw	low vsnprintf@f
  4056  1218  0020               	movlb	0	; select bank0
  4057  1219  00E3               	movwf	vfprintf@fp
  4058  121A  3000               	movlw	high vsnprintf@f
  4059  121B  00E4               	movwf	vfprintf@fp+1
  4060  121C  0021               	movlb	1	; select bank1
  4061  121D  083E               	movf	(vsnprintf@fmt+1)^(0+128),w
  4062  121E  0020               	movlb	0	; select bank0
  4063  121F  00E6               	movwf	vfprintf@fmt+1
  4064  1220  0021               	movlb	1	; select bank1
  4065  1221  083D               	movf	vsnprintf@fmt^(0+128),w
  4066  1222  0020               	movlb	0	; select bank0
  4067  1223  00E5               	movwf	vfprintf@fmt
  4068  1224  0021               	movlb	1	; select bank1
  4069  1225  083F               	movf	vsnprintf@ap^(0+128),w
  4070  1226  0020               	movlb	0	; select bank0
  4071  1227  00EC               	movwf	??_vsnprintf
  4072  1228  086C               	movf	??_vsnprintf,w
  4073  1229  00E7               	movwf	vfprintf@ap
  4074  122A  3188  2000  3191   	fcall	_vfprintf
  4075  122D  0020               	movlb	0	; select bank0
  4076  122E  0864               	movf	?_vfprintf+1,w
  4077  122F  0021               	movlb	1	; select bank1
  4078  1230  00C3               	movwf	(vsnprintf@cnt+1)^(0+128)
  4079  1231  0020               	movlb	0	; select bank0
  4080  1232  0863               	movf	?_vfprintf,w
  4081  1233  0021               	movlb	1	; select bank1
  4082  1234  00C2               	movwf	vsnprintf@cnt^(0+128)
  4083  1235  083B               	movf	vsnprintf@n^(0+128),w
  4084  1236  043C               	iorwf	(vsnprintf@n+1)^(0+128),w
  4085  1237  1D03               	btfss	3,2
  4086  1238  1BC3               	btfsc	(vsnprintf@cnt+1)^(0+128),7
  4087  1239  2A60               	goto	l4977
  4088  123A  083B               	movf	vsnprintf@n^(0+128),w
  4089  123B  3EFF               	addlw	255
  4090  123C  0020               	movlb	0	; select bank0
  4091  123D  00EC               	movwf	??_vsnprintf
  4092  123E  30FF               	movlw	255
  4093  123F  0021               	movlb	1	; select bank1
  4094  1240  3D3C               	addwfc	(vsnprintf@n+1)^(0+128),w
  4095  1241  0020               	movlb	0	; select bank0
  4096  1242  00ED               	movwf	??_vsnprintf+1
  4097  1243  086D               	movf	??_vsnprintf+1,w
  4098  1244  0021               	movlb	1	; select bank1
  4099  1245  0243               	subwf	(vsnprintf@cnt+1)^(0+128),w
  4100  1246  1D03               	skipz
  4101  1247  2A4C               	goto	u6285
  4102  1248  0020               	movlb	0	; select bank0
  4103  1249  086C               	movf	??_vsnprintf,w
  4104  124A  0021               	movlb	1	; select bank1
  4105  124B  0242               	subwf	vsnprintf@cnt^(0+128),w
  4106  124C                     u6285:	
  4107  124C  1C03               	skipc
  4108  124D  2A55               	goto	l4973
  4109  124E  083B               	movf	vsnprintf@n^(0+128),w
  4110  124F  3EFF               	addlw	255
  4111  1250  00C0               	movwf	_vsnprintf$1431^(0+128)
  4112  1251  30FF               	movlw	255
  4113  1252  3D3C               	addwfc	(vsnprintf@n+1)^(0+128),w
  4114  1253  00C1               	movwf	(_vsnprintf$1431+1)^(0+128)
  4115  1254  2A59               	goto	l4975
  4116  1255                     l4973:	
  4117  1255  0843               	movf	(vsnprintf@cnt+1)^(0+128),w
  4118  1256  00C1               	movwf	(_vsnprintf$1431+1)^(0+128)
  4119  1257  0842               	movf	vsnprintf@cnt^(0+128),w
  4120  1258  00C0               	movwf	_vsnprintf$1431^(0+128)
  4121  1259                     l4975:	
  4122  1259  0840               	movf	_vsnprintf$1431^(0+128),w
  4123  125A  0739               	addwf	vsnprintf@s^(0+128),w
  4124  125B  0086               	movwf	6
  4125  125C  0841               	movf	(_vsnprintf$1431+1)^(0+128),w
  4126  125D  3D3A               	addwfc	(vsnprintf@s+1)^(0+128),w
  4127  125E  0087               	movwf	7
  4128  125F  0181               	clrf	1
  4129  1260                     l4977:	
  4130  1260  0843               	movf	(vsnprintf@cnt+1)^(0+128),w
  4131  1261  00BA               	movwf	(?_vsnprintf+1)^(0+128)
  4132  1262  0842               	movf	vsnprintf@cnt^(0+128),w
  4133  1263  00B9               	movwf	?_vsnprintf^(0+128)
  4134  1264  0008               	return
  4135  1265                     __end_of_vsnprintf:	
  4136                           
  4137                           	psect	text4
  4138  0800                     __ptext4:	
  4139 ;; *************** function _vfprintf *****************
  4140 ;; Defined at:
  4141 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  fp              2   67[BANK0 ] PTR struct _IO_FILE
  4144 ;;		 -> vsnprintf@f(6), 
  4145 ;;  fmt             2   69[BANK0 ] PTR const unsigned char 
  4146 ;;		 -> STR_3(43), 
  4147 ;;  ap              1   71[BANK0 ] PTR PTR void 
  4148 ;;		 -> snprintf@ap(1), 
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
  4151 ;;		 -> STR_3(43), 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  2   67[BANK0 ] int 
  4154 ;; Registers used:
  4155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4161 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4162 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4163 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4164 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4165 ;;Total ram usage:        9 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    7
  4168 ;; This function calls:
  4169 ;;		_vfpfcnvrt
  4170 ;; This function is called by:
  4171 ;;		_vsnprintf
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175                           
  4176                           ;psect for function _vfprintf
  4177  0800                     _vfprintf:	
  4178                           
  4179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.05\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4180                           
  4181                           ;incstack = 0
  4182                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4183  0800  0020               	movlb	0	; select bank0
  4184  0801  0866               	movf	vfprintf@fmt+1,w
  4185  0802  00EB               	movwf	vfprintf@cfmt+1
  4186  0803  0865               	movf	vfprintf@fmt,w
  4187  0804  00EA               	movwf	vfprintf@cfmt
  4188                           
  4189                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4190  0805  0021               	movlb	1	; select bank1
  4191  0806  01DC               	clrf	_nout^(0+128)
  4192  0807  01DD               	clrf	(_nout+1)^(0+128)
  4193  0808                     l4901:	
  4194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4195                           
  4196                           
  4197                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4198  0808  0020               	movlb	0	; select bank0
  4199  0809  086A               	movf	vfprintf@cfmt,w
  4200  080A  0084               	movwf	4
  4201  080B  086B               	movf	vfprintf@cfmt+1,w
  4202  080C  0085               	movwf	5
  4203  080D  0012               	moviw fsr0++
  4204  080E  1903               	btfsc	3,2
  4205  080F  2828               	goto	l4903
  4206                           
  4207                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4208  0810  0864               	movf	vfprintf@fp+1,w
  4209  0811  00D8               	movwf	vfpfcnvrt@fp+1
  4210  0812  0863               	movf	vfprintf@fp,w
  4211  0813  00D7               	movwf	vfpfcnvrt@fp
  4212  0814  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4213  0815  00E8               	movwf	??_vfprintf
  4214  0816  0868               	movf	??_vfprintf,w
  4215  0817  00D9               	movwf	vfpfcnvrt@fmt
  4216  0818  0867               	movf	vfprintf@ap,w
  4217  0819  00E9               	movwf	??_vfprintf+1
  4218  081A  0869               	movf	??_vfprintf+1,w
  4219  081B  00DA               	movwf	vfpfcnvrt@ap
  4220  081C  3180  2058  3188   	fcall	_vfpfcnvrt
  4221  081F  0020               	movlb	0	; select bank0
  4222  0820  0857               	movf	?_vfpfcnvrt,w
  4223  0821  0021               	movlb	1	; select bank1
  4224  0822  07DC               	addwf	_nout^(0+128),f
  4225  0823  0020               	movlb	0	; select bank0
  4226  0824  0858               	movf	?_vfpfcnvrt+1,w
  4227  0825  0021               	movlb	1	; select bank1
  4228  0826  3DDD               	addwfc	(_nout+1)^(0+128),f
  4229  0827  2808               	goto	l4901
  4230  0828                     l4903:	
  4231                           
  4232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4233  0828  0021               	movlb	1	; select bank1
  4234  0829  085D               	movf	(_nout+1)^(0+128),w
  4235  082A  0020               	movlb	0	; select bank0
  4236  082B  00E4               	movwf	?_vfprintf+1
  4237  082C  0021               	movlb	1	; select bank1
  4238  082D  085C               	movf	_nout^(0+128),w
  4239  082E  0020               	movlb	0	; select bank0
  4240  082F  00E3               	movwf	?_vfprintf
  4241  0830  0008               	return
  4242  0831                     __end_of_vfprintf:	
  4243                           
  4244                           	psect	text5
  4245  0058                     __ptext5:	
  4246 ;; *************** function _vfpfcnvrt *****************
  4247 ;; Defined at:
  4248 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  fp              2   55[BANK0 ] PTR struct _IO_FILE
  4251 ;;		 -> vsnprintf@f(6), 
  4252 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  4253 ;;		 -> vfprintf@cfmt(2), 
  4254 ;;  ap              1   58[BANK0 ] PTR PTR void 
  4255 ;;		 -> snprintf@ap(1), 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  llu             8   17[BANK1 ] unsigned long long 
  4258 ;;  ll              8    7[BANK1 ] long long 
  4259 ;;  f               4    0        long long 
  4260 ;;  ct              3    0        unsigned char [3]
  4261 ;;  done            2    1[BANK1 ] int 
  4262 ;;  i               2    0        int 
  4263 ;;  c               1   16[BANK1 ] unsigned char 
  4264 ;;  vp              1   15[BANK1 ] PTR void 
  4265 ;;		 -> ?_snprintf(2), 
  4266 ;;  cp              1    0[BANK1 ] PTR unsigned char 
  4267 ;;		 -> ?_snprintf(2), 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  2   55[BANK0 ] int 
  4270 ;; Registers used:
  4271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4277 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4278 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4279 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4280 ;;      Totals:         0      12      25       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4281 ;;Total ram usage:       37 bytes
  4282 ;; Hardware stack levels used:    1
  4283 ;; Hardware stack levels required when called:    6
  4284 ;; This function calls:
  4285 ;;		_atoi
  4286 ;;		_ctoa
  4287 ;;		_dtoa
  4288 ;;		_fputc
  4289 ;;		_isdigit
  4290 ;;		_otoa
  4291 ;;		_stoa
  4292 ;;		_strncmp
  4293 ;;		_utoa
  4294 ;;		_xtoa
  4295 ;; This function is called by:
  4296 ;;		_vfprintf
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           
  4301                           ;psect for function _vfpfcnvrt
  4302  0058                     _vfpfcnvrt:	
  4303                           
  4304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4305                           
  4306                           ;incstack = 0
  4307                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4308  0058  0020               	movlb	0	; select bank0
  4309  0059  0859               	movf	vfpfcnvrt@fmt,w
  4310  005A  0086               	movwf	6
  4311  005B  0187               	clrf	7
  4312  005C  3F40               	moviw [0]fsr1
  4313  005D  00DB               	movwf	??_vfpfcnvrt
  4314  005E  3F41               	moviw [1]fsr1
  4315  005F  00DC               	movwf	??_vfpfcnvrt+1
  4316  0060  085B               	movf	??_vfpfcnvrt,w
  4317  0061  0084               	movwf	4
  4318  0062  085C               	movf	??_vfpfcnvrt+1,w
  4319  0063  0085               	movwf	5
  4320  0064  0012               	moviw fsr0++
  4321  0065  3A25               	xorlw	37
  4322  0066  1D03               	btfss	3,2
  4323  0067  29F8               	goto	L4
  4324                           
  4325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4326  0068  0859               	movf	vfpfcnvrt@fmt,w
  4327  0069  0086               	movwf	6
  4328  006A  0187               	clrf	7
  4329  006B  3001               	movlw	1
  4330  006C  0781               	addwf	1,f
  4331  006D  3141               	addfsr 1,1
  4332  006E  1803               	skipnc
  4333  006F  0A81               	incf	1,f
  4334                           
  4335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4336  0070  0021               	movlb	1	; select bank1
  4337  0071  01DE               	clrf	_width^(0+128)
  4338  0072  01DF               	clrf	(_width+1)^(0+128)
  4339  0073  01E2               	clrf	_flags^(0+128)
  4340  0074  01E3               	clrf	(_flags+1)^(0+128)
  4341                           
  4342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4343  0075  30FF               	movlw	255
  4344  0076  00E0               	movwf	_prec^(0+128)
  4345  0077  30FF               	movlw	255
  4346  0078  00E1               	movwf	(_prec^(0+128)+1)
  4347                           
  4348                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  4349  0079  01A1               	clrf	vfpfcnvrt@done^(0+128)
  4350  007A  01A2               	clrf	(vfpfcnvrt@done+1)^(0+128)
  4351                           
  4352                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4353  007B  2899               	goto	l4537
  4354  007C                     l569:	
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 691:       
      +                                    case '-' :
  4356                           
  4357                           
  4358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  4359  007C  0021               	movlb	1	; select bank1
  4360  007D  1462               	bsf	_flags^(0+128),0
  4361  007E                     l4521:	
  4362                           
  4363                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  4364  007E  0020               	movlb	0	; select bank0
  4365  007F  0859               	movf	vfpfcnvrt@fmt,w
  4366  0080  0086               	movwf	6
  4367  0081  0187               	clrf	7
  4368  0082  3001               	movlw	1
  4369  0083  0781               	addwf	1,f
  4370  0084  3141               	addfsr 1,1
  4371  0085  1803               	skipnc
  4372  0086  0A81               	incf	1,f
  4373                           
  4374                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  4375  0087  2899               	goto	l4537
  4376  0088                     l571:	
  4377                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 695:       
      +                                    case '0' :
  4378                           
  4379                           
  4380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  4381  0088  0021               	movlb	1	; select bank1
  4382  0089  14E2               	bsf	_flags^(0+128),1
  4383  008A  287E               	goto	l4521
  4384  008B                     l572:	
  4385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 699:       
      +                                    case '+' :
  4386                           
  4387                           
  4388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  4389  008B  0021               	movlb	1	; select bank1
  4390  008C  1562               	bsf	_flags^(0+128),2
  4391  008D  287E               	goto	l4521
  4392  008E                     l573:	
  4393                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 703:       
      +                                    case ' ' :
  4394                           
  4395                           
  4396                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  4397  008E  0021               	movlb	1	; select bank1
  4398  008F  15E2               	bsf	_flags^(0+128),3
  4399  0090  287E               	goto	l4521
  4400  0091                     l574:	
  4401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 707:       
      +                                    case '#' :
  4402                           
  4403                           
  4404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  4405  0091  0021               	movlb	1	; select bank1
  4406  0092  1662               	bsf	_flags^(0+128),4
  4407  0093  287E               	goto	l4521
  4408  0094                     l4531:	
  4409                           
  4410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  4411  0094  3001               	movlw	1
  4412  0095  0021               	movlb	1	; select bank1
  4413  0096  00A1               	movwf	vfpfcnvrt@done^(0+128)
  4414  0097  3000               	movlw	0
  4415  0098  00A2               	movwf	(vfpfcnvrt@done^(0+128)+1)
  4416  0099                     l4537:	
  4417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  4418                           
  4419                           
  4420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  4421  0099  0021               	movlb	1	; select bank1
  4422  009A  0821               	movf	vfpfcnvrt@done^(0+128),w
  4423  009B  0422               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  4424  009C  1D03               	btfss	3,2
  4425  009D  28C4               	goto	l576
  4426  009E  0020               	movlb	0	; select bank0
  4427  009F  0859               	movf	vfpfcnvrt@fmt,w
  4428  00A0  0086               	movwf	6
  4429  00A1  0187               	clrf	7
  4430  00A2  3F40               	moviw [0]fsr1
  4431  00A3  00DB               	movwf	??_vfpfcnvrt
  4432  00A4  3F41               	moviw [1]fsr1
  4433  00A5  00DC               	movwf	??_vfpfcnvrt+1
  4434  00A6  085B               	movf	??_vfpfcnvrt,w
  4435  00A7  0084               	movwf	4
  4436  00A8  085C               	movf	??_vfpfcnvrt+1,w
  4437  00A9  0085               	movwf	5
  4438  00AA  0800               	movf	0,w	;code access
  4439  00AB  00DD               	movwf	??_vfpfcnvrt+2
  4440  00AC  01DE               	clrf	??_vfpfcnvrt+3
  4441                           
  4442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4443                           ; Switch size 1, requested type "simple"
  4444                           ; Number of cases is 1, Range of values is 0 to 0
  4445                           ; switch strategies available:
  4446                           ; Name         Instructions Cycles
  4447                           ; simple_byte            4     3 (average)
  4448                           ; direct_byte            8     6 (fixed)
  4449                           ; jumptable            260     6 (fixed)
  4450                           ;	Chosen strategy is simple_byte
  4451  00AD  085E               	movf	??_vfpfcnvrt+3,w
  4452  00AE  3A00               	xorlw	0	; case 0
  4453  00AF  1903               	skipnz
  4454  00B0  28B2               	goto	l5207
  4455  00B1  2894               	goto	l4531
  4456  00B2                     l5207:	
  4457                           
  4458                           ; Switch size 1, requested type "simple"
  4459                           ; Number of cases is 5, Range of values is 32 to 48
  4460                           ; switch strategies available:
  4461                           ; Name         Instructions Cycles
  4462                           ; simple_byte           16     9 (average)
  4463                           ; direct_byte           43     9 (fixed)
  4464                           ; jumptable            263     9 (fixed)
  4465                           ;	Chosen strategy is simple_byte
  4466  00B2  085D               	movf	??_vfpfcnvrt+2,w
  4467  00B3  3A20               	xorlw	32	; case 32
  4468  00B4  1903               	skipnz
  4469  00B5  288E               	goto	l573
  4470  00B6  3A03               	xorlw	3	; case 35
  4471  00B7  1903               	skipnz
  4472  00B8  2891               	goto	l574
  4473  00B9  3A08               	xorlw	8	; case 43
  4474  00BA  1903               	skipnz
  4475  00BB  288B               	goto	l572
  4476  00BC  3A06               	xorlw	6	; case 45
  4477  00BD  1903               	skipnz
  4478  00BE  287C               	goto	l569
  4479  00BF  3A1D               	xorlw	29	; case 48
  4480  00C0  1903               	skipnz
  4481  00C1  2888               	goto	l571
  4482  00C2  2894               	goto	l4531
  4483  00C3  2899               	goto	l4537
  4484  00C4                     l576:	
  4485                           
  4486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  4487  00C4  1C62               	btfss	_flags^(0+128),0
  4488  00C5  28CA               	goto	l4541
  4489                           
  4490                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  4491  00C6  30FD               	movlw	253
  4492  00C7  05E2               	andwf	_flags^(0+128),f
  4493  00C8  30FF               	movlw	255
  4494  00C9  05E3               	andwf	(_flags+1)^(0+128),f
  4495  00CA                     l4541:	
  4496                           
  4497                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 723:       
      +                            if ((*fmt)[0] == '*') {
  4498  00CA  0020               	movlb	0	; select bank0
  4499  00CB  0859               	movf	vfpfcnvrt@fmt,w
  4500  00CC  0086               	movwf	6
  4501  00CD  0187               	clrf	7
  4502  00CE  3F40               	moviw [0]fsr1
  4503  00CF  00DB               	movwf	??_vfpfcnvrt
  4504  00D0  3F41               	moviw [1]fsr1
  4505  00D1  00DC               	movwf	??_vfpfcnvrt+1
  4506  00D2  085B               	movf	??_vfpfcnvrt,w
  4507  00D3  0084               	movwf	4
  4508  00D4  085C               	movf	??_vfpfcnvrt+1,w
  4509  00D5  0085               	movwf	5
  4510  00D6  0012               	moviw fsr0++
  4511  00D7  3A2A               	xorlw	42
  4512  00D8  1D03               	btfss	3,2
  4513  00D9  28F8               	goto	l4553
  4514                           
  4515                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 724:       
      +                                ++*fmt;
  4516  00DA  0859               	movf	vfpfcnvrt@fmt,w
  4517  00DB  0086               	movwf	6
  4518  00DC  0187               	clrf	7
  4519  00DD  3001               	movlw	1
  4520  00DE  0781               	addwf	1,f
  4521  00DF  3141               	addfsr 1,1
  4522  00E0  1803               	skipnc
  4523  00E1  0A81               	incf	1,f
  4524                           
  4525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 725:       
      +                                width = (*(int *)__va_arg(*(int **)ap, (int)0));
  4526  00E2  085A               	movf	vfpfcnvrt@ap,w
  4527  00E3  0086               	movwf	6
  4528  00E4  0187               	clrf	7
  4529  00E5  0801               	movf	1,w
  4530  00E6  0084               	movwf	4
  4531  00E7  0185               	clrf	5
  4532  00E8  3002               	movlw	2
  4533  00E9  0781               	addwf	1,f
  4534  00EA  3F00               	moviw [0]fsr0
  4535  00EB  0021               	movlb	1	; select bank1
  4536  00EC  00DE               	movwf	_width^(0+128)
  4537  00ED  3F01               	moviw [1]fsr0
  4538  00EE  00DF               	movwf	(_width+1)^(0+128)
  4539                           
  4540                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 726:       
      +                                if (width < 0) {
  4541  00EF  1FDF               	btfss	(_width+1)^(0+128),7
  4542  00F0  293B               	goto	l4563
  4543                           
  4544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 727:       
      +                                    flags |= (1 << 0);
  4545  00F1  1462               	bsf	_flags^(0+128),0
  4546                           
  4547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 728:       
      +                                    width = -width;
  4548  00F2  09DE               	comf	_width^(0+128),f
  4549  00F3  09DF               	comf	(_width+1)^(0+128),f
  4550  00F4  0ADE               	incf	_width^(0+128),f
  4551  00F5  1903               	skipnz
  4552  00F6  0ADF               	incf	(_width+1)^(0+128),f
  4553  00F7  293B               	goto	l4563
  4554  00F8                     l4553:	
  4555                           
  4556                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 731:       
      +                                width = atoi(*fmt);
  4557  00F8  0859               	movf	vfpfcnvrt@fmt,w
  4558  00F9  0086               	movwf	6
  4559  00FA  0187               	clrf	7
  4560  00FB  3F40               	moviw [0]fsr1
  4561  00FC  00F7               	movwf	atoi@s
  4562  00FD  3F41               	moviw [1]fsr1
  4563  00FE  00F8               	movwf	atoi@s+1
  4564  00FF  3193  2383  3180   	fcall	_atoi
  4565  0102  0878               	movf	?_atoi+1,w
  4566  0103  0021               	movlb	1	; select bank1
  4567  0104  00DF               	movwf	(_width+1)^(0+128)
  4568  0105  0877               	movf	?_atoi,w
  4569  0106  00DE               	movwf	_width^(0+128)
  4570                           
  4571                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 732:       
      +                                while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4572  0107  2911               	goto	l4557
  4573  0108                     l4555:	
  4574                           
  4575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 733:       
      +                                    ++*fmt;
  4576  0108  0020               	movlb	0	; select bank0
  4577  0109  0859               	movf	vfpfcnvrt@fmt,w
  4578  010A  0086               	movwf	6
  4579  010B  0187               	clrf	7
  4580  010C  3001               	movlw	1
  4581  010D  0781               	addwf	1,f
  4582  010E  3141               	addfsr 1,1
  4583  010F  1803               	skipnc
  4584  0110  0A81               	incf	1,f
  4585  0111                     l4557:	
  4586  0111  0020               	movlb	0	; select bank0
  4587  0112  0859               	movf	vfpfcnvrt@fmt,w
  4588  0113  0086               	movwf	6
  4589  0114  0187               	clrf	7
  4590  0115  3F40               	moviw [0]fsr1
  4591  0116  00DB               	movwf	??_vfpfcnvrt
  4592  0117  3F41               	moviw [1]fsr1
  4593  0118  00DC               	movwf	??_vfpfcnvrt+1
  4594  0119  085B               	movf	??_vfpfcnvrt,w
  4595  011A  0084               	movwf	4
  4596  011B  085C               	movf	??_vfpfcnvrt+1,w
  4597  011C  0085               	movwf	5
  4598  011D  0800               	movf	0,w	;code access
  4599  011E  3ED0               	addlw	208
  4600  011F  00DD               	movwf	??_vfpfcnvrt+2
  4601  0120  30FF               	movlw	255
  4602  0121  1803               	skipnc
  4603  0122  3000               	movlw	0
  4604  0123  00DE               	movwf	??_vfpfcnvrt+3
  4605  0124  3000               	movlw	0
  4606  0125  025E               	subwf	??_vfpfcnvrt+3,w
  4607  0126  300A               	movlw	10
  4608  0127  1903               	skipnz
  4609  0128  025D               	subwf	??_vfpfcnvrt+2,w
  4610  0129  1803               	btfsc	3,0
  4611  012A  292D               	goto	u5760
  4612  012B  3001               	movlw	1
  4613  012C  292E               	goto	u5770
  4614  012D                     u5760:	
  4615  012D  3000               	movlw	0
  4616  012E                     u5770:	
  4617  012E  00DF               	movwf	??_vfpfcnvrt+4
  4618  012F  01E0               	clrf	??_vfpfcnvrt+5
  4619  0130  085F               	movf	??_vfpfcnvrt+4,w
  4620  0131  0021               	movlb	1	; select bank1
  4621  0132  00A3               	movwf	_vfpfcnvrt$887^(0+128)
  4622  0133  0020               	movlb	0	; select bank0
  4623  0134  0860               	movf	??_vfpfcnvrt+5,w
  4624  0135  0021               	movlb	1	; select bank1
  4625  0136  00A4               	movwf	(_vfpfcnvrt$887+1)^(0+128)
  4626  0137  0823               	movf	_vfpfcnvrt$887^(0+128),w
  4627  0138  0424               	iorwf	(_vfpfcnvrt$887+1)^(0+128),w
  4628  0139  1D03               	btfss	3,2
  4629  013A  2908               	goto	l4555
  4630  013B                     l4563:	
  4631                           
  4632                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4633  013B  0020               	movlb	0	; select bank0
  4634  013C  0859               	movf	vfpfcnvrt@fmt,w
  4635  013D  0086               	movwf	6
  4636  013E  0187               	clrf	7
  4637  013F  3F40               	moviw [0]fsr1
  4638  0140  00DB               	movwf	??_vfpfcnvrt
  4639  0141  3F41               	moviw [1]fsr1
  4640  0142  00DC               	movwf	??_vfpfcnvrt+1
  4641  0143  085B               	movf	??_vfpfcnvrt,w
  4642  0144  0084               	movwf	4
  4643  0145  085C               	movf	??_vfpfcnvrt+1,w
  4644  0146  0085               	movwf	5
  4645  0147  0012               	moviw fsr0++
  4646  0148  3A2E               	xorlw	46
  4647  0149  1D03               	btfss	3,2
  4648  014A  29BF               	goto	l4585
  4649                           
  4650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4651  014B  0021               	movlb	1	; select bank1
  4652  014C  01E0               	clrf	_prec^(0+128)
  4653  014D  01E1               	clrf	(_prec+1)^(0+128)
  4654                           
  4655                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4656  014E  0020               	movlb	0	; select bank0
  4657  014F  0859               	movf	vfpfcnvrt@fmt,w
  4658  0150  0086               	movwf	6
  4659  0151  0187               	clrf	7
  4660  0152  3001               	movlw	1
  4661  0153  0781               	addwf	1,f
  4662  0154  3141               	addfsr 1,1
  4663  0155  1803               	skipnc
  4664  0156  0A81               	incf	1,f
  4665                           
  4666                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4667  0157  0859               	movf	vfpfcnvrt@fmt,w
  4668  0158  0086               	movwf	6
  4669  0159  0187               	clrf	7
  4670  015A  3F40               	moviw [0]fsr1
  4671  015B  00DB               	movwf	??_vfpfcnvrt
  4672  015C  3F41               	moviw [1]fsr1
  4673  015D  00DC               	movwf	??_vfpfcnvrt+1
  4674  015E  085B               	movf	??_vfpfcnvrt,w
  4675  015F  0084               	movwf	4
  4676  0160  085C               	movf	??_vfpfcnvrt+1,w
  4677  0161  0085               	movwf	5
  4678  0162  0012               	moviw fsr0++
  4679  0163  3A2A               	xorlw	42
  4680  0164  1D03               	btfss	3,2
  4681  0165  297C               	goto	l4575
  4682                           
  4683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4684  0166  0859               	movf	vfpfcnvrt@fmt,w
  4685  0167  0086               	movwf	6
  4686  0168  0187               	clrf	7
  4687  0169  3001               	movlw	1
  4688  016A  0781               	addwf	1,f
  4689  016B  3141               	addfsr 1,1
  4690  016C  1803               	skipnc
  4691  016D  0A81               	incf	1,f
  4692                           
  4693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4694  016E  085A               	movf	vfpfcnvrt@ap,w
  4695  016F  0086               	movwf	6
  4696  0170  0187               	clrf	7
  4697  0171  0801               	movf	1,w
  4698  0172  0084               	movwf	4
  4699  0173  0185               	clrf	5
  4700  0174  3002               	movlw	2
  4701  0175  0781               	addwf	1,f
  4702  0176  3F00               	moviw [0]fsr0
  4703  0177  0021               	movlb	1	; select bank1
  4704  0178  00E0               	movwf	_prec^(0+128)
  4705  0179  3F01               	moviw [1]fsr0
  4706  017A  00E1               	movwf	(_prec+1)^(0+128)
  4707                           
  4708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4709  017B  29BF               	goto	l4585
  4710  017C                     l4575:	
  4711                           
  4712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4713  017C  0859               	movf	vfpfcnvrt@fmt,w
  4714  017D  0086               	movwf	6
  4715  017E  0187               	clrf	7
  4716  017F  3F40               	moviw [0]fsr1
  4717  0180  00F7               	movwf	atoi@s
  4718  0181  3F41               	moviw [1]fsr1
  4719  0182  00F8               	movwf	atoi@s+1
  4720  0183  3193  2383  3180   	fcall	_atoi
  4721  0186  0878               	movf	?_atoi+1,w
  4722  0187  0021               	movlb	1	; select bank1
  4723  0188  00E1               	movwf	(_prec+1)^(0+128)
  4724  0189  0877               	movf	?_atoi,w
  4725  018A  00E0               	movwf	_prec^(0+128)
  4726                           
  4727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4728  018B  2995               	goto	l4579
  4729  018C                     l4577:	
  4730                           
  4731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4732  018C  0020               	movlb	0	; select bank0
  4733  018D  0859               	movf	vfpfcnvrt@fmt,w
  4734  018E  0086               	movwf	6
  4735  018F  0187               	clrf	7
  4736  0190  3001               	movlw	1
  4737  0191  0781               	addwf	1,f
  4738  0192  3141               	addfsr 1,1
  4739  0193  1803               	skipnc
  4740  0194  0A81               	incf	1,f
  4741  0195                     l4579:	
  4742  0195  0020               	movlb	0	; select bank0
  4743  0196  0859               	movf	vfpfcnvrt@fmt,w
  4744  0197  0086               	movwf	6
  4745  0198  0187               	clrf	7
  4746  0199  3F40               	moviw [0]fsr1
  4747  019A  00DB               	movwf	??_vfpfcnvrt
  4748  019B  3F41               	moviw [1]fsr1
  4749  019C  00DC               	movwf	??_vfpfcnvrt+1
  4750  019D  085B               	movf	??_vfpfcnvrt,w
  4751  019E  0084               	movwf	4
  4752  019F  085C               	movf	??_vfpfcnvrt+1,w
  4753  01A0  0085               	movwf	5
  4754  01A1  0800               	movf	0,w	;code access
  4755  01A2  3ED0               	addlw	208
  4756  01A3  00DD               	movwf	??_vfpfcnvrt+2
  4757  01A4  30FF               	movlw	255
  4758  01A5  1803               	skipnc
  4759  01A6  3000               	movlw	0
  4760  01A7  00DE               	movwf	??_vfpfcnvrt+3
  4761  01A8  3000               	movlw	0
  4762  01A9  025E               	subwf	??_vfpfcnvrt+3,w
  4763  01AA  300A               	movlw	10
  4764  01AB  1903               	skipnz
  4765  01AC  025D               	subwf	??_vfpfcnvrt+2,w
  4766  01AD  1803               	btfsc	3,0
  4767  01AE  29B1               	goto	u5810
  4768  01AF  3001               	movlw	1
  4769  01B0  29B2               	goto	u5820
  4770  01B1                     u5810:	
  4771  01B1  3000               	movlw	0
  4772  01B2                     u5820:	
  4773  01B2  00DF               	movwf	??_vfpfcnvrt+4
  4774  01B3  01E0               	clrf	??_vfpfcnvrt+5
  4775  01B4  085F               	movf	??_vfpfcnvrt+4,w
  4776  01B5  0021               	movlb	1	; select bank1
  4777  01B6  00A5               	movwf	_vfpfcnvrt$888^(0+128)
  4778  01B7  0020               	movlb	0	; select bank0
  4779  01B8  0860               	movf	??_vfpfcnvrt+5,w
  4780  01B9  0021               	movlb	1	; select bank1
  4781  01BA  00A6               	movwf	(_vfpfcnvrt$888+1)^(0+128)
  4782  01BB  0825               	movf	_vfpfcnvrt$888^(0+128),w
  4783  01BC  0426               	iorwf	(_vfpfcnvrt$888+1)^(0+128),w
  4784  01BD  1D03               	btfss	3,2
  4785  01BE  298C               	goto	l4577
  4786  01BF                     l4585:	
  4787                           
  4788                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 792:       
      +                            if (*fmt[0] == 'c') {
  4789  01BF  0020               	movlb	0	; select bank0
  4790  01C0  0859               	movf	vfpfcnvrt@fmt,w
  4791  01C1  0086               	movwf	6
  4792  01C2  0187               	clrf	7
  4793  01C3  3F40               	moviw [0]fsr1
  4794  01C4  00DB               	movwf	??_vfpfcnvrt
  4795  01C5  3F41               	moviw [1]fsr1
  4796  01C6  00DC               	movwf	??_vfpfcnvrt+1
  4797  01C7  085B               	movf	??_vfpfcnvrt,w
  4798  01C8  0084               	movwf	4
  4799  01C9  085C               	movf	??_vfpfcnvrt+1,w
  4800  01CA  0085               	movwf	5
  4801  01CB  0012               	moviw fsr0++
  4802  01CC  3A63               	xorlw	99
  4803  01CD  3184  1D03         	btfss	3,2
  4804  01CF  2CA6               	goto	l4595
  4805                           
  4806                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 793:       
      +                                ++*fmt;
  4807  01D0  0859               	movf	vfpfcnvrt@fmt,w
  4808  01D1  0086               	movwf	6
  4809  01D2  0187               	clrf	7
  4810  01D3  3001               	movlw	1
  4811  01D4  0781               	addwf	1,f
  4812  01D5  3141               	addfsr 1,1
  4813  01D6  1803               	skipnc
  4814  01D7  0A81               	incf	1,f
  4815                           
  4816                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 794:       
      +                                c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  4817  01D8  085A               	movf	vfpfcnvrt@ap,w
  4818  01D9  0086               	movwf	6
  4819  01DA  0187               	clrf	7
  4820  01DB  0801               	movf	1,w
  4821  01DC  0084               	movwf	4
  4822  01DD  0185               	clrf	5
  4823  01DE  3002               	movlw	2
  4824  01DF  0781               	addwf	1,f
  4825  01E0  0800               	movf	0,w
  4826  01E1  00DB               	movwf	??_vfpfcnvrt
  4827  01E2  085B               	movf	??_vfpfcnvrt,w
  4828  01E3  0021               	movlb	1	; select bank1
  4829  01E4  00B0               	movwf	vfpfcnvrt@c^(0+128)
  4830                           
  4831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 795:       
      +                                return ctoa(fp, c);
  4832  01E5  0020               	movlb	0	; select bank0
  4833  01E6  0858               	movf	vfpfcnvrt@fp+1,w
  4834  01E7  00B1               	movwf	ctoa@fp+1
  4835  01E8  0857               	movf	vfpfcnvrt@fp,w
  4836  01E9  00B0               	movwf	ctoa@fp
  4837  01EA  0021               	movlb	1	; select bank1
  4838  01EB  0830               	movf	vfpfcnvrt@c^(0+128),w
  4839  01EC  0020               	movlb	0	; select bank0
  4840  01ED  00DB               	movwf	??_vfpfcnvrt
  4841  01EE  085B               	movf	??_vfpfcnvrt,w
  4842  01EF  00B2               	movwf	ctoa@c
  4843  01F0  319F  27CF         	fcall	_ctoa
  4844  01F2  0020               	movlb	0	; select bank0
  4845  01F3  0831               	movf	?_ctoa+1,w
  4846  01F4  00D8               	movwf	?_vfpfcnvrt+1
  4847  01F5  0830               	movf	?_ctoa,w
  4848  01F6  00D7               	movwf	?_vfpfcnvrt
  4849  01F7  0008               	return
  4850  01F8                     L4:	
  4851  01F8                     L3:	
  4852  01F8  318F  2FDD         	ljmp	l4863
  4853                           
  4854                           	psect	text6
  4855  01FA                     __ptext6:	
  4856 ;; *************** function _xtoa *****************
  4857 ;; Defined at:
  4858 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  4861 ;;		 -> vsnprintf@f(6), 
  4862 ;;  d               8   18[BANK0 ] unsigned long long 
  4863 ;;  x               1   26[BANK0 ] unsigned char 
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;  n               8   43[BANK0 ] unsigned long long 
  4866 ;;  c               2   53[BANK0 ] int 
  4867 ;;  i               2   51[BANK0 ] int 
  4868 ;;  w               2   41[BANK0 ] int 
  4869 ;;  p               2   39[BANK0 ] int 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;                  2   16[BANK0 ] int 
  4872 ;; Registers used:
  4873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  4879 ;;      Params:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4880 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4881 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4882 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4883 ;;Total ram usage:       39 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    5
  4886 ;; This function calls:
  4887 ;;		_isalpha
  4888 ;;		_isupper
  4889 ;;		_pad
  4890 ;;		_toupper
  4891 ;; This function is called by:
  4892 ;;		_vfpfcnvrt
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _xtoa
  4898  01FA                     _xtoa:	
  4899                           
  4900                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.05\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  4901                           
  4902                           ;incstack = 0
  4903                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4904  01FA  0021               	movlb	1	; select bank1
  4905  01FB  1BE1               	btfsc	(_prec+1)^(0+128),7
  4906  01FC  2A01               	goto	l535
  4907                           
  4908                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  4909  01FD  30FD               	movlw	253
  4910  01FE  05E2               	andwf	_flags^(0+128),f
  4911  01FF  30FF               	movlw	255
  4912  0200  05E3               	andwf	(_flags+1)^(0+128),f
  4913  0201                     l535:	
  4914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 631:     }
  4915                           
  4916                           
  4917                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  4918  0201  0861               	movf	(_prec+1)^(0+128),w
  4919  0202  3A80               	xorlw	128
  4920  0203  0020               	movlb	0	; select bank0
  4921  0204  00BB               	movwf	??_xtoa
  4922  0205  3080               	movlw	128
  4923  0206  023B               	subwf	??_xtoa,w
  4924  0207  1D03               	skipz
  4925  0208  2A0C               	goto	u5435
  4926  0209  3001               	movlw	1
  4927  020A  0021               	movlb	1	; select bank1
  4928  020B  0260               	subwf	_prec^(0+128),w
  4929  020C                     u5435:	
  4930  020C  1803               	skipnc
  4931  020D  2A14               	goto	l4385
  4932  020E  3001               	movlw	1
  4933  020F  0020               	movlb	0	; select bank0
  4934  0210  00C7               	movwf	xtoa@p
  4935  0211  3000               	movlw	0
  4936  0212  00C8               	movwf	xtoa@p+1
  4937  0213  2A1C               	goto	l539
  4938  0214                     l4385:	
  4939  0214  0021               	movlb	1	; select bank1
  4940  0215  0861               	movf	(_prec+1)^(0+128),w
  4941  0216  0020               	movlb	0	; select bank0
  4942  0217  00C8               	movwf	xtoa@p+1
  4943  0218  0021               	movlb	1	; select bank1
  4944  0219  0860               	movf	_prec^(0+128),w
  4945  021A  0020               	movlb	0	; select bank0
  4946  021B  00C7               	movwf	xtoa@p
  4947  021C                     l539:	
  4948                           
  4949                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  4950  021C  0021               	movlb	1	; select bank1
  4951  021D  085F               	movf	(_width+1)^(0+128),w
  4952  021E  0020               	movlb	0	; select bank0
  4953  021F  00CA               	movwf	xtoa@w+1
  4954  0220  0021               	movlb	1	; select bank1
  4955  0221  085E               	movf	_width^(0+128),w
  4956  0222  0020               	movlb	0	; select bank0
  4957  0223  00C9               	movwf	xtoa@w
  4958                           
  4959                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  4960  0224  0021               	movlb	1	; select bank1
  4961  0225  1E62               	btfss	_flags^(0+128),4
  4962  0226  2A2C               	goto	l4391
  4963                           
  4964                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  4965  0227  30FE               	movlw	254
  4966  0228  0020               	movlb	0	; select bank0
  4967  0229  07C9               	addwf	xtoa@w,f
  4968  022A  30FF               	movlw	255
  4969  022B  3DCA               	addwfc	xtoa@w+1,f
  4970  022C                     l4391:	
  4971                           
  4972                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  4973  022C  0020               	movlb	0	; select bank0
  4974  022D  0832               	movf	xtoa@d,w
  4975  022E  00CB               	movwf	xtoa@n
  4976  022F  0833               	movf	xtoa@d+1,w
  4977  0230  00CC               	movwf	xtoa@n+1
  4978  0231  0834               	movf	xtoa@d+2,w
  4979  0232  00CD               	movwf	xtoa@n+2
  4980  0233  0835               	movf	xtoa@d+3,w
  4981  0234  00CE               	movwf	xtoa@n+3
  4982  0235  0836               	movf	xtoa@d+4,w
  4983  0236  00CF               	movwf	xtoa@n+4
  4984  0237  0837               	movf	xtoa@d+5,w
  4985  0238  00D0               	movwf	xtoa@n+5
  4986  0239  0838               	movf	xtoa@d+6,w
  4987  023A  00D1               	movwf	xtoa@n+6
  4988  023B  0839               	movf	xtoa@d+7,w
  4989  023C  00D2               	movwf	xtoa@n+7
  4990                           
  4991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  4992  023D  301F               	movlw	31
  4993  023E  00D3               	movwf	xtoa@i
  4994  023F  3000               	movlw	0
  4995  0240  00D4               	movwf	xtoa@i+1
  4996                           
  4997                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  4998  0241  0022               	movlb	2	; select bank2
  4999  0242  01C9               	clrf	(_dbuf^(0+256)+31)
  5000                           
  5001                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5002  0243  2AEE               	goto	l4423
  5003  0244                     l4395:	
  5004                           
  5005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  5006  0244  30FF               	movlw	255
  5007  0245  0020               	movlb	0	; select bank0
  5008  0246  07D3               	addwf	xtoa@i,f
  5009  0247  30FF               	movlw	255
  5010  0248  3DD4               	addwfc	xtoa@i+1,f
  5011                           
  5012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  5013  0249  300F               	movlw	15
  5014  024A  054B               	andwf	xtoa@n,w
  5015  024B  00D5               	movwf	xtoa@c
  5016  024C  3000               	movlw	0
  5017  024D  054C               	andwf	xtoa@n+1,w
  5018  024E  00D6               	movwf	xtoa@c+1
  5019                           
  5020                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  5021  024F  0856               	movf	xtoa@c+1,w
  5022  0250  3A80               	xorlw	128
  5023  0251  00BB               	movwf	??_xtoa
  5024  0252  3080               	movlw	128
  5025  0253  023B               	subwf	??_xtoa,w
  5026  0254  1D03               	skipz
  5027  0255  2A58               	goto	u5455
  5028  0256  300A               	movlw	10
  5029  0257  0255               	subwf	xtoa@c,w
  5030  0258                     u5455:	
  5031  0258  1C03               	skipc
  5032  0259  2A5E               	goto	l4399
  5033  025A  0020               	movlb	0	; select bank0
  5034  025B  0855               	movf	xtoa@c,w
  5035  025C  3E57               	addlw	87
  5036  025D  2A61               	goto	L1
  5037  025E                     l4399:	
  5038  025E  0020               	movlb	0	; select bank0
  5039  025F  0855               	movf	xtoa@c,w
  5040  0260  3E30               	addlw	48
  5041  0261                     L1:	
  5042  0261  00D5               	movwf	xtoa@c
  5043  0262  3000               	movlw	0
  5044  0263  3D56               	addwfc	xtoa@c+1,w
  5045  0264  00D6               	movwf	xtoa@c+1
  5046  0265  083A               	movf	xtoa@x,w
  5047  0266  3EBF               	addlw	191
  5048  0267  00BB               	movwf	??_xtoa
  5049  0268  30FF               	movlw	255
  5050  0269  1803               	skipnc
  5051  026A  3000               	movlw	0
  5052  026B  00BC               	movwf	??_xtoa+1
  5053  026C  3000               	movlw	0
  5054  026D  023C               	subwf	??_xtoa+1,w
  5055  026E  301A               	movlw	26
  5056  026F  1903               	skipnz
  5057  0270  023B               	subwf	??_xtoa,w
  5058  0271  1803               	btfsc	3,0
  5059  0272  2A75               	goto	u5460
  5060  0273  3001               	movlw	1
  5061  0274  2A76               	goto	u5470
  5062  0275                     u5460:	
  5063  0275  3000               	movlw	0
  5064  0276                     u5470:	
  5065  0276  00BD               	movwf	??_xtoa+2
  5066  0277  01BE               	clrf	??_xtoa+3
  5067  0278  083D               	movf	??_xtoa+2,w
  5068  0279  00C3               	movwf	_xtoa$872
  5069  027A  083E               	movf	??_xtoa+3,w
  5070  027B  00C4               	movwf	_xtoa$872+1
  5071  027C  0843               	movf	_xtoa$872,w
  5072  027D  0444               	iorwf	_xtoa$872+1,w
  5073  027E  1903               	btfsc	3,2
  5074  027F  2AAC               	goto	l4415
  5075  0280  3020               	movlw	32
  5076  0281  0455               	iorwf	xtoa@c,w
  5077  0282  00BB               	movwf	??_xtoa
  5078  0283  3000               	movlw	0
  5079  0284  0456               	iorwf	xtoa@c+1,w
  5080  0285  00BC               	movwf	??_xtoa+1
  5081  0286  083B               	movf	??_xtoa,w
  5082  0287  3E9F               	addlw	159
  5083  0288  00BD               	movwf	??_xtoa+2
  5084  0289  30FF               	movlw	255
  5085  028A  3D3C               	addwfc	??_xtoa+1,w
  5086  028B  00BE               	movwf	??_xtoa+3
  5087  028C  3000               	movlw	0
  5088  028D  023E               	subwf	??_xtoa+3,w
  5089  028E  301A               	movlw	26
  5090  028F  1903               	skipnz
  5091  0290  023D               	subwf	??_xtoa+2,w
  5092  0291  1803               	btfsc	3,0
  5093  0292  2A95               	goto	u5490
  5094  0293  3001               	movlw	1
  5095  0294  2A96               	goto	u5500
  5096  0295                     u5490:	
  5097  0295  3000               	movlw	0
  5098  0296                     u5500:	
  5099  0296  00BF               	movwf	??_xtoa+4
  5100  0297  01C0               	clrf	??_xtoa+5
  5101  0298  083F               	movf	??_xtoa+4,w
  5102  0299  00C5               	movwf	_xtoa$873
  5103  029A  0840               	movf	??_xtoa+5,w
  5104  029B  00C6               	movwf	_xtoa$873+1
  5105  029C  0845               	movf	_xtoa$873,w
  5106  029D  0446               	iorwf	_xtoa$873+1,w
  5107  029E  1903               	btfsc	3,2
  5108  029F  2AAC               	goto	l4415
  5109                           
  5110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  5111  02A0  0856               	movf	xtoa@c+1,w
  5112  02A1  00F8               	movwf	toupper@c+1
  5113  02A2  0855               	movf	xtoa@c,w
  5114  02A3  00F7               	movwf	toupper@c
  5115  02A4  319F  275F  3181   	fcall	_toupper
  5116  02A7  0878               	movf	?_toupper+1,w
  5117  02A8  0020               	movlb	0	; select bank0
  5118  02A9  00D6               	movwf	xtoa@c+1
  5119  02AA  0877               	movf	?_toupper,w
  5120  02AB  00D5               	movwf	xtoa@c
  5121  02AC                     l4415:	
  5122                           
  5123                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  5124  02AC  0855               	movf	xtoa@c,w
  5125  02AD  00BB               	movwf	??_xtoa
  5126  02AE  0853               	movf	xtoa@i,w
  5127  02AF  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5128  02B0  0086               	movwf	6
  5129  02B1  3001               	movlw	1	; select bank2/3
  5130  02B2  0087               	movwf	7
  5131  02B3  083B               	movf	??_xtoa,w
  5132  02B4  0081               	movwf	1
  5133                           
  5134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  5135  02B5  30FF               	movlw	255
  5136  02B6  07C7               	addwf	xtoa@p,f
  5137  02B7  30FF               	movlw	255
  5138  02B8  3DC8               	addwfc	xtoa@p+1,f
  5139                           
  5140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  5141  02B9  30FF               	movlw	255
  5142  02BA  07C9               	addwf	xtoa@w,f
  5143  02BB  30FF               	movlw	255
  5144  02BC  3DCA               	addwfc	xtoa@w+1,f
  5145                           
  5146                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  5147  02BD  304B               	movlw	low xtoa@n
  5148  02BE  0086               	movwf	6
  5149  02BF  3000               	movlw	high xtoa@n
  5150  02C0  0087               	movwf	7
  5151  02C1  3F40               	moviw [0]fsr1
  5152  02C2  00BB               	movwf	??_xtoa
  5153  02C3  3F41               	moviw [1]fsr1
  5154  02C4  00BC               	movwf	??_xtoa+1
  5155  02C5  3F42               	moviw [2]fsr1
  5156  02C6  00BD               	movwf	??_xtoa+2
  5157  02C7  3F43               	moviw [3]fsr1
  5158  02C8  00BE               	movwf	??_xtoa+3
  5159  02C9  3F44               	moviw [4]fsr1
  5160  02CA  00BF               	movwf	??_xtoa+4
  5161  02CB  3F45               	moviw [5]fsr1
  5162  02CC  00C0               	movwf	??_xtoa+5
  5163  02CD  3F46               	moviw [6]fsr1
  5164  02CE  00C1               	movwf	??_xtoa+6
  5165  02CF  3F47               	moviw [7]fsr1
  5166  02D0  00C2               	movwf	??_xtoa+7
  5167  02D1  3004               	movlw	4
  5168  02D2                     u5525:	
  5169  02D2  0020               	movlb	0	; select bank0
  5170  02D3  36C2               	lsrf	??_xtoa+7,f
  5171  02D4  0CC1               	rrf	??_xtoa+6,f
  5172  02D5  0CC0               	rrf	??_xtoa+5,f
  5173  02D6  0CBF               	rrf	??_xtoa+4,f
  5174  02D7  0CBE               	rrf	??_xtoa+3,f
  5175  02D8  0CBD               	rrf	??_xtoa+2,f
  5176  02D9  0CBC               	rrf	??_xtoa+1,f
  5177  02DA  0CBB               	rrf	??_xtoa,f
  5178  02DB  0B89               	decfsz	9,f
  5179  02DC  2AD2               	goto	u5525
  5180  02DD  0020               	movlb	0	; select bank0
  5181  02DE  0842               	movf	??_xtoa+7,w
  5182  02DF  00D2               	movwf	xtoa@n+7
  5183  02E0  0841               	movf	??_xtoa+6,w
  5184  02E1  00D1               	movwf	xtoa@n+6
  5185  02E2  0840               	movf	??_xtoa+5,w
  5186  02E3  00D0               	movwf	xtoa@n+5
  5187  02E4  083F               	movf	??_xtoa+4,w
  5188  02E5  00CF               	movwf	xtoa@n+4
  5189  02E6  083E               	movf	??_xtoa+3,w
  5190  02E7  00CE               	movwf	xtoa@n+3
  5191  02E8  083D               	movf	??_xtoa+2,w
  5192  02E9  00CD               	movwf	xtoa@n+2
  5193  02EA  083C               	movf	??_xtoa+1,w
  5194  02EB  00CC               	movwf	xtoa@n+1
  5195  02EC  083B               	movf	??_xtoa,w
  5196  02ED  00CB               	movwf	xtoa@n
  5197  02EE                     l4423:	
  5198                           
  5199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5200  02EE  0020               	movlb	0	; select bank0
  5201  02EF  0854               	movf	xtoa@i+1,w
  5202  02F0  3A80               	xorlw	128
  5203  02F1  00BB               	movwf	??_xtoa
  5204  02F2  3080               	movlw	128
  5205  02F3  023B               	subwf	??_xtoa,w
  5206  02F4  1D03               	skipz
  5207  02F5  2AF8               	goto	u5535
  5208  02F6  3002               	movlw	2
  5209  02F7  0253               	subwf	xtoa@i,w
  5210  02F8                     u5535:	
  5211  02F8  1C03               	skipc
  5212  02F9  2B1F               	goto	l560
  5213  02FA  0020               	movlb	0	; select bank0
  5214  02FB  084B               	movf	xtoa@n,w
  5215  02FC  044C               	iorwf	xtoa@n+1,w
  5216  02FD  044D               	iorwf	xtoa@n+2,w
  5217  02FE  044E               	iorwf	xtoa@n+3,w
  5218  02FF  044F               	iorwf	xtoa@n+4,w
  5219  0300  0450               	iorwf	xtoa@n+5,w
  5220  0301  0451               	iorwf	xtoa@n+6,w
  5221  0302  0452               	iorwf	xtoa@n+7,w
  5222  0303  1D03               	skipz
  5223  0304  2A44               	goto	l4395
  5224  0305  0848               	movf	xtoa@p+1,w
  5225  0306  3A80               	xorlw	128
  5226  0307  00BB               	movwf	??_xtoa
  5227  0308  3080               	movlw	128
  5228  0309  023B               	subwf	??_xtoa,w
  5229  030A  1D03               	skipz
  5230  030B  2B0E               	goto	u5555
  5231  030C  3001               	movlw	1
  5232  030D  0247               	subwf	xtoa@p,w
  5233  030E                     u5555:	
  5234  030E  1803               	skipnc
  5235  030F  2A44               	goto	l4395
  5236  0310  0020               	movlb	0	; select bank0
  5237  0311  084A               	movf	xtoa@w+1,w
  5238  0312  3A80               	xorlw	128
  5239  0313  00BB               	movwf	??_xtoa
  5240  0314  3080               	movlw	128
  5241  0315  023B               	subwf	??_xtoa,w
  5242  0316  1D03               	skipz
  5243  0317  2B1A               	goto	u5565
  5244  0318  3001               	movlw	1
  5245  0319  0249               	subwf	xtoa@w,w
  5246  031A                     u5565:	
  5247  031A  1C03               	skipc
  5248  031B  2B1F               	goto	l560
  5249  031C  0021               	movlb	1	; select bank1
  5250  031D  18E2               	btfsc	_flags^(0+128),1
  5251  031E  2A44               	goto	l4395
  5252  031F                     l560:	
  5253                           
  5254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  5255  031F  0021               	movlb	1	; select bank1
  5256  0320  1E62               	btfss	_flags^(0+128),4
  5257  0321  2B3D               	goto	l4439
  5258                           
  5259                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  5260  0322  30FF               	movlw	255
  5261  0323  0020               	movlb	0	; select bank0
  5262  0324  07D3               	addwf	xtoa@i,f
  5263  0325  30FF               	movlw	255
  5264  0326  3DD4               	addwfc	xtoa@i+1,f
  5265                           
  5266                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  5267  0327  083A               	movf	xtoa@x,w
  5268  0328  00BB               	movwf	??_xtoa
  5269  0329  0853               	movf	xtoa@i,w
  5270  032A  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5271  032B  0086               	movwf	6
  5272  032C  3001               	movlw	1	; select bank2/3
  5273  032D  0087               	movwf	7
  5274  032E  083B               	movf	??_xtoa,w
  5275  032F  0081               	movwf	1
  5276                           
  5277                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  5278  0330  30FF               	movlw	255
  5279  0331  07D3               	addwf	xtoa@i,f
  5280  0332  30FF               	movlw	255
  5281  0333  3DD4               	addwfc	xtoa@i+1,f
  5282                           
  5283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  5284  0334  3030               	movlw	48
  5285  0335  00BB               	movwf	??_xtoa
  5286  0336  0853               	movf	xtoa@i,w
  5287  0337  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5288  0338  0086               	movwf	6
  5289  0339  3001               	movlw	1	; select bank2/3
  5290  033A  0087               	movwf	7
  5291  033B  083B               	movf	??_xtoa,w
  5292  033C  0081               	movwf	1
  5293  033D                     l4439:	
  5294                           
  5295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  5296  033D  0020               	movlb	0	; select bank0
  5297  033E  0831               	movf	xtoa@fp+1,w
  5298  033F  00A7               	movwf	pad@fp+1
  5299  0340  0830               	movf	xtoa@fp,w
  5300  0341  00A6               	movwf	pad@fp
  5301  0342  0853               	movf	xtoa@i,w
  5302  0343  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5303  0344  00BB               	movwf	??_xtoa
  5304  0345  083B               	movf	??_xtoa,w
  5305  0346  00A8               	movwf	pad@buf
  5306  0347  084A               	movf	xtoa@w+1,w
  5307  0348  00AA               	movwf	pad@p+1
  5308  0349  0849               	movf	xtoa@w,w
  5309  034A  00A9               	movwf	pad@p
  5310  034B  3190  208A         	fcall	_pad
  5311  034D  0020               	movlb	0	; select bank0
  5312  034E  0827               	movf	?_pad+1,w
  5313  034F  00B1               	movwf	?_xtoa+1
  5314  0350  0826               	movf	?_pad,w
  5315  0351  00B0               	movwf	?_xtoa
  5316  0352  0008               	return
  5317  0353                     __end_of_xtoa:	
  5318                           
  5319                           	psect	text7
  5320  1F5F                     __ptext7:	
  5321 ;; *************** function _toupper *****************
  5322 ;; Defined at:
  5323 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\toupper.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  c               2    7[COMMON] int 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  2    7[COMMON] int 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5339 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5340 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5341 ;;Total ram usage:        8 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    2
  5344 ;; This function calls:
  5345 ;;		_islower
  5346 ;; This function is called by:
  5347 ;;		_xtoa
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           
  5352                           ;psect for function _toupper
  5353  1F5F                     _toupper:	
  5354                           
  5355                           ;incstack = 0
  5356                           ; Regs used in _toupper: [wreg+status,2+status,0]
  5357  1F5F  0877               	movf	toupper@c,w
  5358  1F60  3E9F               	addlw	159
  5359  1F61  0020               	movlb	0	; select bank0
  5360  1F62  00A0               	movwf	??_toupper
  5361  1F63  30FF               	movlw	255
  5362  1F64  3D78               	addwfc	toupper@c+1,w
  5363  1F65  00A1               	movwf	??_toupper+1
  5364  1F66  3000               	movlw	0
  5365  1F67  0221               	subwf	??_toupper+1,w
  5366  1F68  301A               	movlw	26
  5367  1F69  1903               	skipnz
  5368  1F6A  0220               	subwf	??_toupper,w
  5369  1F6B  1803               	btfsc	3,0
  5370  1F6C  2F6F               	goto	u4580
  5371  1F6D  3001               	movlw	1
  5372  1F6E  2F70               	goto	u4590
  5373  1F6F                     u4580:	
  5374  1F6F  3000               	movlw	0
  5375  1F70                     u4590:	
  5376  1F70  00A2               	movwf	??_toupper+2
  5377  1F71  01A3               	clrf	??_toupper+3
  5378  1F72  0822               	movf	??_toupper+2,w
  5379  1F73  00F9               	movwf	_toupper$1394
  5380  1F74  0823               	movf	??_toupper+3,w
  5381  1F75  00FA               	movwf	_toupper$1394+1
  5382  1F76  0879               	movf	_toupper$1394,w
  5383  1F77  047A               	iorwf	_toupper$1394+1,w
  5384  1F78  1903               	btfsc	3,2
  5385  1F79  0008               	return
  5386  1F7A  305F               	movlw	95
  5387  1F7B  0577               	andwf	toupper@c,w
  5388  1F7C  00F7               	movwf	?_toupper
  5389  1F7D  3000               	movlw	0
  5390  1F7E  0578               	andwf	toupper@c+1,w
  5391  1F7F  00F8               	movwf	?_toupper+1
  5392  1F80  0008               	return
  5393  1F81                     __end_of_toupper:	
  5394                           
  5395                           	psect	text8
  5396  1E7A                     __ptext8:	
  5397 ;; *************** function _islower *****************
  5398 ;; Defined at:
  5399 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\islower.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;  c               2    1[COMMON] int 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  2    1[COMMON] int 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5413 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5415 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5416 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5417 ;;Total ram usage:        6 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    1
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_toupper
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           
  5428                           ;psect for function _islower
  5429  1E7A                     _islower:	
  5430                           
  5431                           ;incstack = 0
  5432                           ; Regs used in _islower: [wreg+status,2+status,0]
  5433  1E7A  0871               	movf	islower@c,w
  5434  1E7B  3E9F               	addlw	159
  5435  1E7C  00F3               	movwf	??_islower
  5436  1E7D  30FF               	movlw	255
  5437  1E7E  3D72               	addwfc	islower@c+1,w
  5438  1E7F  00F4               	movwf	??_islower+1
  5439  1E80  3000               	movlw	0
  5440  1E81  0274               	subwf	??_islower+1,w
  5441  1E82  301A               	movlw	26
  5442  1E83  1903               	skipnz
  5443  1E84  0273               	subwf	??_islower,w
  5444  1E85  1803               	btfsc	3,0
  5445  1E86  2E89               	goto	u4470
  5446  1E87  3001               	movlw	1
  5447  1E88  2E8A               	goto	u4480
  5448  1E89                     u4470:	
  5449  1E89  3000               	movlw	0
  5450  1E8A                     u4480:	
  5451  1E8A  00F5               	movwf	??_islower+2
  5452  1E8B  01F6               	clrf	??_islower+3
  5453  1E8C  0875               	movf	??_islower+2,w
  5454  1E8D  00F1               	movwf	?_islower
  5455  1E8E  0876               	movf	??_islower+3,w
  5456  1E8F  00F2               	movwf	?_islower+1
  5457  1E90  0008               	return
  5458  1E91                     __end_of_islower:	
  5459                           
  5460                           	psect	text9
  5461  1E63                     __ptext9:	
  5462 ;; *************** function _isupper *****************
  5463 ;; Defined at:
  5464 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isupper.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  c               2    1[COMMON] int 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;		None
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  2    1[COMMON] int 
  5471 ;; Registers used:
  5472 ;;		wreg, status,2, status,0
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5480 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5481 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5482 ;;Total ram usage:        6 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    1
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_xtoa
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           
  5493                           ;psect for function _isupper
  5494  1E63                     _isupper:	
  5495                           
  5496                           ;incstack = 0
  5497                           ; Regs used in _isupper: [wreg+status,2+status,0]
  5498  1E63  0871               	movf	isupper@c,w
  5499  1E64  3EBF               	addlw	191
  5500  1E65  00F3               	movwf	??_isupper
  5501  1E66  30FF               	movlw	255
  5502  1E67  3D72               	addwfc	isupper@c+1,w
  5503  1E68  00F4               	movwf	??_isupper+1
  5504  1E69  3000               	movlw	0
  5505  1E6A  0274               	subwf	??_isupper+1,w
  5506  1E6B  301A               	movlw	26
  5507  1E6C  1903               	skipnz
  5508  1E6D  0273               	subwf	??_isupper,w
  5509  1E6E  1803               	btfsc	3,0
  5510  1E6F  2E72               	goto	u4540
  5511  1E70  3001               	movlw	1
  5512  1E71  2E73               	goto	u4550
  5513  1E72                     u4540:	
  5514  1E72  3000               	movlw	0
  5515  1E73                     u4550:	
  5516  1E73  00F5               	movwf	??_isupper+2
  5517  1E74  01F6               	clrf	??_isupper+3
  5518  1E75  0875               	movf	??_isupper+2,w
  5519  1E76  00F1               	movwf	?_isupper
  5520  1E77  0876               	movf	??_isupper+3,w
  5521  1E78  00F2               	movwf	?_isupper+1
  5522  1E79  0008               	return
  5523  1E7A                     __end_of_isupper:	
  5524                           
  5525                           	psect	text10
  5526  1EE1                     __ptext10:	
  5527 ;; *************** function _isalpha *****************
  5528 ;; Defined at:
  5529 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isalpha.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;  c               2    1[COMMON] int 
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  2    1[COMMON] int 
  5536 ;; Registers used:
  5537 ;;		wreg, status,2, status,0
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5545 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5546 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5547 ;;Total ram usage:        8 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    1
  5550 ;; This function calls:
  5551 ;;		Nothing
  5552 ;; This function is called by:
  5553 ;;		_xtoa
  5554 ;; This function uses a non-reentrant model
  5555 ;;
  5556                           
  5557                           
  5558                           ;psect for function _isalpha
  5559  1EE1                     _isalpha:	
  5560                           
  5561                           ;incstack = 0
  5562                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  5563  1EE1  3020               	movlw	32
  5564  1EE2  0471               	iorwf	isalpha@c,w
  5565  1EE3  00F3               	movwf	??_isalpha
  5566  1EE4  3000               	movlw	0
  5567  1EE5  0472               	iorwf	isalpha@c+1,w
  5568  1EE6  00F4               	movwf	??_isalpha+1
  5569  1EE7  0873               	movf	??_isalpha,w
  5570  1EE8  3E9F               	addlw	159
  5571  1EE9  00F5               	movwf	??_isalpha+2
  5572  1EEA  30FF               	movlw	255
  5573  1EEB  3D74               	addwfc	??_isalpha+1,w
  5574  1EEC  00F6               	movwf	??_isalpha+3
  5575  1EED  3000               	movlw	0
  5576  1EEE  0276               	subwf	??_isalpha+3,w
  5577  1EEF  301A               	movlw	26
  5578  1EF0  1903               	skipnz
  5579  1EF1  0275               	subwf	??_isalpha+2,w
  5580  1EF2  1803               	btfsc	3,0
  5581  1EF3  2EF6               	goto	u4560
  5582  1EF4  3001               	movlw	1
  5583  1EF5  2EF7               	goto	u4570
  5584  1EF6                     u4560:	
  5585  1EF6  3000               	movlw	0
  5586  1EF7                     u4570:	
  5587  1EF7  00F7               	movwf	??_isalpha+4
  5588  1EF8  01F8               	clrf	??_isalpha+5
  5589  1EF9  0877               	movf	??_isalpha+4,w
  5590  1EFA  00F1               	movwf	?_isalpha
  5591  1EFB  0878               	movf	??_isalpha+5,w
  5592  1EFC  00F2               	movwf	?_isalpha+1
  5593  1EFD  0008               	return
  5594  1EFE                     __end_of_isalpha:	
  5595                           
  5596                           	psect	text11
  5597  171F                     __ptext11:	
  5598 ;; *************** function _utoa *****************
  5599 ;; Defined at:
  5600 ;;		line 593 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  5603 ;;		 -> vsnprintf@f(6), 
  5604 ;;  d               8   18[BANK0 ] unsigned long long 
  5605 ;; Auto vars:     Size  Location     Type
  5606 ;;  n               8   31[BANK0 ] unsigned long long 
  5607 ;;  i               2   39[BANK0 ] int 
  5608 ;;  w               2   29[BANK0 ] int 
  5609 ;;  p               2   27[BANK0 ] int 
  5610 ;; Return value:  Size  Location     Type
  5611 ;;                  2   16[BANK0 ] int 
  5612 ;; Registers used:
  5613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5614 ;; Tracked objects:
  5615 ;;		On entry : 0/0
  5616 ;;		On exit  : 0/0
  5617 ;;		Unchanged: 0/0
  5618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5619 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5620 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5621 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5622 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5623 ;;Total ram usage:       25 bytes
  5624 ;; Hardware stack levels used:    1
  5625 ;; Hardware stack levels required when called:    5
  5626 ;; This function calls:
  5627 ;;		___lodiv
  5628 ;;		___lomod
  5629 ;;		_pad
  5630 ;; This function is called by:
  5631 ;;		_vfpfcnvrt
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           
  5636                           ;psect for function _utoa
  5637  171F                     _utoa:	
  5638                           
  5639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 593: static
      +                           int utoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 594: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 595:     int i, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.0
      +                          5\pic\sources\c99\common\doprnt.c: 596:     unsigned long long n;;C:\Program Files (x86)
      +                          \Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 599:     if (!(prec < 0)) {
  5640                           
  5641                           ;incstack = 0
  5642                           ; Regs used in _utoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5643  171F  0021               	movlb	1	; select bank1
  5644  1720  1BE1               	btfsc	(_prec+1)^(0+128),7
  5645  1721  2F26               	goto	l520
  5646                           
  5647                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 600:       
      +                            flags &= ~(1 << 1);
  5648  1722  30FD               	movlw	253
  5649  1723  05E2               	andwf	_flags^(0+128),f
  5650  1724  30FF               	movlw	255
  5651  1725  05E3               	andwf	(_flags+1)^(0+128),f
  5652  1726                     l520:	
  5653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 601:     }
  5654                           
  5655                           
  5656                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 602:     p 
      +                          = (0 < prec) ? prec : 1;
  5657  1726  0861               	movf	(_prec+1)^(0+128),w
  5658  1727  3A80               	xorlw	128
  5659  1728  0020               	movlb	0	; select bank0
  5660  1729  00BA               	movwf	??_utoa
  5661  172A  3080               	movlw	128
  5662  172B  023A               	subwf	??_utoa,w
  5663  172C  1D03               	skipz
  5664  172D  2F31               	goto	u5365
  5665  172E  3001               	movlw	1
  5666  172F  0021               	movlb	1	; select bank1
  5667  1730  0260               	subwf	_prec^(0+128),w
  5668  1731                     u5365:	
  5669  1731  1803               	skipnc
  5670  1732  2F39               	goto	l4349
  5671  1733  3001               	movlw	1
  5672  1734  0020               	movlb	0	; select bank0
  5673  1735  00BB               	movwf	utoa@p
  5674  1736  3000               	movlw	0
  5675  1737  00BC               	movwf	utoa@p+1
  5676  1738  2F41               	goto	l524
  5677  1739                     l4349:	
  5678  1739  0021               	movlb	1	; select bank1
  5679  173A  0861               	movf	(_prec+1)^(0+128),w
  5680  173B  0020               	movlb	0	; select bank0
  5681  173C  00BC               	movwf	utoa@p+1
  5682  173D  0021               	movlb	1	; select bank1
  5683  173E  0860               	movf	_prec^(0+128),w
  5684  173F  0020               	movlb	0	; select bank0
  5685  1740  00BB               	movwf	utoa@p
  5686  1741                     l524:	
  5687                           
  5688                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 603:     w 
      +                          = width;
  5689  1741  0021               	movlb	1	; select bank1
  5690  1742  085F               	movf	(_width+1)^(0+128),w
  5691  1743  0020               	movlb	0	; select bank0
  5692  1744  00BE               	movwf	utoa@w+1
  5693  1745  0021               	movlb	1	; select bank1
  5694  1746  085E               	movf	_width^(0+128),w
  5695  1747  0020               	movlb	0	; select bank0
  5696  1748  00BD               	movwf	utoa@w
  5697                           
  5698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 606:     n 
      +                          = d;
  5699  1749  0832               	movf	utoa@d,w
  5700  174A  00BF               	movwf	utoa@n
  5701  174B  0833               	movf	utoa@d+1,w
  5702  174C  00C0               	movwf	utoa@n+1
  5703  174D  0834               	movf	utoa@d+2,w
  5704  174E  00C1               	movwf	utoa@n+2
  5705  174F  0835               	movf	utoa@d+3,w
  5706  1750  00C2               	movwf	utoa@n+3
  5707  1751  0836               	movf	utoa@d+4,w
  5708  1752  00C3               	movwf	utoa@n+4
  5709  1753  0837               	movf	utoa@d+5,w
  5710  1754  00C4               	movwf	utoa@n+5
  5711  1755  0838               	movf	utoa@d+6,w
  5712  1756  00C5               	movwf	utoa@n+6
  5713  1757  0839               	movf	utoa@d+7,w
  5714  1758  00C6               	movwf	utoa@n+7
  5715                           
  5716                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 607:     i 
      +                          = sizeof(dbuf) - 1;
  5717  1759  301F               	movlw	31
  5718  175A  00C7               	movwf	utoa@i
  5719  175B  3000               	movlw	0
  5720  175C  00C8               	movwf	utoa@i+1
  5721                           
  5722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 608:     db
      +                          uf[i] = '\0';
  5723  175D  0022               	movlb	2	; select bank2
  5724  175E  01C9               	clrf	(_dbuf^(0+256)+31)
  5725                           
  5726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5727  175F  2FE5               	goto	l4365
  5728  1760                     l4367:	
  5729  1760  083F               	movf	utoa@n,w
  5730  1761  0440               	iorwf	utoa@n+1,w
  5731  1762  0441               	iorwf	utoa@n+2,w
  5732  1763  0442               	iorwf	utoa@n+3,w
  5733  1764  0443               	iorwf	utoa@n+4,w
  5734  1765  0444               	iorwf	utoa@n+5,w
  5735  1766  0445               	iorwf	utoa@n+6,w
  5736  1767  0446               	iorwf	utoa@n+7,w
  5737  1768  1D03               	skipz
  5738  1769  2F84               	goto	l4355
  5739  176A  083C               	movf	utoa@p+1,w
  5740  176B  3A80               	xorlw	128
  5741  176C  00BA               	movwf	??_utoa
  5742  176D  3080               	movlw	128
  5743  176E  023A               	subwf	??_utoa,w
  5744  176F  1D03               	skipz
  5745  1770  2F73               	goto	u5395
  5746  1771  3001               	movlw	1
  5747  1772  023B               	subwf	utoa@p,w
  5748  1773                     u5395:	
  5749  1773  1803               	skipnc
  5750  1774  2F84               	goto	l4355
  5751  1775  0020               	movlb	0	; select bank0
  5752  1776  083E               	movf	utoa@w+1,w
  5753  1777  3A80               	xorlw	128
  5754  1778  00BA               	movwf	??_utoa
  5755  1779  3080               	movlw	128
  5756  177A  023A               	subwf	??_utoa,w
  5757  177B  1D03               	skipz
  5758  177C  2F7F               	goto	u5405
  5759  177D  3001               	movlw	1
  5760  177E  023D               	subwf	utoa@w,w
  5761  177F                     u5405:	
  5762  177F  1C03               	skipc
  5763  1780  2FEA               	goto	l4375
  5764  1781  0021               	movlb	1	; select bank1
  5765  1782  1CE2               	btfss	_flags^(0+128),1
  5766  1783  2FEA               	goto	l4375
  5767  1784                     l4355:	
  5768                           
  5769                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 610:       
      +                            --i;
  5770  1784  30FF               	movlw	255
  5771  1785  0020               	movlb	0	; select bank0
  5772  1786  07C7               	addwf	utoa@i,f
  5773  1787  30FF               	movlw	255
  5774  1788  3DC8               	addwfc	utoa@i+1,f
  5775                           
  5776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 611:       
      +                            dbuf[i] = '0' + (n % 10);
  5777  1789  300A               	movlw	10
  5778  178A  00A0               	movwf	___lomod@divisor
  5779  178B  01A1               	clrf	___lomod@divisor+1
  5780  178C  01A2               	clrf	___lomod@divisor+2
  5781  178D  01A3               	clrf	___lomod@divisor+3
  5782  178E  01A4               	clrf	___lomod@divisor+4
  5783  178F  01A5               	clrf	___lomod@divisor+5
  5784  1790  01A6               	clrf	___lomod@divisor+6
  5785  1791  01A7               	clrf	___lomod@divisor+7
  5786  1792  083F               	movf	utoa@n,w
  5787  1793  00A8               	movwf	___lomod@dividend
  5788  1794  0840               	movf	utoa@n+1,w
  5789  1795  00A9               	movwf	___lomod@dividend+1
  5790  1796  0841               	movf	utoa@n+2,w
  5791  1797  00AA               	movwf	___lomod@dividend+2
  5792  1798  0842               	movf	utoa@n+3,w
  5793  1799  00AB               	movwf	___lomod@dividend+3
  5794  179A  0843               	movf	utoa@n+4,w
  5795  179B  00AC               	movwf	___lomod@dividend+4
  5796  179C  0844               	movf	utoa@n+5,w
  5797  179D  00AD               	movwf	___lomod@dividend+5
  5798  179E  0845               	movf	utoa@n+6,w
  5799  179F  00AE               	movwf	___lomod@dividend+6
  5800  17A0  0846               	movf	utoa@n+7,w
  5801  17A1  00AF               	movwf	___lomod@dividend+7
  5802  17A2  3191  2181  3197   	fcall	___lomod
  5803  17A5  0020               	movlb	0	; select bank0
  5804  17A6  0820               	movf	?___lomod,w
  5805  17A7  3E30               	addlw	48
  5806  17A8  00BA               	movwf	??_utoa
  5807  17A9  0847               	movf	utoa@i,w
  5808  17AA  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5809  17AB  0086               	movwf	6
  5810  17AC  3001               	movlw	1	; select bank2/3
  5811  17AD  0087               	movwf	7
  5812  17AE  083A               	movf	??_utoa,w
  5813  17AF  0081               	movwf	1
  5814                           
  5815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 612:       
      +                            --p;
  5816  17B0  30FF               	movlw	255
  5817  17B1  07BB               	addwf	utoa@p,f
  5818  17B2  30FF               	movlw	255
  5819  17B3  3DBC               	addwfc	utoa@p+1,f
  5820                           
  5821                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 613:       
      +                            --w;
  5822  17B4  30FF               	movlw	255
  5823  17B5  07BD               	addwf	utoa@w,f
  5824  17B6  30FF               	movlw	255
  5825  17B7  3DBE               	addwfc	utoa@w+1,f
  5826                           
  5827                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 614:       
      +                            n = n / 10;
  5828  17B8  300A               	movlw	10
  5829  17B9  00A0               	movwf	___lodiv@divisor
  5830  17BA  01A1               	clrf	___lodiv@divisor+1
  5831  17BB  01A2               	clrf	___lodiv@divisor+2
  5832  17BC  01A3               	clrf	___lodiv@divisor+3
  5833  17BD  01A4               	clrf	___lodiv@divisor+4
  5834  17BE  01A5               	clrf	___lodiv@divisor+5
  5835  17BF  01A6               	clrf	___lodiv@divisor+6
  5836  17C0  01A7               	clrf	___lodiv@divisor+7
  5837  17C1  083F               	movf	utoa@n,w
  5838  17C2  00A8               	movwf	___lodiv@dividend
  5839  17C3  0840               	movf	utoa@n+1,w
  5840  17C4  00A9               	movwf	___lodiv@dividend+1
  5841  17C5  0841               	movf	utoa@n+2,w
  5842  17C6  00AA               	movwf	___lodiv@dividend+2
  5843  17C7  0842               	movf	utoa@n+3,w
  5844  17C8  00AB               	movwf	___lodiv@dividend+3
  5845  17C9  0843               	movf	utoa@n+4,w
  5846  17CA  00AC               	movwf	___lodiv@dividend+4
  5847  17CB  0844               	movf	utoa@n+5,w
  5848  17CC  00AD               	movwf	___lodiv@dividend+5
  5849  17CD  0845               	movf	utoa@n+6,w
  5850  17CE  00AE               	movwf	___lodiv@dividend+6
  5851  17CF  0846               	movf	utoa@n+7,w
  5852  17D0  00AF               	movwf	___lodiv@dividend+7
  5853  17D1  3187  2784  3197   	fcall	___lodiv
  5854  17D4  0020               	movlb	0	; select bank0
  5855  17D5  0820               	movf	?___lodiv,w
  5856  17D6  00BF               	movwf	utoa@n
  5857  17D7  0821               	movf	?___lodiv+1,w
  5858  17D8  00C0               	movwf	utoa@n+1
  5859  17D9  0822               	movf	?___lodiv+2,w
  5860  17DA  00C1               	movwf	utoa@n+2
  5861  17DB  0823               	movf	?___lodiv+3,w
  5862  17DC  00C2               	movwf	utoa@n+3
  5863  17DD  0824               	movf	?___lodiv+4,w
  5864  17DE  00C3               	movwf	utoa@n+4
  5865  17DF  0825               	movf	?___lodiv+5,w
  5866  17E0  00C4               	movwf	utoa@n+5
  5867  17E1  0826               	movf	?___lodiv+6,w
  5868  17E2  00C5               	movwf	utoa@n+6
  5869  17E3  0827               	movf	?___lodiv+7,w
  5870  17E4  00C6               	movwf	utoa@n+7
  5871  17E5                     l4365:	
  5872                           
  5873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 609:     wh
      +                          ile (i && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5874  17E5  0020               	movlb	0	; select bank0
  5875  17E6  0847               	movf	utoa@i,w
  5876  17E7  0448               	iorwf	utoa@i+1,w
  5877  17E8  1D03               	btfss	3,2
  5878  17E9  2F60               	goto	l4367
  5879  17EA                     l4375:	
  5880                           
  5881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 618:     re
      +                          turn pad(fp, &dbuf[i], w);
  5882  17EA  0020               	movlb	0	; select bank0
  5883  17EB  0831               	movf	utoa@fp+1,w
  5884  17EC  00A7               	movwf	pad@fp+1
  5885  17ED  0830               	movf	utoa@fp,w
  5886  17EE  00A6               	movwf	pad@fp
  5887  17EF  0847               	movf	utoa@i,w
  5888  17F0  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5889  17F1  00BA               	movwf	??_utoa
  5890  17F2  083A               	movf	??_utoa,w
  5891  17F3  00A8               	movwf	pad@buf
  5892  17F4  083E               	movf	utoa@w+1,w
  5893  17F5  00AA               	movwf	pad@p+1
  5894  17F6  083D               	movf	utoa@w,w
  5895  17F7  00A9               	movwf	pad@p
  5896  17F8  3190  208A         	fcall	_pad
  5897  17FA  0020               	movlb	0	; select bank0
  5898  17FB  0827               	movf	?_pad+1,w
  5899  17FC  00B1               	movwf	?_utoa+1
  5900  17FD  0826               	movf	?_pad,w
  5901  17FE  00B0               	movwf	?_utoa
  5902  17FF  0008               	return
  5903  1800                     __end_of_utoa:	
  5904                           
  5905                           	psect	text12
  5906  1181                     __ptext12:	
  5907 ;; *************** function ___lomod *****************
  5908 ;; Defined at:
  5909 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lomod.c"
  5910 ;; Parameters:    Size  Location     Type
  5911 ;;  divisor         8    0[BANK0 ] unsigned long long 
  5912 ;;  dividend        8    8[BANK0 ] unsigned long long 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  counter         1    2[COMMON] unsigned char 
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  8    0[BANK0 ] unsigned long long 
  5917 ;; Registers used:
  5918 ;;		wreg, status,2, status,0
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5924 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5927 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5928 ;;Total ram usage:       18 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    1
  5931 ;; This function calls:
  5932 ;;		Nothing
  5933 ;; This function is called by:
  5934 ;;		_utoa
  5935 ;; This function uses a non-reentrant model
  5936 ;;
  5937                           
  5938                           
  5939                           ;psect for function ___lomod
  5940  1181                     ___lomod:	
  5941                           
  5942                           ;incstack = 0
  5943                           ; Regs used in ___lomod: [wreg+status,2+status,0]
  5944  1181  0020               	movlb	0	; select bank0
  5945  1182  0820               	movf	___lomod@divisor,w
  5946  1183  0421               	iorwf	___lomod@divisor+1,w
  5947  1184  0422               	iorwf	___lomod@divisor+2,w
  5948  1185  0423               	iorwf	___lomod@divisor+3,w
  5949  1186  0424               	iorwf	___lomod@divisor+4,w
  5950  1187  0425               	iorwf	___lomod@divisor+5,w
  5951  1188  0426               	iorwf	___lomod@divisor+6,w
  5952  1189  0427               	iorwf	___lomod@divisor+7,w
  5953  118A  1903               	skipnz
  5954  118B  29D9               	goto	l891
  5955  118C  01F2               	clrf	___lomod@counter
  5956  118D  0AF2               	incf	___lomod@counter,f
  5957  118E                     l4157:	
  5958  118E  1BA7               	btfsc	___lomod@divisor+7,7
  5959  118F  299D               	goto	l4159
  5960  1190  35A0               	lslf	___lomod@divisor,f
  5961  1191  0DA1               	rlf	___lomod@divisor+1,f
  5962  1192  0DA2               	rlf	___lomod@divisor+2,f
  5963  1193  0DA3               	rlf	___lomod@divisor+3,f
  5964  1194  0DA4               	rlf	___lomod@divisor+4,f
  5965  1195  0DA5               	rlf	___lomod@divisor+5,f
  5966  1196  0DA6               	rlf	___lomod@divisor+6,f
  5967  1197  0DA7               	rlf	___lomod@divisor+7,f
  5968  1198  3001               	movlw	1
  5969  1199  00F1               	movwf	??___lomod
  5970  119A  0871               	movf	??___lomod,w
  5971  119B  07F2               	addwf	___lomod@counter,f
  5972  119C  298E               	goto	l4157
  5973  119D                     l4159:	
  5974  119D  0827               	movf	___lomod@divisor+7,w
  5975  119E  022F               	subwf	___lomod@dividend+7,w
  5976  119F  1D03               	skipz
  5977  11A0  29BB               	goto	u4955
  5978  11A1  0826               	movf	___lomod@divisor+6,w
  5979  11A2  022E               	subwf	___lomod@dividend+6,w
  5980  11A3  1D03               	skipz
  5981  11A4  29BB               	goto	u4955
  5982  11A5  0825               	movf	___lomod@divisor+5,w
  5983  11A6  022D               	subwf	___lomod@dividend+5,w
  5984  11A7  1D03               	skipz
  5985  11A8  29BB               	goto	u4955
  5986  11A9  0824               	movf	___lomod@divisor+4,w
  5987  11AA  022C               	subwf	___lomod@dividend+4,w
  5988  11AB  1D03               	skipz
  5989  11AC  29BB               	goto	u4955
  5990  11AD  0823               	movf	___lomod@divisor+3,w
  5991  11AE  022B               	subwf	___lomod@dividend+3,w
  5992  11AF  1D03               	skipz
  5993  11B0  29BB               	goto	u4955
  5994  11B1  0822               	movf	___lomod@divisor+2,w
  5995  11B2  022A               	subwf	___lomod@dividend+2,w
  5996  11B3  1D03               	skipz
  5997  11B4  29BB               	goto	u4955
  5998  11B5  0821               	movf	___lomod@divisor+1,w
  5999  11B6  0229               	subwf	___lomod@dividend+1,w
  6000  11B7  1D03               	skipz
  6001  11B8  29BB               	goto	u4955
  6002  11B9  0820               	movf	___lomod@divisor,w
  6003  11BA  0228               	subwf	___lomod@dividend,w
  6004  11BB                     u4955:	
  6005  11BB  1C03               	skipc
  6006  11BC  29CD               	goto	l4163
  6007  11BD  0820               	movf	___lomod@divisor,w
  6008  11BE  02A8               	subwf	___lomod@dividend,f
  6009  11BF  0821               	movf	___lomod@divisor+1,w
  6010  11C0  3BA9               	subwfb	___lomod@dividend+1,f
  6011  11C1  0822               	movf	___lomod@divisor+2,w
  6012  11C2  3BAA               	subwfb	___lomod@dividend+2,f
  6013  11C3  0823               	movf	___lomod@divisor+3,w
  6014  11C4  3BAB               	subwfb	___lomod@dividend+3,f
  6015  11C5  0824               	movf	___lomod@divisor+4,w
  6016  11C6  3BAC               	subwfb	___lomod@dividend+4,f
  6017  11C7  0825               	movf	___lomod@divisor+5,w
  6018  11C8  3BAD               	subwfb	___lomod@dividend+5,f
  6019  11C9  0826               	movf	___lomod@divisor+6,w
  6020  11CA  3BAE               	subwfb	___lomod@dividend+6,f
  6021  11CB  0827               	movf	___lomod@divisor+7,w
  6022  11CC  3BAF               	subwfb	___lomod@dividend+7,f
  6023  11CD                     l4163:	
  6024  11CD  36A7               	lsrf	___lomod@divisor+7,f
  6025  11CE  0CA6               	rrf	___lomod@divisor+6,f
  6026  11CF  0CA5               	rrf	___lomod@divisor+5,f
  6027  11D0  0CA4               	rrf	___lomod@divisor+4,f
  6028  11D1  0CA3               	rrf	___lomod@divisor+3,f
  6029  11D2  0CA2               	rrf	___lomod@divisor+2,f
  6030  11D3  0CA1               	rrf	___lomod@divisor+1,f
  6031  11D4  0CA0               	rrf	___lomod@divisor,f
  6032  11D5  3001               	movlw	1
  6033  11D6  02F2               	subwf	___lomod@counter,f
  6034  11D7  1D03               	btfss	3,2
  6035  11D8  299D               	goto	l4159
  6036  11D9                     l891:	
  6037  11D9  0828               	movf	___lomod@dividend,w
  6038  11DA  00A0               	movwf	?___lomod
  6039  11DB  0829               	movf	___lomod@dividend+1,w
  6040  11DC  00A1               	movwf	?___lomod+1
  6041  11DD  082A               	movf	___lomod@dividend+2,w
  6042  11DE  00A2               	movwf	?___lomod+2
  6043  11DF  082B               	movf	___lomod@dividend+3,w
  6044  11E0  00A3               	movwf	?___lomod+3
  6045  11E1  082C               	movf	___lomod@dividend+4,w
  6046  11E2  00A4               	movwf	?___lomod+4
  6047  11E3  082D               	movf	___lomod@dividend+5,w
  6048  11E4  00A5               	movwf	?___lomod+5
  6049  11E5  082E               	movf	___lomod@dividend+6,w
  6050  11E6  00A6               	movwf	?___lomod+6
  6051  11E7  082F               	movf	___lomod@dividend+7,w
  6052  11E8  00A7               	movwf	?___lomod+7
  6053  11E9  0008               	return
  6054  11EA                     __end_of___lomod:	
  6055                           
  6056                           	psect	text13
  6057  0784                     __ptext13:	
  6058 ;; *************** function ___lodiv *****************
  6059 ;; Defined at:
  6060 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lodiv.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  divisor         8    0[BANK0 ] unsigned long long 
  6063 ;;  dividend        8    8[BANK0 ] unsigned long long 
  6064 ;; Auto vars:     Size  Location     Type
  6065 ;;  quotient        8    2[COMMON] unsigned long long 
  6066 ;;  counter         1   10[COMMON] unsigned char 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  8    0[BANK0 ] unsigned long long 
  6069 ;; Registers used:
  6070 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6076 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6077 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6079 ;;      Totals:        10      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6080 ;;Total ram usage:       26 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; Hardware stack levels required when called:    1
  6083 ;; This function calls:
  6084 ;;		Nothing
  6085 ;; This function is called by:
  6086 ;;		_utoa
  6087 ;; This function uses a non-reentrant model
  6088 ;;
  6089                           
  6090                           
  6091                           ;psect for function ___lodiv
  6092  0784                     ___lodiv:	
  6093                           
  6094                           ;incstack = 0
  6095                           ; Regs used in ___lodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  6096  0784  3072               	movlw	low ___lodiv@quotient
  6097  0785  0086               	movwf	6
  6098  0786  3000               	movlw	high ___lodiv@quotient
  6099  0787  0087               	movwf	7
  6100  0788  3008               	movlw	8
  6101  0789  00F1               	movwf	??___lodiv
  6102  078A  3000               	movlw	0
  6103  078B                     u4880:	
  6104  078B  001E               	movwi fsr1++
  6105  078C  0BF1               	decfsz	??___lodiv,f
  6106  078D  2F8B               	goto	u4880
  6107  078E  0020               	movlb	0	; select bank0
  6108  078F  0820               	movf	___lodiv@divisor,w
  6109  0790  0421               	iorwf	___lodiv@divisor+1,w
  6110  0791  0422               	iorwf	___lodiv@divisor+2,w
  6111  0792  0423               	iorwf	___lodiv@divisor+3,w
  6112  0793  0424               	iorwf	___lodiv@divisor+4,w
  6113  0794  0425               	iorwf	___lodiv@divisor+5,w
  6114  0795  0426               	iorwf	___lodiv@divisor+6,w
  6115  0796  0427               	iorwf	___lodiv@divisor+7,w
  6116  0797  1903               	skipnz
  6117  0798  2FEF               	goto	l881
  6118  0799  01FA               	clrf	___lodiv@counter
  6119  079A  0AFA               	incf	___lodiv@counter,f
  6120  079B                     l4137:	
  6121  079B  1BA7               	btfsc	___lodiv@divisor+7,7
  6122  079C  2FAA               	goto	l4139
  6123  079D  35A0               	lslf	___lodiv@divisor,f
  6124  079E  0DA1               	rlf	___lodiv@divisor+1,f
  6125  079F  0DA2               	rlf	___lodiv@divisor+2,f
  6126  07A0  0DA3               	rlf	___lodiv@divisor+3,f
  6127  07A1  0DA4               	rlf	___lodiv@divisor+4,f
  6128  07A2  0DA5               	rlf	___lodiv@divisor+5,f
  6129  07A3  0DA6               	rlf	___lodiv@divisor+6,f
  6130  07A4  0DA7               	rlf	___lodiv@divisor+7,f
  6131  07A5  3001               	movlw	1
  6132  07A6  00F1               	movwf	??___lodiv
  6133  07A7  0871               	movf	??___lodiv,w
  6134  07A8  07FA               	addwf	___lodiv@counter,f
  6135  07A9  2F9B               	goto	l4137
  6136  07AA                     l4139:	
  6137  07AA  35F2               	lslf	___lodiv@quotient,f
  6138  07AB  0DF3               	rlf	___lodiv@quotient+1,f
  6139  07AC  0DF4               	rlf	___lodiv@quotient+2,f
  6140  07AD  0DF5               	rlf	___lodiv@quotient+3,f
  6141  07AE  0DF6               	rlf	___lodiv@quotient+4,f
  6142  07AF  0DF7               	rlf	___lodiv@quotient+5,f
  6143  07B0  0DF8               	rlf	___lodiv@quotient+6,f
  6144  07B1  0DF9               	rlf	___lodiv@quotient+7,f
  6145  07B2  0827               	movf	___lodiv@divisor+7,w
  6146  07B3  022F               	subwf	___lodiv@dividend+7,w
  6147  07B4  1D03               	skipz
  6148  07B5  2FD0               	goto	u4915
  6149  07B6  0826               	movf	___lodiv@divisor+6,w
  6150  07B7  022E               	subwf	___lodiv@dividend+6,w
  6151  07B8  1D03               	skipz
  6152  07B9  2FD0               	goto	u4915
  6153  07BA  0825               	movf	___lodiv@divisor+5,w
  6154  07BB  022D               	subwf	___lodiv@dividend+5,w
  6155  07BC  1D03               	skipz
  6156  07BD  2FD0               	goto	u4915
  6157  07BE  0824               	movf	___lodiv@divisor+4,w
  6158  07BF  022C               	subwf	___lodiv@dividend+4,w
  6159  07C0  1D03               	skipz
  6160  07C1  2FD0               	goto	u4915
  6161  07C2  0823               	movf	___lodiv@divisor+3,w
  6162  07C3  022B               	subwf	___lodiv@dividend+3,w
  6163  07C4  1D03               	skipz
  6164  07C5  2FD0               	goto	u4915
  6165  07C6  0822               	movf	___lodiv@divisor+2,w
  6166  07C7  022A               	subwf	___lodiv@dividend+2,w
  6167  07C8  1D03               	skipz
  6168  07C9  2FD0               	goto	u4915
  6169  07CA  0821               	movf	___lodiv@divisor+1,w
  6170  07CB  0229               	subwf	___lodiv@dividend+1,w
  6171  07CC  1D03               	skipz
  6172  07CD  2FD0               	goto	u4915
  6173  07CE  0820               	movf	___lodiv@divisor,w
  6174  07CF  0228               	subwf	___lodiv@dividend,w
  6175  07D0                     u4915:	
  6176  07D0  1C03               	skipc
  6177  07D1  2FE3               	goto	l4147
  6178  07D2  0820               	movf	___lodiv@divisor,w
  6179  07D3  02A8               	subwf	___lodiv@dividend,f
  6180  07D4  0821               	movf	___lodiv@divisor+1,w
  6181  07D5  3BA9               	subwfb	___lodiv@dividend+1,f
  6182  07D6  0822               	movf	___lodiv@divisor+2,w
  6183  07D7  3BAA               	subwfb	___lodiv@dividend+2,f
  6184  07D8  0823               	movf	___lodiv@divisor+3,w
  6185  07D9  3BAB               	subwfb	___lodiv@dividend+3,f
  6186  07DA  0824               	movf	___lodiv@divisor+4,w
  6187  07DB  3BAC               	subwfb	___lodiv@dividend+4,f
  6188  07DC  0825               	movf	___lodiv@divisor+5,w
  6189  07DD  3BAD               	subwfb	___lodiv@dividend+5,f
  6190  07DE  0826               	movf	___lodiv@divisor+6,w
  6191  07DF  3BAE               	subwfb	___lodiv@dividend+6,f
  6192  07E0  0827               	movf	___lodiv@divisor+7,w
  6193  07E1  3BAF               	subwfb	___lodiv@dividend+7,f
  6194  07E2  1472               	bsf	___lodiv@quotient,0
  6195  07E3                     l4147:	
  6196  07E3  36A7               	lsrf	___lodiv@divisor+7,f
  6197  07E4  0CA6               	rrf	___lodiv@divisor+6,f
  6198  07E5  0CA5               	rrf	___lodiv@divisor+5,f
  6199  07E6  0CA4               	rrf	___lodiv@divisor+4,f
  6200  07E7  0CA3               	rrf	___lodiv@divisor+3,f
  6201  07E8  0CA2               	rrf	___lodiv@divisor+2,f
  6202  07E9  0CA1               	rrf	___lodiv@divisor+1,f
  6203  07EA  0CA0               	rrf	___lodiv@divisor,f
  6204  07EB  3001               	movlw	1
  6205  07EC  02FA               	subwf	___lodiv@counter,f
  6206  07ED  1D03               	btfss	3,2
  6207  07EE  2FAA               	goto	l4139
  6208  07EF                     l881:	
  6209  07EF  0872               	movf	___lodiv@quotient,w
  6210  07F0  00A0               	movwf	?___lodiv
  6211  07F1  0873               	movf	___lodiv@quotient+1,w
  6212  07F2  00A1               	movwf	?___lodiv+1
  6213  07F3  0874               	movf	___lodiv@quotient+2,w
  6214  07F4  00A2               	movwf	?___lodiv+2
  6215  07F5  0875               	movf	___lodiv@quotient+3,w
  6216  07F6  00A3               	movwf	?___lodiv+3
  6217  07F7  0876               	movf	___lodiv@quotient+4,w
  6218  07F8  00A4               	movwf	?___lodiv+4
  6219  07F9  0877               	movf	___lodiv@quotient+5,w
  6220  07FA  00A5               	movwf	?___lodiv+5
  6221  07FB  0878               	movf	___lodiv@quotient+6,w
  6222  07FC  00A6               	movwf	?___lodiv+6
  6223  07FD  0879               	movf	___lodiv@quotient+7,w
  6224  07FE  00A7               	movwf	?___lodiv+7
  6225  07FF  0008               	return
  6226  0800                     __end_of___lodiv:	
  6227                           
  6228                           	psect	text14
  6229  10DB                     __ptext14:	
  6230 ;; *************** function _strncmp *****************
  6231 ;; Defined at:
  6232 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strncmp.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  _l              2    1[COMMON] PTR const unsigned char 
  6235 ;;		 -> STR_3(43), 
  6236 ;;  _r              2    3[COMMON] PTR const unsigned char 
  6237 ;;		 -> STR_103(3), STR_99(3), STR_94(3), STR_90(3), 
  6238 ;;		 -> STR_85(4), STR_81(4), STR_76(3), STR_71(3), 
  6239 ;;		 -> STR_66(4), STR_61(3), STR_56(3), STR_51(4), 
  6240 ;;		 -> STR_46(3), STR_41(3), STR_36(4), STR_31(3), 
  6241 ;;		 -> STR_27(3), STR_22(3), STR_18(3), STR_13(4), 
  6242 ;;		 -> STR_9(4), 
  6243 ;;  n               2    5[COMMON] unsigned int 
  6244 ;; Auto vars:     Size  Location     Type
  6245 ;;  r               2   10[COMMON] PTR const unsigned char 
  6246 ;;		 -> STR_103(3), STR_99(3), STR_94(3), STR_90(3), 
  6247 ;;		 -> STR_85(4), STR_81(4), STR_76(3), STR_71(3), 
  6248 ;;		 -> STR_66(4), STR_61(3), STR_56(3), STR_51(4), 
  6249 ;;		 -> STR_46(3), STR_41(3), STR_36(4), STR_31(3), 
  6250 ;;		 -> STR_27(3), STR_22(3), STR_18(3), STR_13(4), 
  6251 ;;		 -> STR_9(4), 
  6252 ;;  l               2    8[COMMON] PTR const unsigned char 
  6253 ;;		 -> STR_3(43), 
  6254 ;; Return value:  Size  Location     Type
  6255 ;;                  2    1[COMMON] int 
  6256 ;; Registers used:
  6257 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  6258 ;; Tracked objects:
  6259 ;;		On entry : 0/0
  6260 ;;		On exit  : 0/0
  6261 ;;		Unchanged: 0/0
  6262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6263 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6264 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6265 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6266 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6267 ;;Total ram usage:       11 bytes
  6268 ;; Hardware stack levels used:    1
  6269 ;; Hardware stack levels required when called:    1
  6270 ;; This function calls:
  6271 ;;		Nothing
  6272 ;; This function is called by:
  6273 ;;		_vfpfcnvrt
  6274 ;; This function uses a non-reentrant model
  6275 ;;
  6276                           
  6277                           
  6278                           ;psect for function _strncmp
  6279  10DB                     _strncmp:	
  6280                           
  6281                           ;incstack = 0
  6282                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  6283  10DB  0872               	movf	strncmp@_l+1,w
  6284  10DC  00F9               	movwf	strncmp@l+1
  6285  10DD  0871               	movf	strncmp@_l,w
  6286  10DE  00F8               	movwf	strncmp@l
  6287  10DF  0874               	movf	strncmp@_r+1,w
  6288  10E0  00FB               	movwf	strncmp@r+1
  6289  10E1  0873               	movf	strncmp@_r,w
  6290  10E2  00FA               	movwf	strncmp@r
  6291  10E3  3001               	movlw	1
  6292  10E4  02F5               	subwf	strncmp@n,f
  6293  10E5  3000               	movlw	0
  6294  10E6  3BF6               	subwfb	strncmp@n+1,f
  6295  10E7  0A75               	incf	strncmp@n,w
  6296  10E8  1D03               	skipz
  6297  10E9  2915               	goto	l4499
  6298  10EA  0A76               	incf	strncmp@n+1,w
  6299  10EB  1D03               	btfss	3,2
  6300  10EC  2915               	goto	l4499
  6301  10ED  01F1               	clrf	?_strncmp
  6302  10EE  01F2               	clrf	?_strncmp+1
  6303  10EF  0008               	return
  6304  10F0                     l4501:	
  6305  10F0  087A               	movf	strncmp@r,w
  6306  10F1  0084               	movwf	4
  6307  10F2  087B               	movf	strncmp@r+1,w
  6308  10F3  0085               	movwf	5
  6309  10F4  0012               	moviw fsr0++
  6310  10F5  1903               	btfsc	3,2
  6311  10F6  291C               	goto	l4507
  6312  10F7  0875               	movf	strncmp@n,w
  6313  10F8  0476               	iorwf	strncmp@n+1,w
  6314  10F9  1903               	btfsc	3,2
  6315  10FA  291C               	goto	l4507
  6316  10FB  087A               	movf	strncmp@r,w
  6317  10FC  0084               	movwf	4
  6318  10FD  087B               	movf	strncmp@r+1,w
  6319  10FE  0085               	movwf	5
  6320  10FF  0800               	movf	0,w	;code access
  6321  1100  00F7               	movwf	??_strncmp
  6322  1101  0878               	movf	strncmp@l,w
  6323  1102  0084               	movwf	4
  6324  1103  0879               	movf	strncmp@l+1,w
  6325  1104  0085               	movwf	5
  6326  1105  0800               	movf	0,w	;code access
  6327  1106  0677               	xorwf	??_strncmp,w
  6328  1107  1D03               	btfss	3,2
  6329  1108  291C               	goto	l4507
  6330  1109  3001               	movlw	1
  6331  110A  07F8               	addwf	strncmp@l,f
  6332  110B  3000               	movlw	0
  6333  110C  3DF9               	addwfc	strncmp@l+1,f
  6334  110D  3001               	movlw	1
  6335  110E  07FA               	addwf	strncmp@r,f
  6336  110F  3000               	movlw	0
  6337  1110  3DFB               	addwfc	strncmp@r+1,f
  6338  1111  3001               	movlw	1
  6339  1112  02F5               	subwf	strncmp@n,f
  6340  1113  3000               	movlw	0
  6341  1114  3BF6               	subwfb	strncmp@n+1,f
  6342  1115                     l4499:	
  6343  1115  0878               	movf	strncmp@l,w
  6344  1116  0084               	movwf	4
  6345  1117  0879               	movf	strncmp@l+1,w
  6346  1118  0085               	movwf	5
  6347  1119  0012               	moviw fsr0++
  6348  111A  1D03               	btfss	3,2
  6349  111B  28F0               	goto	l4501
  6350  111C                     l4507:	
  6351  111C  0878               	movf	strncmp@l,w
  6352  111D  0084               	movwf	4
  6353  111E  0879               	movf	strncmp@l+1,w
  6354  111F  0085               	movwf	5
  6355  1120  0800               	movf	0,w	;code access
  6356  1121  00F7               	movwf	??_strncmp
  6357  1122  087A               	movf	strncmp@r,w
  6358  1123  0084               	movwf	4
  6359  1124  087B               	movf	strncmp@r+1,w
  6360  1125  0085               	movwf	5
  6361  1126  0800               	movf	0,w	;code access
  6362  1127  0277               	subwf	??_strncmp,w
  6363  1128  00F1               	movwf	?_strncmp
  6364  1129  01F2               	clrf	?_strncmp+1
  6365  112A  1C03               	skipc
  6366  112B  03F2               	decf	?_strncmp+1,f
  6367  112C  0008               	return
  6368  112D                     __end_of_strncmp:	
  6369                           
  6370                           	psect	text15
  6371  1580                     __ptext15:	
  6372 ;; *************** function _stoa *****************
  6373 ;; Defined at:
  6374 ;;		line 546 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  6377 ;;		 -> vsnprintf@f(6), 
  6378 ;;  s               1    2[BANK0 ] PTR unsigned char 
  6379 ;;		 -> ?_snprintf(2), 
  6380 ;; Auto vars:     Size  Location     Type
  6381 ;;  nuls            7    3[BANK0 ] unsigned char [7]
  6382 ;;  l               2   17[BANK0 ] int 
  6383 ;;  p               2   15[BANK0 ] int 
  6384 ;;  w               2   12[BANK0 ] int 
  6385 ;;  i               2   10[BANK0 ] int 
  6386 ;;  cp              1   14[BANK0 ] PTR unsigned char 
  6387 ;;		 -> ?_snprintf(2), stoa@nuls(7), 
  6388 ;; Return value:  Size  Location     Type
  6389 ;;                  2    0[BANK0 ] int 
  6390 ;; Registers used:
  6391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6397 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6398 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6399 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6400 ;;      Totals:         2      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6401 ;;Total ram usage:       21 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    3
  6404 ;; This function calls:
  6405 ;;		_fputc
  6406 ;;		_strlen
  6407 ;; This function is called by:
  6408 ;;		_vfpfcnvrt
  6409 ;; This function uses a non-reentrant model
  6410 ;;
  6411                           
  6412                           
  6413                           ;psect for function _stoa
  6414  1580                     _stoa:	
  6415                           
  6416                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 546: static
      +                           int stoa(FILE *fp, char *s);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\
      +                          common\doprnt.c: 547: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\commo
      +                          n\doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6417                           
  6418                           ;incstack = 0
  6419                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6420  1580  304A               	movlw	low stoa@F1152
  6421  1581  0086               	movwf	6
  6422  1582  3001               	movlw	high stoa@F1152
  6423  1583  0087               	movwf	7
  6424  1584  3023               	movlw	low stoa@nuls
  6425  1585  0084               	movwf	4
  6426  1586  3000               	movlw	high stoa@nuls
  6427  1587  0085               	movwf	5
  6428  1588  3007               	movlw	7
  6429  1589  00FA               	movwf	??_stoa
  6430  158A                     u5260:	
  6431  158A  0016               	moviw fsr1++
  6432  158B  001A               	movwi fsr0++
  6433  158C  0BFA               	decfsz	??_stoa,f
  6434  158D  2D8A               	goto	u5260
  6435                           
  6436                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 549:     in
      +                          t i, l, p, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c
      +                          : 552:     cp = s;
  6437  158E  0020               	movlb	0	; select bank0
  6438  158F  0822               	movf	stoa@s,w
  6439  1590  00FA               	movwf	??_stoa
  6440  1591  087A               	movf	??_stoa,w
  6441  1592  00AE               	movwf	stoa@cp
  6442                           
  6443                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 553:     if
      +                           (!cp) {
  6444  1593  082E               	movf	stoa@cp,w
  6445  1594  1D03               	btfss	3,2
  6446  1595  2D9A               	goto	l4301
  6447                           
  6448                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 554:       
      +                            cp = nuls;
  6449  1596  3023               	movlw	(low (stoa@nuls| 0))& (0+255)
  6450  1597  00FA               	movwf	??_stoa
  6451  1598  087A               	movf	??_stoa,w
  6452  1599  00AE               	movwf	stoa@cp
  6453  159A                     l4301:	
  6454                           
  6455                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 558:     l 
      +                          = strlen(cp);
  6456  159A  082E               	movf	stoa@cp,w
  6457  159B  00F1               	movwf	strlen@s
  6458  159C  3000               	movlw	0
  6459  159D  00F2               	movwf	strlen@s+1
  6460  159E  319E  2635  3195   	fcall	_strlen
  6461  15A1  0872               	movf	?_strlen+1,w
  6462  15A2  0020               	movlb	0	; select bank0
  6463  15A3  00B2               	movwf	stoa@l+1
  6464  15A4  0871               	movf	?_strlen,w
  6465  15A5  00B1               	movwf	stoa@l
  6466                           
  6467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 559:     p 
      +                          = prec;
  6468  15A6  0021               	movlb	1	; select bank1
  6469  15A7  0861               	movf	(_prec+1)^(0+128),w
  6470  15A8  0020               	movlb	0	; select bank0
  6471  15A9  00B0               	movwf	stoa@p+1
  6472  15AA  0021               	movlb	1	; select bank1
  6473  15AB  0860               	movf	_prec^(0+128),w
  6474  15AC  0020               	movlb	0	; select bank0
  6475  15AD  00AF               	movwf	stoa@p
  6476                           
  6477                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 560:     l 
      +                          = (!(p < 0) && (p < l)) ? p : l;
  6478  15AE  1BB0               	btfsc	stoa@p+1,7
  6479  15AF  2DC1               	goto	l503
  6480  15B0  0830               	movf	stoa@p+1,w
  6481  15B1  3A80               	xorlw	128
  6482  15B2  00FA               	movwf	??_stoa
  6483  15B3  0832               	movf	stoa@l+1,w
  6484  15B4  3A80               	xorlw	128
  6485  15B5  027A               	subwf	??_stoa,w
  6486  15B6  1D03               	skipz
  6487  15B7  2DBA               	goto	u5295
  6488  15B8  0831               	movf	stoa@l,w
  6489  15B9  022F               	subwf	stoa@p,w
  6490  15BA                     u5295:	
  6491  15BA  1803               	btfsc	3,0
  6492  15BB  2DC1               	goto	l503
  6493  15BC  0020               	movlb	0	; select bank0
  6494  15BD  0830               	movf	stoa@p+1,w
  6495  15BE  00B2               	movwf	stoa@l+1
  6496  15BF  082F               	movf	stoa@p,w
  6497  15C0  00B1               	movwf	stoa@l
  6498  15C1                     l503:	
  6499                           
  6500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 561:     p 
      +                          = l;
  6501  15C1  0020               	movlb	0	; select bank0
  6502  15C2  0832               	movf	stoa@l+1,w
  6503  15C3  00B0               	movwf	stoa@p+1
  6504  15C4  0831               	movf	stoa@l,w
  6505  15C5  00AF               	movwf	stoa@p
  6506                           
  6507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 562:     w 
      +                          = width;
  6508  15C6  0021               	movlb	1	; select bank1
  6509  15C7  085F               	movf	(_width+1)^(0+128),w
  6510  15C8  0020               	movlb	0	; select bank0
  6511  15C9  00AD               	movwf	stoa@w+1
  6512  15CA  0021               	movlb	1	; select bank1
  6513  15CB  085E               	movf	_width^(0+128),w
  6514  15CC  0020               	movlb	0	; select bank0
  6515  15CD  00AC               	movwf	stoa@w
  6516                           
  6517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 565:     if
      +                           (!(flags & (1 << 0))) {
  6518  15CE  0021               	movlb	1	; select bank1
  6519  15CF  1C62               	btfss	_flags^(0+128),0
  6520  15D0  2DE3               	goto	l4319
  6521  15D1  2DF0               	goto	l4321
  6522  15D2                     l4315:	
  6523                           
  6524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 567:       
      +                                fputc(' ', fp);
  6525  15D2  3020               	movlw	32
  6526  15D3  00F1               	movwf	fputc@c
  6527  15D4  3000               	movlw	0
  6528  15D5  00F2               	movwf	fputc@c+1
  6529  15D6  0020               	movlb	0	; select bank0
  6530  15D7  0821               	movf	stoa@fp+1,w
  6531  15D8  00F4               	movwf	fputc@fp+1
  6532  15D9  0820               	movf	stoa@fp,w
  6533  15DA  00F3               	movwf	fputc@fp
  6534  15DB  3191  212D  3195   	fcall	_fputc
  6535                           
  6536                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 568:       
      +                                ++l;
  6537  15DE  3001               	movlw	1
  6538  15DF  0020               	movlb	0	; select bank0
  6539  15E0  07B1               	addwf	stoa@l,f
  6540  15E1  3000               	movlw	0
  6541  15E2  3DB2               	addwfc	stoa@l+1,f
  6542  15E3                     l4319:	
  6543                           
  6544                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 566:       
      +                            while (l < w) {
  6545  15E3  0020               	movlb	0	; select bank0
  6546  15E4  0832               	movf	stoa@l+1,w
  6547  15E5  3A80               	xorlw	128
  6548  15E6  00FA               	movwf	??_stoa
  6549  15E7  082D               	movf	stoa@w+1,w
  6550  15E8  3A80               	xorlw	128
  6551  15E9  027A               	subwf	??_stoa,w
  6552  15EA  1D03               	skipz
  6553  15EB  2DEE               	goto	u5315
  6554  15EC  082C               	movf	stoa@w,w
  6555  15ED  0231               	subwf	stoa@l,w
  6556  15EE                     u5315:	
  6557  15EE  1C03               	skipc
  6558  15EF  2DD2               	goto	l4315
  6559  15F0                     l4321:	
  6560                           
  6561                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 573:     i 
      +                          = 0;
  6562  15F0  0020               	movlb	0	; select bank0
  6563  15F1  01AA               	clrf	stoa@i
  6564  15F2  01AB               	clrf	stoa@i+1
  6565  15F3                     l4329:	
  6566                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  6567                           
  6568                           
  6569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 574:     wh
      +                          ile (i < p) {
  6570  15F3  082B               	movf	stoa@i+1,w
  6571  15F4  3A80               	xorlw	128
  6572  15F5  00FA               	movwf	??_stoa
  6573  15F6  0830               	movf	stoa@p+1,w
  6574  15F7  3A80               	xorlw	128
  6575  15F8  027A               	subwf	??_stoa,w
  6576  15F9  1D03               	skipz
  6577  15FA  2DFD               	goto	u5325
  6578  15FB  082F               	movf	stoa@p,w
  6579  15FC  022A               	subwf	stoa@i,w
  6580  15FD                     u5325:	
  6581  15FD  1803               	btfsc	3,0
  6582  15FE  2E1B               	goto	l512
  6583                           
  6584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 575:       
      +                            fputc(*cp, fp);
  6585  15FF  0020               	movlb	0	; select bank0
  6586  1600  082E               	movf	stoa@cp,w
  6587  1601  0086               	movwf	6
  6588  1602  0187               	clrf	7
  6589  1603  0801               	movf	1,w
  6590  1604  00FA               	movwf	??_stoa
  6591  1605  01FB               	clrf	??_stoa+1
  6592  1606  087A               	movf	??_stoa,w
  6593  1607  00F1               	movwf	fputc@c
  6594  1608  087B               	movf	??_stoa+1,w
  6595  1609  00F2               	movwf	fputc@c+1
  6596  160A  0821               	movf	stoa@fp+1,w
  6597  160B  00F4               	movwf	fputc@fp+1
  6598  160C  0820               	movf	stoa@fp,w
  6599  160D  00F3               	movwf	fputc@fp
  6600  160E  3191  212D  3195   	fcall	_fputc
  6601                           
  6602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 576:       
      +                            ++cp;
  6603  1611  3001               	movlw	1
  6604  1612  00FA               	movwf	??_stoa
  6605  1613  087A               	movf	??_stoa,w
  6606  1614  0020               	movlb	0	; select bank0
  6607  1615  07AE               	addwf	stoa@cp,f
  6608                           
  6609                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 577:       
      +                            ++i;
  6610  1616  3001               	movlw	1
  6611  1617  07AA               	addwf	stoa@i,f
  6612  1618  3000               	movlw	0
  6613  1619  3DAB               	addwfc	stoa@i+1,f
  6614  161A  2DF3               	goto	l4329
  6615  161B                     l512:	
  6616                           
  6617                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 581:     if
      +                           (flags & (1 << 0)) {
  6618  161B  0021               	movlb	1	; select bank1
  6619  161C  1862               	btfsc	_flags^(0+128),0
  6620  161D  2E30               	goto	l4337
  6621  161E  2E3D               	goto	l4339
  6622  161F                     l4333:	
  6623                           
  6624                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 583:       
      +                                fputc(' ', fp);
  6625  161F  3020               	movlw	32
  6626  1620  00F1               	movwf	fputc@c
  6627  1621  3000               	movlw	0
  6628  1622  00F2               	movwf	fputc@c+1
  6629  1623  0020               	movlb	0	; select bank0
  6630  1624  0821               	movf	stoa@fp+1,w
  6631  1625  00F4               	movwf	fputc@fp+1
  6632  1626  0820               	movf	stoa@fp,w
  6633  1627  00F3               	movwf	fputc@fp
  6634  1628  3191  212D  3195   	fcall	_fputc
  6635                           
  6636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 584:       
      +                                ++l;
  6637  162B  3001               	movlw	1
  6638  162C  0020               	movlb	0	; select bank0
  6639  162D  07B1               	addwf	stoa@l,f
  6640  162E  3000               	movlw	0
  6641  162F  3DB2               	addwfc	stoa@l+1,f
  6642  1630                     l4337:	
  6643                           
  6644                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 582:       
      +                            while (l < w) {
  6645  1630  0020               	movlb	0	; select bank0
  6646  1631  0832               	movf	stoa@l+1,w
  6647  1632  3A80               	xorlw	128
  6648  1633  00FA               	movwf	??_stoa
  6649  1634  082D               	movf	stoa@w+1,w
  6650  1635  3A80               	xorlw	128
  6651  1636  027A               	subwf	??_stoa,w
  6652  1637  1D03               	skipz
  6653  1638  2E3B               	goto	u5345
  6654  1639  082C               	movf	stoa@w,w
  6655  163A  0231               	subwf	stoa@l,w
  6656  163B                     u5345:	
  6657  163B  1C03               	skipc
  6658  163C  2E1F               	goto	l4333
  6659  163D                     l4339:	
  6660                           
  6661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 588:     re
      +                          turn l;
  6662  163D  0020               	movlb	0	; select bank0
  6663  163E  0832               	movf	stoa@l+1,w
  6664  163F  00A1               	movwf	?_stoa+1
  6665  1640  0831               	movf	stoa@l,w
  6666  1641  00A0               	movwf	?_stoa
  6667  1642  0008               	return
  6668  1643                     __end_of_stoa:	
  6669                           
  6670                           	psect	text16
  6671  0693                     __ptext16:	
  6672 ;; *************** function _otoa *****************
  6673 ;; Defined at:
  6674 ;;		line 507 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  6677 ;;		 -> vsnprintf@f(6), 
  6678 ;;  d               8   18[BANK0 ] unsigned long long 
  6679 ;; Auto vars:     Size  Location     Type
  6680 ;;  n               8   40[BANK0 ] unsigned long long 
  6681 ;;  i               2   48[BANK0 ] int 
  6682 ;;  w               2   38[BANK0 ] int 
  6683 ;;  t               2   36[BANK0 ] int 
  6684 ;;  p               2   34[BANK0 ] int 
  6685 ;; Return value:  Size  Location     Type
  6686 ;;                  2   16[BANK0 ] int 
  6687 ;; Registers used:
  6688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6689 ;; Tracked objects:
  6690 ;;		On entry : 0/0
  6691 ;;		On exit  : 0/0
  6692 ;;		Unchanged: 0/0
  6693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6694 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6695 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6696 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6697 ;;      Totals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6698 ;;Total ram usage:       34 bytes
  6699 ;; Hardware stack levels used:    1
  6700 ;; Hardware stack levels required when called:    5
  6701 ;; This function calls:
  6702 ;;		_pad
  6703 ;; This function is called by:
  6704 ;;		_vfpfcnvrt
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           
  6709                           ;psect for function _otoa
  6710  0693                     _otoa:	
  6711                           
  6712                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 507: static
      +                           int otoa(FILE *fp, unsigned long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c99\common\doprnt.c: 508: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c99\common\doprnt.c: 509:     int i, p, t, w;;C:\Program Files (x86)\Microchip\xc8\v
      +                          2.05\pic\sources\c99\common\doprnt.c: 510:     unsigned long long n;;C:\Program Files (x
      +                          86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 513:     if (!(prec < 0)) {
  6713                           
  6714                           ;incstack = 0
  6715                           ; Regs used in _otoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6716  0693  0021               	movlb	1	; select bank1
  6717  0694  1BE1               	btfsc	(_prec+1)^(0+128),7
  6718  0695  2E9A               	goto	l481
  6719                           
  6720                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 514:       
      +                            flags &= ~(1 << 1);
  6721  0696  30FD               	movlw	253
  6722  0697  05E2               	andwf	_flags^(0+128),f
  6723  0698  30FF               	movlw	255
  6724  0699  05E3               	andwf	(_flags+1)^(0+128),f
  6725  069A                     l481:	
  6726                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 515:     }
  6727                           
  6728                           
  6729                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 516:     p 
      +                          = (0 < prec) ? prec : 1;
  6730  069A  0861               	movf	(_prec+1)^(0+128),w
  6731  069B  3A80               	xorlw	128
  6732  069C  0020               	movlb	0	; select bank0
  6733  069D  00BA               	movwf	??_otoa
  6734  069E  3080               	movlw	128
  6735  069F  023A               	subwf	??_otoa,w
  6736  06A0  1D03               	skipz
  6737  06A1  2EA5               	goto	u5175
  6738  06A2  3001               	movlw	1
  6739  06A3  0021               	movlb	1	; select bank1
  6740  06A4  0260               	subwf	_prec^(0+128),w
  6741  06A5                     u5175:	
  6742  06A5  1803               	skipnc
  6743  06A6  2EAD               	goto	l4255
  6744  06A7  3001               	movlw	1
  6745  06A8  0020               	movlb	0	; select bank0
  6746  06A9  00C2               	movwf	otoa@p
  6747  06AA  3000               	movlw	0
  6748  06AB  00C3               	movwf	otoa@p+1
  6749  06AC  2EB5               	goto	l485
  6750  06AD                     l4255:	
  6751  06AD  0021               	movlb	1	; select bank1
  6752  06AE  0861               	movf	(_prec+1)^(0+128),w
  6753  06AF  0020               	movlb	0	; select bank0
  6754  06B0  00C3               	movwf	otoa@p+1
  6755  06B1  0021               	movlb	1	; select bank1
  6756  06B2  0860               	movf	_prec^(0+128),w
  6757  06B3  0020               	movlb	0	; select bank0
  6758  06B4  00C2               	movwf	otoa@p
  6759  06B5                     l485:	
  6760                           
  6761                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 517:     w 
      +                          = width;
  6762  06B5  0021               	movlb	1	; select bank1
  6763  06B6  085F               	movf	(_width+1)^(0+128),w
  6764  06B7  0020               	movlb	0	; select bank0
  6765  06B8  00C7               	movwf	otoa@w+1
  6766  06B9  0021               	movlb	1	; select bank1
  6767  06BA  085E               	movf	_width^(0+128),w
  6768  06BB  0020               	movlb	0	; select bank0
  6769  06BC  00C6               	movwf	otoa@w
  6770                           
  6771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 520:     n 
      +                          = d;
  6772  06BD  0832               	movf	otoa@d,w
  6773  06BE  00C8               	movwf	otoa@n
  6774  06BF  0833               	movf	otoa@d+1,w
  6775  06C0  00C9               	movwf	otoa@n+1
  6776  06C1  0834               	movf	otoa@d+2,w
  6777  06C2  00CA               	movwf	otoa@n+2
  6778  06C3  0835               	movf	otoa@d+3,w
  6779  06C4  00CB               	movwf	otoa@n+3
  6780  06C5  0836               	movf	otoa@d+4,w
  6781  06C6  00CC               	movwf	otoa@n+4
  6782  06C7  0837               	movf	otoa@d+5,w
  6783  06C8  00CD               	movwf	otoa@n+5
  6784  06C9  0838               	movf	otoa@d+6,w
  6785  06CA  00CE               	movwf	otoa@n+6
  6786  06CB  0839               	movf	otoa@d+7,w
  6787  06CC  00CF               	movwf	otoa@n+7
  6788                           
  6789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 521:     i 
      +                          = sizeof(dbuf) - 1;
  6790  06CD  301F               	movlw	31
  6791  06CE  00D0               	movwf	otoa@i
  6792  06CF  3000               	movlw	0
  6793  06D0  00D1               	movwf	otoa@i+1
  6794                           
  6795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 522:     db
      +                          uf[i] = '\0';
  6796  06D1  0022               	movlb	2	; select bank2
  6797  06D2  01C9               	clrf	(_dbuf^(0+256)+31)
  6798                           
  6799                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 523:     t 
      +                          = 0;
  6800  06D3  0020               	movlb	0	; select bank0
  6801  06D4  01C4               	clrf	otoa@t
  6802  06D5  01C5               	clrf	otoa@t+1
  6803                           
  6804                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6805  06D6  2F4A               	goto	l486
  6806  06D7                     l4273:	
  6807  06D7  0020               	movlb	0	; select bank0
  6808  06D8  0848               	movf	otoa@n,w
  6809  06D9  0449               	iorwf	otoa@n+1,w
  6810  06DA  044A               	iorwf	otoa@n+2,w
  6811  06DB  044B               	iorwf	otoa@n+3,w
  6812  06DC  044C               	iorwf	otoa@n+4,w
  6813  06DD  044D               	iorwf	otoa@n+5,w
  6814  06DE  044E               	iorwf	otoa@n+6,w
  6815  06DF  044F               	iorwf	otoa@n+7,w
  6816  06E0  1D03               	skipz
  6817  06E1  2EFC               	goto	l4263
  6818  06E2  0843               	movf	otoa@p+1,w
  6819  06E3  3A80               	xorlw	128
  6820  06E4  00BA               	movwf	??_otoa
  6821  06E5  3080               	movlw	128
  6822  06E6  023A               	subwf	??_otoa,w
  6823  06E7  1D03               	skipz
  6824  06E8  2EEB               	goto	u5215
  6825  06E9  3001               	movlw	1
  6826  06EA  0242               	subwf	otoa@p,w
  6827  06EB                     u5215:	
  6828  06EB  1803               	skipnc
  6829  06EC  2EFC               	goto	l4263
  6830  06ED  0020               	movlb	0	; select bank0
  6831  06EE  0847               	movf	otoa@w+1,w
  6832  06EF  3A80               	xorlw	128
  6833  06F0  00BA               	movwf	??_otoa
  6834  06F1  3080               	movlw	128
  6835  06F2  023A               	subwf	??_otoa,w
  6836  06F3  1D03               	skipz
  6837  06F4  2EF7               	goto	u5225
  6838  06F5  3001               	movlw	1
  6839  06F6  0246               	subwf	otoa@w,w
  6840  06F7                     u5225:	
  6841  06F7  1C03               	skipc
  6842  06F8  2F55               	goto	l492
  6843  06F9  0021               	movlb	1	; select bank1
  6844  06FA  1CE2               	btfss	_flags^(0+128),1
  6845  06FB  2F55               	goto	l492
  6846  06FC                     l4263:	
  6847                           
  6848                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 525:       
      +                            --i;
  6849  06FC  30FF               	movlw	255
  6850  06FD  0020               	movlb	0	; select bank0
  6851  06FE  07D0               	addwf	otoa@i,f
  6852  06FF  30FF               	movlw	255
  6853  0700  3DD1               	addwfc	otoa@i+1,f
  6854                           
  6855                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 526:       
      +                            t = n & 07;
  6856  0701  3007               	movlw	7
  6857  0702  0548               	andwf	otoa@n,w
  6858  0703  00C4               	movwf	otoa@t
  6859  0704  3000               	movlw	0
  6860  0705  0549               	andwf	otoa@n+1,w
  6861  0706  00C5               	movwf	otoa@t+1
  6862                           
  6863                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 527:       
      +                            dbuf[i] = '0' + t;
  6864  0707  0844               	movf	otoa@t,w
  6865  0708  3E30               	addlw	48
  6866  0709  00BA               	movwf	??_otoa
  6867  070A  0850               	movf	otoa@i,w
  6868  070B  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6869  070C  0086               	movwf	6
  6870  070D  3001               	movlw	1	; select bank2/3
  6871  070E  0087               	movwf	7
  6872  070F  083A               	movf	??_otoa,w
  6873  0710  0081               	movwf	1
  6874                           
  6875                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 528:       
      +                            --p;
  6876  0711  30FF               	movlw	255
  6877  0712  07C2               	addwf	otoa@p,f
  6878  0713  30FF               	movlw	255
  6879  0714  3DC3               	addwfc	otoa@p+1,f
  6880                           
  6881                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 529:       
      +                            --w;
  6882  0715  30FF               	movlw	255
  6883  0716  07C6               	addwf	otoa@w,f
  6884  0717  30FF               	movlw	255
  6885  0718  3DC7               	addwfc	otoa@w+1,f
  6886                           
  6887                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 530:       
      +                            n = n >> 3;
  6888  0719  3048               	movlw	low otoa@n
  6889  071A  0086               	movwf	6
  6890  071B  3000               	movlw	high otoa@n
  6891  071C  0087               	movwf	7
  6892  071D  3F40               	moviw [0]fsr1
  6893  071E  00BA               	movwf	??_otoa
  6894  071F  3F41               	moviw [1]fsr1
  6895  0720  00BB               	movwf	??_otoa+1
  6896  0721  3F42               	moviw [2]fsr1
  6897  0722  00BC               	movwf	??_otoa+2
  6898  0723  3F43               	moviw [3]fsr1
  6899  0724  00BD               	movwf	??_otoa+3
  6900  0725  3F44               	moviw [4]fsr1
  6901  0726  00BE               	movwf	??_otoa+4
  6902  0727  3F45               	moviw [5]fsr1
  6903  0728  00BF               	movwf	??_otoa+5
  6904  0729  3F46               	moviw [6]fsr1
  6905  072A  00C0               	movwf	??_otoa+6
  6906  072B  3F47               	moviw [7]fsr1
  6907  072C  00C1               	movwf	??_otoa+7
  6908  072D  3003               	movlw	3
  6909  072E                     u5185:	
  6910  072E  0020               	movlb	0	; select bank0
  6911  072F  36C1               	lsrf	??_otoa+7,f
  6912  0730  0CC0               	rrf	??_otoa+6,f
  6913  0731  0CBF               	rrf	??_otoa+5,f
  6914  0732  0CBE               	rrf	??_otoa+4,f
  6915  0733  0CBD               	rrf	??_otoa+3,f
  6916  0734  0CBC               	rrf	??_otoa+2,f
  6917  0735  0CBB               	rrf	??_otoa+1,f
  6918  0736  0CBA               	rrf	??_otoa,f
  6919  0737  0B89               	decfsz	9,f
  6920  0738  2F2E               	goto	u5185
  6921  0739  0020               	movlb	0	; select bank0
  6922  073A  0841               	movf	??_otoa+7,w
  6923  073B  00CF               	movwf	otoa@n+7
  6924  073C  0840               	movf	??_otoa+6,w
  6925  073D  00CE               	movwf	otoa@n+6
  6926  073E  083F               	movf	??_otoa+5,w
  6927  073F  00CD               	movwf	otoa@n+5
  6928  0740  083E               	movf	??_otoa+4,w
  6929  0741  00CC               	movwf	otoa@n+4
  6930  0742  083D               	movf	??_otoa+3,w
  6931  0743  00CB               	movwf	otoa@n+3
  6932  0744  083C               	movf	??_otoa+2,w
  6933  0745  00CA               	movwf	otoa@n+2
  6934  0746  083B               	movf	??_otoa+1,w
  6935  0747  00C9               	movwf	otoa@n+1
  6936  0748  083A               	movf	??_otoa,w
  6937  0749  00C8               	movwf	otoa@n
  6938  074A                     l486:	
  6939                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 531:     }
  6940                           
  6941                           
  6942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 524:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6943  074A  0851               	movf	otoa@i+1,w
  6944  074B  3A80               	xorlw	128
  6945  074C  00BA               	movwf	??_otoa
  6946  074D  3080               	movlw	128
  6947  074E  023A               	subwf	??_otoa,w
  6948  074F  1D03               	skipz
  6949  0750  2F53               	goto	u5195
  6950  0751  3001               	movlw	1
  6951  0752  0250               	subwf	otoa@i,w
  6952  0753                     u5195:	
  6953  0753  1803               	btfsc	3,0
  6954  0754  2ED7               	goto	l4273
  6955  0755                     l492:	
  6956                           
  6957                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 534:     if
      +                           ((flags & (1 << 4)) && t) {
  6958  0755  0021               	movlb	1	; select bank1
  6959  0756  1E62               	btfss	_flags^(0+128),4
  6960  0757  2F6E               	goto	l4289
  6961  0758  0020               	movlb	0	; select bank0
  6962  0759  0844               	movf	otoa@t,w
  6963  075A  0445               	iorwf	otoa@t+1,w
  6964  075B  1903               	btfsc	3,2
  6965  075C  2F6E               	goto	l4289
  6966                           
  6967                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 535:       
      +                            --i;
  6968  075D  30FF               	movlw	255
  6969  075E  07D0               	addwf	otoa@i,f
  6970  075F  30FF               	movlw	255
  6971  0760  3DD1               	addwfc	otoa@i+1,f
  6972                           
  6973                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 536:       
      +                            dbuf[i] = '0';
  6974  0761  3030               	movlw	48
  6975  0762  00BA               	movwf	??_otoa
  6976  0763  0850               	movf	otoa@i,w
  6977  0764  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6978  0765  0086               	movwf	6
  6979  0766  3001               	movlw	1	; select bank2/3
  6980  0767  0087               	movwf	7
  6981  0768  083A               	movf	??_otoa,w
  6982  0769  0081               	movwf	1
  6983                           
  6984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 537:       
      +                            --w;
  6985  076A  30FF               	movlw	255
  6986  076B  07C6               	addwf	otoa@w,f
  6987  076C  30FF               	movlw	255
  6988  076D  3DC7               	addwfc	otoa@w+1,f
  6989  076E                     l4289:	
  6990                           
  6991                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 541:     re
      +                          turn pad(fp, &dbuf[i], w);
  6992  076E  0020               	movlb	0	; select bank0
  6993  076F  0831               	movf	otoa@fp+1,w
  6994  0770  00A7               	movwf	pad@fp+1
  6995  0771  0830               	movf	otoa@fp,w
  6996  0772  00A6               	movwf	pad@fp
  6997  0773  0850               	movf	otoa@i,w
  6998  0774  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6999  0775  00BA               	movwf	??_otoa
  7000  0776  083A               	movf	??_otoa,w
  7001  0777  00A8               	movwf	pad@buf
  7002  0778  0847               	movf	otoa@w+1,w
  7003  0779  00AA               	movwf	pad@p+1
  7004  077A  0846               	movf	otoa@w,w
  7005  077B  00A9               	movwf	pad@p
  7006  077C  3190  208A         	fcall	_pad
  7007  077E  0020               	movlb	0	; select bank0
  7008  077F  0827               	movf	?_pad+1,w
  7009  0780  00B1               	movwf	?_otoa+1
  7010  0781  0826               	movf	?_pad,w
  7011  0782  00B0               	movwf	?_otoa
  7012  0783  0008               	return
  7013  0784                     __end_of_otoa:	
  7014                           
  7015                           	psect	text17
  7016  0353                     __ptext17:	
  7017 ;; *************** function _dtoa *****************
  7018 ;; Defined at:
  7019 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  7022 ;;		 -> vsnprintf@f(6), 
  7023 ;;  d               8   18[BANK0 ] long long 
  7024 ;; Auto vars:     Size  Location     Type
  7025 ;;  n               8   37[BANK0 ] long long 
  7026 ;;  i               2   45[BANK0 ] int 
  7027 ;;  s               2   35[BANK0 ] int 
  7028 ;;  w               2   33[BANK0 ] int 
  7029 ;;  p               2   31[BANK0 ] int 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  2   16[BANK0 ] int 
  7032 ;; Registers used:
  7033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7039 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7040 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7041 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7042 ;;      Totals:         0      31       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7043 ;;Total ram usage:       31 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    5
  7046 ;; This function calls:
  7047 ;;		___aodiv
  7048 ;;		___aomod
  7049 ;;		_abs
  7050 ;;		_pad
  7051 ;; This function is called by:
  7052 ;;		_vfpfcnvrt
  7053 ;; This function uses a non-reentrant model
  7054 ;;
  7055                           
  7056                           
  7057                           ;psect for function _dtoa
  7058  0353                     _dtoa:	
  7059                           
  7060                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 274: static
      +                           int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\
      +                          c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\
      +                          sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
      +                          v2.05\pic\sources\c99\common\doprnt.c: 280:     n = d;
  7061                           
  7062                           ;incstack = 0
  7063                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7064  0353  0020               	movlb	0	; select bank0
  7065  0354  0832               	movf	dtoa@d,w
  7066  0355  00C5               	movwf	dtoa@n
  7067  0356  0833               	movf	dtoa@d+1,w
  7068  0357  00C6               	movwf	dtoa@n+1
  7069  0358  0834               	movf	dtoa@d+2,w
  7070  0359  00C7               	movwf	dtoa@n+2
  7071  035A  0835               	movf	dtoa@d+3,w
  7072  035B  00C8               	movwf	dtoa@n+3
  7073  035C  0836               	movf	dtoa@d+4,w
  7074  035D  00C9               	movwf	dtoa@n+4
  7075  035E  0837               	movf	dtoa@d+5,w
  7076  035F  00CA               	movwf	dtoa@n+5
  7077  0360  0838               	movf	dtoa@d+6,w
  7078  0361  00CB               	movwf	dtoa@n+6
  7079  0362  0839               	movf	dtoa@d+7,w
  7080  0363  00CC               	movwf	dtoa@n+7
  7081                           
  7082                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 281:     s 
      +                          = n < 0 ? 1 : 0;
  7083  0364  3045               	movlw	low dtoa@n
  7084  0365  0086               	movwf	6
  7085  0366  3000               	movlw	high dtoa@n
  7086  0367  0087               	movwf	7
  7087  0368  3F47               	moviw [7]fsr1
  7088  0369  00BA               	movwf	??_dtoa
  7089  036A  1FBA               	btfss	??_dtoa,7
  7090  036B  2B6E               	goto	u5000
  7091  036C  3001               	movlw	1
  7092  036D  2B6F               	goto	u5010
  7093  036E                     u5000:	
  7094  036E  3000               	movlw	0
  7095  036F                     u5010:	
  7096  036F  0020               	movlb	0	; select bank0
  7097  0370  00BB               	movwf	??_dtoa+1
  7098  0371  01BC               	clrf	??_dtoa+2
  7099  0372  083B               	movf	??_dtoa+1,w
  7100  0373  00C3               	movwf	dtoa@s
  7101  0374  083C               	movf	??_dtoa+2,w
  7102  0375  00C4               	movwf	dtoa@s+1
  7103                           
  7104                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 282:     if
      +                           (s) {
  7105  0376  0843               	movf	dtoa@s,w
  7106  0377  0444               	iorwf	dtoa@s+1,w
  7107  0378  1903               	btfsc	3,2
  7108  0379  2B98               	goto	l455
  7109                           
  7110                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 283:       
      +                            n = -n;
  7111  037A  09C5               	comf	dtoa@n,f
  7112  037B  09C6               	comf	dtoa@n+1,f
  7113  037C  09C7               	comf	dtoa@n+2,f
  7114  037D  09C8               	comf	dtoa@n+3,f
  7115  037E  09C9               	comf	dtoa@n+4,f
  7116  037F  09CA               	comf	dtoa@n+5,f
  7117  0380  09CB               	comf	dtoa@n+6,f
  7118  0381  09CC               	comf	dtoa@n+7,f
  7119  0382  0AC5               	incf	dtoa@n,f
  7120  0383  1D03               	skipz
  7121  0384  2B98               	goto	l455
  7122  0385  0AC6               	incf	dtoa@n+1,f
  7123  0386  1D03               	skipz
  7124  0387  2B98               	goto	l455
  7125  0388  0AC7               	incf	dtoa@n+2,f
  7126  0389  1D03               	skipz
  7127  038A  2B98               	goto	l455
  7128  038B  0AC8               	incf	dtoa@n+3,f
  7129  038C  1D03               	skipz
  7130  038D  2B98               	goto	l455
  7131  038E  0AC9               	incf	dtoa@n+4,f
  7132  038F  1D03               	skipz
  7133  0390  2B98               	goto	l455
  7134  0391  0ACA               	incf	dtoa@n+5,f
  7135  0392  1D03               	skipz
  7136  0393  2B98               	goto	l455
  7137  0394  0ACB               	incf	dtoa@n+6,f
  7138  0395  1D03               	skipz
  7139  0396  2B98               	goto	l455
  7140  0397  0ACC               	incf	dtoa@n+7,f
  7141  0398                     l455:	
  7142                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 284:     }
  7143                           
  7144                           
  7145                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 287:     if
      +                           (!(prec < 0)) {
  7146  0398  0021               	movlb	1	; select bank1
  7147  0399  1BE1               	btfsc	(_prec+1)^(0+128),7
  7148  039A  2B9F               	goto	l456
  7149                           
  7150                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 288:       
      +                            flags &= ~(1 << 1);
  7151  039B  30FD               	movlw	253
  7152  039C  05E2               	andwf	_flags^(0+128),f
  7153  039D  30FF               	movlw	255
  7154  039E  05E3               	andwf	(_flags+1)^(0+128),f
  7155  039F                     l456:	
  7156                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 289:     }
  7157                           
  7158                           
  7159                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 290:     p 
      +                          = (0 < prec) ? prec : 1;
  7160  039F  0861               	movf	(_prec+1)^(0+128),w
  7161  03A0  3A80               	xorlw	128
  7162  03A1  0020               	movlb	0	; select bank0
  7163  03A2  00BA               	movwf	??_dtoa
  7164  03A3  3080               	movlw	128
  7165  03A4  023A               	subwf	??_dtoa,w
  7166  03A5  1D03               	skipz
  7167  03A6  2BAA               	goto	u5055
  7168  03A7  3001               	movlw	1
  7169  03A8  0021               	movlb	1	; select bank1
  7170  03A9  0260               	subwf	_prec^(0+128),w
  7171  03AA                     u5055:	
  7172  03AA  1803               	skipnc
  7173  03AB  2BB2               	goto	l4203
  7174  03AC  3001               	movlw	1
  7175  03AD  0020               	movlb	0	; select bank0
  7176  03AE  00BF               	movwf	dtoa@p
  7177  03AF  3000               	movlw	0
  7178  03B0  00C0               	movwf	dtoa@p+1
  7179  03B1  2BBA               	goto	l460
  7180  03B2                     l4203:	
  7181  03B2  0021               	movlb	1	; select bank1
  7182  03B3  0861               	movf	(_prec+1)^(0+128),w
  7183  03B4  0020               	movlb	0	; select bank0
  7184  03B5  00C0               	movwf	dtoa@p+1
  7185  03B6  0021               	movlb	1	; select bank1
  7186  03B7  0860               	movf	_prec^(0+128),w
  7187  03B8  0020               	movlb	0	; select bank0
  7188  03B9  00BF               	movwf	dtoa@p
  7189  03BA                     l460:	
  7190                           
  7191                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 291:     w 
      +                          = width;
  7192  03BA  0021               	movlb	1	; select bank1
  7193  03BB  085F               	movf	(_width+1)^(0+128),w
  7194  03BC  0020               	movlb	0	; select bank0
  7195  03BD  00C2               	movwf	dtoa@w+1
  7196  03BE  0021               	movlb	1	; select bank1
  7197  03BF  085E               	movf	_width^(0+128),w
  7198  03C0  0020               	movlb	0	; select bank0
  7199  03C1  00C1               	movwf	dtoa@w
  7200                           
  7201                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 292:     if
      +                           (s || (flags & (1 << 2))) {
  7202  03C2  0843               	movf	dtoa@s,w
  7203  03C3  0444               	iorwf	dtoa@s+1,w
  7204  03C4  1D03               	btfss	3,2
  7205  03C5  2BC9               	goto	l4209
  7206  03C6  0021               	movlb	1	; select bank1
  7207  03C7  1D62               	btfss	_flags^(0+128),2
  7208  03C8  2BCE               	goto	l461
  7209  03C9                     l4209:	
  7210                           
  7211                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 293:       
      +                            --w;
  7212  03C9  30FF               	movlw	255
  7213  03CA  0020               	movlb	0	; select bank0
  7214  03CB  07C1               	addwf	dtoa@w,f
  7215  03CC  30FF               	movlw	255
  7216  03CD  3DC2               	addwfc	dtoa@w+1,f
  7217  03CE                     l461:	
  7218                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 294:     }
  7219                           
  7220                           
  7221                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 297:     i 
      +                          = sizeof(dbuf) - 1;
  7222  03CE  301F               	movlw	31
  7223  03CF  0020               	movlb	0	; select bank0
  7224  03D0  00CD               	movwf	dtoa@i
  7225  03D1  3000               	movlw	0
  7226  03D2  00CE               	movwf	dtoa@i+1
  7227                           
  7228                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 298:     db
      +                          uf[i] = '\0';
  7229  03D3  0022               	movlb	2	; select bank2
  7230  03D4  01C9               	clrf	(_dbuf^(0+256)+31)
  7231                           
  7232                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7233  03D5  2C64               	goto	l464
  7234  03D6                     l4223:	
  7235  03D6  0020               	movlb	0	; select bank0
  7236  03D7  0845               	movf	dtoa@n,w
  7237  03D8  0446               	iorwf	dtoa@n+1,w
  7238  03D9  0447               	iorwf	dtoa@n+2,w
  7239  03DA  0448               	iorwf	dtoa@n+3,w
  7240  03DB  0449               	iorwf	dtoa@n+4,w
  7241  03DC  044A               	iorwf	dtoa@n+5,w
  7242  03DD  044B               	iorwf	dtoa@n+6,w
  7243  03DE  044C               	iorwf	dtoa@n+7,w
  7244  03DF  1D03               	skipz
  7245  03E0  2BFB               	goto	l4213
  7246  03E1  0840               	movf	dtoa@p+1,w
  7247  03E2  3A80               	xorlw	128
  7248  03E3  00BA               	movwf	??_dtoa
  7249  03E4  3080               	movlw	128
  7250  03E5  023A               	subwf	??_dtoa,w
  7251  03E6  1D03               	skipz
  7252  03E7  2BEA               	goto	u5105
  7253  03E8  3001               	movlw	1
  7254  03E9  023F               	subwf	dtoa@p,w
  7255  03EA                     u5105:	
  7256  03EA  1803               	skipnc
  7257  03EB  2BFB               	goto	l4213
  7258  03EC  0020               	movlb	0	; select bank0
  7259  03ED  0842               	movf	dtoa@w+1,w
  7260  03EE  3A80               	xorlw	128
  7261  03EF  00BA               	movwf	??_dtoa
  7262  03F0  3080               	movlw	128
  7263  03F1  023A               	subwf	??_dtoa,w
  7264  03F2  1D03               	skipz
  7265  03F3  2BF6               	goto	u5115
  7266  03F4  3001               	movlw	1
  7267  03F5  0241               	subwf	dtoa@w,w
  7268  03F6                     u5115:	
  7269  03F6  1C03               	skipc
  7270  03F7  2C70               	goto	l4231
  7271  03F8  0021               	movlb	1	; select bank1
  7272  03F9  1CE2               	btfss	_flags^(0+128),1
  7273  03FA  2C70               	goto	l4231
  7274  03FB                     l4213:	
  7275                           
  7276                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 300:       
      +                            --i;
  7277  03FB  30FF               	movlw	255
  7278  03FC  0020               	movlb	0	; select bank0
  7279  03FD  07CD               	addwf	dtoa@i,f
  7280  03FE  30FF               	movlw	255
  7281  03FF  3DCE               	addwfc	dtoa@i+1,f
  7282                           
  7283                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 301:       
      +                            dbuf[i] = '0' + abs(n % 10);
  7284  0400  300A               	movlw	10
  7285  0401  00A0               	movwf	___aomod@divisor
  7286  0402  01A1               	clrf	___aomod@divisor+1
  7287  0403  01A2               	clrf	___aomod@divisor+2
  7288  0404  01A3               	clrf	___aomod@divisor+3
  7289  0405  01A4               	clrf	___aomod@divisor+4
  7290  0406  01A5               	clrf	___aomod@divisor+5
  7291  0407  01A6               	clrf	___aomod@divisor+6
  7292  0408  01A7               	clrf	___aomod@divisor+7
  7293  0409  0845               	movf	dtoa@n,w
  7294  040A  00A8               	movwf	___aomod@dividend
  7295  040B  0846               	movf	dtoa@n+1,w
  7296  040C  00A9               	movwf	___aomod@dividend+1
  7297  040D  0847               	movf	dtoa@n+2,w
  7298  040E  00AA               	movwf	___aomod@dividend+2
  7299  040F  0848               	movf	dtoa@n+3,w
  7300  0410  00AB               	movwf	___aomod@dividend+3
  7301  0411  0849               	movf	dtoa@n+4,w
  7302  0412  00AC               	movwf	___aomod@dividend+4
  7303  0413  084A               	movf	dtoa@n+5,w
  7304  0414  00AD               	movwf	___aomod@dividend+5
  7305  0415  084B               	movf	dtoa@n+6,w
  7306  0416  00AE               	movwf	___aomod@dividend+6
  7307  0417  084C               	movf	dtoa@n+7,w
  7308  0418  00AF               	movwf	___aomod@dividend+7
  7309  0419  3196  2643  3183   	fcall	___aomod
  7310  041C  0020               	movlb	0	; select bank0
  7311  041D  0821               	movf	?___aomod+1,w
  7312  041E  00F5               	movwf	abs@a+1
  7313  041F  0820               	movf	?___aomod,w
  7314  0420  00F4               	movwf	abs@a
  7315  0421  319E  264C  3183   	fcall	_abs
  7316  0424  0874               	movf	?_abs,w
  7317  0425  3E30               	addlw	48
  7318  0426  0020               	movlb	0	; select bank0
  7319  0427  00BA               	movwf	??_dtoa
  7320  0428  084D               	movf	dtoa@i,w
  7321  0429  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7322  042A  0086               	movwf	6
  7323  042B  3001               	movlw	1	; select bank2/3
  7324  042C  0087               	movwf	7
  7325  042D  083A               	movf	??_dtoa,w
  7326  042E  0081               	movwf	1
  7327                           
  7328                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 302:       
      +                            --p;
  7329  042F  30FF               	movlw	255
  7330  0430  07BF               	addwf	dtoa@p,f
  7331  0431  30FF               	movlw	255
  7332  0432  3DC0               	addwfc	dtoa@p+1,f
  7333                           
  7334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 303:       
      +                            --w;
  7335  0433  30FF               	movlw	255
  7336  0434  07C1               	addwf	dtoa@w,f
  7337  0435  30FF               	movlw	255
  7338  0436  3DC2               	addwfc	dtoa@w+1,f
  7339                           
  7340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 304:       
      +                            n = n / 10;
  7341  0437  300A               	movlw	10
  7342  0438  00A0               	movwf	___aodiv@divisor
  7343  0439  01A1               	clrf	___aodiv@divisor+1
  7344  043A  01A2               	clrf	___aodiv@divisor+2
  7345  043B  01A3               	clrf	___aodiv@divisor+3
  7346  043C  01A4               	clrf	___aodiv@divisor+4
  7347  043D  01A5               	clrf	___aodiv@divisor+5
  7348  043E  01A6               	clrf	___aodiv@divisor+6
  7349  043F  01A7               	clrf	___aodiv@divisor+7
  7350  0440  0845               	movf	dtoa@n,w
  7351  0441  00A8               	movwf	___aodiv@dividend
  7352  0442  0846               	movf	dtoa@n+1,w
  7353  0443  00A9               	movwf	___aodiv@dividend+1
  7354  0444  0847               	movf	dtoa@n+2,w
  7355  0445  00AA               	movwf	___aodiv@dividend+2
  7356  0446  0848               	movf	dtoa@n+3,w
  7357  0447  00AB               	movwf	___aodiv@dividend+3
  7358  0448  0849               	movf	dtoa@n+4,w
  7359  0449  00AC               	movwf	___aodiv@dividend+4
  7360  044A  084A               	movf	dtoa@n+5,w
  7361  044B  00AD               	movwf	___aodiv@dividend+5
  7362  044C  084B               	movf	dtoa@n+6,w
  7363  044D  00AE               	movwf	___aodiv@dividend+6
  7364  044E  084C               	movf	dtoa@n+7,w
  7365  044F  00AF               	movwf	___aodiv@dividend+7
  7366  0450  3185  25A0  3183   	fcall	___aodiv
  7367  0453  0020               	movlb	0	; select bank0
  7368  0454  0820               	movf	?___aodiv,w
  7369  0455  00C5               	movwf	dtoa@n
  7370  0456  0821               	movf	?___aodiv+1,w
  7371  0457  00C6               	movwf	dtoa@n+1
  7372  0458  0822               	movf	?___aodiv+2,w
  7373  0459  00C7               	movwf	dtoa@n+2
  7374  045A  0823               	movf	?___aodiv+3,w
  7375  045B  00C8               	movwf	dtoa@n+3
  7376  045C  0824               	movf	?___aodiv+4,w
  7377  045D  00C9               	movwf	dtoa@n+4
  7378  045E  0825               	movf	?___aodiv+5,w
  7379  045F  00CA               	movwf	dtoa@n+5
  7380  0460  0826               	movf	?___aodiv+6,w
  7381  0461  00CB               	movwf	dtoa@n+6
  7382  0462  0827               	movf	?___aodiv+7,w
  7383  0463  00CC               	movwf	dtoa@n+7
  7384  0464                     l464:	
  7385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 305:     }
  7386                           
  7387                           
  7388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 299:     wh
      +                          ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7389  0464  0020               	movlb	0	; select bank0
  7390  0465  084E               	movf	dtoa@i+1,w
  7391  0466  3A80               	xorlw	128
  7392  0467  00BA               	movwf	??_dtoa
  7393  0468  3080               	movlw	128
  7394  0469  023A               	subwf	??_dtoa,w
  7395  046A  1D03               	skipz
  7396  046B  2C6E               	goto	u5085
  7397  046C  3001               	movlw	1
  7398  046D  024D               	subwf	dtoa@i,w
  7399  046E                     u5085:	
  7400  046E  1803               	btfsc	3,0
  7401  046F  2BD6               	goto	l4223
  7402  0470                     l4231:	
  7403                           
  7404                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 308:     if
      +                           (s || (flags & (1 << 2))) {
  7405  0470  0020               	movlb	0	; select bank0
  7406  0471  0843               	movf	dtoa@s,w
  7407  0472  0444               	iorwf	dtoa@s+1,w
  7408  0473  1D03               	btfss	3,2
  7409  0474  2C78               	goto	l4235
  7410  0475  0021               	movlb	1	; select bank1
  7411  0476  1D62               	btfss	_flags^(0+128),2
  7412  0477  2C90               	goto	l4245
  7413  0478                     l4235:	
  7414                           
  7415                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 309:       
      +                            --i;
  7416  0478  30FF               	movlw	255
  7417  0479  0020               	movlb	0	; select bank0
  7418  047A  07CD               	addwf	dtoa@i,f
  7419  047B  30FF               	movlw	255
  7420  047C  3DCE               	addwfc	dtoa@i+1,f
  7421                           
  7422                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 310:       
      +                            dbuf[i] = s ? '-' : '+';
  7423  047D  0843               	movf	dtoa@s,w
  7424  047E  0444               	iorwf	dtoa@s+1,w
  7425  047F  1D03               	btfss	3,2
  7426  0480  2C83               	goto	l4241
  7427  0481  302B               	movlw	43
  7428  0482  2C84               	goto	L2
  7429  0483                     l4241:	
  7430  0483  302D               	movlw	45
  7431  0484                     L2:	
  7432  0484  00BD               	movwf	_dtoa$836
  7433  0485  3000               	movlw	0
  7434  0486  00BE               	movwf	_dtoa$836+1
  7435  0487  083D               	movf	_dtoa$836,w
  7436  0488  00BA               	movwf	??_dtoa
  7437  0489  084D               	movf	dtoa@i,w
  7438  048A  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7439  048B  0086               	movwf	6
  7440  048C  3001               	movlw	1	; select bank2/3
  7441  048D  0087               	movwf	7
  7442  048E  083A               	movf	??_dtoa,w
  7443  048F  0081               	movwf	1
  7444  0490                     l4245:	
  7445                           
  7446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 314:     re
      +                          turn pad(fp, &dbuf[i], w);
  7447  0490  0020               	movlb	0	; select bank0
  7448  0491  0831               	movf	dtoa@fp+1,w
  7449  0492  00A7               	movwf	pad@fp+1
  7450  0493  0830               	movf	dtoa@fp,w
  7451  0494  00A6               	movwf	pad@fp
  7452  0495  084D               	movf	dtoa@i,w
  7453  0496  3E2A               	addlw	(low (_dbuf| (0+256)))& (0+255)
  7454  0497  00BA               	movwf	??_dtoa
  7455  0498  083A               	movf	??_dtoa,w
  7456  0499  00A8               	movwf	pad@buf
  7457  049A  0842               	movf	dtoa@w+1,w
  7458  049B  00AA               	movwf	pad@p+1
  7459  049C  0841               	movf	dtoa@w,w
  7460  049D  00A9               	movwf	pad@p
  7461  049E  3190  208A         	fcall	_pad
  7462  04A0  0020               	movlb	0	; select bank0
  7463  04A1  0827               	movf	?_pad+1,w
  7464  04A2  00B1               	movwf	?_dtoa+1
  7465  04A3  0826               	movf	?_pad,w
  7466  04A4  00B0               	movwf	?_dtoa
  7467  04A5  0008               	return
  7468  04A6                     __end_of_dtoa:	
  7469                           
  7470                           	psect	text18
  7471  1E4C                     __ptext18:	
  7472 ;; *************** function _abs *****************
  7473 ;; Defined at:
  7474 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\abs.c"
  7475 ;; Parameters:    Size  Location     Type
  7476 ;;  a               2    4[COMMON] int 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;		None
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  2    4[COMMON] int 
  7481 ;; Registers used:
  7482 ;;		wreg, status,2, status,0
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7490 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7492 ;;Total ram usage:        4 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:    1
  7495 ;; This function calls:
  7496 ;;		Nothing
  7497 ;; This function is called by:
  7498 ;;		_dtoa
  7499 ;; This function uses a non-reentrant model
  7500 ;;
  7501                           
  7502                           
  7503                           ;psect for function _abs
  7504  1E4C                     _abs:	
  7505                           
  7506                           ;incstack = 0
  7507                           ; Regs used in _abs: [wreg+status,2+status,0]
  7508  1E4C  0875               	movf	abs@a+1,w
  7509  1E4D  3A80               	xorlw	128
  7510  1E4E  00F6               	movwf	??_abs
  7511  1E4F  3080               	movlw	128
  7512  1E50  0276               	subwf	??_abs,w
  7513  1E51  1D03               	skipz
  7514  1E52  2E55               	goto	u4535
  7515  1E53  3001               	movlw	1
  7516  1E54  0274               	subwf	abs@a,w
  7517  1E55                     u4535:	
  7518  1E55  1803               	skipnc
  7519  1E56  0008               	return
  7520  1E57  0974               	comf	abs@a,w
  7521  1E58  00F6               	movwf	??_abs
  7522  1E59  0975               	comf	abs@a+1,w
  7523  1E5A  00F7               	movwf	??_abs+1
  7524  1E5B  0AF6               	incf	??_abs,f
  7525  1E5C  1903               	skipnz
  7526  1E5D  0AF7               	incf	??_abs+1,f
  7527  1E5E  0876               	movf	??_abs,w
  7528  1E5F  00F4               	movwf	?_abs
  7529  1E60  0877               	movf	??_abs+1,w
  7530  1E61  00F5               	movwf	?_abs+1
  7531  1E62  0008               	return
  7532  1E63                     __end_of_abs:	
  7533                           
  7534                           	psect	text19
  7535  1643                     __ptext19:	
  7536 ;; *************** function ___aomod *****************
  7537 ;; Defined at:
  7538 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aomod.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;  divisor         8    0[BANK0 ] long long 
  7541 ;;  dividend        8    8[BANK0 ] long long 
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  sign            1    3[COMMON] unsigned char 
  7544 ;;  counter         1    2[COMMON] unsigned char 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  8    0[BANK0 ] long long 
  7547 ;; Registers used:
  7548 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7554 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7555 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7556 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7557 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7558 ;;Total ram usage:       19 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    1
  7561 ;; This function calls:
  7562 ;;		Nothing
  7563 ;; This function is called by:
  7564 ;;		_dtoa
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           
  7569                           ;psect for function ___aomod
  7570  1643                     ___aomod:	
  7571                           
  7572                           ;incstack = 0
  7573                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  7574  1643  01F3               	clrf	___aomod@sign
  7575  1644  3028               	movlw	low ___aomod@dividend
  7576  1645  0086               	movwf	6
  7577  1646  3000               	movlw	high ___aomod@dividend
  7578  1647  0087               	movwf	7
  7579  1648  3F47               	moviw [7]fsr1
  7580  1649  00F1               	movwf	??___aomod
  7581  164A  1FF1               	btfss	??___aomod,7
  7582  164B  2E6D               	goto	l4103
  7583  164C  0020               	movlb	0	; select bank0
  7584  164D  09A8               	comf	___aomod@dividend,f
  7585  164E  09A9               	comf	___aomod@dividend+1,f
  7586  164F  09AA               	comf	___aomod@dividend+2,f
  7587  1650  09AB               	comf	___aomod@dividend+3,f
  7588  1651  09AC               	comf	___aomod@dividend+4,f
  7589  1652  09AD               	comf	___aomod@dividend+5,f
  7590  1653  09AE               	comf	___aomod@dividend+6,f
  7591  1654  09AF               	comf	___aomod@dividend+7,f
  7592  1655  0AA8               	incf	___aomod@dividend,f
  7593  1656  1D03               	skipz
  7594  1657  2E6B               	goto	u479lld
  7595  1658  0AA9               	incf	___aomod@dividend+1,f
  7596  1659  1D03               	skipz
  7597  165A  2E6B               	goto	u479lld
  7598  165B  0AAA               	incf	___aomod@dividend+2,f
  7599  165C  1D03               	skipz
  7600  165D  2E6B               	goto	u479lld
  7601  165E  0AAB               	incf	___aomod@dividend+3,f
  7602  165F  1D03               	skipz
  7603  1660  2E6B               	goto	u479lld
  7604  1661  0AAC               	incf	___aomod@dividend+4,f
  7605  1662  1D03               	skipz
  7606  1663  2E6B               	goto	u479lld
  7607  1664  0AAD               	incf	___aomod@dividend+5,f
  7608  1665  1D03               	skipz
  7609  1666  2E6B               	goto	u479lld
  7610  1667  0AAE               	incf	___aomod@dividend+6,f
  7611  1668  1D03               	skipz
  7612  1669  2E6B               	goto	u479lld
  7613  166A  0AAF               	incf	___aomod@dividend+7,f
  7614  166B                     u479lld:	
  7615  166B  01F3               	clrf	___aomod@sign
  7616  166C  0AF3               	incf	___aomod@sign,f
  7617  166D                     l4103:	
  7618  166D  3020               	movlw	low ___aomod@divisor
  7619  166E  0086               	movwf	6
  7620  166F  3000               	movlw	high ___aomod@divisor
  7621  1670  0087               	movwf	7
  7622  1671  3F47               	moviw [7]fsr1
  7623  1672  00F1               	movwf	??___aomod
  7624  1673  1FF1               	btfss	??___aomod,7
  7625  1674  2E94               	goto	l4107
  7626  1675  0020               	movlb	0	; select bank0
  7627  1676  09A0               	comf	___aomod@divisor,f
  7628  1677  09A1               	comf	___aomod@divisor+1,f
  7629  1678  09A2               	comf	___aomod@divisor+2,f
  7630  1679  09A3               	comf	___aomod@divisor+3,f
  7631  167A  09A4               	comf	___aomod@divisor+4,f
  7632  167B  09A5               	comf	___aomod@divisor+5,f
  7633  167C  09A6               	comf	___aomod@divisor+6,f
  7634  167D  09A7               	comf	___aomod@divisor+7,f
  7635  167E  0AA0               	incf	___aomod@divisor,f
  7636  167F  1D03               	skipz
  7637  1680  2E94               	goto	l4107
  7638  1681  0AA1               	incf	___aomod@divisor+1,f
  7639  1682  1D03               	skipz
  7640  1683  2E94               	goto	l4107
  7641  1684  0AA2               	incf	___aomod@divisor+2,f
  7642  1685  1D03               	skipz
  7643  1686  2E94               	goto	l4107
  7644  1687  0AA3               	incf	___aomod@divisor+3,f
  7645  1688  1D03               	skipz
  7646  1689  2E94               	goto	l4107
  7647  168A  0AA4               	incf	___aomod@divisor+4,f
  7648  168B  1D03               	skipz
  7649  168C  2E94               	goto	l4107
  7650  168D  0AA5               	incf	___aomod@divisor+5,f
  7651  168E  1D03               	skipz
  7652  168F  2E94               	goto	l4107
  7653  1690  0AA6               	incf	___aomod@divisor+6,f
  7654  1691  1D03               	skipz
  7655  1692  2E94               	goto	l4107
  7656  1693  0AA7               	incf	___aomod@divisor+7,f
  7657  1694                     l4107:	
  7658  1694  0020               	movlb	0	; select bank0
  7659  1695  0820               	movf	___aomod@divisor,w
  7660  1696  0421               	iorwf	___aomod@divisor+1,w
  7661  1697  0422               	iorwf	___aomod@divisor+2,w
  7662  1698  0423               	iorwf	___aomod@divisor+3,w
  7663  1699  0424               	iorwf	___aomod@divisor+4,w
  7664  169A  0425               	iorwf	___aomod@divisor+5,w
  7665  169B  0426               	iorwf	___aomod@divisor+6,w
  7666  169C  0427               	iorwf	___aomod@divisor+7,w
  7667  169D  1903               	skipnz
  7668  169E  2EEC               	goto	l4123
  7669  169F  01F2               	clrf	___aomod@counter
  7670  16A0  0AF2               	incf	___aomod@counter,f
  7671  16A1                     l4115:	
  7672  16A1  1BA7               	btfsc	___aomod@divisor+7,7
  7673  16A2  2EB0               	goto	l4117
  7674  16A3  35A0               	lslf	___aomod@divisor,f
  7675  16A4  0DA1               	rlf	___aomod@divisor+1,f
  7676  16A5  0DA2               	rlf	___aomod@divisor+2,f
  7677  16A6  0DA3               	rlf	___aomod@divisor+3,f
  7678  16A7  0DA4               	rlf	___aomod@divisor+4,f
  7679  16A8  0DA5               	rlf	___aomod@divisor+5,f
  7680  16A9  0DA6               	rlf	___aomod@divisor+6,f
  7681  16AA  0DA7               	rlf	___aomod@divisor+7,f
  7682  16AB  3001               	movlw	1
  7683  16AC  00F1               	movwf	??___aomod
  7684  16AD  0871               	movf	??___aomod,w
  7685  16AE  07F2               	addwf	___aomod@counter,f
  7686  16AF  2EA1               	goto	l4115
  7687  16B0                     l4117:	
  7688  16B0  0827               	movf	___aomod@divisor+7,w
  7689  16B1  022F               	subwf	___aomod@dividend+7,w
  7690  16B2  1D03               	skipz
  7691  16B3  2ECE               	goto	u4845
  7692  16B4  0826               	movf	___aomod@divisor+6,w
  7693  16B5  022E               	subwf	___aomod@dividend+6,w
  7694  16B6  1D03               	skipz
  7695  16B7  2ECE               	goto	u4845
  7696  16B8  0825               	movf	___aomod@divisor+5,w
  7697  16B9  022D               	subwf	___aomod@dividend+5,w
  7698  16BA  1D03               	skipz
  7699  16BB  2ECE               	goto	u4845
  7700  16BC  0824               	movf	___aomod@divisor+4,w
  7701  16BD  022C               	subwf	___aomod@dividend+4,w
  7702  16BE  1D03               	skipz
  7703  16BF  2ECE               	goto	u4845
  7704  16C0  0823               	movf	___aomod@divisor+3,w
  7705  16C1  022B               	subwf	___aomod@dividend+3,w
  7706  16C2  1D03               	skipz
  7707  16C3  2ECE               	goto	u4845
  7708  16C4  0822               	movf	___aomod@divisor+2,w
  7709  16C5  022A               	subwf	___aomod@dividend+2,w
  7710  16C6  1D03               	skipz
  7711  16C7  2ECE               	goto	u4845
  7712  16C8  0821               	movf	___aomod@divisor+1,w
  7713  16C9  0229               	subwf	___aomod@dividend+1,w
  7714  16CA  1D03               	skipz
  7715  16CB  2ECE               	goto	u4845
  7716  16CC  0820               	movf	___aomod@divisor,w
  7717  16CD  0228               	subwf	___aomod@dividend,w
  7718  16CE                     u4845:	
  7719  16CE  1C03               	skipc
  7720  16CF  2EE0               	goto	l4121
  7721  16D0  0820               	movf	___aomod@divisor,w
  7722  16D1  02A8               	subwf	___aomod@dividend,f
  7723  16D2  0821               	movf	___aomod@divisor+1,w
  7724  16D3  3BA9               	subwfb	___aomod@dividend+1,f
  7725  16D4  0822               	movf	___aomod@divisor+2,w
  7726  16D5  3BAA               	subwfb	___aomod@dividend+2,f
  7727  16D6  0823               	movf	___aomod@divisor+3,w
  7728  16D7  3BAB               	subwfb	___aomod@dividend+3,f
  7729  16D8  0824               	movf	___aomod@divisor+4,w
  7730  16D9  3BAC               	subwfb	___aomod@dividend+4,f
  7731  16DA  0825               	movf	___aomod@divisor+5,w
  7732  16DB  3BAD               	subwfb	___aomod@dividend+5,f
  7733  16DC  0826               	movf	___aomod@divisor+6,w
  7734  16DD  3BAE               	subwfb	___aomod@dividend+6,f
  7735  16DE  0827               	movf	___aomod@divisor+7,w
  7736  16DF  3BAF               	subwfb	___aomod@dividend+7,f
  7737  16E0                     l4121:	
  7738  16E0  36A7               	lsrf	___aomod@divisor+7,f
  7739  16E1  0CA6               	rrf	___aomod@divisor+6,f
  7740  16E2  0CA5               	rrf	___aomod@divisor+5,f
  7741  16E3  0CA4               	rrf	___aomod@divisor+4,f
  7742  16E4  0CA3               	rrf	___aomod@divisor+3,f
  7743  16E5  0CA2               	rrf	___aomod@divisor+2,f
  7744  16E6  0CA1               	rrf	___aomod@divisor+1,f
  7745  16E7  0CA0               	rrf	___aomod@divisor,f
  7746  16E8  3001               	movlw	1
  7747  16E9  02F2               	subwf	___aomod@counter,f
  7748  16EA  1D03               	btfss	3,2
  7749  16EB  2EB0               	goto	l4117
  7750  16EC                     l4123:	
  7751  16EC  0873               	movf	___aomod@sign,w
  7752  16ED  1903               	btfsc	3,2
  7753  16EE  2F0D               	goto	l761
  7754  16EF  09A8               	comf	___aomod@dividend,f
  7755  16F0  09A9               	comf	___aomod@dividend+1,f
  7756  16F1  09AA               	comf	___aomod@dividend+2,f
  7757  16F2  09AB               	comf	___aomod@dividend+3,f
  7758  16F3  09AC               	comf	___aomod@dividend+4,f
  7759  16F4  09AD               	comf	___aomod@dividend+5,f
  7760  16F5  09AE               	comf	___aomod@dividend+6,f
  7761  16F6  09AF               	comf	___aomod@dividend+7,f
  7762  16F7  0AA8               	incf	___aomod@dividend,f
  7763  16F8  1D03               	skipz
  7764  16F9  2F0D               	goto	l761
  7765  16FA  0AA9               	incf	___aomod@dividend+1,f
  7766  16FB  1D03               	skipz
  7767  16FC  2F0D               	goto	l761
  7768  16FD  0AAA               	incf	___aomod@dividend+2,f
  7769  16FE  1D03               	skipz
  7770  16FF  2F0D               	goto	l761
  7771  1700  0AAB               	incf	___aomod@dividend+3,f
  7772  1701  1D03               	skipz
  7773  1702  2F0D               	goto	l761
  7774  1703  0AAC               	incf	___aomod@dividend+4,f
  7775  1704  1D03               	skipz
  7776  1705  2F0D               	goto	l761
  7777  1706  0AAD               	incf	___aomod@dividend+5,f
  7778  1707  1D03               	skipz
  7779  1708  2F0D               	goto	l761
  7780  1709  0AAE               	incf	___aomod@dividend+6,f
  7781  170A  1D03               	skipz
  7782  170B  2F0D               	goto	l761
  7783  170C  0AAF               	incf	___aomod@dividend+7,f
  7784  170D                     l761:	
  7785  170D  0020               	movlb	0	; select bank0
  7786  170E  0828               	movf	___aomod@dividend,w
  7787  170F  00A0               	movwf	?___aomod
  7788  1710  0829               	movf	___aomod@dividend+1,w
  7789  1711  00A1               	movwf	?___aomod+1
  7790  1712  082A               	movf	___aomod@dividend+2,w
  7791  1713  00A2               	movwf	?___aomod+2
  7792  1714  082B               	movf	___aomod@dividend+3,w
  7793  1715  00A3               	movwf	?___aomod+3
  7794  1716  082C               	movf	___aomod@dividend+4,w
  7795  1717  00A4               	movwf	?___aomod+4
  7796  1718  082D               	movf	___aomod@dividend+5,w
  7797  1719  00A5               	movwf	?___aomod+5
  7798  171A  082E               	movf	___aomod@dividend+6,w
  7799  171B  00A6               	movwf	?___aomod+6
  7800  171C  082F               	movf	___aomod@dividend+7,w
  7801  171D  00A7               	movwf	?___aomod+7
  7802  171E  0008               	return
  7803  171F                     __end_of___aomod:	
  7804                           
  7805                           	psect	text20
  7806  05A0                     __ptext20:	
  7807 ;; *************** function ___aodiv *****************
  7808 ;; Defined at:
  7809 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aodiv.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  divisor         8    0[BANK0 ] long long 
  7812 ;;  dividend        8    8[BANK0 ] long long 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  quotient        8    4[COMMON] long long 
  7815 ;;  sign            1    3[COMMON] unsigned char 
  7816 ;;  counter         1    2[COMMON] unsigned char 
  7817 ;; Return value:  Size  Location     Type
  7818 ;;                  8    0[BANK0 ] long long 
  7819 ;; Registers used:
  7820 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7821 ;; Tracked objects:
  7822 ;;		On entry : 0/0
  7823 ;;		On exit  : 0/0
  7824 ;;		Unchanged: 0/0
  7825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7826 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7827 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7828 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7829 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7830 ;;Total ram usage:       27 bytes
  7831 ;; Hardware stack levels used:    1
  7832 ;; Hardware stack levels required when called:    1
  7833 ;; This function calls:
  7834 ;;		Nothing
  7835 ;; This function is called by:
  7836 ;;		_dtoa
  7837 ;; This function uses a non-reentrant model
  7838 ;;
  7839                           
  7840                           
  7841                           ;psect for function ___aodiv
  7842  05A0                     ___aodiv:	
  7843                           
  7844                           ;incstack = 0
  7845                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  7846  05A0  01F3               	clrf	___aodiv@sign
  7847  05A1  3020               	movlw	low ___aodiv@divisor
  7848  05A2  0086               	movwf	6
  7849  05A3  3000               	movlw	high ___aodiv@divisor
  7850  05A4  0087               	movwf	7
  7851  05A5  3F47               	moviw [7]fsr1
  7852  05A6  00F1               	movwf	??___aodiv
  7853  05A7  1FF1               	btfss	??___aodiv,7
  7854  05A8  2DCA               	goto	l4065
  7855  05A9  0020               	movlb	0	; select bank0
  7856  05AA  09A0               	comf	___aodiv@divisor,f
  7857  05AB  09A1               	comf	___aodiv@divisor+1,f
  7858  05AC  09A2               	comf	___aodiv@divisor+2,f
  7859  05AD  09A3               	comf	___aodiv@divisor+3,f
  7860  05AE  09A4               	comf	___aodiv@divisor+4,f
  7861  05AF  09A5               	comf	___aodiv@divisor+5,f
  7862  05B0  09A6               	comf	___aodiv@divisor+6,f
  7863  05B1  09A7               	comf	___aodiv@divisor+7,f
  7864  05B2  0AA0               	incf	___aodiv@divisor,f
  7865  05B3  1D03               	skipz
  7866  05B4  2DC8               	goto	u468lld
  7867  05B5  0AA1               	incf	___aodiv@divisor+1,f
  7868  05B6  1D03               	skipz
  7869  05B7  2DC8               	goto	u468lld
  7870  05B8  0AA2               	incf	___aodiv@divisor+2,f
  7871  05B9  1D03               	skipz
  7872  05BA  2DC8               	goto	u468lld
  7873  05BB  0AA3               	incf	___aodiv@divisor+3,f
  7874  05BC  1D03               	skipz
  7875  05BD  2DC8               	goto	u468lld
  7876  05BE  0AA4               	incf	___aodiv@divisor+4,f
  7877  05BF  1D03               	skipz
  7878  05C0  2DC8               	goto	u468lld
  7879  05C1  0AA5               	incf	___aodiv@divisor+5,f
  7880  05C2  1D03               	skipz
  7881  05C3  2DC8               	goto	u468lld
  7882  05C4  0AA6               	incf	___aodiv@divisor+6,f
  7883  05C5  1D03               	skipz
  7884  05C6  2DC8               	goto	u468lld
  7885  05C7  0AA7               	incf	___aodiv@divisor+7,f
  7886  05C8                     u468lld:	
  7887  05C8  01F3               	clrf	___aodiv@sign
  7888  05C9  0AF3               	incf	___aodiv@sign,f
  7889  05CA                     l4065:	
  7890  05CA  3028               	movlw	low ___aodiv@dividend
  7891  05CB  0086               	movwf	6
  7892  05CC  3000               	movlw	high ___aodiv@dividend
  7893  05CD  0087               	movwf	7
  7894  05CE  3F47               	moviw [7]fsr1
  7895  05CF  00F1               	movwf	??___aodiv
  7896  05D0  1FF1               	btfss	??___aodiv,7
  7897  05D1  2DF5               	goto	l4071
  7898  05D2  0020               	movlb	0	; select bank0
  7899  05D3  09A8               	comf	___aodiv@dividend,f
  7900  05D4  09A9               	comf	___aodiv@dividend+1,f
  7901  05D5  09AA               	comf	___aodiv@dividend+2,f
  7902  05D6  09AB               	comf	___aodiv@dividend+3,f
  7903  05D7  09AC               	comf	___aodiv@dividend+4,f
  7904  05D8  09AD               	comf	___aodiv@dividend+5,f
  7905  05D9  09AE               	comf	___aodiv@dividend+6,f
  7906  05DA  09AF               	comf	___aodiv@dividend+7,f
  7907  05DB  0AA8               	incf	___aodiv@dividend,f
  7908  05DC  1D03               	skipz
  7909  05DD  2DF1               	goto	l4069
  7910  05DE  0AA9               	incf	___aodiv@dividend+1,f
  7911  05DF  1D03               	skipz
  7912  05E0  2DF1               	goto	l4069
  7913  05E1  0AAA               	incf	___aodiv@dividend+2,f
  7914  05E2  1D03               	skipz
  7915  05E3  2DF1               	goto	l4069
  7916  05E4  0AAB               	incf	___aodiv@dividend+3,f
  7917  05E5  1D03               	skipz
  7918  05E6  2DF1               	goto	l4069
  7919  05E7  0AAC               	incf	___aodiv@dividend+4,f
  7920  05E8  1D03               	skipz
  7921  05E9  2DF1               	goto	l4069
  7922  05EA  0AAD               	incf	___aodiv@dividend+5,f
  7923  05EB  1D03               	skipz
  7924  05EC  2DF1               	goto	l4069
  7925  05ED  0AAE               	incf	___aodiv@dividend+6,f
  7926  05EE  1D03               	skipz
  7927  05EF  2DF1               	goto	l4069
  7928  05F0  0AAF               	incf	___aodiv@dividend+7,f
  7929  05F1                     l4069:	
  7930  05F1  3001               	movlw	1
  7931  05F2  00F1               	movwf	??___aodiv
  7932  05F3  0871               	movf	??___aodiv,w
  7933  05F4  06F3               	xorwf	___aodiv@sign,f
  7934  05F5                     l4071:	
  7935  05F5  3074               	movlw	low ___aodiv@quotient
  7936  05F6  0086               	movwf	6
  7937  05F7  3000               	movlw	high ___aodiv@quotient
  7938  05F8  0087               	movwf	7
  7939  05F9  3008               	movlw	8
  7940  05FA  00F1               	movwf	??___aodiv
  7941  05FB  3000               	movlw	0
  7942  05FC                     u4710:	
  7943  05FC  001E               	movwi fsr1++
  7944  05FD  0BF1               	decfsz	??___aodiv,f
  7945  05FE  2DFC               	goto	u4710
  7946  05FF  0020               	movlb	0	; select bank0
  7947  0600  0820               	movf	___aodiv@divisor,w
  7948  0601  0421               	iorwf	___aodiv@divisor+1,w
  7949  0602  0422               	iorwf	___aodiv@divisor+2,w
  7950  0603  0423               	iorwf	___aodiv@divisor+3,w
  7951  0604  0424               	iorwf	___aodiv@divisor+4,w
  7952  0605  0425               	iorwf	___aodiv@divisor+5,w
  7953  0606  0426               	iorwf	___aodiv@divisor+6,w
  7954  0607  0427               	iorwf	___aodiv@divisor+7,w
  7955  0608  1903               	skipnz
  7956  0609  2E60               	goto	l4093
  7957  060A  01F2               	clrf	___aodiv@counter
  7958  060B  0AF2               	incf	___aodiv@counter,f
  7959  060C                     l4081:	
  7960  060C  1BA7               	btfsc	___aodiv@divisor+7,7
  7961  060D  2E1B               	goto	l4083
  7962  060E  35A0               	lslf	___aodiv@divisor,f
  7963  060F  0DA1               	rlf	___aodiv@divisor+1,f
  7964  0610  0DA2               	rlf	___aodiv@divisor+2,f
  7965  0611  0DA3               	rlf	___aodiv@divisor+3,f
  7966  0612  0DA4               	rlf	___aodiv@divisor+4,f
  7967  0613  0DA5               	rlf	___aodiv@divisor+5,f
  7968  0614  0DA6               	rlf	___aodiv@divisor+6,f
  7969  0615  0DA7               	rlf	___aodiv@divisor+7,f
  7970  0616  3001               	movlw	1
  7971  0617  00F1               	movwf	??___aodiv
  7972  0618  0871               	movf	??___aodiv,w
  7973  0619  07F2               	addwf	___aodiv@counter,f
  7974  061A  2E0C               	goto	l4081
  7975  061B                     l4083:	
  7976  061B  35F4               	lslf	___aodiv@quotient,f
  7977  061C  0DF5               	rlf	___aodiv@quotient+1,f
  7978  061D  0DF6               	rlf	___aodiv@quotient+2,f
  7979  061E  0DF7               	rlf	___aodiv@quotient+3,f
  7980  061F  0DF8               	rlf	___aodiv@quotient+4,f
  7981  0620  0DF9               	rlf	___aodiv@quotient+5,f
  7982  0621  0DFA               	rlf	___aodiv@quotient+6,f
  7983  0622  0DFB               	rlf	___aodiv@quotient+7,f
  7984  0623  0827               	movf	___aodiv@divisor+7,w
  7985  0624  022F               	subwf	___aodiv@dividend+7,w
  7986  0625  1D03               	skipz
  7987  0626  2E41               	goto	u4745
  7988  0627  0826               	movf	___aodiv@divisor+6,w
  7989  0628  022E               	subwf	___aodiv@dividend+6,w
  7990  0629  1D03               	skipz
  7991  062A  2E41               	goto	u4745
  7992  062B  0825               	movf	___aodiv@divisor+5,w
  7993  062C  022D               	subwf	___aodiv@dividend+5,w
  7994  062D  1D03               	skipz
  7995  062E  2E41               	goto	u4745
  7996  062F  0824               	movf	___aodiv@divisor+4,w
  7997  0630  022C               	subwf	___aodiv@dividend+4,w
  7998  0631  1D03               	skipz
  7999  0632  2E41               	goto	u4745
  8000  0633  0823               	movf	___aodiv@divisor+3,w
  8001  0634  022B               	subwf	___aodiv@dividend+3,w
  8002  0635  1D03               	skipz
  8003  0636  2E41               	goto	u4745
  8004  0637  0822               	movf	___aodiv@divisor+2,w
  8005  0638  022A               	subwf	___aodiv@dividend+2,w
  8006  0639  1D03               	skipz
  8007  063A  2E41               	goto	u4745
  8008  063B  0821               	movf	___aodiv@divisor+1,w
  8009  063C  0229               	subwf	___aodiv@dividend+1,w
  8010  063D  1D03               	skipz
  8011  063E  2E41               	goto	u4745
  8012  063F  0820               	movf	___aodiv@divisor,w
  8013  0640  0228               	subwf	___aodiv@dividend,w
  8014  0641                     u4745:	
  8015  0641  1C03               	skipc
  8016  0642  2E54               	goto	l4091
  8017  0643  0820               	movf	___aodiv@divisor,w
  8018  0644  02A8               	subwf	___aodiv@dividend,f
  8019  0645  0821               	movf	___aodiv@divisor+1,w
  8020  0646  3BA9               	subwfb	___aodiv@dividend+1,f
  8021  0647  0822               	movf	___aodiv@divisor+2,w
  8022  0648  3BAA               	subwfb	___aodiv@dividend+2,f
  8023  0649  0823               	movf	___aodiv@divisor+3,w
  8024  064A  3BAB               	subwfb	___aodiv@dividend+3,f
  8025  064B  0824               	movf	___aodiv@divisor+4,w
  8026  064C  3BAC               	subwfb	___aodiv@dividend+4,f
  8027  064D  0825               	movf	___aodiv@divisor+5,w
  8028  064E  3BAD               	subwfb	___aodiv@dividend+5,f
  8029  064F  0826               	movf	___aodiv@divisor+6,w
  8030  0650  3BAE               	subwfb	___aodiv@dividend+6,f
  8031  0651  0827               	movf	___aodiv@divisor+7,w
  8032  0652  3BAF               	subwfb	___aodiv@dividend+7,f
  8033  0653  1474               	bsf	___aodiv@quotient,0
  8034  0654                     l4091:	
  8035  0654  36A7               	lsrf	___aodiv@divisor+7,f
  8036  0655  0CA6               	rrf	___aodiv@divisor+6,f
  8037  0656  0CA5               	rrf	___aodiv@divisor+5,f
  8038  0657  0CA4               	rrf	___aodiv@divisor+4,f
  8039  0658  0CA3               	rrf	___aodiv@divisor+3,f
  8040  0659  0CA2               	rrf	___aodiv@divisor+2,f
  8041  065A  0CA1               	rrf	___aodiv@divisor+1,f
  8042  065B  0CA0               	rrf	___aodiv@divisor,f
  8043  065C  3001               	movlw	1
  8044  065D  02F2               	subwf	___aodiv@counter,f
  8045  065E  1D03               	btfss	3,2
  8046  065F  2E1B               	goto	l4083
  8047  0660                     l4093:	
  8048  0660  0873               	movf	___aodiv@sign,w
  8049  0661  1903               	btfsc	3,2
  8050  0662  2E81               	goto	l748
  8051  0663  09F4               	comf	___aodiv@quotient,f
  8052  0664  09F5               	comf	___aodiv@quotient+1,f
  8053  0665  09F6               	comf	___aodiv@quotient+2,f
  8054  0666  09F7               	comf	___aodiv@quotient+3,f
  8055  0667  09F8               	comf	___aodiv@quotient+4,f
  8056  0668  09F9               	comf	___aodiv@quotient+5,f
  8057  0669  09FA               	comf	___aodiv@quotient+6,f
  8058  066A  09FB               	comf	___aodiv@quotient+7,f
  8059  066B  0AF4               	incf	___aodiv@quotient,f
  8060  066C  1D03               	skipz
  8061  066D  2E81               	goto	l748
  8062  066E  0AF5               	incf	___aodiv@quotient+1,f
  8063  066F  1D03               	skipz
  8064  0670  2E81               	goto	l748
  8065  0671  0AF6               	incf	___aodiv@quotient+2,f
  8066  0672  1D03               	skipz
  8067  0673  2E81               	goto	l748
  8068  0674  0AF7               	incf	___aodiv@quotient+3,f
  8069  0675  1D03               	skipz
  8070  0676  2E81               	goto	l748
  8071  0677  0AF8               	incf	___aodiv@quotient+4,f
  8072  0678  1D03               	skipz
  8073  0679  2E81               	goto	l748
  8074  067A  0AF9               	incf	___aodiv@quotient+5,f
  8075  067B  1D03               	skipz
  8076  067C  2E81               	goto	l748
  8077  067D  0AFA               	incf	___aodiv@quotient+6,f
  8078  067E  1D03               	skipz
  8079  067F  2E81               	goto	l748
  8080  0680  0AFB               	incf	___aodiv@quotient+7,f
  8081  0681                     l748:	
  8082  0681  0874               	movf	___aodiv@quotient,w
  8083  0682  0020               	movlb	0	; select bank0
  8084  0683  00A0               	movwf	?___aodiv
  8085  0684  0875               	movf	___aodiv@quotient+1,w
  8086  0685  00A1               	movwf	?___aodiv+1
  8087  0686  0876               	movf	___aodiv@quotient+2,w
  8088  0687  00A2               	movwf	?___aodiv+2
  8089  0688  0877               	movf	___aodiv@quotient+3,w
  8090  0689  00A3               	movwf	?___aodiv+3
  8091  068A  0878               	movf	___aodiv@quotient+4,w
  8092  068B  00A4               	movwf	?___aodiv+4
  8093  068C  0879               	movf	___aodiv@quotient+5,w
  8094  068D  00A5               	movwf	?___aodiv+5
  8095  068E  087A               	movf	___aodiv@quotient+6,w
  8096  068F  00A6               	movwf	?___aodiv+6
  8097  0690  087B               	movf	___aodiv@quotient+7,w
  8098  0691  00A7               	movwf	?___aodiv+7
  8099  0692  0008               	return
  8100  0693                     __end_of___aodiv:	
  8101                           
  8102                           	psect	text21
  8103  1FCF                     __ptext21:	
  8104 ;; *************** function _ctoa *****************
  8105 ;; Defined at:
  8106 ;;		line 259 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8107 ;; Parameters:    Size  Location     Type
  8108 ;;  fp              2   16[BANK0 ] PTR struct _IO_FILE
  8109 ;;		 -> vsnprintf@f(6), 
  8110 ;;  c               1   18[BANK0 ] unsigned char 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  w               2   20[BANK0 ] int 
  8113 ;;  l               2    0        int 
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  2   16[BANK0 ] int 
  8116 ;; Registers used:
  8117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8123 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8124 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8125 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8126 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8127 ;;Total ram usage:        6 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    5
  8130 ;; This function calls:
  8131 ;;		_pad
  8132 ;; This function is called by:
  8133 ;;		_vfpfcnvrt
  8134 ;; This function uses a non-reentrant model
  8135 ;;
  8136                           
  8137                           
  8138                           ;psect for function _ctoa
  8139  1FCF                     _ctoa:	
  8140                           
  8141                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 259: static
      +                           int ctoa(FILE *fp, char c);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\c
      +                          ommon\doprnt.c: 260: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common
      +                          \doprnt.c: 261:     int l, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 264:     w = width ? width - 1 : width;
  8142                           
  8143                           ;incstack = 0
  8144                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8145  1FCF  0021               	movlb	1	; select bank1
  8146  1FD0  085E               	movf	_width^(0+128),w
  8147  1FD1  045F               	iorwf	(_width+1)^(0+128),w
  8148  1FD2  1D03               	btfss	3,2
  8149  1FD3  2FDC               	goto	l4181
  8150  1FD4  085F               	movf	(_width+1)^(0+128),w
  8151  1FD5  0020               	movlb	0	; select bank0
  8152  1FD6  00B5               	movwf	ctoa@w+1
  8153  1FD7  0021               	movlb	1	; select bank1
  8154  1FD8  085E               	movf	_width^(0+128),w
  8155  1FD9  0020               	movlb	0	; select bank0
  8156  1FDA  00B4               	movwf	ctoa@w
  8157  1FDB  2FE5               	goto	l4183
  8158  1FDC                     l4181:	
  8159  1FDC  085E               	movf	_width^(0+128),w
  8160  1FDD  3EFF               	addlw	255
  8161  1FDE  0020               	movlb	0	; select bank0
  8162  1FDF  00B4               	movwf	ctoa@w
  8163  1FE0  30FF               	movlw	255
  8164  1FE1  0021               	movlb	1	; select bank1
  8165  1FE2  3D5F               	addwfc	(_width+1)^(0+128),w
  8166  1FE3  0020               	movlb	0	; select bank0
  8167  1FE4  00B5               	movwf	ctoa@w+1
  8168  1FE5                     l4183:	
  8169                           
  8170                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 267:     db
      +                          uf[0] = c;
  8171  1FE5  0832               	movf	ctoa@c,w
  8172  1FE6  00B3               	movwf	??_ctoa
  8173  1FE7  0833               	movf	??_ctoa,w
  8174  1FE8  0022               	movlb	2	; select bank2
  8175  1FE9  00AA               	movwf	_dbuf^(0+256)
  8176                           
  8177                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 268:     db
      +                          uf[1] = '\0';
  8178  1FEA  01AB               	clrf	(_dbuf^(0+256)+1)
  8179                           
  8180                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 269:     re
      +                          turn pad(fp, &dbuf[0], w);
  8181  1FEB  0020               	movlb	0	; select bank0
  8182  1FEC  0831               	movf	ctoa@fp+1,w
  8183  1FED  00A7               	movwf	pad@fp+1
  8184  1FEE  0830               	movf	ctoa@fp,w
  8185  1FEF  00A6               	movwf	pad@fp
  8186  1FF0  302A               	movlw	(low (_dbuf| (0+256)))& (0+255)
  8187  1FF1  00B3               	movwf	??_ctoa
  8188  1FF2  0833               	movf	??_ctoa,w
  8189  1FF3  00A8               	movwf	pad@buf
  8190  1FF4  0835               	movf	ctoa@w+1,w
  8191  1FF5  00AA               	movwf	pad@p+1
  8192  1FF6  0834               	movf	ctoa@w,w
  8193  1FF7  00A9               	movwf	pad@p
  8194  1FF8  3190  208A         	fcall	_pad
  8195  1FFA  0020               	movlb	0	; select bank0
  8196  1FFB  0827               	movf	?_pad+1,w
  8197  1FFC  00B1               	movwf	?_ctoa+1
  8198  1FFD  0826               	movf	?_pad,w
  8199  1FFE  00B0               	movwf	?_ctoa
  8200  1FFF  0008               	return
  8201  2000                     __end_of_ctoa:	
  8202                           
  8203                           	psect	text22
  8204  108A                     __ptext22:	
  8205 ;; *************** function _pad *****************
  8206 ;; Defined at:
  8207 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;  fp              2    6[BANK0 ] PTR struct _IO_FILE
  8210 ;;		 -> vsnprintf@f(6), 
  8211 ;;  buf             1    8[BANK0 ] PTR unsigned char 
  8212 ;;		 -> dbuf(32), 
  8213 ;;  p               2    9[BANK0 ] int 
  8214 ;; Auto vars:     Size  Location     Type
  8215 ;;  w               2   14[BANK0 ] int 
  8216 ;;  i               2   12[BANK0 ] int 
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  2    6[BANK0 ] int 
  8219 ;; Registers used:
  8220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8226 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8227 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8228 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8229 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8230 ;;Total ram usage:       10 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; Hardware stack levels required when called:    4
  8233 ;; This function calls:
  8234 ;;		_fputc
  8235 ;;		_fputs
  8236 ;;		_strlen
  8237 ;; This function is called by:
  8238 ;;		_ctoa
  8239 ;;		_dtoa
  8240 ;;		_otoa
  8241 ;;		_utoa
  8242 ;;		_xtoa
  8243 ;; This function uses a non-reentrant model
  8244 ;;
  8245                           
  8246                           
  8247                           ;psect for function _pad
  8248  108A                     _pad:	
  8249                           
  8250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  8251                           
  8252                           ;incstack = 0
  8253                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8254  108A  0021               	movlb	1	; select bank1
  8255  108B  1C62               	btfss	_flags^(0+128),0
  8256  108C  2896               	goto	l4001
  8257                           
  8258                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  8259  108D  0020               	movlb	0	; select bank0
  8260  108E  0827               	movf	pad@fp+1,w
  8261  108F  00FB               	movwf	fputs@fp+1
  8262  1090  0826               	movf	pad@fp,w
  8263  1091  00FA               	movwf	fputs@fp
  8264  1092  0828               	movf	pad@buf,w
  8265  1093  319F  2781  3190   	fcall	_fputs
  8266  1096                     l4001:	
  8267                           
  8268                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  8269  1096  0020               	movlb	0	; select bank0
  8270  1097  1BAA               	btfsc	pad@p+1,7
  8271  1098  289E               	goto	l4005
  8272  1099  082A               	movf	pad@p+1,w
  8273  109A  00AF               	movwf	pad@w+1
  8274  109B  0829               	movf	pad@p,w
  8275  109C  00AE               	movwf	pad@w
  8276  109D  28A0               	goto	l440
  8277  109E                     l4005:	
  8278  109E  01AE               	clrf	pad@w
  8279  109F  01AF               	clrf	pad@w+1
  8280  10A0                     l440:	
  8281                           
  8282                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  8283  10A0  01AC               	clrf	pad@i
  8284  10A1  01AD               	clrf	pad@i+1
  8285  10A2                     l4011:	
  8286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8287                           
  8288                           
  8289                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  8290  10A2  082D               	movf	pad@i+1,w
  8291  10A3  3A80               	xorlw	128
  8292  10A4  00AB               	movwf	??_pad
  8293  10A5  082F               	movf	pad@w+1,w
  8294  10A6  3A80               	xorlw	128
  8295  10A7  022B               	subwf	??_pad,w
  8296  10A8  1D03               	skipz
  8297  10A9  28AC               	goto	u4515
  8298  10AA  082E               	movf	pad@w,w
  8299  10AB  022C               	subwf	pad@i,w
  8300  10AC                     u4515:	
  8301  10AC  1803               	btfsc	3,0
  8302  10AD  28C0               	goto	l443
  8303                           
  8304                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  8305  10AE  3020               	movlw	32
  8306  10AF  00F1               	movwf	fputc@c
  8307  10B0  3000               	movlw	0
  8308  10B1  00F2               	movwf	fputc@c+1
  8309  10B2  0020               	movlb	0	; select bank0
  8310  10B3  0827               	movf	pad@fp+1,w
  8311  10B4  00F4               	movwf	fputc@fp+1
  8312  10B5  0826               	movf	pad@fp,w
  8313  10B6  00F3               	movwf	fputc@fp
  8314  10B7  3191  212D  3190   	fcall	_fputc
  8315                           
  8316                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  8317  10BA  3001               	movlw	1
  8318  10BB  0020               	movlb	0	; select bank0
  8319  10BC  07AC               	addwf	pad@i,f
  8320  10BD  3000               	movlw	0
  8321  10BE  3DAD               	addwfc	pad@i+1,f
  8322  10BF  28A2               	goto	l4011
  8323  10C0                     l443:	
  8324                           
  8325                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  8326  10C0  0021               	movlb	1	; select bank1
  8327  10C1  1862               	btfsc	_flags^(0+128),0
  8328  10C2  28CC               	goto	l4015
  8329                           
  8330                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  8331  10C3  0020               	movlb	0	; select bank0
  8332  10C4  0827               	movf	pad@fp+1,w
  8333  10C5  00FB               	movwf	fputs@fp+1
  8334  10C6  0826               	movf	pad@fp,w
  8335  10C7  00FA               	movwf	fputs@fp
  8336  10C8  0828               	movf	pad@buf,w
  8337  10C9  319F  2781  3190   	fcall	_fputs
  8338  10CC                     l4015:	
  8339                           
  8340                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  8341  10CC  0020               	movlb	0	; select bank0
  8342  10CD  0828               	movf	pad@buf,w
  8343  10CE  00F1               	movwf	strlen@s
  8344  10CF  3001               	movlw	1
  8345  10D0  00F2               	movwf	strlen@s+1
  8346  10D1  319E  2635         	fcall	_strlen
  8347  10D3  0020               	movlb	0	; select bank0
  8348  10D4  082E               	movf	pad@w,w
  8349  10D5  0771               	addwf	?_strlen,w
  8350  10D6  00A6               	movwf	?_pad
  8351  10D7  082F               	movf	pad@w+1,w
  8352  10D8  3D72               	addwfc	?_strlen+1,w
  8353  10D9  00A7               	movwf	?_pad+1
  8354  10DA  0008               	return
  8355  10DB                     __end_of_pad:	
  8356                           
  8357                           	psect	text23
  8358  1E35                     __ptext23:	
  8359 ;; *************** function _strlen *****************
  8360 ;; Defined at:
  8361 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\strlen.c"
  8362 ;; Parameters:    Size  Location     Type
  8363 ;;  s               2    1[COMMON] PTR const unsigned char 
  8364 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), 
  8365 ;; Auto vars:     Size  Location     Type
  8366 ;;  a               2    3[COMMON] PTR const unsigned char 
  8367 ;;		 -> ?_snprintf(2), stoa@nuls(7), dbuf(32), 
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  2    1[COMMON] unsigned int 
  8370 ;; Registers used:
  8371 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8381 ;;Total ram usage:        4 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:    1
  8384 ;; This function calls:
  8385 ;;		Nothing
  8386 ;; This function is called by:
  8387 ;;		_pad
  8388 ;;		_stoa
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           
  8393                           ;psect for function _strlen
  8394  1E35                     _strlen:	
  8395                           
  8396                           ;incstack = 0
  8397                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8398  1E35  0872               	movf	strlen@s+1,w
  8399  1E36  00F4               	movwf	strlen@a+1
  8400  1E37  0871               	movf	strlen@s,w
  8401  1E38  00F3               	movwf	strlen@a
  8402  1E39                     l3987:	
  8403  1E39  0871               	movf	strlen@s,w
  8404  1E3A  0086               	movwf	6
  8405  1E3B  0872               	movf	strlen@s+1,w
  8406  1E3C  0087               	movwf	7
  8407  1E3D  0801               	movf	1,w
  8408  1E3E  1903               	btfsc	3,2
  8409  1E3F  2E45               	goto	l3989
  8410  1E40  3001               	movlw	1
  8411  1E41  07F1               	addwf	strlen@s,f
  8412  1E42  3000               	movlw	0
  8413  1E43  3DF2               	addwfc	strlen@s+1,f
  8414  1E44  2E39               	goto	l3987
  8415  1E45                     l3989:	
  8416  1E45  0873               	movf	strlen@a,w
  8417  1E46  0271               	subwf	strlen@s,w
  8418  1E47  00F1               	movwf	?_strlen
  8419  1E48  0874               	movf	strlen@a+1,w
  8420  1E49  3B72               	subwfb	strlen@s+1,w
  8421  1E4A  00F2               	movwf	?_strlen+1
  8422  1E4B  0008               	return
  8423  1E4C                     __end_of_strlen:	
  8424                           
  8425                           	psect	text24
  8426  1F81                     __ptext24:	
  8427 ;; *************** function _fputs *****************
  8428 ;; Defined at:
  8429 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputs.c"
  8430 ;; Parameters:    Size  Location     Type
  8431 ;;  s               1    wreg     PTR const unsigned char 
  8432 ;;		 -> dbuf(32), 
  8433 ;;  fp              2   10[COMMON] PTR struct _IO_FILE
  8434 ;;		 -> vsnprintf@f(6), 
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  8437 ;;		 -> dbuf(32), 
  8438 ;;  i               2    3[BANK0 ] int 
  8439 ;;  c               1    2[BANK0 ] unsigned char 
  8440 ;; Return value:  Size  Location     Type
  8441 ;;                  2   10[COMMON] int 
  8442 ;; Registers used:
  8443 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8444 ;; Tracked objects:
  8445 ;;		On entry : 0/0
  8446 ;;		On exit  : 0/0
  8447 ;;		Unchanged: 0/0
  8448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8450 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8451 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8452 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8453 ;;Total ram usage:        8 bytes
  8454 ;; Hardware stack levels used:    1
  8455 ;; Hardware stack levels required when called:    3
  8456 ;; This function calls:
  8457 ;;		_fputc
  8458 ;; This function is called by:
  8459 ;;		_pad
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           
  8464                           ;psect for function _fputs
  8465  1F81                     _fputs:	
  8466                           
  8467                           ;incstack = 0
  8468                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8469                           ;fputs@s stored from wreg
  8470  1F81  0020               	movlb	0	; select bank0
  8471  1F82  00A5               	movwf	fputs@s
  8472  1F83  01A3               	clrf	fputs@i
  8473  1F84  01A4               	clrf	fputs@i+1
  8474  1F85                     l3981:	
  8475  1F85  0823               	movf	fputs@i,w
  8476  1F86  0725               	addwf	fputs@s,w
  8477  1F87  00A0               	movwf	??_fputs
  8478  1F88  0820               	movf	??_fputs,w
  8479  1F89  0086               	movwf	6
  8480  1F8A  3001               	movlw	1	; select bank2/3
  8481  1F8B  0087               	movwf	7
  8482  1F8C  0801               	movf	1,w
  8483  1F8D  00A1               	movwf	??_fputs+1
  8484  1F8E  0821               	movf	??_fputs+1,w
  8485  1F8F  00A2               	movwf	fputs@c
  8486  1F90  0822               	movf	fputs@c,w
  8487  1F91  1903               	btfsc	3,2
  8488  1F92  0008               	return
  8489  1F93  0822               	movf	fputs@c,w
  8490  1F94  00A0               	movwf	??_fputs
  8491  1F95  01A1               	clrf	??_fputs+1
  8492  1F96  0820               	movf	??_fputs,w
  8493  1F97  00F1               	movwf	fputc@c
  8494  1F98  0821               	movf	??_fputs+1,w
  8495  1F99  00F2               	movwf	fputc@c+1
  8496  1F9A  087B               	movf	fputs@fp+1,w
  8497  1F9B  00F4               	movwf	fputc@fp+1
  8498  1F9C  087A               	movf	fputs@fp,w
  8499  1F9D  00F3               	movwf	fputc@fp
  8500  1F9E  3191  212D  319F   	fcall	_fputc
  8501  1FA1  3001               	movlw	1
  8502  1FA2  0020               	movlb	0	; select bank0
  8503  1FA3  07A3               	addwf	fputs@i,f
  8504  1FA4  3000               	movlw	0
  8505  1FA5  3DA4               	addwfc	fputs@i+1,f
  8506  1FA6  2F85               	goto	l3981
  8507  1FA7                     __end_of_fputs:	
  8508                           
  8509                           	psect	text25
  8510  112D                     __ptext25:	
  8511 ;; *************** function _fputc *****************
  8512 ;; Defined at:
  8513 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\nf_fputc.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  c               2    1[COMMON] int 
  8516 ;;  fp              2    3[COMMON] PTR struct _IO_FILE
  8517 ;;		 -> vsnprintf@f(6), 
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;		None
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  2    1[COMMON] int 
  8522 ;; Registers used:
  8523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : 0/0
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8531 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8532 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8533 ;;Total ram usage:        9 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:    2
  8536 ;; This function calls:
  8537 ;;		_putch
  8538 ;; This function is called by:
  8539 ;;		_pad
  8540 ;;		_stoa
  8541 ;;		_vfpfcnvrt
  8542 ;;		_fputs
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           
  8547                           ;psect for function _fputc
  8548  112D                     _fputc:	
  8549                           
  8550                           ;incstack = 0
  8551                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8552  112D  0873               	movf	fputc@fp,w
  8553  112E  0474               	iorwf	fputc@fp+1,w
  8554  112F  1903               	btfsc	3,2
  8555  1130  2935               	goto	l3963
  8556  1131  0873               	movf	fputc@fp,w
  8557  1132  0474               	iorwf	fputc@fp+1,w
  8558  1133  1D03               	btfss	3,2
  8559  1134  2939               	goto	l3965
  8560  1135                     l3963:	
  8561  1135  0871               	movf	fputc@c,w
  8562  1136  3180  2003         	fcall	_putch
  8563  1138  0008               	return
  8564  1139                     l3965:	
  8565  1139  0873               	movf	fputc@fp,w
  8566  113A  0086               	movwf	6
  8567  113B  0874               	movf	fputc@fp+1,w
  8568  113C  0087               	movwf	7
  8569  113D  3144               	addfsr 1,4
  8570  113E  0016               	moviw fsr1++
  8571  113F  0401               	iorwf	1,w
  8572  1140  1903               	btfsc	3,2
  8573  1141  2960               	goto	l3969
  8574  1142  0873               	movf	fputc@fp,w
  8575  1143  0086               	movwf	6
  8576  1144  0874               	movf	fputc@fp+1,w
  8577  1145  0087               	movwf	7
  8578  1146  3144               	addfsr 1,4
  8579  1147  3F40               	moviw [0]fsr1
  8580  1148  00F5               	movwf	??_fputc
  8581  1149  3F41               	moviw [1]fsr1
  8582  114A  00F6               	movwf	??_fputc+1
  8583  114B  0873               	movf	fputc@fp,w
  8584  114C  0086               	movwf	6
  8585  114D  0874               	movf	fputc@fp+1,w
  8586  114E  0087               	movwf	7
  8587  114F  3142               	addfsr 1,2
  8588  1150  3F40               	moviw [0]fsr1
  8589  1151  00F7               	movwf	??_fputc+2
  8590  1152  3F41               	moviw [1]fsr1
  8591  1153  00F8               	movwf	??_fputc+3
  8592  1154  0878               	movf	??_fputc+3,w
  8593  1155  3A80               	xorlw	128
  8594  1156  00F9               	movwf	??_fputc+4
  8595  1157  0876               	movf	??_fputc+1,w
  8596  1158  3A80               	xorlw	128
  8597  1159  0279               	subwf	??_fputc+4,w
  8598  115A  1D03               	skipz
  8599  115B  295E               	goto	u4445
  8600  115C  0875               	movf	??_fputc,w
  8601  115D  0277               	subwf	??_fputc+2,w
  8602  115E                     u4445:	
  8603  115E  1803               	skipnc
  8604  115F  0008               	return
  8605  1160                     l3969:	
  8606  1160  0873               	movf	fputc@fp,w
  8607  1161  0086               	movwf	6
  8608  1162  0874               	movf	fputc@fp+1,w
  8609  1163  0087               	movwf	7
  8610  1164  3142               	addfsr 1,2
  8611  1165  0873               	movf	fputc@fp,w
  8612  1166  0084               	movwf	4
  8613  1167  0874               	movf	fputc@fp+1,w
  8614  1168  0085               	movwf	5
  8615  1169  3F40               	moviw [0]fsr1
  8616  116A  0700               	addwf	0,w
  8617  116B  00F5               	movwf	??_fputc
  8618  116C  3101               	addfsr 0,1
  8619  116D  3F41               	moviw [1]fsr1
  8620  116E  3D00               	addwfc	0,w
  8621  116F  00F6               	movwf	??_fputc+1
  8622  1170  0875               	movf	??_fputc,w
  8623  1171  0086               	movwf	6
  8624  1172  0876               	movf	??_fputc+1,w
  8625  1173  0087               	movwf	7
  8626  1174  0871               	movf	fputc@c,w
  8627  1175  0081               	movwf	1
  8628  1176  0873               	movf	fputc@fp,w
  8629  1177  0086               	movwf	6
  8630  1178  0874               	movf	fputc@fp+1,w
  8631  1179  0087               	movwf	7
  8632  117A  3142               	addfsr 1,2
  8633  117B  3001               	movlw	1
  8634  117C  0781               	addwf	1,f
  8635  117D  3141               	addfsr 1,1
  8636  117E  1803               	skipnc
  8637  117F  0A81               	incf	1,f
  8638  1180  0008               	return
  8639  1181                     __end_of_fputc:	
  8640                           
  8641                           	psect	text26
  8642  0003                     __ptext26:	
  8643 ;; *************** function _putch *****************
  8644 ;; Defined at:
  8645 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\putch.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  c               1    wreg     unsigned char 
  8648 ;; Auto vars:     Size  Location     Type
  8649 ;;  c               1    0[COMMON] unsigned char 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  1    wreg      void 
  8652 ;; Registers used:
  8653 ;;		wreg
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8663 ;;Total ram usage:        0 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:    1
  8666 ;; This function calls:
  8667 ;;		Nothing
  8668 ;; This function is called by:
  8669 ;;		_fputc
  8670 ;; This function uses a non-reentrant model
  8671 ;;
  8672                           
  8673                           
  8674                           ;psect for function _putch
  8675  0003                     _putch:	
  8676                           
  8677                           ;incstack = 0
  8678                           ; Regs used in _putch: [wreg]
  8679  0003  0008               	return
  8680  0004                     __end_of_putch:	
  8681                           
  8682                           	psect	text27
  8683  1383                     __ptext27:	
  8684 ;; *************** function _atoi *****************
  8685 ;; Defined at:
  8686 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\atoi.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;  s               2    7[COMMON] PTR const unsigned char 
  8689 ;;		 -> STR_3(43), 
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  n               2   11[BANK0 ] int 
  8692 ;;  neg             2    4[BANK0 ] int 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  2    7[COMMON] int 
  8695 ;; Registers used:
  8696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8703 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8704 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8705 ;;      Totals:         2      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8706 ;;Total ram usage:       15 bytes
  8707 ;; Hardware stack levels used:    1
  8708 ;; Hardware stack levels required when called:    2
  8709 ;; This function calls:
  8710 ;;		___wmul
  8711 ;;		_isdigit
  8712 ;;		_isspace
  8713 ;; This function is called by:
  8714 ;;		_vfpfcnvrt
  8715 ;; This function uses a non-reentrant model
  8716 ;;
  8717                           
  8718                           
  8719                           ;psect for function _atoi
  8720  1383                     _atoi:	
  8721                           
  8722                           ;incstack = 0
  8723                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8724  1383  0020               	movlb	0	; select bank0
  8725  1384  01AB               	clrf	atoi@n
  8726  1385  01AC               	clrf	atoi@n+1
  8727  1386  01A4               	clrf	atoi@neg
  8728  1387  01A5               	clrf	atoi@neg+1
  8729  1388                     l4447:	
  8730  1388  01AA               	clrf	_atoi$1288
  8731  1389  0AAA               	incf	_atoi$1288,f
  8732  138A  0877               	movf	atoi@s,w
  8733  138B  0084               	movwf	4
  8734  138C  0878               	movf	atoi@s+1,w
  8735  138D  0085               	movwf	5
  8736  138E  0012               	moviw fsr0++
  8737  138F  3A20               	xorlw	32
  8738  1390  1903               	btfsc	3,2
  8739  1391  2BA4               	goto	l4455
  8740  1392  0877               	movf	atoi@s,w
  8741  1393  0084               	movwf	4
  8742  1394  0878               	movf	atoi@s+1,w
  8743  1395  0085               	movwf	5
  8744  1396  0800               	movf	0,w	;code access
  8745  1397  3EF7               	addlw	247
  8746  1398  00A0               	movwf	??_atoi
  8747  1399  30FF               	movlw	255
  8748  139A  1803               	skipnc
  8749  139B  3000               	movlw	0
  8750  139C  00A1               	movwf	??_atoi+1
  8751  139D  3000               	movlw	0
  8752  139E  0221               	subwf	??_atoi+1,w
  8753  139F  3005               	movlw	5
  8754  13A0  1903               	skipnz
  8755  13A1  0220               	subwf	??_atoi,w
  8756  13A2  1803               	btfsc	3,0
  8757  13A3  01AA               	clrf	_atoi$1288
  8758  13A4                     l4455:	
  8759  13A4  082A               	movf	_atoi$1288,w
  8760  13A5  00A0               	movwf	??_atoi
  8761  13A6  01A1               	clrf	??_atoi+1
  8762  13A7  0820               	movf	??_atoi,w
  8763  13A8  00A6               	movwf	_atoi$1287
  8764  13A9  0821               	movf	??_atoi+1,w
  8765  13AA  00A7               	movwf	_atoi$1287+1
  8766  13AB  0826               	movf	_atoi$1287,w
  8767  13AC  0427               	iorwf	_atoi$1287+1,w
  8768  13AD  1903               	btfsc	3,2
  8769  13AE  2BB9               	goto	l4463
  8770  13AF  3001               	movlw	1
  8771  13B0  07F7               	addwf	atoi@s,f
  8772  13B1  3000               	movlw	0
  8773  13B2  3DF8               	addwfc	atoi@s+1,f
  8774  13B3  2B88               	goto	l4447
  8775  13B4                     l4461:	
  8776  13B4  3001               	movlw	1
  8777  13B5  00A4               	movwf	atoi@neg
  8778  13B6  3000               	movlw	0
  8779  13B7  00A5               	movwf	atoi@neg+1
  8780  13B8  2BEC               	goto	l1123
  8781  13B9                     l4463:	
  8782  13B9  0877               	movf	atoi@s,w
  8783  13BA  0084               	movwf	4
  8784  13BB  0878               	movf	atoi@s+1,w
  8785  13BC  0085               	movwf	5
  8786  13BD  0800               	movf	0,w	;code access
  8787  13BE  00A0               	movwf	??_atoi
  8788  13BF  01A1               	clrf	??_atoi+1
  8789                           
  8790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8791                           ; Switch size 1, requested type "simple"
  8792                           ; Number of cases is 1, Range of values is 0 to 0
  8793                           ; switch strategies available:
  8794                           ; Name         Instructions Cycles
  8795                           ; simple_byte            4     3 (average)
  8796                           ; direct_byte            8     6 (fixed)
  8797                           ; jumptable            260     6 (fixed)
  8798                           ;	Chosen strategy is simple_byte
  8799  13C0  0821               	movf	??_atoi+1,w
  8800  13C1  3A00               	xorlw	0	; case 0
  8801  13C2  1903               	skipnz
  8802  13C3  2BC5               	goto	l5209
  8803  13C4  2BF0               	goto	l4469
  8804  13C5                     l5209:	
  8805                           
  8806                           ; Switch size 1, requested type "simple"
  8807                           ; Number of cases is 2, Range of values is 43 to 45
  8808                           ; switch strategies available:
  8809                           ; Name         Instructions Cycles
  8810                           ; simple_byte            7     4 (average)
  8811                           ; direct_byte           15     9 (fixed)
  8812                           ; jumptable            263     9 (fixed)
  8813                           ;	Chosen strategy is simple_byte
  8814  13C5  0820               	movf	??_atoi,w
  8815  13C6  3A2B               	xorlw	43	; case 43
  8816  13C7  1903               	skipnz
  8817  13C8  2BEC               	goto	l1123
  8818  13C9  3A06               	xorlw	6	; case 45
  8819  13CA  1903               	skipnz
  8820  13CB  2BB4               	goto	l4461
  8821  13CC  2BF0               	goto	l4469
  8822  13CD                     l4465:	
  8823  13CD  0877               	movf	atoi@s,w
  8824  13CE  0084               	movwf	4
  8825  13CF  0878               	movf	atoi@s+1,w
  8826  13D0  0085               	movwf	5
  8827  13D1  0800               	movf	0,w	;code access
  8828  13D2  00A0               	movwf	??_atoi
  8829  13D3  082C               	movf	atoi@n+1,w
  8830  13D4  00F2               	movwf	___wmul@multiplier+1
  8831  13D5  082B               	movf	atoi@n,w
  8832  13D6  00F1               	movwf	___wmul@multiplier
  8833  13D7  300A               	movlw	10
  8834  13D8  00F3               	movwf	___wmul@multiplicand
  8835  13D9  3000               	movlw	0
  8836  13DA  00F4               	movwf	___wmul@multiplicand+1
  8837  13DB  319E  26AB  3193   	fcall	___wmul
  8838  13DE  0872               	movf	?___wmul+1,w
  8839  13DF  0020               	movlb	0	; select bank0
  8840  13E0  00A2               	movwf	??_atoi+2
  8841  13E1  0820               	movf	??_atoi,w
  8842  13E2  0271               	subwf	?___wmul,w
  8843  13E3  00A1               	movwf	??_atoi+1
  8844  13E4  1C03               	skipc
  8845  13E5  03A2               	decf	??_atoi+2,f
  8846  13E6  0821               	movf	??_atoi+1,w
  8847  13E7  3E30               	addlw	48
  8848  13E8  00AB               	movwf	atoi@n
  8849  13E9  3000               	movlw	0
  8850  13EA  3D22               	addwfc	??_atoi+2,w
  8851  13EB  00AC               	movwf	atoi@n+1
  8852  13EC                     l1123:	
  8853  13EC  3001               	movlw	1
  8854  13ED  07F7               	addwf	atoi@s,f
  8855  13EE  3000               	movlw	0
  8856  13EF  3DF8               	addwfc	atoi@s+1,f
  8857  13F0                     l4469:	
  8858  13F0  0877               	movf	atoi@s,w
  8859  13F1  0084               	movwf	4
  8860  13F2  0878               	movf	atoi@s+1,w
  8861  13F3  0085               	movwf	5
  8862  13F4  0800               	movf	0,w	;code access
  8863  13F5  3ED0               	addlw	208
  8864  13F6  00A0               	movwf	??_atoi
  8865  13F7  30FF               	movlw	255
  8866  13F8  1803               	skipnc
  8867  13F9  3000               	movlw	0
  8868  13FA  00A1               	movwf	??_atoi+1
  8869  13FB  3000               	movlw	0
  8870  13FC  0221               	subwf	??_atoi+1,w
  8871  13FD  300A               	movlw	10
  8872  13FE  1903               	skipnz
  8873  13FF  0220               	subwf	??_atoi,w
  8874  1400  1803               	btfsc	3,0
  8875  1401  2C04               	goto	u5620
  8876  1402  3001               	movlw	1
  8877  1403  2C05               	goto	u5630
  8878  1404                     u5620:	
  8879  1404  3000               	movlw	0
  8880  1405                     u5630:	
  8881  1405  00A2               	movwf	??_atoi+2
  8882  1406  01A3               	clrf	??_atoi+3
  8883  1407  0822               	movf	??_atoi+2,w
  8884  1408  00A8               	movwf	_atoi$1289
  8885  1409  0823               	movf	??_atoi+3,w
  8886  140A  00A9               	movwf	_atoi$1289+1
  8887  140B  0828               	movf	_atoi$1289,w
  8888  140C  0429               	iorwf	_atoi$1289+1,w
  8889  140D  1D03               	btfss	3,2
  8890  140E  2BCD               	goto	l4465
  8891  140F  0824               	movf	atoi@neg,w
  8892  1410  0425               	iorwf	atoi@neg+1,w
  8893  1411  1D03               	btfss	3,2
  8894  1412  2C1F               	goto	l4479
  8895  1413  092B               	comf	atoi@n,w
  8896  1414  00A0               	movwf	??_atoi
  8897  1415  092C               	comf	atoi@n+1,w
  8898  1416  00A1               	movwf	??_atoi+1
  8899  1417  0AA0               	incf	??_atoi,f
  8900  1418  1903               	skipnz
  8901  1419  0AA1               	incf	??_atoi+1,f
  8902  141A  0820               	movf	??_atoi,w
  8903  141B  00F7               	movwf	?_atoi
  8904  141C  0821               	movf	??_atoi+1,w
  8905  141D  00F8               	movwf	?_atoi+1
  8906  141E  0008               	return
  8907  141F                     l4479:	
  8908  141F  082C               	movf	atoi@n+1,w
  8909  1420  00F8               	movwf	?_atoi+1
  8910  1421  082B               	movf	atoi@n,w
  8911  1422  00F7               	movwf	?_atoi
  8912  1423  0008               	return
  8913  1424                     __end_of_atoi:	
  8914                           
  8915                           	psect	text28
  8916  1000                     __ptext28:	
  8917 ;; *************** function _isspace *****************
  8918 ;; Defined at:
  8919 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isspace.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;  c               2    1[COMMON] int 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;		None
  8924 ;; Return value:  Size  Location     Type
  8925 ;;                  2    1[COMMON] int 
  8926 ;; Registers used:
  8927 ;;		wreg, status,2, status,0
  8928 ;; Tracked objects:
  8929 ;;		On entry : 0/0
  8930 ;;		On exit  : 0/0
  8931 ;;		Unchanged: 0/0
  8932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8936 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8937 ;;Total ram usage:        5 bytes
  8938 ;; Hardware stack levels used:    1
  8939 ;; Hardware stack levels required when called:    1
  8940 ;; This function calls:
  8941 ;;		Nothing
  8942 ;; This function is called by:
  8943 ;;		_atoi
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947                           
  8948                           ;psect for function _isspace
  8949  1000                     _isspace:	
  8950                           
  8951                           ;incstack = 0
  8952                           ; Regs used in _isspace: [wreg+status,2+status,0]
  8953  1000  01F5               	clrf	_isspace$1314
  8954  1001  0AF5               	incf	_isspace$1314,f
  8955  1002  3020               	movlw	32
  8956  1003  0671               	xorwf	isspace@c,w
  8957  1004  0472               	iorwf	isspace@c+1,w
  8958  1005  1903               	btfsc	3,2
  8959  1006  2814               	goto	l4173
  8960  1007  0871               	movf	isspace@c,w
  8961  1008  3EF7               	addlw	247
  8962  1009  00F3               	movwf	??_isspace
  8963  100A  30FF               	movlw	255
  8964  100B  3D72               	addwfc	isspace@c+1,w
  8965  100C  00F4               	movwf	??_isspace+1
  8966  100D  3000               	movlw	0
  8967  100E  0274               	subwf	??_isspace+1,w
  8968  100F  3005               	movlw	5
  8969  1010  1903               	skipnz
  8970  1011  0273               	subwf	??_isspace,w
  8971  1012  1803               	btfsc	3,0
  8972  1013  01F5               	clrf	_isspace$1314
  8973  1014                     l4173:	
  8974  1014  0875               	movf	_isspace$1314,w
  8975  1015  00F3               	movwf	??_isspace
  8976  1016  01F4               	clrf	??_isspace+1
  8977  1017  0873               	movf	??_isspace,w
  8978  1018  00F1               	movwf	?_isspace
  8979  1019  0874               	movf	??_isspace+1,w
  8980  101A  00F2               	movwf	?_isspace+1
  8981  101B  0008               	return
  8982  101C                     __end_of_isspace:	
  8983                           
  8984                           	psect	text29
  8985  1E1E                     __ptext29:	
  8986 ;; *************** function _isdigit *****************
  8987 ;; Defined at:
  8988 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\isdigit.c"
  8989 ;; Parameters:    Size  Location     Type
  8990 ;;  c               2    1[COMMON] int 
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;		None
  8993 ;; Return value:  Size  Location     Type
  8994 ;;                  2    1[COMMON] int 
  8995 ;; Registers used:
  8996 ;;		wreg, status,2, status,0
  8997 ;; Tracked objects:
  8998 ;;		On entry : 0/0
  8999 ;;		On exit  : 0/0
  9000 ;;		Unchanged: 0/0
  9001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9004 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9005 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9006 ;;Total ram usage:        6 bytes
  9007 ;; Hardware stack levels used:    1
  9008 ;; Hardware stack levels required when called:    1
  9009 ;; This function calls:
  9010 ;;		Nothing
  9011 ;; This function is called by:
  9012 ;;		_vfpfcnvrt
  9013 ;;		_atoi
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           
  9017                           
  9018                           ;psect for function _isdigit
  9019  1E1E                     _isdigit:	
  9020                           
  9021                           ;incstack = 0
  9022                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9023  1E1E  0871               	movf	isdigit@c,w
  9024  1E1F  3ED0               	addlw	208
  9025  1E20  00F3               	movwf	??_isdigit
  9026  1E21  30FF               	movlw	255
  9027  1E22  3D72               	addwfc	isdigit@c+1,w
  9028  1E23  00F4               	movwf	??_isdigit+1
  9029  1E24  3000               	movlw	0
  9030  1E25  0274               	subwf	??_isdigit+1,w
  9031  1E26  300A               	movlw	10
  9032  1E27  1903               	skipnz
  9033  1E28  0273               	subwf	??_isdigit,w
  9034  1E29  1803               	btfsc	3,0
  9035  1E2A  2E2D               	goto	u4610
  9036  1E2B  3001               	movlw	1
  9037  1E2C  2E2E               	goto	u4620
  9038  1E2D                     u4610:	
  9039  1E2D  3000               	movlw	0
  9040  1E2E                     u4620:	
  9041  1E2E  00F5               	movwf	??_isdigit+2
  9042  1E2F  01F6               	clrf	??_isdigit+3
  9043  1E30  0875               	movf	??_isdigit+2,w
  9044  1E31  00F1               	movwf	?_isdigit
  9045  1E32  0876               	movf	??_isdigit+3,w
  9046  1E33  00F2               	movwf	?_isdigit+1
  9047  1E34  0008               	return
  9048  1E35                     __end_of_isdigit:	
  9049                           
  9050                           	psect	text30
  9051  1EAB                     __ptext30:	
  9052 ;; *************** function ___wmul *****************
  9053 ;; Defined at:
  9054 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;  multiplier      2    1[COMMON] unsigned int 
  9057 ;;  multiplicand    2    3[COMMON] unsigned int 
  9058 ;; Auto vars:     Size  Location     Type
  9059 ;;  product         2    5[COMMON] unsigned int 
  9060 ;; Return value:  Size  Location     Type
  9061 ;;                  2    1[COMMON] unsigned int 
  9062 ;; Registers used:
  9063 ;;		wreg, status,2, status,0
  9064 ;; Tracked objects:
  9065 ;;		On entry : 0/0
  9066 ;;		On exit  : 0/0
  9067 ;;		Unchanged: 0/0
  9068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9069 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9072 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9073 ;;Total ram usage:        6 bytes
  9074 ;; Hardware stack levels used:    1
  9075 ;; Hardware stack levels required when called:    1
  9076 ;; This function calls:
  9077 ;;		Nothing
  9078 ;; This function is called by:
  9079 ;;		_atoi
  9080 ;; This function uses a non-reentrant model
  9081 ;;
  9082                           
  9083                           
  9084                           ;psect for function ___wmul
  9085  1EAB                     ___wmul:	
  9086                           
  9087                           ;incstack = 0
  9088                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9089  1EAB  01F5               	clrf	___wmul@product
  9090  1EAC  01F6               	clrf	___wmul@product+1
  9091  1EAD                     l4047:	
  9092  1EAD  1C71               	btfss	___wmul@multiplier,0
  9093  1EAE  2EB3               	goto	l648
  9094  1EAF  0873               	movf	___wmul@multiplicand,w
  9095  1EB0  07F5               	addwf	___wmul@product,f
  9096  1EB1  0874               	movf	___wmul@multiplicand+1,w
  9097  1EB2  3DF6               	addwfc	___wmul@product+1,f
  9098  1EB3                     l648:	
  9099  1EB3  3001               	movlw	1
  9100  1EB4                     u4645:	
  9101  1EB4  35F3               	lslf	___wmul@multiplicand,f
  9102  1EB5  0DF4               	rlf	___wmul@multiplicand+1,f
  9103  1EB6  0B89               	decfsz	9,f
  9104  1EB7  2EB4               	goto	u4645
  9105  1EB8  3001               	movlw	1
  9106  1EB9                     u4655:	
  9107  1EB9  36F2               	lsrf	___wmul@multiplier+1,f
  9108  1EBA  0CF1               	rrf	___wmul@multiplier,f
  9109  1EBB  0B89               	decfsz	9,f
  9110  1EBC  2EB9               	goto	u4655
  9111  1EBD  0871               	movf	___wmul@multiplier,w
  9112  1EBE  0472               	iorwf	___wmul@multiplier+1,w
  9113  1EBF  1D03               	btfss	3,2
  9114  1EC0  2EAD               	goto	l4047
  9115  1EC1  0876               	movf	___wmul@product+1,w
  9116  1EC2  00F2               	movwf	?___wmul+1
  9117  1EC3  0875               	movf	___wmul@product,w
  9118  1EC4  00F1               	movwf	?___wmul
  9119  1EC5  0008               	return
  9120  1EC6                     __end_of___wmul:	
  9121                           
  9122                           	psect	text31
  9123  0002                     __ptext31:	
  9124 ;; *************** function _init_AFE *****************
  9125 ;; Defined at:
  9126 ;;		line 147 in file "main.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;		None
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		None
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9144 ;;Total ram usage:        0 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; Hardware stack levels required when called:    1
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_statemachine
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           
  9155                           ;psect for function _init_AFE
  9156  0002                     _init_AFE:	
  9157                           
  9158                           ;incstack = 0
  9159                           ; Regs used in _init_AFE: []
  9160  0002  0008               	return
  9161  0003                     __end_of_init_AFE:	
  9162                           
  9163                           	psect	text32
  9164  14CC                     __ptext32:	
  9165 ;; *************** function _beginAFEcommunication *****************
  9166 ;; Defined at:
  9167 ;;		line 6 in file "BQ76920.c"
  9168 ;; Parameters:    Size  Location     Type
  9169 ;;		None
  9170 ;; Auto vars:     Size  Location     Type
  9171 ;;  i               2   13[BANK0 ] int 
  9172 ;;  commSuccess     2   11[BANK0 ] int 
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  2    0[BANK0 ] int 
  9175 ;; Registers used:
  9176 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9183 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9184 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9185 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9186 ;;Total ram usage:       15 bytes
  9187 ;; Hardware stack levels used:    1
  9188 ;; Hardware stack levels required when called:    3
  9189 ;; This function calls:
  9190 ;;		_I2C_writeRegister
  9191 ;;		_readRegister
  9192 ;; This function is called by:
  9193 ;;		_statemachine
  9194 ;; This function uses a non-reentrant model
  9195 ;;
  9196                           
  9197                           
  9198                           ;psect for function _beginAFEcommunication
  9199  14CC                     _beginAFEcommunication:	
  9200                           
  9201                           ;BQ76920.c: 8:     int commSuccess = 0;
  9202                           
  9203                           ;incstack = 0
  9204                           ; Regs used in _beginAFEcommunication: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9205  14CC  0020               	movlb	0	; select bank0
  9206  14CD  01AB               	clrf	beginAFEcommunication@commSuccess
  9207  14CE  01AC               	clrf	beginAFEcommunication@commSuccess+1
  9208                           
  9209                           ;BQ76920.c: 11:     for (int i = 0; i < 4; i++) {
  9210  14CF  01AD               	clrf	beginAFEcommunication@i
  9211  14D0  01AE               	clrf	beginAFEcommunication@i+1
  9212  14D1                     l4997:	
  9213                           
  9214                           ;BQ76920.c: 12:         cellVoltages[i] = 0;
  9215  14D1  0020               	movlb	0	; select bank0
  9216  14D2  352D               	lslf	beginAFEcommunication@i,w
  9217  14D3  3E20               	addlw	(low (_cellVoltages| (0+256)))& (0+255)
  9218  14D4  0086               	movwf	6
  9219  14D5  3001               	movlw	1	; select bank2/3
  9220  14D6  0087               	movwf	7
  9221  14D7  3000               	movlw	0
  9222  14D8  3FC0               	movwi [0]fsr1
  9223  14D9  3FC1               	movwi [1]fsr1
  9224                           
  9225                           ;BQ76920.c: 13:     }
  9226  14DA  3001               	movlw	1
  9227  14DB  07AD               	addwf	beginAFEcommunication@i,f
  9228  14DC  3000               	movlw	0
  9229  14DD  3DAE               	addwfc	beginAFEcommunication@i+1,f
  9230  14DE  082E               	movf	beginAFEcommunication@i+1,w
  9231  14DF  3A80               	xorlw	128
  9232  14E0  00A2               	movwf	??_beginAFEcommunication
  9233  14E1  3080               	movlw	128
  9234  14E2  0222               	subwf	??_beginAFEcommunication,w
  9235  14E3  1D03               	skipz
  9236  14E4  2CE7               	goto	u6345
  9237  14E5  3004               	movlw	4
  9238  14E6  022D               	subwf	beginAFEcommunication@i,w
  9239  14E7                     u6345:	
  9240  14E7  1C03               	skipc
  9241  14E8  2CD1               	goto	l4997
  9242                           
  9243                           ;BQ76920.c: 16:     I2C_writeRegister(0x18, 0x0B, 0x19);
  9244  14E9  3018               	movlw	24
  9245  14EA  00F5               	movwf	I2C_writeRegister@slaveAddress
  9246  14EB  3000               	movlw	0
  9247  14EC  00F6               	movwf	I2C_writeRegister@slaveAddress+1
  9248  14ED  300B               	movlw	11
  9249  14EE  00F7               	movwf	I2C_writeRegister@regAddress
  9250  14EF  3000               	movlw	0
  9251  14F0  00F8               	movwf	I2C_writeRegister@regAddress+1
  9252  14F1  3019               	movlw	25
  9253  14F2  00F9               	movwf	I2C_writeRegister@data
  9254  14F3  3000               	movlw	0
  9255  14F4  00FA               	movwf	I2C_writeRegister@data+1
  9256  14F5  319E  26FE  3194   	fcall	_I2C_writeRegister
  9257                           
  9258                           ;BQ76920.c: 18:     if (readRegister(0x18, 0x0B) == 0x19) {
  9259  14F8  3018               	movlw	24
  9260  14F9  00F5               	movwf	readRegister@slaveAddress
  9261  14FA  3000               	movlw	0
  9262  14FB  00F6               	movwf	readRegister@slaveAddress+1
  9263  14FC  300B               	movlw	11
  9264  14FD  00F7               	movwf	readRegister@regAddress
  9265  14FE  3000               	movlw	0
  9266  14FF  00F8               	movwf	readRegister@regAddress+1
  9267  1500  3190  201C  3194   	fcall	_readRegister
  9268  1503  3019               	movlw	25
  9269  1504  0675               	xorwf	?_readRegister,w
  9270  1505  0476               	iorwf	?_readRegister+1,w
  9271  1506  1D03               	btfss	3,2
  9272  1507  2D7A               	goto	l336
  9273                           
  9274                           ;BQ76920.c: 19:         commSuccess = 1;
  9275  1508  3001               	movlw	1
  9276  1509  0020               	movlb	0	; select bank0
  9277  150A  00AB               	movwf	beginAFEcommunication@commSuccess
  9278  150B  3000               	movlw	0
  9279  150C  00AC               	movwf	beginAFEcommunication@commSuccess+1
  9280                           
  9281                           ;BQ76920.c: 23:         I2C_writeRegister(0x18,0x04, 0x18);
  9282  150D  3018               	movlw	24
  9283  150E  00F5               	movwf	I2C_writeRegister@slaveAddress
  9284  150F  3000               	movlw	0
  9285  1510  00F6               	movwf	I2C_writeRegister@slaveAddress+1
  9286  1511  3004               	movlw	4
  9287  1512  00F7               	movwf	I2C_writeRegister@regAddress
  9288  1513  3000               	movlw	0
  9289  1514  00F8               	movwf	I2C_writeRegister@regAddress+1
  9290  1515  3018               	movlw	24
  9291  1516  00F9               	movwf	I2C_writeRegister@data
  9292  1517  3000               	movlw	0
  9293  1518  00FA               	movwf	I2C_writeRegister@data+1
  9294  1519  319E  26FE  3194   	fcall	_I2C_writeRegister
  9295                           
  9296                           ;BQ76920.c: 24:         I2C_writeRegister(0x18,0x05, 0x40);
  9297  151C  3018               	movlw	24
  9298  151D  00F5               	movwf	I2C_writeRegister@slaveAddress
  9299  151E  3000               	movlw	0
  9300  151F  00F6               	movwf	I2C_writeRegister@slaveAddress+1
  9301  1520  3005               	movlw	5
  9302  1521  00F7               	movwf	I2C_writeRegister@regAddress
  9303  1522  3000               	movlw	0
  9304  1523  00F8               	movwf	I2C_writeRegister@regAddress+1
  9305  1524  3040               	movlw	64
  9306  1525  00F9               	movwf	I2C_writeRegister@data
  9307  1526  3000               	movlw	0
  9308  1527  00FA               	movwf	I2C_writeRegister@data+1
  9309  1528  319E  26FE  3194   	fcall	_I2C_writeRegister
  9310                           
  9311                           ;BQ76920.c: 27:         adcOffset = (signed int) readRegister(0x18,0x51);
  9312  152B  3018               	movlw	24
  9313  152C  00F5               	movwf	readRegister@slaveAddress
  9314  152D  3000               	movlw	0
  9315  152E  00F6               	movwf	readRegister@slaveAddress+1
  9316  152F  3051               	movlw	81
  9317  1530  00F7               	movwf	readRegister@regAddress
  9318  1531  3000               	movlw	0
  9319  1532  00F8               	movwf	readRegister@regAddress+1
  9320  1533  3190  201C  3194   	fcall	_readRegister
  9321  1536  0876               	movf	?_readRegister+1,w
  9322  1537  0021               	movlb	1	; select bank1
  9323  1538  00E5               	movwf	(_adcOffset+1)^(0+128)
  9324  1539  0875               	movf	?_readRegister,w
  9325  153A  00E4               	movwf	_adcOffset^(0+128)
  9326                           
  9327                           ;BQ76920.c: 28:         adcGain = 365 + (((readRegister(0x18,0x50) & 0x0C) << 1) |
  9328  153B  3018               	movlw	24
  9329  153C  00F5               	movwf	readRegister@slaveAddress
  9330  153D  3000               	movlw	0
  9331  153E  00F6               	movwf	readRegister@slaveAddress+1
  9332  153F  3059               	movlw	89
  9333  1540  00F7               	movwf	readRegister@regAddress
  9334  1541  3000               	movlw	0
  9335  1542  00F8               	movwf	readRegister@regAddress+1
  9336  1543  3190  201C  3194   	fcall	_readRegister
  9337  1546  0875               	movf	?_readRegister,w
  9338  1547  0020               	movlb	0	; select bank0
  9339  1548  00A2               	movwf	??_beginAFEcommunication
  9340  1549  0876               	movf	?_readRegister+1,w
  9341  154A  00A3               	movwf	??_beginAFEcommunication+1
  9342  154B  3005               	movlw	5
  9343  154C  00A4               	movwf	??_beginAFEcommunication+2
  9344  154D                     u6365:	
  9345  154D  0D23               	rlf	??_beginAFEcommunication+1,w
  9346  154E  0CA3               	rrf	??_beginAFEcommunication+1,f
  9347  154F  0CA2               	rrf	??_beginAFEcommunication,f
  9348  1550  0BA4               	decfsz	??_beginAFEcommunication+2,f
  9349  1551  2D4D               	goto	u6365
  9350  1552  3007               	movlw	7
  9351  1553  0522               	andwf	??_beginAFEcommunication,w
  9352  1554  00A5               	movwf	??_beginAFEcommunication+3
  9353  1555  3000               	movlw	0
  9354  1556  0523               	andwf	??_beginAFEcommunication+1,w
  9355  1557  00A6               	movwf	??_beginAFEcommunication+4
  9356  1558  3018               	movlw	24
  9357  1559  00F5               	movwf	readRegister@slaveAddress
  9358  155A  3000               	movlw	0
  9359  155B  00F6               	movwf	readRegister@slaveAddress+1
  9360  155C  3050               	movlw	80
  9361  155D  00F7               	movwf	readRegister@regAddress
  9362  155E  3000               	movlw	0
  9363  155F  00F8               	movwf	readRegister@regAddress+1
  9364  1560  3190  201C         	fcall	_readRegister
  9365  1562  300C               	movlw	12
  9366  1563  0575               	andwf	?_readRegister,w
  9367  1564  0020               	movlb	0	; select bank0
  9368  1565  00A7               	movwf	??_beginAFEcommunication+5
  9369  1566  3000               	movlw	0
  9370  1567  0576               	andwf	?_readRegister+1,w
  9371  1568  00A8               	movwf	??_beginAFEcommunication+6
  9372  1569  35A7               	lslf	??_beginAFEcommunication+5,f
  9373  156A  0DA8               	rlf	??_beginAFEcommunication+6,f
  9374  156B  0825               	movf	??_beginAFEcommunication+3,w
  9375  156C  0427               	iorwf	??_beginAFEcommunication+5,w
  9376  156D  00A9               	movwf	??_beginAFEcommunication+7
  9377  156E  0826               	movf	??_beginAFEcommunication+4,w
  9378  156F  0428               	iorwf	??_beginAFEcommunication+6,w
  9379  1570  00AA               	movwf	??_beginAFEcommunication+8
  9380  1571  0829               	movf	??_beginAFEcommunication+7,w
  9381  1572  3E6D               	addlw	109
  9382  1573  0021               	movlb	1	; select bank1
  9383  1574  00E6               	movwf	_adcGain^(0+128)
  9384  1575  3001               	movlw	1
  9385  1576  0020               	movlb	0	; select bank0
  9386  1577  3D2A               	addwfc	??_beginAFEcommunication+8,w
  9387  1578  0021               	movlb	1	; select bank1
  9388  1579  00E7               	movwf	(_adcGain+1)^(0+128)
  9389  157A                     l336:	
  9390                           ;BQ76920.c: 31:     }
  9391                           
  9392                           
  9393                           ;BQ76920.c: 35:     return commSuccess;
  9394  157A  0020               	movlb	0	; select bank0
  9395  157B  082C               	movf	beginAFEcommunication@commSuccess+1,w
  9396  157C  00A1               	movwf	?_beginAFEcommunication+1
  9397  157D  082B               	movf	beginAFEcommunication@commSuccess,w
  9398  157E  00A0               	movwf	?_beginAFEcommunication
  9399  157F  0008               	return
  9400  1580                     __end_of_beginAFEcommunication:	
  9401                           
  9402                           	psect	text33
  9403  101C                     __ptext33:	
  9404 ;; *************** function _readRegister *****************
  9405 ;; Defined at:
  9406 ;;		line 129 in file "I2C.c"
  9407 ;; Parameters:    Size  Location     Type
  9408 ;;  slaveAddress    2    5[COMMON] int 
  9409 ;;  regAddress      2    7[COMMON] int 
  9410 ;; Auto vars:     Size  Location     Type
  9411 ;;  recievedData    2    9[COMMON] int 
  9412 ;; Return value:  Size  Location     Type
  9413 ;;                  2    5[COMMON] int 
  9414 ;; Registers used:
  9415 ;;		wreg, status,2, status,0, pclath, cstack
  9416 ;; Tracked objects:
  9417 ;;		On entry : 0/0
  9418 ;;		On exit  : 0/0
  9419 ;;		Unchanged: 0/0
  9420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9425 ;;Total ram usage:        6 bytes
  9426 ;; Hardware stack levels used:    1
  9427 ;; Hardware stack levels required when called:    2
  9428 ;; This function calls:
  9429 ;;		_read_I2C_data
  9430 ;;		_send_I2C_NACK
  9431 ;;		_send_I2C_controlByte
  9432 ;;		_send_I2C_data
  9433 ;;		_send_I2C_startBit
  9434 ;;		_send_I2C_stopBit
  9435 ;; This function is called by:
  9436 ;;		_beginAFEcommunication
  9437 ;; This function uses a non-reentrant model
  9438 ;;
  9439                           
  9440                           
  9441                           ;psect for function _readRegister
  9442  101C                     _readRegister:	
  9443                           
  9444                           ;I2C.c: 130:     int recievedData;;I2C.c: 131:     send_I2C_startBit();
  9445                           
  9446                           ;incstack = 0
  9447                           ; Regs used in _readRegister: [wreg+status,2+status,0+pclath+cstack]
  9448  101C  319D  25B2  3190   	fcall	_send_I2C_startBit
  9449                           
  9450                           ;I2C.c: 132:     send_I2C_controlByte(slaveAddress, 0);
  9451  101F  0876               	movf	readRegister@slaveAddress+1,w
  9452  1020  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
  9453  1021  0875               	movf	readRegister@slaveAddress,w
  9454  1022  00F1               	movwf	send_I2C_controlByte@BlockAddress
  9455  1023  3000               	movlw	0
  9456  1024  00F3               	movwf	send_I2C_controlByte@RW_bit
  9457  1025  00F4               	movwf	send_I2C_controlByte@RW_bit+1
  9458  1026  319D  25DD  3190   	fcall	_send_I2C_controlByte
  9459                           
  9460                           ;I2C.c: 133:     send_I2C_data(regAddress);
  9461  1029  0878               	movf	readRegister@regAddress+1,w
  9462  102A  00F2               	movwf	send_I2C_data@databyte+1
  9463  102B  0877               	movf	readRegister@regAddress,w
  9464  102C  00F1               	movwf	send_I2C_data@databyte
  9465  102D  319D  25CB  3190   	fcall	_send_I2C_data
  9466                           
  9467                           ;I2C.c: 134:     send_I2C_stopBit();
  9468  1030  319D  25BA  3190   	fcall	_send_I2C_stopBit
  9469                           
  9470                           ;I2C.c: 135:     send_I2C_startBit();
  9471  1033  319D  25B2  3190   	fcall	_send_I2C_startBit
  9472                           
  9473                           ;I2C.c: 136:     send_I2C_controlByte(slaveAddress, 1);
  9474  1036  0876               	movf	readRegister@slaveAddress+1,w
  9475  1037  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
  9476  1038  0875               	movf	readRegister@slaveAddress,w
  9477  1039  00F1               	movwf	send_I2C_controlByte@BlockAddress
  9478  103A  3001               	movlw	1
  9479  103B  00F3               	movwf	send_I2C_controlByte@RW_bit
  9480  103C  3000               	movlw	0
  9481  103D  00F4               	movwf	send_I2C_controlByte@RW_bit+1
  9482  103E  319D  25DD  3190   	fcall	_send_I2C_controlByte
  9483                           
  9484                           ;I2C.c: 137:     recievedData = read_I2C_data();
  9485  1041  319E  260E  3190   	fcall	_read_I2C_data
  9486  1044  0872               	movf	?_read_I2C_data+1,w
  9487  1045  00FA               	movwf	readRegister@recievedData+1
  9488  1046  0871               	movf	?_read_I2C_data,w
  9489  1047  00F9               	movwf	readRegister@recievedData
  9490                           
  9491                           ;I2C.c: 138:     send_I2C_NACK();
  9492  1048  319D  25D4  3190   	fcall	_send_I2C_NACK
  9493                           
  9494                           ;I2C.c: 139:     send_I2C_stopBit();
  9495  104B  319D  25BA         	fcall	_send_I2C_stopBit
  9496                           
  9497                           ;I2C.c: 140:     return recievedData;
  9498  104D  087A               	movf	readRegister@recievedData+1,w
  9499  104E  00F6               	movwf	?_readRegister+1
  9500  104F  0879               	movf	readRegister@recievedData,w
  9501  1050  00F5               	movwf	?_readRegister
  9502  1051  0008               	return
  9503  1052                     __end_of_readRegister:	
  9504                           
  9505                           	psect	text34
  9506  1DD4                     __ptext34:	
  9507 ;; *************** function _send_I2C_NACK *****************
  9508 ;; Defined at:
  9509 ;;		line 83 in file "I2C.c"
  9510 ;; Parameters:    Size  Location     Type
  9511 ;;		None
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;		None
  9514 ;; Return value:  Size  Location     Type
  9515 ;;                  1    wreg      void 
  9516 ;; Registers used:
  9517 ;;		None
  9518 ;; Tracked objects:
  9519 ;;		On entry : 0/0
  9520 ;;		On exit  : 0/0
  9521 ;;		Unchanged: 0/0
  9522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9527 ;;Total ram usage:        0 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; Hardware stack levels required when called:    1
  9530 ;; This function calls:
  9531 ;;		Nothing
  9532 ;; This function is called by:
  9533 ;;		_readRegister
  9534 ;; This function uses a non-reentrant model
  9535 ;;
  9536                           
  9537                           
  9538                           ;psect for function _send_I2C_NACK
  9539  1DD4                     _send_I2C_NACK:	
  9540                           
  9541                           ;I2C.c: 84:     PIR1bits.SSP1IF = 0;
  9542                           
  9543                           ;incstack = 0
  9544                           ; Regs used in _send_I2C_NACK: []
  9545  1DD4  0020               	movlb	0	; select bank0
  9546  1DD5  1191               	bcf	17,3	;volatile
  9547                           
  9548                           ;I2C.c: 85:     SSPCON2bits.ACKDT = 1;
  9549  1DD6  0024               	movlb	4	; select bank4
  9550  1DD7  1696               	bsf	22,5	;volatile
  9551                           
  9552                           ;I2C.c: 86:     SSPCON2bits.ACKEN = 1;
  9553  1DD8  1616               	bsf	22,4	;volatile
  9554  1DD9                     l273:	
  9555                           ;I2C.c: 87:     while (!PIR1bits.SSP1IF);
  9556                           
  9557  1DD9  0020               	movlb	0	; select bank0
  9558  1DDA  1991               	btfsc	17,3	;volatile
  9559  1DDB  0008               	return
  9560  1DDC  2DD9               	goto	l273
  9561  1DDD                     __end_of_send_I2C_NACK:	
  9562                           
  9563                           	psect	text35
  9564  1E0E                     __ptext35:	
  9565 ;; *************** function _read_I2C_data *****************
  9566 ;; Defined at:
  9567 ;;		line 42 in file "I2C.c"
  9568 ;; Parameters:    Size  Location     Type
  9569 ;;		None
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;		None
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  2    1[COMMON] unsigned int 
  9574 ;; Registers used:
  9575 ;;		wreg
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9583 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9584 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9585 ;;Total ram usage:        4 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:    1
  9588 ;; This function calls:
  9589 ;;		Nothing
  9590 ;; This function is called by:
  9591 ;;		_readRegister
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595                           
  9596                           ;psect for function _read_I2C_data
  9597  1E0E                     _read_I2C_data:	
  9598                           
  9599                           ;I2C.c: 43:     PIR1bits.SSP1IF = 0;
  9600                           
  9601                           ;incstack = 0
  9602                           ; Regs used in _read_I2C_data: [wreg]
  9603  1E0E  0020               	movlb	0	; select bank0
  9604  1E0F  1191               	bcf	17,3	;volatile
  9605                           
  9606                           ;I2C.c: 44:     SSPCON2bits.RCEN = 1;
  9607  1E10  0024               	movlb	4	; select bank4
  9608  1E11  1596               	bsf	22,3	;volatile
  9609  1E12                     l243:	
  9610                           ;I2C.c: 45:     while (!PIR1bits.SSP1IF);
  9611                           
  9612  1E12  0020               	movlb	0	; select bank0
  9613  1E13  1D91               	btfss	17,3	;volatile
  9614  1E14  2E12               	goto	l243
  9615                           
  9616                           ;I2C.c: 46:     return (SSPBUF);
  9617  1E15  0024               	movlb	4	; select bank4
  9618  1E16  0811               	movf	17,w	;volatile
  9619  1E17  00F3               	movwf	??_read_I2C_data
  9620  1E18  01F4               	clrf	??_read_I2C_data+1
  9621  1E19  0873               	movf	??_read_I2C_data,w
  9622  1E1A  00F1               	movwf	?_read_I2C_data
  9623  1E1B  0874               	movf	??_read_I2C_data+1,w
  9624  1E1C  00F2               	movwf	?_read_I2C_data+1
  9625  1E1D  0008               	return
  9626  1E1E                     __end_of_read_I2C_data:	
  9627                           
  9628                           	psect	text36
  9629  1EFE                     __ptext36:	
  9630 ;; *************** function _I2C_writeRegister *****************
  9631 ;; Defined at:
  9632 ;;		line 118 in file "I2C.c"
  9633 ;; Parameters:    Size  Location     Type
  9634 ;;  slaveAddress    2    5[COMMON] int 
  9635 ;;  regAddress      2    7[COMMON] int 
  9636 ;;  data            2    9[COMMON] int 
  9637 ;; Auto vars:     Size  Location     Type
  9638 ;;		None
  9639 ;; Return value:  Size  Location     Type
  9640 ;;                  1    wreg      void 
  9641 ;; Registers used:
  9642 ;;		wreg, status,2, status,0, pclath, cstack
  9643 ;; Tracked objects:
  9644 ;;		On entry : 0/0
  9645 ;;		On exit  : 0/0
  9646 ;;		Unchanged: 0/0
  9647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9648 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9651 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9652 ;;Total ram usage:        6 bytes
  9653 ;; Hardware stack levels used:    1
  9654 ;; Hardware stack levels required when called:    2
  9655 ;; This function calls:
  9656 ;;		_send_I2C_controlByte
  9657 ;;		_send_I2C_data
  9658 ;;		_send_I2C_startBit
  9659 ;;		_send_I2C_stopBit
  9660 ;; This function is called by:
  9661 ;;		_beginAFEcommunication
  9662 ;; This function uses a non-reentrant model
  9663 ;;
  9664                           
  9665                           
  9666                           ;psect for function _I2C_writeRegister
  9667  1EFE                     _I2C_writeRegister:	
  9668                           
  9669                           ;I2C.c: 119:     send_I2C_startBit();
  9670                           
  9671                           ;incstack = 0
  9672                           ; Regs used in _I2C_writeRegister: [wreg+status,2+status,0+pclath+cstack]
  9673  1EFE  319D  25B2  319E   	fcall	_send_I2C_startBit
  9674                           
  9675                           ;I2C.c: 120:     send_I2C_controlByte(slaveAddress, 0);
  9676  1F01  0876               	movf	I2C_writeRegister@slaveAddress+1,w
  9677  1F02  00F2               	movwf	send_I2C_controlByte@BlockAddress+1
  9678  1F03  0875               	movf	I2C_writeRegister@slaveAddress,w
  9679  1F04  00F1               	movwf	send_I2C_controlByte@BlockAddress
  9680  1F05  3000               	movlw	0
  9681  1F06  00F3               	movwf	send_I2C_controlByte@RW_bit
  9682  1F07  00F4               	movwf	send_I2C_controlByte@RW_bit+1
  9683  1F08  319D  25DD  319E   	fcall	_send_I2C_controlByte
  9684                           
  9685                           ;I2C.c: 121:     send_I2C_data(regAddress);
  9686  1F0B  0878               	movf	I2C_writeRegister@regAddress+1,w
  9687  1F0C  00F2               	movwf	send_I2C_data@databyte+1
  9688  1F0D  0877               	movf	I2C_writeRegister@regAddress,w
  9689  1F0E  00F1               	movwf	send_I2C_data@databyte
  9690  1F0F  319D  25CB  319E   	fcall	_send_I2C_data
  9691                           
  9692                           ;I2C.c: 122:     send_I2C_data(data);
  9693  1F12  087A               	movf	I2C_writeRegister@data+1,w
  9694  1F13  00F2               	movwf	send_I2C_data@databyte+1
  9695  1F14  0879               	movf	I2C_writeRegister@data,w
  9696  1F15  00F1               	movwf	send_I2C_data@databyte
  9697  1F16  319D  25CB  319E   	fcall	_send_I2C_data
  9698                           
  9699                           ;I2C.c: 123:     send_I2C_stopBit();
  9700  1F19  319D  25BA         	fcall	_send_I2C_stopBit
  9701  1F1B  0008               	return
  9702  1F1C                     __end_of_I2C_writeRegister:	
  9703                           
  9704                           	psect	text37
  9705  1DBA                     __ptext37:	
  9706 ;; *************** function _send_I2C_stopBit *****************
  9707 ;; Defined at:
  9708 ;;		line 70 in file "I2C.c"
  9709 ;; Parameters:    Size  Location     Type
  9710 ;;		None
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;		None
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  1    wreg      void 
  9715 ;; Registers used:
  9716 ;;		None
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9726 ;;Total ram usage:        0 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:    1
  9729 ;; This function calls:
  9730 ;;		Nothing
  9731 ;; This function is called by:
  9732 ;;		_I2C_writeRegister
  9733 ;;		_readRegister
  9734 ;;		_retrieve_data_ATmega328
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           
  9739                           ;psect for function _send_I2C_stopBit
  9740  1DBA                     _send_I2C_stopBit:	
  9741                           
  9742                           ;I2C.c: 71:     PIR1bits.SSP1IF = 0;
  9743                           
  9744                           ;incstack = 0
  9745                           ; Regs used in _send_I2C_stopBit: []
  9746  1DBA  0020               	movlb	0	; select bank0
  9747  1DBB  1191               	bcf	17,3	;volatile
  9748                           
  9749                           ;I2C.c: 72:     SSPCON2bits.PEN = 1;
  9750  1DBC  0024               	movlb	4	; select bank4
  9751  1DBD  1516               	bsf	22,2	;volatile
  9752  1DBE                     l261:	
  9753                           ;I2C.c: 73:     while (!PIR1bits.SSP1IF);
  9754                           
  9755  1DBE  0020               	movlb	0	; select bank0
  9756  1DBF  1991               	btfsc	17,3	;volatile
  9757  1DC0  0008               	return
  9758  1DC1  2DBE               	goto	l261
  9759  1DC2                     __end_of_send_I2C_stopBit:	
  9760                           
  9761                           	psect	text38
  9762  1DB2                     __ptext38:	
  9763 ;; *************** function _send_I2C_startBit *****************
  9764 ;; Defined at:
  9765 ;;		line 64 in file "I2C.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;		None
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;                  1    wreg      void 
  9772 ;; Registers used:
  9773 ;;		None
  9774 ;; Tracked objects:
  9775 ;;		On entry : 0/0
  9776 ;;		On exit  : 0/0
  9777 ;;		Unchanged: 0/0
  9778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9783 ;;Total ram usage:        0 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:    1
  9786 ;; This function calls:
  9787 ;;		Nothing
  9788 ;; This function is called by:
  9789 ;;		_I2C_writeRegister
  9790 ;;		_readRegister
  9791 ;;		_retrieve_data_ATmega328
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           
  9796                           ;psect for function _send_I2C_startBit
  9797  1DB2                     _send_I2C_startBit:	
  9798                           
  9799                           ;I2C.c: 65:     PIR1bits.SSP1IF = 0;
  9800                           
  9801                           ;incstack = 0
  9802                           ; Regs used in _send_I2C_startBit: []
  9803  1DB2  0020               	movlb	0	; select bank0
  9804  1DB3  1191               	bcf	17,3	;volatile
  9805                           
  9806                           ;I2C.c: 66:     SSPCON2bits.SEN = 1;
  9807  1DB4  0024               	movlb	4	; select bank4
  9808  1DB5  1416               	bsf	22,0	;volatile
  9809  1DB6                     l255:	
  9810                           ;I2C.c: 67:     while (!PIR1bits.SSP1IF);
  9811                           
  9812  1DB6  0020               	movlb	0	; select bank0
  9813  1DB7  1991               	btfsc	17,3	;volatile
  9814  1DB8  0008               	return
  9815  1DB9  2DB6               	goto	l255
  9816  1DBA                     __end_of_send_I2C_startBit:	
  9817                           
  9818                           	psect	text39
  9819  1DCB                     __ptext39:	
  9820 ;; *************** function _send_I2C_data *****************
  9821 ;; Defined at:
  9822 ;;		line 33 in file "I2C.c"
  9823 ;; Parameters:    Size  Location     Type
  9824 ;;  databyte        2    1[COMMON] unsigned int 
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;		None
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  1    wreg      void 
  9829 ;; Registers used:
  9830 ;;		wreg
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9840 ;;Total ram usage:        2 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; Hardware stack levels required when called:    1
  9843 ;; This function calls:
  9844 ;;		Nothing
  9845 ;; This function is called by:
  9846 ;;		_I2C_writeRegister
  9847 ;;		_readRegister
  9848 ;; This function uses a non-reentrant model
  9849 ;;
  9850                           
  9851                           
  9852                           ;psect for function _send_I2C_data
  9853  1DCB                     _send_I2C_data:	
  9854                           
  9855                           ;I2C.c: 34:     PIR1bits.SSP1IF = 0;
  9856                           
  9857                           ;incstack = 0
  9858                           ; Regs used in _send_I2C_data: [wreg]
  9859  1DCB  0020               	movlb	0	; select bank0
  9860  1DCC  1191               	bcf	17,3	;volatile
  9861                           
  9862                           ;I2C.c: 35:     SSPBUF = databyte;
  9863  1DCD  0871               	movf	send_I2C_data@databyte,w
  9864  1DCE  0024               	movlb	4	; select bank4
  9865  1DCF  0091               	movwf	17	;volatile
  9866  1DD0                     l237:	
  9867                           ;I2C.c: 36:     while (!PIR1bits.SSP1IF);
  9868                           
  9869  1DD0  0020               	movlb	0	; select bank0
  9870  1DD1  1991               	btfsc	17,3	;volatile
  9871  1DD2  0008               	return
  9872  1DD3  2DD0               	goto	l237
  9873  1DD4                     __end_of_send_I2C_data:	
  9874                           
  9875                           	psect	text40
  9876  1DDD                     __ptext40:	
  9877 ;; *************** function _send_I2C_controlByte *****************
  9878 ;; Defined at:
  9879 ;;		line 52 in file "I2C.c"
  9880 ;; Parameters:    Size  Location     Type
  9881 ;;  BlockAddress    2    1[COMMON] unsigned int 
  9882 ;;  RW_bit          2    3[COMMON] unsigned int 
  9883 ;; Auto vars:     Size  Location     Type
  9884 ;;		None
  9885 ;; Return value:  Size  Location     Type
  9886 ;;                  1    wreg      void 
  9887 ;; Registers used:
  9888 ;;		wreg, status,2, status,0
  9889 ;; Tracked objects:
  9890 ;;		On entry : 0/0
  9891 ;;		On exit  : 0/0
  9892 ;;		Unchanged: 0/0
  9893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9897 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9898 ;;Total ram usage:        4 bytes
  9899 ;; Hardware stack levels used:    1
  9900 ;; Hardware stack levels required when called:    1
  9901 ;; This function calls:
  9902 ;;		Nothing
  9903 ;; This function is called by:
  9904 ;;		_I2C_writeRegister
  9905 ;;		_readRegister
  9906 ;;		_retrieve_data_ATmega328
  9907 ;; This function uses a non-reentrant model
  9908 ;;
  9909                           
  9910                           
  9911                           ;psect for function _send_I2C_controlByte
  9912  1DDD                     _send_I2C_controlByte:	
  9913                           
  9914                           ;I2C.c: 53:     PIR1bits.SSP1IF = 0;
  9915                           
  9916                           ;incstack = 0
  9917                           ; Regs used in _send_I2C_controlByte: [wreg+status,2+status,0]
  9918  1DDD  0020               	movlb	0	; select bank0
  9919  1DDE  1191               	bcf	17,3	;volatile
  9920                           
  9921                           ;I2C.c: 59:     SSPBUF = (((0b0000 << 4) | (BlockAddress << 1)) + RW_bit);
  9922  1DDF  3571               	lslf	send_I2C_controlByte@BlockAddress,w
  9923  1DE0  0773               	addwf	send_I2C_controlByte@RW_bit,w
  9924  1DE1  0024               	movlb	4	; select bank4
  9925  1DE2  0091               	movwf	17	;volatile
  9926  1DE3                     l249:	
  9927                           ;I2C.c: 61:     while (!PIR1bits.SSP1IF);
  9928                           
  9929  1DE3  0020               	movlb	0	; select bank0
  9930  1DE4  1991               	btfsc	17,3	;volatile
  9931  1DE5  0008               	return
  9932  1DE6  2DE3               	goto	l249
  9933  1DE7                     __end_of_send_I2C_controlByte:	
  9934                           
  9935                           	psect	text41
  9936  1F3D                     __ptext41:	
  9937 ;; *************** function _RGB_AWAIT_AFE_CONN *****************
  9938 ;; Defined at:
  9939 ;;		line 43 in file "RGB.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;		None
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;		None
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  1    wreg      void 
  9946 ;; Registers used:
  9947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9957 ;;Total ram usage:        1 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    2
  9960 ;; This function calls:
  9961 ;;		_RGB_color
  9962 ;; This function is called by:
  9963 ;;		_statemachine
  9964 ;; This function uses a non-reentrant model
  9965 ;;
  9966                           
  9967                           
  9968                           ;psect for function _RGB_AWAIT_AFE_CONN
  9969  1F3D                     _RGB_AWAIT_AFE_CONN:	
  9970                           
  9971                           ;RGB.c: 45:     if (toggleColor) {
  9972                           
  9973                           ;incstack = 0
  9974                           ; Regs used in _RGB_AWAIT_AFE_CONN: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9975  1F3D  087C               	movf	_toggleColor,w
  9976  1F3E  1903               	btfsc	3,2
  9977  1F3F  2F4F               	goto	l4987
  9978                           
  9979                           ;RGB.c: 46:         toggleColor = !toggleColor;
  9980  1F40  087C               	movf	_toggleColor,w
  9981  1F41  1D03               	btfss	3,2
  9982  1F42  2F45               	goto	u6300
  9983  1F43  3001               	movlw	1
  9984  1F44  2F46               	goto	u6310
  9985  1F45                     u6300:	
  9986  1F45  3000               	movlw	0
  9987  1F46                     u6310:	
  9988  1F46  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
  9989  1F47  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
  9990  1F48  00FC               	movwf	_toggleColor
  9991                           
  9992                           ;RGB.c: 47:         RGB_color(0);
  9993  1F49  3000               	movlw	0
  9994  1F4A  00F1               	movwf	RGB_color@color
  9995  1F4B  00F2               	movwf	RGB_color@color+1
  9996  1F4C  319F  271C         	fcall	_RGB_color
  9997                           
  9998                           ;RGB.c: 48:     } else {
  9999  1F4E  0008               	return
 10000  1F4F                     l4987:	
 10001                           
 10002                           ;RGB.c: 49:         toggleColor = !toggleColor;
 10003  1F4F  087C               	movf	_toggleColor,w
 10004  1F50  1D03               	btfss	3,2
 10005  1F51  2F54               	goto	u6320
 10006  1F52  3001               	movlw	1
 10007  1F53  2F55               	goto	u6330
 10008  1F54                     u6320:	
 10009  1F54  3000               	movlw	0
 10010  1F55                     u6330:	
 10011  1F55  00F3               	movwf	??_RGB_AWAIT_AFE_CONN
 10012  1F56  0873               	movf	??_RGB_AWAIT_AFE_CONN,w
 10013  1F57  00FC               	movwf	_toggleColor
 10014                           
 10015                           ;RGB.c: 50:         RGB_color(1);
 10016  1F58  3001               	movlw	1
 10017  1F59  00F1               	movwf	RGB_color@color
 10018  1F5A  3000               	movlw	0
 10019  1F5B  00F2               	movwf	RGB_color@color+1
 10020  1F5C  319F  271C         	fcall	_RGB_color
 10021  1F5E  0008               	return
 10022  1F5F                     __end_of_RGB_AWAIT_AFE_CONN:	
 10023                           
 10024                           	psect	text42
 10025  1F1C                     __ptext42:	
 10026 ;; *************** function _RGB_color *****************
 10027 ;; Defined at:
 10028 ;;		line 17 in file "RGB.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;  color           2    1[COMMON] int 
 10031 ;; Auto vars:     Size  Location     Type
 10032 ;;		None
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  1    wreg      void 
 10035 ;; Registers used:
 10036 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10042 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10045 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10046 ;;Total ram usage:        2 bytes
 10047 ;; Hardware stack levels used:    1
 10048 ;; Hardware stack levels required when called:    1
 10049 ;; This function calls:
 10050 ;;		Nothing
 10051 ;; This function is called by:
 10052 ;;		_statemachine
 10053 ;;		_RGB_AWAIT_AFE_CONN
 10054 ;; This function uses a non-reentrant model
 10055 ;;
 10056                           
 10057                           
 10058                           ;psect for function _RGB_color
 10059  1F1C                     _RGB_color:	
 10060                           
 10061                           ;RGB.c: 19:     switch (color) {
 10062                           
 10063                           ;incstack = 0
 10064                           ; Regs used in _RGB_color: [wreg-fsr0h+status,2+status,0]
 10065  1F1C  2F2C               	goto	l4911
 10066  1F1D                     l298:	
 10067                           ;RGB.c: 20:         case 0:
 10068                           
 10069                           
 10070                           ;RGB.c: 21:             LATAbits.LATA4 = 0;
 10071  1F1D  0022               	movlb	2	; select bank2
 10072  1F1E  120C               	bcf	12,4	;volatile
 10073                           
 10074                           ;RGB.c: 22:             LATAbits.LATA5 = 1;
 10075  1F1F  168C               	bsf	12,5	;volatile
 10076                           
 10077                           ;RGB.c: 23:             LATEbits.LATE0 = 1;
 10078  1F20  1410               	bsf	16,0	;volatile
 10079                           
 10080                           ;RGB.c: 24:             break;
 10081  1F21  0008               	return
 10082  1F22                     l300:	
 10083                           ;RGB.c: 25:         case 1:
 10084                           
 10085                           
 10086                           ;RGB.c: 26:             LATAbits.LATA4 = 1;
 10087  1F22  0022               	movlb	2	; select bank2
 10088  1F23  160C               	bsf	12,4	;volatile
 10089                           
 10090                           ;RGB.c: 27:             LATAbits.LATA5 = 0;
 10091  1F24  128C               	bcf	12,5	;volatile
 10092                           
 10093                           ;RGB.c: 28:             LATEbits.LATE0 = 1;
 10094  1F25  1410               	bsf	16,0	;volatile
 10095                           
 10096                           ;RGB.c: 29:             break;
 10097  1F26  0008               	return
 10098  1F27                     l301:	
 10099                           ;RGB.c: 30:         case 2:
 10100                           
 10101                           
 10102                           ;RGB.c: 31:             LATAbits.LATA4 = 1;
 10103  1F27  0022               	movlb	2	; select bank2
 10104  1F28  160C               	bsf	12,4	;volatile
 10105                           
 10106                           ;RGB.c: 32:             LATAbits.LATA5 = 1;
 10107  1F29  168C               	bsf	12,5	;volatile
 10108                           
 10109                           ;RGB.c: 33:             LATEbits.LATE0 = 0;
 10110  1F2A  1010               	bcf	16,0	;volatile
 10111                           
 10112                           ;RGB.c: 34:             break;
 10113  1F2B  0008               	return
 10114  1F2C                     l4911:	
 10115                           
 10116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10117                           ; Switch size 1, requested type "simple"
 10118                           ; Number of cases is 1, Range of values is 0 to 0
 10119                           ; switch strategies available:
 10120                           ; Name         Instructions Cycles
 10121                           ; simple_byte            4     3 (average)
 10122                           ; direct_byte            8     6 (fixed)
 10123                           ; jumptable            260     6 (fixed)
 10124                           ;	Chosen strategy is simple_byte
 10125  1F2C  0872               	movf	RGB_color@color+1,w
 10126  1F2D  3A00               	xorlw	0	; case 0
 10127  1F2E  1903               	skipnz
 10128  1F2F  2F31               	goto	l5211
 10129  1F30  2F3C               	goto	l302
 10130  1F31                     l5211:	
 10131                           
 10132                           ; Switch size 1, requested type "simple"
 10133                           ; Number of cases is 3, Range of values is 0 to 2
 10134                           ; switch strategies available:
 10135                           ; Name         Instructions Cycles
 10136                           ; simple_byte           10     6 (average)
 10137                           ; direct_byte           12     6 (fixed)
 10138                           ; jumptable            260     6 (fixed)
 10139                           ;	Chosen strategy is simple_byte
 10140  1F31  0871               	movf	RGB_color@color,w
 10141  1F32  3A00               	xorlw	0	; case 0
 10142  1F33  1903               	skipnz
 10143  1F34  2F1D               	goto	l298
 10144  1F35  3A01               	xorlw	1	; case 1
 10145  1F36  1903               	skipnz
 10146  1F37  2F22               	goto	l300
 10147  1F38  3A03               	xorlw	3	; case 2
 10148  1F39  1903               	skipnz
 10149  1F3A  2F27               	goto	l301
 10150  1F3B  2F3C               	goto	l302
 10151  1F3C                     l302:	
 10152  1F3C  0008               	return
 10153  1F3D                     __end_of_RGB_color:	
 10154                           
 10155                           	psect	text43
 10156  1E91                     __ptext43:	
 10157 ;; *************** function _EUSART_Write_Text *****************
 10158 ;; Defined at:
 10159 ;;		line 75 in file "EUSART.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  text            2    2[COMMON] PTR unsigned char 
 10162 ;;		 -> STR_6(45), STR_5(42), STR_4(45), messageBuffer(127), 
 10163 ;;		 -> STR_2(46), STR_1(40), 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  i               2    5[COMMON] int 
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      void 
 10168 ;; Registers used:
 10169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10178 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10179 ;;Total ram usage:        5 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:    2
 10182 ;; This function calls:
 10183 ;;		_EUSART_Write
 10184 ;; This function is called by:
 10185 ;;		_statemachine
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           
 10190                           ;psect for function _EUSART_Write_Text
 10191  1E91                     _EUSART_Write_Text:	
 10192                           
 10193                           ;EUSART.c: 75: void EUSART_Write_Text(char *text);EUSART.c: 76: {;EUSART.c: 77:   int i;
      +                          ;EUSART.c: 78:   for(i=0;text[i]!='\0';i++)
 10194                           
 10195                           ;incstack = 0
 10196                           ; Regs used in _EUSART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10197  1E91  01F5               	clrf	EUSART_Write_Text@i
 10198  1E92  01F6               	clrf	EUSART_Write_Text@i+1
 10199  1E93                     l5023:	
 10200  1E93  0872               	movf	EUSART_Write_Text@text,w
 10201  1E94  0775               	addwf	EUSART_Write_Text@i,w
 10202  1E95  0084               	movwf	4
 10203  1E96  0873               	movf	EUSART_Write_Text@text+1,w
 10204  1E97  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10205  1E98  0085               	movwf	5
 10206  1E99  0012               	moviw fsr0++
 10207  1E9A  1903               	btfsc	3,2
 10208  1E9B  0008               	return
 10209                           
 10210                           ;EUSART.c: 79:    EUSART_Write(text[i]);
 10211  1E9C  0872               	movf	EUSART_Write_Text@text,w
 10212  1E9D  0775               	addwf	EUSART_Write_Text@i,w
 10213  1E9E  0084               	movwf	4
 10214  1E9F  0873               	movf	EUSART_Write_Text@text+1,w
 10215  1EA0  3D76               	addwfc	EUSART_Write_Text@i+1,w
 10216  1EA1  0085               	movwf	5
 10217  1EA2  0800               	movf	0,w	;code access
 10218  1EA3  319D  25AA  319E   	fcall	_EUSART_Write
 10219  1EA6  3001               	movlw	1
 10220  1EA7  07F5               	addwf	EUSART_Write_Text@i,f
 10221  1EA8  3000               	movlw	0
 10222  1EA9  3DF6               	addwfc	EUSART_Write_Text@i+1,f
 10223  1EAA  2E93               	goto	l5023
 10224  1EAB                     __end_of_EUSART_Write_Text:	
 10225                           
 10226                           	psect	text44
 10227  1DAA                     __ptext44:	
 10228 ;; *************** function _EUSART_Write *****************
 10229 ;; Defined at:
 10230 ;;		line 56 in file "EUSART.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;  txData          1    wreg     unsigned char 
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;  txData          1    1[COMMON] unsigned char 
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  1    wreg      void 
 10237 ;; Registers used:
 10238 ;;		wreg
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10247 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10248 ;;Total ram usage:        1 bytes
 10249 ;; Hardware stack levels used:    1
 10250 ;; Hardware stack levels required when called:    1
 10251 ;; This function calls:
 10252 ;;		Nothing
 10253 ;; This function is called by:
 10254 ;;		_EUSART_Write_Text
 10255 ;; This function uses a non-reentrant model
 10256 ;;
 10257                           
 10258                           
 10259                           ;psect for function _EUSART_Write
 10260  1DAA                     _EUSART_Write:	
 10261                           
 10262                           ;incstack = 0
 10263                           ; Regs used in _EUSART_Write: [wreg]
 10264                           ;EUSART_Write@txData stored from wreg
 10265  1DAA  00F1               	movwf	EUSART_Write@txData
 10266  1DAB                     l202:	
 10267                           ;EUSART.c: 59:     {;EUSART.c: 60:     }
 10268                           
 10269                           
 10270                           ;EUSART.c: 58:     while(0 == PIR1bits.TXIF)
 10271  1DAB  0020               	movlb	0	; select bank0
 10272  1DAC  1E11               	btfss	17,4	;volatile
 10273  1DAD  2DAB               	goto	l202
 10274                           
 10275                           ;EUSART.c: 62:     TX1REG = txData;
 10276  1DAE  0871               	movf	EUSART_Write@txData,w
 10277  1DAF  0023               	movlb	3	; select bank3
 10278  1DB0  009A               	movwf	26	;volatile
 10279  1DB1  0008               	return
 10280  1DB2                     __end_of_EUSART_Write:	
 10281                           
 10282                           	psect	text45
 10283  1DE7                     __ptext45:	
 10284 ;; *************** function _init_TMR1 *****************
 10285 ;; Defined at:
 10286 ;;		line 172 in file "main.c"
 10287 ;; Parameters:    Size  Location     Type
 10288 ;;		None
 10289 ;; Auto vars:     Size  Location     Type
 10290 ;;		None
 10291 ;; Return value:  Size  Location     Type
 10292 ;;                  1    wreg      void 
 10293 ;; Registers used:
 10294 ;;		wreg, status,2, status,0
 10295 ;; Tracked objects:
 10296 ;;		On entry : 0/0
 10297 ;;		On exit  : 0/0
 10298 ;;		Unchanged: 0/0
 10299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10304 ;;Total ram usage:        0 bytes
 10305 ;; Hardware stack levels used:    1
 10306 ;; Hardware stack levels required when called:    1
 10307 ;; This function calls:
 10308 ;;		Nothing
 10309 ;; This function is called by:
 10310 ;;		_main
 10311 ;; This function uses a non-reentrant model
 10312 ;;
 10313                           
 10314                           
 10315                           ;psect for function _init_TMR1
 10316  1DE7                     _init_TMR1:	
 10317                           
 10318                           ;main.c: 175:     T1CONbits.T1CKPS = 0b00;
 10319                           
 10320                           ;incstack = 0
 10321                           ; Regs used in _init_TMR1: [wreg+status,2+status,0]
 10322  1DE7  30CF               	movlw	-49
 10323  1DE8  0020               	movlb	0	; select bank0
 10324  1DE9  0598               	andwf	24,f	;volatile
 10325                           
 10326                           ;main.c: 177:     TMR1 = 0;
 10327  1DEA  0196               	clrf	22	;volatile
 10328  1DEB  0197               	clrf	23	;volatile
 10329                           
 10330                           ;main.c: 179:     T1CONbits.TMR1ON = 1;
 10331  1DEC  1418               	bsf	24,0	;volatile
 10332                           
 10333                           ;main.c: 181:     PIE1bits.TMR1IE = 1;
 10334  1DED  0021               	movlb	1	; select bank1
 10335  1DEE  1411               	bsf	17,0	;volatile
 10336                           
 10337                           ;main.c: 183:     INTCONbits.PEIE = 1;
 10338  1DEF  170B               	bsf	11,6	;volatile
 10339                           
 10340                           ;main.c: 185:     (INTCONbits.GIE = 1);
 10341  1DF0  178B               	bsf	11,7	;volatile
 10342  1DF1  0008               	return
 10343  1DF2                     __end_of_init_TMR1:	
 10344                           
 10345                           	psect	text46
 10346  1D9E                     __ptext46:	
 10347 ;; *************** function _init_RGB *****************
 10348 ;; Defined at:
 10349 ;;		line 6 in file "RGB.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;		None
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;		None
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      void 
 10356 ;; Registers used:
 10357 ;;		None
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10367 ;;Total ram usage:        0 bytes
 10368 ;; Hardware stack levels used:    1
 10369 ;; Hardware stack levels required when called:    1
 10370 ;; This function calls:
 10371 ;;		Nothing
 10372 ;; This function is called by:
 10373 ;;		_main
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           
 10378                           ;psect for function _init_RGB
 10379  1D9E                     _init_RGB:	
 10380                           
 10381                           ;RGB.c: 8:     LATAbits.LATA4 = 1;
 10382                           
 10383                           ;incstack = 0
 10384                           ; Regs used in _init_RGB: []
 10385  1D9E  0022               	movlb	2	; select bank2
 10386  1D9F  160C               	bsf	12,4	;volatile
 10387                           
 10388                           ;RGB.c: 9:     LATAbits.LATA5 = 1;
 10389  1DA0  168C               	bsf	12,5	;volatile
 10390                           
 10391                           ;RGB.c: 10:     LATEbits.LATE0 = 1;
 10392  1DA1  1410               	bsf	16,0	;volatile
 10393  1DA2  0008               	return
 10394  1DA3                     __end_of_init_RGB:	
 10395                           
 10396                           	psect	text47
 10397  1DFE                     __ptext47:	
 10398 ;; *************** function _init_I2C *****************
 10399 ;; Defined at:
 10400 ;;		line 10 in file "I2C.c"
 10401 ;; Parameters:    Size  Location     Type
 10402 ;;		None
 10403 ;; Auto vars:     Size  Location     Type
 10404 ;;		None
 10405 ;; Return value:  Size  Location     Type
 10406 ;;                  1    wreg      void 
 10407 ;; Registers used:
 10408 ;;		wreg, status,2, status,0
 10409 ;; Tracked objects:
 10410 ;;		On entry : 0/0
 10411 ;;		On exit  : 0/0
 10412 ;;		Unchanged: 0/0
 10413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10417 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10418 ;;Total ram usage:        1 bytes
 10419 ;; Hardware stack levels used:    1
 10420 ;; Hardware stack levels required when called:    1
 10421 ;; This function calls:
 10422 ;;		Nothing
 10423 ;; This function is called by:
 10424 ;;		_main
 10425 ;; This function uses a non-reentrant model
 10426 ;;
 10427                           
 10428                           
 10429                           ;psect for function _init_I2C
 10430  1DFE                     _init_I2C:	
 10431                           
 10432                           ;I2C.c: 14:     SSPCONbits.SSPM = 0x08;
 10433                           
 10434                           ;incstack = 0
 10435                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
 10436  1DFE  0024               	movlb	4	; select bank4
 10437  1DFF  0815               	movf	21,w	;volatile
 10438  1E00  39F0               	andlw	-16
 10439  1E01  3808               	iorlw	8
 10440  1E02  0095               	movwf	21	;volatile
 10441                           
 10442                           ;I2C.c: 15:     SSPCONbits.SSPEN = 1;
 10443  1E03  1695               	bsf	21,5	;volatile
 10444                           
 10445                           ;I2C.c: 24:     SSPADD = 39;
 10446  1E04  3027               	movlw	39
 10447  1E05  0092               	movwf	18	;volatile
 10448                           
 10449                           ;I2C.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
 10450  1E06  3034               	movlw	52
 10451  1E07  00F1               	movwf	??_init_I2C
 10452  1E08  30F2               	movlw	242
 10453  1E09                     u6437:	
 10454  1E09  0B89               	decfsz	9,f
 10455  1E0A  2E09               	goto	u6437
 10456  1E0B  0BF1               	decfsz	??_init_I2C,f
 10457  1E0C  2E09               	goto	u6437
 10458  1E0D  0008               	return
 10459  1E0E                     __end_of_init_I2C:	
 10460                           
 10461                           	psect	text48
 10462  1052                     __ptext48:	
 10463 ;; *************** function _init_GPIO *****************
 10464 ;; Defined at:
 10465 ;;		line 189 in file "main.c"
 10466 ;; Parameters:    Size  Location     Type
 10467 ;;		None
 10468 ;; Auto vars:     Size  Location     Type
 10469 ;;		None
 10470 ;; Return value:  Size  Location     Type
 10471 ;;                  1    wreg      void 
 10472 ;; Registers used:
 10473 ;;		wreg, status,2, status,0
 10474 ;; Tracked objects:
 10475 ;;		On entry : 0/0
 10476 ;;		On exit  : 0/0
 10477 ;;		Unchanged: 0/0
 10478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10483 ;;Total ram usage:        0 bytes
 10484 ;; Hardware stack levels used:    1
 10485 ;; Hardware stack levels required when called:    1
 10486 ;; This function calls:
 10487 ;;		Nothing
 10488 ;; This function is called by:
 10489 ;;		_main
 10490 ;; This function uses a non-reentrant model
 10491 ;;
 10492                           
 10493                           
 10494                           ;psect for function _init_GPIO
 10495  1052                     _init_GPIO:	
 10496                           
 10497                           ;main.c: 195:     TRISBbits.TRISB2 = 0;
 10498                           
 10499                           ;incstack = 0
 10500                           ; Regs used in _init_GPIO: [wreg+status,2+status,0]
 10501  1052  0021               	movlb	1	; select bank1
 10502  1053  110D               	bcf	13,2	;volatile
 10503                           
 10504                           ;main.c: 196:     ANSELBbits.ANSB2 = 0;
 10505  1054  0023               	movlb	3	; select bank3
 10506  1055  110D               	bcf	13,2	;volatile
 10507                           
 10508                           ;main.c: 197:     TRISBbits.TRISB3 = 1;
 10509  1056  0021               	movlb	1	; select bank1
 10510  1057  158D               	bsf	13,3	;volatile
 10511                           
 10512                           ;main.c: 198:     ANSELBbits.ANSB3 = 0;
 10513  1058  0023               	movlb	3	; select bank3
 10514  1059  118D               	bcf	13,3	;volatile
 10515                           
 10516                           ;main.c: 203:     ANSELCbits.ANSC4 = 0;
 10517  105A  120E               	bcf	14,4	;volatile
 10518                           
 10519                           ;main.c: 204:     ANSELCbits.ANSC5 = 0;
 10520  105B  128E               	bcf	14,5	;volatile
 10521                           
 10522                           ;main.c: 205:     TRISCbits.TRISC4 = 1;
 10523  105C  0021               	movlb	1	; select bank1
 10524  105D  160E               	bsf	14,4	;volatile
 10525                           
 10526                           ;main.c: 206:     TRISCbits.TRISC5 = 1;
 10527  105E  168E               	bsf	14,5	;volatile
 10528                           
 10529                           ;main.c: 215:     TRISAbits.TRISA4 = 0;
 10530  105F  120C               	bcf	12,4	;volatile
 10531                           
 10532                           ;main.c: 216:     TRISAbits.TRISA5 = 0;
 10533  1060  128C               	bcf	12,5	;volatile
 10534                           
 10535                           ;main.c: 217:     TRISEbits.TRISE0 = 0;
 10536  1061  1010               	bcf	16,0	;volatile
 10537                           
 10538                           ;main.c: 223:     PPSLOCK = 0x55;
 10539  1062  3055               	movlw	85
 10540  1063  003C               	movlb	28	; select bank28
 10541  1064  008F               	movwf	15	;volsfr
 10542                           
 10543                           ;main.c: 224:     PPSLOCK = 0xAA;
 10544  1065  30AA               	movlw	170
 10545  1066  008F               	movwf	15	;volsfr
 10546                           
 10547                           ;main.c: 225:     PPSLOCKbits.PPSLOCKED = 0x00;
 10548  1067  100F               	bcf	15,0	;volsfr
 10549                           
 10550                           ;main.c: 229:     RC4PPSbits.RC4PPS = 0x0011;
 10551  1068  003D               	movlb	29	; select bank29
 10552  1069  0824               	movf	36,w	;volatile
 10553  106A  39E0               	andlw	-32
 10554  106B  3811               	iorlw	17
 10555  106C  00A4               	movwf	36	;volatile
 10556                           
 10557                           ;main.c: 230:     SSPDATPPSbits.SSPDATPPS = 0x0014;
 10558  106D  003C               	movlb	28	; select bank28
 10559  106E  0821               	movf	33,w	;volatile
 10560  106F  39E0               	andlw	-32
 10561  1070  3814               	iorlw	20
 10562  1071  00A1               	movwf	33	;volatile
 10563                           
 10564                           ;main.c: 231:     SSPCLKPPSbits.SSPCLKPPS = 0x0015;
 10565  1072  0820               	movf	32,w	;volatile
 10566  1073  39E0               	andlw	-32
 10567  1074  3815               	iorlw	21
 10568  1075  00A0               	movwf	32	;volatile
 10569                           
 10570                           ;main.c: 232:     RC5PPSbits.RC5PPS = 0x0010;
 10571  1076  003D               	movlb	29	; select bank29
 10572  1077  0825               	movf	37,w	;volatile
 10573  1078  39E0               	andlw	-32
 10574  1079  3810               	iorlw	16
 10575  107A  00A5               	movwf	37	;volatile
 10576                           
 10577                           ;main.c: 235:     RB2PPSbits.RB2PPS = 0x14;
 10578  107B  081A               	movf	26,w	;volatile
 10579  107C  39E0               	andlw	-32
 10580  107D  3814               	iorlw	20
 10581  107E  009A               	movwf	26	;volatile
 10582                           
 10583                           ;main.c: 236:     RXPPSbits.RXPPS = 0x0B;
 10584  107F  003C               	movlb	28	; select bank28
 10585  1080  0824               	movf	36,w	;volatile
 10586  1081  39E0               	andlw	-32
 10587  1082  380B               	iorlw	11
 10588  1083  00A4               	movwf	36	;volatile
 10589                           
 10590                           ;main.c: 238:     PPSLOCK = 0x55;
 10591  1084  3055               	movlw	85
 10592  1085  008F               	movwf	15	;volsfr
 10593                           
 10594                           ;main.c: 239:     PPSLOCK = 0xAA;
 10595  1086  30AA               	movlw	170
 10596  1087  008F               	movwf	15	;volsfr
 10597                           
 10598                           ;main.c: 240:     PPSLOCKbits.PPSLOCKED = 0x01;
 10599  1088  140F               	bsf	15,0	;volsfr
 10600  1089  0008               	return
 10601  108A                     __end_of_init_GPIO:	
 10602                           
 10603                           	psect	text49
 10604  1D9B                     __ptext49:	
 10605 ;; *************** function _initClock *****************
 10606 ;; Defined at:
 10607 ;;		line 163 in file "main.c"
 10608 ;; Parameters:    Size  Location     Type
 10609 ;;		None
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;		None
 10612 ;; Return value:  Size  Location     Type
 10613 ;;                  1    wreg      void 
 10614 ;; Registers used:
 10615 ;;		status,2, status,0, pclath, cstack
 10616 ;; Tracked objects:
 10617 ;;		On entry : 0/0
 10618 ;;		On exit  : 0/0
 10619 ;;		Unchanged: 0/0
 10620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10625 ;;Total ram usage:        0 bytes
 10626 ;; Hardware stack levels used:    1
 10627 ;; Hardware stack levels required when called:    2
 10628 ;; This function calls:
 10629 ;;		_internal_16
 10630 ;; This function is called by:
 10631 ;;		_main
 10632 ;; This function uses a non-reentrant model
 10633 ;;
 10634                           
 10635                           
 10636                           ;psect for function _initClock
 10637  1D9B                     _initClock:	
 10638                           
 10639                           ;main.c: 165:     internal_16();
 10640                           
 10641                           ;incstack = 0
 10642                           ; Regs used in _initClock: [status,2+status,0+pclath+cstack]
 10643  1D9B  319D  25C2         	fcall	_internal_16
 10644  1D9D  0008               	return
 10645  1D9E                     __end_of_initClock:	
 10646                           
 10647                           	psect	text50
 10648  1DC2                     __ptext50:	
 10649 ;; *************** function _internal_16 *****************
 10650 ;; Defined at:
 10651 ;;		line 26 in file "pic16f1719_internals.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;		None
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  1    wreg      void 
 10658 ;; Registers used:
 10659 ;;		None
 10660 ;; Tracked objects:
 10661 ;;		On entry : 0/0
 10662 ;;		On exit  : 0/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10669 ;;Total ram usage:        0 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; Hardware stack levels required when called:    1
 10672 ;; This function calls:
 10673 ;;		Nothing
 10674 ;; This function is called by:
 10675 ;;		_initClock
 10676 ;; This function uses a non-reentrant model
 10677 ;;
 10678                           
 10679                           
 10680                           ;psect for function _internal_16
 10681  1DC2                     _internal_16:	
 10682                           
 10683                           ;pic16f1719_internals.c: 28: SCS0 = 0;
 10684                           
 10685                           ;incstack = 0
 10686                           ; Regs used in _internal_16: []
 10687  1DC2  0021               	movlb	1	; select bank1
 10688  1DC3  1019               	bcf	25,0	;volatile
 10689                           
 10690                           ;pic16f1719_internals.c: 29: SCS1 = 0;
 10691  1DC4  1099               	bcf	25,1	;volatile
 10692                           
 10693                           ;pic16f1719_internals.c: 31: IRCF0 = 1;
 10694  1DC5  1599               	bsf	25,3	;volatile
 10695                           
 10696                           ;pic16f1719_internals.c: 32: IRCF1 = 1;
 10697  1DC6  1619               	bsf	25,4	;volatile
 10698                           
 10699                           ;pic16f1719_internals.c: 33: IRCF2 = 1;
 10700  1DC7  1699               	bsf	25,5	;volatile
 10701                           
 10702                           ;pic16f1719_internals.c: 34: IRCF3 = 1;
 10703  1DC8  1719               	bsf	25,6	;volatile
 10704                           
 10705                           ;pic16f1719_internals.c: 36: SPLLEN = 0;
 10706  1DC9  1399               	bcf	25,7	;volatile
 10707  1DCA  0008               	return
 10708  1DCB                     __end_of_internal_16:	
 10709                           
 10710                           	psect	text51
 10711  1424                     __ptext51:	
 10712 ;; *************** function _EUSART_Initialize *****************
 10713 ;; Defined at:
 10714 ;;		line 6 in file "EUSART.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;  baudrate        4    6[BANK0 ] const long 
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;  x               2   10[COMMON] unsigned int 
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      unsigned char 
 10721 ;; Registers used:
 10722 ;;		wreg, status,2, status,0, pclath, cstack
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10728 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10730 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10731 ;;      Totals:         2      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10732 ;;Total ram usage:       18 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; Hardware stack levels required when called:    2
 10735 ;; This function calls:
 10736 ;;		___aldiv
 10737 ;; This function is called by:
 10738 ;;		_main
 10739 ;; This function uses a non-reentrant model
 10740 ;;
 10741                           
 10742                           
 10743                           ;psect for function _EUSART_Initialize
 10744  1424                     _EUSART_Initialize:	
 10745                           
 10746                           ;EUSART.c: 6: char EUSART_Initialize(const long int baudrate);EUSART.c: 7: {;EUSART.c: 8
      +                          :  unsigned int x;;EUSART.c: 9:  x = (16000000 - baudrate*64)/(baudrate*64);
 10747                           
 10748                           ;incstack = 0
 10749                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10750  1424  0020               	movlb	0	; select bank0
 10751  1425  0826               	movf	EUSART_Initialize@baudrate,w
 10752  1426  00AA               	movwf	??_EUSART_Initialize
 10753  1427  0827               	movf	EUSART_Initialize@baudrate+1,w
 10754  1428  00AB               	movwf	??_EUSART_Initialize+1
 10755  1429  0828               	movf	EUSART_Initialize@baudrate+2,w
 10756  142A  00AC               	movwf	??_EUSART_Initialize+2
 10757  142B  0829               	movf	EUSART_Initialize@baudrate+3,w
 10758  142C  00AD               	movwf	??_EUSART_Initialize+3
 10759  142D  3006               	movlw	6
 10760  142E                     u4305:	
 10761  142E  35AA               	lslf	??_EUSART_Initialize,f
 10762  142F  0DAB               	rlf	??_EUSART_Initialize+1,f
 10763  1430  0DAC               	rlf	??_EUSART_Initialize+2,f
 10764  1431  0DAD               	rlf	??_EUSART_Initialize+3,f
 10765  1432  0B89               	decfsz	9,f
 10766  1433  2C2E               	goto	u4305
 10767  1434  082D               	movf	??_EUSART_Initialize+3,w
 10768  1435  00F4               	movwf	___aldiv@divisor+3
 10769  1436  082C               	movf	??_EUSART_Initialize+2,w
 10770  1437  00F3               	movwf	___aldiv@divisor+2
 10771  1438  082B               	movf	??_EUSART_Initialize+1,w
 10772  1439  00F2               	movwf	___aldiv@divisor+1
 10773  143A  082A               	movf	??_EUSART_Initialize,w
 10774  143B  00F1               	movwf	___aldiv@divisor
 10775  143C  0826               	movf	EUSART_Initialize@baudrate,w
 10776  143D  00AE               	movwf	??_EUSART_Initialize+4
 10777  143E  0827               	movf	EUSART_Initialize@baudrate+1,w
 10778  143F  00AF               	movwf	??_EUSART_Initialize+5
 10779  1440  0828               	movf	EUSART_Initialize@baudrate+2,w
 10780  1441  00B0               	movwf	??_EUSART_Initialize+6
 10781  1442  0829               	movf	EUSART_Initialize@baudrate+3,w
 10782  1443  00B1               	movwf	??_EUSART_Initialize+7
 10783  1444  3006               	movlw	6
 10784  1445                     u4315:	
 10785  1445  35AE               	lslf	??_EUSART_Initialize+4,f
 10786  1446  0DAF               	rlf	??_EUSART_Initialize+5,f
 10787  1447  0DB0               	rlf	??_EUSART_Initialize+6,f
 10788  1448  0DB1               	rlf	??_EUSART_Initialize+7,f
 10789  1449  0B89               	decfsz	9,f
 10790  144A  2C45               	goto	u4315
 10791  144B  3000               	movlw	0
 10792  144C  00B2               	movwf	??_EUSART_Initialize+8
 10793  144D  3024               	movlw	36
 10794  144E  00B3               	movwf	??_EUSART_Initialize+9
 10795  144F  30F4               	movlw	244
 10796  1450  00B4               	movwf	??_EUSART_Initialize+10
 10797  1451  3000               	movlw	0
 10798  1452  00B5               	movwf	??_EUSART_Initialize+11
 10799  1453  082E               	movf	??_EUSART_Initialize+4,w
 10800  1454  02B2               	subwf	??_EUSART_Initialize+8,f
 10801  1455  082F               	movf	??_EUSART_Initialize+5,w
 10802  1456  3BB3               	subwfb	??_EUSART_Initialize+9,f
 10803  1457  0830               	movf	??_EUSART_Initialize+6,w
 10804  1458  3BB4               	subwfb	??_EUSART_Initialize+10,f
 10805  1459  0831               	movf	??_EUSART_Initialize+7,w
 10806  145A  3BB5               	subwfb	??_EUSART_Initialize+11,f
 10807  145B  0835               	movf	??_EUSART_Initialize+11,w
 10808  145C  00F8               	movwf	___aldiv@dividend+3
 10809  145D  0834               	movf	??_EUSART_Initialize+10,w
 10810  145E  00F7               	movwf	___aldiv@dividend+2
 10811  145F  0833               	movf	??_EUSART_Initialize+9,w
 10812  1460  00F6               	movwf	___aldiv@dividend+1
 10813  1461  0832               	movf	??_EUSART_Initialize+8,w
 10814  1462  00F5               	movwf	___aldiv@dividend
 10815  1463  3192  2265  3194   	fcall	___aldiv
 10816  1466  0872               	movf	?___aldiv+1,w
 10817  1467  00FB               	movwf	EUSART_Initialize@x+1
 10818  1468  0871               	movf	?___aldiv,w
 10819  1469  00FA               	movwf	EUSART_Initialize@x
 10820                           
 10821                           ;EUSART.c: 10:  if(x>255)
 10822  146A  3001               	movlw	1
 10823  146B  027B               	subwf	EUSART_Initialize@x+1,w
 10824  146C  3000               	movlw	0
 10825  146D  1903               	skipnz
 10826  146E  027A               	subwf	EUSART_Initialize@x,w
 10827  146F  1C03               	skipc
 10828  1470  2CB9               	goto	l3767
 10829                           
 10830                           ;EUSART.c: 11:  {;EUSART.c: 12:   x = (16000000 - baudrate*16)/(baudrate*16);
 10831  1471  0020               	movlb	0	; select bank0
 10832  1472  0826               	movf	EUSART_Initialize@baudrate,w
 10833  1473  00AA               	movwf	??_EUSART_Initialize
 10834  1474  0827               	movf	EUSART_Initialize@baudrate+1,w
 10835  1475  00AB               	movwf	??_EUSART_Initialize+1
 10836  1476  0828               	movf	EUSART_Initialize@baudrate+2,w
 10837  1477  00AC               	movwf	??_EUSART_Initialize+2
 10838  1478  0829               	movf	EUSART_Initialize@baudrate+3,w
 10839  1479  00AD               	movwf	??_EUSART_Initialize+3
 10840  147A  3004               	movlw	4
 10841  147B                     u4335:	
 10842  147B  35AA               	lslf	??_EUSART_Initialize,f
 10843  147C  0DAB               	rlf	??_EUSART_Initialize+1,f
 10844  147D  0DAC               	rlf	??_EUSART_Initialize+2,f
 10845  147E  0DAD               	rlf	??_EUSART_Initialize+3,f
 10846  147F  0B89               	decfsz	9,f
 10847  1480  2C7B               	goto	u4335
 10848  1481  082D               	movf	??_EUSART_Initialize+3,w
 10849  1482  00F4               	movwf	___aldiv@divisor+3
 10850  1483  082C               	movf	??_EUSART_Initialize+2,w
 10851  1484  00F3               	movwf	___aldiv@divisor+2
 10852  1485  082B               	movf	??_EUSART_Initialize+1,w
 10853  1486  00F2               	movwf	___aldiv@divisor+1
 10854  1487  082A               	movf	??_EUSART_Initialize,w
 10855  1488  00F1               	movwf	___aldiv@divisor
 10856  1489  0826               	movf	EUSART_Initialize@baudrate,w
 10857  148A  00AE               	movwf	??_EUSART_Initialize+4
 10858  148B  0827               	movf	EUSART_Initialize@baudrate+1,w
 10859  148C  00AF               	movwf	??_EUSART_Initialize+5
 10860  148D  0828               	movf	EUSART_Initialize@baudrate+2,w
 10861  148E  00B0               	movwf	??_EUSART_Initialize+6
 10862  148F  0829               	movf	EUSART_Initialize@baudrate+3,w
 10863  1490  00B1               	movwf	??_EUSART_Initialize+7
 10864  1491  3004               	movlw	4
 10865  1492                     u4345:	
 10866  1492  35AE               	lslf	??_EUSART_Initialize+4,f
 10867  1493  0DAF               	rlf	??_EUSART_Initialize+5,f
 10868  1494  0DB0               	rlf	??_EUSART_Initialize+6,f
 10869  1495  0DB1               	rlf	??_EUSART_Initialize+7,f
 10870  1496  0B89               	decfsz	9,f
 10871  1497  2C92               	goto	u4345
 10872  1498  3000               	movlw	0
 10873  1499  00B2               	movwf	??_EUSART_Initialize+8
 10874  149A  3024               	movlw	36
 10875  149B  00B3               	movwf	??_EUSART_Initialize+9
 10876  149C  30F4               	movlw	244
 10877  149D  00B4               	movwf	??_EUSART_Initialize+10
 10878  149E  3000               	movlw	0
 10879  149F  00B5               	movwf	??_EUSART_Initialize+11
 10880  14A0  082E               	movf	??_EUSART_Initialize+4,w
 10881  14A1  02B2               	subwf	??_EUSART_Initialize+8,f
 10882  14A2  082F               	movf	??_EUSART_Initialize+5,w
 10883  14A3  3BB3               	subwfb	??_EUSART_Initialize+9,f
 10884  14A4  0830               	movf	??_EUSART_Initialize+6,w
 10885  14A5  3BB4               	subwfb	??_EUSART_Initialize+10,f
 10886  14A6  0831               	movf	??_EUSART_Initialize+7,w
 10887  14A7  3BB5               	subwfb	??_EUSART_Initialize+11,f
 10888  14A8  0835               	movf	??_EUSART_Initialize+11,w
 10889  14A9  00F8               	movwf	___aldiv@dividend+3
 10890  14AA  0834               	movf	??_EUSART_Initialize+10,w
 10891  14AB  00F7               	movwf	___aldiv@dividend+2
 10892  14AC  0833               	movf	??_EUSART_Initialize+9,w
 10893  14AD  00F6               	movwf	___aldiv@dividend+1
 10894  14AE  0832               	movf	??_EUSART_Initialize+8,w
 10895  14AF  00F5               	movwf	___aldiv@dividend
 10896  14B0  3192  2265  3194   	fcall	___aldiv
 10897  14B3  0872               	movf	?___aldiv+1,w
 10898  14B4  00FB               	movwf	EUSART_Initialize@x+1
 10899  14B5  0871               	movf	?___aldiv,w
 10900  14B6  00FA               	movwf	EUSART_Initialize@x
 10901                           
 10902                           ;EUSART.c: 13:   BRGH = 1;
 10903  14B7  0023               	movlb	3	; select bank3
 10904  14B8  151E               	bsf	30,2	;volatile
 10905  14B9                     l3767:	
 10906                           
 10907                           ;EUSART.c: 15:  if(x<256)
 10908  14B9  3001               	movlw	1
 10909  14BA  027B               	subwf	EUSART_Initialize@x+1,w
 10910  14BB  3000               	movlw	0
 10911  14BC  1903               	skipnz
 10912  14BD  027A               	subwf	EUSART_Initialize@x,w
 10913  14BE  1803               	skipnc
 10914  14BF  0008               	return
 10915                           
 10916                           ;EUSART.c: 16:  {;EUSART.c: 17:    SPBRG = x;
 10917  14C0  087A               	movf	EUSART_Initialize@x,w
 10918  14C1  0023               	movlb	3	; select bank3
 10919  14C2  009B               	movwf	27	;volatile
 10920                           
 10921                           ;EUSART.c: 18:    SYNC = 0;
 10922  14C3  121E               	bcf	30,4	;volatile
 10923                           
 10924                           ;EUSART.c: 19:    SPEN = 1;
 10925  14C4  179D               	bsf	29,7	;volatile
 10926                           
 10927                           ;EUSART.c: 20:           TRISC7 = 1;
 10928  14C5  0021               	movlb	1	; select bank1
 10929  14C6  178E               	bsf	14,7	;volatile
 10930                           
 10931                           ;EUSART.c: 21:           TRISC6 = 1;
 10932  14C7  170E               	bsf	14,6	;volatile
 10933                           
 10934                           ;EUSART.c: 22:           CREN = 1;
 10935  14C8  0023               	movlb	3	; select bank3
 10936  14C9  161D               	bsf	29,4	;volatile
 10937                           
 10938                           ;EUSART.c: 23:           TXEN = 1;
 10939  14CA  169E               	bsf	30,5	;volatile
 10940  14CB  0008               	return
 10941  14CC                     __end_of_EUSART_Initialize:	
 10942                           
 10943                           	psect	text52
 10944  1265                     __ptext52:	
 10945 ;; *************** function ___aldiv *****************
 10946 ;; Defined at:
 10947 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\aldiv.c"
 10948 ;; Parameters:    Size  Location     Type
 10949 ;;  divisor         4    1[COMMON] long 
 10950 ;;  dividend        4    5[COMMON] long 
 10951 ;; Auto vars:     Size  Location     Type
 10952 ;;  quotient        4    2[BANK0 ] long 
 10953 ;;  sign            1    1[BANK0 ] unsigned char 
 10954 ;;  counter         1    0[BANK0 ] unsigned char 
 10955 ;; Return value:  Size  Location     Type
 10956 ;;                  4    1[COMMON] long 
 10957 ;; Registers used:
 10958 ;;		wreg, status,2, status,0
 10959 ;; Tracked objects:
 10960 ;;		On entry : 0/0
 10961 ;;		On exit  : 0/0
 10962 ;;		Unchanged: 0/0
 10963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10964 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10965 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10967 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10968 ;;Total ram usage:       15 bytes
 10969 ;; Hardware stack levels used:    1
 10970 ;; Hardware stack levels required when called:    1
 10971 ;; This function calls:
 10972 ;;		Nothing
 10973 ;; This function is called by:
 10974 ;;		_EUSART_Initialize
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           
 10979                           ;psect for function ___aldiv
 10980  1265                     ___aldiv:	
 10981                           
 10982                           ;incstack = 0
 10983                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10984  1265  0020               	movlb	0	; select bank0
 10985  1266  01A1               	clrf	___aldiv@sign
 10986  1267  1FF4               	btfss	___aldiv@divisor+3,7
 10987  1268  2A76               	goto	l713
 10988  1269  09F1               	comf	___aldiv@divisor,f
 10989  126A  09F2               	comf	___aldiv@divisor+1,f
 10990  126B  09F3               	comf	___aldiv@divisor+2,f
 10991  126C  09F4               	comf	___aldiv@divisor+3,f
 10992  126D  0AF1               	incf	___aldiv@divisor,f
 10993  126E  1903               	skipnz
 10994  126F  0AF2               	incf	___aldiv@divisor+1,f
 10995  1270  1903               	skipnz
 10996  1271  0AF3               	incf	___aldiv@divisor+2,f
 10997  1272  1903               	skipnz
 10998  1273  0AF4               	incf	___aldiv@divisor+3,f
 10999  1274  01A1               	clrf	___aldiv@sign
 11000  1275  0AA1               	incf	___aldiv@sign,f
 11001  1276                     l713:	
 11002  1276  1FF8               	btfss	___aldiv@dividend+3,7
 11003  1277  2A87               	goto	l3729
 11004  1278  09F5               	comf	___aldiv@dividend,f
 11005  1279  09F6               	comf	___aldiv@dividend+1,f
 11006  127A  09F7               	comf	___aldiv@dividend+2,f
 11007  127B  09F8               	comf	___aldiv@dividend+3,f
 11008  127C  0AF5               	incf	___aldiv@dividend,f
 11009  127D  1903               	skipnz
 11010  127E  0AF6               	incf	___aldiv@dividend+1,f
 11011  127F  1903               	skipnz
 11012  1280  0AF7               	incf	___aldiv@dividend+2,f
 11013  1281  1903               	skipnz
 11014  1282  0AF8               	incf	___aldiv@dividend+3,f
 11015  1283  3001               	movlw	1
 11016  1284  00F9               	movwf	??___aldiv
 11017  1285  0879               	movf	??___aldiv,w
 11018  1286  06A1               	xorwf	___aldiv@sign,f
 11019  1287                     l3729:	
 11020  1287  3000               	movlw	0
 11021  1288  00A5               	movwf	___aldiv@quotient+3
 11022  1289  3000               	movlw	0
 11023  128A  00A4               	movwf	___aldiv@quotient+2
 11024  128B  3000               	movlw	0
 11025  128C  00A3               	movwf	___aldiv@quotient+1
 11026  128D  3000               	movlw	0
 11027  128E  00A2               	movwf	___aldiv@quotient
 11028  128F  0874               	movf	___aldiv@divisor+3,w
 11029  1290  0473               	iorwf	___aldiv@divisor+2,w
 11030  1291  0472               	iorwf	___aldiv@divisor+1,w
 11031  1292  0471               	iorwf	___aldiv@divisor,w
 11032  1293  1903               	skipnz
 11033  1294  2AD0               	goto	l3751
 11034  1295  01A0               	clrf	___aldiv@counter
 11035  1296  0AA0               	incf	___aldiv@counter,f
 11036  1297                     l3737:	
 11037  1297  1BF4               	btfsc	___aldiv@divisor+3,7
 11038  1298  2AA5               	goto	l3739
 11039  1299  3001               	movlw	1
 11040  129A                     u4235:	
 11041  129A  35F1               	lslf	___aldiv@divisor,f
 11042  129B  0DF2               	rlf	___aldiv@divisor+1,f
 11043  129C  0DF3               	rlf	___aldiv@divisor+2,f
 11044  129D  0DF4               	rlf	___aldiv@divisor+3,f
 11045  129E  0B89               	decfsz	9,f
 11046  129F  2A9A               	goto	u4235
 11047  12A0  3001               	movlw	1
 11048  12A1  00F9               	movwf	??___aldiv
 11049  12A2  0879               	movf	??___aldiv,w
 11050  12A3  07A0               	addwf	___aldiv@counter,f
 11051  12A4  2A97               	goto	l3737
 11052  12A5                     l3739:	
 11053  12A5  3001               	movlw	1
 11054  12A6                     u4255:	
 11055  12A6  35A2               	lslf	___aldiv@quotient,f
 11056  12A7  0DA3               	rlf	___aldiv@quotient+1,f
 11057  12A8  0DA4               	rlf	___aldiv@quotient+2,f
 11058  12A9  0DA5               	rlf	___aldiv@quotient+3,f
 11059  12AA  0B89               	decfsz	9,f
 11060  12AB  2AA6               	goto	u4255
 11061  12AC  0874               	movf	___aldiv@divisor+3,w
 11062  12AD  0278               	subwf	___aldiv@dividend+3,w
 11063  12AE  1D03               	skipz
 11064  12AF  2ABA               	goto	u4265
 11065  12B0  0873               	movf	___aldiv@divisor+2,w
 11066  12B1  0277               	subwf	___aldiv@dividend+2,w
 11067  12B2  1D03               	skipz
 11068  12B3  2ABA               	goto	u4265
 11069  12B4  0872               	movf	___aldiv@divisor+1,w
 11070  12B5  0276               	subwf	___aldiv@dividend+1,w
 11071  12B6  1D03               	skipz
 11072  12B7  2ABA               	goto	u4265
 11073  12B8  0871               	movf	___aldiv@divisor,w
 11074  12B9  0275               	subwf	___aldiv@dividend,w
 11075  12BA                     u4265:	
 11076  12BA  1C03               	skipc
 11077  12BB  2AC5               	goto	l3747
 11078  12BC  0871               	movf	___aldiv@divisor,w
 11079  12BD  02F5               	subwf	___aldiv@dividend,f
 11080  12BE  0872               	movf	___aldiv@divisor+1,w
 11081  12BF  3BF6               	subwfb	___aldiv@dividend+1,f
 11082  12C0  0873               	movf	___aldiv@divisor+2,w
 11083  12C1  3BF7               	subwfb	___aldiv@dividend+2,f
 11084  12C2  0874               	movf	___aldiv@divisor+3,w
 11085  12C3  3BF8               	subwfb	___aldiv@dividend+3,f
 11086  12C4  1422               	bsf	___aldiv@quotient,0
 11087  12C5                     l3747:	
 11088  12C5  3001               	movlw	1
 11089  12C6                     u4275:	
 11090  12C6  36F4               	lsrf	___aldiv@divisor+3,f
 11091  12C7  0CF3               	rrf	___aldiv@divisor+2,f
 11092  12C8  0CF2               	rrf	___aldiv@divisor+1,f
 11093  12C9  0CF1               	rrf	___aldiv@divisor,f
 11094  12CA  0B89               	decfsz	9,f
 11095  12CB  2AC6               	goto	u4275
 11096  12CC  3001               	movlw	1
 11097  12CD  02A0               	subwf	___aldiv@counter,f
 11098  12CE  1D03               	btfss	3,2
 11099  12CF  2AA5               	goto	l3739
 11100  12D0                     l3751:	
 11101  12D0  0821               	movf	___aldiv@sign,w
 11102  12D1  1903               	btfsc	3,2
 11103  12D2  2ADE               	goto	l3755
 11104  12D3  09A2               	comf	___aldiv@quotient,f
 11105  12D4  09A3               	comf	___aldiv@quotient+1,f
 11106  12D5  09A4               	comf	___aldiv@quotient+2,f
 11107  12D6  09A5               	comf	___aldiv@quotient+3,f
 11108  12D7  0AA2               	incf	___aldiv@quotient,f
 11109  12D8  1903               	skipnz
 11110  12D9  0AA3               	incf	___aldiv@quotient+1,f
 11111  12DA  1903               	skipnz
 11112  12DB  0AA4               	incf	___aldiv@quotient+2,f
 11113  12DC  1903               	skipnz
 11114  12DD  0AA5               	incf	___aldiv@quotient+3,f
 11115  12DE                     l3755:	
 11116  12DE  0825               	movf	___aldiv@quotient+3,w
 11117  12DF  00F4               	movwf	?___aldiv+3
 11118  12E0  0824               	movf	___aldiv@quotient+2,w
 11119  12E1  00F3               	movwf	?___aldiv+2
 11120  12E2  0823               	movf	___aldiv@quotient+1,w
 11121  12E3  00F2               	movwf	?___aldiv+1
 11122  12E4  0822               	movf	___aldiv@quotient,w
 11123  12E5  00F1               	movwf	?___aldiv
 11124  12E6  0008               	return
 11125  12E7                     __end_of___aldiv:	
 11126                           
 11127                           	psect	intentry
 11128  0004                     __pintentry:	
 11129 ;; *************** function _myIsr *****************
 11130 ;; Defined at:
 11131 ;;		line 58 in file "main.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;		None
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;		None
 11136 ;; Return value:  Size  Location     Type
 11137 ;;                  1    wreg      void 
 11138 ;; Registers used:
 11139 ;;		wreg, status,2, status,0
 11140 ;; Tracked objects:
 11141 ;;		On entry : 0/0
 11142 ;;		On exit  : 0/0
 11143 ;;		Unchanged: 0/0
 11144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11147 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11148 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11149 ;;Total ram usage:        1 bytes
 11150 ;; Hardware stack levels used:    1
 11151 ;; This function calls:
 11152 ;;		Nothing
 11153 ;; This function is called by:
 11154 ;;		Interrupt level 1
 11155 ;; This function uses a non-reentrant model
 11156 ;;
 11157                           
 11158  0004                     _myIsr:	
 11159                           
 11160                           ;incstack = 0
 11161  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 11162                           
 11163                           ; Regs used in _myIsr: [wreg+status,2+status,0]
 11164  0005  3180               	pagesel	$
 11165                           
 11166                           ;main.c: 60:     static uint8_t count = 0;;main.c: 62:     if (PIR1bits.TMR1IF && PIE1bi
      +                          ts.TMR1IE) {
 11167  0006  0020               	movlb	0	; select bank0
 11168  0007  1C11               	btfss	17,0	;volatile
 11169  0008  281C               	goto	i1l105
 11170  0009  0021               	movlb	1	; select bank1
 11171  000A  1C11               	btfss	17,0	;volatile
 11172  000B  281C               	goto	i1l105
 11173                           
 11174                           ;main.c: 63:         PIR1bits.TMR1IF = 0;
 11175  000C  0020               	movlb	0	; select bank0
 11176  000D  1011               	bcf	17,0	;volatile
 11177                           
 11178                           ;main.c: 64:         count++;
 11179  000E  3001               	movlw	1
 11180  000F  00F0               	movwf	??_myIsr
 11181  0010  0870               	movf	??_myIsr,w
 11182  0011  0021               	movlb	1	; select bank1
 11183  0012  07E8               	addwf	myIsr@count^(0+128),f
 11184                           
 11185                           ;main.c: 67:         if (count == 61) {
 11186  0013  303D               	movlw	61
 11187  0014  0668               	xorwf	myIsr@count^(0+128),w
 11188  0015  1D03               	btfss	3,2
 11189  0016  281C               	goto	i1l105
 11190                           
 11191                           ;main.c: 68:             tmr1_flag = 1;
 11192  0017  3001               	movlw	1
 11193  0018  00F0               	movwf	??_myIsr
 11194  0019  0870               	movf	??_myIsr,w
 11195  001A  00E9               	movwf	_tmr1_flag^(0+128)	;volatile
 11196                           
 11197                           ;main.c: 69:             count = 0;
 11198  001B  01E8               	clrf	myIsr@count^(0+128)
 11199  001C                     i1l105:	
 11200  001C  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 11201  001D  0009               	retfie
 11202  001E                     __end_of_myIsr:	
 11203  007E                     btemp	set	126	;btemp
 11204  007E                     int$flags	set	126
 11205  007E                     wtemp0	set	126
 11206  2771                     
 11207                           	psect	text5_split_1
 11208  04A6                     l4595:	
 11209                           
 11210                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 802:       
      +                            if (!strncmp(*fmt, "hhd", ((sizeof("hhd")/sizeof("hhd"[0]))-1)) || !strncmp(*fmt, "hhi
      +                          ", ((sizeof("hhi")/sizeof("hhi"[0]))-1))) {
 11211  04A6  0859               	movf	vfpfcnvrt@fmt,w
 11212  04A7  0086               	movwf	6
 11213  04A8  0187               	clrf	7
 11214  04A9  3F40               	moviw [0]fsr1
 11215  04AA  00F1               	movwf	strncmp@_l
 11216  04AB  3F41               	moviw [1]fsr1
 11217  04AC  00F2               	movwf	strncmp@_l+1
 11218  04AD  3063               	movlw	low (STR_7| (0+32768))
 11219  04AE  00F3               	movwf	strncmp@_r
 11220  04AF  30A1               	movlw	high (STR_7| (0+32768))
 11221  04B0  00F4               	movwf	strncmp@_r+1
 11222  04B1  3003               	movlw	3
 11223  04B2  00F5               	movwf	strncmp@n
 11224  04B3  3000               	movlw	0
 11225  04B4  00F6               	movwf	strncmp@n+1
 11226  04B5  3190  20DB  3184   	fcall	_strncmp
 11227  04B8  0871               	movf	?_strncmp,w
 11228  04B9  0472               	iorwf	?_strncmp+1,w
 11229  04BA  1903               	btfsc	3,2
 11230  04BB  2CD3               	goto	l4599
 11231  04BC  0020               	movlb	0	; select bank0
 11232  04BD  0859               	movf	vfpfcnvrt@fmt,w
 11233  04BE  0086               	movwf	6
 11234  04BF  0187               	clrf	7
 11235  04C0  3F40               	moviw [0]fsr1
 11236  04C1  00F1               	movwf	strncmp@_l
 11237  04C2  3F41               	moviw [1]fsr1
 11238  04C3  00F2               	movwf	strncmp@_l+1
 11239  04C4  3067               	movlw	low (STR_11| (0+32768))
 11240  04C5  00F3               	movwf	strncmp@_r
 11241  04C6  30A1               	movlw	high (STR_11| (0+32768))
 11242  04C7  00F4               	movwf	strncmp@_r+1
 11243  04C8  3003               	movlw	3
 11244  04C9  00F5               	movwf	strncmp@n
 11245  04CA  3000               	movlw	0
 11246  04CB  00F6               	movwf	strncmp@n+1
 11247  04CC  3190  20DB  3184   	fcall	_strncmp
 11248  04CF  0871               	movf	?_strncmp,w
 11249  04D0  0472               	iorwf	?_strncmp+1,w
 11250  04D1  1D03               	btfss	3,2
 11251  04D2  2D1E               	goto	l4607
 11252  04D3                     l4599:	
 11253                           
 11254                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 803: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 805:             
      +                          *fmt += ((sizeof("hhd")/sizeof("hhd"[0]))-1);
 11255  04D3  0020               	movlb	0	; select bank0
 11256  04D4  0859               	movf	vfpfcnvrt@fmt,w
 11257  04D5  0086               	movwf	6
 11258  04D6  0187               	clrf	7
 11259  04D7  3003               	movlw	3
 11260  04D8  0781               	addwf	1,f
 11261  04D9  3141               	addfsr 1,1
 11262  04DA  1803               	skipnc
 11263  04DB  0A81               	incf	1,f
 11264                           
 11265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 806:       
      +                                ll = (long long)(signed char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11266  04DC  085A               	movf	vfpfcnvrt@ap,w
 11267  04DD  0086               	movwf	6
 11268  04DE  0187               	clrf	7
 11269  04DF  0801               	movf	1,w
 11270  04E0  0084               	movwf	4
 11271  04E1  0185               	clrf	5
 11272  04E2  3002               	movlw	2
 11273  04E3  0781               	addwf	1,f
 11274  04E4  0800               	movf	0,w
 11275  04E5  0021               	movlb	1	; select bank1
 11276  04E6  00A7               	movwf	vfpfcnvrt@ll^(0+128)
 11277  04E7  3980               	andlw	128
 11278  04E8  1D03               	skipz
 11279  04E9  30FF               	movlw	255
 11280  04EA  00A8               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 11281  04EB  00A9               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 11282  04EC  00AA               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 11283  04ED  00AB               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 11284  04EE  00AC               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 11285  04EF  00AD               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 11286  04F0  00AE               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 11287                           
 11288                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 808:       
      +                                return dtoa(fp, ll);
 11289  04F1  0020               	movlb	0	; select bank0
 11290  04F2  0858               	movf	vfpfcnvrt@fp+1,w
 11291  04F3  00B1               	movwf	dtoa@fp+1
 11292  04F4  0857               	movf	vfpfcnvrt@fp,w
 11293  04F5  00B0               	movwf	dtoa@fp
 11294  04F6  0021               	movlb	1	; select bank1
 11295  04F7  0827               	movf	vfpfcnvrt@ll^(0+128),w
 11296  04F8  0020               	movlb	0	; select bank0
 11297  04F9  00B2               	movwf	dtoa@d
 11298  04FA  0021               	movlb	1	; select bank1
 11299  04FB  0828               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 11300  04FC  0020               	movlb	0	; select bank0
 11301  04FD  00B3               	movwf	dtoa@d+1
 11302  04FE  0021               	movlb	1	; select bank1
 11303  04FF  0829               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 11304  0500  0020               	movlb	0	; select bank0
 11305  0501  00B4               	movwf	dtoa@d+2
 11306  0502  0021               	movlb	1	; select bank1
 11307  0503  082A               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 11308  0504  0020               	movlb	0	; select bank0
 11309  0505  00B5               	movwf	dtoa@d+3
 11310  0506  0021               	movlb	1	; select bank1
 11311  0507  082B               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 11312  0508  0020               	movlb	0	; select bank0
 11313  0509  00B6               	movwf	dtoa@d+4
 11314  050A  0021               	movlb	1	; select bank1
 11315  050B  082C               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 11316  050C  0020               	movlb	0	; select bank0
 11317  050D  00B7               	movwf	dtoa@d+5
 11318  050E  0021               	movlb	1	; select bank1
 11319  050F  082D               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 11320  0510  0020               	movlb	0	; select bank0
 11321  0511  00B8               	movwf	dtoa@d+6
 11322  0512  0021               	movlb	1	; select bank1
 11323  0513  082E               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 11324  0514  0020               	movlb	0	; select bank0
 11325  0515  00B9               	movwf	dtoa@d+7
 11326  0516  3183  2353         	fcall	_dtoa
 11327  0518  0020               	movlb	0	; select bank0
 11328  0519  0831               	movf	?_dtoa+1,w
 11329  051A  00D8               	movwf	?_vfpfcnvrt+1
 11330  051B  0830               	movf	?_dtoa,w
 11331  051C  00D7               	movwf	?_vfpfcnvrt
 11332  051D  0008               	return
 11333  051E                     l4607:	
 11334                           
 11335                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 814:       
      +                            if (!strncmp(*fmt, "hd", ((sizeof("hd")/sizeof("hd"[0]))-1)) || !strncmp(*fmt, "hi", (
      +                          (sizeof("hi")/sizeof("hi"[0]))-1))) {
 11336  051E  0020               	movlb	0	; select bank0
 11337  051F  0859               	movf	vfpfcnvrt@fmt,w
 11338  0520  0086               	movwf	6
 11339  0521  0187               	clrf	7
 11340  0522  3F40               	moviw [0]fsr1
 11341  0523  00F1               	movwf	strncmp@_l
 11342  0524  3F41               	moviw [1]fsr1
 11343  0525  00F2               	movwf	strncmp@_l+1
 11344  0526  3064               	movlw	low ((STR_7+1)| (0+32768))
 11345  0527  00F3               	movwf	strncmp@_r
 11346  0528  30A1               	movlw	high ((STR_7+1)| (0+32768))
 11347  0529  00F4               	movwf	strncmp@_r+1
 11348  052A  3002               	movlw	2
 11349  052B  00F5               	movwf	strncmp@n
 11350  052C  3000               	movlw	0
 11351  052D  00F6               	movwf	strncmp@n+1
 11352  052E  3190  20DB  3184   	fcall	_strncmp
 11353  0531  0871               	movf	?_strncmp,w
 11354  0532  0472               	iorwf	?_strncmp+1,w
 11355  0533  1903               	btfsc	3,2
 11356  0534  2D4C               	goto	l4611
 11357  0535  0020               	movlb	0	; select bank0
 11358  0536  0859               	movf	vfpfcnvrt@fmt,w
 11359  0537  0086               	movwf	6
 11360  0538  0187               	clrf	7
 11361  0539  3F40               	moviw [0]fsr1
 11362  053A  00F1               	movwf	strncmp@_l
 11363  053B  3F41               	moviw [1]fsr1
 11364  053C  00F2               	movwf	strncmp@_l+1
 11365  053D  3068               	movlw	low ((STR_11+1)| (0+32768))
 11366  053E  00F3               	movwf	strncmp@_r
 11367  053F  30A1               	movlw	high ((STR_11+1)| (0+32768))
 11368  0540  00F4               	movwf	strncmp@_r+1
 11369  0541  3002               	movlw	2
 11370  0542  00F5               	movwf	strncmp@n
 11371  0543  3000               	movlw	0
 11372  0544  00F6               	movwf	strncmp@n+1
 11373  0545  3190  20DB  3184   	fcall	_strncmp
 11374  0548  0871               	movf	?_strncmp,w
 11375  0549  0472               	iorwf	?_strncmp+1,w
 11376  054A  1D03               	btfss	3,2
 11377  054B  2D9E               	goto	L6
 11378  054C                     l4611:	
 11379                           
 11380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 815: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 817:             
      +                          *fmt += ((sizeof("hd")/sizeof("hd"[0]))-1);
 11381  054C  0020               	movlb	0	; select bank0
 11382  054D  0859               	movf	vfpfcnvrt@fmt,w
 11383  054E  0086               	movwf	6
 11384  054F  0187               	clrf	7
 11385  0550  3002               	movlw	2
 11386  0551  0781               	addwf	1,f
 11387  0552  3141               	addfsr 1,1
 11388  0553  1803               	skipnc
 11389  0554  0A81               	incf	1,f
 11390                           
 11391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 818:       
      +                                ll = (long long)(short)(*(int *)__va_arg(*(int **)ap, (int)0));
 11392  0555  085A               	movf	vfpfcnvrt@ap,w
 11393  0556  0086               	movwf	6
 11394  0557  0187               	clrf	7
 11395  0558  0801               	movf	1,w
 11396  0559  0084               	movwf	4
 11397  055A  0185               	clrf	5
 11398  055B  3002               	movlw	2
 11399  055C  0781               	addwf	1,f
 11400  055D  3F00               	moviw [0]fsr0
 11401  055E  00DB               	movwf	??_vfpfcnvrt
 11402  055F  3F01               	moviw [1]fsr0
 11403  0560  00DC               	movwf	??_vfpfcnvrt+1
 11404  0561  085B               	movf	??_vfpfcnvrt,w
 11405  0562  0021               	movlb	1	; select bank1
 11406  0563  00A7               	movwf	vfpfcnvrt@ll^(0+128)
 11407  0564  0020               	movlb	0	; select bank0
 11408  0565  085C               	movf	??_vfpfcnvrt+1,w
 11409  0566  0021               	movlb	1	; select bank1
 11410  0567  00A8               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 11411  0568  0D89               	rlf	9,f
 11412  0569  3B89               	subwfb	9,f
 11413  056A  0989               	comf	9,f
 11414  056B  00A9               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 11415  056C  00AA               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 11416  056D  00AB               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 11417  056E  00AC               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 11418  056F  00AD               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 11419  0570  00AE               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 11420                           
 11421                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 820:       
      +                                return dtoa(fp, ll);
 11422  0571  0020               	movlb	0	; select bank0
 11423  0572  0858               	movf	vfpfcnvrt@fp+1,w
 11424  0573  00B1               	movwf	dtoa@fp+1
 11425  0574  0857               	movf	vfpfcnvrt@fp,w
 11426  0575  00B0               	movwf	dtoa@fp
 11427  0576  0021               	movlb	1	; select bank1
 11428  0577  0827               	movf	vfpfcnvrt@ll^(0+128),w
 11429  0578  0020               	movlb	0	; select bank0
 11430  0579  00B2               	movwf	dtoa@d
 11431  057A  0021               	movlb	1	; select bank1
 11432  057B  0828               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 11433  057C  0020               	movlb	0	; select bank0
 11434  057D  00B3               	movwf	dtoa@d+1
 11435  057E  0021               	movlb	1	; select bank1
 11436  057F  0829               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 11437  0580  0020               	movlb	0	; select bank0
 11438  0581  00B4               	movwf	dtoa@d+2
 11439  0582  0021               	movlb	1	; select bank1
 11440  0583  082A               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 11441  0584  0020               	movlb	0	; select bank0
 11442  0585  00B5               	movwf	dtoa@d+3
 11443  0586  0021               	movlb	1	; select bank1
 11444  0587  082B               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 11445  0588  0020               	movlb	0	; select bank0
 11446  0589  00B6               	movwf	dtoa@d+4
 11447  058A  0021               	movlb	1	; select bank1
 11448  058B  082C               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 11449  058C  0020               	movlb	0	; select bank0
 11450  058D  00B7               	movwf	dtoa@d+5
 11451  058E  0021               	movlb	1	; select bank1
 11452  058F  082D               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 11453  0590  0020               	movlb	0	; select bank0
 11454  0591  00B8               	movwf	dtoa@d+6
 11455  0592  0021               	movlb	1	; select bank1
 11456  0593  082E               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 11457  0594  0020               	movlb	0	; select bank0
 11458  0595  00B9               	movwf	dtoa@d+7
 11459  0596  3183  2353         	fcall	_dtoa
 11460  0598  0020               	movlb	0	; select bank0
 11461  0599  0831               	movf	?_dtoa+1,w
 11462  059A  00D8               	movwf	?_vfpfcnvrt+1
 11463  059B  0830               	movf	?_dtoa,w
 11464  059C  00D7               	movwf	?_vfpfcnvrt
 11465  059D  0008               	return
 11466  059E                     L6:	
 11467  059E                     L5:	
 11468  059E  3188  2831         	ljmp	l4619
 11469                           
 11470                           	psect	text5_split_2
 11471  0831                     l4619:	
 11472                           
 11473                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 825:       
      +                            if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11474  0831  0020               	movlb	0	; select bank0
 11475  0832  0859               	movf	vfpfcnvrt@fmt,w
 11476  0833  0086               	movwf	6
 11477  0834  0187               	clrf	7
 11478  0835  3F40               	moviw [0]fsr1
 11479  0836  00DB               	movwf	??_vfpfcnvrt
 11480  0837  3F41               	moviw [1]fsr1
 11481  0838  00DC               	movwf	??_vfpfcnvrt+1
 11482  0839  085B               	movf	??_vfpfcnvrt,w
 11483  083A  0084               	movwf	4
 11484  083B  085C               	movf	??_vfpfcnvrt+1,w
 11485  083C  0085               	movwf	5
 11486  083D  0012               	moviw fsr0++
 11487  083E  3A64               	xorlw	100
 11488  083F  1903               	btfsc	3,2
 11489  0840  2850               	goto	l4623
 11490  0841  0859               	movf	vfpfcnvrt@fmt,w
 11491  0842  0086               	movwf	6
 11492  0843  0187               	clrf	7
 11493  0844  3F40               	moviw [0]fsr1
 11494  0845  00DB               	movwf	??_vfpfcnvrt
 11495  0846  3F41               	moviw [1]fsr1
 11496  0847  00DC               	movwf	??_vfpfcnvrt+1
 11497  0848  085B               	movf	??_vfpfcnvrt,w
 11498  0849  0084               	movwf	4
 11499  084A  085C               	movf	??_vfpfcnvrt+1,w
 11500  084B  0085               	movwf	5
 11501  084C  0012               	moviw fsr0++
 11502  084D  3A69               	xorlw	105
 11503  084E  1D03               	btfss	3,2
 11504  084F  28A1               	goto	l4631
 11505  0850                     l4623:	
 11506                           
 11507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 827:       
      +                                ++*fmt;
 11508  0850  0859               	movf	vfpfcnvrt@fmt,w
 11509  0851  0086               	movwf	6
 11510  0852  0187               	clrf	7
 11511  0853  3001               	movlw	1
 11512  0854  0781               	addwf	1,f
 11513  0855  3141               	addfsr 1,1
 11514  0856  1803               	skipnc
 11515  0857  0A81               	incf	1,f
 11516                           
 11517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 828:       
      +                                ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11518  0858  085A               	movf	vfpfcnvrt@ap,w
 11519  0859  0086               	movwf	6
 11520  085A  0187               	clrf	7
 11521  085B  0801               	movf	1,w
 11522  085C  0084               	movwf	4
 11523  085D  0185               	clrf	5
 11524  085E  3002               	movlw	2
 11525  085F  0781               	addwf	1,f
 11526  0860  3F00               	moviw [0]fsr0
 11527  0861  00DB               	movwf	??_vfpfcnvrt
 11528  0862  3F01               	moviw [1]fsr0
 11529  0863  00DC               	movwf	??_vfpfcnvrt+1
 11530  0864  085B               	movf	??_vfpfcnvrt,w
 11531  0865  0021               	movlb	1	; select bank1
 11532  0866  00A7               	movwf	vfpfcnvrt@ll^(0+128)
 11533  0867  0020               	movlb	0	; select bank0
 11534  0868  085C               	movf	??_vfpfcnvrt+1,w
 11535  0869  0021               	movlb	1	; select bank1
 11536  086A  00A8               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 11537  086B  0D89               	rlf	9,f
 11538  086C  3B89               	subwfb	9,f
 11539  086D  0989               	comf	9,f
 11540  086E  00A9               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 11541  086F  00AA               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 11542  0870  00AB               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 11543  0871  00AC               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 11544  0872  00AD               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 11545  0873  00AE               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 11546                           
 11547                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 830:       
      +                                return dtoa(fp, ll);
 11548  0874  0020               	movlb	0	; select bank0
 11549  0875  0858               	movf	vfpfcnvrt@fp+1,w
 11550  0876  00B1               	movwf	dtoa@fp+1
 11551  0877  0857               	movf	vfpfcnvrt@fp,w
 11552  0878  00B0               	movwf	dtoa@fp
 11553  0879  0021               	movlb	1	; select bank1
 11554  087A  0827               	movf	vfpfcnvrt@ll^(0+128),w
 11555  087B  0020               	movlb	0	; select bank0
 11556  087C  00B2               	movwf	dtoa@d
 11557  087D  0021               	movlb	1	; select bank1
 11558  087E  0828               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 11559  087F  0020               	movlb	0	; select bank0
 11560  0880  00B3               	movwf	dtoa@d+1
 11561  0881  0021               	movlb	1	; select bank1
 11562  0882  0829               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 11563  0883  0020               	movlb	0	; select bank0
 11564  0884  00B4               	movwf	dtoa@d+2
 11565  0885  0021               	movlb	1	; select bank1
 11566  0886  082A               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 11567  0887  0020               	movlb	0	; select bank0
 11568  0888  00B5               	movwf	dtoa@d+3
 11569  0889  0021               	movlb	1	; select bank1
 11570  088A  082B               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 11571  088B  0020               	movlb	0	; select bank0
 11572  088C  00B6               	movwf	dtoa@d+4
 11573  088D  0021               	movlb	1	; select bank1
 11574  088E  082C               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 11575  088F  0020               	movlb	0	; select bank0
 11576  0890  00B7               	movwf	dtoa@d+5
 11577  0891  0021               	movlb	1	; select bank1
 11578  0892  082D               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 11579  0893  0020               	movlb	0	; select bank0
 11580  0894  00B8               	movwf	dtoa@d+6
 11581  0895  0021               	movlb	1	; select bank1
 11582  0896  082E               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 11583  0897  0020               	movlb	0	; select bank0
 11584  0898  00B9               	movwf	dtoa@d+7
 11585  0899  3183  2353         	fcall	_dtoa
 11586  089B  0020               	movlb	0	; select bank0
 11587  089C  0831               	movf	?_dtoa+1,w
 11588  089D  00D8               	movwf	?_vfpfcnvrt+1
 11589  089E  0830               	movf	?_dtoa,w
 11590  089F  00D7               	movwf	?_vfpfcnvrt
 11591  08A0  0008               	return
 11592  08A1                     l4631:	
 11593                           
 11594                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 883:       
      +                            if (!strncmp(*fmt, "zd", ((sizeof("zd")/sizeof("zd"[0]))-1)) || !strncmp(*fmt, "zi", (
      +                          (sizeof("zi")/sizeof("zi"[0]))-1))) {
 11595  08A1  0859               	movf	vfpfcnvrt@fmt,w
 11596  08A2  0086               	movwf	6
 11597  08A3  0187               	clrf	7
 11598  08A4  3F40               	moviw [0]fsr1
 11599  08A5  00F1               	movwf	strncmp@_l
 11600  08A6  3F41               	moviw [1]fsr1
 11601  08A7  00F2               	movwf	strncmp@_l+1
 11602  08A8  307E               	movlw	low (STR_25| (0+32768))
 11603  08A9  00F3               	movwf	strncmp@_r
 11604  08AA  30A1               	movlw	high (STR_25| (0+32768))
 11605  08AB  00F4               	movwf	strncmp@_r+1
 11606  08AC  3002               	movlw	2
 11607  08AD  00F5               	movwf	strncmp@n
 11608  08AE  3000               	movlw	0
 11609  08AF  00F6               	movwf	strncmp@n+1
 11610  08B0  3190  20DB  3188   	fcall	_strncmp
 11611  08B3  0871               	movf	?_strncmp,w
 11612  08B4  0472               	iorwf	?_strncmp+1,w
 11613  08B5  1903               	btfsc	3,2
 11614  08B6  28CE               	goto	l4635
 11615  08B7  0020               	movlb	0	; select bank0
 11616  08B8  0859               	movf	vfpfcnvrt@fmt,w
 11617  08B9  0086               	movwf	6
 11618  08BA  0187               	clrf	7
 11619  08BB  3F40               	moviw [0]fsr1
 11620  08BC  00F1               	movwf	strncmp@_l
 11621  08BD  3F41               	moviw [1]fsr1
 11622  08BE  00F2               	movwf	strncmp@_l+1
 11623  08BF  3081               	movlw	low (STR_29| (0+32768))
 11624  08C0  00F3               	movwf	strncmp@_r
 11625  08C1  30A1               	movlw	high (STR_29| (0+32768))
 11626  08C2  00F4               	movwf	strncmp@_r+1
 11627  08C3  3002               	movlw	2
 11628  08C4  00F5               	movwf	strncmp@n
 11629  08C5  3000               	movlw	0
 11630  08C6  00F6               	movwf	strncmp@n+1
 11631  08C7  3190  20DB  3188   	fcall	_strncmp
 11632  08CA  0871               	movf	?_strncmp,w
 11633  08CB  0472               	iorwf	?_strncmp+1,w
 11634  08CC  1D03               	btfss	3,2
 11635  08CD  2917               	goto	l4643
 11636  08CE                     l4635:	
 11637                           
 11638                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 884: ;C:\Pr
      +                          ogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 886:             
      +                          *fmt += ((sizeof("zd")/sizeof("zd"[0]))-1);
 11639  08CE  0020               	movlb	0	; select bank0
 11640  08CF  0859               	movf	vfpfcnvrt@fmt,w
 11641  08D0  0086               	movwf	6
 11642  08D1  0187               	clrf	7
 11643  08D2  3002               	movlw	2
 11644  08D3  0781               	addwf	1,f
 11645  08D4  3141               	addfsr 1,1
 11646  08D5  1803               	skipnc
 11647  08D6  0A81               	incf	1,f
 11648                           
 11649                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 887:       
      +                                ll = (long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 11650  08D7  085A               	movf	vfpfcnvrt@ap,w
 11651  08D8  0086               	movwf	6
 11652  08D9  0187               	clrf	7
 11653  08DA  0801               	movf	1,w
 11654  08DB  0084               	movwf	4
 11655  08DC  0185               	clrf	5
 11656  08DD  3002               	movlw	2
 11657  08DE  0781               	addwf	1,f
 11658  08DF  3F00               	moviw [0]fsr0
 11659  08E0  0021               	movlb	1	; select bank1
 11660  08E1  00A7               	movwf	vfpfcnvrt@ll^(0+128)
 11661  08E2  3F01               	moviw [1]fsr0
 11662  08E3  00A8               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 11663  08E4  01A9               	clrf	(vfpfcnvrt@ll+2)^(0+128)
 11664  08E5  01AA               	clrf	(vfpfcnvrt@ll+3)^(0+128)
 11665  08E6  01AB               	clrf	(vfpfcnvrt@ll+4)^(0+128)
 11666  08E7  01AC               	clrf	(vfpfcnvrt@ll+5)^(0+128)
 11667  08E8  01AD               	clrf	(vfpfcnvrt@ll+6)^(0+128)
 11668  08E9  01AE               	clrf	(vfpfcnvrt@ll+7)^(0+128)
 11669                           
 11670                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 889:       
      +                                return dtoa(fp, ll);
 11671  08EA  0020               	movlb	0	; select bank0
 11672  08EB  0858               	movf	vfpfcnvrt@fp+1,w
 11673  08EC  00B1               	movwf	dtoa@fp+1
 11674  08ED  0857               	movf	vfpfcnvrt@fp,w
 11675  08EE  00B0               	movwf	dtoa@fp
 11676  08EF  0021               	movlb	1	; select bank1
 11677  08F0  0827               	movf	vfpfcnvrt@ll^(0+128),w
 11678  08F1  0020               	movlb	0	; select bank0
 11679  08F2  00B2               	movwf	dtoa@d
 11680  08F3  0021               	movlb	1	; select bank1
 11681  08F4  0828               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 11682  08F5  0020               	movlb	0	; select bank0
 11683  08F6  00B3               	movwf	dtoa@d+1
 11684  08F7  0021               	movlb	1	; select bank1
 11685  08F8  0829               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 11686  08F9  0020               	movlb	0	; select bank0
 11687  08FA  00B4               	movwf	dtoa@d+2
 11688  08FB  0021               	movlb	1	; select bank1
 11689  08FC  082A               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 11690  08FD  0020               	movlb	0	; select bank0
 11691  08FE  00B5               	movwf	dtoa@d+3
 11692  08FF  0021               	movlb	1	; select bank1
 11693  0900  082B               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 11694  0901  0020               	movlb	0	; select bank0
 11695  0902  00B6               	movwf	dtoa@d+4
 11696  0903  0021               	movlb	1	; select bank1
 11697  0904  082C               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 11698  0905  0020               	movlb	0	; select bank0
 11699  0906  00B7               	movwf	dtoa@d+5
 11700  0907  0021               	movlb	1	; select bank1
 11701  0908  082D               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 11702  0909  0020               	movlb	0	; select bank0
 11703  090A  00B8               	movwf	dtoa@d+6
 11704  090B  0021               	movlb	1	; select bank1
 11705  090C  082E               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 11706  090D  0020               	movlb	0	; select bank0
 11707  090E  00B9               	movwf	dtoa@d+7
 11708  090F  3183  2353         	fcall	_dtoa
 11709  0911  0020               	movlb	0	; select bank0
 11710  0912  0831               	movf	?_dtoa+1,w
 11711  0913  00D8               	movwf	?_vfpfcnvrt+1
 11712  0914  0830               	movf	?_dtoa,w
 11713  0915  00D7               	movwf	?_vfpfcnvrt
 11714  0916  0008               	return
 11715  0917                     l4643:	
 11716                           
 11717                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 969:       
      +                            if (!strncmp(*fmt, "hho", ((sizeof("hho")/sizeof("hho"[0]))-1))) {
 11718  0917  0020               	movlb	0	; select bank0
 11719  0918  0859               	movf	vfpfcnvrt@fmt,w
 11720  0919  0086               	movwf	6
 11721  091A  0187               	clrf	7
 11722  091B  3F40               	moviw [0]fsr1
 11723  091C  00F1               	movwf	strncmp@_l
 11724  091D  3F41               	moviw [1]fsr1
 11725  091E  00F2               	movwf	strncmp@_l+1
 11726  091F  306F               	movlw	low (STR_34| (0+32768))
 11727  0920  00F3               	movwf	strncmp@_r
 11728  0921  30A1               	movlw	high (STR_34| (0+32768))
 11729  0922  00F4               	movwf	strncmp@_r+1
 11730  0923  3003               	movlw	3
 11731  0924  00F5               	movwf	strncmp@n
 11732  0925  3000               	movlw	0
 11733  0926  00F6               	movwf	strncmp@n+1
 11734  0927  3190  20DB  3188   	fcall	_strncmp
 11735  092A  0871               	movf	?_strncmp,w
 11736  092B  0472               	iorwf	?_strncmp+1,w
 11737  092C  1D03               	btfss	3,2
 11738  092D  2976               	goto	l4653
 11739                           
 11740                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 971:       
      +                                *fmt += ((sizeof("hho")/sizeof("hho"[0]))-1);
 11741  092E  0020               	movlb	0	; select bank0
 11742  092F  0859               	movf	vfpfcnvrt@fmt,w
 11743  0930  0086               	movwf	6
 11744  0931  0187               	clrf	7
 11745  0932  3003               	movlw	3
 11746  0933  0781               	addwf	1,f
 11747  0934  3141               	addfsr 1,1
 11748  0935  1803               	skipnc
 11749  0936  0A81               	incf	1,f
 11750                           
 11751                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 972:       
      +                                llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11752  0937  085A               	movf	vfpfcnvrt@ap,w
 11753  0938  0086               	movwf	6
 11754  0939  0187               	clrf	7
 11755  093A  0801               	movf	1,w
 11756  093B  0084               	movwf	4
 11757  093C  0185               	clrf	5
 11758  093D  3002               	movlw	2
 11759  093E  0781               	addwf	1,f
 11760  093F  0800               	movf	0,w
 11761  0940  0021               	movlb	1	; select bank1
 11762  0941  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 11763  0942  01B2               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 11764  0943  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 11765  0944  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 11766  0945  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 11767  0946  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 11768  0947  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 11769  0948  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 11770                           
 11771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 974:       
      +                                return otoa(fp, llu);
 11772  0949  0020               	movlb	0	; select bank0
 11773  094A  0858               	movf	vfpfcnvrt@fp+1,w
 11774  094B  00B1               	movwf	otoa@fp+1
 11775  094C  0857               	movf	vfpfcnvrt@fp,w
 11776  094D  00B0               	movwf	otoa@fp
 11777  094E  0021               	movlb	1	; select bank1
 11778  094F  0831               	movf	vfpfcnvrt@llu^(0+128),w
 11779  0950  0020               	movlb	0	; select bank0
 11780  0951  00B2               	movwf	otoa@d
 11781  0952  0021               	movlb	1	; select bank1
 11782  0953  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 11783  0954  0020               	movlb	0	; select bank0
 11784  0955  00B3               	movwf	otoa@d+1
 11785  0956  0021               	movlb	1	; select bank1
 11786  0957  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 11787  0958  0020               	movlb	0	; select bank0
 11788  0959  00B4               	movwf	otoa@d+2
 11789  095A  0021               	movlb	1	; select bank1
 11790  095B  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 11791  095C  0020               	movlb	0	; select bank0
 11792  095D  00B5               	movwf	otoa@d+3
 11793  095E  0021               	movlb	1	; select bank1
 11794  095F  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 11795  0960  0020               	movlb	0	; select bank0
 11796  0961  00B6               	movwf	otoa@d+4
 11797  0962  0021               	movlb	1	; select bank1
 11798  0963  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 11799  0964  0020               	movlb	0	; select bank0
 11800  0965  00B7               	movwf	otoa@d+5
 11801  0966  0021               	movlb	1	; select bank1
 11802  0967  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 11803  0968  0020               	movlb	0	; select bank0
 11804  0969  00B8               	movwf	otoa@d+6
 11805  096A  0021               	movlb	1	; select bank1
 11806  096B  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 11807  096C  0020               	movlb	0	; select bank0
 11808  096D  00B9               	movwf	otoa@d+7
 11809  096E  3186  2693         	fcall	_otoa
 11810  0970  0020               	movlb	0	; select bank0
 11811  0971  0831               	movf	?_otoa+1,w
 11812  0972  00D8               	movwf	?_vfpfcnvrt+1
 11813  0973  0830               	movf	?_otoa,w
 11814  0974  00D7               	movwf	?_vfpfcnvrt
 11815  0975  0008               	return
 11816  0976                     l4653:	
 11817                           
 11818                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 980:       
      +                            if (!strncmp(*fmt, "ho", ((sizeof("ho")/sizeof("ho"[0]))-1))) {
 11819  0976  0020               	movlb	0	; select bank0
 11820  0977  0859               	movf	vfpfcnvrt@fmt,w
 11821  0978  0086               	movwf	6
 11822  0979  0187               	clrf	7
 11823  097A  3F40               	moviw [0]fsr1
 11824  097B  00F1               	movwf	strncmp@_l
 11825  097C  3F41               	moviw [1]fsr1
 11826  097D  00F2               	movwf	strncmp@_l+1
 11827  097E  3070               	movlw	low ((STR_34+1)| (0+32768))
 11828  097F  00F3               	movwf	strncmp@_r
 11829  0980  30A1               	movlw	high ((STR_34+1)| (0+32768))
 11830  0981  00F4               	movwf	strncmp@_r+1
 11831  0982  3002               	movlw	2
 11832  0983  00F5               	movwf	strncmp@n
 11833  0984  3000               	movlw	0
 11834  0985  00F6               	movwf	strncmp@n+1
 11835  0986  3190  20DB  3188   	fcall	_strncmp
 11836  0989  0871               	movf	?_strncmp,w
 11837  098A  0472               	iorwf	?_strncmp+1,w
 11838  098B  1D03               	btfss	3,2
 11839  098C  29D6               	goto	l4663
 11840                           
 11841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 982:       
      +                                *fmt += ((sizeof("ho")/sizeof("ho"[0]))-1);
 11842  098D  0020               	movlb	0	; select bank0
 11843  098E  0859               	movf	vfpfcnvrt@fmt,w
 11844  098F  0086               	movwf	6
 11845  0990  0187               	clrf	7
 11846  0991  3002               	movlw	2
 11847  0992  0781               	addwf	1,f
 11848  0993  3141               	addfsr 1,1
 11849  0994  1803               	skipnc
 11850  0995  0A81               	incf	1,f
 11851                           
 11852                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 983:       
      +                                llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0));
 11853  0996  085A               	movf	vfpfcnvrt@ap,w
 11854  0997  0086               	movwf	6
 11855  0998  0187               	clrf	7
 11856  0999  0801               	movf	1,w
 11857  099A  0084               	movwf	4
 11858  099B  0185               	clrf	5
 11859  099C  3002               	movlw	2
 11860  099D  0781               	addwf	1,f
 11861  099E  3F00               	moviw [0]fsr0
 11862  099F  0021               	movlb	1	; select bank1
 11863  09A0  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 11864  09A1  3F01               	moviw [1]fsr0
 11865  09A2  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 11866  09A3  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 11867  09A4  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 11868  09A5  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 11869  09A6  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 11870  09A7  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 11871  09A8  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 11872                           
 11873                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 985:       
      +                                return otoa(fp, llu);
 11874  09A9  0020               	movlb	0	; select bank0
 11875  09AA  0858               	movf	vfpfcnvrt@fp+1,w
 11876  09AB  00B1               	movwf	otoa@fp+1
 11877  09AC  0857               	movf	vfpfcnvrt@fp,w
 11878  09AD  00B0               	movwf	otoa@fp
 11879  09AE  0021               	movlb	1	; select bank1
 11880  09AF  0831               	movf	vfpfcnvrt@llu^(0+128),w
 11881  09B0  0020               	movlb	0	; select bank0
 11882  09B1  00B2               	movwf	otoa@d
 11883  09B2  0021               	movlb	1	; select bank1
 11884  09B3  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 11885  09B4  0020               	movlb	0	; select bank0
 11886  09B5  00B3               	movwf	otoa@d+1
 11887  09B6  0021               	movlb	1	; select bank1
 11888  09B7  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 11889  09B8  0020               	movlb	0	; select bank0
 11890  09B9  00B4               	movwf	otoa@d+2
 11891  09BA  0021               	movlb	1	; select bank1
 11892  09BB  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 11893  09BC  0020               	movlb	0	; select bank0
 11894  09BD  00B5               	movwf	otoa@d+3
 11895  09BE  0021               	movlb	1	; select bank1
 11896  09BF  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 11897  09C0  0020               	movlb	0	; select bank0
 11898  09C1  00B6               	movwf	otoa@d+4
 11899  09C2  0021               	movlb	1	; select bank1
 11900  09C3  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 11901  09C4  0020               	movlb	0	; select bank0
 11902  09C5  00B7               	movwf	otoa@d+5
 11903  09C6  0021               	movlb	1	; select bank1
 11904  09C7  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 11905  09C8  0020               	movlb	0	; select bank0
 11906  09C9  00B8               	movwf	otoa@d+6
 11907  09CA  0021               	movlb	1	; select bank1
 11908  09CB  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 11909  09CC  0020               	movlb	0	; select bank0
 11910  09CD  00B9               	movwf	otoa@d+7
 11911  09CE  3186  2693         	fcall	_otoa
 11912  09D0  0020               	movlb	0	; select bank0
 11913  09D1  0831               	movf	?_otoa+1,w
 11914  09D2  00D8               	movwf	?_vfpfcnvrt+1
 11915  09D3  0830               	movf	?_otoa,w
 11916  09D4  00D7               	movwf	?_vfpfcnvrt
 11917  09D5  0008               	return
 11918  09D6                     l4663:	
 11919                           
 11920                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 990:       
      +                            if (*fmt[0] == 'o') {
 11921  09D6  0020               	movlb	0	; select bank0
 11922  09D7  0859               	movf	vfpfcnvrt@fmt,w
 11923  09D8  0086               	movwf	6
 11924  09D9  0187               	clrf	7
 11925  09DA  3F40               	moviw [0]fsr1
 11926  09DB  00DB               	movwf	??_vfpfcnvrt
 11927  09DC  3F41               	moviw [1]fsr1
 11928  09DD  00DC               	movwf	??_vfpfcnvrt+1
 11929  09DE  085B               	movf	??_vfpfcnvrt,w
 11930  09DF  0084               	movwf	4
 11931  09E0  085C               	movf	??_vfpfcnvrt+1,w
 11932  09E1  0085               	movwf	5
 11933  09E2  0012               	moviw fsr0++
 11934  09E3  3A6F               	xorlw	111
 11935  09E4  1D03               	btfss	3,2
 11936  09E5  2A2E               	goto	l4673
 11937                           
 11938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 992:       
      +                                ++*fmt;
 11939  09E6  0859               	movf	vfpfcnvrt@fmt,w
 11940  09E7  0086               	movwf	6
 11941  09E8  0187               	clrf	7
 11942  09E9  3001               	movlw	1
 11943  09EA  0781               	addwf	1,f
 11944  09EB  3141               	addfsr 1,1
 11945  09EC  1803               	skipnc
 11946  09ED  0A81               	incf	1,f
 11947                           
 11948                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 993:       
      +                                llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsign
      +                          ed int)0));
 11949  09EE  085A               	movf	vfpfcnvrt@ap,w
 11950  09EF  0086               	movwf	6
 11951  09F0  0187               	clrf	7
 11952  09F1  0801               	movf	1,w
 11953  09F2  0084               	movwf	4
 11954  09F3  0185               	clrf	5
 11955  09F4  3002               	movlw	2
 11956  09F5  0781               	addwf	1,f
 11957  09F6  3F00               	moviw [0]fsr0
 11958  09F7  0021               	movlb	1	; select bank1
 11959  09F8  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 11960  09F9  3F01               	moviw [1]fsr0
 11961  09FA  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 11962  09FB  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 11963  09FC  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 11964  09FD  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 11965  09FE  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 11966  09FF  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 11967  0A00  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 11968                           
 11969                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 995:       
      +                                return otoa(fp, llu);
 11970  0A01  0020               	movlb	0	; select bank0
 11971  0A02  0858               	movf	vfpfcnvrt@fp+1,w
 11972  0A03  00B1               	movwf	otoa@fp+1
 11973  0A04  0857               	movf	vfpfcnvrt@fp,w
 11974  0A05  00B0               	movwf	otoa@fp
 11975  0A06  0021               	movlb	1	; select bank1
 11976  0A07  0831               	movf	vfpfcnvrt@llu^(0+128),w
 11977  0A08  0020               	movlb	0	; select bank0
 11978  0A09  00B2               	movwf	otoa@d
 11979  0A0A  0021               	movlb	1	; select bank1
 11980  0A0B  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 11981  0A0C  0020               	movlb	0	; select bank0
 11982  0A0D  00B3               	movwf	otoa@d+1
 11983  0A0E  0021               	movlb	1	; select bank1
 11984  0A0F  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 11985  0A10  0020               	movlb	0	; select bank0
 11986  0A11  00B4               	movwf	otoa@d+2
 11987  0A12  0021               	movlb	1	; select bank1
 11988  0A13  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 11989  0A14  0020               	movlb	0	; select bank0
 11990  0A15  00B5               	movwf	otoa@d+3
 11991  0A16  0021               	movlb	1	; select bank1
 11992  0A17  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 11993  0A18  0020               	movlb	0	; select bank0
 11994  0A19  00B6               	movwf	otoa@d+4
 11995  0A1A  0021               	movlb	1	; select bank1
 11996  0A1B  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 11997  0A1C  0020               	movlb	0	; select bank0
 11998  0A1D  00B7               	movwf	otoa@d+5
 11999  0A1E  0021               	movlb	1	; select bank1
 12000  0A1F  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 12001  0A20  0020               	movlb	0	; select bank0
 12002  0A21  00B8               	movwf	otoa@d+6
 12003  0A22  0021               	movlb	1	; select bank1
 12004  0A23  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 12005  0A24  0020               	movlb	0	; select bank0
 12006  0A25  00B9               	movwf	otoa@d+7
 12007  0A26  3186  2693         	fcall	_otoa
 12008  0A28  0020               	movlb	0	; select bank0
 12009  0A29  0831               	movf	?_otoa+1,w
 12010  0A2A  00D8               	movwf	?_vfpfcnvrt+1
 12011  0A2B  0830               	movf	?_otoa,w
 12012  0A2C  00D7               	movwf	?_vfpfcnvrt
 12013  0A2D  0008               	return
 12014  0A2E                     l4673:	
 12015                           
 12016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1044:      
      +                             if (!strncmp(*fmt, "zo", ((sizeof("zo")/sizeof("zo"[0]))-1))) {
 12017  0A2E  0859               	movf	vfpfcnvrt@fmt,w
 12018  0A2F  0086               	movwf	6
 12019  0A30  0187               	clrf	7
 12020  0A31  3F40               	moviw [0]fsr1
 12021  0A32  00F1               	movwf	strncmp@_l
 12022  0A33  3F41               	moviw [1]fsr1
 12023  0A34  00F2               	movwf	strncmp@_l+1
 12024  0A35  3087               	movlw	low (STR_44| (0+32768))
 12025  0A36  00F3               	movwf	strncmp@_r
 12026  0A37  30A1               	movlw	high (STR_44| (0+32768))
 12027  0A38  00F4               	movwf	strncmp@_r+1
 12028  0A39  3002               	movlw	2
 12029  0A3A  00F5               	movwf	strncmp@n
 12030  0A3B  3000               	movlw	0
 12031  0A3C  00F6               	movwf	strncmp@n+1
 12032  0A3D  3190  20DB  3188   	fcall	_strncmp
 12033  0A40  0871               	movf	?_strncmp,w
 12034  0A41  0472               	iorwf	?_strncmp+1,w
 12035  0A42  1D03               	btfss	3,2
 12036  0A43  2A8D               	goto	l4683
 12037                           
 12038                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1046:      
      +                                 *fmt += ((sizeof("zo")/sizeof("zo"[0]))-1);
 12039  0A44  0020               	movlb	0	; select bank0
 12040  0A45  0859               	movf	vfpfcnvrt@fmt,w
 12041  0A46  0086               	movwf	6
 12042  0A47  0187               	clrf	7
 12043  0A48  3002               	movlw	2
 12044  0A49  0781               	addwf	1,f
 12045  0A4A  3141               	addfsr 1,1
 12046  0A4B  1803               	skipnc
 12047  0A4C  0A81               	incf	1,f
 12048                           
 12049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1047:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 12050  0A4D  085A               	movf	vfpfcnvrt@ap,w
 12051  0A4E  0086               	movwf	6
 12052  0A4F  0187               	clrf	7
 12053  0A50  0801               	movf	1,w
 12054  0A51  0084               	movwf	4
 12055  0A52  0185               	clrf	5
 12056  0A53  3002               	movlw	2
 12057  0A54  0781               	addwf	1,f
 12058  0A55  3F00               	moviw [0]fsr0
 12059  0A56  0021               	movlb	1	; select bank1
 12060  0A57  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 12061  0A58  3F01               	moviw [1]fsr0
 12062  0A59  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 12063  0A5A  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 12064  0A5B  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 12065  0A5C  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 12066  0A5D  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 12067  0A5E  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 12068  0A5F  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 12069                           
 12070                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1049:      
      +                                 return otoa(fp, llu);
 12071  0A60  0020               	movlb	0	; select bank0
 12072  0A61  0858               	movf	vfpfcnvrt@fp+1,w
 12073  0A62  00B1               	movwf	otoa@fp+1
 12074  0A63  0857               	movf	vfpfcnvrt@fp,w
 12075  0A64  00B0               	movwf	otoa@fp
 12076  0A65  0021               	movlb	1	; select bank1
 12077  0A66  0831               	movf	vfpfcnvrt@llu^(0+128),w
 12078  0A67  0020               	movlb	0	; select bank0
 12079  0A68  00B2               	movwf	otoa@d
 12080  0A69  0021               	movlb	1	; select bank1
 12081  0A6A  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 12082  0A6B  0020               	movlb	0	; select bank0
 12083  0A6C  00B3               	movwf	otoa@d+1
 12084  0A6D  0021               	movlb	1	; select bank1
 12085  0A6E  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 12086  0A6F  0020               	movlb	0	; select bank0
 12087  0A70  00B4               	movwf	otoa@d+2
 12088  0A71  0021               	movlb	1	; select bank1
 12089  0A72  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 12090  0A73  0020               	movlb	0	; select bank0
 12091  0A74  00B5               	movwf	otoa@d+3
 12092  0A75  0021               	movlb	1	; select bank1
 12093  0A76  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 12094  0A77  0020               	movlb	0	; select bank0
 12095  0A78  00B6               	movwf	otoa@d+4
 12096  0A79  0021               	movlb	1	; select bank1
 12097  0A7A  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 12098  0A7B  0020               	movlb	0	; select bank0
 12099  0A7C  00B7               	movwf	otoa@d+5
 12100  0A7D  0021               	movlb	1	; select bank1
 12101  0A7E  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 12102  0A7F  0020               	movlb	0	; select bank0
 12103  0A80  00B8               	movwf	otoa@d+6
 12104  0A81  0021               	movlb	1	; select bank1
 12105  0A82  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 12106  0A83  0020               	movlb	0	; select bank0
 12107  0A84  00B9               	movwf	otoa@d+7
 12108  0A85  3186  2693         	fcall	_otoa
 12109  0A87  0020               	movlb	0	; select bank0
 12110  0A88  0831               	movf	?_otoa+1,w
 12111  0A89  00D8               	movwf	?_vfpfcnvrt+1
 12112  0A8A  0830               	movf	?_otoa,w
 12113  0A8B  00D7               	movwf	?_vfpfcnvrt
 12114  0A8C  0008               	return
 12115  0A8D                     l4683:	
 12116                           
 12117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1058:      
      +                             if (!strncmp(*fmt, "hhn", ((sizeof("hhn")/sizeof("hhn"[0]))-1))) {
 12118  0A8D  0020               	movlb	0	; select bank0
 12119  0A8E  0859               	movf	vfpfcnvrt@fmt,w
 12120  0A8F  0086               	movwf	6
 12121  0A90  0187               	clrf	7
 12122  0A91  3F40               	moviw [0]fsr1
 12123  0A92  00F1               	movwf	strncmp@_l
 12124  0A93  3F41               	moviw [1]fsr1
 12125  0A94  00F2               	movwf	strncmp@_l+1
 12126  0A95  306B               	movlw	low (STR_49| (0+32768))
 12127  0A96  00F3               	movwf	strncmp@_r
 12128  0A97  30A1               	movlw	high (STR_49| (0+32768))
 12129  0A98  00F4               	movwf	strncmp@_r+1
 12130  0A99  3003               	movlw	3
 12131  0A9A  00F5               	movwf	strncmp@n
 12132  0A9B  3000               	movlw	0
 12133  0A9C  00F6               	movwf	strncmp@n+1
 12134  0A9D  3190  20DB  3188   	fcall	_strncmp
 12135  0AA0  0871               	movf	?_strncmp,w
 12136  0AA1  0472               	iorwf	?_strncmp+1,w
 12137  0AA2  1D03               	btfss	3,2
 12138  0AA3  2B1D               	goto	l4695
 12139                           
 12140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1060:      
      +                                 *fmt += ((sizeof("hhn")/sizeof("hhn"[0]))-1);
 12141  0AA4  0020               	movlb	0	; select bank0
 12142  0AA5  0859               	movf	vfpfcnvrt@fmt,w
 12143  0AA6  0086               	movwf	6
 12144  0AA7  0187               	clrf	7
 12145  0AA8  3003               	movlw	3
 12146  0AA9  0781               	addwf	1,f
 12147  0AAA  3141               	addfsr 1,1
 12148  0AAB  1803               	skipnc
 12149  0AAC  0A81               	incf	1,f
 12150                           
 12151                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1061:      
      +                                 vp = (void *)(*(char * *)__va_arg(*(char * **)ap, (char *)0));
 12152  0AAD  085A               	movf	vfpfcnvrt@ap,w
 12153  0AAE  0086               	movwf	6
 12154  0AAF  0187               	clrf	7
 12155  0AB0  3F40               	moviw [0]fsr1
 12156  0AB1  0084               	movwf	4
 12157  0AB2  0185               	clrf	5
 12158  0AB3  0A81               	incf	1,f
 12159  0AB4  0800               	movf	0,w
 12160  0AB5  00DB               	movwf	??_vfpfcnvrt
 12161  0AB6  085B               	movf	??_vfpfcnvrt,w
 12162  0AB7  0021               	movlb	1	; select bank1
 12163  0AB8  00AF               	movwf	vfpfcnvrt@vp^(0+128)
 12164                           
 12165                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1062:      
      +                                 *(char *)vp = (char)nout;
 12166  0AB9  085C               	movf	_nout^(0+128),w
 12167  0ABA  0020               	movlb	0	; select bank0
 12168  0ABB  00DB               	movwf	??_vfpfcnvrt
 12169  0ABC  0021               	movlb	1	; select bank1
 12170  0ABD  082F               	movf	vfpfcnvrt@vp^(0+128),w
 12171  0ABE  0086               	movwf	6
 12172  0ABF  0187               	clrf	7
 12173  0AC0  0020               	movlb	0	; select bank0
 12174  0AC1  085B               	movf	??_vfpfcnvrt,w
 12175  0AC2  0081               	movwf	1
 12176  0AC3  2B19               	goto	l4691
 12177  0AC4                     l4697:	
 12178                           
 12179                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1070:      
      +                                 *fmt += ((sizeof("hn")/sizeof("hn"[0]))-1);
 12180  0AC4  0020               	movlb	0	; select bank0
 12181  0AC5  0859               	movf	vfpfcnvrt@fmt,w
 12182  0AC6  0086               	movwf	6
 12183  0AC7  0187               	clrf	7
 12184  0AC8  3002               	movlw	2
 12185  0AC9  0781               	addwf	1,f
 12186  0ACA  3141               	addfsr 1,1
 12187  0ACB  1803               	skipnc
 12188  0ACC  0A81               	incf	1,f
 12189                           
 12190                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1071:      
      +                                 vp = (void *)(*(short * *)__va_arg(*(short * **)ap, (short *)0));
 12191  0ACD  085A               	movf	vfpfcnvrt@ap,w
 12192  0ACE  0086               	movwf	6
 12193  0ACF  0187               	clrf	7
 12194  0AD0  3F40               	moviw [0]fsr1
 12195  0AD1  0084               	movwf	4
 12196  0AD2  0185               	clrf	5
 12197  0AD3  0A81               	incf	1,f
 12198  0AD4  0800               	movf	0,w
 12199  0AD5  00DB               	movwf	??_vfpfcnvrt
 12200  0AD6  085B               	movf	??_vfpfcnvrt,w
 12201  0AD7  0021               	movlb	1	; select bank1
 12202  0AD8  00AF               	movwf	vfpfcnvrt@vp^(0+128)
 12203                           
 12204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1072:      
      +                                 *(short *)vp = (short)nout;
 12205  0AD9  082F               	movf	vfpfcnvrt@vp^(0+128),w
 12206  0ADA  0086               	movwf	6
 12207  0ADB  0187               	clrf	7
 12208  0ADC  085C               	movf	_nout^(0+128),w
 12209  0ADD  3FC0               	movwi [0]fsr1
 12210  0ADE  085D               	movf	(_nout+1)^(0+128),w
 12211  0ADF  3FC1               	movwi [1]fsr1
 12212  0AE0  2B19               	goto	l4691
 12213  0AE1                     l4709:	
 12214                           
 12215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1078:      
      +                                 ++*fmt;
 12216  0AE1  0859               	movf	vfpfcnvrt@fmt,w
 12217  0AE2  0086               	movwf	6
 12218  0AE3  0187               	clrf	7
 12219  0AE4  3001               	movlw	1
 12220  0AE5  0781               	addwf	1,f
 12221  0AE6  3141               	addfsr 1,1
 12222  0AE7  1803               	skipnc
 12223  0AE8  0A81               	incf	1,f
 12224                           
 12225                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1079:      
      +                                 vp = (void *)(*(int * *)__va_arg(*(int * **)ap, (int *)0));
 12226  0AE9  085A               	movf	vfpfcnvrt@ap,w
 12227  0AEA  0086               	movwf	6
 12228  0AEB  0187               	clrf	7
 12229  0AEC  3F40               	moviw [0]fsr1
 12230  0AED  0084               	movwf	4
 12231  0AEE  0185               	clrf	5
 12232  0AEF  0A81               	incf	1,f
 12233  0AF0  0800               	movf	0,w
 12234  0AF1  00DB               	movwf	??_vfpfcnvrt
 12235  0AF2  085B               	movf	??_vfpfcnvrt,w
 12236  0AF3  0021               	movlb	1	; select bank1
 12237  0AF4  00AF               	movwf	vfpfcnvrt@vp^(0+128)
 12238                           
 12239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1080:      
      +                                 *(int *)vp = nout;
 12240  0AF5  082F               	movf	vfpfcnvrt@vp^(0+128),w
 12241  0AF6  0086               	movwf	6
 12242  0AF7  0187               	clrf	7
 12243  0AF8  085C               	movf	_nout^(0+128),w
 12244  0AF9  3FC0               	movwi [0]fsr1
 12245  0AFA  085D               	movf	(_nout+1)^(0+128),w
 12246  0AFB  3FC1               	movwi [1]fsr1
 12247  0AFC  2B19               	goto	l4691
 12248  0AFD                     l4721:	
 12249                           
 12250                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1127:      
      +                                 *fmt += ((sizeof("zn")/sizeof("zn"[0]))-1);
 12251  0AFD  0020               	movlb	0	; select bank0
 12252  0AFE  0859               	movf	vfpfcnvrt@fmt,w
 12253  0AFF  0086               	movwf	6
 12254  0B00  0187               	clrf	7
 12255  0B01  3002               	movlw	2
 12256  0B02  0781               	addwf	1,f
 12257  0B03  3141               	addfsr 1,1
 12258  0B04  1803               	skipnc
 12259  0B05  0A81               	incf	1,f
 12260                           
 12261                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1128:      
      +                                 vp = (void *)(*(size_t * *)__va_arg(*(size_t * **)ap, (size_t *)0));
 12262  0B06  085A               	movf	vfpfcnvrt@ap,w
 12263  0B07  0086               	movwf	6
 12264  0B08  0187               	clrf	7
 12265  0B09  3F40               	moviw [0]fsr1
 12266  0B0A  0084               	movwf	4
 12267  0B0B  0185               	clrf	5
 12268  0B0C  0A81               	incf	1,f
 12269  0B0D  0800               	movf	0,w
 12270  0B0E  00DB               	movwf	??_vfpfcnvrt
 12271  0B0F  085B               	movf	??_vfpfcnvrt,w
 12272  0B10  0021               	movlb	1	; select bank1
 12273  0B11  00AF               	movwf	vfpfcnvrt@vp^(0+128)
 12274                           
 12275                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1129:      
      +                                 *(size_t *)vp = (size_t)nout;
 12276  0B12  082F               	movf	vfpfcnvrt@vp^(0+128),w
 12277  0B13  0086               	movwf	6
 12278  0B14  0187               	clrf	7
 12279  0B15  085C               	movf	_nout^(0+128),w
 12280  0B16  3FC0               	movwi [0]fsr1
 12281  0B17  085D               	movf	(_nout+1)^(0+128),w
 12282  0B18  3FC1               	movwi [1]fsr1
 12283  0B19                     l4691:	
 12284                           
 12285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1063:      
      +                                 return 0;
 12286  0B19  0020               	movlb	0	; select bank0
 12287  0B1A  01D7               	clrf	?_vfpfcnvrt
 12288  0B1B  01D8               	clrf	?_vfpfcnvrt+1
 12289  0B1C  0008               	return
 12290  0B1D                     l4695:	
 12291                           
 12292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1068:      
      +                             if (!strncmp(*fmt, "hn", ((sizeof("hn")/sizeof("hn"[0]))-1))) {
 12293  0B1D  0020               	movlb	0	; select bank0
 12294  0B1E  0859               	movf	vfpfcnvrt@fmt,w
 12295  0B1F  0086               	movwf	6
 12296  0B20  0187               	clrf	7
 12297  0B21  3F40               	moviw [0]fsr1
 12298  0B22  00F1               	movwf	strncmp@_l
 12299  0B23  3F41               	moviw [1]fsr1
 12300  0B24  00F2               	movwf	strncmp@_l+1
 12301  0B25  306C               	movlw	low ((STR_49+1)| (0+32768))
 12302  0B26  00F3               	movwf	strncmp@_r
 12303  0B27  30A1               	movlw	high ((STR_49+1)| (0+32768))
 12304  0B28  00F4               	movwf	strncmp@_r+1
 12305  0B29  3002               	movlw	2
 12306  0B2A  00F5               	movwf	strncmp@n
 12307  0B2B  3000               	movlw	0
 12308  0B2C  00F6               	movwf	strncmp@n+1
 12309  0B2D  3190  20DB  3188   	fcall	_strncmp
 12310  0B30  0871               	movf	?_strncmp,w
 12311  0B31  0472               	iorwf	?_strncmp+1,w
 12312  0B32  1903               	btfsc	3,2
 12313  0B33  2AC4               	goto	l4697
 12314                           
 12315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1077:      
      +                             if (*fmt[0] == 'n') {
 12316  0B34  0020               	movlb	0	; select bank0
 12317  0B35  0859               	movf	vfpfcnvrt@fmt,w
 12318  0B36  0086               	movwf	6
 12319  0B37  0187               	clrf	7
 12320  0B38  3F40               	moviw [0]fsr1
 12321  0B39  00DB               	movwf	??_vfpfcnvrt
 12322  0B3A  3F41               	moviw [1]fsr1
 12323  0B3B  00DC               	movwf	??_vfpfcnvrt+1
 12324  0B3C  085B               	movf	??_vfpfcnvrt,w
 12325  0B3D  0084               	movwf	4
 12326  0B3E  085C               	movf	??_vfpfcnvrt+1,w
 12327  0B3F  0085               	movwf	5
 12328  0B40  0012               	moviw fsr0++
 12329  0B41  3A6E               	xorlw	110
 12330  0B42  1903               	btfsc	3,2
 12331  0B43  2AE1               	goto	l4709
 12332                           
 12333                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1125:      
      +                             if (!strncmp(*fmt, "zn", ((sizeof("zn")/sizeof("zn"[0]))-1))) {
 12334  0B44  0859               	movf	vfpfcnvrt@fmt,w
 12335  0B45  0086               	movwf	6
 12336  0B46  0187               	clrf	7
 12337  0B47  3F40               	moviw [0]fsr1
 12338  0B48  00F1               	movwf	strncmp@_l
 12339  0B49  3F41               	moviw [1]fsr1
 12340  0B4A  00F2               	movwf	strncmp@_l+1
 12341  0B4B  3084               	movlw	low (STR_59| (0+32768))
 12342  0B4C  00F3               	movwf	strncmp@_r
 12343  0B4D  30A1               	movlw	high (STR_59| (0+32768))
 12344  0B4E  00F4               	movwf	strncmp@_r+1
 12345  0B4F  3002               	movlw	2
 12346  0B50  00F5               	movwf	strncmp@n
 12347  0B51  3000               	movlw	0
 12348  0B52  00F6               	movwf	strncmp@n+1
 12349  0B53  3190  20DB  3188   	fcall	_strncmp
 12350  0B56  0871               	movf	?_strncmp,w
 12351  0B57  0472               	iorwf	?_strncmp+1,w
 12352  0B58  1903               	btfsc	3,2
 12353  0B59  2AFD               	goto	l4721
 12354                           
 12355                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1138:      
      +                             if (*fmt[0] == 'p') {
 12356  0B5A  0020               	movlb	0	; select bank0
 12357  0B5B  0859               	movf	vfpfcnvrt@fmt,w
 12358  0B5C  0086               	movwf	6
 12359  0B5D  0187               	clrf	7
 12360  0B5E  3F40               	moviw [0]fsr1
 12361  0B5F  00DB               	movwf	??_vfpfcnvrt
 12362  0B60  3F41               	moviw [1]fsr1
 12363  0B61  00DC               	movwf	??_vfpfcnvrt+1
 12364  0B62  085B               	movf	??_vfpfcnvrt,w
 12365  0B63  0084               	movwf	4
 12366  0B64  085C               	movf	??_vfpfcnvrt+1,w
 12367  0B65  0085               	movwf	5
 12368  0B66  0012               	moviw fsr0++
 12369  0B67  3A70               	xorlw	112
 12370  0B68  1D03               	btfss	3,2
 12371  0B69  2BD2               	goto	l4741
 12372                           
 12373                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1140:      
      +                                 ++*fmt;
 12374  0B6A  0859               	movf	vfpfcnvrt@fmt,w
 12375  0B6B  0086               	movwf	6
 12376  0B6C  0187               	clrf	7
 12377  0B6D  3001               	movlw	1
 12378  0B6E  0781               	addwf	1,f
 12379  0B6F  3141               	addfsr 1,1
 12380  0B70  1803               	skipnc
 12381  0B71  0A81               	incf	1,f
 12382                           
 12383                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1141:      
      +                                 llu = (unsigned long long)(size_t)(*(void * *)__va_arg(*(void * **)ap, (void *)0)
      +                          );
 12384  0B72  085A               	movf	vfpfcnvrt@ap,w
 12385  0B73  0086               	movwf	6
 12386  0B74  0187               	clrf	7
 12387  0B75  3F40               	moviw [0]fsr1
 12388  0B76  0084               	movwf	4
 12389  0B77  0185               	clrf	5
 12390  0B78  0A81               	incf	1,f
 12391  0B79  0800               	movf	0,w
 12392  0B7A  00DB               	movwf	??_vfpfcnvrt
 12393  0B7B  01DC               	clrf	??_vfpfcnvrt+1
 12394  0B7C  01DD               	clrf	??_vfpfcnvrt+2
 12395  0B7D  01DE               	clrf	??_vfpfcnvrt+3
 12396  0B7E  01DF               	clrf	??_vfpfcnvrt+4
 12397  0B7F  01E0               	clrf	??_vfpfcnvrt+5
 12398  0B80  01E1               	clrf	??_vfpfcnvrt+6
 12399  0B81  01E2               	clrf	??_vfpfcnvrt+7
 12400  0B82  0862               	movf	??_vfpfcnvrt+7,w
 12401  0B83  0021               	movlb	1	; select bank1
 12402  0B84  00B8               	movwf	(vfpfcnvrt@llu+7)^(0+128)
 12403  0B85  0020               	movlb	0	; select bank0
 12404  0B86  0861               	movf	??_vfpfcnvrt+6,w
 12405  0B87  0021               	movlb	1	; select bank1
 12406  0B88  00B7               	movwf	(vfpfcnvrt@llu+6)^(0+128)
 12407  0B89  0020               	movlb	0	; select bank0
 12408  0B8A  0860               	movf	??_vfpfcnvrt+5,w
 12409  0B8B  0021               	movlb	1	; select bank1
 12410  0B8C  00B6               	movwf	(vfpfcnvrt@llu+5)^(0+128)
 12411  0B8D  0020               	movlb	0	; select bank0
 12412  0B8E  085F               	movf	??_vfpfcnvrt+4,w
 12413  0B8F  0021               	movlb	1	; select bank1
 12414  0B90  00B5               	movwf	(vfpfcnvrt@llu+4)^(0+128)
 12415  0B91  0020               	movlb	0	; select bank0
 12416  0B92  085E               	movf	??_vfpfcnvrt+3,w
 12417  0B93  0021               	movlb	1	; select bank1
 12418  0B94  00B4               	movwf	(vfpfcnvrt@llu+3)^(0+128)
 12419  0B95  0020               	movlb	0	; select bank0
 12420  0B96  085D               	movf	??_vfpfcnvrt+2,w
 12421  0B97  0021               	movlb	1	; select bank1
 12422  0B98  00B3               	movwf	(vfpfcnvrt@llu+2)^(0+128)
 12423  0B99  0020               	movlb	0	; select bank0
 12424  0B9A  085C               	movf	??_vfpfcnvrt+1,w
 12425  0B9B  0021               	movlb	1	; select bank1
 12426  0B9C  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 12427  0B9D  0020               	movlb	0	; select bank0
 12428  0B9E  085B               	movf	??_vfpfcnvrt,w
 12429  0B9F  0021               	movlb	1	; select bank1
 12430  0BA0  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 12431                           
 12432                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1143:      
      +                                 return xtoa(fp, llu, 'x');
 12433  0BA1  0020               	movlb	0	; select bank0
 12434  0BA2  0858               	movf	vfpfcnvrt@fp+1,w
 12435  0BA3  00B1               	movwf	xtoa@fp+1
 12436  0BA4  0857               	movf	vfpfcnvrt@fp,w
 12437  0BA5  00B0               	movwf	xtoa@fp
 12438  0BA6  0021               	movlb	1	; select bank1
 12439  0BA7  0831               	movf	vfpfcnvrt@llu^(0+128),w
 12440  0BA8  0020               	movlb	0	; select bank0
 12441  0BA9  00B2               	movwf	xtoa@d
 12442  0BAA  0021               	movlb	1	; select bank1
 12443  0BAB  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 12444  0BAC  0020               	movlb	0	; select bank0
 12445  0BAD  00B3               	movwf	xtoa@d+1
 12446  0BAE  0021               	movlb	1	; select bank1
 12447  0BAF  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 12448  0BB0  0020               	movlb	0	; select bank0
 12449  0BB1  00B4               	movwf	xtoa@d+2
 12450  0BB2  0021               	movlb	1	; select bank1
 12451  0BB3  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 12452  0BB4  0020               	movlb	0	; select bank0
 12453  0BB5  00B5               	movwf	xtoa@d+3
 12454  0BB6  0021               	movlb	1	; select bank1
 12455  0BB7  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 12456  0BB8  0020               	movlb	0	; select bank0
 12457  0BB9  00B6               	movwf	xtoa@d+4
 12458  0BBA  0021               	movlb	1	; select bank1
 12459  0BBB  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 12460  0BBC  0020               	movlb	0	; select bank0
 12461  0BBD  00B7               	movwf	xtoa@d+5
 12462  0BBE  0021               	movlb	1	; select bank1
 12463  0BBF  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 12464  0BC0  0020               	movlb	0	; select bank0
 12465  0BC1  00B8               	movwf	xtoa@d+6
 12466  0BC2  0021               	movlb	1	; select bank1
 12467  0BC3  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 12468  0BC4  0020               	movlb	0	; select bank0
 12469  0BC5  00B9               	movwf	xtoa@d+7
 12470  0BC6  3078               	movlw	120
 12471  0BC7  00DB               	movwf	??_vfpfcnvrt
 12472  0BC8  085B               	movf	??_vfpfcnvrt,w
 12473  0BC9  00BA               	movwf	xtoa@x
 12474  0BCA  3181  21FA         	fcall	_xtoa
 12475  0BCC  0020               	movlb	0	; select bank0
 12476  0BCD  0831               	movf	?_xtoa+1,w
 12477  0BCE  00D8               	movwf	?_vfpfcnvrt+1
 12478  0BCF  0830               	movf	?_xtoa,w
 12479  0BD0  00D7               	movwf	?_vfpfcnvrt
 12480  0BD1  0008               	return
 12481  0BD2                     l4741:	
 12482                           
 12483                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1149:      
      +                             if (*fmt[0] == 's') {
 12484  0BD2  0859               	movf	vfpfcnvrt@fmt,w
 12485  0BD3  0086               	movwf	6
 12486  0BD4  0187               	clrf	7
 12487  0BD5  3F40               	moviw [0]fsr1
 12488  0BD6  00DB               	movwf	??_vfpfcnvrt
 12489  0BD7  3F41               	moviw [1]fsr1
 12490  0BD8  00DC               	movwf	??_vfpfcnvrt+1
 12491  0BD9  085B               	movf	??_vfpfcnvrt,w
 12492  0BDA  0084               	movwf	4
 12493  0BDB  085C               	movf	??_vfpfcnvrt+1,w
 12494  0BDC  0085               	movwf	5
 12495  0BDD  0012               	moviw fsr0++
 12496  0BDE  3A73               	xorlw	115
 12497  0BDF  1D03               	btfss	3,2
 12498  0BE0  2C08               	goto	l4751
 12499                           
 12500                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1151:      
      +                                 ++*fmt;
 12501  0BE1  0859               	movf	vfpfcnvrt@fmt,w
 12502  0BE2  0086               	movwf	6
 12503  0BE3  0187               	clrf	7
 12504  0BE4  3001               	movlw	1
 12505  0BE5  0781               	addwf	1,f
 12506  0BE6  3141               	addfsr 1,1
 12507  0BE7  1803               	skipnc
 12508  0BE8  0A81               	incf	1,f
 12509                           
 12510                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1152:      
      +                                 cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 12511  0BE9  085A               	movf	vfpfcnvrt@ap,w
 12512  0BEA  0086               	movwf	6
 12513  0BEB  0187               	clrf	7
 12514  0BEC  3F40               	moviw [0]fsr1
 12515  0BED  0084               	movwf	4
 12516  0BEE  0185               	clrf	5
 12517  0BEF  0A81               	incf	1,f
 12518  0BF0  0800               	movf	0,w
 12519  0BF1  00DB               	movwf	??_vfpfcnvrt
 12520  0BF2  085B               	movf	??_vfpfcnvrt,w
 12521  0BF3  0021               	movlb	1	; select bank1
 12522  0BF4  00A0               	movwf	vfpfcnvrt@cp^(0+128)
 12523                           
 12524                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1154:      
      +                                 return stoa(fp, cp);
 12525  0BF5  0020               	movlb	0	; select bank0
 12526  0BF6  0858               	movf	vfpfcnvrt@fp+1,w
 12527  0BF7  00A1               	movwf	stoa@fp+1
 12528  0BF8  0857               	movf	vfpfcnvrt@fp,w
 12529  0BF9  00A0               	movwf	stoa@fp
 12530  0BFA  0021               	movlb	1	; select bank1
 12531  0BFB  0820               	movf	vfpfcnvrt@cp^(0+128),w
 12532  0BFC  0020               	movlb	0	; select bank0
 12533  0BFD  00DB               	movwf	??_vfpfcnvrt
 12534  0BFE  085B               	movf	??_vfpfcnvrt,w
 12535  0BFF  00A2               	movwf	stoa@s
 12536  0C00  3195  2580         	fcall	_stoa
 12537  0C02  0020               	movlb	0	; select bank0
 12538  0C03  0821               	movf	?_stoa+1,w
 12539  0C04  00D8               	movwf	?_vfpfcnvrt+1
 12540  0C05  0820               	movf	?_stoa,w
 12541  0C06  00D7               	movwf	?_vfpfcnvrt
 12542  0C07  0008               	return
 12543  0C08                     l4751:	
 12544                           
 12545                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1161:      
      +                             if (!strncmp(*fmt, "hhu", ((sizeof("hhu")/sizeof("hhu"[0]))-1))) {
 12546  0C08  0859               	movf	vfpfcnvrt@fmt,w
 12547  0C09  0086               	movwf	6
 12548  0C0A  0187               	clrf	7
 12549  0C0B  3F40               	moviw [0]fsr1
 12550  0C0C  00F1               	movwf	strncmp@_l
 12551  0C0D  3F41               	moviw [1]fsr1
 12552  0C0E  00F2               	movwf	strncmp@_l+1
 12553  0C0F  3073               	movlw	low (STR_64| (0+32768))
 12554  0C10  00F3               	movwf	strncmp@_r
 12555  0C11  30A1               	movlw	high (STR_64| (0+32768))
 12556  0C12  00F4               	movwf	strncmp@_r+1
 12557  0C13  3003               	movlw	3
 12558  0C14  00F5               	movwf	strncmp@n
 12559  0C15  3000               	movlw	0
 12560  0C16  00F6               	movwf	strncmp@n+1
 12561  0C17  3190  20DB  3188   	fcall	_strncmp
 12562  0C1A  0871               	movf	?_strncmp,w
 12563  0C1B  0472               	iorwf	?_strncmp+1,w
 12564  0C1C  1D03               	btfss	3,2
 12565  0C1D  2C66               	goto	l4761
 12566                           
 12567                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1163:      
      +                                 *fmt += ((sizeof("hhu")/sizeof("hhu"[0]))-1);
 12568  0C1E  0020               	movlb	0	; select bank0
 12569  0C1F  0859               	movf	vfpfcnvrt@fmt,w
 12570  0C20  0086               	movwf	6
 12571  0C21  0187               	clrf	7
 12572  0C22  3003               	movlw	3
 12573  0C23  0781               	addwf	1,f
 12574  0C24  3141               	addfsr 1,1
 12575  0C25  1803               	skipnc
 12576  0C26  0A81               	incf	1,f
 12577                           
 12578                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1164:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 12579  0C27  085A               	movf	vfpfcnvrt@ap,w
 12580  0C28  0086               	movwf	6
 12581  0C29  0187               	clrf	7
 12582  0C2A  0801               	movf	1,w
 12583  0C2B  0084               	movwf	4
 12584  0C2C  0185               	clrf	5
 12585  0C2D  3002               	movlw	2
 12586  0C2E  0781               	addwf	1,f
 12587  0C2F  0800               	movf	0,w
 12588  0C30  0021               	movlb	1	; select bank1
 12589  0C31  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 12590  0C32  01B2               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 12591  0C33  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 12592  0C34  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 12593  0C35  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 12594  0C36  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 12595  0C37  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 12596  0C38  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 12597                           
 12598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1166:      
      +                                 return utoa(fp, llu);
 12599  0C39  0020               	movlb	0	; select bank0
 12600  0C3A  0858               	movf	vfpfcnvrt@fp+1,w
 12601  0C3B  00B1               	movwf	utoa@fp+1
 12602  0C3C  0857               	movf	vfpfcnvrt@fp,w
 12603  0C3D  00B0               	movwf	utoa@fp
 12604  0C3E  0021               	movlb	1	; select bank1
 12605  0C3F  0831               	movf	vfpfcnvrt@llu^(0+128),w
 12606  0C40  0020               	movlb	0	; select bank0
 12607  0C41  00B2               	movwf	utoa@d
 12608  0C42  0021               	movlb	1	; select bank1
 12609  0C43  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 12610  0C44  0020               	movlb	0	; select bank0
 12611  0C45  00B3               	movwf	utoa@d+1
 12612  0C46  0021               	movlb	1	; select bank1
 12613  0C47  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 12614  0C48  0020               	movlb	0	; select bank0
 12615  0C49  00B4               	movwf	utoa@d+2
 12616  0C4A  0021               	movlb	1	; select bank1
 12617  0C4B  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 12618  0C4C  0020               	movlb	0	; select bank0
 12619  0C4D  00B5               	movwf	utoa@d+3
 12620  0C4E  0021               	movlb	1	; select bank1
 12621  0C4F  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 12622  0C50  0020               	movlb	0	; select bank0
 12623  0C51  00B6               	movwf	utoa@d+4
 12624  0C52  0021               	movlb	1	; select bank1
 12625  0C53  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 12626  0C54  0020               	movlb	0	; select bank0
 12627  0C55  00B7               	movwf	utoa@d+5
 12628  0C56  0021               	movlb	1	; select bank1
 12629  0C57  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 12630  0C58  0020               	movlb	0	; select bank0
 12631  0C59  00B8               	movwf	utoa@d+6
 12632  0C5A  0021               	movlb	1	; select bank1
 12633  0C5B  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 12634  0C5C  0020               	movlb	0	; select bank0
 12635  0C5D  00B9               	movwf	utoa@d+7
 12636  0C5E  3197  271F         	fcall	_utoa
 12637  0C60  0020               	movlb	0	; select bank0
 12638  0C61  0831               	movf	?_utoa+1,w
 12639  0C62  00D8               	movwf	?_vfpfcnvrt+1
 12640  0C63  0830               	movf	?_utoa,w
 12641  0C64  00D7               	movwf	?_vfpfcnvrt
 12642  0C65  0008               	return
 12643  0C66                     l4761:	
 12644                           
 12645                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1172:      
      +                             if (!strncmp(*fmt, "hu", ((sizeof("hu")/sizeof("hu"[0]))-1))) {
 12646  0C66  0020               	movlb	0	; select bank0
 12647  0C67  0859               	movf	vfpfcnvrt@fmt,w
 12648  0C68  0086               	movwf	6
 12649  0C69  0187               	clrf	7
 12650  0C6A  3F40               	moviw [0]fsr1
 12651  0C6B  00F1               	movwf	strncmp@_l
 12652  0C6C  3F41               	moviw [1]fsr1
 12653  0C6D  00F2               	movwf	strncmp@_l+1
 12654  0C6E  3074               	movlw	low ((STR_64+1)| (0+32768))
 12655  0C6F  00F3               	movwf	strncmp@_r
 12656  0C70  30A1               	movlw	high ((STR_64+1)| (0+32768))
 12657  0C71  00F4               	movwf	strncmp@_r+1
 12658  0C72  3002               	movlw	2
 12659  0C73  00F5               	movwf	strncmp@n
 12660  0C74  3000               	movlw	0
 12661  0C75  00F6               	movwf	strncmp@n+1
 12662  0C76  3190  20DB  3188   	fcall	_strncmp
 12663  0C79  0871               	movf	?_strncmp,w
 12664  0C7A  0472               	iorwf	?_strncmp+1,w
 12665  0C7B  1D03               	btfss	3,2
 12666  0C7C  2CC6               	goto	l4771
 12667                           
 12668                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1174:      
      +                                 *fmt += ((sizeof("hu")/sizeof("hu"[0]))-1);
 12669  0C7D  0020               	movlb	0	; select bank0
 12670  0C7E  0859               	movf	vfpfcnvrt@fmt,w
 12671  0C7F  0086               	movwf	6
 12672  0C80  0187               	clrf	7
 12673  0C81  3002               	movlw	2
 12674  0C82  0781               	addwf	1,f
 12675  0C83  3141               	addfsr 1,1
 12676  0C84  1803               	skipnc
 12677  0C85  0A81               	incf	1,f
 12678                           
 12679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1175:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 12680  0C86  085A               	movf	vfpfcnvrt@ap,w
 12681  0C87  0086               	movwf	6
 12682  0C88  0187               	clrf	7
 12683  0C89  0801               	movf	1,w
 12684  0C8A  0084               	movwf	4
 12685  0C8B  0185               	clrf	5
 12686  0C8C  3002               	movlw	2
 12687  0C8D  0781               	addwf	1,f
 12688  0C8E  3F00               	moviw [0]fsr0
 12689  0C8F  0021               	movlb	1	; select bank1
 12690  0C90  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 12691  0C91  3F01               	moviw [1]fsr0
 12692  0C92  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 12693  0C93  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 12694  0C94  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 12695  0C95  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 12696  0C96  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 12697  0C97  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 12698  0C98  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 12699                           
 12700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1177:      
      +                                 return utoa(fp, llu);
 12701  0C99  0020               	movlb	0	; select bank0
 12702  0C9A  0858               	movf	vfpfcnvrt@fp+1,w
 12703  0C9B  00B1               	movwf	utoa@fp+1
 12704  0C9C  0857               	movf	vfpfcnvrt@fp,w
 12705  0C9D  00B0               	movwf	utoa@fp
 12706  0C9E  0021               	movlb	1	; select bank1
 12707  0C9F  0831               	movf	vfpfcnvrt@llu^(0+128),w
 12708  0CA0  0020               	movlb	0	; select bank0
 12709  0CA1  00B2               	movwf	utoa@d
 12710  0CA2  0021               	movlb	1	; select bank1
 12711  0CA3  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 12712  0CA4  0020               	movlb	0	; select bank0
 12713  0CA5  00B3               	movwf	utoa@d+1
 12714  0CA6  0021               	movlb	1	; select bank1
 12715  0CA7  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 12716  0CA8  0020               	movlb	0	; select bank0
 12717  0CA9  00B4               	movwf	utoa@d+2
 12718  0CAA  0021               	movlb	1	; select bank1
 12719  0CAB  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 12720  0CAC  0020               	movlb	0	; select bank0
 12721  0CAD  00B5               	movwf	utoa@d+3
 12722  0CAE  0021               	movlb	1	; select bank1
 12723  0CAF  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 12724  0CB0  0020               	movlb	0	; select bank0
 12725  0CB1  00B6               	movwf	utoa@d+4
 12726  0CB2  0021               	movlb	1	; select bank1
 12727  0CB3  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 12728  0CB4  0020               	movlb	0	; select bank0
 12729  0CB5  00B7               	movwf	utoa@d+5
 12730  0CB6  0021               	movlb	1	; select bank1
 12731  0CB7  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 12732  0CB8  0020               	movlb	0	; select bank0
 12733  0CB9  00B8               	movwf	utoa@d+6
 12734  0CBA  0021               	movlb	1	; select bank1
 12735  0CBB  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 12736  0CBC  0020               	movlb	0	; select bank0
 12737  0CBD  00B9               	movwf	utoa@d+7
 12738  0CBE  3197  271F         	fcall	_utoa
 12739  0CC0  0020               	movlb	0	; select bank0
 12740  0CC1  0831               	movf	?_utoa+1,w
 12741  0CC2  00D8               	movwf	?_vfpfcnvrt+1
 12742  0CC3  0830               	movf	?_utoa,w
 12743  0CC4  00D7               	movwf	?_vfpfcnvrt
 12744  0CC5  0008               	return
 12745  0CC6                     l4771:	
 12746                           
 12747                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1182:      
      +                             if (*fmt[0] == 'u') {
 12748  0CC6  0020               	movlb	0	; select bank0
 12749  0CC7  0859               	movf	vfpfcnvrt@fmt,w
 12750  0CC8  0086               	movwf	6
 12751  0CC9  0187               	clrf	7
 12752  0CCA  3F40               	moviw [0]fsr1
 12753  0CCB  00DB               	movwf	??_vfpfcnvrt
 12754  0CCC  3F41               	moviw [1]fsr1
 12755  0CCD  00DC               	movwf	??_vfpfcnvrt+1
 12756  0CCE  085B               	movf	??_vfpfcnvrt,w
 12757  0CCF  0084               	movwf	4
 12758  0CD0  085C               	movf	??_vfpfcnvrt+1,w
 12759  0CD1  0085               	movwf	5
 12760  0CD2  0012               	moviw fsr0++
 12761  0CD3  3A75               	xorlw	117
 12762  0CD4  1D03               	btfss	3,2
 12763  0CD5  2D1E               	goto	l4781
 12764                           
 12765                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1184:      
      +                                 ++*fmt;
 12766  0CD6  0859               	movf	vfpfcnvrt@fmt,w
 12767  0CD7  0086               	movwf	6
 12768  0CD8  0187               	clrf	7
 12769  0CD9  3001               	movlw	1
 12770  0CDA  0781               	addwf	1,f
 12771  0CDB  3141               	addfsr 1,1
 12772  0CDC  1803               	skipnc
 12773  0CDD  0A81               	incf	1,f
 12774                           
 12775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1185:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 12776  0CDE  085A               	movf	vfpfcnvrt@ap,w
 12777  0CDF  0086               	movwf	6
 12778  0CE0  0187               	clrf	7
 12779  0CE1  0801               	movf	1,w
 12780  0CE2  0084               	movwf	4
 12781  0CE3  0185               	clrf	5
 12782  0CE4  3002               	movlw	2
 12783  0CE5  0781               	addwf	1,f
 12784  0CE6  3F00               	moviw [0]fsr0
 12785  0CE7  0021               	movlb	1	; select bank1
 12786  0CE8  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 12787  0CE9  3F01               	moviw [1]fsr0
 12788  0CEA  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 12789  0CEB  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 12790  0CEC  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 12791  0CED  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 12792  0CEE  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 12793  0CEF  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 12794  0CF0  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 12795                           
 12796                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1187:      
      +                                 return utoa(fp, llu);
 12797  0CF1  0020               	movlb	0	; select bank0
 12798  0CF2  0858               	movf	vfpfcnvrt@fp+1,w
 12799  0CF3  00B1               	movwf	utoa@fp+1
 12800  0CF4  0857               	movf	vfpfcnvrt@fp,w
 12801  0CF5  00B0               	movwf	utoa@fp
 12802  0CF6  0021               	movlb	1	; select bank1
 12803  0CF7  0831               	movf	vfpfcnvrt@llu^(0+128),w
 12804  0CF8  0020               	movlb	0	; select bank0
 12805  0CF9  00B2               	movwf	utoa@d
 12806  0CFA  0021               	movlb	1	; select bank1
 12807  0CFB  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 12808  0CFC  0020               	movlb	0	; select bank0
 12809  0CFD  00B3               	movwf	utoa@d+1
 12810  0CFE  0021               	movlb	1	; select bank1
 12811  0CFF  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 12812  0D00  0020               	movlb	0	; select bank0
 12813  0D01  00B4               	movwf	utoa@d+2
 12814  0D02  0021               	movlb	1	; select bank1
 12815  0D03  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 12816  0D04  0020               	movlb	0	; select bank0
 12817  0D05  00B5               	movwf	utoa@d+3
 12818  0D06  0021               	movlb	1	; select bank1
 12819  0D07  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 12820  0D08  0020               	movlb	0	; select bank0
 12821  0D09  00B6               	movwf	utoa@d+4
 12822  0D0A  0021               	movlb	1	; select bank1
 12823  0D0B  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 12824  0D0C  0020               	movlb	0	; select bank0
 12825  0D0D  00B7               	movwf	utoa@d+5
 12826  0D0E  0021               	movlb	1	; select bank1
 12827  0D0F  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 12828  0D10  0020               	movlb	0	; select bank0
 12829  0D11  00B8               	movwf	utoa@d+6
 12830  0D12  0021               	movlb	1	; select bank1
 12831  0D13  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 12832  0D14  0020               	movlb	0	; select bank0
 12833  0D15  00B9               	movwf	utoa@d+7
 12834  0D16  3197  271F         	fcall	_utoa
 12835  0D18  0020               	movlb	0	; select bank0
 12836  0D19  0831               	movf	?_utoa+1,w
 12837  0D1A  00D8               	movwf	?_vfpfcnvrt+1
 12838  0D1B  0830               	movf	?_utoa,w
 12839  0D1C  00D7               	movwf	?_vfpfcnvrt
 12840  0D1D  0008               	return
 12841  0D1E                     l4781:	
 12842                           
 12843                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1236:      
      +                             if (!strncmp(*fmt, "zu", ((sizeof("zu")/sizeof("zu"[0]))-1))) {
 12844  0D1E  0859               	movf	vfpfcnvrt@fmt,w
 12845  0D1F  0086               	movwf	6
 12846  0D20  0187               	clrf	7
 12847  0D21  3F40               	moviw [0]fsr1
 12848  0D22  00F1               	movwf	strncmp@_l
 12849  0D23  3F41               	moviw [1]fsr1
 12850  0D24  00F2               	movwf	strncmp@_l+1
 12851  0D25  308A               	movlw	low (STR_74| (0+32768))
 12852  0D26  00F3               	movwf	strncmp@_r
 12853  0D27  30A1               	movlw	high (STR_74| (0+32768))
 12854  0D28  00F4               	movwf	strncmp@_r+1
 12855  0D29  3002               	movlw	2
 12856  0D2A  00F5               	movwf	strncmp@n
 12857  0D2B  3000               	movlw	0
 12858  0D2C  00F6               	movwf	strncmp@n+1
 12859  0D2D  3190  20DB  3188   	fcall	_strncmp
 12860  0D30  0871               	movf	?_strncmp,w
 12861  0D31  0472               	iorwf	?_strncmp+1,w
 12862  0D32  1D03               	btfss	3,2
 12863  0D33  2D7D               	goto	l4791
 12864                           
 12865                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1238:      
      +                                 *fmt += ((sizeof("zu")/sizeof("zu"[0]))-1);
 12866  0D34  0020               	movlb	0	; select bank0
 12867  0D35  0859               	movf	vfpfcnvrt@fmt,w
 12868  0D36  0086               	movwf	6
 12869  0D37  0187               	clrf	7
 12870  0D38  3002               	movlw	2
 12871  0D39  0781               	addwf	1,f
 12872  0D3A  3141               	addfsr 1,1
 12873  0D3B  1803               	skipnc
 12874  0D3C  0A81               	incf	1,f
 12875                           
 12876                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1239:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 12877  0D3D  085A               	movf	vfpfcnvrt@ap,w
 12878  0D3E  0086               	movwf	6
 12879  0D3F  0187               	clrf	7
 12880  0D40  0801               	movf	1,w
 12881  0D41  0084               	movwf	4
 12882  0D42  0185               	clrf	5
 12883  0D43  3002               	movlw	2
 12884  0D44  0781               	addwf	1,f
 12885  0D45  3F00               	moviw [0]fsr0
 12886  0D46  0021               	movlb	1	; select bank1
 12887  0D47  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 12888  0D48  3F01               	moviw [1]fsr0
 12889  0D49  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 12890  0D4A  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 12891  0D4B  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 12892  0D4C  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 12893  0D4D  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 12894  0D4E  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 12895  0D4F  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 12896                           
 12897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1241:      
      +                                 return utoa(fp, llu);
 12898  0D50  0020               	movlb	0	; select bank0
 12899  0D51  0858               	movf	vfpfcnvrt@fp+1,w
 12900  0D52  00B1               	movwf	utoa@fp+1
 12901  0D53  0857               	movf	vfpfcnvrt@fp,w
 12902  0D54  00B0               	movwf	utoa@fp
 12903  0D55  0021               	movlb	1	; select bank1
 12904  0D56  0831               	movf	vfpfcnvrt@llu^(0+128),w
 12905  0D57  0020               	movlb	0	; select bank0
 12906  0D58  00B2               	movwf	utoa@d
 12907  0D59  0021               	movlb	1	; select bank1
 12908  0D5A  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 12909  0D5B  0020               	movlb	0	; select bank0
 12910  0D5C  00B3               	movwf	utoa@d+1
 12911  0D5D  0021               	movlb	1	; select bank1
 12912  0D5E  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 12913  0D5F  0020               	movlb	0	; select bank0
 12914  0D60  00B4               	movwf	utoa@d+2
 12915  0D61  0021               	movlb	1	; select bank1
 12916  0D62  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 12917  0D63  0020               	movlb	0	; select bank0
 12918  0D64  00B5               	movwf	utoa@d+3
 12919  0D65  0021               	movlb	1	; select bank1
 12920  0D66  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 12921  0D67  0020               	movlb	0	; select bank0
 12922  0D68  00B6               	movwf	utoa@d+4
 12923  0D69  0021               	movlb	1	; select bank1
 12924  0D6A  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 12925  0D6B  0020               	movlb	0	; select bank0
 12926  0D6C  00B7               	movwf	utoa@d+5
 12927  0D6D  0021               	movlb	1	; select bank1
 12928  0D6E  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 12929  0D6F  0020               	movlb	0	; select bank0
 12930  0D70  00B8               	movwf	utoa@d+6
 12931  0D71  0021               	movlb	1	; select bank1
 12932  0D72  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 12933  0D73  0020               	movlb	0	; select bank0
 12934  0D74  00B9               	movwf	utoa@d+7
 12935  0D75  3197  271F         	fcall	_utoa
 12936  0D77  0020               	movlb	0	; select bank0
 12937  0D78  0831               	movf	?_utoa+1,w
 12938  0D79  00D8               	movwf	?_vfpfcnvrt+1
 12939  0D7A  0830               	movf	?_utoa,w
 12940  0D7B  00D7               	movwf	?_vfpfcnvrt
 12941  0D7C  0008               	return
 12942  0D7D                     l4791:	
 12943                           
 12944                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1249:      
      +                             if (!strncmp(*fmt, "hhx", ((sizeof("hhx")/sizeof("hhx"[0]))-1)) || !strncmp(*fmt, "hh
      +                          X", ((sizeof("hhX")/sizeof("hhX"[0]))-1))) {
 12945  0D7D  0020               	movlb	0	; select bank0
 12946  0D7E  0859               	movf	vfpfcnvrt@fmt,w
 12947  0D7F  0086               	movwf	6
 12948  0D80  0187               	clrf	7
 12949  0D81  3F40               	moviw [0]fsr1
 12950  0D82  00F1               	movwf	strncmp@_l
 12951  0D83  3F41               	moviw [1]fsr1
 12952  0D84  00F2               	movwf	strncmp@_l+1
 12953  0D85  3077               	movlw	low (STR_79| (0+32768))
 12954  0D86  00F3               	movwf	strncmp@_r
 12955  0D87  30A1               	movlw	high (STR_79| (0+32768))
 12956  0D88  00F4               	movwf	strncmp@_r+1
 12957  0D89  3003               	movlw	3
 12958  0D8A  00F5               	movwf	strncmp@n
 12959  0D8B  3000               	movlw	0
 12960  0D8C  00F6               	movwf	strncmp@n+1
 12961  0D8D  3190  20DB  3188   	fcall	_strncmp
 12962  0D90  0871               	movf	?_strncmp,w
 12963  0D91  0472               	iorwf	?_strncmp+1,w
 12964  0D92  1903               	btfsc	3,2
 12965  0D93  2DAB               	goto	l4795
 12966  0D94  0020               	movlb	0	; select bank0
 12967  0D95  0859               	movf	vfpfcnvrt@fmt,w
 12968  0D96  0086               	movwf	6
 12969  0D97  0187               	clrf	7
 12970  0D98  3F40               	moviw [0]fsr1
 12971  0D99  00F1               	movwf	strncmp@_l
 12972  0D9A  3F41               	moviw [1]fsr1
 12973  0D9B  00F2               	movwf	strncmp@_l+1
 12974  0D9C  305F               	movlw	low (STR_83| (0+32768))
 12975  0D9D  00F3               	movwf	strncmp@_r
 12976  0D9E  30A1               	movlw	high (STR_83| (0+32768))
 12977  0D9F  00F4               	movwf	strncmp@_r+1
 12978  0DA0  3003               	movlw	3
 12979  0DA1  00F5               	movwf	strncmp@n
 12980  0DA2  3000               	movlw	0
 12981  0DA3  00F6               	movwf	strncmp@n+1
 12982  0DA4  3190  20DB  3188   	fcall	_strncmp
 12983  0DA7  0871               	movf	?_strncmp,w
 12984  0DA8  0472               	iorwf	?_strncmp+1,w
 12985  0DA9  1D03               	btfss	3,2
 12986  0DAA  2E0D               	goto	l4805
 12987  0DAB                     l4795:	
 12988                           
 12989                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1250: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1252:           
      +                            c = (*fmt)[2];
 12990  0DAB  0020               	movlb	0	; select bank0
 12991  0DAC  0859               	movf	vfpfcnvrt@fmt,w
 12992  0DAD  0086               	movwf	6
 12993  0DAE  0187               	clrf	7
 12994  0DAF  3F40               	moviw [0]fsr1
 12995  0DB0  00DB               	movwf	??_vfpfcnvrt
 12996  0DB1  3F41               	moviw [1]fsr1
 12997  0DB2  00DC               	movwf	??_vfpfcnvrt+1
 12998  0DB3  3002               	movlw	2
 12999  0DB4  075B               	addwf	??_vfpfcnvrt,w
 13000  0DB5  0084               	movwf	4
 13001  0DB6  085C               	movf	??_vfpfcnvrt+1,w
 13002  0DB7  1803               	skipnc
 13003  0DB8  0A5C               	incf	??_vfpfcnvrt+1,w
 13004  0DB9  0085               	movwf	5
 13005  0DBA  0800               	movf	0,w	;code access
 13006  0DBB  00DD               	movwf	??_vfpfcnvrt+2
 13007  0DBC  085D               	movf	??_vfpfcnvrt+2,w
 13008  0DBD  0021               	movlb	1	; select bank1
 13009  0DBE  00B0               	movwf	vfpfcnvrt@c^(0+128)
 13010                           
 13011                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1253:      
      +                                 *fmt += ((sizeof("hhx")/sizeof("hhx"[0]))-1);
 13012  0DBF  0020               	movlb	0	; select bank0
 13013  0DC0  0859               	movf	vfpfcnvrt@fmt,w
 13014  0DC1  0086               	movwf	6
 13015  0DC2  0187               	clrf	7
 13016  0DC3  3003               	movlw	3
 13017  0DC4  0781               	addwf	1,f
 13018  0DC5  3141               	addfsr 1,1
 13019  0DC6  1803               	skipnc
 13020  0DC7  0A81               	incf	1,f
 13021                           
 13022                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1254:      
      +                                 llu = (unsigned long long)(unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 13023  0DC8  085A               	movf	vfpfcnvrt@ap,w
 13024  0DC9  0086               	movwf	6
 13025  0DCA  0187               	clrf	7
 13026  0DCB  0801               	movf	1,w
 13027  0DCC  0084               	movwf	4
 13028  0DCD  0185               	clrf	5
 13029  0DCE  3002               	movlw	2
 13030  0DCF  0781               	addwf	1,f
 13031  0DD0  0800               	movf	0,w
 13032  0DD1  0021               	movlb	1	; select bank1
 13033  0DD2  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 13034  0DD3  01B2               	clrf	(vfpfcnvrt@llu+1)^(0+128)
 13035  0DD4  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 13036  0DD5  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 13037  0DD6  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 13038  0DD7  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 13039  0DD8  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 13040  0DD9  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 13041                           
 13042                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1256:      
      +                                 return xtoa(fp, llu, c);
 13043  0DDA  0020               	movlb	0	; select bank0
 13044  0DDB  0858               	movf	vfpfcnvrt@fp+1,w
 13045  0DDC  00B1               	movwf	xtoa@fp+1
 13046  0DDD  0857               	movf	vfpfcnvrt@fp,w
 13047  0DDE  00B0               	movwf	xtoa@fp
 13048  0DDF  0021               	movlb	1	; select bank1
 13049  0DE0  0831               	movf	vfpfcnvrt@llu^(0+128),w
 13050  0DE1  0020               	movlb	0	; select bank0
 13051  0DE2  00B2               	movwf	xtoa@d
 13052  0DE3  0021               	movlb	1	; select bank1
 13053  0DE4  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 13054  0DE5  0020               	movlb	0	; select bank0
 13055  0DE6  00B3               	movwf	xtoa@d+1
 13056  0DE7  0021               	movlb	1	; select bank1
 13057  0DE8  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 13058  0DE9  0020               	movlb	0	; select bank0
 13059  0DEA  00B4               	movwf	xtoa@d+2
 13060  0DEB  0021               	movlb	1	; select bank1
 13061  0DEC  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 13062  0DED  0020               	movlb	0	; select bank0
 13063  0DEE  00B5               	movwf	xtoa@d+3
 13064  0DEF  0021               	movlb	1	; select bank1
 13065  0DF0  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 13066  0DF1  0020               	movlb	0	; select bank0
 13067  0DF2  00B6               	movwf	xtoa@d+4
 13068  0DF3  0021               	movlb	1	; select bank1
 13069  0DF4  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 13070  0DF5  0020               	movlb	0	; select bank0
 13071  0DF6  00B7               	movwf	xtoa@d+5
 13072  0DF7  0021               	movlb	1	; select bank1
 13073  0DF8  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 13074  0DF9  0020               	movlb	0	; select bank0
 13075  0DFA  00B8               	movwf	xtoa@d+6
 13076  0DFB  0021               	movlb	1	; select bank1
 13077  0DFC  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 13078  0DFD  0020               	movlb	0	; select bank0
 13079  0DFE  00B9               	movwf	xtoa@d+7
 13080  0DFF  0021               	movlb	1	; select bank1
 13081  0E00  0830               	movf	vfpfcnvrt@c^(0+128),w
 13082  0E01  0020               	movlb	0	; select bank0
 13083  0E02  00DB               	movwf	??_vfpfcnvrt
 13084  0E03  085B               	movf	??_vfpfcnvrt,w
 13085  0E04  00BA               	movwf	xtoa@x
 13086  0E05  3181  21FA         	fcall	_xtoa
 13087  0E07  0020               	movlb	0	; select bank0
 13088  0E08  0831               	movf	?_xtoa+1,w
 13089  0E09  00D8               	movwf	?_vfpfcnvrt+1
 13090  0E0A  0830               	movf	?_xtoa,w
 13091  0E0B  00D7               	movwf	?_vfpfcnvrt
 13092  0E0C  0008               	return
 13093  0E0D                     l4805:	
 13094                           
 13095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1262:      
      +                             if (!strncmp(*fmt, "hx", ((sizeof("hx")/sizeof("hx"[0]))-1)) || !strncmp(*fmt, "hX", 
      +                          ((sizeof("hX")/sizeof("hX"[0]))-1))) {
 13096  0E0D  0020               	movlb	0	; select bank0
 13097  0E0E  0859               	movf	vfpfcnvrt@fmt,w
 13098  0E0F  0086               	movwf	6
 13099  0E10  0187               	clrf	7
 13100  0E11  3F40               	moviw [0]fsr1
 13101  0E12  00F1               	movwf	strncmp@_l
 13102  0E13  3F41               	moviw [1]fsr1
 13103  0E14  00F2               	movwf	strncmp@_l+1
 13104  0E15  3078               	movlw	low ((STR_79+1)| (0+32768))
 13105  0E16  00F3               	movwf	strncmp@_r
 13106  0E17  30A1               	movlw	high ((STR_79+1)| (0+32768))
 13107  0E18  00F4               	movwf	strncmp@_r+1
 13108  0E19  3002               	movlw	2
 13109  0E1A  00F5               	movwf	strncmp@n
 13110  0E1B  3000               	movlw	0
 13111  0E1C  00F6               	movwf	strncmp@n+1
 13112  0E1D  3190  20DB  3188   	fcall	_strncmp
 13113  0E20  0871               	movf	?_strncmp,w
 13114  0E21  0472               	iorwf	?_strncmp+1,w
 13115  0E22  1903               	btfsc	3,2
 13116  0E23  2E3B               	goto	l4809
 13117  0E24  0020               	movlb	0	; select bank0
 13118  0E25  0859               	movf	vfpfcnvrt@fmt,w
 13119  0E26  0086               	movwf	6
 13120  0E27  0187               	clrf	7
 13121  0E28  3F40               	moviw [0]fsr1
 13122  0E29  00F1               	movwf	strncmp@_l
 13123  0E2A  3F41               	moviw [1]fsr1
 13124  0E2B  00F2               	movwf	strncmp@_l+1
 13125  0E2C  3060               	movlw	low ((STR_83+1)| (0+32768))
 13126  0E2D  00F3               	movwf	strncmp@_r
 13127  0E2E  30A1               	movlw	high ((STR_83+1)| (0+32768))
 13128  0E2F  00F4               	movwf	strncmp@_r+1
 13129  0E30  3002               	movlw	2
 13130  0E31  00F5               	movwf	strncmp@n
 13131  0E32  3000               	movlw	0
 13132  0E33  00F6               	movwf	strncmp@n+1
 13133  0E34  3190  20DB  3188   	fcall	_strncmp
 13134  0E37  0871               	movf	?_strncmp,w
 13135  0E38  0472               	iorwf	?_strncmp+1,w
 13136  0E39  1D03               	btfss	3,2
 13137  0E3A  2E9E               	goto	l4819
 13138  0E3B                     l4809:	
 13139                           
 13140                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1263: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1265:           
      +                            c = (*fmt)[1];
 13141  0E3B  0020               	movlb	0	; select bank0
 13142  0E3C  0859               	movf	vfpfcnvrt@fmt,w
 13143  0E3D  0086               	movwf	6
 13144  0E3E  0187               	clrf	7
 13145  0E3F  3F40               	moviw [0]fsr1
 13146  0E40  00DB               	movwf	??_vfpfcnvrt
 13147  0E41  3F41               	moviw [1]fsr1
 13148  0E42  00DC               	movwf	??_vfpfcnvrt+1
 13149  0E43  3001               	movlw	1
 13150  0E44  075B               	addwf	??_vfpfcnvrt,w
 13151  0E45  0084               	movwf	4
 13152  0E46  085C               	movf	??_vfpfcnvrt+1,w
 13153  0E47  1803               	skipnc
 13154  0E48  0A5C               	incf	??_vfpfcnvrt+1,w
 13155  0E49  0085               	movwf	5
 13156  0E4A  0800               	movf	0,w	;code access
 13157  0E4B  00DD               	movwf	??_vfpfcnvrt+2
 13158  0E4C  085D               	movf	??_vfpfcnvrt+2,w
 13159  0E4D  0021               	movlb	1	; select bank1
 13160  0E4E  00B0               	movwf	vfpfcnvrt@c^(0+128)
 13161                           
 13162                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1266:      
      +                                 *fmt += ((sizeof("hx")/sizeof("hx"[0]))-1);
 13163  0E4F  0020               	movlb	0	; select bank0
 13164  0E50  0859               	movf	vfpfcnvrt@fmt,w
 13165  0E51  0086               	movwf	6
 13166  0E52  0187               	clrf	7
 13167  0E53  3002               	movlw	2
 13168  0E54  0781               	addwf	1,f
 13169  0E55  3141               	addfsr 1,1
 13170  0E56  1803               	skipnc
 13171  0E57  0A81               	incf	1,f
 13172                           
 13173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1267:      
      +                                 llu = (unsigned long long)(unsigned short)(*(int *)__va_arg(*(int **)ap, (int)0))
      +                          ;
 13174  0E58  085A               	movf	vfpfcnvrt@ap,w
 13175  0E59  0086               	movwf	6
 13176  0E5A  0187               	clrf	7
 13177  0E5B  0801               	movf	1,w
 13178  0E5C  0084               	movwf	4
 13179  0E5D  0185               	clrf	5
 13180  0E5E  3002               	movlw	2
 13181  0E5F  0781               	addwf	1,f
 13182  0E60  3F00               	moviw [0]fsr0
 13183  0E61  0021               	movlb	1	; select bank1
 13184  0E62  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 13185  0E63  3F01               	moviw [1]fsr0
 13186  0E64  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 13187  0E65  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 13188  0E66  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 13189  0E67  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 13190  0E68  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 13191  0E69  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 13192  0E6A  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 13193                           
 13194                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1269:      
      +                                 return xtoa(fp, llu, c);
 13195  0E6B  0020               	movlb	0	; select bank0
 13196  0E6C  0858               	movf	vfpfcnvrt@fp+1,w
 13197  0E6D  00B1               	movwf	xtoa@fp+1
 13198  0E6E  0857               	movf	vfpfcnvrt@fp,w
 13199  0E6F  00B0               	movwf	xtoa@fp
 13200  0E70  0021               	movlb	1	; select bank1
 13201  0E71  0831               	movf	vfpfcnvrt@llu^(0+128),w
 13202  0E72  0020               	movlb	0	; select bank0
 13203  0E73  00B2               	movwf	xtoa@d
 13204  0E74  0021               	movlb	1	; select bank1
 13205  0E75  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 13206  0E76  0020               	movlb	0	; select bank0
 13207  0E77  00B3               	movwf	xtoa@d+1
 13208  0E78  0021               	movlb	1	; select bank1
 13209  0E79  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 13210  0E7A  0020               	movlb	0	; select bank0
 13211  0E7B  00B4               	movwf	xtoa@d+2
 13212  0E7C  0021               	movlb	1	; select bank1
 13213  0E7D  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 13214  0E7E  0020               	movlb	0	; select bank0
 13215  0E7F  00B5               	movwf	xtoa@d+3
 13216  0E80  0021               	movlb	1	; select bank1
 13217  0E81  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 13218  0E82  0020               	movlb	0	; select bank0
 13219  0E83  00B6               	movwf	xtoa@d+4
 13220  0E84  0021               	movlb	1	; select bank1
 13221  0E85  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 13222  0E86  0020               	movlb	0	; select bank0
 13223  0E87  00B7               	movwf	xtoa@d+5
 13224  0E88  0021               	movlb	1	; select bank1
 13225  0E89  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 13226  0E8A  0020               	movlb	0	; select bank0
 13227  0E8B  00B8               	movwf	xtoa@d+6
 13228  0E8C  0021               	movlb	1	; select bank1
 13229  0E8D  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 13230  0E8E  0020               	movlb	0	; select bank0
 13231  0E8F  00B9               	movwf	xtoa@d+7
 13232  0E90  0021               	movlb	1	; select bank1
 13233  0E91  0830               	movf	vfpfcnvrt@c^(0+128),w
 13234  0E92  0020               	movlb	0	; select bank0
 13235  0E93  00DB               	movwf	??_vfpfcnvrt
 13236  0E94  085B               	movf	??_vfpfcnvrt,w
 13237  0E95  00BA               	movwf	xtoa@x
 13238  0E96  3181  21FA         	fcall	_xtoa
 13239  0E98  0020               	movlb	0	; select bank0
 13240  0E99  0831               	movf	?_xtoa+1,w
 13241  0E9A  00D8               	movwf	?_vfpfcnvrt+1
 13242  0E9B  0830               	movf	?_xtoa,w
 13243  0E9C  00D7               	movwf	?_vfpfcnvrt
 13244  0E9D  0008               	return
 13245  0E9E                     l4819:	
 13246                           
 13247                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
 13248  0E9E  0020               	movlb	0	; select bank0
 13249  0E9F  0859               	movf	vfpfcnvrt@fmt,w
 13250  0EA0  0086               	movwf	6
 13251  0EA1  0187               	clrf	7
 13252  0EA2  3F40               	moviw [0]fsr1
 13253  0EA3  00DB               	movwf	??_vfpfcnvrt
 13254  0EA4  3F41               	moviw [1]fsr1
 13255  0EA5  00DC               	movwf	??_vfpfcnvrt+1
 13256  0EA6  085B               	movf	??_vfpfcnvrt,w
 13257  0EA7  0084               	movwf	4
 13258  0EA8  085C               	movf	??_vfpfcnvrt+1,w
 13259  0EA9  0085               	movwf	5
 13260  0EAA  0012               	moviw fsr0++
 13261  0EAB  3A78               	xorlw	120
 13262  0EAC  1903               	btfsc	3,2
 13263  0EAD  2EBD               	goto	l4823
 13264  0EAE  0859               	movf	vfpfcnvrt@fmt,w
 13265  0EAF  0086               	movwf	6
 13266  0EB0  0187               	clrf	7
 13267  0EB1  3F40               	moviw [0]fsr1
 13268  0EB2  00DB               	movwf	??_vfpfcnvrt
 13269  0EB3  3F41               	moviw [1]fsr1
 13270  0EB4  00DC               	movwf	??_vfpfcnvrt+1
 13271  0EB5  085B               	movf	??_vfpfcnvrt,w
 13272  0EB6  0084               	movwf	4
 13273  0EB7  085C               	movf	??_vfpfcnvrt+1,w
 13274  0EB8  0085               	movwf	5
 13275  0EB9  0012               	moviw fsr0++
 13276  0EBA  3A58               	xorlw	88
 13277  0EBB  1D03               	btfss	3,2
 13278  0EBC  2F1C               	goto	l4833
 13279  0EBD                     l4823:	
 13280                           
 13281                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
 13282  0EBD  0859               	movf	vfpfcnvrt@fmt,w
 13283  0EBE  0086               	movwf	6
 13284  0EBF  0187               	clrf	7
 13285  0EC0  3F40               	moviw [0]fsr1
 13286  0EC1  00DB               	movwf	??_vfpfcnvrt
 13287  0EC2  3F41               	moviw [1]fsr1
 13288  0EC3  00DC               	movwf	??_vfpfcnvrt+1
 13289  0EC4  085B               	movf	??_vfpfcnvrt,w
 13290  0EC5  0084               	movwf	4
 13291  0EC6  085C               	movf	??_vfpfcnvrt+1,w
 13292  0EC7  0085               	movwf	5
 13293  0EC8  0800               	movf	0,w	;code access
 13294  0EC9  00DD               	movwf	??_vfpfcnvrt+2
 13295  0ECA  085D               	movf	??_vfpfcnvrt+2,w
 13296  0ECB  0021               	movlb	1	; select bank1
 13297  0ECC  00B0               	movwf	vfpfcnvrt@c^(0+128)
 13298                           
 13299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
 13300  0ECD  0020               	movlb	0	; select bank0
 13301  0ECE  0859               	movf	vfpfcnvrt@fmt,w
 13302  0ECF  0086               	movwf	6
 13303  0ED0  0187               	clrf	7
 13304  0ED1  3001               	movlw	1
 13305  0ED2  0781               	addwf	1,f
 13306  0ED3  3141               	addfsr 1,1
 13307  0ED4  1803               	skipnc
 13308  0ED5  0A81               	incf	1,f
 13309                           
 13310                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
 13311  0ED6  085A               	movf	vfpfcnvrt@ap,w
 13312  0ED7  0086               	movwf	6
 13313  0ED8  0187               	clrf	7
 13314  0ED9  0801               	movf	1,w
 13315  0EDA  0084               	movwf	4
 13316  0EDB  0185               	clrf	5
 13317  0EDC  3002               	movlw	2
 13318  0EDD  0781               	addwf	1,f
 13319  0EDE  3F00               	moviw [0]fsr0
 13320  0EDF  0021               	movlb	1	; select bank1
 13321  0EE0  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 13322  0EE1  3F01               	moviw [1]fsr0
 13323  0EE2  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 13324  0EE3  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 13325  0EE4  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 13326  0EE5  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 13327  0EE6  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 13328  0EE7  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 13329  0EE8  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 13330                           
 13331                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
 13332  0EE9  0020               	movlb	0	; select bank0
 13333  0EEA  0858               	movf	vfpfcnvrt@fp+1,w
 13334  0EEB  00B1               	movwf	xtoa@fp+1
 13335  0EEC  0857               	movf	vfpfcnvrt@fp,w
 13336  0EED  00B0               	movwf	xtoa@fp
 13337  0EEE  0021               	movlb	1	; select bank1
 13338  0EEF  0831               	movf	vfpfcnvrt@llu^(0+128),w
 13339  0EF0  0020               	movlb	0	; select bank0
 13340  0EF1  00B2               	movwf	xtoa@d
 13341  0EF2  0021               	movlb	1	; select bank1
 13342  0EF3  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 13343  0EF4  0020               	movlb	0	; select bank0
 13344  0EF5  00B3               	movwf	xtoa@d+1
 13345  0EF6  0021               	movlb	1	; select bank1
 13346  0EF7  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 13347  0EF8  0020               	movlb	0	; select bank0
 13348  0EF9  00B4               	movwf	xtoa@d+2
 13349  0EFA  0021               	movlb	1	; select bank1
 13350  0EFB  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 13351  0EFC  0020               	movlb	0	; select bank0
 13352  0EFD  00B5               	movwf	xtoa@d+3
 13353  0EFE  0021               	movlb	1	; select bank1
 13354  0EFF  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 13355  0F00  0020               	movlb	0	; select bank0
 13356  0F01  00B6               	movwf	xtoa@d+4
 13357  0F02  0021               	movlb	1	; select bank1
 13358  0F03  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 13359  0F04  0020               	movlb	0	; select bank0
 13360  0F05  00B7               	movwf	xtoa@d+5
 13361  0F06  0021               	movlb	1	; select bank1
 13362  0F07  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 13363  0F08  0020               	movlb	0	; select bank0
 13364  0F09  00B8               	movwf	xtoa@d+6
 13365  0F0A  0021               	movlb	1	; select bank1
 13366  0F0B  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 13367  0F0C  0020               	movlb	0	; select bank0
 13368  0F0D  00B9               	movwf	xtoa@d+7
 13369  0F0E  0021               	movlb	1	; select bank1
 13370  0F0F  0830               	movf	vfpfcnvrt@c^(0+128),w
 13371  0F10  0020               	movlb	0	; select bank0
 13372  0F11  00DB               	movwf	??_vfpfcnvrt
 13373  0F12  085B               	movf	??_vfpfcnvrt,w
 13374  0F13  00BA               	movwf	xtoa@x
 13375  0F14  3181  21FA         	fcall	_xtoa
 13376  0F16  0020               	movlb	0	; select bank0
 13377  0F17  0831               	movf	?_xtoa+1,w
 13378  0F18  00D8               	movwf	?_vfpfcnvrt+1
 13379  0F19  0830               	movf	?_xtoa,w
 13380  0F1A  00D7               	movwf	?_vfpfcnvrt
 13381  0F1B  0008               	return
 13382  0F1C                     l4833:	
 13383                           
 13384                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1337:      
      +                             if (!strncmp(*fmt, "zx", ((sizeof("zx")/sizeof("zx"[0]))-1)) || !strncmp(*fmt, "zX", 
      +                          ((sizeof("zX")/sizeof("zX"[0]))-1))) {
 13385  0F1C  0859               	movf	vfpfcnvrt@fmt,w
 13386  0F1D  0086               	movwf	6
 13387  0F1E  0187               	clrf	7
 13388  0F1F  3F40               	moviw [0]fsr1
 13389  0F20  00F1               	movwf	strncmp@_l
 13390  0F21  3F41               	moviw [1]fsr1
 13391  0F22  00F2               	movwf	strncmp@_l+1
 13392  0F23  308D               	movlw	low (STR_97| (0+32768))
 13393  0F24  00F3               	movwf	strncmp@_r
 13394  0F25  30A1               	movlw	high (STR_97| (0+32768))
 13395  0F26  00F4               	movwf	strncmp@_r+1
 13396  0F27  3002               	movlw	2
 13397  0F28  00F5               	movwf	strncmp@n
 13398  0F29  3000               	movlw	0
 13399  0F2A  00F6               	movwf	strncmp@n+1
 13400  0F2B  3190  20DB  3188   	fcall	_strncmp
 13401  0F2E  0871               	movf	?_strncmp,w
 13402  0F2F  0472               	iorwf	?_strncmp+1,w
 13403  0F30  1903               	btfsc	3,2
 13404  0F31  2F49               	goto	l4837
 13405  0F32  0020               	movlb	0	; select bank0
 13406  0F33  0859               	movf	vfpfcnvrt@fmt,w
 13407  0F34  0086               	movwf	6
 13408  0F35  0187               	clrf	7
 13409  0F36  3F40               	moviw [0]fsr1
 13410  0F37  00F1               	movwf	strncmp@_l
 13411  0F38  3F41               	moviw [1]fsr1
 13412  0F39  00F2               	movwf	strncmp@_l+1
 13413  0F3A  307B               	movlw	low (STR_101| (0+32768))
 13414  0F3B  00F3               	movwf	strncmp@_r
 13415  0F3C  30A1               	movlw	high (STR_101| (0+32768))
 13416  0F3D  00F4               	movwf	strncmp@_r+1
 13417  0F3E  3002               	movlw	2
 13418  0F3F  00F5               	movwf	strncmp@n
 13419  0F40  3000               	movlw	0
 13420  0F41  00F6               	movwf	strncmp@n+1
 13421  0F42  3190  20DB  3188   	fcall	_strncmp
 13422  0F45  0871               	movf	?_strncmp,w
 13423  0F46  0472               	iorwf	?_strncmp+1,w
 13424  0F47  1D03               	btfss	3,2
 13425  0F48  2FAC               	goto	l4847
 13426  0F49                     l4837:	
 13427                           
 13428                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1338: ;C:\P
      +                          rogram Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1340:           
      +                            c = (*fmt)[1];
 13429  0F49  0020               	movlb	0	; select bank0
 13430  0F4A  0859               	movf	vfpfcnvrt@fmt,w
 13431  0F4B  0086               	movwf	6
 13432  0F4C  0187               	clrf	7
 13433  0F4D  3F40               	moviw [0]fsr1
 13434  0F4E  00DB               	movwf	??_vfpfcnvrt
 13435  0F4F  3F41               	moviw [1]fsr1
 13436  0F50  00DC               	movwf	??_vfpfcnvrt+1
 13437  0F51  3001               	movlw	1
 13438  0F52  075B               	addwf	??_vfpfcnvrt,w
 13439  0F53  0084               	movwf	4
 13440  0F54  085C               	movf	??_vfpfcnvrt+1,w
 13441  0F55  1803               	skipnc
 13442  0F56  0A5C               	incf	??_vfpfcnvrt+1,w
 13443  0F57  0085               	movwf	5
 13444  0F58  0800               	movf	0,w	;code access
 13445  0F59  00DD               	movwf	??_vfpfcnvrt+2
 13446  0F5A  085D               	movf	??_vfpfcnvrt+2,w
 13447  0F5B  0021               	movlb	1	; select bank1
 13448  0F5C  00B0               	movwf	vfpfcnvrt@c^(0+128)
 13449                           
 13450                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1341:      
      +                                 *fmt += ((sizeof("zx")/sizeof("zx"[0]))-1);
 13451  0F5D  0020               	movlb	0	; select bank0
 13452  0F5E  0859               	movf	vfpfcnvrt@fmt,w
 13453  0F5F  0086               	movwf	6
 13454  0F60  0187               	clrf	7
 13455  0F61  3002               	movlw	2
 13456  0F62  0781               	addwf	1,f
 13457  0F63  3141               	addfsr 1,1
 13458  0F64  1803               	skipnc
 13459  0F65  0A81               	incf	1,f
 13460                           
 13461                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1342:      
      +                                 llu = (unsigned long long)(*(size_t *)__va_arg(*(size_t **)ap, (size_t)0));
 13462  0F66  085A               	movf	vfpfcnvrt@ap,w
 13463  0F67  0086               	movwf	6
 13464  0F68  0187               	clrf	7
 13465  0F69  0801               	movf	1,w
 13466  0F6A  0084               	movwf	4
 13467  0F6B  0185               	clrf	5
 13468  0F6C  3002               	movlw	2
 13469  0F6D  0781               	addwf	1,f
 13470  0F6E  3F00               	moviw [0]fsr0
 13471  0F6F  0021               	movlb	1	; select bank1
 13472  0F70  00B1               	movwf	vfpfcnvrt@llu^(0+128)
 13473  0F71  3F01               	moviw [1]fsr0
 13474  0F72  00B2               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 13475  0F73  01B3               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 13476  0F74  01B4               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 13477  0F75  01B5               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 13478  0F76  01B6               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 13479  0F77  01B7               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 13480  0F78  01B8               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 13481                           
 13482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1344:      
      +                                 return xtoa(fp, llu, c);
 13483  0F79  0020               	movlb	0	; select bank0
 13484  0F7A  0858               	movf	vfpfcnvrt@fp+1,w
 13485  0F7B  00B1               	movwf	xtoa@fp+1
 13486  0F7C  0857               	movf	vfpfcnvrt@fp,w
 13487  0F7D  00B0               	movwf	xtoa@fp
 13488  0F7E  0021               	movlb	1	; select bank1
 13489  0F7F  0831               	movf	vfpfcnvrt@llu^(0+128),w
 13490  0F80  0020               	movlb	0	; select bank0
 13491  0F81  00B2               	movwf	xtoa@d
 13492  0F82  0021               	movlb	1	; select bank1
 13493  0F83  0832               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 13494  0F84  0020               	movlb	0	; select bank0
 13495  0F85  00B3               	movwf	xtoa@d+1
 13496  0F86  0021               	movlb	1	; select bank1
 13497  0F87  0833               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 13498  0F88  0020               	movlb	0	; select bank0
 13499  0F89  00B4               	movwf	xtoa@d+2
 13500  0F8A  0021               	movlb	1	; select bank1
 13501  0F8B  0834               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 13502  0F8C  0020               	movlb	0	; select bank0
 13503  0F8D  00B5               	movwf	xtoa@d+3
 13504  0F8E  0021               	movlb	1	; select bank1
 13505  0F8F  0835               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 13506  0F90  0020               	movlb	0	; select bank0
 13507  0F91  00B6               	movwf	xtoa@d+4
 13508  0F92  0021               	movlb	1	; select bank1
 13509  0F93  0836               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 13510  0F94  0020               	movlb	0	; select bank0
 13511  0F95  00B7               	movwf	xtoa@d+5
 13512  0F96  0021               	movlb	1	; select bank1
 13513  0F97  0837               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 13514  0F98  0020               	movlb	0	; select bank0
 13515  0F99  00B8               	movwf	xtoa@d+6
 13516  0F9A  0021               	movlb	1	; select bank1
 13517  0F9B  0838               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 13518  0F9C  0020               	movlb	0	; select bank0
 13519  0F9D  00B9               	movwf	xtoa@d+7
 13520  0F9E  0021               	movlb	1	; select bank1
 13521  0F9F  0830               	movf	vfpfcnvrt@c^(0+128),w
 13522  0FA0  0020               	movlb	0	; select bank0
 13523  0FA1  00DB               	movwf	??_vfpfcnvrt
 13524  0FA2  085B               	movf	??_vfpfcnvrt,w
 13525  0FA3  00BA               	movwf	xtoa@x
 13526  0FA4  3181  21FA         	fcall	_xtoa
 13527  0FA6  0020               	movlb	0	; select bank0
 13528  0FA7  0831               	movf	?_xtoa+1,w
 13529  0FA8  00D8               	movwf	?_vfpfcnvrt+1
 13530  0FA9  0830               	movf	?_xtoa,w
 13531  0FAA  00D7               	movwf	?_vfpfcnvrt
 13532  0FAB  0008               	return
 13533  0FAC                     l4847:	
 13534                           
 13535                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
 13536  0FAC  0020               	movlb	0	; select bank0
 13537  0FAD  0859               	movf	vfpfcnvrt@fmt,w
 13538  0FAE  0086               	movwf	6
 13539  0FAF  0187               	clrf	7
 13540  0FB0  3F40               	moviw [0]fsr1
 13541  0FB1  00DB               	movwf	??_vfpfcnvrt
 13542  0FB2  3F41               	moviw [1]fsr1
 13543  0FB3  00DC               	movwf	??_vfpfcnvrt+1
 13544  0FB4  085B               	movf	??_vfpfcnvrt,w
 13545  0FB5  0084               	movwf	4
 13546  0FB6  085C               	movf	??_vfpfcnvrt+1,w
 13547  0FB7  0085               	movwf	5
 13548  0FB8  0012               	moviw fsr0++
 13549  0FB9  3A25               	xorlw	37
 13550  0FBA  1D03               	btfss	3,2
 13551  0FBB  2FD4               	goto	l4857
 13552                           
 13553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
 13554  0FBC  0859               	movf	vfpfcnvrt@fmt,w
 13555  0FBD  0086               	movwf	6
 13556  0FBE  0187               	clrf	7
 13557  0FBF  3001               	movlw	1
 13558  0FC0  0781               	addwf	1,f
 13559  0FC1  3141               	addfsr 1,1
 13560  0FC2  1803               	skipnc
 13561  0FC3  0A81               	incf	1,f
 13562                           
 13563                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
 13564  0FC4  3025               	movlw	37
 13565  0FC5  00F1               	movwf	fputc@c
 13566  0FC6  3000               	movlw	0
 13567  0FC7  00F2               	movwf	fputc@c+1
 13568  0FC8  0858               	movf	vfpfcnvrt@fp+1,w
 13569  0FC9  00F4               	movwf	fputc@fp+1
 13570  0FCA  0857               	movf	vfpfcnvrt@fp,w
 13571  0FCB  00F3               	movwf	fputc@fp
 13572  0FCC  3191  212D         	fcall	_fputc
 13573  0FCE                     l4853:	
 13574                           
 13575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
 13576  0FCE  3001               	movlw	1
 13577  0FCF  0020               	movlb	0	; select bank0
 13578  0FD0  00D7               	movwf	?_vfpfcnvrt
 13579  0FD1  3000               	movlw	0
 13580  0FD2  00D8               	movwf	?_vfpfcnvrt+1
 13581  0FD3  0008               	return
 13582  0FD4                     l4857:	
 13583                           
 13584                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
 13585  0FD4  0859               	movf	vfpfcnvrt@fmt,w
 13586  0FD5  0086               	movwf	6
 13587  0FD6  0187               	clrf	7
 13588  0FD7  3001               	movlw	1
 13589  0FD8  0781               	addwf	1,f
 13590  0FD9  3141               	addfsr 1,1
 13591  0FDA  1803               	skipnc
 13592  0FDB  0A81               	incf	1,f
 13593  0FDC  2B19               	goto	l4691
 13594  0FDD                     l4863:	
 13595                           
 13596                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
 13597  0FDD  0859               	movf	vfpfcnvrt@fmt,w
 13598  0FDE  0086               	movwf	6
 13599  0FDF  0187               	clrf	7
 13600  0FE0  3F40               	moviw [0]fsr1
 13601  0FE1  00DB               	movwf	??_vfpfcnvrt
 13602  0FE2  3F41               	moviw [1]fsr1
 13603  0FE3  00DC               	movwf	??_vfpfcnvrt+1
 13604  0FE4  085B               	movf	??_vfpfcnvrt,w
 13605  0FE5  0084               	movwf	4
 13606  0FE6  085C               	movf	??_vfpfcnvrt+1,w
 13607  0FE7  0085               	movwf	5
 13608  0FE8  0800               	movf	0,w	;code access
 13609  0FE9  00DD               	movwf	??_vfpfcnvrt+2
 13610  0FEA  01DE               	clrf	??_vfpfcnvrt+3
 13611  0FEB  085D               	movf	??_vfpfcnvrt+2,w
 13612  0FEC  00F1               	movwf	fputc@c
 13613  0FED  085E               	movf	??_vfpfcnvrt+3,w
 13614  0FEE  00F2               	movwf	fputc@c+1
 13615  0FEF  0858               	movf	vfpfcnvrt@fp+1,w
 13616  0FF0  00F4               	movwf	fputc@fp+1
 13617  0FF1  0857               	movf	vfpfcnvrt@fp,w
 13618  0FF2  00F3               	movwf	fputc@fp
 13619  0FF3  3191  212D  3188   	fcall	_fputc
 13620                           
 13621                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
 13622  0FF6  0020               	movlb	0	; select bank0
 13623  0FF7  0859               	movf	vfpfcnvrt@fmt,w
 13624  0FF8  0086               	movwf	6
 13625  0FF9  0187               	clrf	7
 13626  0FFA  3001               	movlw	1
 13627  0FFB  0781               	addwf	1,f
 13628  0FFC  3141               	addfsr 1,1
 13629  0FFD  1803               	skipnc
 13630  0FFE  0A81               	incf	1,f
 13631  0FFF  2FCE               	goto	l4853
 13632  1000                     __end_of_vfpfcnvrt:	


Data Sizes:
    Strings     310
    Constant    90
    Data        7
    BSS         60
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     80      80
    BANK1            80     58      75
    BANK2            80      0      49
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           65      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    vsnprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK1[1]), 

    vsnprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_3(CODE[43]), 

    vsnprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_103(CODE[3]), STR_99(CODE[3]), STR_94(CODE[3]), STR_90(CODE[3]), 
		 -> STR_85(CODE[4]), STR_81(CODE[4]), STR_76(CODE[3]), STR_71(CODE[3]), 
		 -> STR_66(CODE[4]), STR_61(CODE[3]), STR_56(CODE[3]), STR_51(CODE[4]), 
		 -> STR_46(CODE[3]), STR_41(CODE[3]), STR_36(CODE[4]), STR_31(CODE[3]), 
		 -> STR_27(CODE[3]), STR_22(CODE[3]), STR_18(CODE[3]), STR_13(CODE[4]), 
		 -> STR_9(CODE[4]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_103(CODE[3]), STR_99(CODE[3]), STR_94(CODE[3]), STR_90(CODE[3]), 
		 -> STR_85(CODE[4]), STR_81(CODE[4]), STR_76(CODE[3]), STR_71(CODE[3]), 
		 -> STR_66(CODE[4]), STR_61(CODE[3]), STR_56(CODE[3]), STR_51(CODE[4]), 
		 -> STR_46(CODE[3]), STR_41(CODE[3]), STR_36(CODE[4]), STR_31(CODE[3]), 
		 -> STR_27(CODE[3]), STR_22(CODE[3]), STR_18(CODE[3]), STR_13(CODE[4]), 
		 -> STR_9(CODE[4]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_3(CODE[43]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_3(CODE[43]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), dbuf(BANK2[32]), 

    snprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_3(CODE[43]), 

    snprintf@s	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    S1327_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 127
		 -> messageBuffer(BIGRAM[127]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_3(CODE[43]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 43
		 -> STR_3(CODE[43]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 43
		 -> STR_3(CODE[43]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    vfpfcnvrt@vp	PTR void  size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    stoa@cp	PTR unsigned char  size(1) Largest target is 7
		 -> ?_snprintf(BANK1[2]), stoa@nuls(BANK0[7]), 

    otoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    ctoa@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 6
		 -> vsnprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    EUSART_Write_Text@text	PTR unsigned char  size(2) Largest target is 127
		 -> STR_6(CODE[45]), STR_5(CODE[42]), STR_4(CODE[45]), messageBuffer(BIGRAM[127]), 
		 -> STR_2(CODE[46]), STR_1(CODE[40]), 


Critical Paths under _main in COMMON

    _main->_EUSART_Initialize
    _vfpfcnvrt->_stoa
    _vfpfcnvrt->_strncmp
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _abs->___aomod
    _pad->_fputs
    _fputs->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _beginAFEcommunication->_I2C_writeRegister
    _beginAFEcommunication->_readRegister
    _readRegister->_read_I2C_data
    _readRegister->_send_I2C_controlByte
    _I2C_writeRegister->_send_I2C_controlByte
    _RGB_AWAIT_AFE_CONN->_RGB_color
    _EUSART_Write_Text->_EUSART_Write
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_statemachine
    _statemachine->_snprintf
    _snprintf->_vsnprintf
    _vsnprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _utoa->___lodiv
    _utoa->___lomod
    _utoa->_pad
    _otoa->_pad
    _dtoa->___aodiv
    _dtoa->___aomod
    _dtoa->_pad
    _abs->___aomod
    _ctoa->_pad
    _pad->_fputs
    _EUSART_Initialize->___aldiv

Critical Paths under _myIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_statemachine
    _statemachine->_snprintf
    _snprintf->_vsnprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _myIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _myIsr in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _myIsr in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _myIsr in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _myIsr in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _myIsr in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _myIsr in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _myIsr in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _myIsr in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _myIsr in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _myIsr in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _myIsr in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   62119
                                             57 BANK1      1     1      0
                  _EUSART_Initialize
                          _initClock
                          _init_GPIO
                           _init_I2C
                           _init_RGB
                          _init_TMR1
                       _statemachine
 ---------------------------------------------------------------------------------
 (1) _statemachine                                         3     3      0   61283
                                             79 BANK0      1     1      0
                                             55 BANK1      2     2      0
                  _EUSART_Write_Text
                 _RGB_AWAIT_AFE_CONN
                          _RGB_color
              _beginAFEcommunication
                           _init_AFE
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            14     4     10   55714
                                             78 BANK0      1     1      0
                                             42 BANK1     13     3     10
                          _vsnprintf
 ---------------------------------------------------------------------------------
 (3) _vsnprintf                                           19    12      7   55157
                                             76 BANK0      2     2      0
                                             25 BANK1     17    10      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             9     4      5   54120
                                             67 BANK0      9     4      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           46    42      4   53345
                                             55 BANK0     12     8      4
                                              0 BANK1     25    25      0
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _otoa
                               _stoa
                            _strncmp
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (6) _xtoa                                                39    28     11    8379
                                             16 BANK0     39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              8     6      2     512
                                              7 COMMON     4     2      2
                                              0 BANK0      4     4      0
                            _islower
 ---------------------------------------------------------------------------------
 (8) _islower                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     191
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              8     6      2     191
                                              1 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (6) _utoa                                                25    15     10    7240
                                             16 BANK0     25    15     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (7) ___lomod                                             18     2     16     412
                                              1 COMMON     2     2      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___lodiv                                             26    10     16     421
                                              1 COMMON    10    10      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6    5995
                                              1 COMMON    11     5      6
 ---------------------------------------------------------------------------------
 (6) _stoa                                                21    18      3    2613
                                             10 COMMON     2     2      0
                                              0 BANK0     19    16      3
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _otoa                                                34    24     10    6512
                                             16 BANK0     34    24     10
                                _pad
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                31    21     10    8094
                                             16 BANK0     31    21     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     183
                                              4 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             19     3     16     613
                                              1 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             27    11     16     625
                                              1 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (6) _ctoa                                                 8     5      3    5624
                                             16 BANK0      6     3      3
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 10     5      5    5364
                                              6 BANK0     10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     210
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     6      2    1969
                                             10 COMMON     2     0      2
                                              0 BANK0      6     6      0
                              _fputc
 ---------------------------------------------------------------------------------
 (9) _fputc                                                9     5      4    1577
                                              1 COMMON     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (10) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1599
                                              7 COMMON     2     0      2
                                              0 BANK0     13    13      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     259
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     371
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     316
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _init_AFE                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _beginAFEcommunication                               15    13      2    4052
                                              0 BANK0     15    13      2
                  _I2C_writeRegister
                       _readRegister
 ---------------------------------------------------------------------------------
 (3) _readRegister                                         6     2      4    1930
                                              5 COMMON     6     2      4
                      _read_I2C_data
                      _send_I2C_NACK
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_NACK                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _read_I2C_data                                        4     2      2       0
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C_writeRegister                                    6     0      6    1986
                                              5 COMMON     6     0      6
               _send_I2C_controlByte
                      _send_I2C_data
                  _send_I2C_startBit
                   _send_I2C_stopBit
 ---------------------------------------------------------------------------------
 (4) _send_I2C_stopBit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_startBit                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _send_I2C_data                                        2     0      2     301
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _send_I2C_controlByte                                 4     0      4     782
                                              1 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _RGB_AWAIT_AFE_CONN                                   1     1      0     391
                                              3 COMMON     1     1      0
                          _RGB_color
 ---------------------------------------------------------------------------------
 (2) _RGB_color                                            2     0      2     391
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write_Text                                    5     3      2     701
                                              2 COMMON     5     3      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      31
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_TMR1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_RGB                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_I2C                                             1     1      0       0
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_GPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initClock                                            0     0      0       0
                        _internal_16
 ---------------------------------------------------------------------------------
 (2) _internal_16                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Initialize                                   18    14      4     836
                                             10 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              1 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _myIsr                                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     ___aldiv
   _initClock
     _internal_16
   _init_GPIO
   _init_I2C
   _init_RGB
   _init_TMR1
   _statemachine
     _EUSART_Write_Text
       _EUSART_Write
     _RGB_AWAIT_AFE_CONN
       _RGB_color
     _RGB_color
     _beginAFEcommunication
       _I2C_writeRegister
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
       _readRegister
         _read_I2C_data
         _send_I2C_NACK
         _send_I2C_controlByte
         _send_I2C_data
         _send_I2C_startBit
         _send_I2C_stopBit
     _init_AFE
     _snprintf
       _vsnprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _fputc
               _putch
             _isdigit
             _otoa
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _stoa
               _fputc
                 _putch
               _strlen
             _strncmp
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _toupper
                 _islower

 _myIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3A      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      31       9       61.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      D9      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      D9      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              41      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Dec 19 22:47:19 2019

           __end_of_send_I2C_data 1DD4                       __CFG_CP$OFF 0000               ___wmul@multiplicand 0073  
                             l202 1DAB                               l123 1382                               l300 1F22  
                             l301 1F27                               l302 1F3C                               l243 1E12  
                             l237 1DD0                               l261 1DBE                               l255 1DB6  
                             l503 15C1                               l336 157A                               l440 10A0  
                             l512 161B                               l520 1726                               l249 1DE3  
                             l273 1DD9                               l443 10C0                               l460 03BA  
                             l524 1741                               l461 03CE                               l455 0398  
                             l535 0201                               l464 0464                               l456 039F  
                             l560 031F                               l713 1276                               l481 069A  
                             l298 1F1D                               l539 021C                               l571 0088  
                             l492 0755                               l572 008B                               l485 06B5  
                             l573 008E                               l486 074A                               l574 0091  
                             l648 1EB3                               l576 00C4                               l761 170D  
                             l569 007C                               l748 0681                               l881 07EF  
                             l891 11D9                               _abs 1E4C                    RGB_color@color 0071  
                             _pad 108A                      __CFG_BORV$LO 0000                               wreg 0009  
                    __CFG_IESO$ON 0000                      _statemachine 12E7                      __CFG_LVP$OFF 0000  
                            l1123 13EC                              ?_abs 0074                              l4001 1096  
                            l4011 10A2                              l4005 109E                              l4015 10CC  
                            l4103 166D                              l4121 16E0                              l4115 16A1  
                            l4123 16EC                              l4107 1694                              l4203 03B2  
                            l4117 16B0                              l4213 03FB                              l4301 159A  
                            l5023 1E93                              l4047 1EAD                              l4071 05F5  
                            l4223 03D6                              l4231 0470                              l4081 060C  
                            l4065 05CA                              l4241 0483                              l4209 03C9  
                            l4321 15F0                              l4137 079B                              l5033 12E8  
                            l5211 1F31                              l4091 0654                              l4083 061B  
                            l4235 0478                              l4315 15D2                              l4147 07E3  
                            l4139 07AA                              l4163 11CD                              l4173 1014  
                            l4181 1FDC                              l4093 0660                              l4069 05F1  
                            l4245 0490                              l4333 161F                              l4501 10F0  
                            l4157 118E                              l5205 1377                              l4183 1FE5  
                            l4263 06FC                              l4255 06AD                              l4319 15E3  
                            l4159 119D                              l4415 02AC                              l4423 02EE  
                            l5207 00B2                              l5063 1348                              l5209 13C5  
                            l4273 06D7                              l4337 1630                              l4329 15F3  
                            l4521 007E                              l4339 163D                              l4507 111C  
                            l4355 1784                              l4611 054C                              l4531 0094  
                            l4461 13B4                              l4365 17E5                              l4349 1739  
                            l4541 00CA                              l5077 136E                              ?_pad 0026  
                            l3751 12D0                              l4463 13B9                              l4455 13A4  
                            l4447 1388                              l4367 1760                              l4375 17EA  
                            l4439 033D                              l4391 022C                              l4631 08A1  
                            l4623 0850                              l4607 051E                              l5095 1FC2  
                            l3737 1297                              l3729 1287                              l4465 13CD  
                            l4289 076E                              l4385 0214                              l4721 0AFD  
                            l4553 00F8                              l4537 0099                              l3755 12DE  
                            l3747 12C5                              l3739 12A5                              l4395 0244  
                            l4643 0917                              l4635 08CE                              l4619 0831  
                            l4555 0108                              l4563 013B                              l4469 13F0  
                            l4805 0E0D                              l4741 0BD2                              l4709 0AE1  
                            l4653 0976                              l4557 0111                              l4901 0808  
                            l3767 14B9                              l4911 1F2C                              l4479 141F  
                            l4399 025E                              l4823 0EBD                              l4751 0C08  
                            l4663 09D6                              l4575 017C                              l4903 0828  
                            l4833 0F1C                              l4809 0E3B                              l4761 0C66  
                            l4673 0A2E                              l4577 018C                              l4585 01BF  
                            l3963 1135                              l4499 1115                              l4819 0E9E  
                            l4771 0CC6                              l4691 0B19                              l4683 0A8D  
                            l4595 04A6                              l4579 0195                              l3965 1139  
                            l3981 1F85                              l4853 0FCE                              l4837 0F49  
                            l4781 0D1E                              l4847 0FAC                              l4791 0D7D  
                            l4695 0B1D                              l4599 04D3                              l4863 0FDD  
                            l3969 1160                              l4857 0FD4                              l4697 0AC4  
                            l4961 120F                              l3987 1E39                              l4795 0DAB  
                            l4963 1217                              l4955 11FB                              l3989 1E45  
                            l4973 1255                              l4975 1259                              l4977 1260  
                            l4987 1F4F                              l4997 14D1                              STR_1 20DF  
                            STR_2 2002                              STR_3 208A                              STR_4 2030  
                            STR_5 20B5                              STR_6 205D                              STR_7 2163  
                            STR_9 2163                              _BRGH 0CF2                              _CREN 0CEC  
                            u5000 036E                              u5010 036F                              u4305 142E  
                            u5105 03EA                              u4235 129A                              u4315 1445  
                            u5115 03F6                              u4255 12A6                              u4335 147B  
                            u5055 03AA                              u5215 06EB                              u4265 12BA  
                            u4345 1492                              u5225 06F7                              u4610 1E2D  
                            u4275 12C6                              u4515 10AC                              u5315 15EE  
                            u6300 1F45                              u4620 1E2E                              u5260 158A  
                            u4540 1E72                              u5500 0296                              u4445 115E  
                            u5085 046E                              u5325 15FD                              u5405 177F  
                            u6310 1F46                              u4710 05FC                              u4550 1E73  
                            u4470 1E89                              u4535 1E55                              u5175 06A5  
                            u6320 1F54                              u4560 1EF6                              u4480 1E8A  
                            u5185 072E                              u5345 163B                              u6330 1F55  
                            u4570 1EF7                              u5195 0753                              u5435 020C  
                            u5620 1404                              u4580 1F6F                              u5460 0275  
                            u4645 1EB4                              u5365 1731                              u5525 02D2  
                            u5630 1405                              u4590 1F70                              u5470 0276  
                            u4655 1EB9                              u5295 15BA                              u5535 02F8  
                            u5455 0258                              u6407 1FC9                              u6345 14E7  
                            u4745 0641                              u6417 1313                              u5490 0295  
                            u5810 01B1                              _SCS0 04C8                              u4915 07D0  
                            u5395 1773                              u5555 030E                              u6427 134F  
                            _SCS1 04C9                              u5820 01B2                              u6437 1E09  
                            u6365 154D                              u4845 16CE                              u5565 031A  
                            u6285 124C                              u4880 078B                              u5760 012D  
                            u5770 012E                              u4955 11BB                              _TMR1 0016  
                            _SPEN 0CEF                              _TXEN 0CF5                              _SYNC 0CF4  
                    __CFG_WRT$OFF 0000                              abs@a 0074                              _dbuf 012A  
                            _atoi 1383                              _ctoa 1FCF                              _main 1FA7  
                            _dtoa 0353                              _prec 00E0                              _otoa 0693  
                            _nout 00DC                              pad@i 002C                              pad@p 0029  
                            fsr0h 0005                              fsr1h 0007                              indf0 0000  
                            fsr0l 0004                              indf1 0001                              fsr1l 0006  
                            pad@w 002E                              _stoa 1580                              btemp 007E  
                            _utoa 171F                              _xtoa 01FA                              start 001E  
        __end_of_send_I2C_stopBit 1DC2                             ??_abs 0076                             ??_pad 002B  
            _send_I2C_controlByte 1DDD                     ?_EUSART_Write 0070                   __end_of___aldiv 12E7  
                 __end_of___aodiv 0693                             ?_atoi 0077                             ?_ctoa 0030  
                           ?_main 0070                             ?_dtoa 0030                   __end_of___aomod 171F  
   I2C_writeRegister@slaveAddress 0075                             STR_11 2167                             STR_13 2167  
                           STR_22 2168                             STR_31 2181                             STR_41 2170  
                           STR_25 217E                     __CFG_WDTE$OFF 0000                             STR_18 2164  
                           STR_34 216F                             STR_27 217E                             STR_51 216B  
                           STR_36 216F                             STR_44 2187                             STR_61 2184  
                           STR_29 2181                             STR_46 2187                             STR_71 2174  
                           STR_56 216C                             STR_64 2173                             STR_81 2177  
                           STR_49 216B                             STR_66 2173                             STR_90 2178  
                           STR_74 218A                             STR_59 2184                             STR_83 215F  
                           STR_76 218A                             STR_85 215F                             STR_94 2160  
                           STR_79 2177                             STR_97 218D                             ?_otoa 0030  
                           STR_99 218D                             ?_stoa 0020                             ?_utoa 0030  
                 __end_of___lodiv 0800                             ?_xtoa 0030                   __end_of___lomod 11EA  
                           _IRCF0 04CB                             _IRCF1 04CC                             _IRCF2 04CD  
                           _IRCF3 04CE            __size_of_read_I2C_data 0010                             i1l105 001C  
                    vfpfcnvrt@fmt 0059                      vfpfcnvrt@llu 00B1                             _SPBRG 019B  
              __size_of_RGB_color 0021                    __CFG_FCMEN$OFF 0000                             _flags 00E2  
                           _errno 00DA                             _fputc 112D                   __end_of_isalpha 1EFE  
                           _fputs 1F81                             _myIsr 0004                   __end_of_isdigit 1E35  
                           atoi@n 002B                             pad@fp 0026                             atoi@s 0077  
                           _width 00DE                             ctoa@c 0032                             _putch 0003  
                           ctoa@w 0034                             dtoa@d 0032                             dtoa@i 004D  
                           dtoa@n 0045                             dtoa@p 003F                             dtoa@s 0043  
                           dtoa@w 0041                   __end_of_islower 1E91                   __end_of_isspace 101C  
                  __CFG_BOREN$OFF 0000                   __end_of_isupper 1E7A                             otoa@d 0032  
                           otoa@i 0050                             otoa@n 0048                             otoa@p 0042  
                           otoa@t 0044                             otoa@w 0046                             stoa@i 002A  
                           stoa@l 0031                             stoa@p 002F                             stoa@s 0022  
                           stoa@w 002C                             utoa@d 0032                             utoa@i 0047  
                           utoa@n 003F                             utoa@p 003B                             utoa@w 003D  
                           status 0003                             wtemp0 007E                             xtoa@c 0055  
                           xtoa@d 0032                             xtoa@i 0053                             xtoa@n 004B  
                           xtoa@p 0047                             xtoa@w 0049                             xtoa@x 003A  
               _SCD_delay_setting 2157                   __end_of_strncmp 112D                   __end_of_toupper 1F81  
                ___lodiv@dividend 0028                      ?_internal_16 0070                      _toupper$1394 0079  
                  __CFG_MCLRE$OFF 0000                   __initialization 0020                      __end_of_atoi 1424  
                    __end_of_ctoa 2000                      __end_of_main 1FCF                      __end_of_dtoa 04A6  
                    __end_of_otoa 0784                      __end_of_stoa 1643                      __end_of_utoa 1800  
                    __end_of_xtoa 0353          __end_of_UV_delay_setting 2157            beginAFEcommunication@i 002D  
           ?_send_I2C_controlByte 0071                    ??_EUSART_Write 0071                    __CFG_LPBOR$OFF 0000  
               _ATmega328_address 2000                            ??_atoi 0020                            ??_ctoa 0033  
                          ??_main 00D9                            ??_dtoa 003A                            ??_otoa 003A  
                          ??_stoa 007A                            ??_utoa 003A                            ??_xtoa 003B  
                  __CFG_PLLEN$OFF 0000                  ___lodiv@quotient 0072                     ?_readRegister 0075  
                          ?_fputc 0071                            STR_101 217B                            ?_fputs 007A  
                          STR_103 217B                            ?_myIsr 0070                    __CFG_ZCDDIS$ON 0000  
                          ?_putch 0070     __end_of_OCD_threshold_setting 2127                            _RC1REG 0199  
       __end_of_SCD_delay_setting 215F                     vfpfcnvrt@done 00A1                            _TX1REG 019A  
                          _SPLLEN 04CF                            _SSPADD 0212                            _TRISC6 0476  
                          _TRISC7 0477                            _SSPBUF 0211                            u468lld 05C8  
                          u479lld 166B                     _read_I2C_data 1E0E                    __CFG_PWRTE$OFF 0000  
               __end_of_RGB_color 1F3D                      vfprintf@cfmt 006A                         ??___aldiv 0079  
                       ??___aodiv 0071                         ??___aomod 0071                            ___wmul 1EAB  
                  __CFG_STVREN$ON 0000                         ??___lodiv 0071                  __end_of_init_I2C 1E0E  
                       ??___lomod 0071                  __end_of_init_AFE 0003                  __end_of_init_RGB 1DA3  
       __end_of_ATmega328_address 2002             _beginAFEcommunication 14CC                            pad@buf 0028  
                          ctoa@fp 0030                            dtoa@fp 0030                            _strlen 1E35  
                          fputc@c 0071                            fputs@c 0022                            fputs@i 0023  
                          fputs@s 0025                         ??_isalpha 0073                         ??_isdigit 0073  
                       ??_islower 0073                         ??_isspace 0073                            otoa@fp 0030  
                  ??_readRegister 0079                         ??_isupper 0073                            stoa@cp 002E  
                          stoa@fp 0020                            putch@c 0070                  __end_of_vfprintf 0831  
                          utoa@fp 0030                  __end_of_snprintf 1EE1                            xtoa@fp 0030  
                       ??_strncmp 0077                         ??_toupper 0020           __end_of__initialization 0054  
                  ?_read_I2C_data 0071                    __pcstackCOMMON 0070            ??_send_I2C_controlByte 0075  
                    __pidataBANK2 1DA3                     __end_of_fputc 1181                     __end_of_fputs 1FA7  
                   __end_of_myIsr 001E                      _cellVoltages 0120                     __end_of_putch 0004  
              _RGB_AWAIT_AFE_CONN 1F3D               ?_RGB_AWAIT_AFE_CONN 0070                           ??_fputc 0075  
                         ??_fputs 0020                           ??_myIsr 0070                           ??_putch 0071  
                      __pbssBANK1 00DA                        __pbssBANK2 0120              __end_of_EUSART_Write 1DB2  
              __size_of_init_GPIO 0038                __size_of_initClock 0003                __size_of_init_TMR1 000B  
             statemachine@success 006F                        __pmaintext 1FA7              ??_RGB_AWAIT_AFE_CONN 0073  
            __size_of_internal_16 0009                 ?_send_I2C_stopBit 0070                           ?___wmul 0071  
                 __CFG_PPS1WAY$ON 0000                        __pintentry 0004            ?_beginAFEcommunication 0020  
              ??_send_I2C_stopBit 0071                           ?_strlen 0071                __size_of_vfpfcnvrt 0FA8  
                         _PPSLOCK 0E0F            __size_of_send_I2C_NACK 0009                  ___lomod@dividend 0028  
                 ??_read_I2C_data 0073            __size_of_send_I2C_data 0009                         ?_init_I2C 0070  
                       ?_init_AFE 0070                         ?_init_RGB 0070          readRegister@recievedData 0079  
              __size_of_vsnprintf 007B              __end_of_readRegister 1052                           ___aldiv 1265  
                         _adcGain 00E6                           ___aodiv 05A0                           ___aomod 1643  
                 __size_of___wmul 001B                           ___lodiv 0784                           ___lomod 1181  
                       ?_vfprintf 0063                         ?_snprintf 00CA                     _messageBuffer 2771  
                         __ptext1 12E7                           __ptext2 1EC6                           __ptext3 11EA  
                         __ptext4 0800                           __ptext5 0058                           __ptext6 01FA  
                         __ptext7 1F5F                           __ptext8 1E7A                           __ptext9 1E63  
               __end_of_init_GPIO 108A                 __end_of_initClock 1D9E                 __end_of_init_TMR1 1DF2  
                 __size_of_strlen 0017                         _T1CONbits 0018                      __size_of_abs 0017  
                    __size_of_pad 0051                           _isalpha 1EE1                           _isdigit 1E1E  
                ___aldiv@dividend 0075                           _islower 1E7A                           _isspace 1000  
                         _isupper 1E63                           atoi@neg 0024                           clrloop0 1DF3  
                         _strncmp 10DB                           _toupper 1F5F              end_of_initialization 0054  
                      ??_init_I2C 0071                        ??_init_AFE 0071                        ??_init_RGB 0071  
                         fputc@fp 0073                           fputs@fp 007A                 _EUSART_Initialize 1424  
              ?_EUSART_Initialize 0026                 __end_of_vfpfcnvrt 1000                     _send_I2C_NACK 1DD4  
                ___aldiv@quotient 0022        send_I2C_controlByte@RW_bit 0073                           psplit$0 2C005D  
                         psplit$1 5D005E                     _send_I2C_data 1DCB  
                       _RGB_color 1F1C                        ??_vfprintf 0068                EUSART_Initialize@x 007A  
                      ??_snprintf 006E                           strlen@a 0073                           strlen@s 0071  
             ??_EUSART_Initialize 002A                  __CFG_FOSC$INTOSC 0000                         _TRISAbits 008C  
                       _TRISBbits 008D                         _TRISCbits 008E                         _TRISEbits 0090  
           __size_of_EUSART_Write 0008                 __end_of_vsnprintf 1265     __end_of_SCD_threshold_setting 2147  
                       _RXPPSbits 0E24                 _I2C_writeRegister 1EFE         __end_of_EUSART_Initialize 14CC  
           _OCD_threshold_setting 2107                ?_I2C_writeRegister 0075  beginAFEcommunication@commSuccess 002B  
                  ?_send_I2C_NACK 0070          readRegister@slaveAddress 0075                    ?_send_I2C_data 0071  
             ??_I2C_writeRegister 007B                        ?_RGB_color 0071                       vfpfcnvrt@ap 005A  
                     vfpfcnvrt@cp 00A0                       vfpfcnvrt@fp 0057                       vfpfcnvrt@ll 00A7  
                  __end_of___wmul 1EC6                       vfpfcnvrt@vp 00AF                      _EUSART_Write 1DAA  
     I2C_writeRegister@regAddress 0077                    __end_of_strlen 1E4C               start_initialization 0020  
                 ___lodiv@divisor 0020                   ___lodiv@counter 007A                 pnum$text5_split_1 005D  
               pnum$text5_split_2 005E                     ?_statemachine 0070                       __end_of_abs 1E63  
                     __end_of_pad 10DB         __end_of_I2C_writeRegister 1F1C                 _EUSART_Write_Text 1E91  
           __size_of_readRegister 0036                ?_EUSART_Write_Text 0072           ??_beginAFEcommunication 0022  
                     vfprintf@fmt 0065                          ??___wmul 0075                       __pdataBANK2 014A  
             ??_EUSART_Write_Text 0074     __size_of_send_I2C_controlByte 000A                          ??_strlen 0073  
                    vsnprintf@cnt 00C2                      vsnprintf@fmt 00BD                       __pbssBIGRAM 2771  
                       _adcOffset 00E4                       __pbssCOMMON 007C                    ??_statemachine 00D7  
                       ___latbits 0003  send_I2C_controlByte@BlockAddress 0071                        myIsr@count 00E8  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                  ___aodiv@dividend 0028  
       __size_of_send_I2C_stopBit 0008                       snprintf@fmt 00CE                      _readRegister 101C  
       __end_of_EUSART_Write_Text 1EAB        __size_of_EUSART_Initialize 00A8                     ??_internal_16 0071  
                       _atoi$1287 0026                         _atoi$1288 002A                         _atoi$1289 0028  
                _OV_delay_setting 2147                 __size_of_init_I2C 0010             I2C_writeRegister@data 0079  
                 ??_send_I2C_NACK 0071                 __size_of_init_AFE 0001                 __size_of_init_RGB 0005  
               _send_I2C_startBit 1DB2                   ??_send_I2C_data 0073       __size_of_RGB_AWAIT_AFE_CONN 0022  
                        ?___aldiv 0071                          ?___aodiv 0020                ?_send_I2C_startBit 0070  
                        ?___aomod 0020                  ___aodiv@quotient 0074                          ?___lodiv 0020  
                        ?___lomod 0020                       ??_RGB_color 0073         EUSART_Initialize@baudrate 0026  
               __size_of_vfprintf 0031               ??_send_I2C_startBit 0071                 __size_of_snprintf 001B  
                 ___lomod@divisor 0020                   ___lomod@counter 0072                          ?_isalpha 0071  
                        ?_isdigit 0071                          ?_islower 0071                          ?_isspace 0071  
                       _init_GPIO 1052                          ?_isupper 0071                         _initClock 1D9B  
                       _init_TMR1 1DE7                         _currState 00EA        __size_of_I2C_writeRegister 001E  
                  __size_of_fputc 0054                    __size_of_fputs 0026                    __size_of_myIsr 001A  
                        ?_strncmp 0071                          ?_toupper 0077                    __size_of_putch 0001  
                 ___aldiv@divisor 0071             __end_of_read_I2C_data 1E1E                   ___aldiv@counter 0020  
                  ___wmul@product 0075                          _LATAbits 010C                          _LATEbits 0110  
       __end_of_send_I2C_startBit 1DBA                         clear_ram0 1DF2                         _tmr1_flag 00E9  
                        _PIE1bits 0091                          _PIR1bits 0011               __end_of_internal_16 1DCB  
                       _vfpfcnvrt 0058                 ___wmul@multiplier 0071                        ?_init_GPIO 0070  
                      ?_initClock 0070                        ?_init_TMR1 0070                      _isspace$1314 0075  
           send_I2C_data@databyte 0071                        vfpfcnvrt@c 00B0        __size_of_EUSART_Write_Text 001A  
                       _vsnprintf 11EA                 _OCD_delay_setting 2127              __end_of_statemachine 1383  
                      vfprintf@ap 0067                        vfprintf@fp 0063                  __size_of___aldiv 0082  
                __size_of___aodiv 00F3                  __size_of___aomod 00DC                       vsnprintf@ap 00BF  
          readRegister@regAddress 0077                  __size_of___lodiv 007C                  __size_of___lomod 0069  
                      ?_vfpfcnvrt 0057                        snprintf@ap 00D6                   ___aodiv@divisor 0020  
                 ___aodiv@counter 0072                        _ANSELBbits 018D                        _ANSELCbits 018E  
                __size_of_isalpha 001D                  __size_of_isdigit 0017                          _dtoa$836 003D  
                _send_I2C_stopBit 1DBA                  __size_of_islower 0017                  __size_of_isspace 001C  
                        __ptext10 1EE1                          __ptext11 171F                          __ptext20 05A0  
                        __ptext12 1181                          __ptext21 1FCF                          __ptext13 0784  
                        __ptext30 1EAB                          __ptext22 108A                          __ptext14 10DB  
                        __ptext31 0002                          __ptext23 1E35                          __ptext15 1580  
                        __ptext40 1DDD                          __ptext32 14CC                          __ptext24 1F81  
                        __ptext16 0693                          __ptext41 1F3D                          __ptext33 101C  
                        __ptext25 112D                          __ptext17 0353                          __ptext50 1DC2  
                        __ptext42 1F1C                          __ptext34 1DD4                          __ptext26 0003  
                        __ptext18 1E4C                          __ptext51 1424                          __ptext43 1E91  
                        __ptext35 1E0E                          __ptext27 1383                          __ptext19 1643  
                        __ptext52 1265                          __ptext44 1DAA                          __ptext36 1EFE  
                        __ptext28 1000                          __ptext45 1DE7                          __ptext37 1DBA  
                        __ptext29 1E1E                          __ptext46 1D9E                          __ptext38 1DB2  
                        __ptext47 1DFE                          __ptext39 1DCB                          __ptext48 1052  
                        __ptext49 1D9B                  __size_of_isupper 0017         __end_of_OCD_delay_setting 2137  
                __size_of_strncmp 0052                  __size_of_toupper 0022                        ?_vsnprintf 00B9  
                        _init_I2C 1DFE                          _init_AFE 0002                          _init_RGB 1D9E  
                   __size_of_atoi 00A1                     __size_of_ctoa 0031                     __size_of_main 0028  
                   __size_of_dtoa 0153                     _SSPDATPPSbits 0E21                         pnum$text5 002C  
                   __size_of_otoa 00F1             _SCD_threshold_setting 2137                     __size_of_stoa 00C3  
                   __size_of_utoa 00E1        __size_of_send_I2C_startBit 0008                     __size_of_xtoa 0159  
                     _internal_16 1DC2                        _RB2PPSbits 0E9A                        _RC1STAbits 019D  
                       stoa@F1152 014A                        _RC4PPSbits 0EA4    __size_of_beginAFEcommunication 00B4  
                   _SSPCLKPPSbits 0E20     __end_of_beginAFEcommunication 1580                          int$flags 007E  
                      _RC5PPSbits 0EA5                          _xtoa$872 0043                          _xtoa$873 0045  
                        _vfprintf 0800                          _snprintf 1EC6                  ___aomod@dividend 0028  
        __end_of_OV_delay_setting 214F                        _INTCONbits 000B                       ??_init_GPIO 0071  
                     ??_initClock 0071                       ??_init_TMR1 0071                    __pstringtext10 208A  
                  __pstringtext11 20B5                    __pstringtext20 217B                    __pstringtext12 20DF  
                  __pstringtext21 217E                    __pstringtext13 215F                    __pstringtext22 2181  
                  __pstringtext14 2163                    __pstringtext23 2184                    __pstringtext15 2167  
                  __pstringtext24 2187                    __pstringtext16 216B                    __pstringtext25 218A  
                  __pstringtext17 216F                    __pstringtext26 218D                    __pstringtext18 2173  
                  __pstringtext27 0000                    __pstringtext19 2177                          isalpha@c 0071  
                        isdigit@c 0071                        vsnprintf@f 00C4                        vsnprintf@n 00BB  
                      vsnprintf@s 00B9                  _UV_delay_setting 214F                         snprintf@n 00CC  
                       snprintf@s 00CA      __end_of_send_I2C_controlByte 1DE7                          intlevel1 0000  
                        islower@c 0071                          isspace@c 0071                 __CFG_CLKOUTEN$OFF 0000  
                     _PPSLOCKbits 0E0F                          isupper@c 0071                         strncmp@_l 0071  
                       strncmp@_r 0073                   ___aomod@divisor 0020                       ??_vfpfcnvrt 005B  
                        stoa@nuls 0023                   ___aomod@counter 0072                     _vfpfcnvrt$887 00A3  
                   _vfpfcnvrt$888 00A5                     __pstringtext1 2107                     __pstringtext2 2127  
                   __pstringtext3 2137                     __pstringtext4 2147                     __pstringtext5 214F  
                   __pstringtext6 2157                     __pstringtext7 2000                     __pstringtext8 2030  
                   __pstringtext9 205D                    _vsnprintf$1431 00C0                          strncmp@l 0078  
                        strncmp@n 0075                          strncmp@r 007A                          toupper@c 0077  
           EUSART_Write_Text@text 0072                      ___aldiv@sign 0021                       _SSPCON2bits 0216  
              EUSART_Write@txData 0071                      ___aodiv@sign 0073                       ??_vsnprintf 006C  
           __size_of_statemachine 009C                       _toggleColor 007C                        _SSPCONbits 0215  
      __end_of_RGB_AWAIT_AFE_CONN 1F5F                      ___aomod@sign 0073                EUSART_Write_Text@i 0075  
           __end_of_send_I2C_NACK 1DDD  
